"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkweb"] = self["webpackChunkweb"] || []).push([["vendor"],{

/***/ "./node_modules/kendo-ui-core/esm/kendo.actionsheet.js":
/*!*************************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.actionsheet.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* harmony import */ var _kendo_popup_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.popup.js */ \"./node_modules/kendo-ui-core/esm/kendo.popup.js\");\n/* harmony import */ var _kendo_icons_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kendo.icons.js */ \"./node_modules/kendo-ui-core/esm/kendo.icons.js\");\n/* harmony import */ var _kendo_html_button_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./kendo.html.button.js */ \"./node_modules/kendo-ui-core/esm/kendo.html.button.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\n\n\nvar __meta__ = {\n    id: \"actionsheet\",\n    name: \"ActionSheet\",\n    category: \"web\", // suite\n    description: \"The ActionSheet widget displays a set of choices related to a task the user initiates.\",\n    depends: [\"core\", \"popup\", \"icons\", \"html.button\"] // dependencies\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo;\n    var encode = kendo.htmlEncode;\n    var Widget = kendo.ui.Widget;\n    var ui = kendo.ui;\n    var ns = \".kendoActionSheet\";\n    var DOT = \".\";\n    var Popup = ui.Popup;\n    var keys = kendo.keys;\n    var isFunction = kendo.isFunction;\n    var TabKeyTrap = Popup.TabKeyTrap;\n    var DOCUMENT_ELEMENT = $(document.documentElement);\n    var MOUSEDOWN = \"down\";\n    var OPEN = \"open\";\n    var CLOSE = \"close\";\n    var ACTIVATE = \"activate\";\n    var DEACTIVATE = \"deactivate\";\n    var FOCUSABLE = \":kendoFocusable:not([tabindex='-1'])\";\n    var ACTION_SHEET_CONTAINER = \"k-actionsheet-container\";\n    var OVERLAY = \"k-overlay\";\n    var ACTION_SHEET = \"k-actionsheet\";\n    var ACTION_SHEET_ADAPTIVE = \"k-adaptive-actionsheet\";\n    var ACTION_SHEET_BOTTOM = \"k-actionsheet-bottom\";\n    var ACTION_SHEET_FULLSCREEN = \"k-actionsheet-fullscreen\";\n    var ACTIONABLE_BUTTON_SELECTOR = `.k-actionsheet-item:not(.${STATEDISABLED}),.k-actions .k-button[ref-actionsheet-action-button]:not(.${STATEDISABLED})`;\n    var STATEDISABLED = \"k-disabled\";\n    var ARIA_DISABLED = \"aria-disabled\";\n    var DISABLED = \"disabled\";\n    var HIDDEN = \"k-hidden\";\n    var ACTIONSHEET_TITLE_ID = kendo.guid();\n    var extend = $.extend;\n    var template = kendo.template;\n    var CLICK = \"click\";\n    var KEYDOWN = \"keydown\";\n    var hexColor = /^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/;\n    var HEADER_TEMPLATE = (options) =>\n        `<div class=\"k-text-center k-actionsheet-titlebar\" >` +\n            (options.title ?\n                '<div class=\"k-actionsheet-titlebar-group k-hbox\">' +\n                    `<div id=\"${ACTIONSHEET_TITLE_ID}\" class=\"k-actionsheet-title\">` +\n                        `<div class=\"k-text-center\">${options.title}</div>` +\n                        (options.subtitle ? `<div class=\"k-actionsheet-subtitle k-text-center\">${options.subtitle || \"\"}</div>` : \"\") +\n                    '</div>' +\n                    (options.closeButton ?\n                    '<div class=\"k-actionsheet-actions\">' +\n                        kendo.html.renderButton(`<button ${kendo.attr(\"ref-actionsheet-close-button\")}></button>`, { icon: \"x\", fillMode: \"flat\", size: \"large\" }) +\n                    '</div>'\n                    : \"\") +\n                '</div>'\n            : \"\") +\n        '</div>';\n    var ITEM_TEMPLATE = ({ disabled, icon, text, description }) =>\n                    `<span role=\"button\" tabindex=\"0\" class=\"k-actionsheet-item ${disabled ? STATEDISABLED : \"\"}\">` +\n                        `<span class=\"k-actionsheet-action\">` +\n                            (icon ? `<span class=\"k-icon-wrap\">${icon}</span>` : \"\") +\n                            `<span class=\"k-actionsheet-item-text\">` +\n                                `<span class=\"k-actionsheet-item-title\">${encode(text)}</span>` +\n                                `${description ? '<span class=\"k-actionsheet-item-description\">' + encode(description) + '</span>' : ''}` +\n                            '</span>' +\n                        '</span>' +\n                    '</span>';\n    var SEPARATOR = '<hr class=\"k-hr\" />';\n    var defaultItem = {\n        text: \"\",\n        description: \"\",\n        iconClass: \"\",\n        iconSize: 0,\n        iconColor: \"\",\n        click: $.noop,\n        group: \"top\",\n        disabled: false\n    };\n\n    var defaultActionButton = {\n        text: \"\",\n        icon: \"\",\n        iconClass: \"\",\n        click: $.noop,\n        disabled: false\n    };\n\n    function contains(container, target) {\n        if (!container || !target) {\n            return false;\n        }\n        return container === target || $.contains(container, target);\n    }\n\n    function createIcon(data) {\n        var result;\n        var inlineStyles = {};\n\n        if (!data.iconClass && !data.icon) {\n            return '';\n        }\n\n        result = $(kendo.html.renderIcon({ icon: data.icon, iconClass: data.iconClass + \" k-actionsheet-item-icon\" }));\n\n        if (data.iconColor && hexColor.test(data.iconColor)) {\n            inlineStyles.color = data.iconColor;\n        } else if (data.iconColor) {\n            result.addClass(\"k-text-\" + data.iconColor);\n        }\n\n        if (data.iconSize) {\n            inlineStyles.fontSize = data.iconSize + \"px\";\n        }\n\n        if (Object.keys(inlineStyles).length) {\n            result.css(inlineStyles);\n        }\n\n        return result;\n    }\n\n    var ActionSheet = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n            options = options || {};\n\n            Widget.fn.init.call(that, element, options);\n\n            if (options.appendTo) {\n                that.element.appendTo(options.appendTo);\n            }\n\n            that._hasItems = options.items && options.items.length;\n            that._hasActionButtons = options.actionButtons && options.actionButtons.length;\n            that._mapItems();\n            that._mapActionButtons();\n            that._wrapper();\n            that._popup();\n            that._createContent();\n            that._createHeader();\n            that._createFooter();\n            that._applyAria();\n\n            that._tabKeyTrap = new TabKeyTrap(that.wrapper);\n\n            that.downEvent = kendo.applyEventMap(MOUSEDOWN, kendo.guid());\n            that.clickEvent = kendo.applyEventMap(CLICK, kendo.guid());\n            that._mousedownProxy = that._mousedown.bind(that);\n            that._clickProxy = that._click.bind(that);\n            that.wrapper.on(KEYDOWN + ns, that, that._keydown.bind(that));\n        },\n\n        events: [\n            OPEN,\n            CLOSE,\n            ACTIVATE,\n            DEACTIVATE\n        ],\n\n        options: {\n            name: \"ActionSheet\",\n            title: \"\",\n            items: [],\n            popup: null,\n            fullscreen: false,\n            footerTemplate: null,\n            headerTemplate: null,\n            contentTemplate: null,\n            actionButtons: [],\n            closeButton: false,\n            adaptive: false,\n            focusOnActivate: true\n        },\n\n        _mapItems: function() {\n            var that = this;\n\n            if (!that._hasItems) {\n                return;\n            }\n\n            that.options.items = that.options.items.map(defaultItemsMapper);\n        },\n\n        _mapActionButtons: function() {\n            var that = this;\n\n            if (!that._hasActionButtons) {\n                return;\n            }\n\n            that.options.actionButtons = that.options.actionButtons.map(defaultActionButtonsMapper);\n        },\n\n        _wrapper: function() {\n            var that = this;\n            var element = that.element;\n            var wrapper;\n\n            var positionClass = that.options.fullscreen == true ? ACTION_SHEET_FULLSCREEN : ACTION_SHEET_BOTTOM;\n\n            element.addClass(ACTION_SHEET + \" \" + positionClass + (that.options.adaptive ? \" \" + ACTION_SHEET_ADAPTIVE : \" k-actionsheet-jq\"));\n            that.wrapper = wrapper = element.wrap(\"<div class='\" + ACTION_SHEET_CONTAINER + \" \" + HIDDEN + \"'></div>\").parent();\n            wrapper.prepend($('<div></div>').addClass(OVERLAY));\n        },\n\n        _applyAria: function() {\n            var that = this;\n            var element = that.element;\n            var actionsheetTitleId = that.wrapper.find(\".k-actionsheet-title\").attr(\"id\");\n\n            element.attr({\n                role: \"dialog\",\n                \"aria-modal\": true,\n                \"aria-labelledby\": that.options.title ? actionsheetTitleId : null\n            });\n        },\n\n        _popup: function() {\n            var that = this;\n            var options = that.options;\n\n            var popupAnimation = !options.adaptive ? false :\n                {\n                    open: {\n                        effects: \"slideIn:up\",\n                        transition: true,\n                        duration: 200\n                    }\n                };\n\n            options.open = null;\n            options.close = null;\n            options.activate = null;\n            options.deactivate = null;\n\n            that.popup = new Popup(that.element, extend(options.popup,\n                options,\n                {\n                    name: \"Popup\",\n                    isRtl: kendo.support.isRtl(options.anchor),\n                    omitOriginOffsets: true,\n                    appendTo: that.wrapper,\n                    modal: true,\n                    animation: popupAnimation,\n                    position: \"top center\",\n                    anchor: options.anchor || that.wrapper\n                }));\n\n            if (options.focusOnActivate) {\n                that.popup.bind(ACTIVATE, that._openHandler.bind(that));\n            }\n\n            that.popup.bind(ACTIVATE, (ev) => {\n                that.trigger(ACTIVATE, ev);\n            });\n\n            that.popup.bind(DEACTIVATE, (ev) => {\n                that.wrapper.addClass(HIDDEN);\n                DOCUMENT_ELEMENT.off(that.downEvent, that._mousedownProxy);\n                DOCUMENT_ELEMENT.off(that.clickEvent, that._clickProxy);\n                that.trigger(DEACTIVATE, ev);\n            });\n\n            that.popup.bind(OPEN, (ev) => {\n                that.trigger(OPEN, ev);\n            });\n\n            that.popup.bind(CLOSE, (ev) => {\n                var closeButtonPressed = that._closeButtonPressed;\n                that._closeButtonPressed = false;\n                that.trigger(CLOSE, extend({}, ev, {\n                    closeButton: closeButtonPressed\n                }));\n            });\n        },\n\n        _createHeader: function() {\n            var that = this;\n            var options = that.options;\n\n            if (!options.title && !options.headerTemplate) {\n                return;\n            }\n\n            that.element.prepend(template(options.headerTemplate || HEADER_TEMPLATE)(options));\n        },\n\n        _items: function() {\n            var that = this;\n\n            if (!that._hasItems) {\n                return;\n            }\n\n            var groupedItems = that.options.items.reduce((itemsByGroup, currentItem) => {\n                const group = currentItem[\"group\"] || \"top\";\n                itemsByGroup[group] = itemsByGroup[group] || [];\n                itemsByGroup[group].push(currentItem);\n                return itemsByGroup;\n            }, new Map());\n\n            var topItems = groupedItems[\"top\"];\n            var bottomItems = groupedItems[\"bottom\"];\n\n            that._createItems(topItems);\n\n            if (topItems && topItems.length && bottomItems && bottomItems.length) {\n                that._content.append(SEPARATOR);\n            }\n\n            that._createItems(bottomItems);\n        },\n\n        _createContent: function() {\n            var that = this;\n            var options = that.options;\n            that.element.wrapInner($(\"<div class='k-actionsheet-content'></div>\"));\n            var contentContainer = that._content = that.element.find(\".k-actionsheet-content\");\n\n            if (that._hasItems) {\n                contentContainer.empty();\n                that._items();\n                return;\n            }\n\n            if (options.contentTemplate || options.hideOverflowContent) {\n                contentContainer.addClass(\"!k-overflow-hidden\");\n            }\n            if (options.contentTemplate) {\n                contentContainer.html(template(options.contentTemplate)(options));\n            }\n        },\n\n        _createItems: function(items) {\n            var that = this;\n            var idx;\n            var item;\n            var itemTemplate;\n            var itemElement;\n            var contentContainer = that._content;\n            var itemsContainer = $(\"<div class='k-list-ul' role='group'></div>\");\n            var icon;\n\n            if (!items || !items.length) {\n                return;\n            }\n\n            contentContainer.append(itemsContainer);\n            itemTemplate = template(ITEM_TEMPLATE);\n\n            for (idx = 0; idx < items.length; idx++) {\n                item = items[idx];\n                icon = createIcon(item);\n                itemElement = $(itemTemplate(extend({}, item, { icon: icon && icon.prop('outerHTML') })));\n                itemsContainer.append(itemElement);\n\n                if (item.click) {\n                    itemElement.data(\"action\", item.click);\n                }\n            }\n        },\n\n        _createActionButtons: function() {\n            var that = this;\n            var options = that.options;\n            var actionButtons = options.actionButtons;\n            var actionsContainer = that._footer;\n            var actionButtonElement;\n\n            for (var i = 0; i < actionButtons.length; i++) {\n                var action = actionButtons[i];\n                var enable = action.disabled !== true;\n                actionButtonElement = $(kendo.html.renderButton(`<button ref-actionsheet-action-button>${action.text || \"\"}</button>`, $.extend({ size: \"large\" }, action)));\n                actionsContainer.append(actionButtonElement);\n                actionButtonElement.toggleClass(STATEDISABLED, !enable);\n                actionButtonElement.attr(DISABLED, !enable);\n\n                if (enable) {\n                    actionButtonElement.removeAttr(ARIA_DISABLED);\n                } else {\n                    actionButtonElement.attr(ARIA_DISABLED, !enable);\n                }\n\n                if (action.click) {\n                    actionButtonElement.data(\"action\", action.click);\n                }\n            }\n        },\n\n        _createFooter: function() {\n            var that = this;\n            var options = that.options;\n            var actionsContainer;\n\n            if (!that._hasActionButtons && !options.footerTemplate) {\n                return;\n            }\n\n            actionsContainer = that._footer = $(\"<div class='k-actionsheet-footer'></div>\");\n            actionsContainer.insertAfter(that._content);\n\n            if (that._hasActionButtons) {\n                actionsContainer.addClass(\"k-actions k-actions-stretched k-actions-horizontal\");\n                that._createActionButtons();\n                return;\n            }\n\n            if (options.footerTemplate) {\n                that._footer.append(template(options.footerTemplate)(options));\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n            that.close();\n            Widget.fn.destroy.call(that);\n            that._content = null;\n            that._footer = null;\n            that._header = null;\n            that.element.off(ns);\n            that.wrapper.off(ns);\n            that.popup.destroy();\n        },\n\n        open: function(options) {\n            var that = this;\n\n            that.altTarget = options && options.altTarget;\n\n            that.wrapper.removeClass(HIDDEN);\n            that._elementHeight = that._elementHeight || that.element.outerHeight();\n\n            if (that.options.adaptive) {\n                that.wrapper.width(\"100%\");\n            }\n\n            that.popup.open(\"auto\", 0);\n            that.popup.wrapper.find(\">.k-child-animation-container\").css({ bottom: 0, width: \"100%\" });\n\n            DOCUMENT_ELEMENT.off(that.downEvent, that._mousedownProxy)\n                .on(that.downEvent, that._mousedownProxy);\n\n            DOCUMENT_ELEMENT.off(that.clickEvent, that._clickProxy)\n                .on(that.clickEvent, that._clickProxy);\n\n            that._tabKeyTrap.trap();\n        },\n\n        visible: function() {\n            return this.popup.visible();\n        },\n\n        toggle: function() {\n            !this.visible() ? this.open() : this.close();\n        },\n\n        fullscreen: function(isFullScreen) {\n            var that = this;\n\n            that.element.toggleClass(ACTION_SHEET_FULLSCREEN, isFullScreen === true);\n            that.element.toggleClass(ACTION_SHEET_BOTTOM, isFullScreen !== true);\n            that.element.closest(\".k-child-animation-container\").css({ height: isFullScreen ? \"100%\" : \"auto\" });\n        },\n\n        close: function() {\n            var that = this;\n\n            that.popup.close();\n        },\n\n        position: $.noop,\n\n        _focusFirstFocusableElement: function() {\n            var that = this;\n            var focusableElements = that.element.find(FOCUSABLE);\n            var firstFocusableElement = focusableElements.first();\n\n            if (firstFocusableElement.length) {\n                firstFocusableElement.trigger(\"focus\");\n            }\n        },\n\n        _focusLastFocusableElement: function() {\n            var that = this;\n            var focusableElements = that.element.find(FOCUSABLE);\n            var lastFocusableElement = focusableElements.last();\n\n            if (lastFocusableElement.length) {\n                lastFocusableElement.trigger(\"focus\");\n            }\n        },\n\n        _openHandler: function() {\n            var that = this;\n            if (that._hasItems) {\n                var firstItem = that._content.find(\".k-actionsheet-item\")[0];\n                if (firstItem) {\n                    firstItem.focus();\n                }\n            } else {\n                that._focusFirstFocusableElement();\n            }\n        },\n\n        _isActionableButton: function(target) {\n            return $(target).closest(ACTIONABLE_BUTTON_SELECTOR).length > 0;\n        },\n\n        _triggerAction: function(e) {\n            var that = this;\n            var action = $(e.target).closest(ACTIONABLE_BUTTON_SELECTOR).data(\"action\");\n            if (isFunction(action)) {\n                action(e);\n            }\n\n            if (!e.isDefaultPrevented()) {\n                that.close();\n            }\n        },\n\n        _keydown: function(e) {\n            var that = this;\n            var keys = kendo.keys;\n            var keyCode = e.keyCode;\n            var target = $(e.target);\n\n            if (keyCode == keys.ESC) {\n                e.stopPropagation();\n                that.close();\n            } else if (that._isActionableButton(target) && isButtonKeyTrigger(e)) {\n                that._triggerAction(e);\n            } else if (e.keyCode === kendo.keys.TAB) {\n                var allFocusables = this.wrapper.find(FOCUSABLE);\n                var firstFocusable = allFocusables.first();\n                var lastFocusable = allFocusables.last();\n                if (e.shiftKey) {\n                    if (document.activeElement === firstFocusable[0]) {\n                        lastFocusable.trigger(\"focus\");\n                        e.preventDefault();\n                    }\n                } else {\n                    if (document.activeElement === lastFocusable[0]) {\n                        firstFocusable.trigger(\"focus\");\n                        e.preventDefault();\n                    }\n                }\n            }\n        },\n\n        _click: function(e) {\n            var that = this;\n            var target = kendo.eventTarget(e);\n\n            if (that._isActionableButton(target)) {\n                that._triggerAction(e);\n            }\n        },\n\n        _mousedown: function(e) {\n            var that = this;\n            var container = that.element[0];\n            var target = kendo.eventTarget(e);\n\n            if (that.altTarget && that.altTarget.is($(target))) {\n                return;\n            }\n\n            if (!contains(container, target) || $(target).closest(`[${kendo.attr(\"ref-actionsheet-close-button\")}]`, $(container).find(\"k-actionsheet-titlebar\")).length > 0) {\n                that._closeButtonPressed = true;\n                that.close();\n            }\n        }\n    });\n\n    function isButtonKeyTrigger(e) {\n        return e.keyCode == keys.ENTER || e.keyCode == keys.SPACEBAR;\n    }\n\n    function defaultItemsMapper(item) {\n        return extend({}, defaultItem, item);\n    }\n\n    function defaultActionButtonsMapper(actionButton) {\n        return extend({}, defaultActionButton, actionButton);\n    }\n\n    ui.plugin(ActionSheet);\n\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.actionsheet.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.autocomplete.js":
/*!**************************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.autocomplete.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_list_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.list.js */ \"./node_modules/kendo-ui-core/esm/kendo.list.js\");\n/* harmony import */ var _kendo_mobile_scroller_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.mobile.scroller.js */ \"./node_modules/kendo-ui-core/esm/kendo.mobile.scroller.js\");\n/* harmony import */ var _kendo_virtuallist_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kendo.virtuallist.js */ \"./node_modules/kendo-ui-core/esm/kendo.virtuallist.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\n\nlet $ = kendo.jQuery;\n\nfunction addInputPrefixSuffixContainers({ widget, wrapper, options, prefixInsertBefore, suffixInsertAfter }) {\n    var prefix = options.prefixOptions,\n        suffix = options.suffixOptions,\n        hasPrefixContent = prefix.template || prefix.icon,\n        hasSuffixContent = suffix.template || suffix.icon,\n        suffixInsertAfter = suffixInsertAfter || prefixInsertBefore,\n        layoutFlow = options.layoutFlow,\n        containerOrientation = layoutFlow ? (layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\") : \"horizontal\",\n        separatorOrientation = layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\",\n        INPUT_SEPARATOR = `<span class=\"k-input-separator k-input-separator-${separatorOrientation}\"></span>`,\n        prefixContainer,\n        suffixContainer;\n\n    if (prefix && hasPrefixContent) {\n        prefixContainer = wrapper.children(\".k-input-prefix\");\n\n        if (!prefixContainer[0]) {\n            prefixContainer = $(`<span class=\"k-input-prefix k-input-prefix-${containerOrientation}\" />`);\n            if (prefixInsertBefore) {\n                prefixContainer.insertBefore(prefixInsertBefore);\n            } else {\n                prefixContainer.prependTo(wrapper);\n            }\n        }\n\n        if (prefix.icon) {\n            prefixContainer.html(kendo.html.renderIcon({ icon: prefix.icon }));\n        }\n\n        if (prefix.template) {\n            prefixContainer.html(kendo.template(prefix.template)({}));\n        }\n\n        if (prefix.separator) {\n            $(INPUT_SEPARATOR).insertAfter(prefixContainer);\n        }\n    }\n\n    if (suffix && hasSuffixContent) {\n        suffixContainer = wrapper.children(\".k-input-suffix\");\n\n        if (!suffixContainer[0]) {\n            suffixContainer = $(`<span class=\"k-input-suffix k-input-suffix-${containerOrientation}\" />`).appendTo(wrapper);\n            if (suffixInsertAfter) {\n                suffixContainer.insertAfter(suffixInsertAfter);\n            } else {\n                suffixContainer.appendTo(wrapper);\n            }\n        }\n\n        if (suffix.icon) {\n            suffixContainer.html(kendo.html.renderIcon({ icon: suffix.icon }));\n        }\n\n        if (suffix.template) {\n            suffixContainer.html(kendo.template(suffix.template)({}));\n        }\n\n        if (suffix.separator) {\n            $(INPUT_SEPARATOR).insertBefore(suffixContainer);\n        }\n    }\n\n    widget._prefixContainer = prefixContainer;\n    widget._suffixContainer = suffixContainer;\n}\n\nvar __meta__ = {\n    id: \"autocomplete\",\n    name: \"AutoComplete\",\n    category: \"web\",\n    description: \"The AutoComplete widget provides suggestions depending on the typed text.It also allows multiple value entries.\",\n    depends: [ \"list\" ],\n    features: [ {\n        id: \"mobile-scroller\",\n        name: \"Mobile scroller\",\n        description: \"Support for kinetic scrolling in mobile device\",\n        depends: [ \"mobile.scroller\" ]\n    }, {\n        id: \"virtualization\",\n        name: \"VirtualList\",\n        description: \"Support for virtualization\",\n        depends: [ \"virtuallist\" ]\n    } ]\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        encode = kendo.htmlEncode,\n        support = kendo.support,\n        caret = kendo.caret,\n        activeElement = kendo._activeElement,\n        placeholderSupported = support.placeholder,\n        ui = kendo.ui,\n        List = ui.List,\n        keys = kendo.keys,\n        DataSource = kendo.data.DataSource,\n        ARIA_DISABLED = \"aria-disabled\",\n        ARIA_READONLY = \"aria-readonly\",\n        CHANGE = \"change\",\n        DISABLED = \"disabled\",\n        READONLY = \"readonly\",\n        FOCUSED = \"k-focus\",\n        SELECTED = \"k-selected\",\n        HIDDENCLASS = \"k-hidden\",\n        STATEDISABLED = \"k-disabled\",\n        AUTOCOMPLETEVALUE = \"off\",\n        HOVER = \"k-hover\",\n        ns = \".kendoAutoComplete\",\n        HOVEREVENTS = \"mouseenter\" + ns + \" mouseleave\" + ns;\n\n    function indexOfWordAtCaret(caretIdx, text, separator) {\n        return separator ? text.substring(0, caretIdx).split(separator).length - 1 : 0;\n    }\n\n    function wordAtCaret(caretIdx, text, separator) {\n        return text.split(separator)[indexOfWordAtCaret(caretIdx, text, separator)];\n    }\n\n    function replaceWordAtCaret(caretIdx, text, word, separator, defaultSeparator) {\n        var words = text.split(separator);\n\n        words.splice(indexOfWordAtCaret(caretIdx, text, separator), 1, word);\n\n        if (separator && words[words.length - 1] !== \"\") {\n            words.push(\"\");\n        }\n\n        return words.join(defaultSeparator);\n    }\n\n    var AutoComplete = List.extend({\n        init: function(element, options) {\n            var that = this, wrapper, disabled;\n\n            that.ns = ns;\n            options = Array.isArray(options) ? { dataSource: options } : options;\n\n            List.fn.init.call(that, element, options);\n\n            element = that.element;\n            options = that.options;\n\n            options.placeholder = options.placeholder || element.attr(\"placeholder\");\n            if (placeholderSupported) {\n                element.attr(\"placeholder\", options.placeholder);\n            }\n\n            that._wrapper();\n            that._loader();\n            that._clearButton();\n\n            that._dataSource();\n            that._ignoreCase();\n\n            element[0].type = \"text\";\n            wrapper = that.wrapper;\n\n            that._popup();\n\n            element\n                .addClass(\"k-input-inner\")\n                .on(\"keydown\" + ns, that._keydown.bind(that))\n                .on(\"keypress\" + ns, that._keypress.bind(that))\n                .on(\"input\" + ns, that._search.bind(that))\n                .on(\"paste\" + ns, that._search.bind(that))\n                .on(\"focus\" + ns, function() {\n                    that._prev = that._accessor();\n                    that._oldText = that._prev;\n                    that._placeholder(false);\n                    wrapper.addClass(FOCUSED);\n                })\n                .on(\"focusout\" + ns, function(ev) {\n                    if (that.filterInput && ev.relatedTarget === that.filterInput[0]) {\n                        return;\n                    }\n\n                    that._change();\n                    that._placeholder();\n                    that.close();\n                    wrapper.removeClass(FOCUSED);\n                })\n                .attr({\n                    autocomplete: AUTOCOMPLETEVALUE,\n                    role: \"combobox\",\n                    \"aria-expanded\": false\n                });\n\n            that._clear.on(\"click\" + ns + \" touchend\" + ns, that._clearValue.bind(that));\n            that._clear.on(\"mousedown\" + ns, that._clearValueMouseDownHandler.bind(that));\n            that._enable();\n\n            that._old = that._accessor();\n\n            that._placeholder();\n\n            that._initList();\n\n            disabled = $(that.element).parents(\"fieldset\").is(':disabled');\n\n            if (disabled) {\n                that.enable(false);\n            }\n\n            that.listView.bind(\"click\", function(e) { e.preventDefault(); });\n\n            that._resetFocusItemHandler = that._resetFocusItem.bind(that);\n\n            addInputPrefixSuffixContainers({ widget: that, wrapper: that.wrapper, options: that.options, prefixInsertBefore: that._inputValuesContainer, suffixInsertAfter: that._loading });\n\n            kendo.notify(that);\n            that._toggleCloseVisibility();\n            that._applyCssClasses();\n\n            if (options.label) {\n                that._label();\n            }\n\n            that._aria();\n        },\n\n        options: {\n            name: \"AutoComplete\",\n            enabled: true,\n            suggest: false,\n            template: \"\",\n            groupTemplate: (data) => encode(data),\n            fixedGroupTemplate: (data) => encode(data),\n            prefixOptions: {\n                separator: true\n            },\n            suffixOptions: {\n                separator: true\n            },\n            dataTextField: \"\",\n            minLength: 1,\n            enforceMinLength: false,\n            delay: 200,\n            height: 200,\n            filter: \"startswith\",\n            ignoreCase: true,\n            highlightFirst: false,\n            separator: null,\n            placeholder: \"\",\n            animation: {},\n            virtual: false,\n            value: null,\n            clearButton: true,\n            autoWidth: false,\n            popup: null,\n            size: \"medium\",\n            fillMode: \"solid\",\n            rounded: \"medium\",\n            label: null,\n        },\n\n        _clearValueMouseDownHandler: function(ev) {\n            var that = this;\n\n            if (ev && ev.currentTarget && ev.currentTarget.classList.contains('k-clear-value')) {\n                that._clearValueTrigger = true;\n            } else {\n                that._clearValueTrigger = false;\n            }\n        },\n\n        _onActionSheetCreate: function() {\n            var that = this;\n\n            if (that.filterInput) {\n                that.filterInput\n                    .on(\"keydown\" + ns, that._keydown.bind(that))\n                    .on(\"keypress\" + ns, that._keypress.bind(that))\n                    .on(\"input\" + ns, that._search.bind(that))\n                    .on(\"paste\" + ns, that._search.bind(that))\n                    .attr({\n                        autocomplete: AUTOCOMPLETEVALUE,\n                        role: \"combobox\",\n                        \"aria-expanded\": false\n                    });\n\n                that.popup.bind(\"activate\", () => {\n                    that.filterInput.val(that.element.val());\n                    that.filterInput.trigger(\"focus\");\n                });\n\n                that.popup.bind(\"deactivate\", () => {\n                    that.element.trigger(\"focus\");\n                });\n            }\n        },\n\n        _onCloseButtonPressed: function() {\n            var that = this;\n\n            if (that.filterInput && activeElement() === that.filterInput[0]) {\n                that.element.val(that.filterInput.val());\n            }\n        },\n\n        _popup: function() {\n            List.fn._popup.call(this);\n            this.popup.element.addClass(\"k-autocomplete-popup\");\n        },\n\n        _dataSource: function() {\n            var that = this;\n\n            if (that.dataSource && that._refreshHandler) {\n                that._unbindDataSource();\n            } else {\n                that._progressHandler = that._showBusy.bind(that);\n                that._errorHandler = that._hideBusy.bind(that);\n            }\n\n            that.dataSource = DataSource.create(that.options.dataSource)\n                .bind(\"progress\", that._progressHandler)\n                .bind(\"error\", that._errorHandler);\n        },\n\n        setDataSource: function(dataSource) {\n            this.options.dataSource = dataSource;\n            this._dataSource();\n\n            this.listView.setDataSource(this.dataSource);\n        },\n\n        events: [\n            \"open\",\n            \"close\",\n            CHANGE,\n            \"select\",\n            \"filtering\",\n            \"dataBinding\",\n            \"dataBound\"\n        ],\n\n        setOptions: function(options) {\n            var listOptions = this._listOptions(options);\n\n            List.fn.setOptions.call(this, options);\n\n            this.listView.setOptions(listOptions);\n            this._accessors();\n            this._aria();\n            this._clearButton();\n        },\n\n        _listOptions: function(options) {\n            var listOptions = List.fn._listOptions.call(this, $.extend(options, {\n                skipUpdateOnBind: true\n            }));\n\n            listOptions.dataValueField = listOptions.dataTextField;\n            listOptions.selectedItemChange = null;\n\n            return listOptions;\n        },\n\n        _editable: function(options) {\n            var that = this,\n                element = that.element,\n                wrapper = that.wrapper.off(ns),\n                readonly = options.readonly,\n                disable = options.disable;\n\n            if (!readonly && !disable) {\n                wrapper\n                    .removeClass(STATEDISABLED)\n                    .on(HOVEREVENTS, that._toggleHover);\n\n                element.prop(DISABLED, false)\n                       .prop(READONLY, false)\n                       .attr(ARIA_DISABLED, false)\n                       .attr(ARIA_READONLY, false);\n            } else {\n                wrapper\n                    .addClass(disable ? STATEDISABLED : \"\")\n                    .removeClass(disable ? \"\" : STATEDISABLED);\n\n                element.attr(DISABLED, disable)\n                       .attr(READONLY, readonly)\n                       .attr(ARIA_DISABLED, disable)\n                       .attr(ARIA_READONLY, readonly);\n            }\n\n            that._toggleCloseVisibility();\n        },\n\n        close: function() {\n            var that = this;\n            var current = that.listView.focus();\n\n            if (current) {\n                current.removeClass(SELECTED);\n            }\n\n            that.popup.close();\n            that._deactivateItem();\n        },\n\n        destroy: function() {\n            var that = this;\n\n            that.element.off(ns);\n            that._clear.off(ns);\n            that.wrapper.off(ns);\n\n            if (that.filterInput) {\n                that.filterInput.off(ns);\n            }\n\n            List.fn.destroy.call(that);\n        },\n\n        refresh: function() {\n            this.listView.refresh();\n        },\n\n        select: function(li) {\n            this._select(li);\n        },\n\n        search: function(word) {\n            var that = this,\n            options = that.options,\n            ignoreCase = options.ignoreCase,\n            separator = that._separator(),\n            length,\n            accentFoldingFiltering = that.dataSource.options.accentFoldingFiltering,\n            element = that.filterInput && activeElement() === that.filterInput[0] ? that.filterInput : that.element;\n\n            word = word || that._accessor();\n\n            clearTimeout(that._typingTimeout);\n\n            if (separator) {\n                word = wordAtCaret(caret(element)[0], word, separator);\n            }\n\n            length = word.length;\n\n            if ((!options.enforceMinLength && !length) || length >= options.minLength) {\n                that._open = true;\n\n                that._mute(function() {\n                    this.listView.value([]);\n                });\n\n                that._filterSource({\n                    value: ignoreCase ? (accentFoldingFiltering ? word.toLocaleLowerCase(accentFoldingFiltering) : word.toLowerCase()) : word,\n                    operator: options.filter,\n                    field: options.dataTextField,\n                    ignoreCase: ignoreCase\n                });\n\n                that.one(\"close\", that._unifySeparators.bind(that));\n            }\n            that._toggleCloseVisibility();\n        },\n\n        suggest: function(word) {\n            var that = this,\n                key = that._last,\n                value = that._accessor(),\n                element = that.element[0],\n                caretIdx = caret(element)[0],\n                separator = that._separator(),\n                words = value.split(separator),\n                wordIndex = indexOfWordAtCaret(caretIdx, value, separator),\n                selectionEnd = caretIdx,\n                idx,\n                accentFoldingFiltering = that.dataSource.options.accentFoldingFiltering;\n\n            if (key == keys.BACKSPACE || key == keys.DELETE) {\n                that._last = undefined$1;\n                return;\n            }\n\n            word = word || \"\";\n\n            if (typeof word !== \"string\") {\n                if (word[0]) {\n                    word = that.dataSource.view()[List.inArray(word[0], that.ul[0])];\n                }\n\n                word = word ? that._text(word) : \"\";\n            }\n\n            if (caretIdx <= 0) {\n                caretIdx = (accentFoldingFiltering ? value.toLocaleLowerCase(accentFoldingFiltering) : value.toLowerCase()).indexOf(accentFoldingFiltering ? word.toLocaleLowerCase(accentFoldingFiltering) : word.toLowerCase()) + 1;\n            }\n\n            idx = value.substring(0, caretIdx).lastIndexOf(separator);\n            idx = idx > -1 ? caretIdx - (idx + separator.length) : caretIdx;\n            value = words[wordIndex].substring(0, idx);\n\n            if (word) {\n                word = word.toString();\n                idx = (accentFoldingFiltering ? word.toLocaleLowerCase(accentFoldingFiltering) : word.toLowerCase()).indexOf(accentFoldingFiltering ? value.toLocaleLowerCase(accentFoldingFiltering) : value.toLowerCase());\n                if (idx > -1) {\n                    word = word.substring(idx + value.length);\n\n                    selectionEnd = caretIdx + word.length;\n\n                    value += word;\n                }\n\n                if (separator && words[words.length - 1] !== \"\") {\n                    words.push(\"\");\n                }\n\n            }\n\n            words[wordIndex] = value;\n\n            that._accessor(words.join(separator || \"\"));\n\n            if (element === activeElement()) {\n                caret(element, caretIdx, selectionEnd);\n            }\n        },\n\n        value: function(value) {\n            if (value !== undefined$1) {\n                this.listView.value(value);\n\n                this._accessor(value);\n                this._old = this._accessor();\n                this._oldText = this._accessor();\n            } else {\n                return this._accessor();\n            }\n            this._toggleCloseVisibility();\n            this._refreshFloatingLabel();\n        },\n\n        _click: function(e) {\n            var item = e.item;\n            var that = this;\n            var element = that.element;\n            var dataItem = that.listView.dataItemByIndex(that.listView.getElementIndex(item));\n\n            e.preventDefault();\n\n            that._active = true;\n\n            if (that.trigger(\"select\", { dataItem: dataItem, item: item })) {\n                that.close();\n                return;\n            }\n            that._oldText = element.val();\n            that._select(item).done(function() {\n                that._blur();\n\n                caret(element, element.val().length);\n            });\n        },\n\n        _clearText: $.noop,\n\n        _highlightFirst: function() {\n            var index = this.options.highlightFirst ? 0 : -1;\n\n            this.listView.focus(index);\n        },\n\n        _resetFocusItem: function() {\n            if (this.options.virtual) {\n                this.listView.scrollTo(0);\n            }\n\n            this._highlightFirst();\n        },\n\n        _listBound: function() {\n            var that = this;\n            var popup = that.popup;\n            var options = that.options;\n            var data = that.dataSource.flatView();\n            var length = data.length;\n            var groupsLength = that.dataSource._group ? that.dataSource._group.length : 0;\n            var isActive = that.element[0] === activeElement() || that.filterInput && that.filterInput[0] === activeElement();\n            var action;\n\n            that._renderFooter();\n            that._renderNoData();\n            that._toggleNoData(!length);\n            that._toggleHeader(!!groupsLength && !!length);\n\n            that._resizePopup();\n\n            popup.position();\n\n            if (length) {\n                if (options.suggest && isActive && that._inputValue()) {\n                    that.suggest(data[0]);\n                }\n\n                that._highlightFirst();\n            }\n\n            if (that._open) {\n                that._open = false;\n                action = that._allowOpening() ? \"open\" : \"close\";\n\n                if (that._typingTimeout && !isActive) {\n                    action = \"close\";\n                }\n\n                if (length) {\n                    that._resetFocusItem();\n\n                    if (options.virtual) {\n                        that.popup\n                            .unbind(\"activate\", that._resetFocusItemHandler)\n                            .one(\"activate\", that._resetFocusItemHandler);\n                    }\n                }\n\n                popup[action]();\n                that._typingTimeout = undefined$1;\n            }\n\n            if (that._touchScroller) {\n                that._touchScroller.reset();\n            }\n\n            that._hideBusy();\n\n            that.trigger(\"dataBound\");\n        },\n\n        _mute: function(callback) {\n            this._muted = true;\n            callback.call(this);\n            this._muted = false;\n        },\n\n        _listChange: function() {\n            var isActive = this._active || this.element[0] === activeElement();\n\n            if (isActive && !this._muted) {\n                this._selectValue(this.listView.selectedDataItems()[0]);\n            }\n        },\n\n        _selectValue: function(dataItem) {\n            var separator = this._separator();\n            var text = \"\";\n\n            if (dataItem) {\n                text = this._text(dataItem);\n            }\n\n            if (text === null) {\n                text = \"\";\n            }\n\n            if (separator) {\n                text = replaceWordAtCaret(caret(this.element)[0], this._accessor(), text, separator, this._defaultSeparator());\n            }\n\n            this._prev = text;\n            this._accessor(text);\n            this._placeholder();\n        },\n\n        _unifySeparators: function() {\n            this._accessor(this.value().split(this._separator()).join(this._defaultSeparator()));\n            return this;\n        },\n\n        _preselect: function(value, text) {\n            this._inputValue(text);\n            this._accessor(value);\n\n            this._old = this.oldText = this._accessor();\n\n            this.listView.setValue(value);\n            this._placeholder();\n        },\n\n        _change: function() {\n            var that = this;\n            var value = that._unifySeparators().value();\n            var trigger = value !== List.unifyType(that._old, typeof value);\n\n            var valueUpdated = trigger && !that._typing;\n            var itemSelected = that._oldText !== value;\n            var clearValueTrigger = that._clearValueTrigger;\n\n            that._old = value;\n            that._oldText = value;\n\n            if (that.filterInput && activeElement() === that.filterInput[0]) {\n                that.element.val(that.filterInput.val());\n            }\n\n            if ((valueUpdated || itemSelected) && !clearValueTrigger) {\n                // trigger the DOM change event so any subscriber gets notified\n                that.element.trigger(CHANGE);\n            }\n\n            if (trigger && !clearValueTrigger) {\n                that.trigger(CHANGE);\n            }\n\n            that.typing = false;\n            that._toggleCloseVisibility();\n        },\n\n        _accessor: function(value) {\n            var that = this,\n                element = that.filterInput && activeElement() === that.filterInput[0] ? that.filterInput[0] : that.element[0];\n\n            if (value !== undefined$1) {\n                element.value = value === null ? \"\" : value;\n                that._placeholder();\n            } else {\n                value = element.value;\n\n                if (element.className.indexOf(\"k-readonly\") > -1) {\n                    if (value === that.options.placeholder) {\n                        return \"\";\n                    } else {\n                        return value;\n                    }\n                }\n\n                return value;\n            }\n        },\n\n        _keydown: function(e) {\n            var that = this;\n            var key = e.keyCode;\n            var listView = that.listView;\n            var visible = that.popup.visible();\n            var current = listView.focus();\n\n            that._last = key;\n\n            if (key === keys.DOWN) {\n                if (visible) {\n                    this._move(current ? \"focusNext\" : \"focusFirst\");\n                } else if (that.value()) {\n                    that._filterSource({\n                        value: that.ignoreCase ? that.value().toLowerCase() : that.value(),\n                        operator: that.options.filter,\n                        field: that.options.dataTextField,\n                        ignoreCase: that.ignoreCase\n                    }).done(function() {\n                        if (that._allowOpening()) {\n                            that._resetFocusItem();\n                            that.popup.open();\n                        }\n                    });\n                }\n                e.preventDefault();\n            } else if (key === keys.ESC ) {\n                if (visible) {\n                    e.preventDefault();\n                    that.close();\n                } else {\n                    that._clearValue();\n                }\n            } else if (e.altKey && key === keys.UP && visible) {\n                e.preventDefault();\n                that.close();\n            } else if (key === keys.UP) {\n                if (visible) {\n                    this._move(current ? \"focusPrev\" : \"focusLast\");\n                }\n                e.preventDefault();\n            } else if (key === keys.HOME) {\n                this._move(\"focusFirst\");\n            } else if (key === keys.END) {\n                this._move(\"focusLast\");\n            } else if (key === keys.ENTER || key === keys.TAB) {\n\n                if (key === keys.ENTER && visible) {\n                    e.preventDefault();\n                }\n\n                if (visible && current) {\n                    var dataItem = listView.dataItemByIndex(listView.getElementIndex(current));\n                    if (that.trigger(\"select\", { dataItem: dataItem, item: current })) {\n                        return;\n                    }\n\n                    this._select(current);\n                }\n\n                this._blur();\n            } else if (that.popup.visible() && (key === keys.PAGEDOWN || key === keys.PAGEUP)) {\n                e.preventDefault();\n\n                var direction = key === keys.PAGEDOWN ? 1 : -1;\n                listView.scrollWith(direction * listView.screenHeight());\n            } else {\n                // In some cases when the popup is opened resize is triggered which will cause it to close\n                // Setting the below flag will prevent this from happening\n                that.popup._hovered = true;\n                that._search();\n            }\n        },\n\n        _keypress: function() {\n            this._oldText = this.element.val();\n            this._typing = true;\n        },\n\n        _move: function(action) {\n            this.listView[action]();\n\n            if (this.options.suggest) {\n                this.suggest(this.listView.focus());\n            }\n        },\n\n        _hideBusy: function() {\n            var that = this;\n            clearTimeout(that._busy);\n            that._loading.addClass(HIDDENCLASS);\n            that.element.attr(\"aria-busy\", false);\n            that._busy = null;\n            that._toggleCloseVisibility();\n        },\n\n        _showBusy: function() {\n            var that = this;\n\n            if (that._busy) {\n                return;\n            }\n\n            that._busy = setTimeout(function() {\n                that.element.attr(\"aria-busy\", true);\n                that._loading.removeClass(HIDDENCLASS);\n                that._hideClear();\n            }, 100);\n        },\n\n        _placeholder: function(show) {\n            if (placeholderSupported) {\n                return;\n            }\n\n            var that = this,\n                element = that.element,\n                placeholder = that.options.placeholder,\n                value;\n\n            if (placeholder) {\n                value = element.val();\n\n                if (show === undefined$1) {\n                    show = !value;\n                }\n\n                if (!show) {\n                    if (value !== placeholder) {\n                        placeholder = value;\n                    } else {\n                        placeholder = \"\";\n                    }\n                }\n\n                if (value === that._old && !show) {\n                    return;\n                }\n\n                element.toggleClass(\"k-readonly\", show)\n                       .val(placeholder);\n\n                if (!placeholder && element[0] === document.activeElement) {\n                    caret(element[0], 0, 0);\n                }\n            }\n        },\n\n        _separator: function() {\n            var separator = this.options.separator;\n            if (separator instanceof Array) {\n               return new RegExp(separator.join(\"|\"), 'gi');\n            }\n            return separator;\n        },\n\n        _defaultSeparator: function() {\n            var separator = this.options.separator;\n            if (separator instanceof Array) {\n                return separator[0];\n            }\n            return separator;\n        },\n\n        _inputValue: function() {\n            return this.element.val();\n        },\n\n        _search: function() {\n            var that = this;\n            clearTimeout(that._typingTimeout);\n\n            that._typingTimeout = setTimeout(function() {\n                if (that._prev !== that._accessor()) {\n                    that._prev = that._accessor();\n                    that.search();\n                }\n            }, that.options.delay);\n        },\n\n        _select: function(candidate) {\n            var that = this;\n            that._active = true;\n\n            return that.listView.select(candidate).done(function() {\n                that._active = false;\n            });\n        },\n\n        _loader: function() {\n            this._loading = $('<span class=\"k-icon k-i-loading k-input-loading-icon ' + HIDDENCLASS + '\"></span>').insertAfter(this.element);\n        },\n\n        _clearButton: function() {\n            List.fn._clearButton.call(this);\n\n            if (this.options.clearButton) {\n                this._clear.insertAfter(this.element);\n            }\n        },\n\n        _toggleHover: function(e) {\n            $(e.currentTarget).toggleClass(HOVER, e.type === \"mouseenter\");\n        },\n\n        _toggleCloseVisibility: function() {\n            var preventShow = this.element.is(\":disabled\") || this.element.is(\"[readonly]\");\n\n            if (this.value() && !preventShow) {\n                this._showClear();\n            } else {\n                this._hideClear();\n            }\n        },\n\n        _wrapper: function() {\n            var that = this,\n                element = that.element,\n                DOMelement = element[0],\n                wrapper;\n\n            wrapper = element.parent();\n\n            if (!wrapper.is(\"span.k-autocomplete\")) {\n                wrapper = element.wrap(\"<span />\").parent();\n            }\n\n            wrapper.attr(\"tabindex\", -1);\n\n            wrapper[0].style.cssText = DOMelement.style.cssText;\n            element.css({\n                width: \"\",\n                height: DOMelement.style.height\n            });\n\n            that._focused = that.element;\n            that.wrapper = wrapper\n                .addClass(\"k-autocomplete k-input\")\n                .addClass(DOMelement.className)\n                .removeClass('input-validation-error');\n        },\n\n        _clearValue: function() {\n            this._clearValueTrigger = false;\n            List.fn._clearValue.call(this);\n            this.element.focus();\n        }\n    });\n\n    ui.plugin(AutoComplete);\n\n    kendo.cssProperties.registerPrefix(\"AutoComplete\", \"k-input-\");\n\n    kendo.cssProperties.registerValues(\"AutoComplete\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.autocomplete.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.badge.js":
/*!*******************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.badge.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* harmony import */ var _kendo_icons_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.icons.js */ \"./node_modules/kendo-ui-core/esm/kendo.icons.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\nvar __meta__ = {\n    id: \"badge\",\n    name: \"Badge\",\n    category: \"web\", // suite\n    description: \"The Badge decorates avatars, navigation menus, or other components in the application when visual notification is needed\",\n    depends: [\"core\", \"icons\"] // dependencies\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo;\n    var Widget = kendo.ui.Widget;\n    var ui = kendo.ui;\n    var HIDDEN = 'k-hidden';\n\n    var iconTemplate = ({ icon }) => kendo.ui.icon($(`<span class='k-badge-icon'></span>`), { icon: icon });\n    var svgIconTemplate = ({ icon }) => `<span class='k-badge-icon k-svg-icon k-icon'>${icon}</span>`;\n\n    var Badge = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that._content();\n\n            that._appearance();\n\n            kendo.notify(that);\n        },\n\n        destroy: function() {\n            var that = this;\n\n            Widget.fn.destroy.call(that);\n        },\n\n        options: {\n            name: 'Badge',\n            cutoutBorder: false,\n            data: {},\n            fillMode: 'solid',\n            icon: '',\n            max: Infinity,\n            position: 'inline',\n            align: '',\n            rounded: 'medium',\n            roundings: {\n                'small': 'sm',\n                'medium': 'md',\n                'large': 'lg',\n                'full': 'full'\n            },\n            sizes: {\n                'small': 'sm',\n                'medium': 'md',\n                'large': 'lg'\n            },\n            size: 'medium',\n            template: null,\n            text: '',\n            themeColor: 'secondary',\n            visible: true,\n            _classNames: []\n        },\n\n        _content: function() {\n            var that = this;\n            var text = that.options.text;\n            var template = that.options.template;\n            var data = that.options.data;\n            var icon = that.options.icon;\n\n            // Order of precedence\n            // 1) template\n            // 2) icon\n            // 3) text\n            // 4) content\n\n            if (template !== null) {\n                that._text = text;\n                that._template = kendo.template(template).bind(that);\n                that.element.html( that._template(data) );\n\n                return;\n            }\n\n            if (icon !== '') {\n                that.icon(icon);\n\n                return;\n            }\n\n            if (text !== '') {\n                that.text(text);\n\n                return;\n            }\n\n            that.text(that.element.html());\n        },\n\n        _appearance: function() {\n            var that = this;\n            that._themeColor = that.options.themeColor;\n            that._shape = that.options.shape;\n            that._sizes = that.options.sizes;\n            that._size = that.options.size;\n            that._fillMode = that.options.fillMode;\n            that._rounded = that.options.rounded;\n            that._roundings = that.options.roundings;\n            that._cutoutBorder = that.options.cutoutBorder;\n            that._align = that.options.align;\n            that._position = that.options.position;\n            that._visible = that.options.visible;\n\n            that._updateClassNames();\n        },\n\n        _updateClassNames: function() {\n            var that = this;\n            var classNames = ['k-badge'];\n            var keepClassNames = that.options._classNames;\n            var themeColor = that._themeColor;\n            var shape = that._shape;\n            var sizes = that._sizes;\n            var size = that._size;\n            var sizeAbbr = sizes[size] === undefined$1 ? size : sizes[size];\n            var fillMode = that._fillMode;\n            var rounded = that._rounded;\n            var roundings = that._roundings;\n            var roundedAbbr = roundings[rounded] === undefined$1 ? rounded : roundings[rounded];\n            var cutoutBorder = that._cutoutBorder;\n            var align = that._align;\n            var position = that._position;\n            var visible = that._visible;\n\n            // Remove all class names\n            that.element.removeClass(function(index, className) {\n                if (className.indexOf('k-') === 0 && keepClassNames.indexOf(className) === -1) {\n                    that.element.removeClass(className);\n                }\n            });\n\n            // Fill\n            if (typeof fillMode === 'string' && fillMode !== '') {\n                classNames.push('k-badge-' + fillMode);\n            }\n\n            // Color\n            if (typeof themeColor === 'string' && themeColor !== '') {\n                classNames.push('k-badge-' + fillMode + '-' + themeColor);\n            }\n\n            // Size\n            if (typeof size === 'string' && size !== '') {\n                classNames.push('k-badge-' + sizeAbbr);\n            }\n\n            // Rounded\n            if (typeof rounded === 'string' && rounded !== '') {\n                classNames.push('k-rounded-' + roundedAbbr);\n            }\n\n            // Shape\n            if (typeof shape === 'string' && shape !== '') {\n                classNames.push('k-badge-' + shape);\n            }\n\n            // Cutout border\n            if (typeof cutoutBorder === 'boolean' && cutoutBorder === true) {\n                classNames.push('k-badge-border-cutout');\n            }\n\n            // Position\n            if (typeof position === 'string' && position !== '') {\n                classNames.push('k-badge-' + position);\n            }\n\n            // Align\n            if (typeof position === 'string' && position !== '' && position !== 'inline' && typeof align === 'string' && align.split(' ').length == 2) {\n                classNames.push('k-' + align.replace(' ', '-'));\n            }\n\n            // Visibility\n            if (visible === false) {\n                classNames.push(HIDDEN);\n            }\n\n            // Apply classnames\n            that.element.addClass(classNames.join(' '));\n        },\n\n        setOptions: function(options) {\n            var that = this;\n\n            that.element.removeClass(function(index, className) {\n                if (className.indexOf('k-') >= 0) {\n                    that.element.removeClass(className);\n                }\n            });\n\n            Widget.fn.setOptions.call(that, options);\n\n            that._content();\n\n            that._appearance();\n        },\n\n        text: function(text) {\n            var that = this;\n            var max = that.options.max;\n\n            // handle badge.text()\n            if (arguments.length === 0 || text === undefined$1) {\n                return that._text;\n            }\n\n            that._text = text;\n\n            // handle badge.text(true|false|null)\n            if (text === true || text === false || text === null) {\n                that.element.html('');\n\n                return;\n            }\n\n            // handle badge.text('string')\n            if (typeof text === 'string') {\n                that.element.html(text);\n\n                return;\n            }\n\n            // handle badge.text(1)\n            if (typeof text === 'number') {\n                if (text > max) {\n                    that.element.html(max + '+');\n                } else {\n                    that.element.html(text);\n                }\n\n                return;\n            }\n\n            // handle other objects\n            if (typeof text === 'object' && 'toString' in text) {\n                that.element.html(text.toString());\n\n                return;\n            }\n\n        },\n\n        icon: function(icon) {\n            var that = this;\n            var iconTemplateFunction;\n\n            // handle badge.icon()\n            if (arguments.length === 0 || icon === undefined$1) {\n                return that._icon;\n            }\n\n            that._icon = icon;\n\n            // Handle badge.icon(<SVG />)\n            if (icon.indexOf('<svg') === 0) {\n                iconTemplateFunction = kendo.template(svgIconTemplate);\n                that.element.html(iconTemplateFunction({ icon: icon }));\n\n                return;\n            }\n\n            // Handle badge.icon(ICON_NAME)\n            iconTemplateFunction = kendo.template(iconTemplate);\n            that.element.html(iconTemplateFunction({ icon: icon }));\n        },\n\n        themeColor: function(color) {\n            var that = this;\n\n            // handle badge.color()\n            if (arguments.length === 0 || color === undefined$1) {\n                return that._themeColor;\n            }\n\n            that._themeColor = color;\n            that._updateClassNames();\n        },\n\n        rounded: function(rounded) {\n            var that = this;\n\n            // handle badge.shape()\n            if (arguments.length === 0 || rounded === undefined$1) {\n                return that._rounded;\n            }\n\n            that._rounded = rounded;\n            that._updateClassNames();\n        },\n\n        hide: function() {\n            var that = this;\n            that._visible = false;\n\n            that._updateClassNames();\n        },\n\n        show: function() {\n            var that = this;\n            that._visible = true;\n\n            that._updateClassNames();\n        }\n    });\n\n    ui.plugin(Badge);\n\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.badge.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.binder.js":
/*!********************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.binder.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* harmony import */ var _kendo_data_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.data.js */ \"./node_modules/kendo-ui-core/esm/kendo.data.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\nvar __meta__ = {\n    id: \"binder\",\n    name: \"MVVM\",\n    category: \"framework\",\n    description: \"Model View ViewModel (MVVM) is a design pattern which helps developers separate the Model (the data) from the View (the UI).\",\n    depends: [ \"core\", \"data\" ]\n};\n\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        encode = kendo.htmlEncode,\n        Observable = kendo.Observable,\n        ObservableObject = kendo.data.ObservableObject,\n        ObservableArray = kendo.data.ObservableArray,\n        toString = {}.toString,\n        binders = {},\n        Class = kendo.Class,\n        VALUE = \"value\",\n        SOURCE = \"source\",\n        EVENTS = \"events\",\n        CHECKED = \"checked\",\n        CSS = \"css\",\n        deleteExpando = true,\n        FUNCTION = \"function\",\n        CHANGE = \"change\";\n\n    (function() {\n        var a = document.createElement(\"a\");\n\n        try {\n            delete a.test;\n        } catch (e) {\n            deleteExpando = false;\n        }\n    })();\n\n    var Binding = Observable.extend( {\n        init: function(parents, path) {\n            var that = this;\n\n            Observable.fn.init.call(that);\n\n            that.source = parents[0];\n            that.parents = parents;\n            that.path = path;\n            that.dependencies = {};\n            that.dependencies[path] = true;\n            that.observable = that.source instanceof Observable;\n\n            that._access = function(e) {\n                that.dependencies[e.field] = true;\n            };\n\n            if (that.observable) {\n                that._change = function(e) {\n                    that.change(e);\n                };\n\n                that.source.bind(CHANGE, that._change);\n            }\n        },\n\n        _parents: function() {\n            var parents = this.parents;\n            var value = this.get();\n\n            if (value && typeof value.parent == \"function\") {\n                var parent = value.parent();\n\n                if ($.inArray(parent, parents) < 0) {\n                    parents = [parent].concat(parents);\n                }\n            }\n\n            return parents;\n        },\n\n        change: function(e) {\n            var dependency,\n                ch,\n                field = e.field,\n                that = this;\n\n            if (that.path === \"this\") {\n                that.trigger(CHANGE, e);\n            } else {\n                for (dependency in that.dependencies) {\n                    if (dependency.indexOf(field) === 0) {\n                       ch = dependency.charAt(field.length);\n\n                       if (!ch || ch === \".\" || ch === \"[\") {\n                            that.trigger(CHANGE, e);\n                            break;\n                       }\n                    }\n                }\n            }\n        },\n\n        start: function(source) {\n            source.bind(\"get\", this._access);\n        },\n\n        stop: function(source) {\n            source.unbind(\"get\", this._access);\n        },\n\n        get: function() {\n\n            var that = this,\n                source = that.source,\n                index = 0,\n                path = that.path,\n                result = source;\n\n            if (!that.observable) {\n                return result;\n            }\n\n            that.start(that.source);\n\n            result = source.get(path);\n\n            // Traverse the observable hierarchy if the binding is not resolved at the current level.\n            while (result === undefined$1 && source) {\n\n                source = that.parents[++index];\n\n                if (source instanceof ObservableObject) {\n                    result = source.get(path);\n                }\n            }\n\n            // second pass try to get the parent from the object hierarchy\n            if (result === undefined$1) {\n                source = that.source; //get the initial source\n\n                while (result === undefined$1 && source) {\n                    source = source.parent();\n\n                    if (source instanceof ObservableObject) {\n                        result = source.get(path);\n                    }\n                }\n            }\n\n            // If the result is a function - invoke it\n            if (typeof result === \"function\") {\n                index = path.lastIndexOf(\".\");\n\n                // If the function is a member of a nested observable object make that nested observable the context (this) of the function\n                if (index > 0) {\n                    source = source.get(path.substring(0, index));\n                }\n\n                // Invoke the function\n                that.start(source);\n\n                if (source !== that.source) {\n                    result = result.call(source, that.source);\n                } else {\n                    result = result.call(source);\n                }\n\n                that.stop(source);\n            }\n\n            // If the binding is resolved by a parent object\n            if (source && source !== that.source) {\n\n                that.currentSource = source; // save parent object\n\n                // Listen for changes in the parent object\n                source.unbind(CHANGE, that._change)\n                      .bind(CHANGE, that._change);\n            }\n\n            that.stop(that.source);\n\n            return result;\n        },\n\n        set: function(value) {\n            var source = this.currentSource || this.source;\n\n            var field = kendo.getter(this.path)(source);\n\n            if (typeof field === \"function\") {\n                if (source !== this.source) {\n                    field.call(source, this.source, value);\n                } else {\n                    field.call(source, value);\n                }\n            } else {\n                source.set(this.path, value);\n            }\n        },\n\n        destroy: function() {\n            if (this.observable) {\n                this.source.unbind(CHANGE, this._change);\n                if (this.currentSource) {\n                    this.currentSource.unbind(CHANGE, this._change);\n                }\n            }\n\n            this.unbind();\n        }\n    });\n\n    var EventBinding = Binding.extend( {\n        get: function() {\n            var source = this.source,\n                path = this.path,\n                index = 0,\n                handler;\n\n            handler = source.get(path);\n\n            while (!handler && source) {\n                source = this.parents[++index];\n\n                if (source instanceof ObservableObject) {\n                    handler = source.get(path);\n                }\n            }\n\n            if (!handler) {\n                return;\n            }\n\n            return handler.bind(source);\n        }\n    });\n\n    var TemplateBinding = Binding.extend( {\n        init: function(source, path, template) {\n            var that = this;\n\n            Binding.fn.init.call(that, source, path);\n\n            that.template = template;\n        },\n\n        render: function(value) {\n            var html;\n\n            this.start(this.source);\n\n            html = kendo.render(this.template, value);\n\n            this.stop(this.source);\n\n            return html;\n        }\n    });\n\n    var Binder = Class.extend({\n        init: function(element, bindings, options) {\n            this.element = element;\n            this.bindings = bindings;\n            this.options = options;\n        },\n\n        bind: function(binding, attribute) {\n            var that = this;\n\n            binding = attribute ? binding[attribute] : binding;\n\n            binding.bind(CHANGE, function(e) {\n                that.refresh(attribute || e);\n            });\n\n            that.refresh(attribute);\n        },\n\n        destroy: function() {\n        }\n    });\n\n    var TypedBinder = Binder.extend({\n        dataType: function() {\n            var dataType = this.element.getAttribute(\"data-\" + kendo.ns + \"type\") || this.element.type || \"text\";\n            return dataType.toLowerCase();\n        },\n\n        parsedValue: function() {\n            return this._parseValue(this.element.value, this.dataType());\n        },\n\n        _parseValue: function(value, dataType) {\n            if (dataType == \"date\") {\n                value = kendo.parseDate(value, \"yyyy-MM-dd\");\n            } else if (dataType == \"datetime-local\") {\n                value = kendo.parseDate(value, [\"yyyy-MM-ddTHH:mm:ss\", \"yyyy-MM-ddTHH:mm\"] );\n            } else if (dataType == \"number\") {\n                value = kendo.parseFloat(value);\n            } else if (dataType == \"boolean\") {\n                value = value.toLowerCase();\n                if (kendo.parseFloat(value) !== null) {\n                    value = Boolean(kendo.parseFloat(value));\n                } else {\n                    value = (value.toLowerCase() === \"true\");\n                }\n            }\n            return value;\n        }\n    });\n\n    binders.attr = Binder.extend({\n        refresh: function(key) {\n            this.element.setAttribute(key, this.bindings.attr[key].get());\n        }\n    });\n\n    binders.css = Binder.extend({\n        init: function(element, bindings, options) {\n            Binder.fn.init.call(this, element, bindings, options);\n            this.classes = {};\n        },\n        refresh: function(className) {\n            var element = $(this.element),\n                binding = this.bindings.css[className],\n                hasClass = this.classes[className] = binding.get();\n            if (hasClass) {\n                element.addClass(className);\n            } else {\n                element.removeClass(className);\n            }\n        }\n    });\n\n    binders.style = Binder.extend({\n        refresh: function(key) {\n            this.element.style[key] = this.bindings.style[key].get() || \"\";\n        }\n    });\n\n    binders.enabled = Binder.extend({\n        refresh: function() {\n            if (this.bindings.enabled.get()) {\n                this.element.removeAttribute(\"disabled\");\n            } else {\n                this.element.setAttribute(\"disabled\", \"disabled\");\n            }\n        }\n    });\n\n    binders.readonly = Binder.extend({\n       refresh: function() {\n            if (this.bindings.readonly.get()) {\n                this.element.setAttribute(\"readonly\", \"readonly\");\n            } else {\n                this.element.removeAttribute(\"readonly\");\n            }\n       }\n    });\n\n    binders.disabled = Binder.extend({\n        refresh: function() {\n            if (this.bindings.disabled.get()) {\n                this.element.setAttribute(\"disabled\", \"disabled\");\n            } else {\n                this.element.removeAttribute(\"disabled\");\n            }\n        }\n    });\n\n    binders.events = Binder.extend({\n        init: function(element, bindings, options) {\n            Binder.fn.init.call(this, element, bindings, options);\n            this.handlers = {};\n        },\n\n        refresh: function(key) {\n            var element = $(this.element),\n                binding = this.bindings.events[key],\n                handler = this.handlers[key];\n\n            if (handler) {\n                element.off(key, handler);\n            }\n\n            handler = this.handlers[key] = binding.get();\n\n            element.on(key, binding.source, handler);\n        },\n\n        destroy: function() {\n            var element = $(this.element),\n                handler;\n\n            for (handler in this.handlers) {\n                element.off(handler, this.handlers[handler]);\n            }\n        }\n    });\n\n    binders.text = Binder.extend({\n        refresh: function() {\n            var text = this.bindings.text.get();\n            var dataFormat = this.element.getAttribute(\"data-\" + kendo.ns + \"format\") || \"\";\n            if (text == null) {\n                text = \"\";\n            }\n\n            $(this.element).text(kendo.toString(text, dataFormat));\n        }\n    });\n\n    binders.visible = Binder.extend({\n        refresh: function() {\n            if (this.bindings.visible.get()) {\n                this.element.style.display = \"\";\n            } else {\n                this.element.style.display = \"none\";\n            }\n        }\n    });\n\n    binders.invisible = Binder.extend({\n        refresh: function() {\n            if (!this.bindings.invisible.get()) {\n                this.element.style.display = \"\";\n            } else {\n                this.element.style.display = \"none\";\n            }\n        }\n  });\n\n    binders.html = Binder.extend({\n        refresh: function() {\n            this.element.innerHTML = this.bindings.html.get();\n        }\n    });\n\n    binders.value = TypedBinder.extend({\n        init: function(element, bindings, options) {\n            TypedBinder.fn.init.call(this, element, bindings, options);\n\n            this._change = this.change.bind(this);\n            this.eventName = options.valueUpdate || CHANGE;\n\n            $(this.element).on(this.eventName, this._change);\n\n            this._initChange = false;\n        },\n\n        change: function() {\n            this._initChange = this.eventName != CHANGE;\n\n            this.bindings[VALUE].set(this.parsedValue());\n\n            this._initChange = false;\n        },\n\n        refresh: function() {\n            if (!this._initChange) {\n                var value = this.bindings[VALUE].get();\n\n                if (value == null) {\n                    value = \"\";\n                }\n\n                var type = this.dataType();\n\n                if (type == \"date\") {\n                    value = kendo.toString(value, \"yyyy-MM-dd\");\n                } else if (type == \"datetime-local\") {\n                    value = kendo.toString(value, \"yyyy-MM-ddTHH:mm:ss\");\n                }\n\n                this.element.value = value;\n            }\n\n            this._initChange = false;\n        },\n\n        destroy: function() {\n            $(this.element).off(this.eventName, this._change);\n        }\n    });\n\n    binders.source = Binder.extend({\n        init: function(element, bindings, options) {\n            Binder.fn.init.call(this, element, bindings, options);\n\n            var source = this.bindings.source.get();\n\n            if (source instanceof kendo.data.DataSource && options.autoBind !== false) {\n                source.fetch();\n            }\n        },\n\n        refresh: function(e) {\n            var that = this,\n                source = that.bindings.source.get();\n\n            if (source instanceof ObservableArray || source instanceof kendo.data.DataSource) {\n                e = e || {};\n\n                if (e.action == \"add\") {\n                    that.add(e.index, e.items);\n                } else if (e.action == \"remove\") {\n                    that.remove(e.index, e.items);\n                } else if (e.action != \"itemchange\") {\n                    that.render();\n                }\n            } else {\n                that.render();\n            }\n        },\n\n        container: function() {\n            var element = this.element;\n\n            if (element.nodeName.toLowerCase() == \"table\") {\n                if (!element.tBodies[0]) {\n                    element.appendChild(document.createElement(\"tbody\"));\n                }\n                element = element.tBodies[0];\n            }\n\n            return element;\n        },\n\n        template: function() {\n            var options = this.options,\n                template = options.template,\n                nodeName = this.container().nodeName.toLowerCase();\n\n            if (!template) {\n                if (nodeName == \"select\") {\n                    if (options.valueField || options.textField) {\n                        template = (data) => {\n                            const valueAttr = kendo.getter(options.valueField || options.textField)(data);\n                            const innerText = kendo.getter(options.textField || options.valueField)(data);\n                            return `<option value=\"${encode(valueAttr)}\">${encode(innerText)}</option>`;\n                        };\n                    } else {\n                        template = (data) => `<option>${encode(data)}</option>`;\n                    }\n                } else if (nodeName == \"tbody\") {\n                    template = (data) => `<tr><td>${encode(data)}</td></tr>`;\n                } else if (nodeName == \"ul\" || nodeName == \"ol\") {\n                    template = (data) => `<li>${encode(data)}</li>`;\n                } else {\n                    template = (data) => `${encode(data)}`;\n                }\n                template = kendo.template(template);\n            }\n\n            return template;\n        },\n\n        add: function(index, items) {\n            var element = this.container(),\n                parents,\n                idx,\n                length,\n                child,\n                clone = element.cloneNode(false),\n                reference = element.children[index];\n\n            $(clone).html(kendo.render(this.template(), items));\n\n            if (clone.children.length) {\n                parents = this.bindings.source._parents();\n\n                for (idx = 0, length = items.length; idx < length; idx++) {\n                    child = clone.children[0];\n                    element.insertBefore(child, reference || null);\n                    bindElement(child, items[idx], this.options.roles, [items[idx]].concat(parents));\n                }\n            }\n        },\n\n        remove: function(index, items) {\n            var idx, element = this.container();\n\n            for (idx = 0; idx < items.length; idx++) {\n                var child = element.children[index];\n                unbindElementTree(child, true);\n                if (child.parentNode == element) {\n                    element.removeChild(child);\n                }\n            }\n        },\n\n        render: function() {\n            var source = this.bindings.source.get(),\n                parents,\n                idx,\n                length,\n                element = this.container(),\n                template = this.template();\n\n            if (source == null) {\n                return;\n            }\n\n            if (source instanceof kendo.data.DataSource) {\n                source = source.view();\n            }\n\n            if (!(source instanceof ObservableArray) && toString.call(source) !== \"[object Array]\") {\n                source = [source];\n            }\n\n            if (this.bindings.template) {\n                unbindElementChildren(element, true);\n\n                $(element).html(this.bindings.template.render(source));\n\n                if (element.children.length) {\n                    parents = this.bindings.source._parents();\n\n                    for (idx = 0, length = source.length; idx < length; idx++) {\n                        bindElement(element.children[idx], source[idx], this.options.roles, [source[idx]].concat(parents));\n                    }\n                }\n            } else {\n                $(element).html(kendo.render(template, source));\n            }\n        }\n    });\n\n    binders.input = {\n        checked: TypedBinder.extend({\n            init: function(element, bindings, options) {\n                TypedBinder.fn.init.call(this, element, bindings, options);\n                this._change = this.change.bind(this);\n\n                $(this.element).change(this._change);\n            },\n\n            change: function() {\n                var element = this.element;\n                var value = this.value();\n\n                if (element.type == \"radio\") {\n                    value = this.parsedValue();\n                    this.bindings[CHECKED].set(value);\n                } else if (element.type == \"checkbox\") {\n                    var source = this.bindings[CHECKED].get();\n                    var index;\n\n                    if (source instanceof ObservableArray) {\n                        value = this.parsedValue();\n                        if (value instanceof Date) {\n                            for (var i = 0; i < source.length; i++) {\n                                if (source[i] instanceof Date && +source[i] === +value) {\n                                    index = i;\n                                    break;\n                                }\n                            }\n                        } else {\n                            index = source.indexOf(value);\n                        }\n                        if (index > -1) {\n                            source.splice(index, 1);\n                        } else {\n                            source.push(value);\n                        }\n                    } else {\n                        this.bindings[CHECKED].set(value);\n                    }\n                }\n            },\n\n            refresh: function() {\n                var value = this.bindings[CHECKED].get(),\n                    source = value,\n                    type = this.dataType(),\n                    element = this.element;\n\n                if (element.type == \"checkbox\") {\n                    if (source instanceof ObservableArray) {\n                        var index = -1;\n                        value = this.parsedValue();\n                        if (value instanceof Date) {\n                            for (var i = 0; i < source.length; i++) {\n                                if (source[i] instanceof Date && +source[i] === +value) {\n                                    index = i;\n                                    break;\n                                }\n                            }\n                        } else {\n                            index = source.indexOf(value);\n                        }\n                        element.checked = (index >= 0);\n                    } else {\n                        element.checked = source;\n                    }\n                } else if (element.type == \"radio\") {\n                    if (type == \"date\") {\n                        value = kendo.toString(value, \"yyyy-MM-dd\");\n                    } else if (type == \"datetime-local\") {\n                        value = kendo.toString(value, \"yyyy-MM-ddTHH:mm:ss\");\n                    }\n\n                    if (value !== null && typeof(value) !== \"undefined\" && element.value === value.toString()) {\n                        element.checked = true;\n                    } else {\n                        element.checked = false;\n                    }\n                }\n            },\n\n            value: function() {\n                var element = this.element,\n                    value = element.value;\n\n                if (element.type == \"checkbox\") {\n                    value = element.checked;\n                }\n\n                return value;\n            },\n            destroy: function() {\n                $(this.element).off(CHANGE, this._change);\n            }\n        })\n    };\n\n    binders.select = {\n        source: binders.source.extend({\n            refresh: function(e) {\n                var that = this,\n                    source = that.bindings.source.get();\n\n                if (source instanceof ObservableArray || source instanceof kendo.data.DataSource) {\n                    e = e || {};\n                    if (e.action == \"add\") {\n                        that.add(e.index, e.items);\n                    } else if (e.action == \"remove\") {\n                        that.remove(e.index, e.items);\n                    } else if (e.action == \"itemchange\" || e.action === undefined$1) {\n                        that.render();\n                        if (that.bindings.value) {\n                            if (that.bindings.value) {\n                                var val = retrievePrimitiveValues(that.bindings.value.get(), $(that.element).data(\"valueField\"));\n                                if (val === null) {\n                                    that.element.selectedIndex = -1;\n                                } else {\n                                    that.element.value = val;\n                                }\n                            }\n                        }\n                    }\n                } else {\n                    that.render();\n                }\n            }\n        }),\n        value: TypedBinder.extend({\n            init: function(target, bindings, options) {\n                TypedBinder.fn.init.call(this, target, bindings, options);\n\n                this._change = this.change.bind(this);\n                $(this.element).change(this._change);\n            },\n\n            parsedValue: function() {\n                var dataType = this.dataType();\n                var values = [];\n                var value, option, idx, length;\n                for (idx = 0, length = this.element.options.length; idx < length; idx++) {\n                    option = this.element.options[idx];\n\n                    if (option.selected) {\n                        value = option.attributes.value;\n\n                        if (value && value.specified) {\n                            value = option.value;\n                        } else {\n                            value = option.text;\n                        }\n\n                        values.push(this._parseValue(value, dataType));\n                    }\n                }\n                return values;\n            },\n\n            change: function() {\n                var values = [],\n                    element = this.element,\n                    source,\n                    field = this.options.valueField || this.options.textField,\n                    valuePrimitive = this.options.valuePrimitive,\n                    option,\n                    valueIndex,\n                    value,\n                    idx,\n                    length;\n\n                for (idx = 0, length = element.options.length; idx < length; idx++) {\n                    option = element.options[idx];\n\n                    if (option.selected) {\n                        value = option.attributes.value;\n\n                        if (value && value.specified) {\n                            value = option.value;\n                        } else {\n                            value = option.text;\n                        }\n\n                        if (field) {\n                            values.push(value);\n                        } else {\n                            values.push(this._parseValue(value, this.dataType()));\n                        }\n\n                    }\n                }\n\n                if (field) {\n                    source = this.bindings.source.get();\n                    if (source instanceof kendo.data.DataSource) {\n                        source = source.view();\n                    }\n\n                    for (valueIndex = 0; valueIndex < values.length; valueIndex++) {\n                        for (idx = 0, length = source.length; idx < length; idx++) {\n                            var sourceValue = source[idx].get(field);\n                            var match = (String(sourceValue) === values[valueIndex]);\n                            if (match) {\n                                values[valueIndex] = source[idx];\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                value = this.bindings[VALUE].get();\n                if (value instanceof ObservableArray) {\n                    value.splice.apply(value, [0, value.length].concat(values));\n                } else if (!valuePrimitive && (value instanceof ObservableObject || value === null || value === undefined$1 || !field)) {\n                    this.bindings[VALUE].set(values[0]);\n                } else {\n                    this.bindings[VALUE].set(values[0].get(field));\n                }\n            },\n            refresh: function() {\n                var optionIndex,\n                    element = this.element,\n                    options = element.options,\n                    value = this.bindings[VALUE].get(),\n                    values = value,\n                    field = this.options.valueField || this.options.textField,\n                    found = false,\n                    type = this.dataType(),\n                    optionValue;\n\n                if (!(values instanceof ObservableArray)) {\n                    values = new ObservableArray([value]);\n                }\n\n                element.selectedIndex = -1;\n\n                for (var valueIndex = 0; valueIndex < values.length; valueIndex++) {\n                    value = values[valueIndex];\n\n\n                    if (field && value instanceof ObservableObject) {\n                        value = value.get(field);\n                    }\n\n                    if (type == \"date\") {\n                        value = kendo.toString(values[valueIndex], \"yyyy-MM-dd\");\n                    } else if (type == \"datetime-local\") {\n                        value = kendo.toString(values[valueIndex], \"yyyy-MM-ddTHH:mm:ss\");\n                    }\n\n                    for (optionIndex = 0; optionIndex < options.length; optionIndex++) {\n                        optionValue = options[optionIndex].value;\n\n                        if (optionValue === \"\" && value !== \"\") {\n                            optionValue = options[optionIndex].text;\n                        }\n\n                        if (value != null && optionValue == value.toString()) {\n                            options[optionIndex].selected = true;\n                            found = true;\n                        }\n                    }\n                }\n            },\n            destroy: function() {\n                $(this.element).off(CHANGE, this._change);\n            }\n        })\n    };\n\n    function dataSourceBinding(bindingName, fieldName, setter) {\n        return Binder.extend({\n            init: function(widget, bindings, options) {\n                var that = this;\n\n                Binder.fn.init.call(that, widget.element[0], bindings, options);\n\n                that.widget = widget;\n                that._dataBinding = that.dataBinding.bind(that);\n                that._dataBound = that.dataBound.bind(that);\n                that._itemChange = that.itemChange.bind(that);\n            },\n\n            itemChange: function(e) {\n                bindElement(e.item[0], e.data, this._ns(e.ns), [e.data].concat(this.bindings[bindingName]._parents()));\n            },\n\n            dataBinding: function(e) {\n                var idx,\n                    length,\n                    widget = this.widget,\n                    items = e.removedItems || widget.items();\n\n                for (idx = 0, length = items.length; idx < length; idx++) {\n                    unbindElementTree(items[idx], false);\n                }\n            },\n\n            _ns: function(ns) {\n                ns = ns || kendo.ui;\n                var all = [ kendo.ui, kendo.dataviz.ui, kendo.mobile.ui ];\n                all.splice($.inArray(ns, all), 1);\n                all.unshift(ns);\n\n                return kendo.rolesFromNamespaces(all);\n            },\n\n            dataBound: function(e) {\n                var idx,\n                    length,\n                    widget = this.widget,\n                    items = e.addedItems || widget.items(),\n                    dataSource = widget[fieldName],\n                    view,\n                    parents,\n                    hds = kendo.data.HierarchicalDataSource;\n\n                if (hds && dataSource instanceof hds) {\n                    // suppress binding of HDS items, because calling view() on root\n                    // will return only root items, and widget.items() returns all items\n                    return;\n                }\n\n                if (items.length) {\n                    view = e.addedDataItems || dataSource.flatView();\n                    parents = this.bindings[bindingName]._parents();\n\n                    for (idx = 0, length = view.length; idx < length; idx++) {\n                        if (items[idx]) {\n                            bindElement(items[idx], view[idx], this._ns(e.ns), [view[idx]].concat(parents));\n                        }\n                    }\n                }\n            },\n\n            refresh: function(e) {\n                var that = this,\n                    source,\n                    widget = that.widget,\n                    select, multiselect, dropdowntree;\n\n                e = e || {};\n\n                if (!e.action) {\n                    that.destroy();\n\n                    widget.bind(\"dataBinding\", that._dataBinding);\n                    widget.bind(\"dataBound\", that._dataBound);\n                    widget.bind(\"itemChange\", that._itemChange);\n\n                    source = that.bindings[bindingName].get();\n\n                    if (widget[fieldName] instanceof kendo.data.DataSource && widget[fieldName] != source) {\n                        if (source instanceof kendo.data.DataSource) {\n                            widget[setter](source);\n                        } else if (source && source._dataSource) {\n                            widget[setter](source._dataSource);\n                        } else {\n                            select = kendo.ui.Select && widget instanceof kendo.ui.Select;\n                            multiselect = kendo.ui.MultiSelect && widget instanceof kendo.ui.MultiSelect;\n                            dropdowntree = kendo.ui.DropDownTree && widget instanceof kendo.ui.DropDownTree;\n\n                            if (!dropdowntree) {\n                                widget[fieldName].data(source);\n                            } else {\n                                widget.treeview[fieldName].data(source);\n                            }\n\n                            if (that.bindings.value && (select || multiselect)) {\n                                widget.value(retrievePrimitiveValues(that.bindings.value.get(), widget.options.dataValueField));\n                            }\n                        }\n                    }\n                }\n            },\n\n            destroy: function() {\n                var widget = this.widget;\n\n                widget.unbind(\"dataBinding\", this._dataBinding);\n                widget.unbind(\"dataBound\", this._dataBound);\n                widget.unbind(\"itemChange\", this._itemChange);\n            }\n        });\n    }\n\n    binders.widget = {\n        events: Binder.extend({\n            init: function(widget, bindings, options) {\n                Binder.fn.init.call(this, widget.element[0], bindings, options);\n                this.widget = widget;\n                this.handlers = {};\n            },\n\n            refresh: function(key) {\n                var binding = this.bindings.events[key],\n                    handler = this.handlers[key];\n\n                if (handler) {\n                    this.widget.unbind(key, handler);\n                }\n\n                handler = binding.get();\n\n                this.handlers[key] = function(e) {\n                    e.data = binding.source;\n\n                    handler(e);\n\n                    if (e.data === binding.source) {\n                        delete e.data;\n                    }\n                };\n\n                this.widget.bind(key, this.handlers[key]);\n            },\n\n            destroy: function() {\n                var handler;\n\n                for (handler in this.handlers) {\n                    this.widget.unbind(handler, this.handlers[handler]);\n                }\n            }\n        }),\n\n        checked: Binder.extend({\n            init: function(widget, bindings, options) {\n                Binder.fn.init.call(this, widget.element[0], bindings, options);\n\n                this.widget = widget;\n                this._change = this.change.bind(this);\n                this.widget.bind(CHANGE, this._change);\n            },\n            change: function() {\n                this.bindings[CHECKED].set(this.value());\n            },\n\n            refresh: function() {\n                var val = this.bindings[CHECKED].get();\n\n                if (this.element.type === \"radio\") {\n                    if (val !== undefined$1) {\n                        this.widget.check(val.toString() === this.value());\n                    } else {\n                        this.widget.check(false);\n                    }\n                } else {\n                    this.widget.check(val === true);\n                }\n            },\n\n            value: function() {\n                var element = this.element,\n                    value = element.value;\n\n                if (value == \"on\" || value == \"off\" || this.element.type == \"checkbox\") {\n                    value = element.checked;\n                }\n\n                return value;\n            },\n\n            destroy: function() {\n                this.widget.unbind(CHANGE, this._change);\n            }\n        }),\n\n        start: Binder.extend({\n            init: function(widget, bindings, options) {\n                Binder.fn.init.call(this, widget.element[0], bindings, options);\n                this._change = this.change.bind(this);\n                this.widget = widget;\n                this.widget.bind(CHANGE, this._change);\n            },\n\n            change: function() {\n                this.bindings.start.set(this.widget.range().start);\n            },\n\n            refresh: function() {\n                var that = this;\n                var start = this.bindings.start.get();\n                var end = that.widget._range ? that.widget._range.end : null;\n                this.widget.range({ start: start, end: end });\n            },\n\n            destroy: function() {\n                this.widget.unbind(CHANGE, this._change);\n            }\n        }),\n\n        end: Binder.extend({\n            init: function(widget, bindings, options) {\n                Binder.fn.init.call(this, widget.element[0], bindings, options);\n                this._change = this.change.bind(this);\n                this.widget = widget;\n                this.widget.bind(CHANGE, this._change);\n            },\n\n            change: function() {\n                this.bindings.end.set(this.widget.range().end);\n            },\n\n            refresh: function() {\n                var that = this;\n                var end = this.bindings.end.get();\n                var start = that.widget._range ? that.widget._range.start : null;\n                this.widget.range({ start: start, end: end });\n            },\n\n            destroy: function() {\n                this.widget.unbind(CHANGE, this._change);\n            }\n        }),\n\n        visible: Binder.extend({\n            init: function(widget, bindings, options) {\n                Binder.fn.init.call(this, widget.element[0], bindings, options);\n\n                this.widget = widget;\n            },\n\n            refresh: function() {\n                var visible = this.bindings.visible.get();\n                this.widget.wrapper[0].style.display = visible ? \"\" : \"none\";\n            }\n        }),\n\n        invisible: Binder.extend({\n            init: function(widget, bindings, options) {\n                Binder.fn.init.call(this, widget.element[0], bindings, options);\n\n                this.widget = widget;\n            },\n\n            refresh: function() {\n                var invisible = this.bindings.invisible.get();\n                this.widget.wrapper[0].style.display = invisible ? \"none\" : \"\";\n            }\n        }),\n\n        floatingLabel: Binder.extend({\n            init: function(widget, bindings, options) {\n                Binder.fn.init.call(this, widget.element[0], bindings, options);\n\n                if (!widget.floatingLabel) {\n                    return;\n                }\n\n                widget.floatingLabel.refresh();\n            }\n        }),\n\n        enabled: Binder.extend({\n            init: function(widget, bindings, options) {\n                Binder.fn.init.call(this, widget.element[0], bindings, options);\n\n                this.widget = widget;\n                this.readonly = this.element.readOnly;\n            },\n\n            refresh: function() {\n                if (this.widget.enable) {\n                    this.widget.enable(this.bindings.enabled.get());\n                }\n                if (this.readonly && this.widget.readonly) {\n                    this.widget.readonly(this.readonly);\n                }\n            }\n        }),\n\n        disabled: Binder.extend({\n            init: function(widget, bindings, options) {\n                Binder.fn.init.call(this, widget.element[0], bindings, options);\n\n                this.widget = widget;\n            },\n\n            refresh: function() {\n                if (this.widget.enable) {\n                    this.widget.enable(!this.bindings.disabled.get());\n                }\n            }\n        }),\n\n        source: dataSourceBinding(\"source\", \"dataSource\", \"setDataSource\"),\n\n        value: Binder.extend({\n            init: function(widget, bindings, options) {\n                Binder.fn.init.call(this, widget.element[0], bindings, options);\n\n                this.widget = widget;\n                this._change = this.change.bind(this);\n                this.widget.first(CHANGE, this._change);\n\n                var value = this.bindings.value.get();\n\n                this._valueIsObservableObject = !options.valuePrimitive && (value == null || value instanceof ObservableObject);\n                this._valueIsObservableArray = value instanceof ObservableArray;\n                this._initChange = false;\n            },\n\n            _source: function() {\n                var source;\n\n                if (this.widget.dataItem) {\n                    source = this.widget.dataItem();\n                    if (source && source instanceof ObservableObject) {\n                        return [source];\n                    }\n                }\n\n                if (this.bindings.source) {\n                    source = this.bindings.source.get();\n                }\n\n                if (!source || source instanceof kendo.data.DataSource) {\n                    source = this.widget.dataSource.flatView();\n                }\n\n                return source;\n            },\n\n            change: function() {\n                var value = this.widget.value(),\n                    field = this.options.dataValueField || this.options.dataTextField,\n                    isArray = toString.call(value) === \"[object Array]\",\n                    isObservableObject = this._valueIsObservableObject,\n                    valueIndex, valueLength, values = [],\n                    sourceItem, sourceValue,\n                    idx, length, source;\n\n                this._initChange = true;\n\n                if (field) {\n\n                    if (value === \"\" && (isObservableObject || this.options.valuePrimitive)) {\n                        value = null;\n                    } else {\n                        source = this._source();\n\n                        if (isArray) {\n                            valueLength = value.length;\n                            values = value.slice(0);\n                        }\n\n                        for (idx = 0, length = source.length; idx < length; idx++) {\n                            sourceItem = source[idx];\n                            sourceValue = sourceItem.get(field);\n\n                            if (isArray) {\n                                for (valueIndex = 0; valueIndex < valueLength; valueIndex++) {\n                                    if (sourceValue == values[valueIndex]) {\n                                        values[valueIndex] = sourceItem;\n                                        break;\n                                    }\n                                }\n                            } else if (sourceValue == value) {\n                                value = isObservableObject ? sourceItem : sourceValue;\n                                break;\n                            }\n                        }\n\n                        if (values[0]) {\n                            if (this._valueIsObservableArray) {\n                                value = values;\n                            } else if (isObservableObject || !field) {\n                                value = values[0];\n                            } else {\n                                value = values[0].get(field);\n                            }\n                        }\n                    }\n                }\n\n                this.bindings.value.set(value);\n                this._initChange = false;\n            },\n\n            refresh: function() {\n                if (!this._initChange) {\n                    var widget = this.widget;\n                    var options = widget.options;\n                    var textField = options.dataTextField;\n                    var valueField = options.dataValueField || textField;\n                    var value = this.bindings.value.get();\n                    var text = options.text || \"\";\n                    var idx = 0, length;\n                    var values = [];\n\n                    if (value === undefined$1) {\n                        value = null;\n                    }\n\n                    if (valueField) {\n                        if (value instanceof ObservableArray) {\n                            for (length = value.length; idx < length; idx++) {\n                                values[idx] = value[idx].get(valueField);\n                            }\n                            value = values;\n                        } else if (value instanceof ObservableObject) {\n                            text = value.get(textField);\n                            value = value.get(valueField);\n                        }\n                    }\n\n                    if (options.autoBind === false && !options.cascadeFrom && widget.listView && !widget.listView.bound()) {\n                        if (textField === valueField && !text) {\n                            text = value;\n                        }\n\n                        if (!text && (value || value === 0) && options.valuePrimitive) {\n                            widget.value(value);\n                        } else {\n                            widget._preselect(value, text);\n                        }\n                    } else {\n                        widget.value(value);\n                    }\n                }\n\n                this._initChange = false;\n            },\n\n            destroy: function() {\n                this.widget.unbind(CHANGE, this._change);\n            }\n        }),\n        dropdowntree: {\n            value: Binder.extend({\n                init: function(widget, bindings, options) {\n                    Binder.fn.init.call(this, widget.element[0], bindings, options);\n\n                    this.widget = widget;\n                    this._change = this.change.bind(this);\n                    this.widget.first(CHANGE, this._change);\n                    this._initChange = false;\n                },\n\n                change: function() {\n                    var that = this,\n                        oldValues = that.bindings[VALUE].get(),\n                        valuePrimitive = that.options.valuePrimitive,\n                        selectedNode = that.widget.treeview.select(),\n                        nonPrimitiveValues = that.widget._isMultipleSelection() ? that.widget._getAllChecked() : (that.widget.treeview.dataItem(selectedNode) || that.widget.value()),\n                        newValues = (valuePrimitive || that.widget.options.autoBind === false) ? that.widget.value() : nonPrimitiveValues;\n\n                    var field = this.options.dataValueField || this.options.dataTextField;\n\n                    newValues = newValues.slice ? newValues.slice(0) : newValues;\n\n                    that._initChange = true;\n\n                    if (oldValues instanceof ObservableArray) {\n                        var remove = [];\n                        var newLength = newValues.length;\n                        var i = 0, j = 0;\n                        var old = oldValues[i];\n                        var same = false;\n                        var removeIndex;\n                        var newValue;\n                        var found;\n\n                        while (old !== undefined$1) {\n                            found = false;\n                            for (j = 0; j < newLength; j++) {\n                                if (valuePrimitive) {\n                                    same = newValues[j] == old;\n                                } else {\n                                    newValue = newValues[j];\n\n                                    newValue = newValue.get ? newValue.get(field) : newValue;\n                                    same = newValue == (old.get ? old.get(field) : old);\n                                }\n\n                                if (same) {\n                                    newValues.splice(j, 1);\n                                    newLength -= 1;\n                                    found = true;\n                                    break;\n                                }\n                            }\n\n                            if (!found) {\n                                remove.push(old);\n                                arraySplice(oldValues, i, 1);\n                                removeIndex = i;\n                            } else {\n                                i += 1;\n                            }\n\n                            old = oldValues[i];\n                        }\n\n                        arraySplice(oldValues, oldValues.length, 0, newValues);\n\n                        if (remove.length) {\n                            oldValues.trigger(\"change\", {\n                                action: \"remove\",\n                                items: remove,\n                                index: removeIndex\n                            });\n                        }\n\n                        if (newValues.length) {\n                            oldValues.trigger(\"change\", {\n                                action: \"add\",\n                                items: newValues,\n                                index: oldValues.length - 1\n                            });\n                        }\n                    } else {\n                        that.bindings[VALUE].set(newValues);\n                    }\n\n                    that._initChange = false;\n                },\n\n                refresh: function() {\n                    if (!this._initChange) {\n                        var options = this.options,\n                            widget = this.widget,\n                            field = options.dataValueField || options.dataTextField,\n                            value = this.bindings.value.get(),\n                            data = value,\n                            idx = 0, length,\n                            values = [],\n                            selectedValue;\n\n                        if (field) {\n                            if (value instanceof ObservableArray) {\n                                for (length = value.length; idx < length; idx++) {\n                                    selectedValue = value[idx];\n                                    values[idx] = selectedValue.get ? selectedValue.get(field) : selectedValue;\n                                }\n                                value = values;\n                            } else if (value instanceof ObservableObject) {\n                                value = value.get(field);\n                            }\n                        }\n                        if (options.autoBind === false && options.valuePrimitive !== true) {\n                            widget._preselect(data, value);\n                        } else {\n                            widget.value(value);\n                        }\n                   }\n                },\n\n                destroy: function() {\n                    this.widget.unbind(CHANGE, this._change);\n                }\n            })\n        },\n        gantt: {\n            dependencies: dataSourceBinding(\"dependencies\", \"dependencies\", \"setDependenciesDataSource\")\n        },\n\n        multiselect: {\n            value: Binder.extend({\n                init: function(widget, bindings, options) {\n                    Binder.fn.init.call(this, widget.element[0], bindings, options);\n\n                    this.widget = widget;\n                    this._change = this.change.bind(this);\n                    this.widget.first(CHANGE, this._change);\n                    this._initChange = false;\n                },\n\n                change: function() {\n                    var that = this,\n                        oldValues = that.bindings[VALUE].get(),\n                        valuePrimitive = that.options.valuePrimitive,\n                        newValues = valuePrimitive ? that.widget.value() : that.widget.dataItems();\n\n                    var field = this.options.dataValueField || this.options.dataTextField;\n\n                    newValues = newValues.slice(0);\n\n                    that._initChange = true;\n\n                    if (oldValues instanceof ObservableArray) {\n                        var remove = [];\n\n                        var newLength = newValues.length;\n\n                        var i = 0, j = 0;\n                        var old = oldValues[i];\n                        var same = false;\n                        var removeIndex;\n                        var newValue;\n                        var found;\n\n                        while (old !== undefined$1) {\n                            found = false;\n                            for (j = 0; j < newLength; j++) {\n                                if (valuePrimitive) {\n                                    same = newValues[j] == old;\n                                } else {\n                                    newValue = newValues[j];\n\n                                    newValue = newValue.get ? newValue.get(field) : newValue;\n                                    same = newValue == (old.get ? old.get(field) : old);\n                                }\n\n                                if (same) {\n                                    newValues.splice(j, 1);\n                                    newLength -= 1;\n                                    found = true;\n                                    break;\n                                }\n                            }\n\n                            if (!found) {\n                                remove.push(old);\n                                arraySplice(oldValues, i, 1);\n                                removeIndex = i;\n                            } else {\n                                i += 1;\n                            }\n\n                            old = oldValues[i];\n                        }\n\n                        arraySplice(oldValues, oldValues.length, 0, newValues);\n\n                        if (remove.length) {\n                            oldValues.trigger(\"change\", {\n                                action: \"remove\",\n                                items: remove,\n                                index: removeIndex\n                            });\n                        }\n\n                        if (newValues.length) {\n                            oldValues.trigger(\"change\", {\n                                action: \"add\",\n                                items: newValues,\n                                index: oldValues.length - 1\n                            });\n                        }\n                    } else {\n                        that.bindings[VALUE].set(newValues);\n                    }\n\n                    that._initChange = false;\n                },\n\n                refresh: function() {\n                    if (!this._initChange) {\n                        var options = this.options,\n                            widget = this.widget,\n                            field = options.dataValueField || options.dataTextField,\n                            value = this.bindings.value.get(),\n                            data = value,\n                            idx = 0, length,\n                            values = [],\n                            selectedValue;\n\n                        if (value === undefined$1) {\n                            value = null;\n                        }\n\n                        if (field) {\n                            if (value instanceof ObservableArray) {\n                                for (length = value.length; idx < length; idx++) {\n                                    selectedValue = value[idx];\n                                    values[idx] = selectedValue.get ? selectedValue.get(field) : selectedValue;\n                                }\n                                value = values;\n                            } else if (value instanceof ObservableObject) {\n                                value = value.get(field);\n                            }\n                        }\n\n                        if (options.autoBind === false && options.valuePrimitive !== true && !widget._isBound()) {\n                            widget._preselect(data, value);\n                        } else {\n                            widget.value(value);\n                        }\n                    }\n                },\n\n                destroy: function() {\n                    this.widget.unbind(CHANGE, this._change);\n                }\n\n            })\n        },\n        scheduler: {\n            source: dataSourceBinding(\"source\", \"dataSource\", \"setDataSource\").extend({\n                dataBound: function(e) {\n                    var idx;\n                    var length;\n                    var widget = this.widget;\n                    var elements = e.addedItems || widget.items();\n                    var data, parents;\n\n                    if (elements.length) {\n                        data = e.addedDataItems || widget.dataItems();\n                        parents = this.bindings.source._parents();\n\n                        for (idx = 0, length = data.length; idx < length; idx++) {\n                            bindElement(elements[idx], data[idx], this._ns(e.ns), [data[idx]].concat(parents));\n                        }\n                    }\n                }\n            })\n        },\n\n        grid: {\n            source: dataSourceBinding(\"source\", \"dataSource\", \"setDataSource\").extend({\n                dataBound: function(e) {\n                    var idx,\n                    length,\n                    widget = this.widget,\n                    elements = e.addedItems || widget.items(),\n                    parents,\n                    data;\n\n                    if (elements.length) {\n                        data = e.addedDataItems || widget.dataItems();\n                        parents = this.bindings.source._parents();\n\n                        for (idx = 0, length = data.length; idx < length; idx++) {\n                            bindElement(elements[idx], data[idx], this._ns(e.ns), [data[idx]].concat(parents));\n                        }\n                    }\n                }\n            })\n        },\n\n        badge: {\n            text: Binder.extend({\n                init: function(widget, bindings, options) {\n                    Binder.fn.init.call(this, widget.element[0], bindings, options);\n\n                    this.widget = widget;\n                },\n                refresh: function() {\n                    var text = this.bindings.text.get();\n\n                    if (text == null) {\n                        text = \"\";\n                    }\n                    this.widget.text(text);\n                }\n            })\n        }\n    };\n\n    var arraySplice = function(arr, idx, remove, add) {\n        add = add || [];\n        remove = remove || 0;\n\n        var addLength = add.length;\n        var oldLength = arr.length;\n\n        var shifted = [].slice.call(arr, idx + remove);\n        var shiftedLength = shifted.length;\n        var index;\n\n        if (addLength) {\n            addLength = idx + addLength;\n            index = 0;\n\n            for (; idx < addLength; idx++) {\n                arr[idx] = add[index];\n                index++;\n            }\n\n            arr.length = addLength;\n        } else if (remove) {\n            arr.length = idx;\n\n            remove += idx;\n            while (idx < remove) {\n                delete arr[--remove];\n            }\n        }\n\n        if (shiftedLength) {\n            shiftedLength = idx + shiftedLength;\n            index = 0;\n\n            for (; idx < shiftedLength; idx++) {\n                arr[idx] = shifted[index];\n                index++;\n            }\n\n            arr.length = shiftedLength;\n        }\n\n        idx = arr.length;\n\n        while (idx < oldLength) {\n            delete arr[idx];\n            idx++;\n        }\n    };\n\n    var BindingTarget = Class.extend( {\n        init: function(target, options) {\n            this.target = target;\n            this.options = options;\n            this.toDestroy = [];\n        },\n\n        bind: function(bindings) {\n            var key,\n                hasValue,\n                hasSource,\n                hasEvents,\n                hasChecked,\n                hasCss,\n                widgetBinding = this instanceof WidgetBindingTarget,\n                specificBinders = this.binders();\n\n            for (key in bindings) {\n                if (key == VALUE) {\n                    hasValue = true;\n                } else if (key == SOURCE) {\n                    hasSource = true;\n                } else if (key == EVENTS && !widgetBinding) {\n                    hasEvents = true;\n                } else if (key == CHECKED) {\n                    hasChecked = true;\n                } else if (key == CSS) {\n                    hasCss = true;\n                } else {\n                    this.applyBinding(key, bindings, specificBinders);\n                }\n            }\n            if (hasSource) {\n                this.applyBinding(SOURCE, bindings, specificBinders);\n            }\n\n            if (hasValue) {\n                this.applyBinding(VALUE, bindings, specificBinders);\n            }\n\n            if (hasChecked) {\n                this.applyBinding(CHECKED, bindings, specificBinders);\n            }\n\n            if (hasEvents && !widgetBinding) {\n                this.applyBinding(EVENTS, bindings, specificBinders);\n            }\n\n            if (hasCss && !widgetBinding) {\n                this.applyBinding(CSS, bindings, specificBinders);\n            }\n\n            if (widgetBinding && this.target && this.target.floatingLabel) {\n                this.applyBinding(\"floatingLabel\", bindings, specificBinders);\n            }\n        },\n\n        binders: function() {\n            return binders[this.target.nodeName.toLowerCase()] || {};\n        },\n\n        applyBinding: function(name, bindings, specificBinders) {\n            var binder = specificBinders[name] || binders[name],\n                toDestroy = this.toDestroy,\n                attribute,\n                binding = bindings[name];\n\n            if (binder) {\n                binder = new binder(this.target, bindings, this.options);\n\n                toDestroy.push(binder);\n\n                if (binding instanceof Binding) {\n                    binder.bind(binding);\n                    toDestroy.push(binding);\n                } else {\n                    for (attribute in binding) {\n                        binder.bind(binding, attribute);\n                        toDestroy.push(binding[attribute]);\n                    }\n                }\n            } else if (name !== \"template\") {\n                throw new Error(\"The \" + name + \" binding is not supported by the \" + this.target.nodeName.toLowerCase() + \" element\");\n            }\n        },\n\n        destroy: function() {\n            var idx,\n                length,\n                toDestroy = this.toDestroy;\n\n            for (idx = 0, length = toDestroy.length; idx < length; idx++) {\n                toDestroy[idx].destroy();\n            }\n        }\n    });\n\n    var WidgetBindingTarget = BindingTarget.extend( {\n        binders: function() {\n            return binders.widget[this.target.options.name.toLowerCase()] || {};\n        },\n\n        applyBinding: function(name, bindings, specificBinders) {\n            var binder = specificBinders[name] || binders.widget[name],\n                toDestroy = this.toDestroy,\n                attribute,\n                binding = bindings[name];\n\n            if (binder) {\n                binder = new binder(this.target, bindings, this.target.options);\n\n                toDestroy.push(binder);\n\n\n                if (binding instanceof Binding) {\n                    binder.bind(binding);\n                    toDestroy.push(binding);\n                } else {\n                    for (attribute in binding) {\n                        binder.bind(binding, attribute);\n                        toDestroy.push(binding[attribute]);\n                    }\n                }\n            } else {\n                throw new Error(\"The \" + name + \" binding is not supported by the \" + this.target.options.name + \" widget\");\n            }\n        }\n    });\n\n    function bindingTargetForRole(element, roles) {\n        var widget = kendo.initWidget(element, {}, roles);\n\n        if (widget) {\n            return new WidgetBindingTarget(widget);\n        }\n    }\n\n    var keyValueRegExp = /[A-Za-z0-9_\\-]+:(\\{([^}]*)\\}|[^,}]+)/g,\n        whiteSpaceRegExp = /\\s/g;\n\n    function parseBindings(bind) {\n        var result = {},\n            idx,\n            length,\n            token,\n            colonIndex,\n            key,\n            value,\n            tokens;\n\n        tokens = bind.match(keyValueRegExp);\n\n        for (idx = 0, length = tokens.length; idx < length; idx++) {\n            token = tokens[idx];\n            colonIndex = token.indexOf(\":\");\n\n            key = token.substring(0, colonIndex);\n            value = token.substring(colonIndex + 1);\n\n            if (value.charAt(0) == \"{\") {\n                value = parseBindings(value);\n            }\n\n            result[key] = value;\n        }\n\n        return result;\n    }\n\n    function createBindings(bindings, source, type) {\n        var binding,\n            result = {};\n\n        for (binding in bindings) {\n            result[binding] = new type(source, bindings[binding]);\n        }\n\n        return result;\n    }\n\n    function bindElement(element, source, roles, parents) {\n\n        if (!element || element.getAttribute(\"data-\" + kendo.ns + \"stop\")) {\n            return;\n        }\n\n        var role = element.getAttribute(\"data-\" + kendo.ns + \"role\"),\n            idx,\n            bind = element.getAttribute(\"data-\" + kendo.ns + \"bind\"),\n            childrenCopy = [],\n            deep = true,\n            bindings,\n            options = {},\n            target;\n\n        parents = parents || [source];\n\n        if (role || bind) {\n            unbindElement(element, false);\n        }\n\n        if (role) {\n            target = bindingTargetForRole(element, roles);\n        }\n\n        if (bind) {\n            bind = parseBindings(bind.replace(whiteSpaceRegExp, \"\"));\n\n            if (!target) {\n                options = kendo.parseOptions(element, { textField: \"\", valueField: \"\", template: \"\", valueUpdate: CHANGE, valuePrimitive: false, autoBind: true }, source);\n                options.roles = roles;\n                target = new BindingTarget(element, options);\n            }\n\n            target.source = source;\n\n            bindings = createBindings(bind, parents, Binding);\n\n            if (options.template) {\n                bindings.template = new TemplateBinding(parents, \"\", options.template);\n            }\n\n            if (bindings.click) {\n                bind.events = bind.events || {};\n                bind.events.click = bind.click;\n                bindings.click.destroy();\n                delete bindings.click;\n            }\n\n            if (bindings.source) {\n                deep = false;\n            }\n\n            if (bind.attr) {\n                bindings.attr = createBindings(bind.attr, parents, Binding);\n            }\n\n            if (bind.style) {\n                bindings.style = createBindings(bind.style, parents, Binding);\n            }\n\n            if (bind.events) {\n                bindings.events = createBindings(bind.events, parents, EventBinding);\n            }\n\n            if (bind.css) {\n                bindings.css = createBindings(bind.css, parents, Binding);\n            }\n\n            target.bind(bindings);\n        }\n\n        if (target) {\n            element.kendoBindingTarget = target;\n        }\n\n        var children = element.children;\n        if (deep && children && !element.getAttribute(\"data-\" + kendo.ns + \"stop\")) {\n            // https://github.com/telerik/kendo/issues/1240 for the weirdness.\n            for (idx = 0; idx < children.length; idx++) {\n                childrenCopy[idx] = children[idx];\n            }\n\n            for (idx = 0; idx < childrenCopy.length; idx++) {\n                bindElement(childrenCopy[idx], source, roles, parents);\n            }\n        }\n    }\n\n    function bind(dom, object) {\n        var idx,\n            length,\n            node,\n            roles = kendo.rolesFromNamespaces([].slice.call(arguments, 2));\n\n        object = kendo.observable(object);\n        dom = $(dom);\n\n        for (idx = 0, length = dom.length; idx < length; idx++) {\n            node = dom[idx];\n            if (node.nodeType === 1) {\n                bindElement(node, object, roles);\n            }\n        }\n    }\n\n    function unbindElement(element, destroyWidget) {\n        var bindingTarget = element.kendoBindingTarget;\n\n        if (bindingTarget) {\n            bindingTarget.destroy();\n\n            if (deleteExpando) {\n                delete element.kendoBindingTarget;\n            } else if (element.removeAttribute) {\n                element.removeAttribute(\"kendoBindingTarget\");\n            } else {\n                element.kendoBindingTarget = null;\n            }\n        }\n\n        if (destroyWidget) {\n            var widget = kendo.widgetInstance($(element));\n            if (widget && typeof widget.destroy === FUNCTION) {\n                widget.destroy();\n            }\n        }\n    }\n\n    function unbindElementTree(element, destroyWidgets) {\n\n        if (!element) {\n            return;\n        }\n\n        unbindElement(element, destroyWidgets);\n\n        unbindElementChildren(element, destroyWidgets);\n    }\n\n    function unbindElementChildren(element, destroyWidgets) {\n        var children = element.children;\n\n        if (children) {\n            for (var idx = 0, length = children.length; idx < length; idx++) {\n                unbindElementTree(children[idx], destroyWidgets);\n            }\n        }\n    }\n\n    function unbind(dom) {\n        var idx, length;\n\n        dom = $(dom);\n\n        for (idx = 0, length = dom.length; idx < length; idx++ ) {\n            unbindElementTree(dom[idx], false);\n        }\n    }\n\n    function notify(widget, namespace) {\n        var element = widget.element,\n            bindingTarget = element[0].kendoBindingTarget;\n\n        if (bindingTarget) {\n            bind(element, bindingTarget.source, namespace);\n        }\n    }\n\n    function retrievePrimitiveValues(value, valueField) {\n        var values = [];\n        var idx = 0;\n        var length;\n        var item;\n\n        if (!valueField) {\n            return value;\n        }\n\n        if (value instanceof ObservableArray) {\n            for (length = value.length; idx < length; idx++) {\n                item = value[idx];\n                values[idx] = item.get ? item.get(valueField) : item[valueField];\n            }\n            value = values;\n        } else if (value instanceof ObservableObject) {\n            value = value.get(valueField);\n        }\n\n        return value;\n    }\n\n    kendo.unbind = unbind;\n    kendo.bind = bind;\n    kendo.data.binders = binders;\n    kendo.data.Binder = Binder;\n    kendo.notify = notify;\n\n    kendo.observable = function(object) {\n        if (!(object instanceof ObservableObject)) {\n            object = new ObservableObject(object);\n        }\n\n        return object;\n    };\n\n    kendo.observableHierarchy = function(array) {\n        var dataSource = kendo.data.HierarchicalDataSource.create(array);\n\n        function recursiveRead(data) {\n            var i, children;\n\n            for (i = 0; i < data.length; i++) {\n                data[i]._initChildren();\n\n                children = data[i].children;\n\n                children.fetch();\n\n                data[i].items = children.data();\n\n                recursiveRead(data[i].items);\n            }\n        }\n\n        dataSource.fetch();\n\n        recursiveRead(dataSource.data());\n\n        dataSource._data._dataSource = dataSource;\n\n        return dataSource._data;\n    };\n\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.binder.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.bottomnavigation.js":
/*!******************************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.bottomnavigation.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* harmony import */ var _kendo_icons_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.icons.js */ \"./node_modules/kendo-ui-core/esm/kendo.icons.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\nvar __meta__ = {\n    id: \"bottomnavigation\",\n    name: \"BottomNavigation\",\n    category: \"web\",\n    description: \"The BottomNavigation widget is a navigation element that allows movement between primary destinations in an app.\",\n    depends: [ \"core\", \"icons\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        ui = kendo.ui,\n        Widget = ui.Widget,\n        extend = $.extend,\n        template = kendo.template,\n        keys = kendo.keys,\n        isPlainObject = $.isPlainObject,\n        isEmptyObject = $.isEmptyObject,\n\n        NS = \".kendoBottomNavigation\",\n        PREFIX = \"k-bottom-nav-\",\n        K_POS = \"k-pos-\",\n        DOT = \".\",\n\n        SELECT = \"select\";\n\n    var isString = function(value) {\n        return typeof value === \"string\";\n    };\n\n    var bottomNavigationStyles = {\n        widget: \"k-bottom-nav\",\n        item: \"k-bottom-nav-item\",\n        navIcon: \"k-bottom-nav-item-icon\",\n        icon: \"k-icon\",\n        text: \"k-bottom-nav-item-text\",\n        itemFlow: {\n            vertical: \"k-bottom-nav-item-flow-vertical\",\n            horizontal: \"k-bottom-nav-item-flow-horizontal\"\n        },\n        selected: \"k-selected\",\n        disabled: \"k-disabled\",\n        border: \"k-bottom-nav-border\",\n        shadow: \"k-bottom-nav-shadow\",\n        focus: \"k-focus\"\n    };\n\n    var templates = {\n        item: template(() => `<span class=\"${bottomNavigationStyles.item}\"></span>`),\n        anchor: template(({ url }) => `<a class=\"${bottomNavigationStyles.item}\"  href=\"${kendo.htmlEncode(url)}\"></a>`),\n        text: template(({ text }) => `<span class=\"${bottomNavigationStyles.text}\" >${text}</span>`),\n        icon: template(({ icon }) => kendo.ui.icon($(`<span class=\"${bottomNavigationStyles.navIcon}\"></span>`), { icon: icon, size: \"xlarge\" }))\n    };\n\n    var BottomNavigation = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n            options = options || {};\n            Widget.fn.init.call(that, element, options);\n\n            that.element = $(element);\n\n            // Backwards compatibility, so that we keep 'fill' as a legacy option\n            if (this.options.fillMode === null) {\n                this.options.fillMode = this.options.fill;\n            }\n\n            that._updateCssClasses();\n            that._items();\n            that._bindEvents();\n        },\n\n        options: {\n            name: \"BottomNavigation\",\n            positionMode: \"fixed\",\n            items: [],\n            themeColor: \"primary\",\n            itemFlow: \"vertical\",\n            // Backwards compatibility, so that we keep 'fill' as a legacy option\n            fillMode: null,\n            fill: \"flat\",\n            shadow: false,\n            border: true,\n            template: null\n        },\n\n        events: [\n            SELECT\n        ],\n\n        destroy: function() {\n            var that = this;\n\n            that.element.off(NS);\n\n            Widget.fn.destroy.call(this);\n        },\n\n        _tabindex: function(target) {\n            var that = this,\n                element = that.element,\n                TABINDEX = \"tabindex\",\n                cachedTabIndex = element.attr(\"data-\" + kendo.ns + TABINDEX),\n                tabindex = target.attr(TABINDEX) || element.attr(TABINDEX) || cachedTabIndex;\n\n            if (!cachedTabIndex) {\n                element.removeAttr(TABINDEX);\n                element.attr(\"data-\" + kendo.ns + TABINDEX, tabindex);\n            }\n\n            target.attr(TABINDEX, !isNaN(tabindex) ? tabindex : 0);\n        },\n\n        _updateCssClasses: function() {\n            var that = this,\n                options = that.options,\n                styles = bottomNavigationStyles;\n\n            // Remove all class names\n            that.element.removeClass(function(index, className) {\n                if (className.indexOf('k-') === 0) {\n                    that.element.removeClass(className);\n                }\n            });\n\n            that.element.addClass(styles.widget);\n            that.element.addClass(kendo.getValidCssClass(K_POS, \"positionMode\", options.positionMode));\n            that.element.toggleClass(styles.border, options.border);\n            that.element.toggleClass(styles.shadow, options.shadow);\n            that._itemFlow(options.itemFlow);\n\n            that._applyCssClasses();\n        },\n\n        _itemFlow: function(orientation) {\n            var that = this,\n                orientationStyles = bottomNavigationStyles.itemFlow;\n\n            that._toggleClassGroup(that.element, orientation, orientationStyles);\n        },\n\n        _toggleClassGroup: function(element, value, group) {\n            if (isString(group[value])) {\n                for (var key in group) {\n                    element.removeClass(group[key]);\n                }\n\n                element.addClass(group[value]);\n            }\n        },\n\n        _items: function() {\n            var that = this,\n                options = that.options,\n                items = options.items,\n                item;\n\n            for (var i = 0; i < items.length; i++) {\n                item = that._renderItem(items[i]);\n                that.element.append(item);\n            }\n        },\n\n        _renderItem: function(item) {\n            var that = this,\n                itemTemplate = item.template || that.options.template,\n                isLink = item.url && isString(item.url),\n                elm, icon;\n\n            elm = $(isLink ? template(templates.anchor)(item) : template(templates.item)(item));\n\n            elm.toggleClass(bottomNavigationStyles.selected, item.selected === true)\n                .toggleClass(bottomNavigationStyles.disabled, item.enabled === false)\n                .addClass(item.cssClass)\n                .attr(extend({}, item.attributes, {\n                    \"aria-disabled\": item.enabled === false\n                }))\n                .data(item.data);\n\n            that._tabindex(elm);\n\n            if (!elm.attr(\"role\") && !isLink) {\n                elm.attr(\"role\", \"link\");\n            }\n\n            if (itemTemplate) {\n                elm.append(template(itemTemplate)(item));\n                return elm;\n            }\n\n            item = extend({}, {\n                icon: \"\"\n            }, item);\n\n            icon = $(templates.icon(item)).addClass(item.iconClass);\n\n            elm.append(icon);\n\n            if (item.text) {\n                item.text = item.encoded === false ? item.text : kendo.htmlEncode(item.text);\n                elm.append($(templates.text(item)));\n            }\n\n            return elm;\n        },\n\n        _bindEvents: function() {\n            var that = this,\n                clickProxy = that._click.bind(that),\n                keydownProxy = that._keydown.bind(that);\n\n            that.element.on(\"click\" + NS, DOT + bottomNavigationStyles.item, clickProxy)\n                        .on(\"keydown\" + NS, DOT + bottomNavigationStyles.item, keydownProxy);\n        },\n\n        _click: function(ev) {\n            var that = this,\n                item = $(ev.target).closest(DOT + bottomNavigationStyles.item);\n\n            if (item.is(DOT + bottomNavigationStyles.disabled)) {\n                ev.preventDefault();\n                return;\n            }\n\n            that._triggerSelect(item, ev);\n        },\n\n        _triggerSelect: function(item, ev) {\n            var that = this;\n\n            if (item.is(DOT + bottomNavigationStyles.disabled)) {\n                return;\n            }\n\n            if (that.trigger(SELECT, { originalEvent: ev, item: item, data: item.data() })) {\n                return;\n            }\n\n            that.select(item);\n        },\n\n        _keydown: function(ev) {\n            var that = this,\n                target = $(ev.target),\n                key = ev.keyCode;\n\n            if (key === keys.ENTER || key === keys.SPACEBAR) {\n                if (that._isItem(target)) {\n                    that._triggerSelect(target, ev);\n\n                    if (key === keys.SPACEBAR) {\n                        ev.preventDefault();\n                    }\n                }\n            }\n        },\n\n        _isItem: function(item) {\n            var that = this;\n\n            item = $(item);\n\n            return item.is(DOT + bottomNavigationStyles.item) && !!that.element.find(item).length;\n        },\n\n        items: function() {\n            var that = this;\n\n            return that.element.children();\n        },\n\n        select: function(item, state) {\n            var that = this,\n                selectedItem = that.items().filter(DOT + bottomNavigationStyles.selected);\n\n            if (!item) {\n                return selectedItem;\n            }\n\n            state = state !== false;\n\n            if (that._isItem(item)) {\n                selectedItem.removeClass(bottomNavigationStyles.selected);\n                $(item).toggleClass(bottomNavigationStyles.selected, state);\n            }\n        },\n\n        enable: function(item, state) {\n            var that = this;\n\n            state = state === false;\n\n            if (item && that._isItem(item)) {\n                $(item).toggleClass(bottomNavigationStyles.disabled, state);\n                $(item).attr(\"aria-disabled\", state);\n            }\n        },\n\n        item: function(index) {\n            var that = this;\n\n            if (isNaN(index)) {\n                return null;\n            }\n\n            return that.items().eq(index);\n        },\n\n        itemById: function(id) {\n            var that = this;\n\n            return that.element.find(\"#\" + id);\n        },\n\n        add: function(item, before) {\n            var that = this,\n                method = \"append\",\n                targetElement = that.element;\n\n            if (before && that._isItem(before)) {\n                method = \"before\";\n                targetElement = $(before);\n            }\n\n            if (item && isPlainObject(item) && !isEmptyObject(item)) {\n                targetElement[method](that._renderItem(item));\n            }\n        },\n\n        remove: function(item) {\n            var that = this;\n\n            if (item && that._isItem(item)) {\n                item.remove();\n            }\n        },\n\n        showText: function(toggle) {\n            var that = this,\n                textItems = that.items().find(DOT + bottomNavigationStyles.text);\n\n            toggle = toggle !== false;\n\n            textItems.toggle(toggle);\n        },\n\n        setOptions: function(options) {\n            var that = this;\n\n            Widget.fn.setOptions.call(this, options);\n            that._updateCssClasses();\n\n            if (\"items\" in options || \"template\" in options) {\n                that.element.empty();\n                that._items();\n            }\n        }\n    });\n\n    ui.plugin(BottomNavigation);\n\n    kendo.cssProperties.registerPrefix(\"BottomNavigation\", \"k-bottom-nav-\");\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.bottomnavigation.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.button.js":
/*!********************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.button.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* harmony import */ var _kendo_badge_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.badge.js */ \"./node_modules/kendo-ui-core/esm/kendo.badge.js\");\n/* harmony import */ var _kendo_html_button_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kendo.html.button.js */ \"./node_modules/kendo-ui-core/esm/kendo.html.button.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\n\nvar __meta__ = {\n        id: \"button\",\n        name: \"Button\",\n        category: \"web\",\n        description: \"The Button widget displays styled buttons.\",\n        depends: [\"core\", \"badge\", \"html.button\"]\n    };\n\n    (function($, undefined$1) {\n        var kendo = __webpack_provided_window_dot_kendo,\n            Widget = kendo.ui.Widget,\n            html = kendo.html,\n            ui = kendo.ui,\n            keys = kendo.keys,\n            CLICK = \"click\",\n            MOUSEDOWN = kendo.support.mousedown,\n            MOUSEUP = kendo.support.mouseup,\n            MOUSEOUT = \"mouseout\",\n            NS = \".kendoButton\",\n            DISABLED = \"disabled\",\n            DISABLEDSTATE = \"k-disabled\",\n            FOCUSEDSTATE = \"k-focus\",\n            ACTIVESTATE = \"k-active\";\n\n        var BUTTON_DEFAULTS = {\n            icon: \"\",\n            iconClass: \"\",\n            spriteCssClass: \"\",\n            imageUrl: \"\",\n            badge: null\n        };\n        kendo.setDefaults(\"button\", BUTTON_DEFAULTS);\n\n        var Button = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                element = that.wrapper = that.element;\n                options = that.options;\n\n                html.renderButton(element, $.extend({}, options));\n\n                element.attr(\"role\", \"button\");\n\n                options.enable = options.enable && options.enabled && !element.attr(DISABLED);\n                that.enable(options.enable);\n\n                if (options.enable) {\n                    that._tabindex();\n                }\n\n                that._badge();\n\n                element\n                    .on(CLICK + NS, that._click.bind(that))\n                    .on(\"focus\" + NS, that._focus.bind(that))\n                    .on(\"blur\" + NS, that._blur.bind(that))\n                    .on(\"keydown\" + NS, that._keydown.bind(that))\n                    .on(\"keyup\" + NS, that._removeActive.bind(that))\n                    .on(MOUSEDOWN + NS, that._addActive.bind(that))\n                    .on(MOUSEUP + NS + \" \" + MOUSEOUT + NS, that._removeActive.bind(that));\n\n                kendo.notify(that);\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that.wrapper.off(NS);\n\n                if (that.badge) {\n                    that.badge.destroy();\n                }\n\n                Widget.fn.destroy.call(that);\n            },\n\n            events: [\n                CLICK\n            ],\n\n            options: {\n                name: \"Button\",\n                enable: true,\n                enabled: true,\n                icon: \"\",\n                iconClass: \"\",\n                spriteCssClass: \"\",\n                imageUrl: \"\",\n                badge: null,\n                size: \"medium\",\n                shape: \"rectangle\",\n                rounded: \"medium\",\n                fillMode: \"solid\",\n                themeColor: \"base\"\n            },\n\n            _isNativeButton: function() {\n                return this.element.prop(\"tagName\").toLowerCase() == \"button\";\n            },\n\n            _click: function(e) {\n                if (this.options.enable) {\n                    if (this.trigger(CLICK, {\n                        event: e,\n                        id: this.element.attr(\"id\"),\n                        target: this.element\n                    })) {\n                        e.preventDefault();\n                    }\n                }\n            },\n\n            _focus: function() {\n                if (this.options.enable) {\n                    this.element.addClass(FOCUSEDSTATE);\n                }\n            },\n\n            _blur: function() {\n                var that = this;\n                that.element.removeClass(FOCUSEDSTATE);\n                setTimeout(function() {\n                    that.element.removeClass(ACTIVESTATE);\n                });\n            },\n\n            _keydown: function(e) {\n                var that = this;\n                if (e.keyCode == keys.ENTER || e.keyCode == keys.SPACEBAR) {\n                    that._addActive();\n\n                    if (!that._isNativeButton()) {\n                        if (e.keyCode == keys.SPACEBAR) {\n                            e.preventDefault();\n                        }\n                        that._click(e);\n                    }\n                }\n            },\n\n            _removeActive: function() {\n                this.element.removeClass(ACTIVESTATE);\n            },\n\n            _addActive: function() {\n                if (this.options.enable) {\n                    this.element.addClass(ACTIVESTATE);\n                }\n            },\n\n            enable: function(enable) {\n                var that = this,\n                    element = that.element;\n\n                if (enable === undefined$1) {\n                    enable = true;\n                }\n\n                enable = !!enable;\n                that.options.enable = enable;\n                element.toggleClass(DISABLEDSTATE, !enable)\n                    .attr(\"aria-disabled\", !enable)\n                    .attr(DISABLED, !enable);\n\n                if (enable) {\n                    that._tabindex();\n                }\n\n                // prevent 'Unspecified error' in IE when inside iframe\n                try {\n                    element.trigger(\"blur\");\n                } catch (err) {}\n            },\n\n            _badge: function(options) {\n                var that = this;\n                var badgeOptions = options || that.options.badge;\n                var badgeEelement;\n\n                if (badgeOptions === null || badgeOptions === undefined$1) {\n                    return;\n                }\n\n                if (badgeOptions.constructor !== Object) {\n                    badgeOptions = { text: badgeOptions };\n                }\n\n                if (badgeOptions.position === undefined$1 || badgeOptions.position === \"\") {\n                    badgeOptions.position = \"edge\";\n\n                    if (badgeOptions.align === undefined$1 || badgeOptions.align === \"\") {\n                        badgeOptions.align = \"top end\";\n                    }\n                }\n\n                badgeOptions._classNames = [\"k-button-badge\"];\n\n                that.element.addClass(\"k-badge-container\");\n\n                badgeEelement = $('<span />').appendTo(that.element);\n                that.badge = new ui.Badge(badgeEelement, badgeOptions);\n            }\n        });\n\n        if (Button.fn.hasOwnProperty(\"defaults\") === false) {\n            Object.defineProperty(Button.fn, \"defaults\", {\n                get: function() {\n                    return kendo.defaults.button;\n                }\n            });\n        }\n\n        kendo.cssProperties.registerPrefix(\"Button\", \"k-button-\");\n\n        kendo.cssProperties.registerValues(\"Button\", [{\n            prop: \"fillMode\",\n            values: kendo.cssProperties.fillModeValues.concat([\"link\", \"clear\"])\n        }, {\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n        kendo.ui.plugin(Button);\n\n    })(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.button.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.button.menu.js":
/*!*************************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.button.menu.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* harmony import */ var _kendo_popup_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.popup.js */ \"./node_modules/kendo-ui-core/esm/kendo.popup.js\");\n/* harmony import */ var _kendo_icons_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kendo.icons.js */ \"./node_modules/kendo-ui-core/esm/kendo.icons.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\n\nvar __meta__ = {\n    id: \"button.menu\",\n    name: \"ButtonMenu\",\n    category: \"web\",\n    description: \"The popup Menu list part of the SplitButton and the DropDownButton\",\n    depends: [\"core\", \"popup\", \"icons\"]\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        Widget = kendo.ui.Widget,\n        NS = \".kendoButtonMenu\",\n        ui = kendo.ui,\n        keys = kendo.keys,\n        encode = kendo.htmlEncode,\n        extend = $.extend,\n\n        DOT = \".\",\n        ID = \"id\",\n        NEXT = \"next\",\n        PREV = \"prev\",\n        DISABLEDSTATE = \"k-disabled\",\n        HIDDEN = \"k-hidden\",\n\n        ARIA_DISABLED = \"aria-disabled\",\n        ROLE_MENU = \"menu\",\n        ROLE_MENU_ITEM = \"menuitem\",\n        TABINDEX = \"tabindex\",\n\n        CLICK = \"click\",\n        MENU_CLICK = \"menuClick\",\n        OPEN = \"menuOpen\",\n        CLOSE = \"menuClose\",\n        KEYDOWN = \"keydown\",\n        FOCUS = \"focus\",\n\n        DIRECTIONS = {\n            \"down\": {\n                origin: \"bottom left\",\n                position: \"top left\"\n            },\n            \"up\": {\n                origin: \"top left\",\n                position: \"bottom left\"\n            }\n        };\n\n    var cssClasses = {\n        popup: \"k-menu-popup\",\n        list: \"k-menu-group\",\n        listItem: \"k-item k-menu-item\",\n        menuItem: \"k-menu-item\",\n        itemText: \"k-menu-link-text\",\n        item: \"k-link k-menu-link\",\n        sprite: \"k-sprite\",\n        image: \"k-image\",\n        icon: \"k-icon\"\n    };\n\n    var baseItem = {\n        text: null,\n        icon: null,\n        url: null,\n        attributes: null,\n        enabled: true,\n        hidden: false,\n        id: null,\n        imageUrl: null,\n        spriteCssClass: null\n    };\n\n    var IMAGE_TEMPLATE = ({ imageUrl }) => `${imageUrl ? `<img alt=\"icon\" class=\"${cssClasses.image}\" src=\"${encode(imageUrl)}\" />` : ''}`;\n    var SPRITE_TEMPLATE = ({ spriteCssClass }) => `${spriteCssClass ? `<span class=\"${cssClasses.sprite} ${encode(spriteCssClass)}\"></span>` : ''}`;\n    var ICON_TEMPLATE = ({ icon }) => `${icon ? kendo.ui.icon(encode(icon)) : ''}`;\n    var TEXT_TEMPLATE = ({ text }) => `${text ? `<span class=\"${cssClasses.itemText}\">${encode(text)}</span>` : ''}`;\n\n    var ITEM_TEMPLATE = ({ imageUrl, spriteCssClass, icon, text }) => `<span class=\"${cssClasses.item}\">` +\n                                                        `${IMAGE_TEMPLATE({ imageUrl })}` +\n                                                        `${SPRITE_TEMPLATE({ spriteCssClass })}` +\n                                                        `${ICON_TEMPLATE({ icon })}` +\n                                                        `${TEXT_TEMPLATE({ text })}` +\n                                                    `</span>`;\n\n    var LINK_TEMPLATE = ({ url, imageUrl, spriteCssClass, icon, text, attributes }) => `<a href=\"${encode(url)}\" ${attributes.target ? `target=\"${attributes.target}\"` : ''} class=\"${cssClasses.item}\">` +\n                                                    `${IMAGE_TEMPLATE({ imageUrl })}` +\n                                                    `${SPRITE_TEMPLATE({ spriteCssClass })}` +\n                                                    `${ICON_TEMPLATE({ icon })}` +\n                                                    `${TEXT_TEMPLATE({ text })}` +\n                                                `</a>`;\n\n    function findFocusableSibling(element, dir) {\n        var getSibling = dir === NEXT ? $.fn.next : $.fn.prev;\n        var getter = dir === NEXT ? $.fn.first : $.fn.last;\n        var candidate = getSibling.call(element);\n        var focusable = \":kendoFocusable\";\n\n        if (!candidate.length) {\n            candidate = getter.call(element.parent().find(DOT + cssClasses.menuItem));\n        }\n\n        if (candidate.is(focusable) || !candidate.length) {\n            return candidate;\n        }\n\n        if (candidate.find(focusable).length) {\n            return getter.call(candidate.find(focusable));\n        }\n\n        return findFocusableSibling(candidate, dir);\n    }\n\n    var ButtonMenu = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n\n            Widget.fn.init.call(that, element, options);\n\n            that.mainButton = options.mainButton;\n            that._clickHandlers = {};\n\n            that._renderList();\n\n            that._initPopup();\n\n            that._attachEvents();\n\n            that._applyCssClasses(that.list);\n        },\n\n        options: {\n            name: \"ButtonMenu\",\n            direction: \"down\",\n            element: null,\n            items: [],\n            size: \"medium\",\n        },\n\n        events: [\n            MENU_CLICK,\n            OPEN,\n            CLOSE\n        ],\n\n        _renderList: function() {\n            var that = this,\n                items = that.options.items,\n                popup = that.element.addClass(cssClasses.popup),\n                id = that.mainButton.attr(ID) || kendo.guid(),\n                list = $(\"<ul role=\\\"\" + ROLE_MENU + \"\\\"></ul>\").addClass(cssClasses.list);\n\n            that.list = list.appendTo(popup);\n\n            that.list.attr(ID, id + \"_buttonmenu\");\n\n            items.forEach(that._renderListItem.bind(that));\n        },\n\n        _renderListItem: function(item) {\n            var that = this,\n                attributesId = item.attributes ? item.attributes.id : null,\n                id, menuItem;\n\n            item = extend({}, baseItem, item, {\n                enabled: item.enable && item.enabled // backward compatibility: support both enable and enabled options.\n            });\n\n            id = item.id || attributesId || kendo.guid();\n            menuItem = $(\"<li id=\\\"\" + id + \"\\\" role=\\\"\" + ROLE_MENU_ITEM + \"\\\" class=\\\"\" + cssClasses.listItem + \"\\\">\" + that._renderItemButton(item) + \"</li>\");\n\n            if (item.click) {\n                that._clickHandlers[id] = item.click;\n            }\n\n            if (item.attributes) {\n                delete item.attributes.target;\n\n                if (item.attributes.class) {\n                    menuItem.addClass(item.attributes.class);\n                    delete item.attributes.class;\n                }\n\n                menuItem.attr(item.attributes);\n            }\n\n            if (item.data && kendo.isFunction(item.data)) {\n                menuItem.data(item.data(item));\n            }\n\n            that.list.append(menuItem);\n\n            that.enable(item.enabled, menuItem);\n            that._hide(item.hidden, menuItem);\n        },\n\n        _renderItemButton: function(item) {\n            var that = this,\n                options = that.options;\n\n            if (options.itemTemplate) {\n                return kendo.template(options.itemTemplate)(item);\n            }\n\n            if (item.url) {\n                return kendo.template(LINK_TEMPLATE)(item);\n            } else {\n                return kendo.template(ITEM_TEMPLATE)(item);\n            }\n        },\n\n        _initPopup: function() {\n            var that = this,\n                options = that.options,\n                direction = options.direction || \"down\";\n\n            that._popup = new ui.Popup(that.element, extend({}, options.popup, {\n                anchor: that.mainButton,\n                isRtl: that._isRtl,\n                toggleTarget: options.toggleTarget,\n                copyAnchorStyles: false,\n                animation: options.animation,\n                open: that._popupOpenHandler.bind(that),\n                close: that._popupCloseHandler.bind(that),\n                activate: that._popupExpandHandler.bind(that)\n            }, DIRECTIONS[direction]));\n        },\n\n        _popupOpenHandler: function(ev) {\n            var that = this;\n\n            var isDefaultPrevented = that.trigger(OPEN);\n\n            if (isDefaultPrevented) {\n                ev.preventDefault();\n                return;\n            }\n\n            that.list.find(DOT + cssClasses.menuItem).attr(TABINDEX, 0);\n        },\n\n        _popupCloseHandler: function(ev) {\n            var that = this,\n                isDefaultPrevented = that.trigger(CLOSE);\n\n            if (isDefaultPrevented) {\n                ev.preventDefault();\n            }\n\n            that.list.find(DOT + cssClasses.menuItem).attr(TABINDEX, -1);\n        },\n\n        _popupExpandHandler: function() {\n            var that = this;\n\n            that.list.find(\":kendoFocusable\").first().trigger(FOCUS);\n        },\n\n        adjustPopupWidth: function(width) {\n            var that = this;\n\n            that.element.css({\n                \"min-width\": width\n            });\n        },\n\n        _attachEvents: function() {\n            var that = this;\n\n            that.list\n                .on(CLICK + NS, DOT + cssClasses.menuItem, that._click.bind(that))\n                .on(KEYDOWN + NS, DOT + cssClasses.menuItem, that.listItemKeydown.bind(that));\n\n            that.mainButton\n                .on(KEYDOWN + NS, that._keydown.bind(that));\n        },\n\n        _keydown: function(ev) {\n            var that = this;\n\n            if ($(ev.target).is(DOT + DISABLEDSTATE) || $(ev.target).parents(DOT + DISABLEDSTATE).length) {\n                return;\n            }\n\n            if (ev.altKey && ev.keyCode === keys.DOWN) {\n                that.open();\n                ev.preventDefault();\n                return;\n            }\n        },\n\n        listItemKeydown: function(ev) {\n            var that = this,\n                li = $(ev.target);\n\n            ev.preventDefault();\n\n            if (ev.keyCode === keys.ESC || ev.keyCode === keys.TAB || (ev.altKey && ev.keyCode === keys.UP)) {\n                that.close();\n                that.mainButton.trigger(FOCUS);\n            } else if (ev.keyCode === keys.DOWN) {\n                findFocusableSibling(li, NEXT).trigger(FOCUS);\n            } else if (ev.keyCode === keys.UP) {\n                findFocusableSibling(li, PREV).trigger(FOCUS);\n            } else if (!li.is(DOT + DISABLEDSTATE) && (ev.keyCode === keys.SPACEBAR || ev.keyCode === keys.ENTER)) {\n                li.trigger(CLICK);\n            } else if (ev.keyCode === keys.HOME) {\n                that.list.find(\":kendoFocusable\")\n                    .filter(DOT + cssClasses.menuItem)\n                    .first().trigger(FOCUS);\n            } else if (ev.keyCode === keys.END) {\n                that.list.find(\":kendoFocusable\")\n                    .filter(DOT + cssClasses.menuItem)\n                    .last().trigger(FOCUS);\n            }\n        },\n\n        _click: function(ev) {\n            var that = this,\n                target = $(ev.target).closest(DOT + cssClasses.menuItem),\n                id = target.attr(ID);\n\n            if (that._clickHandlers[id]) {\n                that._clickHandlers[id](ev);\n            }\n\n            that.trigger(MENU_CLICK, { id: id, target: target, type: \"menu-click\", originalEvent: ev });\n        },\n\n        toggle: function() {\n            this._popup.toggle();\n        },\n\n        enable: function(enable, items) {\n            var that = this;\n\n            if (!items || !items.length) {\n                items = that.items();\n            } else {\n                items = that.list.find(items);\n            }\n\n            items.toggleClass(DISABLEDSTATE, !enable);\n\n            if (enable) {\n                items.removeAttr(ARIA_DISABLED);\n            } else {\n                items.attr(ARIA_DISABLED, !enable);\n            }\n        },\n\n\n        _hide: function(hidden, items) {\n            var that = this;\n\n            if (!items || !items.length) {\n                items = that.items();\n            } else {\n                items = that.list.find(items);\n            }\n\n            items.toggleClass(HIDDEN, hidden);\n        },\n\n        hide: function(items) {\n            this._hide(true, items);\n        },\n\n        show: function(items) {\n            this._hide(false, items);\n        },\n\n        open: function() {\n            if (this.items().length === 0) {\n                return;\n            }\n\n            var visibleItems = this.items().filter(`:not(.${HIDDEN})`);\n            if (visibleItems.length === 0) {\n                return;\n            }\n\n            this._popup.open();\n        },\n\n        close: function() {\n            this._popup.close();\n        },\n\n        items: function() {\n            return this.list.children(DOT + cssClasses.menuItem);\n        },\n\n        destroyPopup: function() {\n            var that = this;\n\n            if (that._popup) {\n                that._popup.destroy();\n                that._popup = null;\n\n                that.list.off(NS);\n                that.list.remove();\n                that.list = null;\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n\n            delete that._clickHandlers;\n\n            that.destroyPopup();\n            that.mainButton.off(NS);\n            Widget.fn.destroy.call(that);\n        }\n    });\n\n    kendo.cssProperties.registerPrefix(\"ButtonMenu\", \"k-menu-group-\");\n\n    ui.plugin(ButtonMenu);\n\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.button.menu.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.buttongroup.js":
/*!*************************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.buttongroup.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* harmony import */ var _kendo_togglebutton_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.togglebutton.js */ \"./node_modules/kendo-ui-core/esm/kendo.togglebutton.js\");\n/* harmony import */ var _kendo_button_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kendo.button.js */ \"./node_modules/kendo-ui-core/esm/kendo.button.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\n\nvar __meta__ = {\n    id: \"buttongroup\",\n    name: \"ButtonGroup\",\n    category: \"web\",\n    description: \"The Kendo ButtonGroup widget is a linear set of grouped buttons.\",\n    depends: [ \"core\", \"togglebutton\", \"button\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo;\n    var ui = kendo.ui;\n    var Widget = ui.Widget;\n    var ToggleButton = ui.ToggleButton;\n    var Button = ui.Button;\n    var keys = kendo.keys;\n    var NS = \".kendoButtonGroup\";\n    var KBUTTONGROUP = \"k-button-group k-button-group-solid\";\n    var KBUTTON = \"k-button\";\n    var SELECTED = \"k-selected\";\n    var DISABLED = \"k-disabled\";\n    var KFOCUS = \"k-focus\";\n    var SELECT = \"select\";\n    var KEYDOWN = \"keydown\";\n    var ARIA_DISABLED = \"aria-disabled\";\n    var EMPTY = \" \";\n    var DOT = \".\";\n    var NONE = \"none\";\n    var SINGLE = \"single\";\n    var MULTIPLE = \"multiple\";\n    var TOGGLE = \"toggle\";\n    var FOCUS = \"focus\";\n\n    var ButtonGroup = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that.wrapper = that.element;\n\n            that.selectedIndices = [];\n\n            that._buttons = that._renderItems(that.options.items);\n\n            that.element\n                .addClass(EMPTY + KBUTTONGROUP)\n                .attr(\"role\", \"group\");\n\n            that._enable = true;\n\n            if (!that.options.enable || !that.options.enabled) {\n                that._enable = false;\n                that.element\n                        .attr(ARIA_DISABLED, true)\n                        .addClass(DISABLED);\n\n                that._buttons.forEach((b) => {\n                    b.enable(false);\n                });\n            }\n\n            if (that.options.selection !== NONE) {\n                that.select(that.options.index);\n            }\n\n            that._attachEvents();\n        },\n\n        events: [\n            SELECT\n        ],\n\n        options: {\n            name: \"ButtonGroup\",\n            selection: SINGLE,\n            index: -1,\n            enable: true,\n            enabled: true,\n            preventKeyNav: false,\n            size: \"medium\",\n            rounded: \"medium\",\n            fillMode: \"solid\",\n            themeColor: \"base\"\n        },\n\n        badge: function(item, value) {\n            var that = this,\n                element = that.element,\n                button = !isNaN(item) ? that._buttons[item] : element.find(item).getKendoToggleButton() || element.find(item).getKendoButton(),\n                validValue = value || value === 0,\n                badge, badgeEl;\n\n            if (!button) {\n                return;\n            }\n\n            badge = button.badge;\n\n            if (!badge && validValue) {\n                button._badge({ text: kendo.htmlEncode(value) });\n                return kendo.htmlEncode(value);\n            }\n\n            if (validValue) {\n                badge.text(kendo.htmlEncode(value));\n            } else if (value === false) {\n                button.badge = null;\n                badgeEl = badge.element;\n                badge.destroy();\n                badgeEl.empty().remove();\n                return;\n            }\n\n            return badge ? badge.text() : null;\n        },\n\n        current: function() {\n            return this.element.find(DOT + SELECTED);\n        },\n\n        destroy: function() {\n            var that = this;\n\n            that.element.off(NS);\n\n            that.element.find(DOT + KBUTTON).each(function(i, el) {\n                var component = $(el).getKendoToggleButton() || $(el).getKendoButton();\n\n                if (component) {\n                    component.destroy();\n                }\n            });\n\n            Widget.fn.destroy.call(that);\n        },\n\n        enable: function(enable) {\n            if (typeof enable == \"undefined\") {\n                enable = true;\n            }\n\n            this.element\n                    .attr(ARIA_DISABLED, !enable)\n                    .toggleClass(DISABLED, !enable);\n\n            this._buttons.forEach((b) => {\n                var focused = b.element.hasClass(KFOCUS) || b.element.is(\":focus\");\n\n                b.enable(enable);\n\n                if (focused) {\n                    b.element.removeAttr(\"disabled\").addClass(\"k-focus\").trigger(\"focus\");\n                }\n            });\n\n            this._enable = this.options.enable = enable;\n        },\n\n        select: function(el) {\n            var that = this,\n                button,\n                index = -1;\n\n            if (this.options.selection === NONE || el === undefined$1 || el === -1) {\n                return;\n            }\n\n            if (typeof el === \"number\") {\n                index = el;\n            } else if (el.nodeType) {\n                el = $(el);\n                index = el.index();\n            } else {\n                index = el.index();\n            }\n\n            button = that._buttons[index];\n\n            if (!button) {\n                return;\n            }\n\n            if (that.options.selection === MULTIPLE) {\n                if (el.length > 1) {\n                    el.each((i, element) => {\n                        var idx = $(element).index();\n\n                        that._buttons[idx].toggle();\n                        that._toggleIndex(idx);\n                    });\n                } else {\n                    that._buttons[index].toggle();\n                    that._toggleIndex(index);\n                }\n            } else {\n                that._resetIndexes(index);\n            }\n        },\n\n        _addButton: function(el, options) {\n            if (this.options.selection === NONE || (options.command && !options.togglable)) {\n                delete options.selected;\n\n                return new Button(el, options);\n            } else {\n                var btn = new ToggleButton(el, options);\n\n                btn.bind(TOGGLE, this._select.bind(this, el));\n\n                return btn;\n            }\n        },\n\n        _attachEvents: function() {\n            if (!this.options.preventKeyNav) {\n                this.element.on(KEYDOWN + NS, this._keyDown.bind(this));\n            }\n        },\n\n        _keyDown: function(e) {\n            var that = this,\n                buttonGroup = $(that.element),\n                focusableItems = buttonGroup.find(DOT + KBUTTON),\n                focusedElement = buttonGroup.find(\":focus\"),\n                currentIndex = focusableItems.index(focusedElement),\n                isRtl = kendo.support.isRtl(that.element),\n                itemToFocus;\n\n            if ((e.keyCode === keys.LEFT && !isRtl) || (e.keyCode === keys.RIGHT && isRtl)) {\n                itemToFocus = currentIndex === 0 ? focusableItems.eq(focusableItems.length - 1) : $(focusableItems[currentIndex - 1]);\n                itemToFocus.trigger(FOCUS);\n                e.preventDefault();\n            } else if ((e.keyCode === keys.LEFT && isRtl) || (e.keyCode === keys.RIGHT && !isRtl)) {\n                itemToFocus = currentIndex + 1 === focusableItems.length ? focusableItems.eq(0) : $(focusableItems[currentIndex + 1]);\n                itemToFocus.trigger(FOCUS);\n                e.preventDefault();\n            }\n        },\n\n        _decorateButtons: function(buttons) {\n            if (buttons.length) {\n                $(buttons[0].element).addClass(\"k-group-start\");\n                $(buttons[buttons.length - 1].element).addClass(\"k-group-end\");\n            }\n        },\n\n        _renderItems: function(items) {\n            var that = this,\n                groupOptions = that.options,\n                children = that.element.children(),\n                buttons = [];\n\n            if (children.length > 0) {\n                children.each(function(index) {\n                    var el = $(this),\n                        image = el.find(\"img\").addClass(\"k-image\"),\n                        disabled = el.is(\"[disabled]\") || el.hasClass(DISABLED),\n                        options = {\n                            badge: kendo.attrValue(el, \"badge\"),\n                            icon: !image[0] ? kendo.attrValue(el, \"icon\") : null,\n                            disabled: disabled,\n                            selected: !disabled ? el.is(DOT + SELECTED) : false,\n                            size: groupOptions.size,\n                            rounded: groupOptions.rounded,\n                            fillMode: groupOptions.fillMode,\n                            themeColor: groupOptions.themeColor\n                        };\n\n                    buttons.push(that._addButton(el, options));\n\n                    if (options.selected) {\n                        that.selectedIndices.push(index);\n                    }\n                });\n            }\n\n            if (!items) {\n                that._decorateButtons(buttons);\n                return buttons;\n            }\n\n            items.forEach(function(item, index) {\n                var text = item.text ? item.encoded === false ? item.text : kendo.htmlEncode(item.text) : \"\",\n                    el = item.url ? $(\"<a href=\" + item.url + \">\") : $(\"<button>\");\n\n                el.html(text);\n\n                if (item.attributes) {\n                    el.attr(item.attributes);\n                }\n\n                item = $.extend({}, item, {\n                    size: groupOptions.size,\n                    rounded: groupOptions.rounded,\n                    fillMode: groupOptions.fillMode,\n                    themeColor: groupOptions.themeColor\n                });\n\n                el.appendTo(that.element);\n                buttons.push(that._addButton(el, item));\n\n                if (item.selected) {\n                    that.selectedIndices.push(index);\n                }\n            });\n\n            that._decorateButtons(buttons);\n\n            return buttons;\n        },\n\n        _resetIndexes: function(index) {\n            this.selectedIndices = [];\n            this._buttons.forEach((b) => {\n                b.toggle(false);\n            });\n\n            this._buttons[index].toggle(true);\n            this.selectedIndices.push(index);\n        },\n\n        _select: function(button) {\n            var selection = this.options.selection,\n                index = button.index();\n\n            if (!this._enable || button.is(DOT + DISABLED)) {\n                return;\n            }\n\n            if (selection === MULTIPLE) {\n                this._toggleIndex(index);\n            } else if (selection === SINGLE) {\n                this._resetIndexes(index);\n            }\n\n            this.trigger(SELECT, { indices: this.selectedIndices, target: button });\n        },\n\n        _toggleIndex: function(index) {\n            if (this.selectedIndices.indexOf(index) === -1) {\n                this.selectedIndices.push(index);\n            } else {\n                this.selectedIndices.splice(this.selectedIndices.indexOf(index), 1);\n            }\n        }\n    });\n\n    ui.plugin(ButtonGroup);\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.buttongroup.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.calendar.js":
/*!**********************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.calendar.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* harmony import */ var _kendo_selectable_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.selectable.js */ \"./node_modules/kendo-ui-core/esm/kendo.selectable.js\");\n/* harmony import */ var _kendo_icons_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kendo.icons.js */ \"./node_modules/kendo-ui-core/esm/kendo.icons.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\n\nlet __meta__ = {\n    id: \"calendar\",\n    name: \"Calendar\",\n    category: \"web\",\n    description: \"The Calendar widget renders a graphical calendar that supports navigation and selection.\",\n    depends: [ \"core\", \"selectable\" ]\n};\n\n(function($, undefined$1) {\n    let kendo = __webpack_provided_window_dot_kendo,\n        support = kendo.support,\n        ui = kendo.ui,\n        Widget = ui.Widget,\n        keys = kendo.keys,\n        parse = kendo.parseDate,\n        encode = kendo.htmlEncode,\n        adjustDST = kendo.date.adjustDST,\n        weekInYear = kendo.date.weekInYear,\n        Selectable = kendo.ui.Selectable,\n        RangeSelectable = kendo.ui.RangeSelectable,\n        extractFormat = kendo._extractFormat,\n        template = kendo.template,\n        getCulture = kendo.getCulture,\n        transitionOrigin = \"transform-origin\",\n        cellTemplate = template((data) => `<td class=\"${data.cssClass}\" role=\"gridcell\"><span tabindex=\"-1\" class=\"k-link\" data-href=\"#\" data-${data.ns}value=\"${data.dateString}\">${data.value}</span></td>`),\n        emptyCellTemplate = template(() => '<td role=\"gridcell\" class=\"k-calendar-td k-empty\"></td>'),\n        otherMonthCellTemplate = template(() => '<td role=\"gridcell\" class=\"k-calendar-td k-empty\">&nbsp;</td>'),\n        weekNumberTemplate = template((data) => `<td class=\"k-calendar-td k-alt\">${data.weekNumber}</td>`),\n        outerWidth = kendo._outerWidth,\n        ns = \".kendoCalendar\",\n        CLICK = \"click\" + ns,\n        KEYDOWN_NS = \"keydown\" + ns,\n        DOT = \".\",\n        EMPTY = \" \",\n        TABLE = \"table\",\n        CALENDAR_VIEW = \"k-calendar-view\",\n        ID = \"id\",\n        MIN = \"min\",\n        LEFT = \"left\",\n        SLIDE = \"slideIn\",\n        MONTH = \"month\",\n        CENTURY = \"century\",\n        CHANGE = \"change\",\n        NAVIGATE = \"navigate\",\n        VALUE = \"value\",\n        HOVER = \"k-hover\",\n        DISABLED = \"k-disabled\",\n        FOCUSED = \"k-focus\",\n        OTHERMONTH = \"k-other-month\",\n        EMPTYCELL = \"k-empty\",\n        TODAY = \"k-calendar-nav-today\",\n        CELLSELECTOR = \"td:has(.k-link)\",\n        START = \"start\",\n        END = \"end\",\n        CELLSELECTORVALID = \"td:has(.k-link):not(.\" + DISABLED + \"):not(.\" + EMPTYCELL + \")\",\n        WEEKCOLUMNSELECTOR = \"td:not(:has(.k-link))\",\n        SELECTED = \"k-selected\",\n        BLUR = \"blur\" + ns,\n        FOCUS = \"focus\",\n        FOCUS_WITH_NS = FOCUS + ns,\n        MOUSEENTER = support.touch ? \"touchstart\" : \"mouseenter\",\n        MOUSEENTER_WITH_NS = support.touch ? \"touchstart\" + ns : \"mouseenter\" + ns,\n        MOUSELEAVE = support.touch ? \"touchend\" + ns + \" touchmove\" + ns : \"mouseleave\" + ns,\n        MS_PER_MINUTE = 60000,\n        MS_PER_DAY = 86400000,\n        PREVARROW = \"_prevArrow\",\n        NEXTARROW = \"_nextArrow\",\n        ARIA_DISABLED = \"aria-disabled\",\n        ARIA_SELECTED = \"aria-selected\",\n        ARIA_LABEL = \"aria-label\",\n        extend = $.extend,\n        DATE = Date,\n        views = {\n            month: 0,\n            year: 1,\n            decade: 2,\n            century: 3\n        },\n        HEADERSELECTOR = '.k-header, .k-calendar-header',\n        CLASSIC_HEADER_TEMPLATE = ({ actionAttr, size, isRtl }) => `<div class=\"k-header k-hstack\">\n            <span tabindex=\"-1\" data-href=\"#\" ${actionAttr}=\"prev\" role=\"button\" class=\"k-calendar-nav-prev k-button ${size} k-rounded-md k-button-flat k-button-flat-base k-icon-button\" ${ARIA_LABEL}=\"Previous\">${kendo.ui.icon({ icon: `caret-alt-${isRtl ? \"right\" : \"left\"}`, iconClass: \"k-button-icon\" })}</span></span>\n            <span tabindex=\"-1\" data-href=\"#\" ${actionAttr}=\"nav-up\" id=\"` + kendo.guid() + `\" role=\"button\" class=\"k-calendar-nav-fast k-button ${size} k-rounded-md k-button-flat k-button-flat-base  k-flex\"></span>\n            <span tabindex=\"-1\" data-href=\"#\" ${actionAttr}=\"next\" role=\"button\" class=\"k-calendar-nav-next k-button ${size} k-rounded-md k-button-flat k-button-flat-base  k-icon-button\" ${ARIA_LABEL}=\"Next\">${kendo.ui.icon({ icon: `caret-alt-${isRtl ? \"left\" : \"right\"}`, iconClass: \"k-button-icon\" })}</span>\n        </div>`,\n        MODERN_HEADER_TEMPLATE = ({ actionAttr, size, messages, isRtl }) => `<div class=\"k-calendar-header\">\n            <button ${actionAttr}=\"nav-up\" id=\"` + kendo.guid() + `\" class=\"k-calendar-title k-button ${size} k-button-flat k-button-flat-primary k-rounded-md\">\n                <span class=\"k-button-text\"></span>\n            </button>\n            <span class=\"k-spacer\"></span>\n            <span class=\"k-calendar-nav\">\n                <button tabindex=\"-1\" ${actionAttr}=${isRtl ? \"next\" : \"prev\"} class=\"k-calendar-nav-prev k-button ${size} k-button-flat k-button-flat-base k-rounded-md k-icon-button\">\n                    ${kendo.ui.icon({ icon: `chevron-${isRtl ? \"right\" : \"left\"}`, iconClass: \"k-button-icon\" })}\n                </button>\n                <button tabindex=\"-1\" ${actionAttr}=\"today\" class=\"k-calendar-nav-today k-button ${size} k-button-flat k-button-flat-primary k-rounded-md\" role=\"link\">\n                    <span class=\"k-button-text\">${kendo.htmlEncode(messages.today)}</span>\n                </button>\n                <button tabindex=\"-1\" ${actionAttr}=${isRtl ? \"prev\" : \"next\"} class=\"k-calendar-nav-next k-button ${size} k-button-flat k-button-flat-base k-rounded-md k-icon-button\">\n                    ${kendo.ui.icon({ icon: `chevron-${isRtl ? \"left\" : \"right\"}`, iconClass: \"k-button-icon\" })}\n                </button>\n            </span>\n        </div>`;\n\n    var Calendar = Widget.extend({\n        init: function(element, options) {\n            var that = this, value, id;\n            options = options || {};\n            options.componentType = options.componentType || \"classic\";\n            Widget.fn.init.call(that, element, options);\n\n            element = that.wrapper = that.element;\n            options = that.options;\n\n            options.url = kendo.unescape(options.url);\n\n            that.options.disableDates = getDisabledExpr(that.options.disableDates);\n\n            that._templates();\n\n            that._selectable();\n\n            that._header();\n\n            that._viewWrapper();\n\n            if (that.options.hasFooter) {\n                that._footer(that.footer);\n            } else {\n                that._today = that.element.find('.k-calendar-nav-today');\n                that._toggle();\n            }\n\n            id = element\n                .addClass(\"k-calendar k-calendar-md \" + (options.weekNumber ? \" k-week-number\" : \"\"))\n                .on(MOUSEENTER_WITH_NS + \" \" + MOUSELEAVE, CELLSELECTOR, mousetoggle)\n                .on(KEYDOWN_NS, \"table.k-calendar-table\", that._move.bind(that))\n                .on(CLICK + \" touchend\", CELLSELECTORVALID, function(e) {\n                    var link = e.currentTarget.firstChild,\n                        value = toDateObject(link);\n\n                    if ($(link).data(\"href\").indexOf(\"#\") != -1) {\n                        e.preventDefault();\n                    }\n\n                    if (that._view.name == \"month\" && that.options.disableDates(value)) {\n                        return;\n                    }\n                    if (that._view.name != \"month\" || that._isSingleSelection()) {\n                            that._click($(link));\n                    }\n                })\n                .on(\"mouseup\" + ns, \"table.k-calendar-table, .k-calendar-footer\", function() {\n                    that._focusView(that.options.focusOnNav !== false);\n                })\n                .attr(ID);\n\n            if (that.options.weekNumber) {\n                element.on(CLICK, WEEKCOLUMNSELECTOR, function(e) {\n                        var first = $(e.currentTarget).closest(\"tr\").find(CELLSELECTORVALID).first(),\n                            last = $(e.currentTarget).closest(\"tr\").find(CELLSELECTORVALID).last();\n\n                        if (that._isMultipleSelection()) {\n                            that.selectable._lastActive = last;\n                            that.selectable.selectRange(first, last);\n                            that.selectable.trigger(CHANGE, { event: e });\n                        }\n\n                        if (that._isRangeSelection()) {\n                            that.rangeSelectable._lastActive = last;\n                            that.rangeSelectable.range(first, last);\n                            that.rangeSelectable.change();\n                        }\n\n                        that._current = that._value = toDateObject(last.find(\"span\"));\n                        that._setCurrent(that._current);\n                });\n            }\n\n            normalize(options);\n            value = parse(options.value, options.format, options.culture);\n            that._selectDates = [];\n\n            that._index = views[options.start];\n\n            that._current = new DATE(+restrictValue(value, options.min, options.max));\n\n            that._addClassProxy = function() {\n                that._active = true;\n\n                if (that._cell.hasClass(DISABLED)) {\n                    var todayString = that._view.toDateString(getToday());\n                    that._cell = that._cellByDate(todayString);\n                }\n\n                that._cell.addClass(FOCUSED);\n            };\n\n            that._removeClassProxy = function() {\n                that._active = false;\n                if (that._cell) {\n                    that._cell.removeClass(FOCUSED);\n                }\n            };\n\n            that.value(value);\n\n            if (that._isMultipleSelection() && options.selectDates.length > 0) {\n                that.selectDates(options.selectDates);\n            }\n\n            that._range = options.range;\n\n            if (that._isRangeSelection()) {\n                that.selectRange(that._range);\n            }\n\n            kendo.notify(that);\n        },\n\n        options: {\n            name: \"Calendar\",\n            value: null,\n            min: new DATE(1900, 0, 1),\n            max: new DATE(2099, 11, 31),\n            dates: [],\n            disableDates: null,\n            allowReverse: false,\n            centuryCellsFormat: \"long\",\n            url: \"\",\n            culture: \"\",\n            footer: \"\",\n            format: \"\",\n            month: {},\n            weekNumber: false,\n            range: { start: null, end: null, target: START },\n            selectable: \"single\",\n            selectDates: [],\n            start: MONTH,\n            depth: MONTH,\n            size: \"medium\",\n            showOtherMonthDays: true,\n            animation: {\n                horizontal: {\n                    effects: SLIDE,\n                    reverse: true,\n                    duration: 500,\n                    divisor: 2\n                },\n                vertical: {\n                    effects: \"zoomIn\",\n                    duration: 400\n                }\n            },\n            messages: {\n                weekColumnHeader: \"\",\n                today: \"Today\",\n                navigateTo: \"Navigate to \",\n                parentViews: {\n                    month: \"year view\",\n                    year: \"decade view\",\n                    decade: \"century view\"\n                }\n            },\n            componentType: \"classic\"\n        },\n\n        events: [\n            CHANGE,\n            NAVIGATE\n        ],\n\n        componentTypes: {\n            \"classic\": {\n                header: {\n                    template: CLASSIC_HEADER_TEMPLATE\n                },\n                hasFooter: true,\n                linksSelector: \".k-button\",\n                contentClasses: \"k-calendar-table\"\n            },\n            \"modern\": {\n                header: {\n                    template: MODERN_HEADER_TEMPLATE\n                },\n                hasFooter: false,\n                linksSelector: \".k-button\",\n                contentClasses: \"k-calendar-table\"\n            }\n        },\n\n        setOptions: function(options) {\n            var that = this;\n\n            normalize(options);\n\n            options.disableDates = getDisabledExpr(options.disableDates);\n            that._destroySelectable();\n\n            if (options.messages) {\n                options.messages = $.extend({}, true, that.options.messages, options.messages);\n            }\n\n            Widget.fn.setOptions.call(that, options);\n\n            that._templates();\n\n            that._selectable();\n\n            that._viewWrapper();\n\n            if (that.options.hasFooter) {\n                that._footer(that.footer);\n            } else {\n                that.element.find(\".k-calendar-footer\").hide();\n                that._toggle();\n            }\n            that._index = views[that.options.start];\n\n            that.navigate();\n\n            if (options.weekNumber) {\n                that.element.addClass('k-week-number');\n            }\n        },\n\n        destroy: function() {\n            var that = this,\n            today = that._today;\n\n            that.element.off(ns);\n            that._title.off(ns);\n            that[PREVARROW].off(ns);\n            that[NEXTARROW].off(ns);\n            that._destroySelectable();\n            kendo.destroy(that._table);\n\n            if (today) {\n                kendo.destroy(today.off(ns));\n            }\n\n            Widget.fn.destroy.call(that);\n        },\n\n        current: function() {\n            return this._current;\n        },\n\n        view: function() {\n            return this._view;\n        },\n\n        focus: function(table) {\n            table = table || this._table;\n            this._bindTable(table);\n            table.trigger(\"focus\");\n        },\n\n        min: function(value) {\n            return this._option(MIN, value);\n        },\n\n        max: function(value) {\n            return this._option(\"max\", value);\n        },\n\n        navigateToPast: function() {\n            this._navigate(PREVARROW, -1);\n        },\n\n        navigateToFuture: function() {\n            this._navigate(NEXTARROW, 1);\n        },\n\n        navigateUp: function() {\n            var that = this,\n            index = that._index;\n\n            if (that._title.hasClass(DISABLED)) {\n                return;\n            }\n\n            that.navigate(that._current, ++index);\n        },\n\n        navigateDown: function(value) {\n            var that = this,\n            index = that._index,\n            depth = that.options.depth;\n\n            if (!value) {\n                return;\n            }\n\n            if (index === views[depth]) {\n                if (!isEqualDate(that._value, that._current) || !isEqualDate(that._value, value)) {\n                    that.value(value);\n                    that.trigger(CHANGE);\n                }\n                return;\n            }\n\n            that.navigate(value, --index);\n        },\n\n        navigate: function(value, view) {\n            view = isNaN(view) ? views[view] : view;\n\n            var that = this,\n                options = that.options,\n                culture = options.culture,\n                min = options.min,\n                max = options.max,\n                title = that._title,\n                from = that._table,\n                old = that._oldTable,\n                currentValue = that._current,\n                future = value && +value > +currentValue,\n                vertical = view !== undefined$1 && view !== that._index,\n                to, currentView, compare,\n                disabled,\n                viewWrapper = that.element.children(\".k-calendar-view\");\n\n            if (!value) {\n                value = currentValue;\n            }\n\n            that._current = value = new DATE(+restrictValue(value, min, max));\n\n            if (view === undefined$1) {\n                view = that._index;\n            } else {\n                that._index = view;\n            }\n\n            that._view = currentView = calendar.views[view];\n            compare = currentView.compare;\n\n            disabled = view === views[CENTURY];\n            title.toggleClass(DISABLED, disabled).attr(ARIA_DISABLED, disabled);\n\n            disabled = compare(value, min) < 1;\n            that[PREVARROW].toggleClass(DISABLED, disabled).attr(ARIA_DISABLED, disabled);\n\n            disabled = compare(value, max) > -1;\n            that[NEXTARROW].toggleClass(DISABLED, disabled).attr(ARIA_DISABLED, disabled);\n\n            if (from && old && old.data(\"animating\")) {\n                old.kendoStop(true, true);\n                from.kendoStop(true, true);\n            }\n\n            that._oldTable = from;\n\n            if (!from || that._changeView) {\n                title.html('<span class=\"k-button-text\">' + currentView.title(value, min, max, culture) + '</span>');\n\n                if (that.options.messages.parentViews && that._view.name !== CENTURY) {\n                    title.attr(\"title\", encode(that.options.messages.navigateTo + that.options.messages.parentViews[that._view.name]));\n                } else {\n                    title.removeAttr(\"title\");\n                }\n\n                that._table = to = $(currentView.content(extend({\n                    min: min,\n                    max: max,\n                    date: value,\n                    url: options.url,\n                    dates: options.dates,\n                    format: options.format,\n                    showOtherMonthDays: options.showOtherMonthDays,\n                    centuryCellsFormat: options.centuryCellsFormat,\n                    culture: culture,\n                    disableDates: options.disableDates,\n                    isWeekColumnVisible: options.weekNumber,\n                    messages: options.messages,\n                    contentClasses: that.options.contentClasses\n                }, that[currentView.name])));\n\n                that._aria();\n\n                var replace = from && from.data(\"start\") === to.data(\"start\");\n                that._animate({\n                    from: from,\n                    to: to,\n                    vertical: vertical,\n                    future: future,\n                    replace: replace\n                });\n\n                viewWrapper.removeClass(\"k-calendar-monthview k-calendar-yearview k-calendar-decadeview k-calendar-centuryview\");\n                viewWrapper.addClass(\"k-calendar-\" + currentView.name + \"view\");\n\n                that.trigger(NAVIGATE);\n\n                that._focus(value);\n            }\n\n            if (view === views[options.depth] && that._selectDates.length > 0) {\n                that._visualizeSelectedDatesInView();\n            }\n\n            if (that._isSingleSelection()) {\n                if (view === views[options.depth] && that._value && !that.options.disableDates(that._value)) {\n                    that._selectCell(that._value);\n                }\n            }\n\n            that._setCurrent(value);\n\n            if (!from && that._cell) {\n                that._cell.removeClass(FOCUSED);\n            }\n\n            that._changeView = true;\n        },\n\n        selectDates: function(dates) {\n            var that = this,\n                validSelectedDates,\n                datesUnique;\n\n            if (dates === undefined$1) {\n                return that._selectDates;\n            }\n\n            datesUnique = dates\n                .map(function(date) { return date.getTime(); })\n                .filter(function(date, position, array) {\n                    return array.indexOf(date) === position;\n                })\n                .map(function(time) { return new Date(time); });\n\n            validSelectedDates = $.grep(datesUnique, function(value) {\n                if (value) {\n                    return +that._validateValue(new Date(value.setHours(0, 0, 0, 0))) === +value;\n                }\n            });\n            that._selectDates = validSelectedDates.length > 0 ? validSelectedDates : (datesUnique.length === 0 ? datesUnique : that._selectDates);\n            that._visualizeSelectedDatesInView();\n        },\n\n        value: function(value) {\n            var that = this,\n                old = that._view,\n                view = that._view;\n\n            if (value === undefined$1) {\n                return that._value;\n            }\n\n            value = that._validateValue(value);\n            if (value && that._isMultipleSelection()) {\n                var date = new Date(+value);\n                date.setHours(0, 0, 0, 0);\n                that._selectDates = [date];\n                that.selectable._lastActive = null;\n            }\n\n            if (old && value === null && that._cell) {\n                that._cell.removeClass(SELECTED);\n            } else {\n                that._changeView = !value || view && view.compare(value, that._current) !== 0;\n                that.navigate(value);\n            }\n        },\n\n        isRtl: function() {\n            return kendo.support.isRtl(this.wrapper);\n        },\n\n        _aria: function() {\n            var table = this._table;\n\n            table.attr(\"aria-labelledby\", this._title.attr(\"id\"));\n\n            if (this._view.name === \"month\" && this._isMultipleSelection()) {\n                table.attr(\"aria-multiselectable\", \"true\");\n            }\n        },\n\n        _validateValue: function(value) {\n            var that = this,\n                options = that.options,\n                min = options.min,\n                max = options.max;\n\n            if (value === null) {\n                that._current = createDate(that._current.getFullYear(), that._current.getMonth(), that._current.getDate());\n            }\n\n            value = parse(value, options.format, options.culture);\n\n            if (value !== null) {\n                value = new DATE(+value);\n\n                if (!isInRange(value, min, max)) {\n                    value = null;\n                }\n            }\n\n            if (value === null || !that.options.disableDates(new Date(+value))) {\n                that._value = value;\n            } else if (that._value === undefined$1) {\n                that._value = null;\n            }\n\n            return that._value;\n        },\n\n        _visualizeSelectedDatesInView: function() {\n            var that = this;\n             var selectedDates = {};\n            $.each(that._selectDates, function(index, value) {\n                selectedDates[kendo.calendar.views[0].toDateString(value)] = value;\n            });\n            that.selectable.clear();\n             var cells = that._table\n                .find(CELLSELECTOR)\n                .filter(function(index, element) {\n                    return selectedDates[$(element.firstChild).attr(kendo.attr(VALUE))];\n                });\n            if (cells.length > 0) {\n                that.selectable._selectElement(cells, true);\n            }\n        },\n\n        _isSingleSelection: function() {\n            let selectable = this.options.selectable,\n            selectableOptions = Selectable.parseOptions(selectable);\n            return selectableOptions.single;\n        },\n\n        _isMultipleSelection: function() {\n            let selectable = this.options.selectable,\n            selectableOptions = Selectable.parseOptions(selectable);\n            return selectableOptions.multiple;\n        },\n\n        _isRangeSelection: function() {\n            let selectable = this.options.selectable,\n            selectableOptions = Selectable.parseOptions(selectable);\n            return selectableOptions.range;\n        },\n\n        _selectable: function() {\n            let that = this,\n                selectable = that.options.selectable,\n                selectableOptions = Selectable.parseOptions(selectable);\n\n            if (!that._isMultipleSelection() && !that._isRangeSelection()) {\n                return;\n            }\n\n            if (that.rangeSelectable) {\n                that.rangeSelectable.destroy();\n                that.rangeSelectable = null;\n            }\n\n            if (selectableOptions.range) {\n                that.rangeSelectable = new RangeSelectable(that.wrapper, {\n                    widget: that,\n                    filter: \".k-calendar-monthview table \" + CELLSELECTORVALID,\n                    cellSelector: CELLSELECTOR,\n                    cellSelectorValid: CELLSELECTORVALID,\n                    change: that._onSelect.bind(that),\n                    reverse: that.options.allowReverse,\n                    resetOnStart: true,\n                    ns: ns\n                });\n\n                that.element.addClass(\"k-calendar-range\");\n            } else {\n                that.selectable = new Selectable(that.wrapper, {\n                    aria: true,\n                    //excludes the anchor element\n                    inputSelectors: \"input,textarea,.k-multiselect-wrap,select,button,.k-button>span,.k-button>img,span.k-icon.k-i-caret-alt-down,span.k-icon.k-i-caret-alt-up,span.k-svg-icon.k-svg-i-caret-alt-down,span.k-svg-icon.k-svg-i-caret-alt-up\",\n                    multiple: selectableOptions.multiple,\n                    filter: \"table.k-calendar-table:eq(0) \" + CELLSELECTORVALID,\n                    change: that._onSelect.bind(that),\n                    relatedTarget: that._onRelatedTarget.bind(that)\n                });\n            }\n        },\n\n        _restoreSelection: function() {\n            const that = this;\n            let range;\n\n            that._preventChange = true;\n\n            if (that._isRangeSelection()) {\n                range = that.selectRange();\n\n                if (!range || !range.start) {\n                    that._preventChange = false;\n                    return;\n                }\n\n                that.selectRange(range);\n            }\n\n            that._preventChange = false;\n        },\n\n        selectRange: function(range) {\n            const that = this, view = that._view;\n            let startInRange, endInRange, visibleRange;\n\n            if (range === undefined$1) {\n                return that._range;\n            }\n\n            that._range = range;\n\n            if (!range.start) {\n                return;\n            }\n\n            visibleRange = that._visibleRange();\n\n            startInRange = that._dateInViews(range.start);\n            endInRange = range.end && that._dateInViews(range.end);\n\n            if (!startInRange && endInRange) {\n                that.rangeSelectable.selectTo(that._cellByDate(view.toDateString(range.end)));\n            }\n\n            if (startInRange && endInRange) {\n                that.rangeSelectable.range(that._cellByDate(view.toDateString(range.start)), that._cellByDate(view.toDateString(range.end)), false, that.options.allowReverse);\n            }\n\n            if (range.end && startInRange && !endInRange) {\n                that.rangeSelectable.selectFrom(that._cellByDate(view.toDateString(range.start)));\n            }\n\n            if (!range.end && startInRange) {\n                that.rangeSelectable.start(that._cellByDate(view.toDateString(range.start)));\n            }\n\n            if (+visibleRange.start > +range.start && +visibleRange.end < +range.end) {\n                that.rangeSelectable.mid(that.element.find(CELLSELECTORVALID));\n            }\n        },\n\n        _onRelatedTarget: function(target) {\n            var that = this;\n\n            if (that.selectable.options.multiple && target.is(CELLSELECTORVALID)) {\n                that._current = toDateObject(target.find(\"span\"));\n                that._setCurrent(that._current);\n            }\n\n        },\n\n        _onSelect: function(e) {\n            let that = this,\n                eventArgs = e,\n                range,\n                useEnd = e.sender._useEnd,\n                useStart = e.sender._useStart,\n                initialRange,\n                start,\n                end,\n                value,\n                target,\n                selectableOptions = Selectable.parseOptions(that.options.selectable);\n\n            if (that._isRangeSelection()) {\n                range = e.sender.range();\n                initialRange = that.selectRange() || {};\n                target = initialRange.target;\n                if (range.start && range.start.length) {\n                    start = toDateObject(range.start.find(\"span\"));\n                }\n\n                if (range.end && range.end.length) {\n                    end = toDateObject(range.end.find(\"span\"));\n                }\n\n                if (target === END) {\n                    target = START;\n                } else {\n                    target = END;\n                }\n\n                that._range = { start: useStart ? initialRange.start : start, end: useEnd ? initialRange.end : end, target: target };\n\n                if (!that._preventChange) {\n                    that.trigger(CHANGE);\n                }\n\n                value = end || start;\n\n                if (end && !that._dateInViews(end)) {\n                    value = start;\n                }\n\n                that.selectRange(that._range);\n                that.value(value);\n                return;\n            }\n\n            if (!selectableOptions.multiple) {\n                if ($(eventArgs.event.currentTarget).is(\"td\") && !$(eventArgs.event.currentTarget).hasClass(\"k-selected\")) {\n                    $(eventArgs.event.currentTarget).addClass(\"k-selected\");\n                }\n                else {\n                    that._click($(eventArgs.event.currentTarget).find(\"span\"));\n                }\n                return;\n            }\n\n            if (eventArgs.event.ctrlKey || eventArgs.event.metaKey) {\n                if ($(eventArgs.event.currentTarget).is(CELLSELECTORVALID)) {\n                    that._toggleSelection($(eventArgs.event.currentTarget));\n                }\n                else {\n                    that._cellsBySelector(CELLSELECTORVALID).each(function(index, element) {\n                        var value = toDateObject($(element).find(\"span\"));\n                        that._deselect(value);\n                    });\n                    that._addSelectedCellsToArray();\n                }\n            }\n            else if (eventArgs.event.shiftKey) {\n                that._rangeSelection(that._cell);\n            }\n            else if ($(eventArgs.event.currentTarget).is(CELLSELECTOR)) {\n                that.value(toDateObject($(eventArgs.event.currentTarget).find(\"span\")));\n            }\n            else {\n                that._selectDates = [];\n                that._addSelectedCellsToArray();\n            }\n             that.trigger(CHANGE);\n        },\n\n        _destroySelectable: function() {\n            var that = this;\n\n            if (that.selectable) {\n                that.selectable.destroy();\n                that.selectable = null;\n            }\n\n            if (that.rangeSelectable) {\n                that.rangeSelectable.destroy();\n                that.rangeSelectable = null;\n            }\n        },\n\n        //when ctrl key is clicked\n        _toggleSelection: function(currentCell) {\n            var that = this,\n                date = toDateObject(currentCell.find(\"span\"));\n                if (currentCell.hasClass(\"k-selected\")) {\n                    that._selectDates.push(date);\n                }\n                else {\n                    that._deselect(date);\n                }\n        },\n\n        //shift selection\n        _rangeSelection: function(toDateCell, startDate) {\n            var that = this,\n                fromDate = startDate || toDateObject(that.selectable.value().first().find(\"span\")),\n                toDate = toDateObject(toDateCell.find(\"span\")),\n                daysDifference;\n\n            if (that.selectable._lastActive || that._value) {\n                fromDate = that.selectable._lastActive ? toDateObject(that.selectable._lastActive.find(\"span\")) : new Date(+that._value);\n            } else {\n                that.selectable._lastActive = startDate ? that._cellByDate(that._view.toDateString(startDate), CELLSELECTORVALID) : that.selectable.value().first();\n            }\n\n            that._selectDates = [];\n            daysDifference = daysBetweenTwoDates(fromDate, toDate);\n            addDaysToArray(that._selectDates, daysDifference, fromDate, that.options.disableDates);\n\n            that._visualizeSelectedDatesInView();\n        },\n\n        _visibleRange: function() {\n            let table = this.element.find(DOT + CALENDAR_VIEW + EMPTY + TABLE),\n                firstDateInView = toDateObject(table.first().find(CELLSELECTOR).first().find(\"span\")),\n                lastDateInView = toDateObject(table.last().find(CELLSELECTOR).last().find(\"span\"));\n            return { start: firstDateInView, end: lastDateInView };\n        },\n\n        _cellsBySelector: function(selector) {\n            var that = this;\n            return that._table.find(selector);\n        },\n\n        _addSelectedCellsToArray: function() {\n            var that = this;\n            that.selectable.value().each(function(index, item) {\n                var date = toDateObject($(item.firstChild));\n                if (!that.options.disableDates(date)) {\n                    that._selectDates.push(date);\n                }\n            });\n        },\n\n         _deselect: function(date) {\n            var that = this;\n             var currentDateIndex = that._selectDates.map(Number).indexOf(+date);\n            if (currentDateIndex != -1) {\n                that._selectDates.splice(currentDateIndex, 1);\n            }\n        },\n\n        _dateInView: function(date) {\n            var that = this,\n                firstDateInView = toDateObject(that._cellsBySelector(CELLSELECTORVALID).first().find(\"span\")),\n                lastDateInView = toDateObject(that._cellsBySelector(CELLSELECTORVALID).last().find(\"span\"));\n\n            return +date <= +lastDateInView && +date >= +firstDateInView;\n        },\n\n        _isNavigatable: function(currentValue, cellIndex) {\n            var that = this;\n            var isDisabled = that.options.disableDates;\n            var cell;\n            var index;\n\n            if (that._view.name == \"month\") {\n                return !isDisabled(currentValue);\n            } else {\n                index = that.wrapper.find(\".\" + FOCUSED).index();\n                cell = that.wrapper.find(\".k-calendar-table td\").eq(index + cellIndex);\n                return cell.is(CELLSELECTORVALID) || !isDisabled(currentValue);\n            }\n        },\n\n        _dateInViews: function(date) {\n            let that = this,\n                tables = that.element.find(\".k-calendar-view table\"),\n                firstDateInView = toDateObject(tables.first().find(CELLSELECTOR).first().find(\"span\")),\n                lastDateInView = toDateObject(tables.last().find(CELLSELECTOR).last().find(\"span\"));\n\n            date = new Date(date.toDateString());\n\n            return +date <= +lastDateInView && +date >= +firstDateInView;\n        },\n\n        _move: function(e) {\n            var that = this,\n                options = that.options,\n                key = e.keyCode,\n                view = that._view,\n                index = that._index,\n                min = that.options.min,\n                max = that.options.max,\n                currentValue = new DATE(+that._current),\n                isRtl = that.isRtl(),\n                isDisabled = that.options.disableDates,\n                value, prevent, method, temp, cell, focusedCell, lastActive;\n\n            if (e.target === that._table[0]) {\n                that._active = true;\n            }\n\n            if (key == keys.RIGHT && !isRtl || key == keys.LEFT && isRtl) {\n                value = 1;\n                prevent = true;\n            } else if (key == keys.LEFT && !isRtl || key == keys.RIGHT && isRtl) {\n                value = -1;\n                prevent = true;\n            } else if (key == keys.UP) {\n                value = index === 0 ? -7 : -4;\n                prevent = true;\n            } else if (key == keys.DOWN) {\n                value = index === 0 ? 7 : 4;\n                prevent = true;\n            } else if (key == keys.SPACEBAR) {\n                value = 0;\n                prevent = true;\n            } else if (key == keys.HOME || key == keys.END) {\n                method = key == keys.HOME ? \"first\" : \"last\";\n                temp = view[method](currentValue);\n                currentValue = new DATE(temp.getFullYear(), temp.getMonth(), temp.getDate(), currentValue.getHours(), currentValue.getMinutes(), currentValue.getSeconds(), currentValue.getMilliseconds());\n                currentValue.setFullYear(temp.getFullYear());\n                prevent = true;\n            } else if (key === 84) {\n                that._todayClick(e);\n                prevent = true;\n            }\n\n            if (e.ctrlKey || e.metaKey) {\n                if (key == keys.RIGHT && !isRtl || key == keys.LEFT && isRtl) {\n                    that.navigateToFuture();\n                    prevent = true;\n                } else if (key == keys.LEFT && !isRtl || key == keys.RIGHT && isRtl) {\n                    that.navigateToPast();\n                    prevent = true;\n                } else if (key == keys.UP) {\n                    that.navigateUp();\n                    prevent = true;\n                } else if (key == keys.DOWN) {\n                    that._click($(that._cell[0].firstChild));\n                    prevent = true;\n                }\n                  else if ((key == keys.ENTER || key == keys.SPACEBAR) && that._isMultipleSelection()) {\n                    that._keyboardToggleSelection(e);\n\n                    var focusedDate = toDateObject($(that._cell[0]).find(\"span\"));\n                    that._setCurrent(focusedDate);\n\n                }\n            } else if (e.shiftKey) {\n                if (value !== undefined$1 || method) {\n                    if (!method) {\n                        view.setDate(currentValue, value);\n                    }\n\n                    if (!isInRange(currentValue, min, max)) {\n                        currentValue = restrictValue(currentValue, options.min, options.max);\n                    }\n\n                    if (isDisabled(currentValue)) {\n                        currentValue = that._nextNavigatable(currentValue, value);\n                    }\n\n                    min = createDate(min.getFullYear(), min.getMonth(), min.getDate());\n                    if (that._isMultipleSelection()) {\n                        that._keyboardRangeSelection(e, currentValue);\n                    } else if (that._isRangeSelection()) {\n                        if (!that._dateInViews(currentValue)) {\n                            if (value > 0) {\n                                that.navigateToFuture();\n                            } else {\n                                that.navigateToPast();\n                            }\n                        }\n                    } else {\n                        that._focus(currentValue);\n                    }\n                }\n\n                if (that.rangeSelectable) {\n                    cell = that._cellByDate(view.toDateString(currentValue));\n                    lastActive = toDateObject((that.rangeSelectable._lastActive || focusedCell).find(\"span\"));\n                    if (!that._dateInViews(lastActive)) {\n                        if (+lastActive > +currentValue) {\n                            that.rangeSelectable._end = that.rangeSelectable._lastActive;\n                            that.rangeSelectable.selectFrom(cell);\n                        } else {\n                            that.rangeSelectable.selectTo(cell);\n                        }\n                    } else {\n                        if (that.rangeSelectable._end && that.rangeSelectable._end.is(\".\" + FOCUSED)) {\n                            that.rangeSelectable._lastActive = that.rangeSelectable._start;\n                        } else {\n                            that.rangeSelectable._lastActive = that._cellByDate(view.toDateString(lastActive));\n                        }\n                        that.rangeSelectable.range(that.rangeSelectable._lastActive, cell);\n                    }\n                    that.rangeSelectable.change();\n                    that._setCurrent(currentValue);\n                }\n            } else {\n                if (key == keys.ENTER || key == keys.SPACEBAR) {\n                    if (view.name == \"month\" && that._isMultipleSelection()) {\n                        that.value(toDateObject($(that._cell.find(\"span\"))));\n                        that.selectable._lastActive = $(that._cell[0]);\n                        that.trigger(CHANGE);\n                    } else if (that.rangeSelectable) {\n                        that.rangeSelectable.change();\n                    } else {\n                        that._click($(that._cell[0].firstChild));\n                    }\n                    prevent = true;\n                } else if (key == keys.PAGEUP) {\n                    prevent = true;\n                    that.navigateToPast();\n                } else if (key == keys.PAGEDOWN) {\n                    prevent = true;\n                    that.navigateToFuture();\n                }\n\n                if (value || method) {\n                    if (!method) {\n                        view.setDate(currentValue, value);\n                    }\n\n                    min = createDate(min.getFullYear(), min.getMonth(), min.getDate());\n\n                    if (!isInRange(currentValue, min, max)) {\n                        currentValue = restrictValue(currentValue, options.min, options.max);\n                    }\n\n                    if (!that._isNavigatable(currentValue, value)) {\n                        currentValue = that._nextNavigatable(currentValue, value);\n                    }\n\n                    if (that._isMultipleSelection()) {\n                        if (!that._dateInView(currentValue)) {\n                            that.navigate(currentValue);\n                        }\n                        else {\n                            that._current = currentValue;\n                            that._setCurrent(currentValue);\n                        }\n                    }\n                    else {\n                        that._focus(currentValue);\n                    }\n                }\n            }\n\n            if (prevent) {\n                e.preventDefault();\n            }\n\n            return that._current;\n        },\n\n        _keyboardRangeSelection: function(event, currentValue) {\n            var that = this,\n                fromDate,\n                daysDifference;\n\n            if (!that._dateInView(currentValue)) {\n                that._selectDates = [];\n\n                fromDate = that.selectable._lastActive ? toDateObject(that.selectable._lastActive.find(\"span\")) : currentValue;\n                daysDifference = daysBetweenTwoDates(fromDate, new Date(+currentValue));\n\n                addDaysToArray(that._selectDates, daysDifference, fromDate, that.options.disableDates);\n\n                that.navigate(currentValue);\n                that._current = currentValue;\n                that.selectable._lastActive = that.selectable._lastActive || that._cellByDate(that._view.toDateString(currentValue), CELLSELECTORVALID);\n                that.trigger(CHANGE);\n                return;\n            }\n            that.selectable.options.filter = that.wrapper.find(\"table\").length > 1 && +currentValue > +that._current ? \"table.k-calendar-table:eq(1) \" + CELLSELECTORVALID : \"table.k-calendar-table:eq(0) \" + CELLSELECTORVALID;\n            that._setCurrent(currentValue);\n            that._current = currentValue;\n\n            that._rangeSelection(that._cellByDate(that._view.toDateString(currentValue), CELLSELECTORVALID), currentValue);\n\n            that.trigger(CHANGE);\n\n            that.selectable.options.filter = \"table.k-calendar-table:eq(0) \" + CELLSELECTORVALID;\n        },\n\n        _keyboardToggleSelection: function(event) {\n            var that = this;\n\n            event.currentTarget = that._cell[0];\n            that.selectable._lastActive = $(that._cell[0]);\n\n            if ($(that._cell[0]).hasClass(SELECTED)) {\n                that.selectable._unselect($(that._cell[0]));\n            }\n            else {\n                that.selectable.value($(that._cell[0]));\n            }\n            that.selectable.trigger(CHANGE, { event: event });\n        },\n\n        _nextNavigatable: function(currentValue, value) {\n            var that = this,\n            disabled = true,\n            view = that._view,\n            min = that.options.min,\n            max = that.options.max,\n            isDisabled = that.options.disableDates,\n            navigatableDate = new Date(currentValue.getTime());\n\n            view.setDate(navigatableDate, -value);\n\n            while (disabled) {\n                view.setDate(currentValue, value);\n\n                if (!isInRange(currentValue, min, max)) {\n                    currentValue = navigatableDate;\n                    break;\n                }\n                disabled = isDisabled(currentValue);\n            }\n            return currentValue;\n        },\n\n        _animate: function(options) {\n            var that = this;\n            var from = options.from;\n            var to = options.to;\n            var active = that._active;\n            var viewWrapper = that.element.children(\".k-calendar-view\");\n\n            if (!from) {\n                viewWrapper.append(to);\n                that._bindTable(to);\n            } else if (from.parent().data(\"animating\")) {\n                from.off(ns);\n                from.parent().kendoStop(true, true).remove();\n                from.remove();\n\n                viewWrapper.append(to);\n                that._focusView(active);\n            } else if (!from.is(\":visible\") || that.options.animation === false || options.replace) {\n                to.insertAfter(from);\n                from.off(ns).remove();\n\n                that._focusView(active);\n            } else {\n                that[options.vertical ? \"_vertical\" : \"_horizontal\"](from, to, options.future);\n            }\n        },\n\n        _horizontal: function(from, to, future) {\n            var that = this,\n                active = that._active,\n                horizontal = that.options.animation.horizontal,\n                effects = horizontal.effects,\n                viewWidth = outerWidth(from),\n                margin = (outerWidth(from, true) - viewWidth);\n\n            if (effects && effects.indexOf(SLIDE) != -1) {\n                from.add(to).css({ width: viewWidth });\n\n                from.wrap(\"<div/>\");\n\n                that._focusView(active, from);\n\n                from.parent()\n                .css({\n                    position: \"relative\",\n                    width: (viewWidth * 2) + (2 * margin),\n                    display: \"flex\",\n                    [future ? \"margin-right\" : \"margin-left\"]: (-viewWidth - margin)\n                });\n\n                to[future ? \"insertAfter\" : \"insertBefore\"](from);\n\n                extend(horizontal, {\n                    effects: SLIDE + \":\" + (future ? \"right\" : LEFT),\n                    complete: function() {\n                        from.off(ns).remove();\n                        that._oldTable = null;\n\n                        to.unwrap();\n\n                        that._focusView(active);\n\n                    }\n                });\n\n                from.parent().kendoStop(true, true).kendoAnimate(horizontal);\n            }\n        },\n\n        _vertical: function(from, to) {\n            var that = this,\n                vertical = that.options.animation.vertical,\n                effects = vertical.effects,\n                active = that._active, //active state before from's blur\n                cell, position;\n\n            if (effects && effects.indexOf(\"zoom\") != -1) {\n                to.insertBefore(from);\n\n                from.css({\n                    position: \"absolute\",\n                    width: to.width()\n                });\n\n                if (transitionOrigin) {\n                    cell = that._cellByDate(that._view.toDateString(that._current));\n                    position = cell.position();\n                    position = (position.left + parseInt(cell.width() / 2, 10)) + \"px\" + \" \" + (position.top + parseInt(cell.height() / 2, 10) + \"px\");\n                    to.css(transitionOrigin, position);\n                }\n\n                from.kendoStop(true, true).kendoAnimate({\n                    effects: \"fadeOut\",\n                    duration: 600,\n                    complete: function() {\n                        from.off(ns).remove();\n                        that._oldTable = null;\n\n                        that._focusView(active);\n                    }\n                });\n\n                to.kendoStop(true, true).kendoAnimate(vertical);\n            }\n        },\n\n        _cellByDate: function(value, selector) {\n            return this._table.find(selector ? selector : \"td:not(.\" + OTHERMONTH + \")\")\n            .filter(function() {\n                return $(this.firstChild).attr(kendo.attr(VALUE)) === value;\n            });\n        },\n\n        _selectCell: function(date) {\n            var that = this,\n                cell = that._selectedCell,\n                value = that._view.toDateString(date);\n\n                if (cell && cell[0]) {\n                    cell[0].removeAttribute(ARIA_SELECTED);\n                    cell.removeClass(SELECTED);\n                }\n\n                cell = that._cellByDate(value, CELLSELECTOR);\n\n                that._selectedCell = cell;\n                cell.addClass(SELECTED)\n                    .attr(ARIA_SELECTED, true);\n        },\n\n        _setCurrent: function(date) {\n            var that = this,\n                id = kendo.guid(),\n                cell = that._cell,\n                value = that._view.toDateString(date);\n\n                if (cell && cell[0]) {\n                    cell.removeClass(FOCUSED);\n                    cell[0].removeAttribute(ARIA_LABEL);\n                    cell[0].removeAttribute(ID);\n                }\n\n                cell = that._cellByDate(value, that._isMultipleSelection() ? CELLSELECTOR : \"td:not(.\" + OTHERMONTH + \")\");\n\n                that._cell = cell;\n\n                cell.attr(ID, id)\n                    .addClass(FOCUSED);\n\n                if (that._table[0]) {\n                    that._table[0].removeAttribute(\"aria-activedescendant\");\n                    that._table.attr(\"aria-activedescendant\", id);\n                }\n        },\n\n        _bindTable: function(table) {\n            table\n            .on(FOCUS_WITH_NS, this._addClassProxy)\n            .on(BLUR, this._removeClassProxy);\n        },\n\n        _click: function(link) {\n            var that = this,\n            options = that.options,\n            currentValue = new Date(+that._current),\n            value = toDateObject(link);\n\n            adjustDST(value, 0);\n\n            if (that._view.name == \"month\" && that.options.disableDates(value)) {\n                value = that._value;\n            }\n\n            that._view.setDate(currentValue, value);\n\n            that.navigateDown(restrictValue(currentValue, options.min, options.max));\n        },\n\n        _focus: function(value) {\n            var that = this,\n            view = that._view;\n\n            if (view.compare(value, that._current) !== 0) {\n                that.navigate(value);\n            } else {\n                that._current = value;\n                that._setCurrent(value);\n            }\n        },\n\n        _focusView: function(active, table) {\n            if (active) {\n                this.focus(table);\n            }\n        },\n\n        _viewWrapper: function() {\n            var that = this;\n            var element = that.element;\n            var viewWrapper = element.children(\".k-calendar-view\");\n\n            if (!viewWrapper[0]) {\n                viewWrapper = $(\"<div class='k-calendar-view k-align-items-start k-justify-content-center k-hstack' />\").insertAfter(element.find(HEADERSELECTOR));\n            }\n        },\n\n        _footer: function(template) {\n            var that = this,\n            today = getToday(),\n            element = that.element,\n            footer = element.find(\".k-calendar-footer\");\n\n            if (!template) {\n                that._toggle(false);\n                footer.hide();\n                return;\n            }\n\n            if (!footer[0]) {\n                footer = $(`<div class=\"k-calendar-footer\">\n                    <button tabindex=\"-1\" class=\"k-calendar-nav-today k-flex k-button k-button-md k-button-flat k-button-flat-primary k-rounded-md\" role=\"link\">\n                        <span class=\"k-button-text\"></span>\n                    </button>\n                </div>`).appendTo(element);\n            }\n\n            that._today = footer.show()\n                .find(\".k-button-flat-primary\")\n                .attr(\"title\", kendo.toString(today, \"D\", that.options.culture));\n\n            footer.find(\".k-button-text\")\n                .html(template(today));\n\n            that._toggle();\n        },\n\n        _header: function() {\n            var that = this,\n            element = that.element,\n            linksSelector = that.options.linksSelector;\n\n            if (!element.find(HEADERSELECTOR)[0]) {\n                element.html(kendo.template(that.options.header.template)($.extend(true,{}, that.options, {\n                    actionAttr: kendo.attr(\"action\"),\n                    size: kendo.getValidCssClass(\"k-button-\", \"size\", that.options.size),\n                    isRtl: that.isRtl()\n                })));\n            }\n\n            element.find(linksSelector)\n                .on(CLICK + \" touchend\" + ns, function() { return false; } );\n\n            that._title = element.find('[' + kendo.attr(\"action\") + '=\"nav-up\"]').on(CLICK + \" touchend\" + ns, function() {\n                that._active = that.options.focusOnNav !== false;\n                that.navigateUp();\n            });\n            that[PREVARROW] = element.find('[' + kendo.attr(\"action\") + '=\"prev\"]').on(CLICK + \" touchend\" + ns, function() {\n                that._active = that.options.focusOnNav !== false;\n                that.navigateToPast();\n            });\n            that[NEXTARROW] = element.find('[' + kendo.attr(\"action\") + '=\"next\"]').on(CLICK + \" touchend\" + ns, function() {\n                that._active = that.options.focusOnNav !== false;\n                that.navigateToFuture();\n            });\n            element.find('[' + kendo.attr(\"action\") + '=\"today\"]').on(CLICK + \" touchend\" + ns, that._todayClick.bind(that));\n\n        },\n\n        _navigate: function(arrow, modifier) {\n            var that = this,\n            index = that._index + 1,\n            currentValue = new DATE(+that._current);\n\n            if (that._isMultipleSelection()) {\n                var firstDayCurrentMonth = that._table.find(\"td:not(.\" + OTHERMONTH + \"):not(.\" + EMPTYCELL + \")\").has(\".k-link\").first();\n                currentValue = toDateObject(firstDayCurrentMonth.find(\"span\"));\n                that._current = new Date(+currentValue);\n            }\n\n            arrow = that[arrow];\n\n            if (!arrow.hasClass(DISABLED)) {\n                if (index > 3) {\n                    currentValue.setFullYear(currentValue.getFullYear() + 100 * modifier);\n                } else {\n                    calendar.views[index].setDate(currentValue, modifier);\n                }\n\n                that.navigate(currentValue);\n                that._restoreSelection();\n            }\n        },\n\n        _option: function(option, value) {\n            var that = this,\n                options = that.options,\n                currentValue = that._value || that._current,\n                isBigger;\n\n            if (value === undefined$1) {\n                return options[option];\n            }\n\n            value = parse(value, options.format, options.culture);\n\n            if (!value) {\n                return;\n            }\n\n            options[option] = new DATE(+value);\n\n            if (option === MIN) {\n                isBigger = value > currentValue;\n            } else {\n                isBigger = currentValue > value;\n            }\n\n            if (isBigger || isEqualMonth(currentValue, value)) {\n                if (isBigger) {\n                    that._value = null;\n                }\n                that._changeView = true;\n            }\n\n            if (!that._changeView) {\n                that._changeView = !!(options.month.content || options.month.empty);\n            }\n\n            that.navigate(that._value);\n\n            that._toggle();\n        },\n\n        _toggle: function(toggle) {\n            var that = this,\n                options = that.options,\n                isTodayDisabled = that.options.disableDates(getToday()),\n                link = that._today,\n                todayClass = that._todayClass();\n\n            if (toggle === undefined$1) {\n                toggle = isInRange(getToday(), options.min, options.max);\n            }\n\n            if (link) {\n                link.off(CLICK);\n\n                if (toggle && !isTodayDisabled) {\n                    link.addClass(todayClass)\n                    .removeClass(DISABLED)\n                    .on(CLICK, that._todayClick.bind(that));\n                } else {\n                    link.removeClass(todayClass)\n                    .addClass(DISABLED)\n                    .on(CLICK, prevent);\n                }\n            }\n        },\n\n        _todayClass: function() {\n            return TODAY;\n        },\n\n        _todayClick: function(e) {\n            var that = this,\n            depth = views[that.options.depth],\n            disabled = that.options.disableDates,\n            today = getToday();\n\n            e.preventDefault();\n\n            if (disabled(today)) {\n                return;\n            }\n\n            if (that._view.compare(that._current, today) === 0 && that._index == depth) {\n                that._changeView = false;\n            }\n\n            if (that._isMultipleSelection()) {\n                that._selectDates = [today];\n                that.selectable._lastActive = null;\n            }\n\n            that._value = today;\n            that.navigate(today, depth);\n\n            that.trigger(CHANGE);\n        },\n\n        _templates: function() {\n            var that = this,\n                options = that.options,\n                footer = options.footer,\n                month = options.month,\n                content = month.content,\n                weekNumber = month.weekNumber,\n                empty = month.empty,\n                footerTemplate = (data) => `${kendo.toString(data,\"D\",options.culture)}`;\n\n            that.month = {\n                content: (data) => `<td class=\"${data.cssClass}\" role=\"gridcell\"><span tabindex=\"-1\" class=\"k-link ${data.linkClass}\" data-href=\"${data.url}\" ${kendo.attr(VALUE)}=\"${data.dateString}\" title=\"${data.title}\">${executeTemplate(content, data) || data.value}</span></td>`,\n                empty: (data) => `<td role=\"gridcell\">${executeTemplate(empty, data) || \"&nbsp;\"}</td>`,\n                weekNumber: (data) => `<td class=\"k-calendar-td k-alt\">${executeTemplate(weekNumber, data) || data.weekNumber}</td>`\n            };\n\n            that.year = {\n                content: template((data) => `<td class=\"${data.cssClass}\" role=\"gridcell\"><span tabindex=\"-1\" class=\"k-link\" data-href=\"#\" data-${data.ns}value=\"${data.dateString}\" aria-label=\"${data.label}\">${data.value}</span></td>`)\n            };\n\n            if (footer && footer !== true) {\n                footerTemplate = footer;\n            }\n\n            that.footer = footer !== false ? template(footerTemplate, { useWithBlock: false }) : null;\n        },\n\n        _updateAria: function(ariaTemplate, date) {\n            var that = this;\n            var cell = that._cell;\n            var valueType = that.view().valueType();\n            var current = date || that.current();\n            var text;\n\n            if (valueType === \"month\") {\n                text = kendo.toString(current, \"MMMM\");\n            } else if (valueType === \"date\") {\n                text = kendo.toString(current, \"D\");\n            } else {\n                text = cell.text();\n            }\n\n            cell.attr(\"aria-label\", ariaTemplate({ current: current, valueType: valueType, text: text }));\n\n            return cell.attr(\"id\");\n        }\n    });\n\n    ui.plugin(Calendar);\n\n    var calendar = {\n        firstDayOfMonth: function(date) {\n            return createDate(\n                date.getFullYear(),\n                date.getMonth(),\n                1\n            );\n        },\n\n        firstVisibleDay: function(date, calendarInfo) {\n            calendarInfo = calendarInfo || kendo.culture().calendar;\n\n            var firstDay = calendarInfo.firstDay,\n            firstVisibleDay = new DATE(date.getFullYear(), date.getMonth(), 1, date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n            firstVisibleDay.setFullYear(date.getFullYear());\n\n            while (firstVisibleDay.getDay() != firstDay) {\n                calendar.setTime(firstVisibleDay, -1 * MS_PER_DAY);\n            }\n\n            return firstVisibleDay;\n        },\n\n        setTime: function(date, time) {\n            var tzOffsetBefore = date.getTimezoneOffset(),\n            resultDATE = new DATE(date.getTime() + time),\n            tzOffsetDiff = resultDATE.getTimezoneOffset() - tzOffsetBefore;\n\n            date.setTime(resultDATE.getTime() + tzOffsetDiff * MS_PER_MINUTE);\n        },\n        views: [{\n            name: MONTH,\n            title: function(date, min, max, culture) {\n                return getCalendarInfo(culture).months.names[date.getMonth()] + \" \" + date.getFullYear();\n            },\n            content: function(options) {\n                var that = this,\n                    idx = 0,\n                    min = options.min,\n                    max = options.max,\n                    date = options.date,\n                    dates = options.dates,\n                    format = options.format,\n                    culture = options.culture,\n                    navigateUrl = options.url,\n                    showHeader = options.showHeader,\n                    showOtherMonthDays = options.showOtherMonthDays,\n                    isWeekColumnVisible = options.isWeekColumnVisible,\n                    hasUrl = navigateUrl && dates[0],\n                    currentCalendar = getCalendarInfo(culture),\n                    firstDayIdx = currentCalendar.firstDay,\n                    days = currentCalendar.days,\n                    names = shiftArray(days.names, firstDayIdx),\n                    shortNames = shiftArray(days.namesShort, firstDayIdx),\n                    start = calendar.firstVisibleDay(date, currentCalendar),\n                    firstDayOfMonth = that.first(date),\n                    lastDayOfMonth = that.last(date),\n                    toDateString = that.toDateString,\n                    today = getToday(),\n                    contentClasses = options.contentClasses,\n                    html = '<table tabindex=\"0\" role=\"grid\" class=\"' + contentClasses + '\" cellspacing=\"0\" data-start=\"' + toDateString(start) + '\">';\n\n                if (showHeader) {\n                    html += '<caption class=\"k-calendar-caption k-month-header\">' + this.title(date, min, max, culture) + '</caption>';\n                }\n\n                html += '<thead class=\"k-calendar-thead\"><tr role=\"row\" class=\"k-calendar-tr\">';\n\n                if (isWeekColumnVisible) {\n                    html += '<th scope=\"col\" class=\"k-calendar-th k-alt\">' + encode(options.messages.weekColumnHeader) + '</th>';\n                }\n\n                for (; idx < 7; idx++) {\n                    html += '<th scope=\"col\" class=\"k-calendar-th\" aria-label=\"' + names[idx] + '\">' + shortNames[idx] + '</th>';\n                }\n\n                adjustDST(today, 0);\n                today = +today;\n\n                return view({\n                    cells: 42,\n                    perRow: 7,\n                    html: html += '</tr></thead><tbody class=\"k-calendar-tbody\"><tr role=\"row\" class=\"k-calendar-tr\">',\n                    start: createDate(start.getFullYear(), start.getMonth(), start.getDate()),\n                    isWeekColumnVisible: isWeekColumnVisible,\n                    weekNumber: options.weekNumber,\n                    min: createDate(min.getFullYear(), min.getMonth(), min.getDate()),\n                    max: createDate(max.getFullYear(), max.getMonth(), max.getDate()),\n                    showOtherMonthDays: showOtherMonthDays,\n                    content: options.content,\n                    lastDayOfMonth: lastDayOfMonth,\n                    empty: options.empty,\n                    setter: that.setDate,\n                    disableDates: options.disableDates,\n                    build: function(date, idx, disableDates) {\n                        var cssClass = [ \"k-calendar-td\" ],\n                            day = date.getDay(),\n                            linkClass = \"\",\n                            url = \"#\";\n\n                        if (date < firstDayOfMonth || date > lastDayOfMonth) {\n                            cssClass.push(OTHERMONTH);\n                        }\n\n                        if (disableDates(date)) {\n                            cssClass.push(DISABLED);\n                        }\n\n                        if (+date === today) {\n                            cssClass.push(\"k-today\");\n                        }\n\n                        if (day === 0 || day === 6) {\n                            cssClass.push(\"k-weekend\");\n                        }\n\n                        if (hasUrl && inArray(+date, dates)) {\n                            url = navigateUrl.replace(\"{0}\", kendo.toString(date, format, culture));\n                            linkClass = \" k-action-link\";\n                        }\n\n                        return {\n                            date: date,\n                            dates: dates,\n                            ns: kendo.ns,\n                            title: kendo.toString(date, \"D\", culture),\n                            value: date.getDate(),\n                            dateString: toDateString(date),\n                            cssClass: cssClass.join(\" \"),\n                            linkClass: linkClass,\n                            url: url\n                        };\n                    },\n                    weekNumberBuild: function(date) {\n                        return {\n                            weekNumber: weekInYear(date, kendo.culture().calendar.firstDay),\n                            currentDate: date\n                        };\n                    }\n                });\n            },\n            first: function(date) {\n                return calendar.firstDayOfMonth(date);\n            },\n            last: function(date) {\n                var last = createDate(date.getFullYear(), date.getMonth() + 1, 0),\n                first = calendar.firstDayOfMonth(date),\n                timeOffset = Math.abs(last.getTimezoneOffset() - first.getTimezoneOffset());\n\n                if (timeOffset) {\n                    last.setHours(first.getHours() + (timeOffset / 60));\n                }\n\n                return last;\n            },\n            compare: function(date1, date2) {\n                var result,\n                month1 = date1.getMonth(),\n                year1 = date1.getFullYear(),\n                month2 = date2.getMonth(),\n                year2 = date2.getFullYear();\n\n                if (year1 > year2) {\n                    result = 1;\n                } else if (year1 < year2) {\n                    result = -1;\n                } else {\n                    result = month1 == month2 ? 0 : month1 > month2 ? 1 : -1;\n                }\n\n                return result;\n            },\n            setDate: function(date, value) {\n                var hours = date.getHours();\n                if (value instanceof DATE) {\n                    date.setFullYear(value.getFullYear(), value.getMonth(), value.getDate());\n                } else {\n                    calendar.setTime(date, value * MS_PER_DAY);\n                }\n                adjustDST(date, hours);\n            },\n            toDateString: function(date) {\n                return date.getFullYear() + \"/\" + date.getMonth() + \"/\" + date.getDate();\n            },\n            valueType: function() {\n                return \"date\";\n            }\n        },\n        {\n            name: \"year\",\n            title: function(date) {\n                return date.getFullYear();\n            },\n            content: function(options) {\n                var calendarMonths = getCalendarInfo(options.culture).months,\n                    namesAbbr = calendarMonths.namesAbbr,\n                    namesFull = calendarMonths.names,\n                    toDateString = this.toDateString,\n                    min = options.min,\n                    max = options.max,\n                    html = \"\";\n\n                if (options.showHeader) {\n                    html += '<table tabindex=\"0\" role=\"grid\" class=\"k-calendar-table\" cellspacing=\"0\">';\n                        html += '<caption class=\"k-calendar-caption k-meta-header\">';\n                            html += this.title(options.date);\n                        html += '</caption>';\n                        html += '<tbody class=\"k-calendar-tbody\">';\n                            html += '<tr role=\"row\" class=\"k-calendar-tr\">';\n                }\n\n                return view({\n                    min: createDate(min.getFullYear(), min.getMonth(), 1),\n                    max: createDate(max.getFullYear(), max.getMonth(), 1),\n                    start: createDate(options.date.getFullYear(), 0, 1),\n                    html: html,\n                    setter: this.setDate,\n                    content: options.content,\n                    build: function(date) {\n                        var cssClass = [ \"k-calendar-td\" ];\n\n                        return {\n                            value: namesAbbr[date.getMonth()],\n                            label: namesFull[date.getMonth()],\n                            ns: kendo.ns,\n                            dateString: toDateString(date),\n                            cssClass: cssClass.join(\" \")\n                        };\n                    }\n                });\n            },\n            first: function(date) {\n                return createDate(date.getFullYear(), 0, date.getDate());\n            },\n            last: function(date) {\n                return createDate(date.getFullYear(), 11, date.getDate());\n            },\n            compare: function(date1, date2) {\n                return compare(date1, date2);\n            },\n            setDate: function(date, value) {\n                var month,\n                hours = date.getHours();\n\n                if (value instanceof DATE) {\n                    month = value.getMonth();\n\n                    date.setFullYear(value.getFullYear(), month, date.getDate());\n\n                    if (month !== date.getMonth()) {\n                        date.setDate(0);\n                    }\n                } else {\n                    month = date.getMonth() + value;\n\n                    date.setMonth(month);\n\n                    if (month > 11) {\n                        month -= 12;\n                    }\n\n                    if (month > 0 && date.getMonth() != month) {\n                        date.setDate(0);\n                    }\n                }\n\n                adjustDST(date, hours);\n            },\n            toDateString: function(date) {\n                return date.getFullYear() + \"/\" + date.getMonth() + \"/1\";\n            },\n            valueType: function() {\n                return \"month\";\n            }\n        },\n        {\n            name: \"decade\",\n            title: function(date, min, max) {\n                return title(date, min, max, 10);\n            },\n            content: function(options) {\n                var year = options.date.getFullYear(),\n                toDateString = this.toDateString,\n                html = \"\";\n\n                if (options.showHeader) {\n                    html += '<table tabindex=\"0\" role=\"grid\" class=\"k-calendar-table\" cellspacing=\"0\">';\n                        html += '<caption class=\"k-meta-header\">';\n                            html += this.title(options.date, options.min, options.max);\n                        html += '</caption>';\n                        html += '<tbody class=\"k-calendar-thead\">';\n                            html += '<tr role=\"row\" class=\"k-calendar-tr\">';\n                }\n\n                return view({\n                    start: createDate(year - year % 10, 0, 1),\n                    min: createDate(options.min.getFullYear(), 0, 1),\n                    max: createDate(options.max.getFullYear(), 0, 1),\n                    showOtherMonthDays: options.showOtherMonthDays,\n                    html: html,\n                    setter: this.setDate,\n                    build: function(date, idx) {\n                        var cssClass = [ \"k-calendar-td\" ];\n\n                        if (idx === 10 || idx === 11) {\n                            cssClass.push(EMPTYCELL);\n                        }\n\n                        return {\n                            value: date.getFullYear(),\n                            ns: kendo.ns,\n                            dateString: toDateString(date),\n                            cssClass: cssClass.join(\" \")\n                        };\n                    }\n                });\n            },\n            first: function(date) {\n                var year = date.getFullYear();\n                return createDate(year - year % 10, date.getMonth(), date.getDate());\n            },\n            last: function(date) {\n                var year = date.getFullYear();\n                return createDate(year - year % 10 + 9, date.getMonth(), date.getDate());\n            },\n            compare: function(date1, date2) {\n                return compare(date1, date2, 10);\n            },\n            setDate: function(date, value) {\n                setDate(date, value, 1);\n            },\n            toDateString: function(date) {\n                return date.getFullYear() + \"/0/1\";\n            },\n            valueType: function() {\n                return \"year\";\n            }\n        },\n        {\n            name: CENTURY,\n            title: function(date, min, max) {\n                return title(date, min, max, 100);\n            },\n            content: function(options) {\n                var year = options.date.getFullYear(),\n                min = options.min.getFullYear(),\n                max = options.max.getFullYear(),\n                toDateString = this.toDateString,\n                minYear = min,\n                maxYear = max,\n                html = \"\";\n\n                minYear = minYear - minYear % 10;\n                maxYear = maxYear - maxYear % 10;\n\n                if (maxYear - minYear < 10) {\n                    maxYear = minYear + 9;\n                }\n\n                if (options.showHeader) {\n                    html += '<table tabindex=\"0\" role=\"grid\" class=\"k-calendar-table\" cellspacing=\"0\">';\n                        html += '<caption class=\"k-calendar-caption k-meta-header\">';\n                            html += this.title(options.date, options.min, options.max);\n                        html += '</caption>';\n                        html += '<tbody class=\"k-calendar-tbody\">';\n                            html += '<tr role=\"row\" class=\"k-calendar-tr\">';\n                }\n\n                return view({\n                    start: createDate(year - year % 100, 0, 1),\n                    min: createDate(minYear, 0, 1),\n                    max: createDate(maxYear, 0, 1),\n                    showOtherMonthDays: options.showOtherMonthDays,\n                    html: html,\n                    setter: this.setDate,\n                    build: function(date, idx) {\n                        var cssClass = [ \"k-calendar-td\" ];\n                        var start = date.getFullYear(),\n                            end = start + 9;\n\n                        if (idx === 10 || idx === 11) {\n                            cssClass.push(EMPTYCELL);\n                        }\n\n                        if (start < min) {\n                            start = min;\n                        }\n\n                        if (end > max) {\n                            end = max;\n                        }\n\n                        return {\n                            ns: kendo.ns,\n                            value: options.centuryCellsFormat === \"long\" ? `${start} - ${end}` : start,\n                            dateString: toDateString(date),\n                            cssClass: cssClass.join(\" \")\n                        };\n                    }\n                });\n            },\n            first: function(date) {\n                var year = date.getFullYear();\n                return createDate(year - year % 100, date.getMonth(), date.getDate());\n            },\n            last: function(date) {\n                var year = date.getFullYear();\n                return createDate(year - year % 100 + 99, date.getMonth(), date.getDate());\n            },\n            compare: function(date1, date2) {\n                return compare(date1, date2, 100);\n            },\n            setDate: function(date, value) {\n                setDate(date, value, 10);\n            },\n            toDateString: function(date) {\n                var year = date.getFullYear();\n                return (year - year % 10) + \"/0/1\";\n            },\n            valueType: function() {\n                return \"decade\";\n            }\n        }]\n    };\n\n    function title(date, min, max, modular) {\n        var start = date.getFullYear(),\n            minYear = min.getFullYear(),\n            maxYear = max.getFullYear(),\n            end;\n\n        start = start - start % modular;\n        end = start + (modular - 1);\n\n        if (start < minYear) {\n            start = minYear;\n        }\n        if (end > maxYear) {\n            end = maxYear;\n        }\n\n        return start + \"-\" + end;\n    }\n\n    function view(options) {\n        var idx = 0,\n            data,\n            min = options.min,\n            max = options.max,\n            start = options.start,\n            setter = options.setter,\n            build = options.build,\n            weekNumberBuild = options.weekNumberBuild,\n            length = options.cells || 12,\n            isWeekColumnVisible = options.isWeekColumnVisible,\n            cellsPerRow = options.perRow || 4,\n            showOtherMonthDays = options.showOtherMonthDays,\n            lastDayOfMonth = options.lastDayOfMonth,\n            weekNumber = options.weekNumber || weekNumberTemplate,\n            content = options.content || cellTemplate,\n            empty = options.empty || emptyCellTemplate,\n            otherMonthTemplate = options.otherMonthCellTemplate || otherMonthCellTemplate,\n            html = options.html || '<table tabindex=\"0\" role=\"grid\" class=\"k-calendar-table\" cellspacing=\"0\"><tbody class=\"k-calendar-tbody\"><tr role=\"row\" class=\"k-calendar-tr\">';\n\n        if (isWeekColumnVisible) {\n            html += weekNumber(weekNumberBuild(start));\n        }\n\n\n        for (; idx < length; idx++) {\n            if (idx > 0 && idx % cellsPerRow === 0) {\n                html += '</tr><tr role=\"row\" class=\"k-calendar-tr\">';\n                if (isWeekColumnVisible) {\n                    html += showOtherMonthDays || (+start <= +lastDayOfMonth) ? weekNumber(weekNumberBuild(start)) : weekNumber({ weekNumber: \"&nbsp;\" });\n                }\n            }\n\n            start = createDate(start.getFullYear(), start.getMonth(), start.getDate());\n            adjustDST(start, 0);\n\n            data = build(start, idx, options.disableDates);\n\n            if (data.cssClass.indexOf(OTHERMONTH) !== -1 && !showOtherMonthDays) {\n                html += otherMonthTemplate(data);\n            } else {\n                if (isInRange(start, min, max) && data.cssClass.indexOf(EMPTYCELL) === -1) {\n                    html += content(data);\n                } else {\n                    html += empty(data);\n                }\n            }\n\n            setter(start, 1);\n        }\n\n        return html + \"</tr></tbody></table>\";\n    }\n\n    function compare(date1, date2, modifier) {\n        var year1 = date1.getFullYear(),\n            start = date2.getFullYear(),\n            end = start,\n            result = 0;\n\n        if (modifier) {\n            start = start - start % modifier;\n            end = start - start % modifier + modifier - 1;\n        }\n\n        if (year1 > end) {\n            result = 1;\n        } else if (year1 < start) {\n            result = -1;\n        }\n\n        return result;\n    }\n\n    function getToday() {\n        var today = new DATE();\n        return new DATE(today.getFullYear(), today.getMonth(), today.getDate());\n    }\n\n    function restrictValue(value, min, max) {\n        var today = getToday();\n\n        if (value) {\n            today = new DATE(+value);\n        }\n\n        if (min > today) {\n            today = new DATE(+min);\n        } else if (max < today) {\n            today = new DATE(+max);\n        }\n        return today;\n    }\n\n    function isInRange(date, min, max) {\n        return +date >= +min && +date <= +max;\n    }\n\n    function shiftArray(array, idx) {\n        return array.slice(idx).concat(array.slice(0, idx));\n    }\n\n    function setDate(date, value, multiplier) {\n        value = value instanceof DATE ? value.getFullYear() : date.getFullYear() + multiplier * value;\n        date.setFullYear(value);\n    }\n\n    function daysBetweenTwoDates(startDate, endDate) {\n        if (+endDate < +startDate) {\n            var temp = +startDate;\n            calendar.views[0].setDate(startDate, endDate);\n            calendar.views[0].setDate(endDate, new Date(temp));\n        }\n        var fromDateUTC = Date.UTC(startDate.getFullYear(), startDate.getMonth(), startDate.getDate());\n        var endDateUTC = Date.UTC(endDate.getFullYear(), endDate.getMonth(), endDate.getDate());\n\n        return Math.ceil((+endDateUTC - +fromDateUTC) / kendo.date.MS_PER_DAY);\n    }\n\n    function addDaysToArray(array, numberOfDays, fromDate, disableDates) {\n        for (var i = 0; i <= numberOfDays; i++) {\n            var nextDay = new Date(fromDate.getTime());\n            nextDay = new Date(nextDay.setDate(nextDay.getDate() + i));\n            if (!disableDates(nextDay)) {\n                array.push(nextDay);\n            }\n        }\n    }\n\n    function mousetoggle(e) {\n        var disabled = $(this).hasClass(\"k-disabled\");\n\n        if (!disabled) {\n            $(this).toggleClass(HOVER, MOUSEENTER.indexOf(e.type) > -1 || e.type == FOCUS);\n        }\n    }\n\n    function prevent(e) {\n        e.preventDefault();\n    }\n\n    // creates date with full year\n    function createDate(year, month, date) {\n        var dateObject = new DATE(year, month, date);\n        dateObject.setFullYear(year, month, date);\n        return dateObject;\n    }\n\n    function getCalendarInfo(culture) {\n        return getCulture(culture).calendars.standard;\n    }\n\n    function normalize(options) {\n        var start = views[options.start],\n            depth = views[options.depth],\n            culture = getCulture(options.culture);\n\n        options.format = extractFormat(options.format || culture.calendars.standard.patterns.d);\n\n        if (isNaN(start)) {\n            start = 0;\n            options.start = MONTH;\n        }\n\n        if (depth === undefined$1 || depth > start) {\n            options.depth = MONTH;\n        }\n\n        if (options.dates === null) {\n            options.dates = [];\n        }\n    }\n\n    function inArray(date, dates) {\n        for (var i = 0, length = dates.length; i < length; i++) {\n            if (date === +dates[i]) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    function isEqualDatePart(value1, value2) {\n        if (value1) {\n            return value1.getFullYear() === value2.getFullYear() &&\n                value1.getMonth() === value2.getMonth() &&\n                value1.getDate() === value2.getDate();\n        }\n\n        return false;\n    }\n\n    function isEqualMonth(value1, value2) {\n        if (value1) {\n            return value1.getFullYear() === value2.getFullYear() &&\n                value1.getMonth() === value2.getMonth();\n        }\n\n        return false;\n    }\n\n\n    function getDisabledExpr(option) {\n        if (kendo.isFunction(option)) {\n            return option;\n        }\n\n        if (Array.isArray(option)) {\n            return createDisabledExpr(option);\n        }\n        return $.noop;\n    }\n\n    function convertDatesArray(dates) {\n        var result = [];\n        for (var i = 0; i < dates.length; i++) {\n            result.push(dates[i].setHours(0, 0, 0, 0));\n        }\n        return result;\n    }\n\n    function createDisabledExpr(dates) {\n        var callback,\n            disabledDates = [],\n            days = [\"su\", \"mo\", \"tu\", \"we\", \"th\", \"fr\", \"sa\"];\n\n        if (dates[0] instanceof DATE) {\n            disabledDates = convertDatesArray(dates);\n            callback = (date) => !!(date && disabledDates.indexOf((new Date(date)).setHours(0, 0, 0, 0)) > -1);\n        } else {\n            disabledDates = dates.map(day => {\n                day = day.slice(0,2).toLowerCase();\n                let index = days.indexOf(day);\n                if (index > -1) {\n                    return index;\n                }\n            });\n\n            callback = (date) => !!(date && disabledDates.indexOf((new Date(date)).getDay()) > -1);\n        }\n\n        return callback;\n    }\n\n    function isEqualDate(oldValue, newValue) {\n       if (oldValue instanceof Date && newValue instanceof Date) {\n           oldValue = oldValue.getTime();\n           newValue = newValue.getTime();\n       }\n\n       return oldValue === newValue;\n    }\n\n    function toDateObject(link) {\n        var value = $(link).attr(kendo.attr(VALUE)).split(\"/\");\n        //Safari cannot create correctly date from \"1/1/2090\"\n        value = createDate(value[0], value[1], value[2]);\n\n        return value;\n    }\n\n    // Backwards compatibility after CSP changes.\n    function executeTemplate(tmpl, data) {\n        if (tmpl) {\n            if (kendo.isFunction(tmpl)) {\n                return tmpl(data);\n            }\n            return template(tmpl)(data);\n        }\n        return undefined$1;\n    }\n\n    calendar.isEqualDatePart = isEqualDatePart;\n    calendar.isEqualDate = isEqualDate;\n    calendar.restrictValue = restrictValue;\n    calendar.isInRange = isInRange;\n    calendar.normalize = normalize;\n    calendar.viewsEnum = views;\n    calendar.disabled = getDisabledExpr;\n    calendar.toDateObject = toDateObject;\n    calendar.getToday = getToday;\n    calendar.createDate = createDate;\n\n    kendo.calendar = calendar;\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.calendar.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.color.js":
/*!*******************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.color.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n/***********************************************************************\n * WARNING: this file is auto-generated.  If you change it directly,\n * your modifications will eventually be lost.  The source code is in\n * `kendo-drawing` repository, you should make your changes there and\n * run `src-modules/sync.sh` in this repository.\n */\n/* eslint-disable space-before-blocks, space-before-function-paren, no-multi-spaces */\n\n    var __meta__ = {\n        id: \"color\",\n        name: \"Color utils\",\n        category: \"framework\",\n        advanced: true,\n        description: \"Color utilities used across components\",\n        depends: [ \"core\" ]\n    };\n\n__webpack_provided_window_dot_kendo = __webpack_provided_window_dot_kendo || {};\n\nvar Class = kendo.Class;\nvar support = kendo.support;\n\nvar namedColors = {\n    aliceblue: \"f0f8ff\", antiquewhite: \"faebd7\", aqua: \"00ffff\",\n    aquamarine: \"7fffd4\", azure: \"f0ffff\", beige: \"f5f5dc\",\n    bisque: \"ffe4c4\", black: \"000000\", blanchedalmond: \"ffebcd\",\n    blue: \"0000ff\", blueviolet: \"8a2be2\", brown: \"a52a2a\",\n    burlywood: \"deb887\", cadetblue: \"5f9ea0\", chartreuse: \"7fff00\",\n    chocolate: \"d2691e\", coral: \"ff7f50\", cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\", crimson: \"dc143c\", cyan: \"00ffff\",\n    darkblue: \"00008b\", darkcyan: \"008b8b\", darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\", darkgrey: \"a9a9a9\", darkgreen: \"006400\",\n    darkkhaki: \"bdb76b\", darkmagenta: \"8b008b\", darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\", darkorchid: \"9932cc\", darkred: \"8b0000\",\n    darksalmon: \"e9967a\", darkseagreen: \"8fbc8f\", darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\", darkslategrey: \"2f4f4f\", darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\", deeppink: \"ff1493\", deepskyblue: \"00bfff\",\n    dimgray: \"696969\", dimgrey: \"696969\", dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\", floralwhite: \"fffaf0\", forestgreen: \"228b22\",\n    fuchsia: \"ff00ff\", gainsboro: \"dcdcdc\", ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\", goldenrod: \"daa520\", gray: \"808080\",\n    grey: \"808080\", green: \"008000\", greenyellow: \"adff2f\",\n    honeydew: \"f0fff0\", hotpink: \"ff69b4\", indianred: \"cd5c5c\",\n    indigo: \"4b0082\", ivory: \"fffff0\", khaki: \"f0e68c\",\n    lavender: \"e6e6fa\", lavenderblush: \"fff0f5\", lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\", lightblue: \"add8e6\", lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\", lightgoldenrodyellow: \"fafad2\", lightgray: \"d3d3d3\",\n    lightgrey: \"d3d3d3\", lightgreen: \"90ee90\", lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\", lightseagreen: \"20b2aa\", lightskyblue: \"87cefa\",\n    lightslategray: \"778899\", lightslategrey: \"778899\", lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\", lime: \"00ff00\", limegreen: \"32cd32\",\n    linen: \"faf0e6\", magenta: \"ff00ff\", maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\", mediumblue: \"0000cd\", mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370d8\", mediumseagreen: \"3cb371\", mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\", mediumturquoise: \"48d1cc\", mediumvioletred: \"c71585\",\n    midnightblue: \"191970\", mintcream: \"f5fffa\", mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\", navajowhite: \"ffdead\", navy: \"000080\",\n    oldlace: \"fdf5e6\", olive: \"808000\", olivedrab: \"6b8e23\",\n    orange: \"ffa500\", orangered: \"ff4500\", orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\", palegreen: \"98fb98\", paleturquoise: \"afeeee\",\n    palevioletred: \"d87093\", papayawhip: \"ffefd5\", peachpuff: \"ffdab9\",\n    peru: \"cd853f\", pink: \"ffc0cb\", plum: \"dda0dd\",\n    powderblue: \"b0e0e6\", purple: \"800080\", red: \"ff0000\",\n    rosybrown: \"bc8f8f\", royalblue: \"4169e1\", saddlebrown: \"8b4513\",\n    salmon: \"fa8072\", sandybrown: \"f4a460\", seagreen: \"2e8b57\",\n    seashell: \"fff5ee\", sienna: \"a0522d\", silver: \"c0c0c0\",\n    skyblue: \"87ceeb\", slateblue: \"6a5acd\", slategray: \"708090\",\n    slategrey: \"708090\", snow: \"fffafa\", springgreen: \"00ff7f\",\n    steelblue: \"4682b4\", tan: \"d2b48c\", teal: \"008080\",\n    thistle: \"d8bfd8\", tomato: \"ff6347\", turquoise: \"40e0d0\",\n    violet: \"ee82ee\", wheat: \"f5deb3\", white: \"ffffff\",\n    whitesmoke: \"f5f5f5\", yellow: \"ffff00\", yellowgreen: \"9acd32\"\n};\n\nvar browser = support.browser;\n\nvar matchNamedColor = function (color) {\n    var colorNames = Object.keys(namedColors);\n    colorNames.push(\"transparent\");\n\n    var regexp = new RegExp(\"^(\" + colorNames.join(\"|\") + \")(\\\\W|$)\", \"i\");\n    matchNamedColor = function (color) { return regexp.exec(color); };\n\n    return regexp.exec(color);\n};\n\nvar BaseColor = Class.extend({\n    init: function() {  },\n\n    toHSV: function() { return this; },\n\n    toRGB: function() { return this; },\n\n    toHex: function(options) { return this.toBytes().toHex(options); },\n\n    toBytes: function() { return this; },\n\n    toCss: function(options) { return \"#\" + this.toHex(options); },\n\n    toCssRgba: function() {\n        var rgb = this.toBytes();\n        return (\"rgba(\" + (rgb.r) + \", \" + (rgb.g) + \", \" + (rgb.b) + \", \" + (parseFloat((Number(this.a)).toFixed(3))) + \")\");\n    },\n\n    toDisplay: function() {\n        if (browser.msie && browser.version < 9) {\n            return this.toCss(); // no RGBA support; does it support any opacity in colors?\n        }\n        return this.toCssRgba();\n    },\n\n    equals: function(c) {\n        return c === this || ((c !== null && c !== undefined) && this.toCssRgba() === parseColor(c).toCssRgba());\n    },\n\n    diff: function(other) {\n        if (other === null) {\n            return NaN;\n        }\n\n        var c1 = this.toBytes();\n        var c2 = other.toBytes();\n\n        return Math.sqrt(Math.pow((c1.r - c2.r) * 0.30, 2) +\n                         Math.pow((c1.g - c2.g) * 0.59, 2) +\n                         Math.pow((c1.b - c2.b) * 0.11, 2));\n    },\n\n    clone: function() {\n        var c = this.toBytes();\n        if (c === this) {\n            c = new Bytes(c.r, c.g, c.b, c.a);\n        }\n\n        return c;\n    }\n});\n\nvar RGB = BaseColor.extend({\n    init: function(r, g, b, a) {\n        BaseColor.fn.init.call(this);\n\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    },\n\n    toHSV: function() {\n        var ref = this;\n        var r = ref.r;\n        var g = ref.g;\n        var b = ref.b;\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n        var delta = max - min;\n        var v = max;\n        var h, s;\n\n        if (delta === 0) {\n            return new HSV(0, 0, v, this.a);\n        }\n\n        if (max !== 0) {\n            s = delta / max;\n            if (r === max) {\n                h = (g - b) / delta;\n            } else if (g === max) {\n                h = 2 + (b - r) / delta;\n            } else {\n                h = 4 + (r - g) / delta;\n            }\n\n            h *= 60;\n            if (h < 0) {\n                h += 360;\n            }\n        } else {\n            s = 0;\n            h = -1;\n        }\n\n        return new HSV(h, s, v, this.a);\n    },\n\n    toHSL: function() {\n        var ref = this;\n        var r = ref.r;\n        var g = ref.g;\n        var b = ref.b;\n        var max = Math.max(r, g, b);\n        var min = Math.min(r, g, b);\n        var h, s, l = (max + min) / 2;\n\n        if (max === min) {\n            h = s = 0;\n        } else {\n            var d = max - min;\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n            switch (max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n            default: break;\n            }\n        }\n\n        return new HSL(h * 60, s * 100, l * 100, this.a);\n    },\n\n    toBytes: function() {\n        return new Bytes(this.r * 255, this.g * 255, this.b * 255, this.a);\n    }\n});\n\nvar Bytes = RGB.extend({\n    init: function(r, g, b, a) {\n        RGB.fn.init.call(this, Math.round(r), Math.round(g), Math.round(b), a);\n    },\n\n    toRGB: function() {\n        return new RGB(this.r / 255, this.g / 255, this.b / 255, this.a);\n    },\n\n    toHSV: function() {\n        return this.toRGB().toHSV();\n    },\n\n    toHSL: function() {\n        return this.toRGB().toHSL();\n    },\n\n    toHex: function(options) {\n        var value = hex(this.r, 2) + hex(this.g, 2) + hex(this.b, 2);\n\n        if (options && options.alpha) {\n            value += hex(Math.round(this.a * 255), 2);\n        }\n\n        return value;\n    },\n\n    toBytes: function() {\n        return this;\n    }\n});\n\nfunction hex(n, width, pad) {\n    if (pad === void 0) { pad = \"0\"; }\n\n    var result = n.toString(16);\n    while (width > result.length) {\n        result = pad + result;\n    }\n\n    return result;\n}\n\nvar HSV = BaseColor.extend({\n    init: function(h, s, v, a) {\n        BaseColor.fn.init.call(this);\n\n        this.h = h;\n        this.s = s;\n        this.v = v;\n        this.a = a;\n    },\n\n    toRGB: function() {\n        var ref = this;\n        var h = ref.h;\n        var s = ref.s;\n        var v = ref.v;\n        var r, g, b;\n\n        if (s === 0) {\n            r = g = b = v;\n        } else {\n            h /= 60;\n\n            var i = Math.floor(h);\n            var f = h - i;\n            var p = v * (1 - s);\n            var q = v * (1 - s * f);\n            var t = v * (1 - s * (1 - f));\n\n            switch (i) {\n            case 0: r = v; g = t; b = p; break;\n            case 1: r = q; g = v; b = p; break;\n            case 2: r = p; g = v; b = t; break;\n            case 3: r = p; g = q; b = v; break;\n            case 4: r = t; g = p; b = v; break;\n            default: r = v; g = p; b = q; break;\n            }\n        }\n\n        return new RGB(r, g, b, this.a);\n    },\n\n    toHSL: function() {\n        return this.toRGB().toHSL();\n    },\n\n    toBytes: function() {\n        return this.toRGB().toBytes();\n    }\n});\n\nvar HSL = BaseColor.extend({\n    init: function(h, s, l, a) {\n        BaseColor.fn.init.call(this);\n\n        this.h = h;\n        this.s = s;\n        this.l = l;\n        this.a = a;\n    },\n\n    toRGB: function() {\n        var h = this.h / 360;\n        var s = this.s / 100;\n        var l = this.l / 100;\n        var r, g, b;\n\n        if (s === 0) {\n            r = g = b = l; // achromatic\n        } else {\n            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n            var p = 2 * l - q;\n            r = hue2rgb(p, q, h + 1 / 3);\n            g = hue2rgb(p, q, h);\n            b = hue2rgb(p, q, h - 1 / 3);\n        }\n\n        return new RGB(r, g, b, this.a);\n    },\n\n    toHSV: function() {\n        return this.toRGB().toHSV();\n    },\n\n    toBytes: function() {\n        return this.toRGB().toBytes();\n    }\n});\n\nfunction hue2rgb(p, q, s) {\n    var t = s;\n\n    if (t < 0) {\n        t += 1;\n    }\n\n    if (t > 1) {\n        t -= 1;\n    }\n\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n\n    if (t < 1 / 2) {\n        return q;\n    }\n\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n\n    return p;\n}\n\nfunction alphaFromHex(a) {\n    return parseFloat(parseFloat(parseInt(a, 16) / 255 ).toFixed(3));\n}\n\nfunction parseColor(value, safe) {\n    var m, ret;\n\n    if (value == null || value === \"none\" || value == \"\") {\n        return null;\n    }\n\n    if (value instanceof BaseColor) {\n        return value;\n    }\n\n    var color = value.toLowerCase();\n    if ((m = matchNamedColor(color))) {\n        if (m[1] === \"transparent\") {\n            color = new RGB(1, 1, 1, 0);\n        } else {\n            color = parseColor(namedColors[m[1]], safe);\n        }\n        color.match = [ m[1] ];\n        return color;\n    }\n    if ((m = /^#?([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})\\b/i.exec(color))) {\n        ret = new Bytes(parseInt(m[1], 16),\n            parseInt(m[2], 16),\n            parseInt(m[3], 16), 1);\n    } else if ((m = /^#?([0-9a-f])([0-9a-f])([0-9a-f])\\b/i.exec(color))) {\n        ret = new Bytes(parseInt(m[1] + m[1], 16),\n            parseInt(m[2] + m[2], 16),\n            parseInt(m[3] + m[3], 16), 1);\n    } else if ((m = /^#?([0-9a-f])([0-9a-f])([0-9a-f])([0-9a-f])\\b/i.exec(color))) { // Parse 4 digit hex color\n        ret = new Bytes(parseInt(m[1] + m[1], 16),\n            parseInt(m[2] + m[2], 16),\n            parseInt(m[3] + m[3], 16),\n            alphaFromHex(m[4] + m[4]));\n    } else if ((m = /^#?([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})\\b/i.exec(color))) { // Parse 8 digit hex color\n        ret = new Bytes(parseInt(m[1], 16),\n            parseInt(m[2], 16),\n            parseInt(m[3], 16),\n            alphaFromHex(m[4]));\n    } else if ((m = /^rgb\\(\\s*([0-9]+)\\s*,\\s*([0-9]+)\\s*,\\s*([0-9]+)\\s*\\)/.exec(color))) {\n        ret = new Bytes(parseInt(m[1], 10),\n            parseInt(m[2], 10),\n            parseInt(m[3], 10), 1);\n    } else if ((m = /^rgba\\(\\s*([0-9]+)\\s*,\\s*([0-9]+)\\s*,\\s*([0-9]+)\\s*,\\s*([0-9.]+)\\s*\\)/.exec(color))) {\n        ret = new Bytes(parseInt(m[1], 10),\n            parseInt(m[2], 10),\n            parseInt(m[3], 10), parseFloat(m[4]));\n    } else if ((m = /^rgb\\(\\s*([0-9]*\\.?[0-9]+)%\\s*,\\s*([0-9]*\\.?[0-9]+)%\\s*,\\s*([0-9]*\\.?[0-9]+)%\\s*\\)/.exec(color))) {\n        ret = new RGB(parseFloat(m[1]) / 100,\n            parseFloat(m[2]) / 100,\n            parseFloat(m[3]) / 100, 1);\n    } else if ((m = /^rgba\\(\\s*([0-9]*\\.?[0-9]+)%\\s*,\\s*([0-9]*\\.?[0-9]+)%\\s*,\\s*([0-9]*\\.?[0-9]+)%\\s*,\\s*([0-9.]+)\\s*\\)/.exec(color))) {\n        ret = new RGB(parseFloat(m[1]) / 100,\n            parseFloat(m[2]) / 100,\n            parseFloat(m[3]) / 100, parseFloat(m[4]));\n    } else if ((m = /^color\\(\\s*srgb\\s*([0-9]*\\.?[0-9]+)\\s+([0-9]*\\.?[0-9]+)\\s+([0-9]*\\.?[0-9]+)\\s*(\\/\\s+([0-9]*\\.?[0-9]+))?\\)/.exec(color))) {\n        ret = new RGB(\n            parseFloat(m[1]),\n            parseFloat(m[2]),\n            parseFloat(m[3]),\n            parseFloat(m[5] || '1'));\n    }\n\n    if (ret) {\n        ret.match = m;\n    } else if (!safe) {\n        throw new Error(\"Cannot parse color: \" + color);\n    }\n\n    return ret;\n}\n\nvar DARK_TRESHOLD = 180;\n\nvar Color = Class.extend({\n    init: function(value) {\n        var this$1$1 = this;\n\n        if (arguments.length === 1) {\n            var formats = Color.formats;\n            var resolvedColor = this.resolveColor(value);\n\n            for (var idx = 0; idx < formats.length; idx++) {\n                var formatRegex = formats[idx].re;\n                var processor = formats[idx].process;\n                var parts = formatRegex.exec(resolvedColor);\n\n                if (parts) {\n                    var channels = processor(parts);\n                    this$1$1.r = channels[0];\n                    this$1$1.g = channels[1];\n                    this$1$1.b = channels[2];\n                }\n            }\n        } else {\n            this.r = arguments[0];\n            this.g = arguments[1];\n            this.b = arguments[2];\n        }\n\n        this.r = this.normalizeByte(this.r);\n        this.g = this.normalizeByte(this.g);\n        this.b = this.normalizeByte(this.b);\n    },\n\n    toHex: function() {\n        var pad = this.padDigit;\n        var r = this.r.toString(16);\n        var g = this.g.toString(16);\n        var b = this.b.toString(16);\n\n        return \"#\" + pad(r) + pad(g) + pad(b);\n    },\n\n    resolveColor: function(value) {\n        var color = value || \"black\";\n\n        if (color.charAt(0) === \"#\") {\n            color = color.substr(1, 6);\n        }\n\n        color = color.replace(/ /g, \"\");\n        color = color.toLowerCase();\n        color = Color.namedColors[color] || color;\n\n        return color;\n    },\n\n    normalizeByte: function(value) {\n        if (value < 0 || isNaN(value)) {\n            return 0;\n        }\n\n        return value > 255 ? 255 : value;\n    },\n\n    padDigit: function(value) {\n        return (value.length === 1) ? \"0\" + value : value;\n    },\n\n    brightness: function(value) {\n        var round = Math.round;\n\n        this.r = round(this.normalizeByte(this.r * value));\n        this.g = round(this.normalizeByte(this.g * value));\n        this.b = round(this.normalizeByte(this.b * value));\n\n        return this;\n    },\n\n    percBrightness: function() {\n        return Math.sqrt(0.241 * this.r * this.r + 0.691 * this.g * this.g + 0.068 * this.b * this.b);\n    },\n\n    isDark: function() {\n        return this.percBrightness() < DARK_TRESHOLD;\n    }\n});\n\nColor.fromBytes = function(r, g, b, a) {\n    return new Bytes(r, g, b, a != null ? a : 1);\n};\n\nColor.fromRGB = function(r, g, b, a) {\n    return new RGB(r, g, b, a != null ? a : 1);\n};\n\nColor.fromHSV = function(h, s, v, a) {\n    return new HSV(h, s, v, a != null ? a : 1);\n};\n\nColor.fromHSL = function(h, s, l, a) {\n    return new HSL(h, s, l, a != null ? a : 1);\n};\n\nColor.formats = [ {\n    re: /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\n    process: function(parts) {\n        return [\n            parseInt(parts[1], 10), parseInt(parts[2], 10), parseInt(parts[3], 10)\n        ];\n    }\n}, {\n    re: /^(\\w{2})(\\w{2})(\\w{2})$/,\n    process: function(parts) {\n        return [\n            parseInt(parts[1], 16), parseInt(parts[2], 16), parseInt(parts[3], 16)\n        ];\n    }\n}, {\n    re: /^(\\w{1})(\\w{1})(\\w{1})$/,\n    process: function(parts) {\n        return [\n            parseInt(parts[1] + parts[1], 16),\n            parseInt(parts[2] + parts[2], 16),\n            parseInt(parts[3] + parts[3], 16)\n        ];\n    }\n} ];\n\nColor.namedColors = namedColors;\n\nkendo.deepExtend(kendo, {\n    parseColor: parseColor,\n    namedColors: namedColors,\n    Color: Color\n});\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.color.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.colorpicker.js":
/*!*************************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.colorpicker.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* harmony import */ var _kendo_color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.color.js */ \"./node_modules/kendo-ui-core/esm/kendo.color.js\");\n/* harmony import */ var _kendo_popup_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kendo.popup.js */ \"./node_modules/kendo-ui-core/esm/kendo.popup.js\");\n/* harmony import */ var _kendo_slider_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./kendo.slider.js */ \"./node_modules/kendo-ui-core/esm/kendo.slider.js\");\n/* harmony import */ var _kendo_userevents_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./kendo.userevents.js */ \"./node_modules/kendo-ui-core/esm/kendo.userevents.js\");\n/* harmony import */ var _kendo_button_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./kendo.button.js */ \"./node_modules/kendo-ui-core/esm/kendo.button.js\");\n/* harmony import */ var _kendo_binder_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./kendo.binder.js */ \"./node_modules/kendo-ui-core/esm/kendo.binder.js\");\n/* harmony import */ var _kendo_textbox_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./kendo.textbox.js */ \"./node_modules/kendo-ui-core/esm/kendo.textbox.js\");\n/* harmony import */ var _kendo_numerictextbox_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./kendo.numerictextbox.js */ \"./node_modules/kendo-ui-core/esm/kendo.numerictextbox.js\");\n/* harmony import */ var _kendo_html_button_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./kendo.html.button.js */ \"./node_modules/kendo-ui-core/esm/kendo.html.button.js\");\n/* harmony import */ var _kendo_icons_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./kendo.icons.js */ \"./node_modules/kendo-ui-core/esm/kendo.icons.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n(function($, undefined$1) {\n    // WARNING: removing the following jshint declaration and turning\n    // == into === to make JSHint happy will break functionality.\n\n    var kendo = __webpack_provided_window_dot_kendo,\n        ui = kendo.ui,\n        Widget = ui.Widget,\n        parseColor = kendo.parseColor,\n        TabKeyTrap = kendo.ui.Popup.TabKeyTrap,\n\n        extend = $.extend,\n\n        NS = \".kendoColorTools\",\n        KEYDOWN_NS = \"keydown\" + NS,\n        DISABLED = \"k-disabled\";\n\n    var ColorSelector = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n            element = that.element;\n            options = that.options;\n\n            if (element.is(\"input\")) {\n                that._initialValue();\n                that._preventDefaultLabelClick();\n            } else {\n                that._value = parseColor(options.value);\n            }\n\n            that._tabIndex = element.attr(\"tabIndex\") || 0;\n\n            if (options._standalone) {\n                that._triggerSelect = that._triggerChange;\n            }\n        },\n        options: {\n            name: \"ColorSelector\",\n            ARIATemplate: (data) => `Current selected color is ${data || \"none\"}`,\n            value: null,\n            _standalone: true\n        },\n        events: [\n            \"change\",\n            \"select\",\n            \"forceSelect\",\n            \"cancel\"\n        ],\n        color: function(value) {\n            if (value !== undefined$1) {\n                this._value = parseColor(value);\n\n                if (this.element.is(\"input\")) {\n                    this._updateInput(this._value);\n                }\n\n                this._updateUI(this._value);\n            }\n\n            return this._value;\n        },\n        value: function(color) {\n            color = this.color(color);\n\n            if (color) {\n                if (this.options.opacity) {\n                    color = color.toCssRgba();\n                } else {\n                    color = color.toCss();\n                }\n            }\n\n            return color || null;\n        },\n        enable: function(enable) {\n            if (arguments.length === 0) {\n                enable = true;\n            }\n\n            if (this.element.is(\"input\")) {\n                this.element.attr(\"disabled\", !enable);\n            }\n\n            this.wrapper.toggleClass(DISABLED, !enable);\n\n            this._onEnable(enable);\n        },\n        _attachFocusEvents: function () {\n            this.wrapper.on(KEYDOWN_NS, this._navKeydown.bind(this))\n                .on(\"focusout\" + NS, this._navFocusout.bind(this));\n        },\n        _initialValue: function() {\n            var element = this.element,\n                options = this.options,\n                value = options.value || element.attr(\"value\");\n\n            if (value) {\n                this._value = parseColor(value, true);\n            }\n\n            this.element.val(value);\n        },\n        _innerTabindex: function(value) {\n            var wrapper = this.wrapper;\n\n            wrapper.find(\".k-draghandle, .k-button, .k-input-inner\").attr(\"tabindex\", value);\n        },\n        _isInputTypeColor: function() {\n            var el = this.element[0];\n            return (/^input$/i).test(el.tagName) && (/^color$/i).test(el.type);\n        },\n        _navFocusout: function() {\n            var that = this,\n                wrapper = that.wrapper[0];\n\n            setTimeout(function() {\n                if (!wrapper.contains(document.activeElement)) {\n                    that._releaseInnerFocus();\n                }\n            });\n        },\n        _navKeydown: function(e) {\n            var wrapper = this.wrapper;\n\n            if (e.keyCode === kendo.keys.ENTER && wrapper.attr(\"tabindex\")) {\n                e.preventDefault();\n\n                this._trapInnerFocus();\n            } else if (e.keyCode === kendo.keys.ESC && wrapper.attr(\"tabindex\") === undefined$1) {\n                this._releaseInnerFocus();\n                this.wrapper.trigger(\"focus\");\n            }\n        },\n        _releaseInnerFocus: function() {\n            this._tabKeyTrap.removeTrap();\n            this.wrapper.attr(\"tabindex\", this._tabIndex);\n            this._innerTabindex(-1);\n        },\n        _select: function(color, nohooks) {\n            var prev = this._value;\n\n            color = this.color(color);\n\n            if (!nohooks) {\n                if ((color && (!prev || !color.equals(prev))) || (color === null && color !== prev)) {\n                    if (color === null && this.element.val) {\n                        this.element.val(color);\n                    }\n\n                    this.element.trigger(\"change\");\n                    this.trigger(\"change\", { value: this.value() });\n                } else if (!this._standalone) {\n                    this.trigger(\"cancel\");\n                }\n            }\n        },\n        _navigation: function() {\n            var value = this.value();\n\n            if (value && value.indexOf(\"rgba\") > -1) {\n                value = value.replace(\"rgba\", \"RGBA\");\n            };\n\n            if (this.options._otOfPicker) {\n                this._innerTabindex(-1);\n                this._attachFocusEvents();\n                this._tabKeyTrap = new TabKeyTrap(this.wrapper);\n\n                this._ariaTemplate = kendo.template(this.options.ARIATemplate);\n                this.wrapper.attr({\n                    \"aria-label\": this._ariaTemplate(value || \"\"),\n                    tabindex: this._tabIndex\n                });\n            } else {\n                this.wrapper.removeAttr(\"tabindex\");\n                this.wrapper.removeAttr(\"aria-label\");\n                this.wrapper.removeAttr(\"role\");\n                this.wrapper.removeAttr(\"aria-keyshortcuts\");\n            }\n        },\n        _trapInnerFocus: function() {\n            this._innerTabindex(0);\n            this.wrapper.removeAttr(\"tabindex\");\n            this.wrapper.find(\".k-hsv-draghandle\").trigger(\"focus\");\n            this._tabKeyTrap.trap();\n        },\n        _triggerSelect: function(color) {\n            triggerEvent(this, \"select\", color);\n        },\n        _triggerChange: function(color) {\n            triggerEvent(this, \"change\", color);\n        },\n        destroy: function() {\n            if (this.element) {\n                this.element.off(NS);\n            }\n\n            if (this.wrapper) {\n                this.wrapper.off(KEYDOWN_NS);\n                this.wrapper.off(NS).find(\"*\").off(NS);\n                this.wrapper = null;\n            }\n\n            Widget.fn.destroy.call(this);\n        },\n        _preventDefaultLabelClick: function() {\n            // if there exists a <label> associated with this\n            // input field, we must catch clicks on it to prevent\n            // the built-in color picker from showing up.\n            // https://github.com/telerik/kendo-ui-core/issues/292\n            var element = this.element,\n                label = element.closest(\"label\"),\n                id = element.attr(\"id\");\n\n            if (id) {\n                label = label.add('label[for=\"' + id + '\"]');\n            }\n            label.on(\"click\", function(ev) {\n                ev.preventDefault();\n            });\n        },\n        _updateUI: $.noop,\n        _updateInput: function(value) {\n            var formattedValue = \"\",\n                valueForLabel;\n\n            if (value) {\n                if (this._isInputTypeColor() || value.a == 1) {\n                    // seems that input type=\"color\" doesn't support opacity\n                    // in colors; the only accepted format is hex #RRGGBB\n                    formattedValue = value.toCss();\n                } else {\n                    formattedValue = value.toCssRgba();\n                }\n\n                this.element.val(formattedValue);\n            }\n\n            if (this.options._otOfPicker) {\n                if (!this._ariaTemplate) {\n                    this._ariaTemplate = kendo.template(this.options.ARIATemplate);\n                }\n\n                valueForLabel = this.value();\n\n                if (valueForLabel && valueForLabel.indexOf(\"rgba\") > -1) {\n                    valueForLabel = valueForLabel.replace(\"rgba\", \"RGBA\");\n                };\n\n                this.wrapper.attr(\"aria-label\", this._ariaTemplate(valueForLabel || \"\"));\n            }\n        },\n        _selectOnHide: function() {\n            return null;\n        },\n        _cancel: function() {\n            this.trigger(\"cancel\");\n        }\n    });\n\n    function triggerEvent(self, type, color) {\n        color = parseColor(color);\n\n        if ((color && !color.equals(self.color())) || color !== self.color()) {\n            if (type == \"change\") {\n                // UI is already updated.  setting _value directly\n                // rather than calling self.color(color) to avoid an\n                // endless loop.\n                self._value = color;\n                self._updateInput(self._value);\n            }\n            if (color && color.a != 1) {\n                color = color.toCssRgba();\n            } else if (color) {\n                color = color.toCss();\n            }\n\n            self.trigger(type, { value: color });\n        }\n    }\n\n    extend(ui, {\n        colorpicker: {\n            ColorSelector: ColorSelector\n        }\n    });\n\n\n})(__webpack_provided_window_dot_kendo.jQuery);\n\n(function($, undefined$1){\n    var colorpicker = kendo.ui.colorpicker,\n        extend = $.extend,\n        Color = kendo.Color,\n        parseColor = kendo.parseColor,\n\n        AA_CONTRAST = 4.5,\n        AAA_CONTRAST = 7,\n        STEP_COUNT = 16;\n\n    // Color utils - calc contrast\n\n    function getContrast(luminance1, luminance2) {\n        var brightest = Math.max(luminance1, luminance2);\n        var darkest = Math.min(luminance1, luminance2);\n        return (brightest + 0.05) / (darkest + 0.05);\n    }\n\n    function getContrastFromTwoRGBAs(a, b) {\n        return getContrast(\n            getLuminance(getRGBFromRGBA(a, b)),\n            getLuminance(getRGBFromRGBA(b, { r: 0, g: 0, b: 0, a: 1 })));\n    }\n\n    function getLuminance (rgb) {\n        var a = [rgb.r, rgb.g, rgb.b].map(function (v) {\n            v /= 255;\n            return v <= 0.03928 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\n        });\n        return a[0] * 0.2126 + a[1] * 0.7152 + a[2] * 0.0722;\n    }\n\n    function getRGBFromRGBA(foregroundColor, backgroundColor) {\n        var r1 = fitIntoBounds(foregroundColor.r, 0, 255);\n        var g1 = fitIntoBounds(foregroundColor.g, 0, 255);\n        var b1 = fitIntoBounds(foregroundColor.b, 0, 255);\n        var a1 = fitIntoBounds(foregroundColor.a, 0, 1);\n\n        var r2 = fitIntoBounds(backgroundColor.r, 0, 255);\n        var g2 = fitIntoBounds(backgroundColor.g, 0, 255);\n        var b2 = fitIntoBounds(backgroundColor.b, 0, 255);\n\n        return {\n            r: Math.round(((1 - a1) * r2) + (a1 * r1)),\n            g: Math.round(((1 - a1) * g2) + (a1 * g1)),\n            b: Math.round(((1 - a1) * b2) + (a1 * b1))\n        };\n    }\n\n    function fitIntoBounds(contender, min, max) {\n        if (!isPresent(contender) || isNaN(contender)) {\n            return min;\n        }\n\n        return contender <= min ? min : contender >= max ? max : contender;\n    }\n\n    function isPresent(value) { return value !== null && value !== undefined$1; }\n\n\n    // Color utils - Contrast tool SVG path\n\n    function renderSvgCurveLine(gradientRectMetrics, hsva, backgroundColor) {\n        var findValue = function (contrast, saturation, low, high, comparer) {\n            var mid = (low + high) / 2;\n            var currentHsva = extend({}, hsva, { s: saturation / gradientRectMetrics.width, v: 1 - mid / gradientRectMetrics.height });\n            var currentContrast = getContrastFromTwoRGBAs(parseColor(getColorFromHSV(currentHsva)).toBytes(), parseColor(backgroundColor).toBytes());\n\n            if (low + 0.5 > high) {\n                if (currentContrast < contrast + 1 && currentContrast > contrast - 1) {\n                    return mid;\n                } else {\n                    return null;\n                }\n            }\n\n            if (comparer(currentContrast, contrast)) {\n                return findValue(contrast, saturation, low, high - (high - low) / 2, comparer);\n            }\n            return findValue(contrast, saturation, low + (high - low) / 2, high, comparer);\n        };\n\n        var comparer = function (a, b) {\n            return a > b;\n        };\n\n        var reversedComparer = function (a, b) {\n            return a < b;\n        };\n\n        var getPaths = function (contrast, stepCount, reversed) {\n            var points = [];\n            for (var i = 0; i <= gradientRectMetrics.width; i += gradientRectMetrics.width/stepCount) {\n               var value = findValue(contrast, i, 0, gradientRectMetrics.height, reversed ? reversedComparer : comparer);\n                if (value !== null){\n                    points.push([i, value]);\n                }\n            }\n            return points;\n        };\n\n        var bezierCommandCalc = bezierCommand(controlPoint(line));\n        var paths = svgPath(getPaths(AA_CONTRAST, STEP_COUNT, false), bezierCommandCalc) +\n                svgPath(getPaths(AA_CONTRAST, STEP_COUNT, true), bezierCommandCalc) +\n                svgPath(getPaths(AAA_CONTRAST, STEP_COUNT, false), bezierCommandCalc) +\n                svgPath(getPaths(AAA_CONTRAST, STEP_COUNT, true), bezierCommandCalc);\n\n        return `<svg xmlns=\"http://www.w3.org/2000/svg\" ${kendo.attr(\"style-position\")}=\"absolute\" ${kendo.attr(\"style-overflow\")}=\"visible\" ${kendo.attr(\"style-pointer-events\")}=\"none\" ` +\n                `${kendo.attr(\"style-left\")}=\"0px\" ${kendo.attr(\"style-top\")}=\"0px\" ${kendo.attr(\"style-z-index\")}=\"3\" >` +\n                    paths  + '</svg>';\n    }\n\n    function svgPath(points, command) {\n        if (points.length === 0){\n            return '';\n        }\n\n        var reducer = function (acc, point, i, a) {\n            return i === 0 ?\n                // if first point\n                kendo.format(\"M {0},{1}\", point[0], point[1]) :\n                // else\n                kendo.format(\"{0} {1}\", acc, command(point, i, a));\n        };\n\n        // build the d attributes by looping over the points\n        var d = points.reduce(reducer, \"\");\n\n        return kendo.format('<path d=\"{0}\" fill=\"none\" stroke=\"white\" stroke-width=\"1\"/>', d);\n    }\n\n    function bezierCommand(controlPointCalc) {\n        return function(point, i, a) {\n            // start control point\n            var cps = controlPointCalc(a[i - 1], a[i - 2], point); // [cpsX, cpsY]\n\n            // end control point\n            var cpe = controlPointCalc(point, a[i - 1], a[i + 1], true); //  [cpeX, cpeY]\n\n            return kendo.format(\"C {0},{1} {2},{3} {4},{5}\", cps[0], cps[1], cpe[0], cpe[1], point[0], point[1]);\n        };\n    }\n\n    function controlPoint(lineCalc) {\n        return function (current, previous, next, reverse) {\n            // when 'current' is the first or last point of the array\n            // 'previous' and 'next' are undefined\n            // replace with 'current'\n                var p = previous || current;\n                var n = next || current;\n                var smooth = 0.1;\n\n                // properties of the line between previous and next\n                var l = lineCalc(p, n);\n\n                // If is end-control-point, add PI to the angle to go backward\n                var angle = l.angle + (reverse ? Math.PI : 0);\n                var length = l.length * smooth;\n\n                // The control point position is relative to the current point\n                var x = current[0] + Math.cos(angle) * length;\n                var y = current[1] + Math.sin(angle) * length;\n\n                return [x, y];\n        };\n    }\n\n    function line (pointA, pointB) {\n        var lengthX = pointB[0] - pointA[0];\n        var lengthY = pointB[1] - pointA[1];\n\n        return {\n            length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n            angle: Math.atan2(lengthY, lengthX)\n        };\n    }\n\n    function getColorFromHSV (hsva) {\n        var hue = fitIntoBounds(hsva.h, 0, 359.9);\n        var saturation = fitIntoBounds(hsva.s, 0, 1);\n        var value = fitIntoBounds(hsva.v, 0, 1);\n        var alpha = fitIntoBounds(hsva.a, 0, 1);\n\n        return Color.fromHSV(hue, saturation, value, alpha).toCssRgba();\n    }\n\n    extend(colorpicker, {\n        contrastToolUtils: {\n            getContrastFromTwoRGBAs: getContrastFromTwoRGBAs,\n            renderSvgCurveLine: renderSvgCurveLine\n        }\n    });\n\n})(__webpack_provided_window_dot_kendo.jQuery);\n\nvar __meta__$1 = {\n        id: \"colorgradient\",\n        name: \"ColorGradient\",\n        category: \"web\", // suite\n        description: \"ColorGradient allows selection of a color from an HSV canvas.\",\n        depends: [\"core\", \"popup\", \"textbox\", \"icons\"] // dependencies\n    };\n(function($, undefined$1) {\n    // WARNING: removing the following jshint declaration and turning\n    // == into === to make JSHint happy will break functionality.\n\n    var kendo = __webpack_provided_window_dot_kendo,\n        ui = kendo.ui,\n        Observable = kendo.Observable,\n        parseColor = kendo.parseColor,\n        extend = $.extend,\n        encode = kendo.htmlEncode,\n        Color = kendo.Color,\n        KEYS = kendo.keys,\n        BACKGROUNDCOLOR = \"background-color\",\n        WHITE = \"#ffffff\",\n        BLACK = \"#000000\",\n        NS = \".kendoColorTools\",\n        KEYDOWN_NS = \"keydown\" + NS,\n        ColorSelector = ui.colorpicker.ColorSelector,\n\n        contrastToolUtils = ui.colorpicker.contrastToolUtils;\n\n    function preventDefault(ev) { ev.preventDefault(); }\n\n    function bind(callback, obj) {\n        return function() {\n            return callback.apply(obj, arguments);\n        };\n    }\n\n    var ColorInput = Observable.extend({\n        init: function(element, options) {\n            var that = this;\n\n            that.element = element;\n            that.options = options;\n\n            that._viewModel = kendo.observable({\n                switchMode: that.switchMode.bind(that),\n                keydown: that.keydown.bind(that),\n                isHEXMode: function () { return this.get(\"format\") === 'hex' },\n                isRGBMode: function () { return this.get(\"format\") === 'rgb' },\n                format: options.format,\n                formats: options.formats,\n                rgb: null,\n                hex: function () {\n                    return this.get(\"rgb\") !== null && this.get(\"rgb\").toCss({alpha: options.opacity});\n                }\n            });\n\n            that._changeHandler = that.change.bind(that);\n\n            that._viewModel.bind(\"change\", that._changeHandler);\n\n            that._render();\n\n            that.element.on(KEYDOWN_NS, that.keydown.bind(that));\n\n            Observable.fn.init.call(that);\n        },\n        _template: kendo.template(({ options, ns }) => {\n            let optionsSize = encode(options.size);\n            let optionsTabIndex = encode(options.tabindex);\n\n            let vStackElement = \"\";\n            if (options.formats && options.formats.length > 1) {\n                let optionsMessagesToggleFormat = encode(options.messages.toggleFormat);\n\n                vStackElement =\n                '<div class=\"k-vstack\">' +\n                    `<button class=\"k-colorgradient-toggle-mode\" data-${ns}role=\"button\" data-${ns}icon=\"caret-alt-expand\" data data-${ns}bind=\"click: switchMode\" data-${ns}fill-mode=\"flat\" data-${ns}size=\"${optionsSize}\" title=\"${optionsMessagesToggleFormat}\">` +\n                    '</button>' +\n                '</div>';\n            }\n\n            // HEX input\n            let hexInputElement = \"\";\n            if (options.formats && options.formats.indexOf(\"hex\") >= 0) {\n                let optionsMessagesHex = encode(options.messages.hex);\n\n                hexInputElement =\n                `<div class=\"k-vstack\" data-${ns}bind=\"visible: isHEXMode\">` +\n                    `<input type=\"text\" data-${ns}bind=\"value: hex\" data-${ns}role=\"textbox\" data-${ns}size=\"${optionsSize}\" tabindex=\"${optionsTabIndex}\"  aria-label=\"${optionsMessagesHex}\"/>` +\n                    '<label class=\"k-colorgradient-input-label\">HEX</label>' +\n                '</div>';\n            }\n\n            // RGBA input\n            let rgbaInputElement = \"\";\n            if (options.formats && options.formats.indexOf(\"rgb\") >= 0) {\n                let optionsMessagesRed = encode(options.messages.red);\n                let optionsMessagesGreen = encode(options.messages.green);\n                let optionsMessagesBlue = encode(options.messages.blue);\n\n                rgbaInputElement =\n                `<div class=\"k-vstack\" data-${ns}bind=\"visible: isRGBMode\">` +\n                    `<input tabindex=\"${optionsTabIndex}\" data-${ns}bind=\"value: rgb.r\" data-${ns}role=\"numerictextbox\" data-${ns}size=\"${optionsSize}\" data-${ns}max=\"255\" data-${ns}min=\"0\" data-${ns}decimals=\"0\" data-${ns}spinners=\"false\" data-${ns}format=\"n0\" aria-label=\"${optionsMessagesRed}\" />` +\n                    '<label class=\"k-colorgradient-input-label\">R</label>' +\n                '</div>' +\n                `<div class=\"k-vstack\" data-${ns}bind=\"visible: isRGBMode\">` +\n                    `<input tabindex=\"${optionsTabIndex}\" data-${ns}bind=\"value: rgb.g\" data-${ns}role=\"numerictextbox\" data-${ns}size=\"${optionsSize}\" data-${ns}max=\"255\" data-${ns}min=\"0\" data-${ns}decimals=\"0\" data-${ns}spinners=\"false\" data-${ns}format=\"n0\" aria-label=\"${optionsMessagesGreen}\" />` +\n                    '<label class=\"k-colorgradient-input-label\">G</label>' +\n                '</div>' +\n                `<div class=\"k-vstack\" data-${ns}bind=\"visible: isRGBMode\">` +\n                    `<input tabindex=\"${optionsTabIndex}\" data-${ns}bind=\"value: rgb.b\" data-${ns}role=\"numerictextbox\" data-${ns}size=\"${optionsSize}\" data-${ns}max=\"255\" data-${ns}min=\"0\" data-${ns}decimals=\"0\" data-${ns}spinners=\"false\" data-${ns}format=\"n0\" aria-label=\"${optionsMessagesBlue}\"/>` +\n                    '<label class=\"k-colorgradient-input-label\">B</label>' +\n                '</div>';\n\n                if(options.opacity) {\n                    let optionsMessagesAlpha = options.messages.alpha;\n                    rgbaInputElement +=\n                    `<div class=\"k-vstack\" data-${ns}bind=\"visible: isRGBMode\">` +\n                        `<input tabindex=\"${optionsTabIndex}\" data-${ns}bind=\"value: rgb.a\" data-${ns}role=\"numerictextbox\" data-${ns}size=\"${optionsSize}\" data-${ns}step=\"0.1\" data-${ns}max=\"1\" data-${ns}min=\"0\" data-${ns}decimals=\"1\" data-${ns}spinners=\"false\" data-${ns}format=\"n1\" aria-label=\"${optionsMessagesAlpha}\" />` +\n                        '<label class=\"k-colorgradient-input-label\">A</label>' +\n                    '</div>';\n                }\n            }\n\n            return vStackElement + hexInputElement + rgbaInputElement;\n        }),\n        destroy: function(){\n            var that = this;\n\n            that._viewModel.unbind(\"change\", that._changeHandler);\n            kendo.unbind(that.element);\n            kendo.destroy(that.element);\n            that.element.off(KEYDOWN_NS);\n            delete that._viewModel;\n            delete that._changeHandler;\n        },\n        change: function (ev) {\n            var that = this;\n\n            if (ev.field.indexOf(\"rgb\") >= 0) {\n                that._color = that._tryParseColor(that._viewModel.rgb.toCssRgba());\n                that._viewModel.set(\"hex\", that._color.toCss({ alpha: that.options.opacity }));\n            } else if (ev.field === \"hex\") {\n                that._color = that._tryParseColor(ev.sender[ev.field]);\n                that._viewModel.set(\"rgb\", that._color);\n            }\n\n            if (!that._preventChangeEvent) {\n                that.trigger(\"change\", {value: that._color});\n            }\n        },\n        keydown: function (ev) {\n            var that = this,\n                textbox = $(ev.target).data(\"kendoTextBox\");\n\n            if (ev.keyCode === KEYS.ENTER && $(ev.target).is(\"input\")) {\n                if(textbox && textbox._change) {\n                    textbox._change();\n                }\n\n                that.trigger(\"change\", {value: that._color});\n                that.trigger(\"select\", {value: that._color});\n            }\n        },\n        reset: function () {\n            var that = this;\n\n            that._preventChangeEvent = true;\n            that._viewModel.set(\"rgb\", parseColor(BLACK));\n            delete that._preventChangeEvent;\n        },\n        switchMode: function() {\n            var that = this,\n                model = that._viewModel,\n                currentFormat = model.format,\n                index = model.formats.indexOf(currentFormat) + 1;\n\n            index = index >= model.formats.length ? 0 : index;\n\n            that._preventChangeEvent = true;\n            that._viewModel.set(\"format\", model.formats[index]);\n            delete that._preventChangeEvent;\n        },\n        value: function (color) {\n            var that = this;\n\n            that._color = (color && color.toBytes()) || parseColor(BLACK);\n            that._preventChangeEvent = true;\n            that._viewModel.set(\"rgb\", that._color);\n            delete that._preventChangeEvent;\n        },\n        _render: function() {\n            var that = this;\n\n            that.element\n                .append(that._template({ ns: kendo.ns, guid: kendo.guid(), options: that.options }))\n                .parent();\n\n            kendo.bind(that.element, that._viewModel);\n            that.element.attr(\"data-\" + kendo.ns + \"stop\", \"stop\");\n        },\n        _tryParseColor: function (color) {\n            var that = this;\n\n            try {\n                color = parseColor(color) || that._color;\n            } catch (error) {\n                color = that._color;\n            }\n\n            return color;\n        }\n    });\n\n    var ColorGradient = ColorSelector.extend({\n        init: function (element, options) {\n            var that = this,\n                value;\n\n            ColorSelector.fn.init.call(that, element, options);\n\n            options = that.options = kendo.deepExtend({}, that.options, options);\n\n            if(options.messages.previewInput) {\n                options.messages.hex = options.messages.previewInput;\n            }\n\n            options.messages = options.messages ? $.extend(that.options.messages, options.messages) : that.options.messages;\n            element = that.element;\n\n            that._wrapper();\n            that._sliders();\n            that._hsvArea();\n\n            value = that._value;\n\n            that._gradientInputs();\n            that._updateUI(value);\n            that._navigation();\n        },\n        options: {\n            name : \"ColorGradient\",\n            opacity : false,\n            hsvDragARIATemplate: (data) => `Color well with two-dimensional slider for selecting saturation and value. Selected color is ${data || \"none\"}`,\n            input : true,\n            format: \"hex\",\n            formats: [\"rgb\", \"hex\"],\n            contrastTool: false,\n            size: \"medium\",\n            messages: {\n                contrastRatio: \"Contrast ratio:\",\n                fail: \"Fail\",\n                pass: \"Pass\",\n                hex: \"HEX\",\n                toggleFormat: \"Toggle format\",\n                red: \"Red channel\",\n                green: \"Green channel\",\n                blue: \"Blue channel\",\n                alpha: \"Alpha channel\"\n            },\n            _otOfPicker: true\n        },\n        _template: kendo.template((options) =>\n                '<div class=\"k-colorgradient-canvas k-hstack\">' +\n                    '<div class=\"k-hsv-rectangle\"><div class=\"k-hsv-gradient\"><div role=\"slider\" aria-orientation=\"undefined\" class=\"k-hsv-draghandle k-draghandle\"></div></div></div>' +\n                    '<div class=\"k-hsv-controls k-hstack\">' +\n                        '<input class=\"k-hue-slider k-colorgradient-slider\" />' +\n                        (options.opacity ? '<input class=\"k-alpha-slider k-colorgradient-slider\" />' : '') +\n                    '</div>' +\n                '</div>' +\n                (options.input ? '<div class=\"k-colorgradient-inputs k-hstack\"></div>' : '') +\n                (options.contrastTool ? '<div class=\"k-colorgradient-color-contrast k-vbox\"></div>' : '')\n        ),\n        focus: function() {\n            this._hsvHandle.focus();\n        },\n        setBackgroundColor: function(color) {\n            var that = this;\n\n            if (that.options.contrastTool) {\n                that.options.contrastTool = $.isPlainObject(that.options.contrastTool) ? extend({}, that.options.contrastTool, {\n                    backgroundColor: color\n                }) : {\n                    backgroundColor: color\n                };\n\n                that._updateColorContrast(that.color() || parseColor(WHITE));\n            }\n        },\n        _getHSV: function(h, s, v, a) {\n            var that = this,\n                rect = that._hsvRect,\n                width = rect.width(),\n                height = rect.height(),\n                handlePosition = this._hsvHandle.position();\n\n            if(!width || !height) {\n                return that.color() ? that.color().toHSV() : parseColor(BLACK);\n            }\n\n            if (h == null) {\n                h = that._hueSlider.value();\n            }\n            if (s == null) {\n                s = handlePosition.left / width;\n            }\n            if (v == null) {\n                v = 1 - handlePosition.top / height;\n            }\n            if (a == null) {\n                a = that._opacitySlider ? that._opacitySlider.value() / 100 : 1;\n            }\n            return Color.fromHSV(h, s, v, a);\n        },\n        _gradientInputs: function() {\n            var that = this,\n                options = that.options;\n\n            if(that._colorgradientInputs.length) {\n                that._colorInput = new ColorInput(that._colorgradientInputs, extend({}, options, {\n                    tabindex: 0\n                }));\n\n                that._colorInput.bind(\"change\", function(ev){\n                    that._updateUI(ev.value, true);\n                });\n\n                that._colorInput.bind(\"select\", function(ev){\n                    var color = parseColor(ev.value);\n                    that._select(color);\n                    that.trigger(\"forceSelect\", { value: that.value() });\n                });\n            }\n        },\n        _hsvArea: function() {\n            var that = this,\n                wrapper = that.wrapper,\n                hsvRect = wrapper.find(\".k-hsv-rectangle\"),\n                hsvHandle = hsvRect.find(\".k-draghandle\").attr(\"tabIndex\", 0).on(KEYDOWN_NS, bind(that._hsvKeydown, that)),\n                value = this.value();\n\n            if (value && value.indexOf(\"rgba\") > -1) {\n                value = value.replace(\"rgba\", \"RGBA\");\n            };\n\n            if (!this._hsvDragAriaTemplate) {\n                this._hsvDragAriaTemplate = kendo.template(this.options.hsvDragARIATemplate);\n            }\n\n            hsvHandle.attr(\"aria-label\", this._hsvDragAriaTemplate(value || ''));\n\n            function update(x, y) {\n                var offset = this.offset,\n                    dx = x - offset.left, dy = y - offset.top,\n                    rw = this.width, rh = this.height,\n                    resultX, resultY;\n\n                dx = dx < 0 ? 0 : dx > rw ? rw : dx;\n                dy = dy < 0 ? 0 : dy > rh ? rh : dy;\n                resultX = dx / rw;\n                resultY = 1 - dy / rh;\n\n                that._svChange(resultX, resultY);\n            }\n\n            that._hsvEvents = new kendo.UserEvents(hsvRect, {\n                global: true,\n                press: function(e) {\n                    this.offset = kendo.getOffset(hsvRect);\n                    this.width = hsvRect.width();\n                    this.height = hsvRect.height();\n                    hsvHandle.focus();\n                    update.call(this, e.x.location, e.y.location);\n                },\n                start: function() {\n                    hsvRect.addClass(\"k-dragging\");\n                    hsvHandle.focus();\n                },\n                move: function(e) {\n                    e.preventDefault();\n                    update.call(this, e.x.location, e.y.location);\n                },\n                end: function() {\n                    hsvRect.removeClass(\"k-dragging\");\n                }\n            });\n\n            that._hsvRect = hsvRect;\n            that._hsvHandle = hsvHandle;\n        },\n        _hsvKeydown: function(ev) {\n            var that = this;\n            function move(prop, d) {\n                var c = that._getHSV();\n                c[prop] += d * (ev.shiftKey ? 0.01 : 0.05);\n                if (c[prop] < 0) { c[prop] = 0; }\n                if (c[prop] > 1) { c[prop] = 1; }\n                that._updateUI(c);\n                preventDefault(ev);\n            }\n            function hue(d) {\n                var c = that._getHSV();\n                c.h += d * (ev.shiftKey ? 1 : 5);\n                if (c.h < 0) { c.h = 0; }\n                if (c.h > 359) { c.h = 359; }\n                that._updateUI(c);\n                preventDefault(ev);\n            }\n            switch (ev.keyCode) {\n            case KEYS.LEFT:\n                if (ev.ctrlKey) {\n                    hue(-1);\n                } else {\n                    move(\"s\", -1);\n                }\n                break;\n            case KEYS.RIGHT:\n                if (ev.ctrlKey) {\n                    hue(1);\n                } else {\n                    move(\"s\", 1);\n                }\n                break;\n            case KEYS.UP:\n                move(ev.ctrlKey && that._opacitySlider ? \"a\" : \"v\", 1);\n                break;\n            case KEYS.DOWN:\n                move(ev.ctrlKey && that._opacitySlider ? \"a\" : \"v\", -1);\n                break;\n            case KEYS.ENTER:\n                that._select(that._getHSV());\n                break;\n            case KEYS.F2:\n                that._colorInput.element.find(\"input\").trigger(\"focus\").select();\n                break;\n            case KEYS.ESC:\n                that._cancel();\n                break;\n            }\n        },\n        _onEnable: function(enable) {\n            var wrapper = this.wrapper;\n\n            this._hueSlider.enable(enable);\n\n            if (this._opacitySlider) {\n                this._opacitySlider.enable(enable);\n            }\n\n            wrapper.find(\"input\").attr(\"disabled\", !enable);\n\n            if (this.options._standalone) {\n                if (enable) {\n                    wrapper.removeAttr(\"aria-disabled\");\n                } else {\n                    wrapper.attr(\"aria-disabled\", true);\n                }\n            }\n        },\n        _reset: function () {\n            var that = this;\n\n            if (that._colorInput) {\n                that._colorInput.reset();\n            }\n\n            that._resetHsv();\n            that._resetColorContrast();\n        },\n        _resetColorContrast: function () {\n            var that = this,\n                contrastOptions = that.options.contrastTool;\n\n            if(that._contrastTool.length) {\n                that._updateColorContrast(contrastOptions.backgroundColor ? parseColor(contrastOptions.backgroundColor) : parseColor(WHITE));\n            }\n        },\n        _resetHsv: function () {\n            var that = this,\n                color = parseColor(BLACK);\n\n            that._updateHsv(color);\n        },\n        _sliders: function() {\n            var that = this,\n                wrapper = that.wrapper,\n                hueSlider = wrapper.find(\".k-hue-slider\"),\n                opacitySlider = wrapper.find(\".k-alpha-slider\");\n\n            function hueChange(e) {\n                that._updateUI(that._getHSV(e.value, null, null, null));\n            }\n\n            hueSlider.attr(\"aria-label\", \"hue\");\n            that._hueSlider = hueSlider.kendoSlider({\n                min: 0,\n                max: 360,\n                tickPlacement: \"none\",\n                showButtons: false,\n                orientation: \"vertical\",\n                slide: hueChange,\n                change: hueChange\n            }).data(\"kendoSlider\");\n\n            function opacityChange(e) {\n                that._updateUI(that._getHSV(null, null, null, e.value / 100));\n            }\n\n            opacitySlider.attr(\"aria-label\", \"opacity\");\n            that._opacitySlider = opacitySlider.kendoSlider({\n                min: 0,\n                max: 100,\n                tickPlacement: \"none\",\n                showButtons: false,\n                orientation: \"vertical\",\n                slide: opacityChange,\n                change: opacityChange\n            }).data(\"kendoSlider\");\n        },\n        _svChange: function(s, v) {\n            var color = this._getHSV(null, s, v, null);\n            this._updateUI(color);\n        },\n        _updateColorContrast: function (color) {\n            var that = this,\n                contrastOptions = that.options.contrastTool,\n                backgroundColor = contrastOptions.backgroundColor ? parseColor(contrastOptions.backgroundColor) : parseColor(WHITE),\n                contrastRatio = contrastToolUtils.getContrastFromTwoRGBAs(parseColor(color.toCssRgba()), backgroundColor),\n                contrastRatioTemplate = kendo.template(({ messages, ratio }) =>\n                                            '<div class=\"k-contrast-ratio\">' +\n                                                `<span class=\"k-contrast-ratio-text\">${encode(messages.contrastRatio)} ${encode(kendo.toString(ratio, \"n2\"))}</span>` +\n                                                '<span class=\"k-contrast-validation !k-text-success\">' +\n                                                    (ratio > 4.5 ?  kendo.ui.icon(\"check\") : '') +\n                                                    (ratio > 7 ?  kendo.ui.icon(\"check\") : '') +\n                                            '</span></div>'),\n                labelTemplate = kendo.template(({ messages, ratio, limit, level }) =>\n                                            '<div>' +\n                                                `<span>${encode(level)}: ${encode(limit)} </span>` +\n                                                (ratio > limit ?\n                                                `<span class=\"k-contrast-validation !k-text-success\">${encode(messages.pass)} ${kendo.ui.icon(\"check\")}</span>`\n                                                :\n                                                `<span class=\"k-contrast-validation !k-text-error\">${encode(messages.fail)} ${kendo.ui.icon(\"x\")}</span>`) +\n                                            '</div>'),\n                output = \"\";\n\n            output += contrastRatioTemplate({\n                messages: that.options.messages,\n                ratio: contrastRatio,\n            });\n\n            output += labelTemplate({\n                messages: that.options.messages,\n                ratio: contrastRatio,\n                limit: 4.5,\n                level: \"AA\"\n            });\n\n            output += labelTemplate({\n                messages: that.options.messages,\n                ratio: contrastRatio,\n                limit: 7,\n                level: \"AAA\"\n            });\n\n            that._contrastTool.find(\".k-contrast-ratio, div\").remove();\n            that._contrastTool.append(output);\n\n            that._updateContrastSvg(backgroundColor);\n        },\n        _updateContrastSvg: function (backgroundColor) {\n            var that = this,\n                hsvRect = that._hsvRect,\n                svgClassName = \"k-color-contrast-svg\",\n                metrics = { width: hsvRect.width(), height: hsvRect.height() },\n                newSvg;\n\n            if(!metrics.width || !metrics.height) {\n                return;\n            }\n\n            newSvg = $(contrastToolUtils.renderSvgCurveLine(metrics, that._getHSV(), backgroundColor)).addClass(svgClassName);\n            kendo.applyStylesFromKendoAttributes(newSvg, [\"position\", \"overflow\", \"pointer-events\", \"left\", \"top\", \"z-index\"]);\n\n            hsvRect.find(\".\" + svgClassName).remove();\n            hsvRect.append(newSvg);\n        },\n        _updateHsv: function (color) {\n            var that = this,\n                rect = that._hsvRect;\n\n            color = color.toHSV();\n\n            that._hsvHandle.css({\n                // saturation is 0 on the left side, full (1) on the right\n                left: color.s * rect.width() + \"px\",\n                // value is 0 on the bottom, full on the top.\n                top: (1 - color.v) * rect.height() + \"px\"\n            });\n\n            that._hueElements.css(BACKGROUNDCOLOR, Color.fromHSV(color.h, 1, 1, 1).toCss());\n            that._hueSlider.value(color.h);\n\n            if (that._opacitySlider) {\n                that._opacitySlider.wrapper.find(\".k-slider-track\").css(\"background\", \"linear-gradient(to top, transparent, \" + Color.fromHSV(color.h, 1, 1, 1).toCss());\n                that._opacitySlider.value(100 * color.a);\n            }\n\n            that._updateHsvAria(color.s, color.v);\n        },\n        _updateHsvAria: function(x,y) {\n            var value = this.value();\n\n            if (value && value.indexOf(\"rgba\") > -1) {\n                value = value.replace(\"rgba\", \"RGBA\");\n            }\n\n            this._hsvHandle.attr({\n                \"aria-label\": this._hsvDragAriaTemplate(value || ''),\n                \"aria-valuenow\": Math.round(x * 100),\n                \"aria-valuetext\": \"saturation: \" + Math.round(x * 100) + \"%, value: \" + Math.round(y * 100) + \"%\"\n            });\n        },\n        _updateUI: function(color, dontChangeInput) {\n            var that = this;\n\n            if (!color) {\n                that._reset();\n                return;\n            }\n\n            if (!dontChangeInput && that._colorInput) {\n                that._colorInput.value(color);\n            }\n\n            that._triggerSelect(color);\n            that._updateHsv(color);\n\n            if(that._contrastTool.length) {\n                that._updateColorContrast(color);\n            }\n        },\n        _wrapper: function() {\n            var options = this.options,\n                wrapper;\n\n            if (this.element.is(\"input\")) {\n                wrapper = this.element.addClass(\"k-hidden\").wrap(\"<div>\").parent();\n            } else {\n                wrapper = this.element;\n            }\n\n            wrapper.addClass(\"k-colorgradient\")\n                .attr({\n                    \"role\": \"textbox\",\n                    \"aria-keyshortcuts\": \"Enter\"\n                })\n                .append(this._template(options));\n\n            this._hueElements = $(\".k-hsv-rectangle, .k-alpha-slider .k-slider-track\", wrapper);\n            this._colorgradientInputs = $(\".k-colorgradient-inputs\", wrapper);\n            this._contrastTool = $(\".k-colorgradient-color-contrast\", wrapper);\n\n            this.wrapper = wrapper;\n        },\n        destroy: function (){\n            this._hsvEvents.destroy();\n\n            this._hueSlider.destroy();\n            if (this._opacitySlider) {\n                this._opacitySlider.destroy();\n            }\n\n            if(this._colorInput) {\n                this._colorInput.destroy();\n            }\n\n            this._hueSlider = this._opacitySlider = this._hsvRect = this._hsvHandle =\n                this._hueElements = this._selectedColor = this._colorAsText =\n                this._contrastTool = null;\n\n            ColorSelector.fn.destroy.call(this);\n        }\n    });\n\n    ui.plugin(ColorGradient);\n\n})(__webpack_provided_window_dot_kendo.jQuery);\n\n(function($, undefined$1){\n    // WARNING: removing the following jshint declaration and turning\n    // == into === to make JSHint happy will break functionality.\n\n    var kendo = __webpack_provided_window_dot_kendo,\n        ui = kendo.ui,\n        parseColor = kendo.parseColor,\n        KEYS = kendo.keys,\n        DOT = \".\",\n        BACKGROUNDCOLOR = \"background-color\",\n        ITEMSELECTEDCLASS = \"k-selected\",\n        ITEMSFOCUSEDCLASS = \"k-focus\",\n        TILE_CLASS = \"k-colorpalette-tile\",\n        SIMPLEPALETTE = \"000000,7f7f7f,880015,ed1c24,ff7f27,fff200,22b14c,00a2e8,3f48cc,a349a4,ffffff,c3c3c3,b97a57,ffaec9,ffc90e,efe4b0,b5e61d,99d9ea,7092be,c8bfe7\",\n        WEBPALETTE = \"FFFFFF,FFCCFF,FF99FF,FF66FF,FF33FF,FF00FF,CCFFFF,CCCCFF,CC99FF,CC66FF,CC33FF,CC00FF,99FFFF,99CCFF,9999FF,9966FF,9933FF,9900FF,FFFFCC,FFCCCC,FF99CC,FF66CC,FF33CC,FF00CC,CCFFCC,CCCCCC,CC99CC,CC66CC,CC33CC,CC00CC,99FFCC,99CCCC,9999CC,9966CC,9933CC,9900CC,FFFF99,FFCC99,FF9999,FF6699,FF3399,FF0099,CCFF99,CCCC99,CC9999,CC6699,CC3399,CC0099,99FF99,99CC99,999999,996699,993399,990099,FFFF66,FFCC66,FF9966,FF6666,FF3366,FF0066,CCFF66,CCCC66,CC9966,CC6666,CC3366,CC0066,99FF66,99CC66,999966,996666,993366,990066,FFFF33,FFCC33,FF9933,FF6633,FF3333,FF0033,CCFF33,CCCC33,CC9933,CC6633,CC3333,CC0033,99FF33,99CC33,999933,996633,993333,990033,FFFF00,FFCC00,FF9900,FF6600,FF3300,FF0000,CCFF00,CCCC00,CC9900,CC6600,CC3300,CC0000,99FF00,99CC00,999900,996600,993300,990000,66FFFF,66CCFF,6699FF,6666FF,6633FF,6600FF,33FFFF,33CCFF,3399FF,3366FF,3333FF,3300FF,00FFFF,00CCFF,0099FF,0066FF,0033FF,0000FF,66FFCC,66CCCC,6699CC,6666CC,6633CC,6600CC,33FFCC,33CCCC,3399CC,3366CC,3333CC,3300CC,00FFCC,00CCCC,0099CC,0066CC,0033CC,0000CC,66FF99,66CC99,669999,666699,663399,660099,33FF99,33CC99,339999,336699,333399,330099,00FF99,00CC99,009999,006699,003399,000099,66FF66,66CC66,669966,666666,663366,660066,33FF66,33CC66,339966,336666,333366,330066,00FF66,00CC66,009966,006666,003366,000066,66FF33,66CC33,669933,666633,663333,660033,33FF33,33CC33,339933,336633,333333,330033,00FF33,00CC33,009933,006633,003333,000033,66FF00,66CC00,669900,666600,663300,660000,33FF00,33CC00,339900,336600,333300,330000,00FF00,00CC00,009900,006600,003300,000000\",\n        NS = \".kendoColorTools\",\n        FOCUS_NS = \"focus\" + NS,\n        CLICK_NS = \"click\" + NS,\n        KEYDOWN_NS = \"keydown\" + NS,\n        BLUR_NS = \"blur\" + NS,\n        ColorSelector = ui.colorpicker.ColorSelector;\n\n    function preventDefault(ev) { ev.preventDefault(); }\n\n    function bind(callback, obj) {\n        return function() {\n            return callback.apply(obj, arguments);\n        };\n    }\n\n    function relative(array, element, delta) {\n        array = Array.prototype.slice.call(array);\n        var n = array.length;\n        var pos = array.indexOf(element);\n        if (pos < 0) {\n            return delta < 0 ? array[n - 1] : array[0];\n        }\n        pos += delta;\n        if (pos < 0) {\n            pos += n;\n        } else {\n            pos %= n;\n        }\n        return array[pos];\n    }\n\n    var ColorPalette = ColorSelector.extend({\n        init: function(element, options) {\n            var that = this;\n\n            ColorSelector.fn.init.call(that, element, options);\n\n            that._tabIndex = this.element.attr(\"tabindex\") || 0;\n\n            that._wrapper();\n\n            options = that.options;\n\n            that._selectedID = (options.ariaId || kendo.guid()) + \"_selected\";\n            that._ariaTemplate = kendo.template(that.options.ARIATemplate);\n\n            if (that._value) {\n                that._updateUI(that._value);\n                that.wrapper.find(DOT + ITEMSFOCUSEDCLASS).removeClass(ITEMSFOCUSEDCLASS);\n            }\n\n            that.wrapper.attr(\"aria-label\", that._ariaTemplate(that.value() || \"\"));\n\n            that._attachEvents();\n        },\n        focus: function(){\n            if (this.wrapper && !this.wrapper.is(\"[unselectable='on']\")) {\n                this.wrapper.trigger(\"focus\");\n            }\n        },\n        options: {\n            name: \"ColorPalette\",\n            columns: 10,\n            tileSize: null,\n            palette: \"basic\"\n        },\n        _attachEvents: function() {\n            var that = this;\n\n            that.wrapper.on(CLICK_NS, DOT + TILE_CLASS, function(ev){\n                that._select(ev.currentTarget);\n            })\n            .on(KEYDOWN_NS, bind(that._keydown, that))\n            .on(BLUR_NS, function(){\n                that.wrapper.find(DOT + TILE_CLASS).removeClass(ITEMSFOCUSEDCLASS);\n            })\n            .on(FOCUS_NS, bind(that._focus, that));\n        },\n        _colors: function() {\n            var options = this.options,\n                colors = options.palette || \"basic\";\n\n            if (colors == \"websafe\") {\n                colors = WEBPALETTE;\n                options.columns = 18;\n            } else if (colors == \"basic\") {\n                colors = SIMPLEPALETTE;\n            }\n\n            if (typeof colors == \"string\") {\n                colors = colors.split(\",\");\n            }\n\n            if (Array.isArray(colors)) {\n                colors = $.map(colors, function(x) { return parseColor(x); });\n            }\n\n            return colors;\n        },\n        _current: function(item) {\n            this.wrapper.find(DOT + TILE_CLASS)\n                .removeClass(ITEMSFOCUSEDCLASS)\n                .removeAttr(\"id\");\n\n            $(item)\n                .addClass(ITEMSFOCUSEDCLASS)\n                .attr(\"id\", this._selectedID);\n\n            this.wrapper\n                .removeAttr(\"aria-activedescendant\")\n                .attr(\"aria-activedescendant\", this._selectedID);\n        },\n        _focus: function() {\n            var wrapper = this.wrapper,\n                selected = wrapper.find(\"#\" + this._selectedID);\n\n            if (selected.length === 0) {\n                this._current(wrapper.find(DOT + TILE_CLASS).first());\n            }\n        },\n        _keydown: function(e) {\n            var newCurrent,\n                wrapper = this.wrapper,\n                items = wrapper.find(DOT + TILE_CLASS),\n                current = items.filter(DOT + ITEMSFOCUSEDCLASS).get(0) || items.filter(DOT + ITEMSELECTEDCLASS).get(0),\n                keyCode = e.keyCode,\n                index;\n\n            if (current) {\n                index = Array.prototype.indexOf.call(current.parentNode.children, current);\n            }\n\n            if (keyCode == KEYS.LEFT) {\n                newCurrent = current ? current.previousSibling : items[items.length - 1];\n            } else if (keyCode == KEYS.RIGHT) {\n                newCurrent = current ? current.nextSibling : items[0];\n            } else if (keyCode == KEYS.DOWN) {\n                newCurrent = current ? (current.parentNode.nextSibling ? current.parentNode.nextSibling.children[index] : null) : items[0];\n            } else if (keyCode == KEYS.UP) {\n                newCurrent = current ? (current.parentNode.previousSibling ? current.parentNode.previousSibling.children[index] : null) : items.get[items.length - 1];\n            } else if (keyCode == KEYS.ENTER) {\n                preventDefault(e);\n                if (current) {\n                    this._select(current);\n                    this.trigger(\"forceSelect\", { value: this.value() });\n                    return;\n                }\n            } else if (keyCode == KEYS.ESC) {\n                this._cancel();\n            }\n\n            if (newCurrent && newCurrent.nodeType !== 1) {\n                newCurrent = null;\n            }\n\n            if (newCurrent) {\n                preventDefault(e);\n\n                this._current(newCurrent);\n            }\n        },\n        _onEnable: function(enable) {\n            if (this.options._standalone) {\n                if (enable) {\n                    this.wrapper.attr(\"tabindex\", this._tabIndex);\n                    this.wrapper.removeAttr(\"aria-disabled\");\n                } else {\n                    this.wrapper.removeAttr(\"tabindex\");\n                    this.wrapper.attr(\"aria-disabled\", true);\n                }\n            }\n        },\n        _select: function(item) {\n            var that = this,\n                items = that.wrapper.find(DOT + TILE_CLASS);\n\n            item = $(item);\n\n            ColorSelector.fn._select.call(that, item.css(BACKGROUNDCOLOR));\n\n            items.removeClass(ITEMSELECTEDCLASS).removeAttr(\"aria-selected\");\n            item.addClass(ITEMSELECTEDCLASS).attr(\"aria-selected\", true);\n        },\n        _template: kendo.template(({colors, columns, tileSize, value, id}) => {\n            let startPart = '<table class=\"k-colorpalette-table\" role=\"presentation\"><tr role=\"row\">';\n\n            let cellElements = \"\";\n            for (var i = 0; i < colors.length; ++i) {\n                let selected = colors[i].equals(value);\n                if (i && i % columns == 0) {\n                    cellElements += '</tr><tr role=\"row\">';\n                }\n\n                cellElements +=\n                `<td role=\"gridcell\" unselectable=\"on\" ${kendo.attr(\"style-background-color\")}=\"${colors[i].toCss()}\"` +\n                    `${selected ? \" aria-selected=true\" : \"\"} ` +\n                    `${(id && i === 0) ? 'id=\\\\\"' + id + '\\\\\" ' : '' } ` +\n\n                    `class=\"k-colorpalette-tile${selected ? \" \" + ITEMSELECTEDCLASS : \"\"}\" ` +\n                    `aria-label=\"${colors[i].toCss()}\"></td>`;\n            }\n\n            let endPart = '</tr></table>';\n            return startPart + cellElements + endPart;\n        }),\n        _tileSize: function() {\n            var tileSize = this.options.tileSize,\n                width, height;\n\n            if (tileSize) {\n                if (/number|string/.test(typeof tileSize)) {\n                    width = height = parseFloat(tileSize);\n                } else if (typeof tileSize == \"object\") {\n                    width = parseFloat(tileSize.width);\n                    height = parseFloat(tileSize.height);\n                } else {\n                    throw new Error(\"Unsupported value for the 'tileSize' argument\");\n                }\n                this.wrapper.find(DOT + TILE_CLASS).css({ width: width, height: height });\n            }\n        },\n        _updateUI: function(color) {\n            var item = null,\n                items = this.wrapper.find(DOT + TILE_CLASS);\n\n            this.wrapper.find(DOT + TILE_CLASS).each(function(){\n                var c = parseColor($(this).css(BACKGROUNDCOLOR));\n\n                if (c && c.equals(color)) {\n                    item = this;\n\n                    return false;\n                }\n            });\n\n            this._current(item);\n\n            items.removeClass(ITEMSELECTEDCLASS);\n\n            if (item) {\n                $(item).addClass(ITEMSELECTEDCLASS);\n                this.wrapper.attr(\"aria-label\", this._ariaTemplate(this.value() || \"\"));\n            }\n        },\n        _wrapper: function() {\n            var options = this.options,\n                colors = this._colors(),\n                wrapper,\n                templateElement;\n\n            if (this.element.is(\"input\")) {\n                wrapper = this.element.addClass(\"k-hidden\").wrap(\"<div>\").parent();\n            } else {\n                wrapper = this.element;\n            }\n\n            templateElement = $(this._template({\n                colors: colors,\n                columns: options.columns,\n                tileSize: options.tileSize,\n                value: this._value,\n                id: options.ariaId\n            }));\n\n            kendo.applyStylesFromKendoAttributes(templateElement, [\"background-color\"]);\n            wrapper.addClass(\"k-colorpalette\")\n                .attr(\"role\", \"grid\")\n                .append(templateElement)\n                .attr(\"tabindex\", this._tabIndex);\n\n            this.wrapper = wrapper;\n            this._tileSize();\n        }\n    });\n\n\n    ui.plugin(ColorPalette);\n\n\n})(__webpack_provided_window_dot_kendo.jQuery);\n\n(function($, undefined$1){\n    // WARNING: removing the following jshint declaration and turning\n    // == into === to make JSHint happy will break functionality.\n\n    var kendo = __webpack_provided_window_dot_kendo,\n        ui = kendo.ui,\n        html = kendo.html,\n        Color = kendo.Color,\n        extend = $.extend,\n        encode = kendo.htmlEncode,\n        BACKGROUNDCOLOR = \"background-color\",\n        MESSAGES = {\n            apply  : \"Apply\",\n            cancel : \"Cancel\",\n            noColor: \"no color\",\n            clearColor: \"Clear color\",\n            previewInput: null,\n            contrastRatio: \"Contrast ratio:\",\n            fail: \"Fail\",\n            pass: \"Pass\",\n            hex: \"HEX\",\n            toggleFormat: \"Toggle format\",\n            red: \"Red\",\n            green: \"Green\",\n            blue: \"Blue\",\n            alpha: \"Alpha\",\n            gradient: \"Gradient view\",\n            palette: \"Palette view\"\n        },\n        NS = \".kendoColorTools\",\n        CLICK_NS = \"click\" + NS,\n        KEYDOWN_NS = \"keydown\" + NS,\n        ColorSelector = ui.colorpicker.ColorSelector,\n        KEYS = kendo.keys,\n\n        NO_COLOR = \"k-no-color\",\n        SELECTED = \"k-selected\",\n        PREVIEW_MASK = \".k-color-preview-mask\",\n\n        ARIA_PRESSED = \"aria-pressed\",\n        ARIA_DISABLED = \"aria-disabled\",\n\n        VIEWS = {\n            \"gradient\": ui.ColorGradient,\n            \"palette\": ui.ColorPalette\n        };\n\n    function bind(callback, obj) {\n        return function() {\n            return callback.apply(obj, arguments);\n        };\n    }\n\n    var FlatColorPicker = ColorSelector.extend({\n        init: function(element, options) {\n            var that = this;\n\n            if (options && options.autoupdate === false) {\n                options._standalone = false;\n            }\n\n            ColorSelector.fn.init.call(that, element, options);\n            options = that.options = kendo.deepExtend({}, that.options, options);\n            element = that.element;\n\n            that._wrapper();\n\n            var value = that.color();\n\n            that._changeView(options.view);\n\n            that._setViewSize();\n\n            if (value) {\n                that._updateUI(value);\n                that._previousColor.children(PREVIEW_MASK).css(BACKGROUNDCOLOR, value.toDisplay());\n                that._selectedColor.children(PREVIEW_MASK).css(BACKGROUNDCOLOR, value.toDisplay());\n            } else {\n                that._selectedColor.addClass(NO_COLOR);\n                that._previousColor.addClass(NO_COLOR);\n            }\n\n            that._attachEvents();\n            that._navigation();\n        },\n        destroy: function() {\n            var that = this;\n\n            ColorSelector.fn.destroy.call(this);\n\n            if (that._view) {\n                that._view.destroy();\n                that._viewsContainer.empty();\n            }\n\n            that.element.off(NS);\n\n            that._selectedColor = that._previousColor = that._viewsContainer = that._view = null;\n        },\n        options: {\n            name: \"FlatColorPicker\",\n            opacity: false,\n            buttons: false,\n            input: true,\n            preview: true,\n            clearButton: false,\n            format: \"hex\",\n            formats: [\"rgb\", \"hex\"],\n            view: \"gradient\",\n            views: [\"gradient\", \"palette\"],\n            palette: null,\n            autoupdate : true,\n            backgroundColor: null,\n            columns: 10,\n            tileSize: 24,\n            messages   : MESSAGES,\n            size: \"medium\", // Fake styling option to accomplish colorpicker's size for textbox and button\n            _otOfPicker: true\n        },\n        setBackgroundColor: function (color) {\n            var that = this;\n\n            if(that._view && that._view.setBackgroundColor) {\n                that._view.setBackgroundColor(color);\n            }\n        },\n        _attachEvents: function() {\n            var that = this;\n\n            that.wrapper\n                .on(KEYDOWN_NS, bind(that._keydown, that))\n                .on(CLICK_NS, \".k-button[data-command]\", function () {\n                    that._clearColor = true;\n                    that._updateUI(null);\n                    that._view.value(null);\n                })\n                .on(CLICK_NS, \".k-coloreditor-apply\", function(){\n                    if(that._clearColor) {\n                        that._select(null);\n                    } else {\n                        that._select(that._view.color());\n                    }\n                })\n                .on(CLICK_NS, \".k-coloreditor-cancel\", function(){\n                    delete that._clearColor;\n                    that._updateUI(that.color());\n                    that._cancel();\n                })\n                .on(CLICK_NS, \".k-button[data-view]\", function(ev){\n                    var viewButton =  $(ev.target).closest(\"[data-view]\");\n\n                    if(viewButton.is(\".\" + SELECTED)) {\n                        return;\n                    }\n\n                    that.wrapper.find(\".k-button[data-view]\").removeClass(SELECTED).attr(ARIA_PRESSED, false);\n                    viewButton.addClass(SELECTED).attr(ARIA_PRESSED, true);\n                    that._changeView(viewButton.data(\"view\"));\n                });\n        },\n        _select: function(value) {\n            var that = this;\n\n            ColorSelector.fn._select.call(that, value);\n\n            that._updatePreviousColor(value);\n        },\n        _updatePreviousColor: function (value) {\n            var that = this;\n\n            if (value) {\n                that._previousColor.removeClass(NO_COLOR);\n                that._previousColor.children(PREVIEW_MASK).css(BACKGROUNDCOLOR, value.toDisplay());\n            } else {\n                that._previousColor.addClass(NO_COLOR);\n                that._previousColor.children(PREVIEW_MASK).css(BACKGROUNDCOLOR, \"\");\n            }\n        },\n        _changeView: function (mode) {\n            var that = this,\n                options = $.extend({}, that.options),\n                selector =  VIEWS[mode],\n                selectedColor, hsvColor;\n\n            if(that._view && that._view._colorInput) {\n                that.options.format = that._view._colorInput._viewModel.format;\n            }\n\n            that.options.view = mode;\n\n            delete options.name;\n            delete options.change;\n            delete options.select;\n            delete options.cancel;\n            delete options._standalone;\n\n            if (that._view) {\n                selectedColor = that._view.color();\n                that._view.destroy();\n                that._viewsContainer.empty();\n            }\n\n            if (selectedColor) {\n                selectedColor = selectedColor.toHSV();\n                hsvColor = Color.fromHSV(that._cachedHue || 0, selectedColor.s, selectedColor.v, selectedColor.a);\n                that._cachedHue = selectedColor.toHSV().h;\n                selectedColor = selectedColor.equals(hsvColor) ? hsvColor : selectedColor;\n            }\n\n            options._otOfPicker = false;\n\n            if (selector) {\n                that._view = new VIEWS[mode]($(\"<div></div>\").appendTo(that._viewsContainer), options);\n                that._view.value(selectedColor);\n\n                that._view.bind(\"change\", function (ev) {\n                    delete that._clearColor;\n                    that._updateUI(ev.sender.color(), true);\n                });\n\n                that._view.bind(\"forceSelect\", function (ev) {\n                    delete that._clearColor;\n                    that._select(ev.sender.color());\n                });\n            }\n        },\n        _onEnable: function(enable) {\n            var that = this;\n\n            if (that._view) {\n                that._view._onEnable(enable);\n            }\n\n            if (that.options._standalone) {\n                if (enable) {\n                    that.wrapper.removeAttr(ARIA_DISABLED);\n                } else {\n                    that.wrapper.attr(ARIA_DISABLED, true);\n                }\n            }\n        },\n        focus: function() {\n            var that = this;\n\n            if (that._view) {\n                that._view.focus();\n            }\n        },\n        _updateUI: function(color, dontChangeView) {\n            var that = this;\n\n            if (color && color.toDisplay) {\n                that._selectedColor.removeClass(NO_COLOR);\n                that._selectedColor.children(PREVIEW_MASK).css(BACKGROUNDCOLOR, color.toDisplay());\n            } else {\n                that._selectedColor.addClass(NO_COLOR);\n                that._selectedColor.children(PREVIEW_MASK).css(BACKGROUNDCOLOR, \"\");\n            }\n\n            that._triggerSelect(color);\n\n            if (that.options.autoupdate) {\n                that._updatePreviousColor(color);\n            }\n\n            if(!dontChangeView) {\n                that._view.value(color);\n            }\n        },\n        _setViewSize: function() {\n            var that = this,\n                wrapper = that.wrapper[0],\n                previewWidth = parseInt((that.options.tileSize.width || that.options.tileSize), 10),\n                previewHeight = parseInt((that.options.tileSize.width || that.options.tileSize), 10),\n                previewColumns = that.options.columns;\n\n            wrapper.style.setProperty(\"--kendo-color-preview-columns\", previewColumns);\n            wrapper.style.setProperty(\"--kendo-color-preview-width\", previewWidth + \"px\");\n            wrapper.style.setProperty(\"--kendo-color-preview-height\", previewHeight + \"px\");\n        },\n        _keydown: function(e) {\n            if (e.keyCode == KEYS.ESC) {\n                this._cancel();\n            }\n        },\n        _template: function () {\n            var that = this,\n                options = that.options,\n                buttonOptions = extend({}, options, {\n                    fillMode: \"flat\",\n                    themeColor: \"base\",\n                    rounded: \"medium\"\n                });\n\n            return kendo.template((options, buttonOptions) =>\n                    '<div class=\"k-coloreditor-header k-hstack\">' +\n                        ((options.views && options.views.length > 1) ?\n                        '<div class=\"k-coloreditor-header-actions k-hstack\">' +\n                            '<div role=\"group\" class=\"k-button-group k-button-group-flat\">' +\n                                html.renderButton(`<button aria-pressed=\"false\" data-view=\"gradient\" title=\"${encode(options.messages.gradient)}\"></button>`, extend({ icon: \"droplet-slider\" }, buttonOptions)) +\n                                html.renderButton(`<button aria-pressed=\"false\" data-view=\"palette\" title=\"${encode(options.messages.palette)}\"></button>`, extend({ icon: \"palette\" }, buttonOptions)) +\n                            '</div>' +\n                        '</div>'\n                        : '') +\n                        '<div class=\"k-spacer\"></div>' +\n                        '<div class=\"k-coloreditor-header-actions k-hstack\">' +\n                            (options.clearButton ?\n                            html.renderButton(`<button data-command=\"reset\" title=\"${encode(options.messages.clearColor)}\"></button>`, extend({ icon: \"droplet-slash\" }, buttonOptions))\n                            : '') +\n                            (options.preview ?\n                            '<div class=\"k-coloreditor-preview k-vstack\">' +\n                                '<span class=\"k-coloreditor-preview-color k-color-preview\">' +\n                                    '<span class=\"k-color-preview-mask\"></span>' +\n                                '</span>' +\n                                '<span class=\"k-coloreditor-current-color k-color-preview\">' +\n                                    '<span class=\"k-color-preview-mask\"></span>' +\n                                '</span>' +\n                            '</div>'\n                            : '') +\n                        '</div>' +\n                    '</div>' +\n                    '<div class=\"k-coloreditor-views k-vstack\"></div>' +\n                    (options.buttons ?\n                    '<div class=\"k-coloreditor-footer k-actions k-actions-end k-actions-horizontal\">' +\n                        html.renderButton(`<button class=\"k-coloreditor-cancel\" title=\"${encode(options.messages.cancel)}\">${encode(options.messages.cancel)}</button>`, extend({}, buttonOptions, { fillMode: \"solid\" })) +\n                        html.renderButton(`<button class=\"k-coloreditor-apply\" title=\"${encode(options.messages.apply)}\">${encode(options.messages.apply)}</button>`, extend({}, buttonOptions, { fillMode: \"solid\", themeColor: \"primary\" })) +\n                    '</div>'\n                    : '')\n                )(options, buttonOptions);\n        },\n        _wrapper: function() {\n            var options = this.options,\n                wrapper;\n\n            if (this.element.is(\"input\")) {\n                wrapper = this.element.addClass(\"k-hidden\").wrap(\"<div>\").parent();\n            } else {\n                wrapper = this.element;\n            }\n\n            wrapper.addClass(\"k-flatcolorpicker k-coloreditor\")\n                .attr({\n                    \"role\": \"textbox\",\n                    \"aria-keyshortcuts\": \"Enter\"\n                })\n                .append(this._template());\n\n            this._selectedColor = $(\".k-coloreditor-preview-color\", wrapper);\n            this._previousColor = $(\".k-coloreditor-current-color\", wrapper);\n            this._viewsContainer = $(\".k-coloreditor-views\", wrapper);\n\n            wrapper.find(\".k-button[data-view=\" + options.view + \"]\").addClass(SELECTED).attr(ARIA_PRESSED, true);\n\n            this.wrapper = wrapper;\n        }\n    });\n\n    ui.plugin(FlatColorPicker);\n})(__webpack_provided_window_dot_kendo.jQuery);\n\nvar __meta__ = {\n    id: \"colorpicker\",\n    name: \"Color tools\",\n    category: \"web\",\n    description: \"Color selection widgets\",\n    depends: [ \"core\", \"color\", \"popup\", \"slider\", \"userevents\", \"button\", \"binder\", \"textbox\", \"numerictextbox\", \"html.button\" ]\n};\n\n(function($, undefined$1) {\n    // WARNING: removing the following jshint declaration and turning\n    // == into === to make JSHint happy will break functionality.\n\n    var kendo = __webpack_provided_window_dot_kendo,\n        ui = kendo.ui,\n        Widget = ui.Widget,\n        Color = kendo.Color,\n        parseColor = kendo.parseColor,\n        KEYS = kendo.keys,\n        BACKGROUNDCOLOR = \"background-color\",\n        MESSAGES = {\n            apply: \"Apply\",\n            cancel: \"Cancel\",\n            noColor: \"no color\",\n            clearColor: \"Clear color\",\n            previewInput: null,\n            contrastRatio: \"Contrast ratio:\",\n            fail: \"Fail\",\n            pass: \"Pass\",\n            hex: \"HEX\",\n            toggleFormat: \"Toggle format\",\n            red: \"Red\",\n            green: \"Green\",\n            blue: \"Blue\",\n            alpha: \"Alpha\",\n            gradient: \"Gradient view\",\n            palette: \"Palette view\"\n        },\n        NS = \".kendoColorTools\",\n        CLICK_NS = \"click\" + NS,\n        KEYDOWN_NS = \"keydown\" + NS,\n        ColorSelector = ui.colorpicker.ColorSelector,\n        FlatColorPicker = ui.FlatColorPicker;\n\n    /* -----[ The ColorPicker widget ]----- */\n\n    var ColorPicker = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            // Legacy support for the cases where only palette is defined\n            if (options && options.palette && !options.view) {\n                options.view = \"palette\";\n            }\n\n            Widget.fn.init.call(that, element, options);\n            options = that.options = kendo.deepExtend({}, that.options, options);\n            element = that.element;\n\n            let value = parseColor(options.value || element.attr(\"value\") || element.val(), true);\n            that._value = options.value = value;\n\n            var _buttonHtml = kendo.html.renderButton('<button class=\"k-input-button\" unselectable=\"on\" aria-label=\"select\" tabindex=\"-1\"></button>', $.extend({}, that.options, {\n                icon: \"caret-alt-down\"\n            }));\n\n            var content = that._inputWrapper = that.wrapper = $(that._template($.extend({}, that.options, {\n                _buttonHtml: _buttonHtml\n            })));\n\n            that._applyCssClasses();\n            element.hide().after(content);\n\n            if (element.is(\"input\")) {\n                element.appendTo(content);\n                that._preventDefaultLabelClick();\n            }\n\n            that._tabIndex = element.attr(\"tabIndex\") || 0;\n\n            that.enable(!element.attr(\"disabled\"));\n\n            var accesskey = element.attr(\"accesskey\");\n            if (accesskey) {\n                element.attr(\"accesskey\", null);\n                content.attr(\"accesskey\", accesskey);\n            }\n\n            that.bind(\"activate\", function(ev) {\n                if (!ev.isDefaultPrevented()) {\n                    that.toggle();\n                }\n            });\n\n            that._updateUI(value);\n        },\n        destroy: function() {\n            this.wrapper.off(NS).find(\"*\").off(NS);\n            if (this._popup) {\n                this._selector.destroy();\n                this._popup.destroy();\n            }\n            this._selector = this._popup = this.wrapper = null;\n            Widget.fn.destroy.call(this);\n        },\n        enable: function(enable) {\n            var that = this,\n                wrapper = that.wrapper,\n                arrow = wrapper.find(\".k-input-button\");\n\n            if (arguments.length === 0) {\n                enable = true;\n            }\n\n            that.element.attr(\"disabled\", !enable);\n            wrapper.attr(\"aria-disabled\", !enable);\n\n            arrow.off(NS).on(\"mousedown\" + NS, preventDefault);\n\n            wrapper.addClass(\"k-disabled\")\n                .removeAttr(\"tabIndex\")\n                .add(\"*\", wrapper).off(NS);\n\n            if (enable) {\n                wrapper.removeClass(\"k-disabled\")\n                    .attr(\"tabIndex\", that._tabIndex)\n                    .on(\"mouseenter\" + NS, function() { wrapper.addClass(\"k-hover\"); })\n                    .on(\"mouseleave\" + NS, function() { wrapper.removeClass(\"k-hover\"); })\n                    .on(\"focus\" + NS, function() { wrapper.addClass(\"k-focus\"); })\n                    .on(\"blur\" + NS, function() { wrapper.removeClass(\"k-focus\"); })\n                    .on(KEYDOWN_NS, bind(that._keydown, that))\n                    .on(CLICK_NS, \".k-input-button\", bind(that.toggle, that))\n                    .on(CLICK_NS, \".k-input-inner\", function() {\n                        that.trigger(\"activate\");\n                    });\n            } else {\n                that.close();\n            }\n        },\n\n        _template: kendo.template(({ toolIcon, _buttonHtml }) =>\n           '<span role=\"combobox\" aria-haspopup=\"dialog\" aria-expanded=\"false\" class=\"k-colorpicker k-picker k-icon-picker\">' +\n                '<span class=\"k-input-inner\">' +\n                    `<span class=\"k-value-icon k-color-preview ${toolIcon ? 'k-icon-color-preview' : ''}\">` +\n                        (toolIcon ? kendo.ui.icon({ icon: toolIcon, iconClass: \"k-color-preview-icon\" }) : '') +\n                        '<span class=\"k-color-preview-mask\"></span>' +\n                    '</span>' +\n                '</span >' +\n                _buttonHtml +\n            '</span>'\n        ),\n\n        options: {\n            name: \"ColorPicker\",\n            closeOnSelect: false,\n            contrastTool: false,\n            palette: null,\n            columns: 10,\n            toolIcon: null,\n            value: null,\n            messages: MESSAGES,\n            opacity: false,\n            buttons: true,\n            preview: true,\n            clearButton: false,\n            input: true,\n            format: \"hex\",\n            formats: [\"rgb\", \"hex\"],\n            view: \"gradient\",\n            views: [\"gradient\", \"palette\"],\n            backgroundColor: null,\n            ARIATemplate: (data) => `Current selected color is ${data || \"none\"}`,\n            size: \"medium\",\n            rounded: \"medium\",\n            fillMode: \"solid\"\n        },\n\n        events: [ \"activate\", \"change\", \"select\", \"open\", \"close\" ],\n\n        open: function() {\n            if (!this.element.prop(\"disabled\")) {\n                this._getPopup().open();\n            }\n        },\n        close: function() {\n            var selOptions = (this._selector && this._selector.options) || {};\n            selOptions._closing = true;\n            this._getPopup().close();\n\n            delete selOptions._closing;\n        },\n        toggle: function() {\n            if (!this.element.prop(\"disabled\")) {\n                this._getPopup().toggle();\n            }\n        },\n        setBackgroundColor: function(color) {\n            var that = this,\n                handler = function() { that._selector.setBackgroundColor(color); };\n\n            that.options.contrastTool.backgroundColor = color;\n\n            if (that._selector && (that._popup && that._popup.visible())) {\n                that._selector.setBackgroundColor(color);\n            } else if (that._popup) {\n                that._popup.unbind(\"activate\", handler);\n                that._popup.bind(\"activate\", handler);\n            }\n        },\n        _noColorIcon: function() {\n            return this.wrapper.find(\".k-color-preview\");\n        },\n        color: ColorSelector.fn.color,\n        value: ColorSelector.fn.value,\n        _select: ColorSelector.fn._select,\n        _triggerSelect: ColorSelector.fn._triggerSelect,\n        _isInputTypeColor: ColorSelector.fn._isInputTypeColor,\n\n        _preventDefaultLabelClick: function() {\n            // if there exists a <label> associated with this\n            // input field, we must catch clicks on it to prevent\n            // the built-in color picker from showing up.\n            // https://github.com/telerik/kendo-ui-core/issues/292\n            var that = this,\n                element = that.element,\n                label = element.closest(\"label\"),\n                id = element.attr(\"id\");\n\n            if (id) {\n                label = label.add('label[for=\"' + id + '\"]');\n            }\n            label.on(\"click\", function(ev) {\n                that.open();\n                ev.preventDefault();\n            });\n        },\n\n        _updateUI: function(value, dontChangeSelector) {\n            this._updateInput(value);\n            this._triggerSelect(value);\n\n            this.wrapper.find(\".k-color-preview-mask\").css(\n                BACKGROUNDCOLOR,\n                value ? value.toDisplay() : \"\"\n            );\n\n            this._noColorIcon().toggleClass(\"k-no-color\", !value);\n\n            if (this._selector && !dontChangeSelector) {\n                this._selector.value(value);\n            }\n        },\n        _updateInput: function(value) {\n            var formattedValue = \"\";\n\n            if (value) {\n                if (this._isInputTypeColor() || value.a == 1) {\n                    // seems that input type=\"color\" doesn't support opacity\n                    // in colors; the only accepted format is hex #RRGGBB\n                    formattedValue = value.toCss();\n                } else {\n                    formattedValue = value.toCssRgba();\n                }\n\n                this.element.val(formattedValue);\n            }\n\n            if (!this._ariaTemplate) {\n                this._ariaTemplate = kendo.template(this.options.ARIATemplate);\n            }\n\n            this.wrapper.attr(\"aria-label\", this._ariaTemplate(formattedValue));\n        },\n        _keydown: function(ev) {\n            var key = ev.keyCode;\n            if (this._getPopup().visible()) {\n                if (key == KEYS.ESC) {\n                    this._selector._cancel();\n                } else {\n                    this._selector._keydown(ev);\n                }\n                preventDefault(ev);\n            }\n            else if (key == KEYS.ENTER || key == KEYS.DOWN) {\n                this.open();\n                preventDefault(ev);\n            }\n        },\n        _getPopup: function() {\n            var that = this, popup = that._popup;\n\n            if (!popup) {\n                var options = that.options;\n                var selectorType;\n\n                selectorType = FlatColorPicker;\n\n                options.autoupdate = options.buttons !== true;\n                delete options.select;\n                delete options.change;\n                delete options.cancel;\n\n                options._otOfPicker = false;\n\n                var id = kendo.guid();\n\n                var selectorWrapper = $('<div id=\"' + id + '\" class=\"k-colorpicker-popup\"></div>').appendTo(document.body);\n                var selector = that._selector = new selectorType($('<div></div>').appendTo(selectorWrapper), options);\n\n                that.wrapper.attr(\"aria-controls\", id);\n\n                that._popup = popup = selectorWrapper.kendoPopup({\n                    anchor: that.wrapper,\n                    adjustSize: { width: 5, height: 0 }\n                }).data(\"kendoPopup\");\n\n                selector.bind({\n                    select: function(ev) {\n                        that._updateUI(parseColor(ev.value), true);\n                    },\n                    change: function(ev) {\n                        if (that.options.buttons) {\n                            that._select(selector.color());\n                        } else {\n                            that._updateUI(parseColor(ev.value), true);\n                        }\n\n                        if (that.options.buttons || (that._selector.options.view === \"palette\" && that.options.closeOnSelect)) {\n                            that.close();\n                        }\n                    },\n                    cancel: function() {\n                        that.close();\n                    }\n                });\n                popup.bind({\n                    close: function(ev) {\n                        if (that.trigger(\"close\")) {\n                            ev.preventDefault();\n                            return;\n                        }\n                        that.wrapper.removeClass(\"k-focus\");\n\n                        var color = selector.color();\n\n                        if (!that.options.buttons) {\n                            that._select(color);\n                        } else {\n                            that._select(that.color());\n                        }\n\n                        color = that.color();\n\n                        if (color && color.h) {\n                            that._cachedHue = color.h;\n                        }\n\n                        var clickedOutside = event &&\n                            event instanceof MouseEvent &&\n                            $(event.target).parents(\".k-colorpicker-popup\").length === 0;\n\n                        if (!clickedOutside) {\n                            setTimeout(function() {\n                                if (that.wrapper && !that.wrapper.is(\"[unselectable='on']\")) {\n                                    that.wrapper.trigger(\"focus\");\n                                }\n                            }, 0);\n                        }\n\n                        that.wrapper.attr(\"aria-expanded\", false);\n                    },\n                    open: function(ev) {\n                        if (that.trigger(\"open\")) {\n                            ev.preventDefault();\n                        } else {\n                            that.wrapper.addClass(\"k-focus\");\n                            that.wrapper.attr(\"aria-expanded\", true);\n                        }\n                    },\n                    activate: function() {\n                        var hsvColor,\n                            selectedColor = that.color();\n\n                        if (selectedColor) {\n                            selectedColor = selectedColor.toHSV();\n                            hsvColor = Color.fromHSV(that._cachedHue || 0, selectedColor.s, selectedColor.v, selectedColor.a);\n                            selectedColor = selectedColor.equals(hsvColor) ? hsvColor : selectedColor;\n                        }\n\n                        selector.value(selectedColor);\n                        selector.focus();\n                        that.wrapper.addClass(\"k-focus\");\n                    }\n                });\n            }\n            return popup;\n        }\n    });\n\n    function preventDefault(ev) { ev.preventDefault(); }\n\n    function bind(callback, obj) {\n        return function() {\n            return callback.apply(obj, arguments);\n        };\n    }\n\n    ui.plugin(ColorPicker);\n\n    kendo.cssProperties.registerPrefix(\"ColorPicker\", \"k-picker-\");\n\n    kendo.cssProperties.registerValues(\"ColorPicker\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.colorpicker.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.combobox.js":
/*!**********************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.combobox.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_list_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.list.js */ \"./node_modules/kendo-ui-core/esm/kendo.list.js\");\n/* harmony import */ var _kendo_mobile_scroller_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.mobile.scroller.js */ \"./node_modules/kendo-ui-core/esm/kendo.mobile.scroller.js\");\n/* harmony import */ var _kendo_virtuallist_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kendo.virtuallist.js */ \"./node_modules/kendo-ui-core/esm/kendo.virtuallist.js\");\n/* harmony import */ var _kendo_html_button_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./kendo.html.button.js */ \"./node_modules/kendo-ui-core/esm/kendo.html.button.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\n\n\nlet $ = kendo.jQuery;\n\nfunction addInputPrefixSuffixContainers({ widget, wrapper, options, prefixInsertBefore, suffixInsertAfter }) {\n    var prefix = options.prefixOptions,\n        suffix = options.suffixOptions,\n        hasPrefixContent = prefix.template || prefix.icon,\n        hasSuffixContent = suffix.template || suffix.icon,\n        suffixInsertAfter = suffixInsertAfter || prefixInsertBefore,\n        layoutFlow = options.layoutFlow,\n        containerOrientation = layoutFlow ? (layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\") : \"horizontal\",\n        separatorOrientation = layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\",\n        INPUT_SEPARATOR = `<span class=\"k-input-separator k-input-separator-${separatorOrientation}\"></span>`,\n        prefixContainer,\n        suffixContainer;\n\n    if (prefix && hasPrefixContent) {\n        prefixContainer = wrapper.children(\".k-input-prefix\");\n\n        if (!prefixContainer[0]) {\n            prefixContainer = $(`<span class=\"k-input-prefix k-input-prefix-${containerOrientation}\" />`);\n            if (prefixInsertBefore) {\n                prefixContainer.insertBefore(prefixInsertBefore);\n            } else {\n                prefixContainer.prependTo(wrapper);\n            }\n        }\n\n        if (prefix.icon) {\n            prefixContainer.html(kendo.html.renderIcon({ icon: prefix.icon }));\n        }\n\n        if (prefix.template) {\n            prefixContainer.html(kendo.template(prefix.template)({}));\n        }\n\n        if (prefix.separator) {\n            $(INPUT_SEPARATOR).insertAfter(prefixContainer);\n        }\n    }\n\n    if (suffix && hasSuffixContent) {\n        suffixContainer = wrapper.children(\".k-input-suffix\");\n\n        if (!suffixContainer[0]) {\n            suffixContainer = $(`<span class=\"k-input-suffix k-input-suffix-${containerOrientation}\" />`).appendTo(wrapper);\n            if (suffixInsertAfter) {\n                suffixContainer.insertAfter(suffixInsertAfter);\n            } else {\n                suffixContainer.appendTo(wrapper);\n            }\n        }\n\n        if (suffix.icon) {\n            suffixContainer.html(kendo.html.renderIcon({ icon: suffix.icon }));\n        }\n\n        if (suffix.template) {\n            suffixContainer.html(kendo.template(suffix.template)({}));\n        }\n\n        if (suffix.separator) {\n            $(INPUT_SEPARATOR).insertBefore(suffixContainer);\n        }\n    }\n\n    widget._prefixContainer = prefixContainer;\n    widget._suffixContainer = suffixContainer;\n}\n\nvar __meta__ = {\n    id: \"combobox\",\n    name: \"ComboBox\",\n    category: \"web\",\n    description: \"The ComboBox widget allows the selection from pre-defined values or entering a new value.\",\n    depends: [ \"list\", \"html.button\" ],\n    features: [ {\n        id: \"mobile-scroller\",\n        name: \"Mobile scroller\",\n        description: \"Support for kinetic scrolling in mobile device\",\n        depends: [ \"mobile.scroller\" ]\n    }, {\n        id: \"virtualization\",\n        name: \"VirtualList\",\n        description: \"Support for virtualization\",\n        depends: [ \"virtuallist\" ]\n    } ]\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        encode = kendo.htmlEncode,\n        ui = kendo.ui,\n        html = kendo.html,\n        List = ui.List,\n        Select = ui.Select,\n        caret = kendo.caret,\n        support = kendo.support,\n        placeholderSupported = support.placeholder,\n        activeElement = kendo._activeElement,\n        keys = kendo.keys,\n        ns = \".kendoComboBox\",\n        nsFocusEvent = ns + \"FocusEvent\",\n        CLICK = \"click\" + ns,\n        MOUSEDOWN = \"mousedown\" + ns,\n        DISABLED = \"disabled\",\n        READONLY = \"readonly\",\n        CHANGE = \"change\",\n        LOADING = \"k-i-loading k-input-loading-icon\",\n        FOCUSED = \"k-focus\",\n        STATEDISABLED = \"k-disabled\",\n        ARIA_DISABLED = \"aria-disabled\",\n        ARIA_READONLY = \"aria-readonly\",\n        AUTOCOMPLETEVALUE = \"off\",\n        STATE_FILTER = \"filter\",\n        STATE_ACCEPT = \"accept\",\n        STATE_REBIND = \"rebind\",\n        HOVEREVENTS = \"mouseenter\" + ns + \" mouseleave\" + ns,\n        newLineRegEx = /(\\r\\n|\\n|\\r)/gm,\n        NON_PRINTABLE_KEYS = [16,17,18,19,20,33,34,37,39,45,91,92,144,145];\n\n    var ComboBox = Select.extend({\n        init: function(element, options) {\n            var that = this, text, disabled;\n\n            that.ns = ns;\n\n            options = Array.isArray(options) ? { dataSource: options } : options;\n\n            Select.fn.init.call(that, element, options);\n\n            options = that.options;\n            element = that.element.on(\"focus\" + ns, that._focusHandler.bind(that));\n\n            options.placeholder = options.placeholder || element.attr(\"placeholder\");\n\n            that._reset();\n\n            that._wrapper();\n\n            that._input();\n\n            that._clearButton();\n\n            that._tabindex(that.input);\n\n            that._popup();\n\n            that._dataSource();\n            that._ignoreCase();\n\n            that._enable();\n\n            that._attachFocusEvents();\n\n            that._oldIndex = that.selectedIndex = -1;\n\n            that._initialIndex = options.index;\n\n            that.requireValueMapper(that.options);\n            that._initList();\n\n            that._cascade();\n\n            if (options.autoBind) {\n                that._filterSource();\n            } else {\n                text = options.text;\n\n                if (!text && that._isSelect) {\n                    text = element.children(\":selected\").text();\n                }\n\n                if (text) {\n                    that._setText(text);\n                }\n            }\n\n            if (!text) {\n                that._placeholder();\n            }\n\n            disabled = $(that.element).parents(\"fieldset\").is(':disabled');\n\n            if (disabled) {\n                that.enable(false);\n            }\n\n            addInputPrefixSuffixContainers({ widget: that, wrapper: that.wrapper, options: that.options,\n                prefixInsertBefore: that.input,\n                suffixInsertAfter: that._clear.parent().length ? that._clear : that.input });\n\n            kendo.notify(that);\n            that._toggleCloseVisibility();\n            that._applyCssClasses();\n\n            if (options.label) {\n                that._label();\n            }\n\n            that._aria();\n        },\n\n        options: {\n            name: \"ComboBox\",\n            enabled: true,\n            index: -1,\n            text: null,\n            value: null,\n            autoBind: true,\n            delay: 200,\n            dataTextField: \"\",\n            dataValueField: \"\",\n            minLength: 1,\n            enforceMinLength: false,\n            height: 200,\n            highlightFirst: true,\n            filter: \"none\",\n            placeholder: \"\",\n            suggest: false,\n            cascadeFrom: \"\",\n            cascadeFromField: \"\",\n            cascadeFromParentField: \"\",\n            cascadeOnCustomValue: false,\n            ignoreCase: true,\n            animation: {},\n            virtual: false,\n            template: null,\n            groupTemplate: (data) => encode(data),\n            fixedGroupTemplate: (data) => encode(data),\n            prefixOptions: {\n                separator: true\n            },\n            suffixOptions: {\n                separator: true\n            },\n            clearButton: true,\n            syncValueAndText: true,\n            autoWidth: false,\n            popup: null,\n            size: \"medium\",\n            fillMode: \"solid\",\n            rounded: \"medium\",\n            label: null,\n            clearOnEscape: true,\n            _removeDataItems: true,\n            _shouldRefresh: true\n        },\n\n        events: [\n            \"open\",\n            \"close\",\n            CHANGE,\n            \"select\",\n            \"filtering\",\n            \"dataBinding\",\n            \"dataBound\",\n            \"cascade\",\n            \"set\"\n        ],\n\n        setOptions: function(options) {\n            var listOptions = this._listOptions(options);\n\n            Select.fn.setOptions.call(this, options);\n\n            this.listView.setOptions(listOptions);\n\n            this._accessors();\n            this._aria();\n            this._clearButton();\n        },\n\n        destroy: function() {\n            var that = this;\n\n            that.input.off(ns);\n            that.input.off(nsFocusEvent);\n            that.element.off(ns);\n            that.wrapper.off(ns);\n            clearTimeout(that._pasteTimeout);\n\n            if (that.filterInput) {\n                that.filterInput.off(ns);\n            }\n\n            that._arrow.off(CLICK + \" \" + MOUSEDOWN);\n            that._clear.off(CLICK + \" \" + MOUSEDOWN);\n\n            Select.fn.destroy.call(that);\n        },\n\n        _popup: function() {\n            Select.fn._popup.call(this);\n            this.popup.element.addClass(\"k-combobox-popup\");\n        },\n\n        _onActionSheetCreate: function() {\n            var that = this;\n\n            if (that.filterInput) {\n                that.filterInput\n                    .on(\"keydown\" + ns, that._keydown.bind(that))\n                    .on(\"input\" + ns, that._search.bind(that))\n                    .on(\"paste\" + ns, that._inputPaste.bind(that))\n                    .attr({\n                        \"role\": \"combobox\",\n                        \"aria-expanded\": false\n                    });\n\n                that.popup.bind(\"activate\", () => {\n                    that.filterInput.val(that.input.val());\n                    that.filterInput.trigger(\"focus\");\n                });\n\n                that.popup.bind(\"deactivate\", () => {\n                    that.input.trigger(\"focus\");\n                });\n            }\n        },\n\n        _onCloseButtonPressed: function() {\n            var that = this;\n            var textField = that.options.dataTextField || \"text\";\n            var current = that.listView.focus();\n\n            if (!current) {\n                if (that._syncValueAndText() || that._isSelect) {\n                    if (!that.dataItem() || that.dataItem()[textField] !== that.input.val()) {\n                        var input = that.filterInput && activeElement() === that.filterInput[0] ? that.filterInput : that.input;\n                        that._accessor(input.val());\n                    }\n                }\n\n                if (that.options.highlightFirst) {\n                    that.listView.value(that.input.val());\n                    that._blur();\n                } else {\n                    that._oldText = that.text();\n                }\n            }\n        },\n\n        _isValueChanged: function(value) {\n            return value !== List.unifyType(this._old, typeof value) &&\n                value !== List.unifyType(this._oldText, typeof value);\n        },\n\n        _change: function() {\n            var that = this;\n            var text = that.text();\n            var hasText = text && text !== that._oldText && text !== that.options.placeholder;\n            var index = that.selectedIndex;\n            var isCustom = index === -1;\n\n            if (that.filterInput && activeElement() === that.filterInput[0] && isCustom && hasText) {\n                that.input.val(that.filterInput.val());\n            }\n\n            if (!that.options.syncValueAndText && !that.value() && isCustom && hasText) {\n                that._old = \"\";\n                that._oldIndex = index;\n                that._oldText = text;\n\n                if (!that._typing) {\n                    // trigger the DOM change event so any subscriber gets notified\n                    that.element.trigger(CHANGE);\n                }\n\n                that.trigger(CHANGE);\n                that._typing = false;\n                return;\n            }\n\n            Select.fn._change.call(that);\n\n            that._oldText = that.text && that.text();\n\n            that._toggleCloseVisibility();\n        },\n\n        _attachFocusEvents: function() {\n            var that = this;\n            that.input.on(\"focus\" + nsFocusEvent, that._inputFocus.bind(that))\n                      .on(\"focusout\" + nsFocusEvent, that._inputFocusout.bind(that));\n        },\n\n        _focusHandler: function(e) {\n            if (e.target === this.element[0]) {\n                this.input.trigger(\"focus\");\n            }\n        },\n\n        _arrowClick: function() {\n            this._toggle();\n        },\n\n        _inputFocus: function() {\n            this.wrapper.addClass(FOCUSED);\n            this._placeholder(false);\n        },\n\n        _inputFocusout: function(e) {\n            var that = this;\n            var value = that.value();\n            const isClearButton = !$(e.relatedTarget).closest('.k-clear-value').length || (!$(e.relatedTarget).is(that._clear) && $(e.relatedTarget).hasClass('k-clear-value'));\n\n            if (that.filterInput && e.relatedTarget === that.filterInput[0]) {\n                return;\n            }\n\n            that._userTriggered = true;\n            that.wrapper.removeClass(FOCUSED);\n            clearTimeout(that._typingTimeout);\n            that._typingTimeout = null;\n\n            if (isClearButton) {\n              that.text(that.text());\n            }\n\n            var item = that._focus();\n            var dataItem = this.listView.dataItemByIndex(this.listView.getElementIndex(item));\n            var selectedIndex = that.select();\n\n            if (value !== that.value() && selectedIndex !== -1 && that.trigger(\"select\", { dataItem: dataItem, item: item })) {\n                that.value(value);\n                return;\n            }\n\n            that._placeholder();\n            that._valueBeforeCascade = that._old;\n\n            if (isClearButton) {\n                that._blur();\n\n                that.element.trigger(\"blur\");\n            }\n        },\n\n        _inputPaste: function() {\n            var that = this;\n            clearTimeout(that._pasteTimeout);\n            that._pasteTimeout = null;\n\n            that._pasteTimeout = setTimeout(function() {\n                that.search();\n            });\n        },\n\n        _editable: function(options) {\n            var that = this,\n                disable = options.disable,\n                readonly = options.readonly,\n                wrapper = that.wrapper.off(ns),\n                input = that.element.add(that.input.off(ns)),\n                arrow = that._arrow.off(CLICK + \" \" + MOUSEDOWN),\n                clear = that._clear;\n\n            if (!readonly && !disable) {\n                wrapper\n                    .removeClass(STATEDISABLED)\n                    .on(HOVEREVENTS, that._toggleHover);\n\n                input.prop(DISABLED, false)\n                     .prop(READONLY, false)\n                     .attr(ARIA_DISABLED, false)\n                     .attr(ARIA_READONLY, false);\n\n                arrow.on(CLICK, that._arrowClick.bind(that))\n                     .on(MOUSEDOWN, function(e) { e.preventDefault(); });\n\n                clear.on(CLICK + \" touchend\" + ns, that._clearValue.bind(that));\n\n                that.input\n                    .on(\"keydown\" + ns, that._keydown.bind(that))\n                    .on(\"input\" + ns, that._search.bind(that))\n                    .on(\"paste\" + ns, that._inputPaste.bind(that));\n\n                that.wrapper.on(CLICK + ns, that._focusHandler.bind(that));\n            } else {\n                wrapper\n                    .addClass(disable ? STATEDISABLED : \"\")\n                    .removeClass(disable ? \"\" : STATEDISABLED);\n\n                input.attr(DISABLED, disable)\n                     .attr(READONLY, readonly)\n                     .attr(ARIA_DISABLED, disable)\n                     .attr(ARIA_READONLY, readonly);\n            }\n\n            that._toggleCloseVisibility();\n        },\n\n        open: function() {\n            var that = this;\n            var state = that._state;\n            var isFiltered = that.dataSource.filter() ? that.dataSource.filter().filters.length > 0 : false;\n            var reinitialized = !that.ul.find(that.listView.focus()).length;\n\n            if (that.popup.visible()) {\n                return;\n            }\n\n            if ((!that.listView.bound() && state !== STATE_FILTER) || state === STATE_ACCEPT) {\n                that._open = true;\n                that._state = STATE_REBIND;\n\n                if ((that.options.minLength !== 1 && !isFiltered) || (isFiltered && that.value() && that.selectedIndex === -1 )) {\n                    that.refresh();\n                    that._openPopup();\n                    if (!this.options.virtual) {\n                        that.listView.bound(false);\n                    }\n                } else {\n                    that._filterSource();\n                }\n            } else if (that._allowOpening()) {\n                // In some cases when the popup is opened resize is triggered which will cause it to close\n                // Setting the below flag will prevent this from happening\n                that.popup._hovered = true;\n                that._openPopup();\n                if (that.options.virtual) {\n                    that._focusItem();\n                } else if (reinitialized && that.options.highlightFirst) {\n                    that.listView.focus(0);\n                }\n            }\n        },\n\n        _scrollToFocusedItem: function() {\n            var listView = this.listView;\n\n            listView.scrollToIndex(listView.getElementIndex(listView.focus()));\n        },\n\n        _openPopup: function() {\n            this.popup.one(\"activate\", this._scrollToFocusedItem.bind(this));\n            this.popup.open();\n        },\n\n        _updateSelectionState: function() {\n            var that = this;\n            var text = that.options.text;\n            var value = that.options.value;\n\n            if (that.listView.isFiltered()) {\n                return;\n            }\n\n            if (that.selectedIndex === -1) {\n                if (text === undefined$1 || text === null) {\n                    text = value;\n                }\n\n                that._accessor(value);\n                that.input.val(text || that.input.val());\n                that._placeholder();\n            } else if (that._oldIndex === -1) {\n                that._oldIndex = that.selectedIndex;\n            }\n        },\n\n        _buildOptions: function(data) {\n            var that = this;\n            if (!that._isSelect) {\n                return;\n            }\n\n            var custom = that._customOption;\n\n            if (that._state === STATE_REBIND) {\n                that._state = \"\";\n            }\n\n            that._customOption = undefined$1;\n            that._options(data, \"\", that.value());\n\n            if (custom && custom[0].selected && !that.listView._emptySearch) {\n                that._custom(custom.val());\n            }\n        },\n\n        _updateSelection: function() {\n            var that = this;\n            var listView = that.listView;\n            var initialIndex = that._initialIndex;\n            var hasInitialIndex = initialIndex !== null && initialIndex > -1;\n            var filtered = that._state === STATE_FILTER;\n\n            if (filtered) {\n                $(listView.focus()).removeClass(\"k-selected\");\n                return;\n            }\n\n            if (that._fetch) {\n                return;\n            }\n\n            if (!listView.value().length) {\n                if (hasInitialIndex) {\n                    that.select(initialIndex);\n                } else if (that._accessor()) {\n                    listView.value(that._accessor());\n                }\n            }\n\n            that._initialIndex = null;\n            var dataItem = listView.selectedDataItems()[0];\n\n            if (!dataItem) {\n                return;\n            }\n\n            if (that._value(dataItem) !== that.value()) {\n                that._custom(that._value(dataItem));\n            } else if (that._value(dataItem) !== that.element[0].value) {\n                that._accessor(that._value(dataItem));\n            }\n\n            if (that.text() && that.text() !== that._text(dataItem)) {\n                that._selectValue(dataItem);\n            }\n        },\n\n        _updateItemFocus: function() {\n            var listView = this.listView;\n\n            if (!this.options.highlightFirst) {\n                listView.focus(-1);\n            } else if (!listView.focus() && !listView.focusIndex()) {\n                listView.focus(0);\n            }\n        },\n\n        _listBound: function() {\n            var that = this;\n            var isActive = that.input[0] === activeElement() || that.filterInput && that.filterInput[0] === activeElement();\n\n            var data = that.dataSource.flatView();\n            var skip = that.listView.skip();\n            var length = data.length;\n            var groupsLength = that.dataSource._group ? that.dataSource._group.length : 0;\n            var isFirstPage = skip === undefined$1 || skip === 0;\n\n            that._presetValue = false;\n\n            that._renderFooter();\n            that._renderNoData();\n            that._toggleNoData(!length);\n            that._toggleHeader(!!groupsLength && !!length);\n\n            that._resizePopup();\n\n            that.popup.position();\n\n            that._buildOptions(data);\n\n            that._updateSelection();\n\n            if (data.length && isFirstPage) {\n                that._updateItemFocus();\n\n                if (that.options.suggest && isActive && that.input.val()) {\n                    that.suggest(data[0]);\n                }\n            }\n\n            if (that._open) {\n                that._open = false;\n\n                if (that._typingTimeout && !isActive) {\n                    that.popup.close();\n                } else {\n                    that.toggle(that._allowOpening());\n                }\n\n                that._typingTimeout = null;\n            }\n\n            that._hideBusy();\n            that.trigger(\"dataBound\");\n        },\n\n        _listChange: function() {\n            this._selectValue(this.listView.selectedDataItems()[0]);\n\n            if (this._presetValue) {\n                this._oldIndex = this.selectedIndex;\n            }\n        },\n\n        _get: function(candidate) {\n            var data, found, idx;\n\n            if (typeof candidate === \"function\") {\n                data = this.dataSource.flatView();\n\n                for (idx = 0; idx < data.length; idx++) {\n                    if (candidate(data[idx])) {\n                        candidate = idx;\n                        found = true;\n                        break;\n                    }\n                }\n\n                if (!found) {\n                    candidate = -1;\n                }\n            }\n\n            if (!this.dataSource.total() && !candidate) {\n                candidate = -1;\n            }\n\n            return candidate;\n        },\n\n        _select: function(candidate, keepState) {\n            var that = this;\n\n            candidate = that._get(candidate);\n\n            if (candidate === -1) {\n                that.input[0].value = \"\";\n                that._accessor(\"\");\n            }\n\n            return that.listView.select(candidate).done(function() {\n                if (!keepState && that._state === STATE_FILTER) {\n                    that._state = STATE_ACCEPT;\n                }\n                that._toggleCloseVisibility();\n            });\n        },\n\n        _selectValue: function(dataItem) {\n            var idx = this.listView.select();\n            var value = \"\";\n            var text = \"\";\n\n            idx = idx[idx.length - 1];\n            if (idx === undefined$1) {\n                idx = -1;\n            }\n\n            this.selectedIndex = idx;\n\n            if (this.listView.isFiltered() && idx !== -1) {\n                this._valueBeforeCascade = this._old;\n            }\n\n            if (idx === -1 && !dataItem) {\n                if (this.options.syncValueAndText) {\n                    if (this.options.dataTextField === this.options.dataValueField) {\n                        text = this._accessor();\n                    } else {\n                        text = this.input[0].value;\n                    }\n                    value = text;\n                }\n                else {\n                    text = this.text();\n                }\n                this.listView.focus(-1);\n            } else {\n                if (dataItem || dataItem === 0) {\n                    value = this._dataValue(dataItem);\n                    text = this._text(dataItem);\n                }\n\n                if (value === null) {\n                    value = \"\";\n                }\n            }\n\n            this._setDomInputValue(text);\n            this._accessor(value !== undefined$1 ? value : text, idx);\n\n            this._placeholder();\n            this._triggerCascade();\n        },\n\n        _setDomInputValue: function(text) {\n            var that = this;\n            var currentCaret = caret(this.input);\n            var caretStart;\n\n            if (currentCaret && currentCaret.length) {\n                caretStart = currentCaret[0];\n            }\n\n            this._prev = this.input[0].value = text;\n\n            if (caretStart && this.selectedIndex === -1) {\n                var mobile = support.mobileOS;\n                if (mobile.wp || mobile.android) {// without the timeout the caret is at the end of the input\n                    setTimeout(function() { that.input[0].setSelectionRange(caretStart, caretStart); }, 0);\n                }\n                else {\n                    this.input[0].setSelectionRange(caretStart, caretStart);\n                }\n            }\n        },\n\n        refresh: function() {\n            this.listView.refresh();\n        },\n\n        _toggleCloseVisibility: function() {\n            var preventShow = this.element.is(\":disabled\") || this.element.is(\"[readonly]\");\n\n            if (this.text() && !preventShow) {\n                this._showClear();\n            } else {\n                this._hideClear();\n            }\n        },\n\n        suggest: function(word) {\n            var that = this;\n            var element = that.input[0];\n            var value = that.text();\n            var caretIdx = caret(element)[0];\n            var key = that._last;\n            var idx;\n            var accentFoldingFiltering = that.dataSource.options.accentFoldingFiltering;\n\n            if (key == keys.BACKSPACE || key == keys.DELETE) {\n                that._last = undefined$1;\n                return;\n            }\n\n            word = word || \"\";\n\n            if (typeof word !== \"string\") {\n                if (word[0]) {\n                    word = that.dataSource.view()[List.inArray(word[0], that.ul[0])];\n                }\n\n                word = word ? that._text(word) : \"\";\n            }\n\n            if (caretIdx <= 0) {\n                caretIdx = (accentFoldingFiltering ? value.toLocaleLowerCase(accentFoldingFiltering) : value.toLowerCase()).indexOf(accentFoldingFiltering ? word.toLocaleLowerCase(accentFoldingFiltering) : word.toLowerCase()) + 1;\n            }\n\n            if (word) {\n                word = word.toString();\n                idx = (accentFoldingFiltering ? word.toLocaleLowerCase(accentFoldingFiltering) : word.toLowerCase()).indexOf(accentFoldingFiltering ? value.toLocaleLowerCase(accentFoldingFiltering) : value.toLowerCase());\n                if (idx > -1) {\n                    value += word.substring(idx + value.length);\n                }\n            } else {\n                value = value.substring(0, caretIdx);\n            }\n\n            if (value.length !== caretIdx || !word) {\n                element.value = value;\n                if (element === activeElement()) {\n                    caret(element, caretIdx, value.length);\n                }\n            }\n        },\n\n        text: function(text) {\n            text = text === null ? \"\" : text;\n\n            var that = this;\n            var input = that.filterInput && that.filterInput[0] === activeElement() ? that.filterInput[0] : that.input[0];\n            var ignoreCase = that.options.ignoreCase;\n            var loweredText = text;\n            var dataItem;\n            var value;\n\n            if (text === undefined$1) {\n                return input.value;\n            }\n\n            if (that.options.autoBind === false && !that.listView.bound()) {\n                that._setText(text);\n                return;\n            }\n\n            dataItem = that.dataItem();\n\n            if (dataItem && that._text(dataItem).replace && that._text(dataItem).replace(newLineRegEx,\"\") === text) {\n                value = that._value(dataItem);\n\n                if (value === List.unifyType(that._old, typeof value)) {\n                    that._triggerCascade();\n                    return;\n                }\n            }\n\n            if (ignoreCase) {\n                loweredText = loweredText.toLowerCase();\n            }\n\n            if (that.dataItem() && that._text(that.dataItem()) === text) {\n                return;\n            }\n\n            that._select(function(data) {\n                data = that._text(data);\n                if (ignoreCase) {\n                    data = (data + \"\").toLowerCase();\n                }\n\n                return data === loweredText;\n            }).done(function() {\n                if (that.selectedIndex < 0) {\n                    input.value = text;\n\n                    if (that.options.syncValueAndText) {\n                        that._accessor(text);\n                    }\n\n                    if (that._isValueChanged(text)) {\n                        that._cascadeTriggered = true;\n                        that._triggerCascade();\n                    }\n\n                    that._refreshFloatingLabel();\n                }\n\n                that._prev = input.value;\n            });\n\n            that._toggleCloseVisibility();\n        },\n\n        toggle: function(toggle) {\n            this._toggle(toggle, true);\n        },\n\n        value: function(value) {\n            var that = this;\n            var options = that.options;\n            var listView = that.listView;\n\n            if (value === undefined$1) {\n                value = that._accessor() || that.listView.value()[0];\n                return value === undefined$1 || value === null ? \"\" : value;\n            }\n\n            that.requireValueMapper(that.options, value);\n\n            that.trigger(\"set\", { value: value });\n\n            if (value === options.value && that.input.val() === options.text &&\n            !that.options.cascadeFrom) {\n                return;\n            }\n\n            that._accessor(value);\n\n            if (that._isFilterEnabled() && listView.bound() && listView.isFiltered()) {\n                that._clearFilter();\n            } else {\n                that._fetchData();\n            }\n\n            listView\n                .value(value)\n                .done(function() {\n                    if (that.selectedIndex === -1 && (!listView._selectedDataItems || !listView._selectedDataItems.length)) {\n                        that._accessor(value);\n                        that.input.val(value);\n                        that._placeholder(true);\n                    }\n\n                    if (that._userTriggered) {\n                         that._old = that._accessor();\n                    } else {\n                         that._old = that._valueBeforeCascade = that._accessor();\n                    }\n\n                    that._oldIndex = that.selectedIndex;\n\n                    that._prev = that._oldText = that.input.val();\n\n                    if (that._state === STATE_FILTER) {\n                        that._state = STATE_ACCEPT;\n                    }\n                    that._toggleCloseVisibility();\n\n                    that._refreshFloatingLabel();\n                });\n        },\n\n        _hideBusy: function() {\n            var that = this;\n            clearTimeout(that._busy);\n            that._arrowIcon.removeClass(LOADING);\n            that._arrowIcon.find(\"svg\").show();\n            that._focused.attr(\"aria-busy\", false);\n            that._busy = null;\n            that._toggleCloseVisibility();\n        },\n\n        _click: function(e) {\n            var that = this;\n            var item = e.item;\n            var dataItem = that.listView.dataItemByIndex(that.listView.getElementIndex(item));\n            var shouldTrigger = true;\n            e.preventDefault();\n\n            if (dataItem) {\n                shouldTrigger = that._value(dataItem) !== List.unifyType(that.value(), typeof that._value(dataItem));\n\n                if (!shouldTrigger) {\n                   that.input.val(that._text(dataItem));\n                }\n            }\n\n            if (shouldTrigger && that.trigger(\"select\", { dataItem: dataItem, item: item })) {\n                that.close();\n                return;\n            }\n\n            that._userTriggered = true;\n\n            that._select(item).done(function() {\n                that._blur();\n            });\n        },\n\n        _syncValueAndText: function() {\n            return this.options.syncValueAndText;\n        },\n\n        _inputValue: function() {\n            return this.text();\n        },\n\n        _searchByWord: function(word) {\n            var that = this;\n            var options = that.options;\n            var dataSource = that.dataSource;\n            var ignoreCase = options.ignoreCase;\n            var predicate = function(dataItem) {\n                var text = that._text(dataItem);\n                if (text !== undefined$1) {\n                    text = text + \"\";\n                    if (text !== \"\" && word === \"\") {\n                        return false;\n                    }\n\n                    if (ignoreCase) {\n                        text = text.toLowerCase();\n                    }\n\n                    return text.indexOf(word) === 0;\n                }\n            };\n\n            if (ignoreCase) {\n                word = word.toLowerCase();\n            }\n\n            if (!that.ul[0].firstChild) {\n                dataSource.one(CHANGE, function() {\n                    if (dataSource.view()[0]) {\n                        that.search(word);\n                    }\n                }).fetch();\n                return;\n            }\n\n            this.listView.focus(this._get(predicate));\n\n            var current = this.listView.focus();\n\n            if (current) {\n                if (options.suggest) {\n                    that.suggest(current);\n                }\n\n                this.open();\n            }\n\n            if (this.options.highlightFirst && !word) {\n                this.listView.focusFirst();\n            }\n        },\n\n        _input: function() {\n            var that = this,\n                element = that.element.removeClass(\"k-input-inner\")[0],\n                accessKey = element.accessKey,\n                wrapper = that.wrapper,\n                SELECTOR = \"input.k-input-inner\",\n                name = element.name || \"\",\n                options = that.options,\n                input,\n                maxLength,\n                arrowBtn;\n\n            if (name) {\n                name = 'name=\"' + name + '_input\" ';\n            }\n\n            input = wrapper.find(SELECTOR);\n\n            if (!input[0]) {\n                arrowBtn = html.renderButton('<button type=\"button\" class=\"k-input-button\" aria-label=\"expand combobox\"></button>', {\n                    icon: \"caret-alt-down\",\n                    size: options.size,\n                    fillMode: options.fillMode,\n                    shape: \"none\",\n                    rounded: \"none\",\n                });\n\n                wrapper.append('<input ' + name + 'class=\"k-input-inner\" type=\"text\" autocomplete=\"' + AUTOCOMPLETEVALUE + '\"/>')\n                    .append(arrowBtn)\n                    .append(that.element);\n\n                input = wrapper.find(SELECTOR);\n            }\n\n            input[0].style.cssText = element.style.cssText;\n            input[0].title = element.title;\n\n            maxLength = parseInt(this.element.prop(\"maxlength\") || this.element.attr(\"maxlength\"), 10);\n            if (maxLength > -1) {\n                input[0].maxLength = maxLength;\n            }\n\n            input.addClass(element.className)\n                .css({\n                    width: \"\",\n                    height: element.style.height,\n                    position: \"\"\n                })\n                .attr({\n                    \"role\": \"combobox\",\n                    \"aria-expanded\": false\n                })\n                .show();\n\n            input.attr(kendo.attr(\"skip\"), true);\n            if (placeholderSupported) {\n                input.attr(\"placeholder\", that.options.placeholder);\n            }\n\n            if (accessKey) {\n                element.accessKey = \"\";\n                input[0].accessKey = accessKey;\n            }\n\n            that._focused = that.input = input;\n            that._arrow = wrapper.find(\".k-input-button\")\n                .attr({\n                    \"role\": \"button\",\n                    \"tabIndex\": -1\n                });\n            that._arrowIcon = that._arrow.find(\".k-icon, .k-svg-icon\");\n        },\n\n        _clearButton: function() {\n            List.fn._clearButton.call(this);\n\n            if (this.options.clearButton) {\n                this._clear.insertAfter(this.input);\n            }\n        },\n\n        _keydown: function(e) {\n            var that = this,\n                key = e.keyCode,\n                textField = that.options.dataTextField || \"text\",\n                isFkey = key >= 112 && key <= 135,\n                isNonPrintableKey = NON_PRINTABLE_KEYS.indexOf(key) > -1;\n\n            that._last = key;\n\n            clearTimeout(that._typingTimeout);\n            that._typingTimeout = null;\n\n            if (key === keys.HOME) {\n                that._firstItem();\n            } else if (key === keys.END) {\n                that._lastItem();\n            } else if (key === keys.ENTER || (key === keys.TAB && that.popup.visible())) {\n                var current = that.listView.focus();\n                var dataItem = that.dataItem();\n                var shouldTrigger = true;\n\n                if (!that.popup.visible() && (!dataItem || that.text() !== that._text(dataItem))) {\n                    current = null;\n                }\n\n                if (current) {\n                    if (that.popup.visible()) {\n                        e.preventDefault();\n                    }\n\n                    dataItem = that.listView.dataItemByIndex(that.listView.getElementIndex(current));\n\n                    if (dataItem) {\n                        shouldTrigger = that._value(dataItem) !== List.unifyType(that.value(), typeof that._value(dataItem));\n                    }\n\n                    if (shouldTrigger && that.trigger(\"select\", { dataItem: dataItem, item: current })) {\n                        return;\n                    }\n\n                    that._userTriggered = true;\n\n                    that._select(current).done(function() {\n                        that._blur();\n                        that._valueBeforeCascade = that._old = that.value();\n                    });\n                } else {\n                    if (that._syncValueAndText() || that._isSelect) {\n                        if (!that.dataItem() || that.dataItem()[textField] !== that.input.val()) {\n                            var input = that.filterInput && activeElement() === that.filterInput[0] ? that.filterInput : that.input;\n                            that._accessor(input.val());\n                        }\n                    }\n\n                    if (that.options.highlightFirst) {\n                        that.listView.value(that.input.val());\n                        that._blur();\n                    } else {\n                        that._oldText = that.text();\n                    }\n                }\n            } else if (key != keys.TAB && !that._move(e) && !isNonPrintableKey && !isFkey && !e.ctrlKey) {\n               that._search();\n            } else if (that.options.clearOnEscape && key === keys.ESC && !that.popup.visible() && that.text()) {\n                that._clearValue();\n            }\n        },\n\n        _placeholder: function(show) {\n            if (placeholderSupported) {\n                return;\n            }\n\n            var that = this,\n                input = that.input,\n                placeholder = that.options.placeholder,\n                value;\n\n            if (placeholder) {\n                value = that.value();\n\n                if (show === undefined$1) {\n                    show = !value;\n                }\n\n                input.toggleClass(\"k-readonly\", show);\n\n                if (!show) {\n                    if (!value) {\n                        placeholder = \"\";\n                    } else {\n                        return;\n                    }\n                }\n\n                input.val(placeholder);\n\n                if (!placeholder && input[0] === activeElement()) {\n                    caret(input[0], 0, 0);\n                }\n            }\n        },\n\n        _search: function() {\n            var that = this;\n\n            clearTimeout(that._typingTimeout);\n\n            that._typingTimeout = setTimeout(function() {\n                var value = that.text();\n\n                if (value !== \"\" && that._prev !== value) {\n                    that._prev = value;\n\n                    if (that.options.filter === \"none\" && that.options.virtual) {\n                        that.listView.select(-1);\n                    }\n\n                    that.search(value);\n\n                    that._toggleCloseVisibility();\n                }\n                else if (value === \"\" && that._prev !== \"\" && that._prev !== undefined$1) {\n                    that._clearValue();\n                    that._open = true;\n                    that._state = STATE_REBIND;\n                }\n\n                that._typingTimeout = null;\n            }, that.options.delay);\n        },\n\n        _setText: function(text) {\n            this.input.val(text);\n            this._prev = text;\n        },\n\n        _wrapper: function() {\n            var that = this,\n                element = that.element,\n                wrapper = element.parent();\n\n            if (!wrapper.is(\"span.k-input\")) {\n                wrapper = element.hide().wrap(\"<span />\").parent();\n                wrapper[0].style.cssText = element[0].style.cssText;\n            }\n\n            that.wrapper = wrapper.addClass(\"k-input k-combobox\")\n                .addClass(element[0].className)\n                .removeClass('input-validation-error')\n                .css(\"display\", \"\");\n        },\n\n        _clearSelection: function(parent, isFiltered) {\n            var that = this;\n            var hasValue = parent.value();\n            var custom = hasValue && parent.selectedIndex === -1;\n\n            if (this.selectedIndex == -1 && this.value()) {\n                return;\n            }\n\n            if (isFiltered || !hasValue || custom) {\n                that.options.value = \"\";\n                that.value(\"\");\n            }\n        },\n\n        _preselect: function(value, text) {\n            this.input.val(text);\n            this._accessor(value);\n\n            this._old = this._accessor();\n            this._oldIndex = this.selectedIndex;\n\n            this.listView.setValue(value);\n            this._placeholder();\n\n            this._initialIndex = null;\n            this._presetValue = true;\n            this._toggleCloseVisibility();\n        },\n\n        _clearText: function() {\n            this._old = this.value();\n            this.text(\"\");\n        },\n\n        _clearValue: function() {\n            var that = this;\n            var input = that.filterInput && that.filterInput[0] === activeElement() ? that.filterInput : that.input;\n\n            Select.fn._clearValue.call(this);\n            input.trigger(\"focus\");\n        }\n    });\n\n    ui.plugin(ComboBox);\n\n    kendo.cssProperties.registerPrefix(\"ComboBox\", \"k-input-\");\n\n    kendo.cssProperties.registerValues(\"ComboBox\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.combobox.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.core.js":
/*!******************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.core.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\nlet breakpoints;\nconst EVENT = \"change\";\n\nconst defaultBreakpoints = {\n    small: \"(max-width: 500px)\",\n    medium: \"(min-width: 500.1px) and (max-width: 768px)\",\n    large: \"(min-width: 768.1px)\",\n};\n\nfunction createMediaQuery(query) {\n    let mediaQueryList = window.matchMedia(query);\n    let onEnterCallbacks = [];\n    let onLeaveCallbacks = [];\n    let onChangeHandlers = [];\n    let kendoMediaQuery = { mediaQueryList };\n\n    const onChangeHandler = (ev) => {\n        onChangeHandlers.forEach((cb) => cb(ev));\n\n        if (ev.matches) {\n            onEnterCallbacks.forEach((cb) => cb(ev));\n        } else {\n            onLeaveCallbacks.forEach((cb) => cb(ev));\n        }\n    };\n\n    mediaQueryList.addEventListener(EVENT, onChangeHandler);\n\n    const onChange = (cb) => {\n        onChangeHandlers.push(cb);\n        return kendoMediaQuery;\n    };\n\n    const onEnter = (cb) => {\n        onEnterCallbacks.push(cb);\n\n        if (mediaQueryList.matches) {\n            const media = mediaQueryList.media;\n            const matches = true;\n\n            const ev = new MediaQueryListEvent(EVENT, {\n                media,\n                matches,\n            });\n\n            cb(ev);\n        }\n\n        return kendoMediaQuery;\n    };\n\n    const onLeave = (cb) => {\n        onLeaveCallbacks.push(cb);\n        return kendoMediaQuery;\n    };\n\n    const destroy = () => {\n        if (mediaQueryList) {\n            mediaQueryList.removeEventListener(EVENT, onChangeHandler);\n        }\n        onEnterCallbacks = null;\n        onLeaveCallbacks = null;\n        onChangeHandlers = null;\n        mediaQueryList = null;\n        kendoMediaQuery = null;\n    };\n\n    kendoMediaQuery.onChange = onChange;\n    kendoMediaQuery.onEnter = onEnter;\n    kendoMediaQuery.onLeave = onLeave;\n    kendoMediaQuery.destroy = destroy;\n\n    return kendoMediaQuery;\n}\n\nfunction mediaQuery(query) {\n    if (!query) {\n        return;\n    }\n\n    breakpoints =\n        breakpoints ||\n        Object.assign({}, defaultBreakpoints, kendo.defaults.breakpoints);\n\n    if (query in breakpoints) {\n        query = breakpoints[query];\n    }\n\n    return createMediaQuery(query);\n}\n\nvar __meta__ = {\n    id: \"core\",\n    name: \"Core\",\n    category: \"framework\",\n    description: \"The core of the Kendo framework.\"\n};\n\nvar packageMetadata = {\n    name: '@progress/kendo-ui',\n    productName: 'Kendo UI',\n    productCodes: ['KENDOUICOMPLETE', 'KENDOUI', 'UIASPCORE', 'KENDOMVC', 'KENDOUIMVC'],\n    publishDate: 0,\n    version: 'undefined'.replace(/^\\s+|\\s+$/g, ''),\n    licensingDocsUrl: 'https://docs.telerik.com/kendo-ui/intro/installation/using-license-code?utm_medium=product&utm_source=kendojquery&utm_campaign=kendo-ui-jquery-purchase-license-keys-warning'\n};\n\n\n(function($, window, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo = __webpack_provided_window_dot_kendo || { cultures: {} },\n        extend = $.extend,\n        each = $.each,\n        isArray = Array.isArray,\n        noop = $.noop,\n        math = Math,\n        Template,\n        JSON = window.JSON || {},\n        support = {},\n        percentRegExp = /%/,\n        formatRegExp = /\\{(\\d+)(:[^\\}]+)?\\}/g,\n        boxShadowRegExp = /(\\d+(?:\\.?)\\d*)px\\s*(\\d+(?:\\.?)\\d*)px\\s*(\\d+(?:\\.?)\\d*)px\\s*(\\d+)?/i,\n        numberRegExp = /^(\\+|-?)\\d+(\\.?)\\d*$/,\n        MONTH = \"month\",\n        HOUR = \"hour\",\n        ZONE = \"zone\",\n        WEEKDAY = \"weekday\",\n        QUARTER = \"quarter\",\n        DATE_FIELD_MAP = {\n            \"G\": \"era\",\n            \"y\": \"year\",\n            \"q\": QUARTER,\n            \"Q\": QUARTER,\n            \"M\": MONTH,\n            \"L\": MONTH,\n            \"d\": \"day\",\n            \"E\": WEEKDAY,\n            \"c\": WEEKDAY,\n            \"e\": WEEKDAY,\n            \"h\": HOUR,\n            \"H\": HOUR,\n            \"k\": HOUR,\n            \"K\": HOUR,\n            \"m\": \"minute\",\n            \"s\": \"second\",\n            \"a\": \"dayperiod\",\n            \"t\": \"dayperiod\",\n            \"x\": ZONE,\n            \"X\": ZONE,\n            \"z\": ZONE,\n            \"Z\": ZONE\n        },\n        NAME_TYPES = {\n            month: {\n                type: \"months\",\n                minLength: 3,\n                standAlone: \"L\"\n            },\n\n            quarter: {\n                type: \"quarters\",\n                minLength: 3,\n                standAlone: \"q\"\n            },\n\n            weekday: {\n                type: \"days\",\n                minLength: {\n                    E: 0,\n                    c: 3,\n                    e: 3\n                },\n                standAlone: \"c\"\n            },\n\n            dayperiod: {\n                type: \"dayPeriods\",\n                minLength: 0\n            },\n\n            era: {\n                type: \"eras\",\n                minLength: 0\n            }\n        },\n        FUNCTION = \"function\",\n        STRING = \"string\",\n        NUMBER = \"number\",\n        OBJECT = \"object\",\n        NULL = \"null\",\n        BOOLEAN = \"boolean\",\n        UNDEFINED = \"undefined\",\n        PREFIX = \"prefix\",\n        ARIA_LABELLEDBY = \"aria-labelledby\",\n        ARIA_LABEL = \"aria-label\",\n        LABELIDPART = \"_label\",\n        getterCache = {},\n        setterCache = {},\n        slice = [].slice,\n        cssPropertiesNames = [ \"themeColor\", \"fillMode\", \"shape\", \"size\", \"rounded\", \"positionMode\" ],\n        // avoid extending the depricated properties in latest verions of jQuery\n        noDepricateExtend = function() {\n            var src, copyIsArray, copy, name, options, clone,\n                target = arguments[ 0 ] || {},\n                i = 1,\n                length = arguments.length,\n                deep = false;\n\n            // Handle a deep copy situation\n            if ( typeof target === \"boolean\" ) {\n                deep = target;\n\n                // skip the boolean and the target\n                target = arguments[ i ] || {};\n                i++;\n            }\n\n            // Handle case when target is a string or something (possible in deep copy)\n            if ( typeof target !== \"object\" && typeof target !== \"function\") {\n                target = {};\n            }\n\n            // extend jQuery itself if only one argument is passed\n            if ( i === length ) {\n                target = this;\n                i--;\n            }\n\n            for ( ; i < length; i++ ) {\n\n                // Only deal with non-null/undefined values\n                if ( ( options = arguments[ i ] ) != null ) {\n\n                    // Extend the base object\n                    for ( name in options ) {\n                        // filters, concat and : properties are depricated in the jQuery 3.3.0\n                        // accessing these properties throw a warning when jQuery migrate is included\n                        if (name == \"filters\" || name == \"concat\" || name == \":\") {\n                            continue;\n                        }\n                        src = target[ name ];\n                        copy = options[ name ];\n\n                        // Prevent never-ending loop\n                        if ( target === copy ) {\n                            continue;\n                        }\n\n                        // Recurse if we're merging plain objects or arrays\n                        if ( deep && copy && ( jquery__WEBPACK_IMPORTED_MODULE_0___default().isPlainObject( copy ) ||\n                            ( copyIsArray = Array.isArray( copy ) ) ) ) {\n\n                            if ( copyIsArray ) {\n                                copyIsArray = false;\n                                clone = src && Array.isArray( src ) ? src : [];\n\n                            } else {\n                                clone = src && jquery__WEBPACK_IMPORTED_MODULE_0___default().isPlainObject( src ) ? src : {};\n                            }\n\n                            // Never move original objects, clone them\n                            target[ name ] = noDepricateExtend( deep, clone, copy );\n\n                        // Don't bring in undefined values\n                        } else if ( copy !== undefined$1 ) {\n                            target[ name ] = copy;\n                        }\n                    }\n                }\n            }\n\n            // Return the modified object\n            return target;\n        };\n\n    kendo.version = \"undefined\".replace(/^\\s+|\\s+$/g, '');\n\n    function Class() {}\n\n    Class.extend = function(proto) {\n        var base = function() {},\n            member,\n            that = this,\n            subclass = proto && proto.init ? proto.init : function() {\n                that.apply(this, arguments);\n            },\n            fn;\n\n        base.prototype = that.prototype;\n        fn = subclass.fn = subclass.prototype = new base();\n\n        for (member in proto) {\n            if (proto[member] != null && proto[member].constructor === Object) {\n                // Merge object members\n                fn[member] = extend(true, {}, base.prototype[member], proto[member]);\n            } else {\n                fn[member] = proto[member];\n            }\n        }\n\n        fn.constructor = subclass;\n        subclass.extend = that.extend;\n\n        return subclass;\n    };\n\n    Class.prototype._initOptions = function(options) {\n        this.options = deepExtend({}, this.options, options);\n    };\n\n    const isPresent = kendo.isPresent = (value) => value !== null && value !== undefined$1;\n    const isBlank = kendo.isBlank = (value) => value === null || value === undefined$1;\n    const isString = kendo.isString = (value) => typeof value === 'string';\n    const isNumeric = kendo.isNumeric = (value) => !isNaN(value - parseFloat(value));\n    const isDate = kendo.isDate = (value) => value && value.getTime;\n    const isFunction = kendo.isFunction = (value) => typeof value === 'function';\n\n    var preventDefault = function() {\n        this._defaultPrevented = true;\n    };\n\n    var isDefaultPrevented = function() {\n        return this._defaultPrevented === true;\n    };\n\n    var Observable = Class.extend({\n        init: function() {\n            this._events = {};\n        },\n\n        bind: function(eventName, handlers, one) {\n            var that = this,\n                idx,\n                eventNames = typeof eventName === STRING ? [eventName] : eventName,\n                length,\n                original,\n                handler,\n                handlersIsFunction = typeof handlers === FUNCTION,\n                events;\n\n            if (handlers === undefined$1) {\n                for (idx in eventName) {\n                    that.bind(idx, eventName[idx]);\n                }\n                return that;\n            }\n\n            for (idx = 0, length = eventNames.length; idx < length; idx++) {\n                eventName = eventNames[idx];\n\n                handler = handlersIsFunction ? handlers : handlers[eventName];\n\n                if (handler) {\n                    if (one) {\n                        original = handler;\n                        handler = function() {\n                            that.unbind(eventName, handler);\n                            original.apply(that, arguments);\n                        };\n                        handler.original = original;\n                    }\n                    events = that._events[eventName] = that._events[eventName] || [];\n                    events.push(handler);\n                }\n            }\n\n            return that;\n        },\n\n        one: function(eventNames, handlers) {\n            return this.bind(eventNames, handlers, true);\n        },\n\n        first: function(eventName, handlers) {\n            var that = this,\n                idx,\n                eventNames = typeof eventName === STRING ? [eventName] : eventName,\n                length,\n                handler,\n                handlersIsFunction = typeof handlers === FUNCTION,\n                events;\n\n            for (idx = 0, length = eventNames.length; idx < length; idx++) {\n                eventName = eventNames[idx];\n\n                handler = handlersIsFunction ? handlers : handlers[eventName];\n\n                if (handler) {\n                    events = that._events[eventName] = that._events[eventName] || [];\n                    events.unshift(handler);\n                }\n            }\n\n            return that;\n        },\n\n        trigger: function(eventName, e) {\n            var that = this,\n                events = that._events[eventName],\n                idx,\n                length;\n\n            if (events) {\n                e = e || {};\n\n                e.sender = that;\n\n                e._defaultPrevented = false;\n\n                e.preventDefault = preventDefault;\n\n                e.isDefaultPrevented = isDefaultPrevented;\n\n                events = events.slice();\n\n                for (idx = 0, length = events.length; idx < length; idx++) {\n                    events[idx].call(that, e);\n                }\n\n                return e._defaultPrevented === true;\n            }\n\n            return false;\n        },\n\n        unbind: function(eventName, handler) {\n            var that = this,\n                events = that._events[eventName],\n                idx;\n\n            if (eventName === undefined$1) {\n                that._events = {};\n            } else if (events) {\n                if (handler) {\n                    for (idx = events.length - 1; idx >= 0; idx--) {\n                        if (events[idx] === handler || events[idx].original === handler) {\n                            events.splice(idx, 1);\n                        }\n                    }\n                } else {\n                    that._events[eventName] = [];\n                }\n            }\n\n            return that;\n        }\n    });\n\n\n     function compilePart(part, stringPart) {\n         if (stringPart) {\n             return \"'\" +\n                 part.split(\"'\").join(\"\\\\'\")\n                     .split('\\\\\"').join('\\\\\\\\\\\\\"')\n                     .replace(/\\n/g, \"\\\\n\")\n                     .replace(/\\r/g, \"\\\\r\")\n                     .replace(/\\t/g, \"\\\\t\") + \"'\";\n         } else {\n             var first = part.charAt(0),\n                 rest = part.substring(1);\n\n             if (first === \"=\") {\n                 return \"+(\" + rest + \")+\";\n             } else if (first === \":\") {\n                 return \"+$kendoHtmlEncode(\" + rest + \")+\";\n             } else {\n                 return \";\" + part + \";$kendoOutput+=\";\n             }\n         }\n     }\n\n    var argumentNameRegExp = /^\\w+/,\n        encodeRegExp = /\\$\\{([^}]*)\\}/g,\n        escapedCurlyRegExp = /\\\\\\}/g,\n        curlyRegExp = /__CURLY__/g,\n        escapedSharpRegExp = /\\\\#/g,\n        sharpRegExp = /__SHARP__/g,\n        zeros = [\"\", \"0\", \"00\", \"000\", \"0000\"];\n\n    Template = {\n        paramName: \"data\", // name of the parameter of the generated template\n        useWithBlock: true, // whether to wrap the template in a with() block\n        render: function(template, data) {\n            var idx,\n                length,\n                html = \"\";\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                html += template(data[idx]);\n            }\n\n            return html;\n        },\n        compile: function(template, options) {\n            var settings = extend({}, this, options),\n                paramName = settings.paramName,\n                argumentName = paramName.match(argumentNameRegExp)[0],\n                useWithBlock = settings.useWithBlock,\n                functionBody = \"var $kendoOutput, $kendoHtmlEncode = kendo.htmlEncode;\",\n                fn,\n                parts,\n                idx;\n\n            if (isFunction(template)) {\n                return template;\n            }\n\n            functionBody += useWithBlock ? \"with(\" + paramName + \"){\" : \"\";\n\n            functionBody += \"$kendoOutput=\";\n\n            parts = template\n                .replace(escapedCurlyRegExp, \"__CURLY__\")\n                .replace(encodeRegExp, \"#=$kendoHtmlEncode($1)#\")\n                .replace(curlyRegExp, \"}\")\n                .replace(escapedSharpRegExp, \"__SHARP__\")\n                .split(\"#\");\n\n            for (idx = 0; idx < parts.length; idx ++) {\n                functionBody += compilePart(parts[idx], idx % 2 === 0);\n            }\n\n            functionBody += useWithBlock ? \";}\" : \";\";\n\n            functionBody += \"return $kendoOutput;\";\n\n            functionBody = functionBody.replace(sharpRegExp, \"#\");\n\n            try {\n                // This function evaluation is required for legacy support of the Kendo Template syntax - non CSP compliant.\n                fn = new Function(argumentName, functionBody);\n                fn._slotCount = Math.floor(parts.length / 2);\n                return fn;\n            } catch (e) {\n                if (kendo.debugTemplates) {\n                    window.console.warn(`Invalid template:'${template}' Generated code:'${functionBody}'`);\n                } else {\n                    throw new Error(kendo.format(\"Invalid template:'{0}' Generated code:'{1}'\", template, functionBody));\n                }\n            }\n        }\n    };\n\nfunction pad(number, digits, end) {\n    number = number + \"\";\n    digits = digits || 2;\n    end = digits - number.length;\n\n    if (end) {\n        return zeros[digits].substring(0, end) + number;\n    }\n\n    return number;\n}\n\n    //JSON stringify\n(function() {\n    var escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        gap,\n        indent,\n        meta = {\n            \"\\b\": \"\\\\b\",\n            \"\\t\": \"\\\\t\",\n            \"\\n\": \"\\\\n\",\n            \"\\f\": \"\\\\f\",\n            \"\\r\": \"\\\\r\",\n            \"\\\"\": '\\\\\"',\n            \"\\\\\": \"\\\\\\\\\"\n        },\n        rep,\n        toString = {}.toString;\n\n\n    if (typeof Date.prototype.toJSON !== FUNCTION) {\n\n        Date.prototype.toJSON = function() {\n            var that = this;\n\n            return isFinite(that.valueOf()) ?\n                pad(that.getUTCFullYear(), 4) + \"-\" +\n                pad(that.getUTCMonth() + 1) + \"-\" +\n                pad(that.getUTCDate()) + \"T\" +\n                pad(that.getUTCHours()) + \":\" +\n                pad(that.getUTCMinutes()) + \":\" +\n                pad(that.getUTCSeconds()) + \"Z\" : null;\n        };\n\n        String.prototype.toJSON = Number.prototype.toJSON = Boolean.prototype.toJSON = function() {\n            return this.valueOf();\n        };\n    }\n\n    function quote(string) {\n        escapable.lastIndex = 0;\n        return escapable.test(string) ? \"\\\"\" + string.replace(escapable, function(a) {\n            var c = meta[a];\n            return typeof c === STRING ? c :\n                \"\\\\u\" + (\"0000\" + a.charCodeAt(0).toString(16)).slice(-4);\n        }) + \"\\\"\" : \"\\\"\" + string + \"\\\"\";\n    }\n\n    function str(key, holder) {\n        var i,\n            k,\n            v,\n            length,\n            mind = gap,\n            partial,\n            value = holder[key],\n            type;\n\n        if (value && typeof value === OBJECT && typeof value.toJSON === FUNCTION) {\n            value = value.toJSON(key);\n        }\n\n        if (typeof rep === FUNCTION) {\n            value = rep.call(holder, key, value);\n        }\n\n        type = typeof value;\n        if (type === STRING) {\n            return quote(value);\n        } else if (type === NUMBER) {\n            return isFinite(value) ? String(value) : NULL;\n        } else if (type === BOOLEAN || type === NULL) {\n            return String(value);\n        } else if (type === OBJECT) {\n            if (!value) {\n                return NULL;\n            }\n            gap += indent;\n            partial = [];\n            if (toString.apply(value) === \"[object Array]\") {\n                length = value.length;\n                for (i = 0; i < length; i++) {\n                    partial[i] = str(i, value) || NULL;\n                }\n                v = partial.length === 0 ? \"[]\" : gap ?\n                    \"[\\n\" + gap + partial.join(\",\\n\" + gap) + \"\\n\" + mind + \"]\" :\n                    \"[\" + partial.join(\",\") + \"]\";\n                gap = mind;\n                return v;\n            }\n            if (rep && typeof rep === OBJECT) {\n                length = rep.length;\n                for (i = 0; i < length; i++) {\n                    if (typeof rep[i] === STRING) {\n                        k = rep[i];\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? \": \" : \":\") + v);\n                        }\n                    }\n                }\n            } else {\n                for (k in value) {\n                    if (Object.hasOwnProperty.call(value, k)) {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? \": \" : \":\") + v);\n                        }\n                    }\n                }\n            }\n\n            v = partial.length === 0 ? \"{}\" : gap ?\n                \"{\\n\" + gap + partial.join(\",\\n\" + gap) + \"\\n\" + mind + \"}\" :\n                \"{\" + partial.join(\",\") + \"}\";\n            gap = mind;\n            return v;\n        }\n    }\n\n    if (typeof JSON.stringify !== FUNCTION) {\n        JSON.stringify = function(value, replacer, space) {\n            var i;\n            gap = \"\";\n            indent = \"\";\n\n            if (typeof space === NUMBER) {\n                for (i = 0; i < space; i += 1) {\n                    indent += \" \";\n                }\n\n            } else if (typeof space === STRING) {\n                indent = space;\n            }\n\n            rep = replacer;\n            if (replacer && typeof replacer !== FUNCTION && (typeof replacer !== OBJECT || typeof replacer.length !== NUMBER)) {\n                throw new Error(\"JSON.stringify\");\n            }\n\n            return str(\"\", { \"\": value });\n        };\n    }\n})();\n\n// Date and Number formatting\n(function() {\n    var dateFormatRegExp = /EEEE|dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|HH|H|hh|h|mm|m|fff|ff|f|tt|ss|s|zzz|zz|z|\"[^\"]*\"|'[^']*'/g,\n        standardFormatRegExp = /^(n|c|p|e)(\\d*)$/i,\n        literalRegExp = /(\\\\.)|(['][^']*[']?)|([\"][^\"]*[\"]?)/g,\n        commaRegExp = /\\,/g,\n        EMPTY = \"\",\n        POINT = \".\",\n        COMMA = \",\",\n        SHARP = \"#\",\n        ZERO = \"0\",\n        PLACEHOLDER = \"??\",\n        EN = \"en-US\",\n        objectToString = {}.toString;\n\n    //cultures\n    kendo.cultures = kendo.cultures || {}; // Ensure cultures object exists\n    kendo.cultures[\"en-US\"] = {\n        name: EN,\n        numberFormat: {\n            pattern: [\"-n\"],\n            decimals: 2,\n            \",\": \",\",\n            \".\": \".\",\n            groupSize: [3],\n            percent: {\n                pattern: [\"-n %\", \"n %\"],\n                decimals: 2,\n                \",\": \",\",\n                \".\": \".\",\n                groupSize: [3],\n                symbol: \"%\"\n            },\n            currency: {\n                name: \"US Dollar\",\n                abbr: \"USD\",\n                pattern: [\"($n)\", \"$n\"],\n                decimals: 2,\n                \",\": \",\",\n                \".\": \".\",\n                groupSize: [3],\n                symbol: \"$\"\n            }\n        },\n        calendars: {\n            standard: {\n                days: {\n                    names: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n                    namesAbbr: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n                    namesShort: [ \"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\" ]\n                },\n                months: {\n                    names: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n                    namesAbbr: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n                },\n                AM: [ \"AM\", \"am\", \"AM\" ],\n                PM: [ \"PM\", \"pm\", \"PM\" ],\n                patterns: {\n                    d: \"M/d/yyyy\",\n                    D: \"dddd, MMMM dd, yyyy\",\n                    F: \"dddd, MMMM dd, yyyy h:mm:ss tt\",\n                    g: \"M/d/yyyy h:mm tt\",\n                    G: \"M/d/yyyy h:mm:ss tt\",\n                    m: \"MMMM dd\",\n                    M: \"MMMM dd\",\n                    s: \"yyyy'-'MM'-'ddTHH':'mm':'ss\",\n                    t: \"h:mm tt\",\n                    T: \"h:mm:ss tt\",\n                    u: \"yyyy'-'MM'-'dd HH':'mm':'ss'Z'\",\n                    y: \"MMMM, yyyy\",\n                    Y: \"MMMM, yyyy\"\n                },\n                \"/\": \"/\",\n                \":\": \":\",\n                firstDay: 0,\n                twoDigitYearMax: 2029\n            }\n        }\n    };\n\n\n     function findCulture(culture) {\n        if (culture) {\n            if (culture.numberFormat) {\n                return culture;\n            }\n\n            if (typeof culture === STRING) {\n                var cultures = kendo.cultures;\n                return cultures[culture] || cultures[culture.split(\"-\")[0]] || null;\n            }\n\n            return null;\n        }\n\n        return null;\n    }\n\n    function getCulture(culture) {\n        if (culture) {\n            culture = findCulture(culture);\n        }\n\n        return culture || kendo.cultures.current;\n    }\n\n    function appendDesignatorsToCultures(calendars) {\n        // Don't ask. It's temporary.\n        if ((calendars.standard.AM && calendars.standard.AM.length)\n        && (calendars.standard.PM && calendars.standard.PM.length)\n        && (calendars.standard.AM.indexOf(\"PMA0\") < 0)\n        && (calendars.standard.AM.indexOf(\"AM\") > -1 || calendars.standard.PM.indexOf(\"PM\") > -1)) {\n            calendars.standard.AM.push(\"a\", \"A\", \"PMa\", \"PMA\", \"PMa0\", \"PMA0\");\n            calendars.standard.PM.push(\"p\", \"P\", \"AMp\", \"AMP\", \"AMp0\", \"AMP0\");\n        }\n    }\n\n    kendo.culture = function(cultureName) {\n        var cultures = kendo.cultures, culture;\n\n        if (cultureName !== undefined$1) {\n            culture = findCulture(cultureName) || cultures[EN];\n            culture.calendar = culture.calendars.standard;\n            cultures.current = culture;\n        } else {\n            appendDesignatorsToCultures(cultures.current.calendars);\n            return cultures.current;\n        }\n    };\n\n    kendo.findCulture = findCulture;\n    kendo.getCulture = getCulture;\n\n    //set current culture to en-US.\n    kendo.culture(EN);\n\n    function formatDate(date, format, culture) {\n        culture = getCulture(culture);\n\n        var calendar = culture.calendars.standard,\n            days = calendar.days,\n            months = calendar.months;\n\n        format = format.pattern || calendar.patterns[format] || format;\n\n        return format.replace(dateFormatRegExp, function(match) {\n            var minutes;\n            var result;\n            var sign;\n\n            if (match === \"d\") {\n                result = date.getDate();\n            } else if (match === \"dd\") {\n                result = pad(date.getDate());\n            } else if (match === \"ddd\") {\n                result = days.namesAbbr[date.getDay()];\n            } else if (match === \"dddd\" || match === \"EEEE\") {\n                result = days.names[date.getDay()];\n            } else if (match === \"M\") {\n                result = date.getMonth() + 1;\n            } else if (match === \"MM\") {\n                result = pad(date.getMonth() + 1);\n            } else if (match === \"MMM\") {\n                result = months.namesAbbr[date.getMonth()];\n            } else if (match === \"MMMM\") {\n                result = months.names[date.getMonth()];\n            } else if (match === \"yy\") {\n                result = pad(date.getFullYear() % 100);\n            } else if (match === \"yyyy\") {\n                result = pad(date.getFullYear(), 4);\n            } else if (match === \"h\" ) {\n                result = date.getHours() % 12 || 12;\n            } else if (match === \"hh\") {\n                result = pad(date.getHours() % 12 || 12);\n            } else if (match === \"H\") {\n                result = date.getHours();\n            } else if (match === \"HH\") {\n                result = pad(date.getHours());\n            } else if (match === \"m\") {\n                result = date.getMinutes();\n            } else if (match === \"mm\") {\n                result = pad(date.getMinutes());\n            } else if (match === \"s\") {\n                result = date.getSeconds();\n            } else if (match === \"ss\") {\n                result = pad(date.getSeconds());\n            } else if (match === \"f\") {\n                result = math.floor(date.getMilliseconds() / 100);\n            } else if (match === \"ff\") {\n                result = date.getMilliseconds();\n                if (result > 99) {\n                    result = math.floor(result / 10);\n                }\n                result = pad(result);\n            } else if (match === \"fff\") {\n                result = pad(date.getMilliseconds(), 3);\n            } else if (match === \"tt\" || match === \"aa\") {\n                result = date.getHours() < 12 ? calendar.AM[0] : calendar.PM[0];\n            } else if (match === \"zzz\") {\n                minutes = date.getTimezoneOffset();\n                sign = minutes < 0;\n\n                result = math.abs(minutes / 60).toString().split(\".\")[0];\n                minutes = math.abs(minutes) - (result * 60);\n\n                result = (sign ? \"+\" : \"-\") + pad(result);\n                result += \":\" + pad(minutes);\n            } else if (match === \"zz\" || match === \"z\") {\n                result = date.getTimezoneOffset() / 60;\n                sign = result < 0;\n\n                result = math.abs(result).toString().split(\".\")[0];\n                result = (sign ? \"+\" : \"-\") + (match === \"zz\" ? pad(result) : result);\n            }\n\n            return result !== undefined$1 ? result : match.slice(1, match.length - 1);\n        });\n    }\n\n    //number formatting\n    function formatNumber(number, format, culture) {\n        culture = getCulture(culture);\n\n        var numberFormat = culture.numberFormat,\n            decimal = numberFormat[POINT],\n            precision = numberFormat.decimals,\n            pattern = numberFormat.pattern[0],\n            literals = [],\n            symbol,\n            isCurrency, isPercent,\n            customPrecision,\n            formatAndPrecision,\n            negative = number < 0,\n            integer,\n            fraction,\n            integerLength,\n            fractionLength,\n            replacement = EMPTY,\n            value = EMPTY,\n            idx,\n            length,\n            ch,\n            hasGroup,\n            hasNegativeFormat,\n            decimalIndex,\n            sharpIndex,\n            zeroIndex,\n            hasZero, hasSharp,\n            percentIndex,\n            currencyIndex,\n            startZeroIndex,\n            start = -1,\n            end;\n\n        //return empty string if no number\n        if (number === undefined$1) {\n            return EMPTY;\n        }\n\n        if (!isFinite(number)) {\n            return number;\n        }\n\n        //if no format then return number.toString() or number.toLocaleString() if culture.name is not defined\n        if (!format) {\n            return culture.name.length ? number.toLocaleString() : number.toString();\n        }\n\n        formatAndPrecision = standardFormatRegExp.exec(format);\n\n        // standard formatting\n        if (formatAndPrecision) {\n            format = formatAndPrecision[1].toLowerCase();\n\n            isCurrency = format === \"c\";\n            isPercent = format === \"p\";\n\n            if (isCurrency || isPercent) {\n                //get specific number format information if format is currency or percent\n                numberFormat = isCurrency ? numberFormat.currency : numberFormat.percent;\n                decimal = numberFormat[POINT];\n                precision = numberFormat.decimals;\n                symbol = numberFormat.symbol;\n                pattern = numberFormat.pattern[negative ? 0 : 1];\n            }\n\n            customPrecision = formatAndPrecision[2];\n\n            if (customPrecision) {\n                precision = +customPrecision;\n            }\n\n            //return number in exponential format\n            if (format === \"e\") {\n                var exp = customPrecision ? number.toExponential(precision) : number.toExponential(); // toExponential() and toExponential(undefined) differ in FF #653438.\n\n                return exp.replace(POINT, numberFormat[POINT]);\n            }\n\n            // multiply if format is percent\n            if (isPercent) {\n                number *= 100;\n            }\n\n            number = round(number, precision);\n            negative = number < 0;\n            number = number.split(POINT);\n\n            integer = number[0];\n            fraction = number[1];\n\n            //exclude \"-\" if number is negative.\n            if (negative) {\n                integer = integer.substring(1);\n            }\n\n            value = groupInteger(integer, 0, integer.length, numberFormat);\n\n            if (fraction) {\n                value += decimal + fraction;\n            }\n\n            if (format === \"n\" && !negative) {\n                return value;\n            }\n\n            number = EMPTY;\n\n            for (idx = 0, length = pattern.length; idx < length; idx++) {\n                ch = pattern.charAt(idx);\n\n                if (ch === \"n\") {\n                    number += value;\n                } else if (ch === \"$\" || ch === \"%\") {\n                    number += symbol;\n                } else {\n                    number += ch;\n                }\n            }\n\n            return number;\n        }\n\n        //custom formatting\n        //\n        //separate format by sections.\n\n        if (format.indexOf(\"'\") > -1 || format.indexOf(\"\\\"\") > -1 || format.indexOf(\"\\\\\") > -1) {\n            format = format.replace(literalRegExp, function(match) {\n                var quoteChar = match.charAt(0).replace(\"\\\\\", \"\"),\n                    literal = match.slice(1).replace(quoteChar, \"\");\n\n                literals.push(literal);\n\n                return PLACEHOLDER;\n            });\n        }\n\n        format = format.split(\";\");\n        if (negative && format[1]) {\n            //get negative format\n            format = format[1];\n            hasNegativeFormat = true;\n        } else if (number === 0 && format[2]) {\n            //format for zeros\n            format = format[2];\n            if (format.indexOf(SHARP) == -1 && format.indexOf(ZERO) == -1) {\n                //return format if it is string constant.\n                return format;\n            }\n        } else {\n            format = format[0];\n        }\n\n        percentIndex = format.indexOf(\"%\");\n        currencyIndex = format.indexOf(\"$\");\n\n        isPercent = percentIndex != -1;\n        isCurrency = currencyIndex != -1;\n\n        //multiply number if the format has percent\n        if (isPercent) {\n            number *= 100;\n        }\n\n        if (isCurrency && format[currencyIndex - 1] === \"\\\\\") {\n            format = format.split(\"\\\\\").join(\"\");\n            isCurrency = false;\n        }\n\n        if (isCurrency || isPercent) {\n            //get specific number format information if format is currency or percent\n            numberFormat = isCurrency ? numberFormat.currency : numberFormat.percent;\n            decimal = numberFormat[POINT];\n            precision = numberFormat.decimals;\n            symbol = numberFormat.symbol;\n        }\n\n        hasGroup = format.indexOf(COMMA) > -1;\n        if (hasGroup) {\n            format = format.replace(commaRegExp, EMPTY);\n        }\n\n        decimalIndex = format.indexOf(POINT);\n        length = format.length;\n\n        if (decimalIndex != -1) {\n            fraction = number.toString().split(\"e\");\n            if (fraction[1]) {\n                fraction = round(number, Math.abs(fraction[1]));\n            } else {\n                fraction = fraction[0];\n            }\n            fraction = fraction.split(POINT)[1] || EMPTY;\n            zeroIndex = format.lastIndexOf(ZERO) - decimalIndex;\n            sharpIndex = format.lastIndexOf(SHARP) - decimalIndex;\n            hasZero = zeroIndex > -1;\n            hasSharp = sharpIndex > -1;\n            idx = fraction.length;\n\n            if (!hasZero && !hasSharp) {\n                format = format.substring(0, decimalIndex) + format.substring(decimalIndex + 1);\n                length = format.length;\n                decimalIndex = -1;\n                idx = 0;\n            }\n\n            if (hasZero && zeroIndex > sharpIndex) {\n                idx = zeroIndex;\n            } else if (sharpIndex > zeroIndex) {\n                if (hasSharp && idx > sharpIndex) {\n                    var rounded = round(number, sharpIndex, negative);\n\n                    while (rounded.charAt(rounded.length - 1) === ZERO && sharpIndex > 0 && sharpIndex > zeroIndex) {\n                        sharpIndex--;\n\n                        rounded = round(number, sharpIndex, negative);\n                    }\n\n                    idx = sharpIndex;\n                } else if (hasZero && idx < zeroIndex) {\n                    idx = zeroIndex;\n                }\n            }\n        }\n\n        number = round(number, idx, negative);\n\n        sharpIndex = format.indexOf(SHARP);\n        startZeroIndex = zeroIndex = format.indexOf(ZERO);\n\n        //define the index of the first digit placeholder\n        if (sharpIndex == -1 && zeroIndex != -1) {\n            start = zeroIndex;\n        } else if (sharpIndex != -1 && zeroIndex == -1) {\n            start = sharpIndex;\n        } else {\n            start = sharpIndex > zeroIndex ? zeroIndex : sharpIndex;\n        }\n\n        sharpIndex = format.lastIndexOf(SHARP);\n        zeroIndex = format.lastIndexOf(ZERO);\n\n        //define the index of the last digit placeholder\n        if (sharpIndex == -1 && zeroIndex != -1) {\n            end = zeroIndex;\n        } else if (sharpIndex != -1 && zeroIndex == -1) {\n            end = sharpIndex;\n        } else {\n            end = sharpIndex > zeroIndex ? sharpIndex : zeroIndex;\n        }\n\n        if (start == length) {\n            end = start;\n        }\n\n        if (start != -1) {\n            value = number.toString().split(POINT);\n            integer = value[0];\n            fraction = value[1] || EMPTY;\n\n            integerLength = integer.length;\n            fractionLength = fraction.length;\n\n            if (negative && (number * -1) >= 0) {\n                negative = false;\n            }\n\n            number = format.substring(0, start);\n\n            if (negative && !hasNegativeFormat) {\n                number += \"-\";\n            }\n\n            for (idx = start; idx < length; idx++) {\n                ch = format.charAt(idx);\n\n                if (decimalIndex == -1) {\n                    if (end - idx < integerLength) {\n                        number += integer;\n                        break;\n                    }\n                } else {\n                    if (zeroIndex != -1 && zeroIndex < idx) {\n                        replacement = EMPTY;\n                    }\n\n                    if ((decimalIndex - idx) <= integerLength && decimalIndex - idx > -1) {\n                        number += integer;\n                        idx = decimalIndex;\n                    }\n\n                    if (decimalIndex === idx) {\n                        number += (fraction ? decimal : EMPTY) + fraction;\n                        idx += end - decimalIndex + 1;\n                        continue;\n                    }\n                }\n\n                if (ch === ZERO) {\n                    number += ch;\n                    replacement = ch;\n                } else if (ch === SHARP) {\n                    number += replacement;\n                }\n            }\n\n            if (hasGroup) {\n                number = groupInteger(number, start + (negative && !hasNegativeFormat ? 1 : 0), Math.max(end, (integerLength + start)), numberFormat);\n            }\n\n            if (end >= start) {\n                number += format.substring(end + 1);\n            }\n\n            //replace symbol placeholders\n            if (isCurrency || isPercent) {\n                value = EMPTY;\n                for (idx = 0, length = number.length; idx < length; idx++) {\n                    ch = number.charAt(idx);\n                    value += (ch === \"$\" || ch === \"%\") ? symbol : ch;\n                }\n                number = value;\n            }\n\n            length = literals.length;\n\n            if (length) {\n                for (idx = 0; idx < length; idx++) {\n                    number = number.replace(PLACEHOLDER, literals[idx]);\n                }\n            }\n        }\n\n        return number;\n    }\n\n    var groupInteger = function(number, start, end, numberFormat) {\n        var decimalIndex = number.indexOf(numberFormat[POINT]);\n        var groupSizes = numberFormat.groupSize.slice();\n        var groupSize = groupSizes.shift();\n        var integer, integerLength;\n        var idx, parts, value;\n        var newGroupSize;\n\n        end = decimalIndex !== -1 ? decimalIndex : end + 1;\n\n        integer = number.substring(start, end);\n        integerLength = integer.length;\n\n        if (integerLength >= groupSize) {\n            idx = integerLength;\n            parts = [];\n\n            while (idx > -1) {\n                value = integer.substring(idx - groupSize, idx);\n                if (value) {\n                    parts.push(value);\n                }\n                idx -= groupSize;\n                newGroupSize = groupSizes.shift();\n                groupSize = newGroupSize !== undefined$1 ? newGroupSize : groupSize;\n\n                if (groupSize === 0) {\n                    if (idx > 0) {\n                        parts.push(integer.substring(0, idx));\n                    }\n                    break;\n                }\n            }\n\n            integer = parts.reverse().join(numberFormat[COMMA]);\n            number = number.substring(0, start) + integer + number.substring(end);\n        }\n\n        return number;\n    };\n\n    var round = function(value, precision, negative) {\n        precision = precision || 0;\n\n        value = value.toString().split('e');\n        value = Math.round(+(value[0] + 'e' + (value[1] ? (+value[1] + precision) : precision)));\n\n        if (negative) {\n            value = -value;\n        }\n\n        value = value.toString().split('e');\n        value = +(value[0] + 'e' + (value[1] ? (+value[1] - precision) : -precision));\n\n        return value.toFixed(Math.min(precision, 20));\n    };\n\n    var toString = function(value, fmt, culture) {\n        if (fmt) {\n            if (objectToString.call(value) === \"[object Date]\") {\n                return formatDate(value, fmt, culture);\n            } else if (typeof value === NUMBER) {\n                return formatNumber(value, fmt, culture);\n            }\n        }\n\n        return value !== undefined$1 ? value : \"\";\n    };\n\n    kendo.format = function(fmt) {\n        var values = arguments;\n\n        return fmt.replace(formatRegExp, function(match, index, placeholderFormat) {\n            var value = values[parseInt(index, 10) + 1];\n\n            return toString(value, placeholderFormat ? placeholderFormat.substring(1) : \"\");\n        });\n    };\n\n    kendo._extractFormat = function(format) {\n        if (format.slice(0,3) === \"{0:\") {\n            format = format.slice(3, format.length - 1);\n        }\n\n        return format;\n    };\n\n    kendo._activeElement = function() {\n        try {\n            return document.activeElement;\n        } catch (e) {\n            return document.documentElement.activeElement;\n        }\n    };\n\n    kendo._round = round;\n    kendo._outerWidth = function(element, includeMargin, calculateFromHidden) {\n        element = $(element);\n        if (calculateFromHidden) {\n            return getHiddenDimensions(element, includeMargin).width;\n        }\n\n        return $(element).outerWidth(includeMargin || false) || 0;\n    };\n    kendo._outerHeight = function(element, includeMargin, calculateFromHidden) {\n        element = $(element);\n        if (calculateFromHidden) {\n            return getHiddenDimensions(element, includeMargin).height;\n        }\n\n        return $(element).outerHeight(includeMargin || false) || 0;\n    };\n    kendo.toString = toString;\n})();\n\n\n(function() {\n    var nonBreakingSpaceRegExp = /\\u00A0/g,\n        spaceRegExp = /\\s/g,\n        exponentRegExp = /[eE][\\-+]?[0-9]+/,\n        shortTimeZoneRegExp = /[+|\\-]\\d{1,2}/,\n        longTimeZoneRegExp = /[+|\\-]\\d{1,2}:?\\d{2}/,\n        dateRegExp = /^\\/Date\\((.*?)\\)\\/$/,\n        offsetRegExp = /[+-]\\d*/,\n        FORMATS_SEQUENCE = [ [], [ \"G\", \"g\", \"F\" ], [ \"D\", \"d\", \"y\", \"m\", \"T\", \"t\" ] ],\n        STANDARD_FORMATS = [\n            [\n            \"yyyy-MM-ddTHH:mm:ss.fffffffzzz\",\n            \"yyyy-MM-ddTHH:mm:ss.fffffff\",\n            \"yyyy-MM-ddTHH:mm:ss.fffzzz\",\n            \"yyyy-MM-ddTHH:mm:ss.fff\",\n            \"ddd MMM dd yyyy HH:mm:ss\",\n            \"yyyy-MM-ddTHH:mm:sszzz\",\n            \"yyyy-MM-ddTHH:mmzzz\",\n            \"yyyy-MM-ddTHH:mmzz\",\n            \"yyyy-MM-ddTHH:mm:ss\",\n            \"yyyy-MM-dd HH:mm:ss\",\n            \"yyyy/MM/dd HH:mm:ss\"\n            ], [\n            \"yyyy-MM-ddTHH:mm\",\n            \"yyyy-MM-dd HH:mm\",\n            \"yyyy/MM/dd HH:mm\"\n            ], [\n            \"yyyy/MM/dd\",\n            \"yyyy-MM-dd\",\n            \"HH:mm:ss\",\n            \"HH:mm\"\n            ]\n        ],\n        numberRegExp = {\n            2: /^\\d{1,2}/,\n            3: /^\\d{1,3}/,\n            4: /^\\d{4}/,\n            exact3: /^\\d{3}/\n        },\n        objectToString = {}.toString;\n\n    function outOfRange(value, start, end) {\n        return !(value >= start && value <= end);\n    }\n\n    function designatorPredicate(designator) {\n        return designator.charAt(0);\n    }\n\n    function mapDesignators(designators) {\n        return $.map(designators, designatorPredicate);\n    }\n\n    //if date's day is different than the typed one - adjust\n    function adjustDST(date, hours) {\n        if (!hours && date.getHours() === 23) {\n            date.setHours(date.getHours() + 2);\n        }\n    }\n\n    function lowerArray(data) {\n        var idx = 0,\n            length = data.length,\n            array = [];\n\n        for (; idx < length; idx++) {\n            array[idx] = (data[idx] + \"\").toLowerCase();\n        }\n\n        return array;\n    }\n\n    function lowerLocalInfo(localInfo) {\n        var newLocalInfo = {}, property;\n\n        for (property in localInfo) {\n            newLocalInfo[property] = lowerArray(localInfo[property]);\n        }\n\n        return newLocalInfo;\n    }\n\n    function unpadZero(value) {\n        return value.replace(/^0*/, '');\n    }\n\n    function parseExact(value, format, culture, strict, shouldUnpadZeros) {\n        if (!value) {\n            return null;\n        }\n\n        var lookAhead = function(match) {\n                var i = 0;\n                while (format[idx] === match) {\n                    i++;\n                    idx++;\n                }\n                if (i > 0) {\n                    idx -= 1;\n                }\n                return i;\n            },\n            longestDesignatorLength = (designators) => Array.from(designators).sort((a, b) => b.length - a.length)[0].length,\n            getNumber = function(size) {\n                var rg, match, part = \"\";\n                if (size === 2) {\n                    for (let i = 0; i <= size; i++) {\n                        part += value[valueIdx + i] || \"\";\n                    }\n                }\n\n                // If the value comes in the form of 021, 022, 023 we must trim the leading zero otherwise the result will be 02 in all three cases instead of 21/22/23.\n                if (shouldUnpadZeros && part.match(numberRegExp.exact3) && Number.isInteger(Number(part)) && Number(part) > 0) {\n                    part = unpadZero(part);\n                } else {\n                    part = value.substr(valueIdx, size);\n                }\n\n                rg = numberRegExp[size] || new RegExp('^\\\\d{1,' + size + '}');\n                match = part.match(rg);\n\n                if (match) {\n                    match = match[0];\n                    valueIdx += match.length;\n                    return parseInt(match, 10);\n                }\n                return null;\n            },\n            getIndexByName = function(names, lower, subLength) {\n                var i = 0,\n                    length = names.length,\n                    name, nameLength,\n                    matchLength = 0,\n                    matchIdx = 0,\n                    subValue;\n\n                for (; i < length; i++) {\n                    name = names[i];\n                    nameLength = name.length;\n                    subValue = value.substr(valueIdx, subLength || nameLength); // The `subLength` is part of the appendDesignatorsToCultures logic.\n\n                    if (lower) {\n                        subValue = subValue.toLowerCase();\n                    }\n\n                    if (subValue == name && nameLength > matchLength) {\n                        matchLength = nameLength;\n                        matchIdx = i;\n                    }\n                }\n\n                if (matchLength) {\n                    valueIdx += matchLength;\n                    return matchIdx + 1;\n                }\n\n                return null;\n            },\n            checkLiteral = function() {\n                var result = false;\n                if (value.charAt(valueIdx) === format[idx]) {\n                    valueIdx++;\n                    result = true;\n                }\n                return result;\n            },\n            calendar = culture.calendars.standard,\n            year = null,\n            month = null,\n            day = null,\n            hours = null,\n            minutes = null,\n            seconds = null,\n            milliseconds = null,\n            idx = 0,\n            valueIdx = 0,\n            literal = false,\n            date = new Date(),\n            twoDigitYearMax = calendar.twoDigitYearMax || 2029,\n            defaultYear = date.getFullYear(),\n            ch, count, length, pattern,\n            pmHour, UTC, matches,\n            amDesignators, pmDesignators,\n            hoursOffset, minutesOffset,\n            hasTime, match;\n\n        if (!format) {\n            format = \"d\"; //shord date format\n        }\n\n        //if format is part of the patterns get real format\n        pattern = calendar.patterns[format];\n        if (pattern) {\n            format = pattern;\n        }\n\n        format = format.split(\"\");\n        length = format.length;\n\n        for (; idx < length; idx++) {\n            ch = format[idx];\n\n            if (literal) {\n                if (ch === \"'\") {\n                    literal = false;\n                } else {\n                    checkLiteral();\n                }\n            } else {\n                if (ch === \"d\") {\n                    count = lookAhead(\"d\");\n                    if (!calendar._lowerDays) {\n                        calendar._lowerDays = lowerLocalInfo(calendar.days);\n                    }\n\n                    if (day !== null && count > 2) {\n                        continue;\n                    }\n\n                    day = count < 3 ? getNumber(2) : getIndexByName(calendar._lowerDays[count == 3 ? \"namesAbbr\" : \"names\"], true);\n\n                    if (day === null || outOfRange(day, 1, 31)) {\n                        return null;\n                    }\n                } else if (ch === \"M\") {\n                    count = lookAhead(\"M\");\n                    if (!calendar._lowerMonths) {\n                        calendar._lowerMonths = lowerLocalInfo(calendar.months);\n                    }\n                    month = count < 3 ? getNumber(2) : getIndexByName(calendar._lowerMonths[count == 3 ? 'namesAbbr' : 'names'], true);\n\n                    if (month === null || outOfRange(month, 1, 12)) {\n                        return null;\n                    }\n                    month -= 1; //because month is zero based\n                } else if (ch === \"y\") {\n                    count = lookAhead(\"y\");\n                    year = getNumber(count);\n\n                    if (year === null) {\n                        return null;\n                    }\n\n                    if (count == 2) {\n                        if (typeof twoDigitYearMax === \"string\") {\n                            twoDigitYearMax = defaultYear + parseInt(twoDigitYearMax, 10);\n                        }\n\n                        year = (defaultYear - defaultYear % 100) + year;\n                        if (year > twoDigitYearMax) {\n                            year -= 100;\n                        }\n                    }\n                } else if (ch === \"h\" ) {\n                    lookAhead(\"h\");\n                    hours = getNumber(2);\n                    if (hours == 12) {\n                        hours = 0;\n                    }\n                    if (hours === null || outOfRange(hours, 0, 11)) {\n                        return null;\n                    }\n                } else if (ch === \"H\") {\n                    lookAhead(\"H\");\n                    hours = getNumber(2);\n                    if (hours === null || outOfRange(hours, 0, 23)) {\n                        return null;\n                    }\n                } else if (ch === \"m\") {\n                    lookAhead(\"m\");\n                    minutes = getNumber(2);\n                    if (minutes === null || outOfRange(minutes, 0, 59)) {\n                        return null;\n                    }\n                } else if (ch === \"s\") {\n                    lookAhead(\"s\");\n                    seconds = getNumber(2);\n                    if (seconds === null || outOfRange(seconds, 0, 59)) {\n                        return null;\n                    }\n                } else if (ch === \"f\") {\n                    count = lookAhead(\"f\");\n\n                    match = value.substr(valueIdx, count).match(numberRegExp[3]);\n                    milliseconds = getNumber(count); //move value index position\n\n                    if (milliseconds !== null) {\n                        milliseconds = parseFloat(\"0.\" + match[0], 10);\n                        milliseconds = kendo._round(milliseconds, 3);\n                        milliseconds *= 1000;\n                    }\n\n                    if (milliseconds === null || outOfRange(milliseconds, 0, 999)) {\n                        return null;\n                    }\n\n                } else if (ch === \"t\") {\n                    count = lookAhead(\"t\");\n                    amDesignators = calendar.AM;\n                    pmDesignators = calendar.PM;\n\n                    if (count === 1) {\n                        amDesignators = mapDesignators(amDesignators);\n                        pmDesignators = mapDesignators(pmDesignators);\n                    }\n\n                    pmHour = getIndexByName(pmDesignators, false, longestDesignatorLength(pmDesignators));\n                    if (!pmHour && !getIndexByName(amDesignators, false, longestDesignatorLength(amDesignators))) {\n                        return null;\n                    }\n                }\n                else if (ch === \"z\") {\n                    UTC = true;\n                    count = lookAhead(\"z\");\n\n                    if (value.substr(valueIdx, 1) === \"Z\") {\n                        checkLiteral();\n                        continue;\n                    }\n\n                    matches = value.substr(valueIdx, 6)\n                                   .match(count > 2 ? longTimeZoneRegExp : shortTimeZoneRegExp);\n\n                    if (!matches) {\n                        return null;\n                    }\n\n                    matches = matches[0].split(\":\");\n\n                    hoursOffset = matches[0];\n                    minutesOffset = matches[1];\n\n                    if (!minutesOffset && hoursOffset.length > 3) { //(+|-)[hh][mm] format is used\n                        valueIdx = hoursOffset.length - 2;\n                        minutesOffset = hoursOffset.substring(valueIdx);\n                        hoursOffset = hoursOffset.substring(0, valueIdx);\n                    }\n\n                    hoursOffset = parseInt(hoursOffset, 10);\n                    if (outOfRange(hoursOffset, -12, 13)) {\n                        return null;\n                    }\n\n                    if (count > 2) {\n                        minutesOffset = matches[0][0] + minutesOffset;\n                        minutesOffset = parseInt(minutesOffset, 10);\n                        if (isNaN(minutesOffset) || outOfRange(minutesOffset, -59, 59)) {\n                            return null;\n                        }\n                    }\n                } else if (ch === \"'\") {\n                    literal = true;\n                    checkLiteral();\n                } else if (!checkLiteral()) {\n                    return null;\n                }\n            }\n        }\n\n        // if more characters follow, assume wrong format\n        // https://github.com/telerik/kendo-ui-core/issues/3476\n        if (strict && !/^\\s*$/.test(value.substr(valueIdx))) {\n            return null;\n        }\n\n        hasTime = hours !== null || minutes !== null || seconds || null;\n\n        if (year === null && month === null && day === null && hasTime) {\n            year = defaultYear;\n            month = date.getMonth();\n            day = date.getDate();\n        } else {\n            if (year === null) {\n                year = defaultYear;\n            }\n\n            if (day === null) {\n                day = 1;\n            }\n        }\n\n        if (pmHour && hours < 12) {\n            hours += 12;\n        }\n\n        if (UTC) {\n            if (hoursOffset) {\n                hours += -hoursOffset;\n            }\n\n            if (minutesOffset) {\n                minutes += -minutesOffset;\n            }\n\n            value = new Date(Date.UTC(year, month, day, hours, minutes, seconds, milliseconds));\n        } else {\n            value = new Date(year, month, day, hours, minutes, seconds, milliseconds);\n            adjustDST(value, hours);\n        }\n\n        if (year < 100) {\n            value.setFullYear(year);\n        }\n\n        if (value.getDate() !== day && UTC === undefined$1) {\n            return null;\n        }\n\n        return value;\n    }\n\n    function parseMicrosoftFormatOffset(offset) {\n        var sign = offset.substr(0, 1) === \"-\" ? -1 : 1;\n\n        offset = offset.substring(1);\n        offset = (parseInt(offset.substr(0, 2), 10) * 60) + parseInt(offset.substring(2), 10);\n\n        return sign * offset;\n    }\n\n    function getDefaultFormats(culture) {\n        var length = math.max(FORMATS_SEQUENCE.length, STANDARD_FORMATS.length);\n        var calendar = culture.calendar || culture.calendars.standard;\n        var patterns = calendar.patterns;\n        var cultureFormats, formatIdx, idx;\n        var formats = [];\n\n        for (idx = 0; idx < length; idx++) {\n            cultureFormats = FORMATS_SEQUENCE[idx];\n            for (formatIdx = 0; formatIdx < cultureFormats.length; formatIdx++) {\n                formats.push(patterns[cultureFormats[formatIdx]]);\n            }\n            formats = formats.concat(STANDARD_FORMATS[idx]);\n        }\n\n        return formats;\n    }\n\n    function internalParseDate(value, formats, culture, strict, shouldUnpadZeros) {\n        if (objectToString.call(value) === \"[object Date]\") {\n            return value;\n        }\n\n        var idx = 0;\n        var date = null;\n        var length;\n        var tzoffset;\n\n        if (value && value.indexOf(\"/D\") === 0) {\n            date = dateRegExp.exec(value);\n            if (date) {\n                date = date[1];\n                tzoffset = offsetRegExp.exec(date.substring(1));\n\n                date = new Date(parseInt(date, 10));\n\n                if (tzoffset) {\n                    tzoffset = parseMicrosoftFormatOffset(tzoffset[0]);\n                    date = kendo.timezone.apply(date, 0);\n                    date = kendo.timezone.convert(date, 0, -1 * tzoffset);\n                }\n\n                return date;\n            }\n        }\n\n        culture = kendo.getCulture(culture);\n\n        if (!formats) {\n            formats = getDefaultFormats(culture);\n        }\n\n        formats = isArray(formats) ? formats : [formats];\n        length = formats.length;\n\n        for (; idx < length; idx++) {\n            date = parseExact(value, formats[idx], culture, strict, shouldUnpadZeros);\n            if (date) {\n                return date;\n            }\n        }\n\n        return date;\n    }\n\n    kendo.parseDate = function(value, formats, culture, shouldUnpadZeros) {\n        return internalParseDate(value, formats, culture, false, shouldUnpadZeros);\n    };\n\n    kendo.parseExactDate = function(value, formats, culture) {\n        return internalParseDate(value, formats, culture, true);\n    };\n\n    kendo.parseInt = function(value, culture) {\n        var result = kendo.parseFloat(value, culture);\n        if (result) {\n            result = result | 0;\n        }\n        return result;\n    };\n\n    kendo.parseFloat = function(value, culture, format) {\n        if (!value && value !== 0) {\n           return null;\n        }\n\n        if (typeof value === NUMBER) {\n           return value;\n        }\n\n        value = value.toString();\n        culture = kendo.getCulture(culture);\n\n        var number = culture.numberFormat,\n            percent = number.percent,\n            currency = number.currency,\n            symbol = currency.symbol,\n            percentSymbol = percent.symbol,\n            negative = value.indexOf(\"-\"),\n            parts, isPercent;\n\n        //handle exponential number\n        if (exponentRegExp.test(value)) {\n            value = parseFloat(value.replace(number[\".\"], \".\"));\n            if (isNaN(value)) {\n                value = null;\n            }\n            return value;\n        }\n\n        if (negative > 0) {\n            return null;\n        } else {\n            negative = negative > -1;\n        }\n\n        if (value.indexOf(symbol) > -1 || (format && format.toLowerCase().indexOf(\"c\") > -1)) {\n            number = currency;\n            parts = number.pattern[0].replace(\"$\", symbol).split(\"n\");\n            if (value.indexOf(parts[0]) > -1 && value.indexOf(parts[1]) > -1) {\n                value = value.replace(parts[0], \"\").replace(parts[1], \"\");\n                negative = true;\n            }\n        } else if (value.indexOf(percentSymbol) > -1) {\n            isPercent = true;\n            number = percent;\n            symbol = percentSymbol;\n        }\n\n        value = value.replace(\"-\", \"\")\n                     .replace(symbol, \"\")\n                     .replace(nonBreakingSpaceRegExp, \" \")\n                     .split(number[\",\"].replace(nonBreakingSpaceRegExp, \" \")).join(\"\")\n                     .replace(spaceRegExp, \"\")\n                     .replace(number[\".\"], \".\");\n\n        value = parseFloat(value);\n\n        if (isNaN(value)) {\n            value = null;\n        } else if (negative) {\n            value *= -1;\n        }\n\n        if (value && isPercent) {\n            value /= 100;\n        }\n\n        return value;\n    };\n})();\n\n    function getShadows(element) {\n        var shadow = element.css(\"box-shadow\"),\n            radius = shadow ? shadow.match(boxShadowRegExp) || [ 0, 0, 0, 0, 0 ] : [ 0, 0, 0, 0, 0 ],\n            blur = math.max((+radius[3]), +(radius[4] || 0));\n\n        return {\n            left: (-radius[1]) + blur,\n            right: (+radius[1]) + blur,\n            bottom: (+radius[2]) + blur\n        };\n    }\n\n    function getHiddenDimensions(element, includeMargin) {\n        var clone, width, height;\n\n        clone = element.clone();\n        clone.css(\"display\", \"\");\n        clone.css(\"visibility\", \"hidden\");\n        clone.appendTo($(\"body\"));\n\n        width = clone.outerWidth(includeMargin || false);\n        height = clone.outerHeight(includeMargin || false);\n\n        clone.remove();\n\n        return {\n            width: width || 0,\n            height: height || 0\n        };\n    }\n\n    function wrap(element, autosize, resize, shouldCorrectWidth = true, autowidth) {\n        var percentage,\n            outerWidth = kendo._outerWidth,\n            outerHeight = kendo._outerHeight,\n            parent = element.parent(),\n            windowOuterWidth = outerWidth(window);\n\n        parent.parent().removeClass(\"k-animation-container-sm\");\n\n        if (!parent.hasClass(\"k-child-animation-container\")) {\n            var width = element[0].style.width,\n                height = element[0].style.height,\n                percentWidth = percentRegExp.test(width),\n                percentHeight = percentRegExp.test(height),\n                forceDimensions = element.hasClass(\"k-tooltip\") || element.is(\".k-menu-horizontal.k-context-menu\"),\n                calculateFromHidden = element.hasClass(\"k-tooltip\");\n\n            percentage = percentWidth || percentHeight;\n\n            if (!percentWidth && (!autosize || (autosize && width) || forceDimensions)) { width = autosize ? outerWidth(element, false, calculateFromHidden) + 1 : outerWidth(element, false, calculateFromHidden); }\n            if (!percentHeight && (!autosize || (autosize && height)) || forceDimensions) { height = outerHeight(element, false, calculateFromHidden); }\n\n            element.wrap(\n                $(\"<div/>\")\n                .addClass(\"k-child-animation-container\")\n                .css({\n                    width: autowidth ? \"auto\" : width,\n                    height: height\n                }));\n            parent = element.parent();\n\n            parent.wrap(\n                         $(\"<div/>\")\n                         .addClass(\"k-animation-container\")\n                         .attr(\"role\", \"region\")\n                        );\n\n            if (percentage) {\n                element.css({\n                    width: \"100%\",\n                    height: \"100%\"\n                });\n            }\n        } else {\n            wrapResize(element, autosize, shouldCorrectWidth);\n        }\n\n        parent = parent.parent();\n\n        if (windowOuterWidth < outerWidth(parent)) {\n            parent.addClass(\"k-animation-container-sm\");\n            resize = true;\n        }\n\n        if (resize) {\n            wrapResize(element, autosize, shouldCorrectWidth);\n        }\n\n        return parent;\n    }\n\n    function wrapResize(element, autosize, shouldCorrectWidth) {\n        var percentage,\n            outerWidth = kendo._outerWidth,\n            outerHeight = kendo._outerHeight,\n            parent = element.parent(),\n            wrapper = element.closest(\".k-animation-container\"),\n            calculateFromHidden = element.hasClass(\"k-tooltip\"),\n            visible = element.is(\":visible\"),\n            wrapperStyle = parent[0].style,\n            elementHeight = element[0].style.height;\n\n        if (wrapper.is(\":hidden\")) {\n            wrapper.css({\n                display: \"\",\n                position: \"\"\n            });\n        }\n\n        percentage = percentRegExp.test(wrapperStyle.width) || percentRegExp.test(wrapperStyle.height);\n\n        if (!percentage) {\n            if (!visible) {\n                element.add(parent).show();\n            }\n            if (shouldCorrectWidth) {\n                parent.css(\"width\", \"\"); // Needed to get correct width dimensions\n            }\n            parent.css({\n                width: autosize ? outerWidth(element, false, calculateFromHidden) + 1 : outerWidth(element, false, calculateFromHidden),\n            });\n\n            if (elementHeight === \"auto\") {\n                element.css({ height: outerHeight(parent) });\n            } else {\n                parent.css({\n                    height: outerHeight(element)\n                });\n            }\n\n            if (!visible) {\n                element.hide();\n            }\n        }\n    }\n\n    function deepExtend(destination) {\n        var i = 1,\n            length = arguments.length;\n\n        for (i = 1; i < length; i++) {\n            deepExtendOne(destination, arguments[i]);\n        }\n\n        return destination;\n    }\n\n    function deepExtendOne(destination, source) {\n        var ObservableArray = kendo.data.ObservableArray,\n            LazyObservableArray = kendo.data.LazyObservableArray,\n            DataSource = kendo.data.DataSource,\n            HierarchicalDataSource = kendo.data.HierarchicalDataSource,\n            property,\n            propValue,\n            propType,\n            propInit,\n            destProp;\n\n        for (property in source) {\n            if (property === '__proto__' || property === 'constructor') {\n                continue;\n            }\n\n            propValue = source[property];\n            propType = typeof propValue;\n\n            if (propType === OBJECT && propValue !== null) {\n                propInit = propValue.constructor;\n            } else {\n                propInit = null;\n            }\n\n            if (propInit &&\n                propInit !== Array && propInit !== ObservableArray && propInit !== LazyObservableArray &&\n                propInit !== DataSource && propInit !== HierarchicalDataSource && propInit !== RegExp &&\n                (!kendo.isFunction(window.ArrayBuffer) || propInit !== ArrayBuffer) && !(propValue instanceof HTMLElement)) {\n\n                if (propValue instanceof Date) {\n                    destination[property] = new Date(propValue.getTime());\n                } else if (isFunction(propValue.clone)) {\n                    destination[property] = propValue.clone();\n                } else {\n                    destProp = destination[property];\n                    if (typeof (destProp) === OBJECT) {\n                        destination[property] = destProp || {};\n                    } else {\n                        destination[property] = {};\n                    }\n                    deepExtendOne(destination[property], propValue);\n                }\n            } else if (propType !== UNDEFINED) {\n                destination[property] = propValue;\n            }\n        }\n\n        return destination;\n    }\n\n    function testRx(agent, rxs, dflt) {\n        for (var rx in rxs) {\n            if (rxs.hasOwnProperty(rx) && rxs[rx].test(agent)) {\n                return rx;\n            }\n        }\n        return dflt !== undefined$1 ? dflt : agent;\n    }\n\n    function toHyphens(str) {\n        return str.replace(/([a-z][A-Z])/g, function(g) {\n            return g.charAt(0) + '-' + g.charAt(1).toLowerCase();\n        });\n    }\n\n    function toCamelCase(str) {\n        return str.replace(/\\-(\\w)/g, function(strMatch, g1) {\n            return g1.toUpperCase();\n        });\n    }\n\n    function getComputedStyles(element, properties) {\n        var styles = {}, computedStyle;\n\n        if (document.defaultView && document.defaultView.getComputedStyle) {\n            computedStyle = document.defaultView.getComputedStyle(element, \"\");\n\n            if (properties) {\n                $.each(properties, function(idx, value) {\n                    styles[value] = computedStyle.getPropertyValue(value);\n                });\n            }\n        } else {\n            computedStyle = element.currentStyle;\n\n            if (properties) {\n                $.each(properties, function(idx, value) {\n                    styles[value] = computedStyle[toCamelCase(value)];\n                });\n            }\n        }\n\n        if (!kendo.size(styles)) {\n            styles = computedStyle;\n        }\n\n        return styles;\n    }\n\n    function isScrollable(element) {\n        if (element.dataset[kendo.ns + \"scrollable\"] === \"false\") {\n            return false;\n        }\n\n        if (element && element.className && typeof(element.className) === \"string\" && element.className.indexOf(\"k-auto-scrollable\") > -1) {\n            return true;\n        }\n\n        var overflow = getComputedStyles(element, [\"overflow\"]).overflow;\n        return overflow.indexOf(\"auto\") > -1 || overflow.indexOf(\"scroll\") > -1;\n    }\n\n    function scrollLeft(element, value) {\n        var webkit = support.browser.webkit;\n        var mozila = support.browser.mozilla;\n        var browserVersion = support.browser.version;\n        var el, isRtl;\n\n        if (element instanceof $ && value !== undefined$1) {\n            element.each(function(i, e) {\n                scrollLeft(e, value);\n            });\n\n            return;\n        } else {\n            el = element instanceof $ ? element[0] : element;\n        }\n\n        if (!el) {\n            return;\n        }\n\n        isRtl = support.isRtl(element);\n\n        // After updating browser detection,\n        // Test in which if should the Safari browsers go\n        if (value !== undefined$1) {\n            if (isRtl && webkit && (browserVersion < 85 || support.browser.safari)) {\n                el.scrollLeft = el.scrollWidth - el.clientWidth - value;\n            } else if (isRtl && (mozila || webkit) && value > 0) {\n                el.scrollLeft = -value;\n            } else {\n                el.scrollLeft = value;\n            }\n        } else {\n            if (isRtl && webkit && (browserVersion < 85 || support.browser.safari)) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            } else {\n                return Math.abs(el.scrollLeft);\n            }\n        }\n    }\n\n    (function() {\n        support._scrollbar = undefined$1;\n\n        support.scrollbar = function(refresh) {\n            if (!isNaN(support._scrollbar) && !refresh) {\n                return support._scrollbar;\n            } else {\n                var div = document.createElement(\"div\"),\n                    result;\n\n                div.style.cssText = \"overflow:scroll;overflow-x:hidden;zoom:1;clear:both;display:block\";\n                div.innerHTML = \"&nbsp;\";\n                document.body.appendChild(div);\n\n                support._scrollbar = result = div.offsetWidth - div.scrollWidth;\n\n                document.body.removeChild(div);\n\n                return result;\n            }\n        };\n\n        support.isRtl = function(element) {\n            return $(element).closest(\".k-rtl\").length > 0;\n        };\n\n        var table = document.createElement(\"table\");\n\n        // Internet Explorer does not support setting the innerHTML of TBODY and TABLE elements\n        try {\n            table.innerHTML = \"<tr><td></td></tr>\";\n\n            support.tbodyInnerHtml = true;\n        } catch (e) {\n            support.tbodyInnerHtml = false;\n        }\n\n        support.touch = \"ontouchstart\" in window;\n\n        let docStyle = document.documentElement.style;\n        let elementProto = \"HTMLElement\" in window ? HTMLElement.prototype : [];\n\n        // Transforms and Transitions - no longer required, however these were public properties in the past.\n        // It is possible some customers may have used them so keep them for the time being.\n        support.transforms = support.transitions = { css: \"\", prefix: \"\", event: \"transitionend\" };\n        support.hasHW3D = (\"WebKitCSSMatrix\" in window && \"m11\" in new window.WebKitCSSMatrix()) || \"MozPerspective\" in docStyle || \"msPerspective\" in docStyle;\n        support.cssFlexbox = (\"flexWrap\" in docStyle) || (\"WebkitFlexWrap\" in docStyle) || (\"msFlexWrap\" in docStyle);\n\n        table = null;\n        support.devicePixelRatio = window.devicePixelRatio === undefined$1 ? 1 : window.devicePixelRatio;\n\n        try {\n            support.screenWidth = window.outerWidth || window.screen ? window.screen.availWidth : window.innerWidth;\n            support.screenHeight = window.outerHeight || window.screen ? window.screen.availHeight : window.innerHeight;\n        } catch (e) {\n            //window.outerWidth throws error when in IE showModalDialog.\n            support.screenWidth = window.screen.availWidth;\n            support.screenHeight = window.screen.availHeight;\n        }\n\n        support.detectOS = function(ua) {\n            var os = false, minorVersion, match = [],\n                notAndroidPhone = !/mobile safari/i.test(ua),\n                agentRxs = {\n                    wp: /(Windows Phone(?: OS)?)\\s(\\d+)\\.(\\d+(\\.\\d+)?)/,\n                    fire: /(Silk)\\/(\\d+)\\.(\\d+(\\.\\d+)?)/,\n                    android: /(Android|Android.*(?:Opera|Firefox).*?\\/)\\s*(\\d+)\\.?(\\d+(\\.\\d+)?)?/,\n                    iphone: /(iPhone|iPod).*OS\\s+(\\d+)[\\._]([\\d\\._]+)/,\n                    ipad: /(iPad).*OS\\s+(\\d+)[\\._]([\\d_]+)/,\n                    meego: /(MeeGo).+NokiaBrowser\\/(\\d+)\\.([\\d\\._]+)/,\n                    webos: /(webOS)\\/(\\d+)\\.(\\d+(\\.\\d+)?)/,\n                    blackberry: /(BlackBerry|BB10).*?Version\\/(\\d+)\\.(\\d+(\\.\\d+)?)/,\n                    playbook: /(PlayBook).*?Tablet\\s*OS\\s*(\\d+)\\.(\\d+(\\.\\d+)?)/,\n                    windows: /(MSIE)\\s+(\\d+)\\.(\\d+(\\.\\d+)?)/,\n                    tizen: /(tizen).*?Version\\/(\\d+)\\.(\\d+(\\.\\d+)?)/i,\n                    sailfish: /(sailfish).*rv:(\\d+)\\.(\\d+(\\.\\d+)?).*firefox/i,\n                    ffos: /(Mobile).*rv:(\\d+)\\.(\\d+(\\.\\d+)?).*Firefox/\n                },\n                osRxs = {\n                    ios: /^i(phone|pad|pod)$/i,\n                    android: /^android|fire$/i,\n                    blackberry: /^blackberry|playbook/i,\n                    windows: /windows/,\n                    wp: /wp/,\n                    flat: /sailfish|ffos|tizen/i,\n                    meego: /meego/\n                },\n                formFactorRxs = {\n                    tablet: /playbook|ipad|fire/i\n                },\n                browserRxs = {\n                    omini: /Opera\\sMini/i,\n                    omobile: /Opera\\sMobi/i,\n                    firefox: /Firefox|Fennec/i,\n                    mobilesafari: /version\\/.*safari/i,\n                    ie: /MSIE|Windows\\sPhone/i,\n                    chrome: /chrome|crios/i,\n                    webkit: /webkit/i\n                };\n\n            for (var agent in agentRxs) {\n                if (agentRxs.hasOwnProperty(agent)) {\n                    match = ua.match(agentRxs[agent]);\n                    if (match) {\n                        if (agent == \"windows\" && \"plugins\" in navigator) { return false; } // Break if not Metro/Mobile Windows\n\n                        os = {};\n                        os.device = agent;\n                        os.tablet = testRx(agent, formFactorRxs, false);\n                        os.browser = testRx(ua, browserRxs, \"default\");\n                        os.name = testRx(agent, osRxs);\n                        os[os.name] = true;\n                        os.majorVersion = match[2];\n                        os.minorVersion = (match[3] || \"0\").replace(\"_\", \".\");\n                        minorVersion = os.minorVersion.replace(\".\", \"\").substr(0, 2);\n                        os.flatVersion = os.majorVersion + minorVersion + (new Array(3 - (minorVersion.length < 3 ? minorVersion.length : 2)).join(\"0\"));\n                        os.cordova = typeof window.PhoneGap !== UNDEFINED || typeof window.cordova !== UNDEFINED; // Use file protocol to detect appModes.\n                        os.appMode = window.navigator.standalone || (/file|local|wmapp/).test(window.location.protocol) || os.cordova; // Use file protocol to detect appModes.\n\n                        if (os.android && (support.devicePixelRatio < 1.5 && os.flatVersion < 400 || notAndroidPhone) && (support.screenWidth > 800 || support.screenHeight > 800)) {\n                            os.tablet = agent;\n                        }\n\n                        break;\n                    }\n                }\n            }\n            return os;\n        };\n\n        var mobileOS = support.mobileOS = support.detectOS(navigator.userAgent);\n\n        support.wpDevicePixelRatio = mobileOS.wp ? screen.width / 320 : 0;\n\n        support.hasNativeScrolling = false;\n\n        if (mobileOS.ios || (mobileOS.android && mobileOS.majorVersion > 2) || mobileOS.wp) {\n            support.hasNativeScrolling = mobileOS;\n        }\n\n        support.delayedClick = function() {\n\n            // only the mobile devices with touch events do this.\n            if (support.touch) {\n                // All iOS devices so far (by the time I am writing this, iOS 9.0.2 is the latest),\n                // delay their click events.\n                if (mobileOS.ios) {\n                    return true;\n                }\n\n                if (mobileOS.android) {\n\n                    if (!support.browser.chrome) { // older webkits and webviews delay the click\n                        return true;\n                    }\n\n                    // from here on, we deal with Chrome on Android.\n                    if (support.browser.version < 32) {\n                        return false;\n                    }\n\n                    // Chrome 32+ does conditional fast clicks if the view port is not user scalable.\n                    return !($(\"meta[name=viewport]\").attr(\"content\") || \"\").match(/user-scalable=no/i);\n                }\n            }\n\n            return false;\n        };\n\n        support.mouseAndTouchPresent = support.touch && !(support.mobileOS.ios || support.mobileOS.android);\n\n        support.detectBrowser = function(ua) {\n            var browser = false,\n                match = [],\n                chromiumEdgeMatch = [],\n                browserRxs = {\n                    edge: /(edge)[ \\/]([\\w.]+)/i,\n                    webkit: /(chrome|crios)[ \\/]([\\w.]+)/i,\n                    safari: /(webkit)[ \\/]([\\w.]+)/i,\n                    opera: /(opera)(?:.*version|)[ \\/]([\\w.]+)/i,\n                    msie: /(msie\\s|trident.*? rv:)([\\w.]+)/i,\n                    mozilla: /(mozilla)(?:.*? rv:([\\w.]+)|)/i\n                };\n\n            for (var agent in browserRxs) {\n                if (browserRxs.hasOwnProperty(agent)) {\n                    match = ua.match(browserRxs[agent]);\n                    if (match) {\n                        browser = {};\n                        browser[agent] = true;\n                        browser[match[1].toLowerCase().split(\" \")[0].split(\"/\")[0]] = true;\n                        browser.version = parseInt(document.documentMode || match[2], 10);\n\n                        if (browser.chrome) {\n                            chromiumEdgeMatch = ua.match(/(edg)[ \\/]([\\w.]+)/i);\n\n                            if (chromiumEdgeMatch) {\n                                browser.chromiumEdge = true;\n                            }\n                        }\n\n                        break;\n                    }\n                }\n            }\n\n            return browser;\n        };\n\n        support.browser = support.detectBrowser(navigator.userAgent);\n\n        if (!mobileOS && support.touch && support.browser.safari) {\n            mobileOS = support.mobileOS = {\n                ios: true,\n                tablet: \"tablet\",\n                device: \"ipad\",\n                majorVersion: 13\n            };\n        }\n\n        support.detectClipboardAccess = function() {\n            var commands = {\n                copy: document.queryCommandSupported ? document.queryCommandSupported(\"copy\") : false,\n                cut: document.queryCommandSupported ? document.queryCommandSupported(\"cut\") : false,\n                paste: document.queryCommandSupported ? document.queryCommandSupported(\"paste\") : false\n            };\n\n            if (support.browser.chrome) {\n                //not using queryCommandSupported due to chromium issues 476508 and 542948\n                commands.paste = false;\n                if (support.browser.version >= 43) {\n                    commands.copy = true;\n                    commands.cut = true;\n                }\n            }\n\n            return commands;\n        };\n\n        support.clipboard = support.detectClipboardAccess();\n\n        support.zoomLevel = function() {\n            try {\n                var browser = support.browser;\n                var ie11WidthCorrection = 0;\n                var docEl = document.documentElement;\n\n                if (browser.msie && browser.version == 11 && docEl.scrollHeight > docEl.clientHeight && !support.touch) {\n                    ie11WidthCorrection = support.scrollbar();\n                }\n\n                return support.touch ? (docEl.clientWidth / window.innerWidth) :\n                       browser.msie && browser.version >= 10 ? (((top || window).document.documentElement.offsetWidth + ie11WidthCorrection) / (top || window).innerWidth) : 1;\n            } catch (e) {\n                return 1;\n            }\n        };\n\n        (function(browser) {\n            // add browser-specific CSS class\n            var cssClass = \"\",\n                docElement = $(document.documentElement),\n                majorVersion = parseInt(browser.version, 10);\n\n            if (browser.msie) {\n                cssClass = \"ie\";\n            } else if (browser.mozilla) {\n                cssClass = \"ff\";\n            } else if (browser.safari) {\n                cssClass = \"safari\";\n            } else if (browser.webkit) {\n                cssClass = \"webkit\";\n            } else if (browser.opera) {\n                cssClass = \"opera\";\n            } else if (browser.edge) {\n                cssClass = \"edge\";\n            }\n\n            if (cssClass) {\n                cssClass = \"k-\" + cssClass + \" k-\" + cssClass + majorVersion;\n            }\n            if (support.mobileOS) {\n                cssClass += \" k-mobile\";\n            }\n\n            if (!support.cssFlexbox) {\n                cssClass += \" k-no-flexbox\";\n            }\n\n            docElement.addClass(cssClass);\n        })(support.browser);\n\n        support.eventCapture = document.documentElement.addEventListener;\n\n        var input = document.createElement(\"input\");\n\n        support.placeholder = \"placeholder\" in input;\n        support.propertyChangeEvent = \"onpropertychange\" in input;\n\n        support.input = (function() {\n            var types = [\"number\", \"date\", \"time\", \"month\", \"week\", \"datetime\", \"datetime-local\"];\n            var length = types.length;\n            var value = \"test\";\n            var result = {};\n            var idx = 0;\n            var type;\n\n            for (;idx < length; idx++) {\n                type = types[idx];\n                input.setAttribute(\"type\", type);\n                input.value = value;\n\n                result[type.replace(\"-\", \"\")] = input.type !== \"text\" && input.value !== value;\n            }\n\n            return result;\n        })();\n\n        input.style.cssText = \"float:left;\";\n\n        support.cssFloat = !!input.style.cssFloat;\n\n        input = null;\n\n        support.stableSort = (function() {\n            // Chrome sort is not stable for more than *10* items\n            // IE9+ sort is not stable for than *512* items\n            var threshold = 513;\n\n            var sorted = [{\n                index: 0,\n                field: \"b\"\n            }];\n\n            for (var i = 1; i < threshold; i++) {\n                sorted.push({\n                    index: i,\n                    field: \"a\"\n                });\n            }\n\n            sorted.sort(function(a, b) {\n                return a.field > b.field ? 1 : (a.field < b.field ? -1 : 0);\n            });\n\n            return sorted[0].index === 1;\n        })();\n\n        support.matchesSelector = elementProto.webkitMatchesSelector || elementProto.mozMatchesSelector ||\n                                  elementProto.msMatchesSelector || elementProto.oMatchesSelector ||\n                                  elementProto.matchesSelector || elementProto.matches ||\n          function( selector ) {\n              var nodeList = document.querySelectorAll ? ( this.parentNode || document ).querySelectorAll( selector ) || [] : $(selector),\n                  i = nodeList.length;\n\n              while (i--) {\n                  if (nodeList[i] == this) {\n                      return true;\n                  }\n              }\n\n              return false;\n          };\n\n        support.matchMedia = \"matchMedia\" in window;\n\n        support.pushState = window.history && window.history.pushState;\n\n        support.hashChange = \"onhashchange\" in window;\n\n        support.customElements = \"registerElement\" in window.document;\n\n        var chrome = support.browser.chrome,\n            mobileChrome = support.browser.crios,\n            mozilla = support.browser.mozilla,\n            safari = support.browser.safari;\n        support.msPointers = !chrome && window.MSPointerEvent;\n        support.pointers = !chrome && !mobileChrome && !mozilla && !safari && window.PointerEvent;\n        support.kineticScrollNeeded = mobileOS && (mobileOS.device !== \"ipad\" || mobileOS.majorVersion < 13) && (support.touch || support.msPointers || support.pointers);\n    })();\n\n\n    function size(obj) {\n        var result = 0, key;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key) && key != \"toJSON\") { // Ignore fake IE7 toJSON.\n                result++;\n            }\n        }\n\n        return result;\n    }\n\n    function getOffset(element, type, positioned) {\n        if (!type) {\n            type = \"offset\";\n        }\n\n        var offset = element[type]();\n        // clone ClientRect object to JS object (jQuery3)\n        var result = {\n            top: offset.top,\n            right: offset.right,\n            bottom: offset.bottom,\n            left: offset.left\n        };\n\n        // IE10 touch zoom is living in a separate viewport\n        if (support.browser.msie && (support.pointers || support.msPointers) && !positioned) {\n            var sign = support.isRtl(element) ? 1 : -1;\n\n            result.top -= (window.pageYOffset - (document.documentElement.scrollTop));\n            result.left -= (window.pageXOffset + (sign * document.documentElement.scrollLeft));\n        }\n\n        return result;\n    }\n\n    var directions = {\n        left: { reverse: \"right\" },\n        right: { reverse: \"left\" },\n        down: { reverse: \"up\" },\n        up: { reverse: \"down\" },\n        top: { reverse: \"bottom\" },\n        bottom: { reverse: \"top\" },\n        \"in\": { reverse: \"out\" },\n        out: { reverse: \"in\" }\n    };\n\n    function parseEffects(input) {\n        var effects = {};\n\n        each((typeof input === \"string\" ? input.split(\" \") : input), function(idx) {\n            effects[idx] = this;\n        });\n\n        return effects;\n    }\n\n    function fx(element) {\n        return new kendo.effects.Element(element);\n    }\n\n    var effects = {};\n\n    $.extend(effects, {\n        enabled: true,\n        Element: function(element) {\n            this.element = $(element);\n        },\n\n        promise: function(element, options) {\n            if (!element.is(\":visible\")) {\n                element.css({ display: element.data(\"olddisplay\") || \"block\" }).css(\"display\");\n            }\n\n            if (options.hide) {\n                element.data(\"olddisplay\", element.css(\"display\")).hide();\n            }\n\n            if (options.init) {\n                options.init();\n            }\n\n            if (options.completeCallback) {\n                options.completeCallback(element); // call the external complete callback with the element\n            }\n\n            element.dequeue();\n        },\n\n        disable: function() {\n            this.enabled = false;\n            this.promise = this.promiseShim;\n        },\n\n        enable: function() {\n            this.enabled = true;\n            this.promise = this.animatedPromise;\n        }\n    });\n\n    effects.promiseShim = effects.promise;\n\n    function prepareAnimationOptions(options, duration, reverse, complete) {\n        if (typeof options === STRING) {\n            // options is the list of effect names separated by space e.g. animate(element, \"fadeIn slideDown\")\n\n            // only callback is provided e.g. animate(element, options, function() {});\n            if (isFunction(duration)) {\n                complete = duration;\n                duration = 400;\n                reverse = false;\n            }\n\n            if (isFunction(reverse)) {\n                complete = reverse;\n                reverse = false;\n            }\n\n            if (typeof duration === BOOLEAN) {\n                reverse = duration;\n                duration = 400;\n            }\n\n            options = {\n                effects: options,\n                duration: duration,\n                reverse: reverse,\n                complete: complete\n            };\n        }\n\n        return extend({\n            //default options\n            effects: {},\n            duration: 400, //jQuery default duration\n            reverse: false,\n            init: noop,\n            teardown: noop,\n            hide: false\n        }, options, { completeCallback: options.complete, complete: noop }); // Move external complete callback, so deferred.resolve can be always executed.\n\n    }\n\n    function animate(element, options, duration, reverse, complete) {\n        var idx = 0,\n            length = element.length,\n            instance;\n\n        for (; idx < length; idx ++) {\n            instance = $(element[idx]);\n            instance.queue(function() {\n                effects.promise(instance, prepareAnimationOptions(options, duration, reverse, complete));\n            });\n        }\n\n        return element;\n    }\n\n    function toggleClass(element, classes, options, add) {\n        if (classes) {\n            classes = classes.split(\" \");\n\n            each(classes, function(idx, value) {\n                element.toggleClass(value, add);\n            });\n        }\n\n        return element;\n    }\n\n    if (!(\"kendoAnimate\" in $.fn)) {\n        extend($.fn, {\n            kendoStop: function(clearQueue, gotoEnd) {\n                return this.stop(clearQueue, gotoEnd);\n            },\n\n            kendoAnimate: function(options, duration, reverse, complete) {\n                return animate(this, options, duration, reverse, complete);\n            },\n\n            kendoAddClass: function(classes, options) {\n                return kendo.toggleClass(this, classes, options, true);\n            },\n\n            kendoRemoveClass: function(classes, options) {\n                return kendo.toggleClass(this, classes, options, false);\n            },\n            kendoToggleClass: function(classes, options, toggle) {\n                return kendo.toggleClass(this, classes, options, toggle);\n            }\n        });\n    }\n\n    var ampRegExp = /&/g,\n        ltRegExp = /</g,\n        quoteRegExp = /\"/g,\n        aposRegExp = /'/g,\n        gtRegExp = />/g;\n\n    function htmlDecode(value) {\n        var entities = {\n            '&amp;': '&',\n            '&lt;': '<',\n            '&gt;': '>',\n            '&quot;': '\"',\n            '&#39;': \"'\"\n        };\n\n        return value.replace(/&(?:amp|lt|gt|quot|#39);/g, function(match) {\n            return entities[match];\n        });\n    }\n\n    function htmlEncode(value, shouldDecode) {\n        if (shouldDecode === true) {\n            value = htmlDecode(value);\n        }\n\n        return (\"\" + value).replace(ampRegExp, \"&amp;\").replace(ltRegExp, \"&lt;\").replace(gtRegExp, \"&gt;\").replace(quoteRegExp, \"&quot;\").replace(aposRegExp, \"&#39;\");\n    }\n\n    function unescape(value) {\n        var template;\n\n        try {\n            template = window.decodeURIComponent(value);\n        } catch (error) {\n            // If the string contains Unicode characters\n            // the decodeURIComponent() will throw an error.\n            // Therefore: convert to UTF-8 character\n            template = value.replace(/%u([\\dA-F]{4})|%([\\dA-F]{2})/gi, function(_, m1, m2) {\n                return String.fromCharCode(parseInt(\"0x\" + (m1 || m2), 16));\n            });\n        }\n\n        return template;\n    }\n\n    var eventTarget = function(e) {\n        return e.target;\n    };\n\n    if (support.touch) {\n\n        eventTarget = function(e) {\n            var touches = \"originalEvent\" in e ? e.originalEvent.changedTouches : \"changedTouches\" in e ? e.changedTouches : null;\n\n            return touches ? document.elementFromPoint(touches[0].clientX, touches[0].clientY) : e.target;\n        };\n\n        each([\"swipe\", \"swipeLeft\", \"swipeRight\", \"swipeUp\", \"swipeDown\", \"doubleTap\", \"tap\"], function(m, value) {\n            $.fn[value] = function(callback) {\n                return this.on(value, callback);\n            };\n        });\n    }\n\n    if (support.touch) {\n        if (!support.mobileOS) {\n            support.mousedown = \"mousedown touchstart\";\n            support.mouseup = \"mouseup touchend\";\n            support.mousemove = \"mousemove touchmove\";\n            support.mousecancel = \"mouseleave touchcancel\";\n            support.click = \"click\";\n            support.resize = \"resize\";\n        } else {\n            support.mousedown = \"touchstart\";\n            support.mouseup = \"touchend\";\n            support.mousemove = \"touchmove\";\n            support.mousecancel = \"touchcancel\";\n            support.click = \"touchend\";\n            support.resize = \"orientationchange\";\n        }\n    } else if (support.pointers) {\n        support.mousemove = \"pointermove\";\n        support.mousedown = \"pointerdown\";\n        support.mouseup = \"pointerup\";\n        support.mousecancel = \"pointercancel\";\n        support.click = \"pointerup\";\n        support.resize = \"orientationchange resize\";\n    } else if (support.msPointers) {\n        support.mousemove = \"MSPointerMove\";\n        support.mousedown = \"MSPointerDown\";\n        support.mouseup = \"MSPointerUp\";\n        support.mousecancel = \"MSPointerCancel\";\n        support.click = \"MSPointerUp\";\n        support.resize = \"orientationchange resize\";\n    } else {\n        support.mousemove = \"mousemove\";\n        support.mousedown = \"mousedown\";\n        support.mouseup = \"mouseup\";\n        support.mousecancel = \"mouseleave\";\n        support.click = \"click\";\n        support.resize = \"resize\";\n    }\n\n    var wrapExpression = function(members, paramName) {\n        var result = paramName || \"d\",\n            index,\n            idx,\n            length,\n            member,\n            count = 1;\n\n        for (idx = 0, length = members.length; idx < length; idx++) {\n            member = members[idx];\n            if (member !== \"\") {\n                index = member.indexOf(\"[\");\n\n                if (index !== 0) {\n                    if (index == -1) {\n                        member = \".\" + member;\n                    } else {\n                        count++;\n                        member = \".\" + member.substring(0, index) + \" || {})\" + member.substring(index);\n                    }\n                }\n\n                count++;\n                result += member + ((idx < length - 1) ? \" || {})\" : \")\");\n            }\n        }\n        return new Array(count).join(\"(\") + result;\n    },\n    localUrlRe = /^([a-z]+:)?\\/\\//i;\n\n    extend(kendo, {\n        widgets: [],\n        _widgetRegisteredCallbacks: [],\n        ui: kendo.ui || {},\n        fx: kendo.fx || fx,\n        effects: kendo.effects || effects,\n        mobile: kendo.mobile || { },\n        data: kendo.data || {},\n        dataviz: kendo.dataviz || {},\n        drawing: kendo.drawing || {},\n        spreadsheet: { messages: {} },\n        keys: {\n            INSERT: 45,\n            DELETE: 46,\n            BACKSPACE: 8,\n            TAB: 9,\n            ENTER: 13,\n            ESC: 27,\n            LEFT: 37,\n            UP: 38,\n            RIGHT: 39,\n            DOWN: 40,\n            END: 35,\n            HOME: 36,\n            SPACEBAR: 32,\n            PAGEUP: 33,\n            PAGEDOWN: 34,\n            F2: 113,\n            F10: 121,\n            F12: 123,\n            NUMPAD_PLUS: 107,\n            NUMPAD_MINUS: 109,\n            NUMPAD_DOT: 110\n        },\n        support: kendo.support || support,\n        animate: kendo.animate || animate,\n        ns: \"\",\n        attr: function(value) {\n            return \"data-\" + kendo.ns + value;\n        },\n        getShadows: getShadows,\n        wrap: wrap,\n        deepExtend: deepExtend,\n        getComputedStyles: getComputedStyles,\n        isScrollable: isScrollable,\n        scrollLeft: scrollLeft,\n        size: size,\n        toCamelCase: toCamelCase,\n        toHyphens: toHyphens,\n        getOffset: kendo.getOffset || getOffset,\n        parseEffects: kendo.parseEffects || parseEffects,\n        toggleClass: kendo.toggleClass || toggleClass,\n        directions: kendo.directions || directions,\n        Observable: Observable,\n        Class: Class,\n        Template: Template,\n        template: Template.compile.bind(Template),\n        render: Template.render.bind(Template),\n        stringify: JSON.stringify.bind(JSON),\n        eventTarget: eventTarget,\n        htmlEncode: htmlEncode,\n        unescape: unescape,\n        isLocalUrl: function(url) {\n            return url && !localUrlRe.test(url);\n        },\n        mediaQuery: mediaQuery,\n\n        expr: function(expression, safe, paramName) {\n            expression = expression || \"\";\n\n            if (typeof safe == STRING) {\n                paramName = safe;\n                safe = false;\n            }\n\n            paramName = paramName || \"d\";\n\n            if (expression && expression.charAt(0) !== \"[\") {\n                expression = \".\" + expression;\n            }\n\n            if (safe) {\n                expression = expression.replace(/\"([^.]*)\\.([^\"]*)\"/g,'\"$1_$DOT$_$2\"');\n                expression = expression.replace(/'([^.]*)\\.([^']*)'/g,\"'$1_$DOT$_$2'\");\n                expression = wrapExpression(expression.split(\".\"), paramName);\n                expression = expression.replace(/_\\$DOT\\$_/g, \".\");\n            } else {\n                expression = paramName + expression;\n            }\n\n            return expression;\n        },\n\n        exprToArray: (expression, safe) => {\n            expression = expression || \"\";\n\n            return expression.indexOf(\".\") >= 0 || expression.indexOf(\"[\") >= 0 ?\n                expression.split(/[[\\].]/).map(v => v.replace(/[\"']/g, '')).filter(v => v) :\n                expression === \"\" ? [] : [expression];\n        },\n\n        getter: function(expression, safe) {\n            var key = expression + safe;\n\n            return getterCache[key] = getterCache[key] || ((obj) => {\n                const fields = kendo.exprToArray(expression, safe);\n\n                let result = obj;\n                for (let idx = 0; idx < fields.length; idx++) {\n                    result = result[fields[idx]];\n                    if (!kendo.isPresent(result) && safe) {\n                        return result;\n                    }\n                }\n\n                return result;\n            });\n        },\n\n        setter: function(expression) {\n            return setterCache[expression] = setterCache[expression] || ((obj, value) => {\n                const fields = kendo.exprToArray(expression);\n\n                const innerSetter = ({ parent, val, prop, props }) => {\n                    if (props.length) {\n                        parent = parent[props.shift()];\n                        innerSetter({ parent, val, prop, props });\n                    } else {\n                        parent[prop] = val;\n                    }\n                };\n\n                innerSetter({\n                    parent: obj,\n                    val: value,\n                    prop: fields.pop(),\n                    props: fields\n                });\n            });\n        },\n\n        accessor: function(expression) {\n            return {\n                get: kendo.getter(expression),\n                set: kendo.setter(expression)\n            };\n        },\n\n        guid: function() {\n            var id = \"\", i, random, chars = \"abcdef\";\n\n            id += chars[Math.floor(Math.random() * Math.floor(chars.length))];\n\n            for (i = 1; i < 32; i++) {\n                random = math.random() * 16 | 0;\n\n                if (i == 8 || i == 12 || i == 16 || i == 20) {\n                    id += \"-\";\n                }\n                id += (i == 12 ? 4 : (i == 16 ? (random & 3 | 8) : random)).toString(16);\n            }\n\n            return id;\n        },\n\n        roleSelector: function(role) {\n            return role.replace(/(\\S+)/g, \"[\" + kendo.attr(\"role\") + \"=$1],\").slice(0, -1);\n        },\n\n        directiveSelector: function(directives) {\n            var selectors = directives.split(\" \");\n\n            if (selectors) {\n                for (var i = 0; i < selectors.length; i++) {\n                    if (selectors[i] != \"view\") {\n                        selectors[i] = selectors[i].replace(/(\\w*)(view|bar|strip|over)$/, \"$1-$2\");\n                    }\n                }\n            }\n\n            return selectors.join(\" \").replace(/(\\S+)/g, \"kendo-mobile-$1,\").slice(0, -1);\n        },\n\n        triggeredByInput: function(e) {\n            return (/^(label|input|textarea|select)$/i).test(e.target.tagName);\n        },\n\n        onWidgetRegistered: function(callback) {\n            for (var i = 0, len = kendo.widgets.length; i < len; i++) {\n                callback(kendo.widgets[i]);\n            }\n\n            kendo._widgetRegisteredCallbacks.push(callback);\n        },\n\n        logToConsole: function(message, type) {\n            var console = window.console;\n\n            if (!kendo.suppressLog && typeof(console) != \"undefined\" && console.log) {\n                console[type || \"log\"](message);\n            }\n        }\n    });\n\n    var Widget = Observable.extend( {\n        init: function(element, options) {\n            var that = this;\n\n            if (!validatePackage()) {\n                that._showWatermarkOverlay = addWatermarkOverlay;\n            }\n\n            that.element = kendo.jQuery(element).handler(that);\n\n            Observable.fn.init.call(that);\n\n            var dataSource = options ? options.dataSource : null;\n            var props;\n\n            if (options) {\n                props = (that.componentTypes || {})[(options || {}).componentType];\n            }\n\n            if (dataSource) {\n                // avoid deep cloning the data source\n                options = extend({}, options, { dataSource: {} });\n            }\n\n            options = that.options = extend(true, {}, that.options, that.defaults, props || {}, options);\n\n            if (dataSource) {\n                options.dataSource = dataSource;\n            }\n\n            if (!that.element.attr(kendo.attr(\"role\"))) {\n                that.element.attr(kendo.attr(\"role\"), (options.name || \"\").toLowerCase());\n            }\n\n            that.element.data(\"kendo\" + options.prefix + options.name, that);\n\n            that.bind(that.events, options);\n        },\n\n        events: [],\n\n        options: {\n            prefix: \"\"\n        },\n\n        _hasBindingTarget: function() {\n            return !!this.element[0].kendoBindingTarget;\n        },\n\n        _tabindex: function(target) {\n            target = target || this.wrapper;\n\n            var element = this.element,\n                TABINDEX = \"tabindex\",\n                tabindex = target.attr(TABINDEX) || element.attr(TABINDEX);\n\n            element.removeAttr(TABINDEX);\n\n            target.attr(TABINDEX, !isNaN(tabindex) ? tabindex : 0);\n        },\n\n        setOptions: function(options) {\n            this._clearCssClasses(options);\n            this._setEvents(options);\n            $.extend(this.options, options);\n            this._applyCssClasses();\n        },\n\n        _setEvents: function(options) {\n            var that = this,\n                idx = 0,\n                length = that.events.length,\n                e;\n\n            for (; idx < length; idx ++) {\n                e = that.events[idx];\n                if (that.options[e] && options[e]) {\n                    that.unbind(e, that.options[e]);\n                    if (that._events && that._events[e]) {\n                        delete that._events[e];\n                    }\n                }\n            }\n\n            that.bind(that.events, options);\n        },\n\n        resize: function(force) {\n            var size = this.getSize(),\n                currentSize = this._size;\n\n            if (force || (size.width > 0 || size.height > 0) && (!currentSize || size.width !== currentSize.width || size.height !== currentSize.height)) {\n                this._size = size;\n                this._resize(size, force);\n                this.trigger(\"resize\", size);\n            }\n        },\n\n        getSize: function() {\n            return kendo.dimensions(this.element);\n        },\n\n        size: function(size) {\n            if (!size) {\n                return this.getSize();\n            } else {\n                this.setSize(size);\n            }\n        },\n\n        setSize: $.noop,\n        _resize: $.noop,\n\n        destroy: function() {\n            var that = this;\n\n            that.element.removeData(\"kendo\" + that.options.prefix + that.options.name);\n            that.element.removeData(\"handler\");\n            that.unbind();\n        },\n        _destroy: function() {\n            this.destroy();\n        },\n\n        _applyCssClasses: function(element) {\n            var protoOptions = this.__proto__.options,\n                options = this.options,\n                el = element || this.wrapper || this.element,\n                classes = [],\n                i, prop, validFill, widgetName;\n\n            if (!kendo.cssProperties.propertyDictionary[protoOptions.name]) {\n                return;\n            }\n\n            for (i = 0; i < cssPropertiesNames.length; i++) {\n                prop = cssPropertiesNames[i];\n                widgetName = this.options._altname || protoOptions.name;\n\n                if (protoOptions.hasOwnProperty(prop)) {\n                    if (prop === \"themeColor\") {\n                        validFill = kendo.cssProperties.getValidClass({\n                            widget: widgetName,\n                            propName: \"fillMode\",\n                            value: options.fillMode\n                        });\n\n                        if (validFill && validFill.length) {\n                            classes.push(kendo.cssProperties.getValidClass({\n                                widget: widgetName,\n                                propName: prop,\n                                value: options[prop],\n                                fill: options.fillMode\n                            }));\n                        }\n                    } else {\n                        classes.push(kendo.cssProperties.getValidClass({\n                            widget: widgetName,\n                            propName: prop,\n                            value: options[prop]\n                        }));\n                    }\n                }\n            }\n\n            el.addClass(classes.join(\" \"));\n        },\n\n        _ariaLabel: function(target) {\n            var that = this,\n                inputElm = that.element,\n                inputId = inputElm.attr(\"id\"),\n                labelElm = $(\"label[for=\\\"\" + inputId + \"\\\"]\"),\n                ariaLabel = inputElm.attr(ARIA_LABEL),\n                ariaLabelledBy = inputElm.attr(ARIA_LABELLEDBY),\n                labelId;\n\n            if (target[0] === inputElm[0]) {\n                return;\n            }\n\n            if (ariaLabel) {\n                target.attr(ARIA_LABEL, ariaLabel);\n            } else if (ariaLabelledBy) {\n                target.attr(ARIA_LABELLEDBY, ariaLabelledBy);\n            } else if (labelElm.length) {\n                labelId = labelElm.attr(\"id\") || that._generateLabelId(labelElm, inputId || kendo.guid());\n                target.attr(ARIA_LABELLEDBY, labelId);\n            }\n        },\n\n        _clearCssClasses: function(newOptions, element) {\n            var protoOptions = this.__proto__.options,\n                currentOptions = this.options,\n                el = element || this.wrapper || this.element,\n                i, prop, widgetName;\n\n            if (!kendo.cssProperties.propertyDictionary[protoOptions.name]) {\n                return;\n            }\n\n            for (i = 0; i < cssPropertiesNames.length; i++) {\n                prop = cssPropertiesNames[i];\n                widgetName = this.options._altname || protoOptions.name;\n\n                if (protoOptions.hasOwnProperty(prop) && newOptions.hasOwnProperty(prop)) {\n                    if (prop === \"themeColor\") {\n                        el.removeClass(kendo.cssProperties.getValidClass({\n                            widget: widgetName,\n                            propName: prop,\n                            value: currentOptions[prop],\n                            fill: currentOptions.fillMode\n                        }));\n                    } else {\n                        if (prop === \"fillMode\") {\n                            el.removeClass(kendo.cssProperties.getValidClass({\n                                widget: widgetName,\n                                propName: \"themeColor\",\n                                value: currentOptions.themeColor,\n                                fill: currentOptions.fillMode\n                            }));\n                        }\n\n                        el.removeClass(kendo.cssProperties.getValidClass({\n                            widget: widgetName,\n                            propName: prop,\n                            value: currentOptions[prop]\n                        }));\n                    }\n                }\n            }\n        },\n\n        _generateLabelId: function(label, inputId) {\n            var labelId = inputId + LABELIDPART;\n\n            label.attr(\"id\", labelId);\n\n            return labelId;\n        },\n    });\n\n    var DataBoundWidget = Widget.extend({\n        dataItems: function() {\n            return this.dataSource.flatView();\n        }\n    });\n\n    kendo.dimensions = function(element, dimensions) {\n        var domElement = element[0];\n\n        if (dimensions) {\n            element.css(dimensions);\n        }\n\n        return { width: domElement.offsetWidth, height: domElement.offsetHeight };\n    };\n\n    kendo.notify = noop;\n\n    var templateRegExp = /template$/i,\n        jsonRegExp = /^\\s*(?:\\{(?:.|\\r\\n|\\n)*\\}|\\[(?:.|\\r\\n|\\n)*\\])\\s*$/,\n        jsonFormatRegExp = /^\\{(\\d+)(:[^\\}]+)?\\}|^\\[[A-Za-z_]+\\]$/,\n        dashRegExp = /([A-Z])/g;\n\n    function parseOption(element, option) {\n        var value;\n\n        if (option.indexOf(\"data\") === 0) {\n            option = option.substring(4);\n            option = option.charAt(0).toLowerCase() + option.substring(1);\n        }\n\n        option = option.replace(dashRegExp, \"-$1\");\n        value = element.getAttribute(\"data-\" + kendo.ns + option);\n\n        if (value === null) {\n            value = undefined$1;\n        } else if (value === \"null\") {\n            value = null;\n        } else if (value === \"true\") {\n            value = true;\n        } else if (value === \"false\") {\n            value = false;\n        } else if (numberRegExp.test(value) && option != \"mask\" && option != \"format\") {\n            value = parseFloat(value);\n        } else if (jsonRegExp.test(value) && !jsonFormatRegExp.test(value)) {\n            try {\n                value = JSON.parse(value);\n            } catch (error) {\n                // Fallback to function eval for legacy reason - non CSP compliant\n                value = new Function(\"return (\" + value + \")\")();\n            }\n        }\n\n        return value;\n    }\n\n    function parseOptions(element, options, source) {\n        var result = {},\n            option,\n            value,\n            role = element.getAttribute(\"data-\" + kendo.ns + \"role\");\n\n        for (option in options) {\n            value = parseOption(element, option);\n\n            if (value !== undefined$1) {\n\n                if (templateRegExp.test(option) && role != \"drawer\") {\n                    if (typeof value === \"string\") {\n                        if ($(\"#\" + value).length) {\n                            value = kendo.template($(\"#\" + value).html());\n                        } else if (source) {\n                            value = kendo.template(source[value]);\n                        }\n                    } else {\n                        value = element.getAttribute(option);\n                    }\n                }\n\n                result[option] = value;\n            }\n        }\n\n        return result;\n    }\n\n    kendo.initWidget = function(element, options, roles) {\n        var result,\n            option,\n            widget,\n            idx,\n            length,\n            role,\n            value,\n            dataSource,\n            fullPath,\n            widgetKeyRegExp;\n\n        // Preserve backwards compatibility with (element, options, namespace) signature, where namespace was kendo.ui\n        if (!roles) {\n            roles = kendo.ui.roles;\n        } else if (roles.roles) {\n            roles = roles.roles;\n        }\n\n        element = element.nodeType ? element : element[0];\n\n        role = element.getAttribute(\"data-\" + kendo.ns + \"role\");\n\n        if (!role) {\n            return;\n        }\n\n        fullPath = role.indexOf(\".\") === -1;\n\n        // look for any widget that may be already instantiated based on this role.\n        // The prefix used is unknown, hence the regexp\n        //\n\n        if (fullPath) {\n            widget = roles[role];\n        } else { // full namespace path - like kendo.ui.Widget\n            widget = kendo.getter(role)(window);\n        }\n\n        var data = $(element).data(),\n            widgetKey = widget ? \"kendo\" + widget.fn.options.prefix + widget.fn.options.name : \"\";\n\n        if (fullPath) {\n            widgetKeyRegExp = new RegExp(\"^kendo.*\" + role + \"$\", \"i\");\n        } else { // full namespace path - like kendo.ui.Widget\n            widgetKeyRegExp = new RegExp(\"^\" + widgetKey + \"$\", \"i\");\n        }\n\n        for (var key in data) {\n            if (key.match(widgetKeyRegExp)) {\n                // we have detected a widget of the same kind - save its reference, we will set its options\n                if (key === widgetKey) {\n                    result = data[key];\n                } else {\n                    return data[key];\n                }\n            }\n        }\n\n        if (!widget) {\n            return;\n        }\n\n        dataSource = parseOption(element, \"dataSource\");\n\n        options = $.extend({}, parseOptions(element, $.extend({}, widget.fn.options, widget.fn.defaults) ), options);\n\n        if (dataSource) {\n            if (typeof dataSource === STRING) {\n                options.dataSource = kendo.getter(dataSource)(window);\n            } else {\n                options.dataSource = dataSource;\n            }\n        }\n\n        for (idx = 0, length = widget.fn.events.length; idx < length; idx++) {\n            option = widget.fn.events[idx];\n\n            value = parseOption(element, option);\n\n            if (value !== undefined$1) {\n                options[option] = kendo.getter(value)(window);\n            }\n        }\n\n        if (!result) {\n            result = new widget(element, options);\n        } else if (!$.isEmptyObject(options)) {\n            result.setOptions(options);\n        }\n\n        return result;\n    };\n\n    kendo.rolesFromNamespaces = function(namespaces) {\n        var roles = [],\n            idx,\n            length;\n\n        if (!namespaces[0]) {\n            namespaces = [kendo.ui, kendo.dataviz.ui];\n        }\n\n        for (idx = 0, length = namespaces.length; idx < length; idx ++) {\n            roles[idx] = namespaces[idx].roles;\n        }\n\n        return extend.apply(null, [{}].concat(roles.reverse()));\n    };\n\n    kendo.init = function(element) {\n        var roles = kendo.rolesFromNamespaces(slice.call(arguments, 1));\n\n        $(element).find(\"[data-\" + kendo.ns + \"role]\").addBack().each(function() {\n            kendo.initWidget(this, {}, roles);\n        });\n    };\n\n    kendo.destroy = function(element) {\n        $(element).find(\"[data-\" + kendo.ns + \"role]\").addBack().each(function() {\n            var data = $(this).data();\n\n            for (var key in data) {\n                if (key.indexOf(\"kendo\") === 0 && typeof data[key].destroy === FUNCTION) {\n                    data[key].destroy();\n                }\n            }\n        });\n    };\n\n    function containmentComparer(a, b) {\n        return $.contains(a, b) ? -1 : 1;\n    }\n\n    function resizableWidget() {\n        var widget = $(this);\n        return ($.inArray(widget.attr(\"data-\" + kendo.ns + \"role\"), [\"slider\", \"rangeslider\", \"breadcrumb\"]) > -1) || widget.is(\":visible\");\n    }\n\n    kendo.resize = function(element, force) {\n        var widgets = $(element).find(\"[data-\" + kendo.ns + \"role]\").addBack().filter(resizableWidget);\n\n        if (!widgets.length) {\n            return;\n        }\n\n        // sort widgets based on their parent-child relation\n        var widgetsArray = $.makeArray(widgets);\n        widgetsArray.sort(containmentComparer);\n\n        // resize widgets\n        $.each(widgetsArray, function() {\n            var widget = kendo.widgetInstance($(this));\n            if (widget) {\n                widget.resize(force);\n            }\n        });\n    };\n\n    kendo.parseOptions = parseOptions;\n\n    extend(kendo.ui, {\n        Widget: Widget,\n        DataBoundWidget: DataBoundWidget,\n        roles: {},\n        progress: function(container, toggle, options) {\n            var mask = container.find(\".k-loading-mask\"),\n                support = kendo.support,\n                browser = support.browser,\n                isRtl, leftRight, webkitCorrection, containerScrollLeft, cssClass;\n\n                options = $.extend({}, {\n                    width: \"100%\",\n                    height: \"100%\",\n                    top: container.scrollTop(),\n                    opacity: false\n                }, options);\n\n                cssClass = options.opacity ? 'k-loading-mask k-opaque' : 'k-loading-mask';\n\n            if (toggle) {\n                if (!mask.length) {\n                    isRtl = support.isRtl(container);\n                    leftRight = isRtl ? \"right\" : \"left\";\n                    containerScrollLeft = kendo.scrollLeft(container);\n                    webkitCorrection = browser.webkit ? (!isRtl ? 0 : container[0].scrollWidth - container.width() - 2 * containerScrollLeft) : 0;\n\n                    mask = $(kendo.format(\"<div class='{0}'><span role='alert' aria-live='polite' class='k-loading-text'>{1}</span><div class='k-loading-image'></div><div class='k-loading-color'></div></div>\", cssClass, kendo.ui.progress.messages.loading))\n                        .width(options.width).height(options.height)\n                        .css(\"top\", options.top)\n                        .css(leftRight, Math.abs(containerScrollLeft) + webkitCorrection)\n                        .prependTo(container);\n                }\n            } else if (mask) {\n                mask.remove();\n            }\n        },\n        plugin: function(widget, register, prefix) {\n            var name = widget.fn.options.name,\n                getter;\n\n            register = register || kendo.ui;\n            prefix = prefix || \"\";\n\n            register[name] = widget;\n\n            register.roles[name.toLowerCase()] = widget;\n\n            getter = \"getKendo\" + prefix + name;\n            name = \"kendo\" + prefix + name;\n\n            var widgetEntry = { name: name, widget: widget, prefix: prefix || \"\" };\n            kendo.widgets.push(widgetEntry);\n\n            for (var i = 0, len = kendo._widgetRegisteredCallbacks.length; i < len; i++) {\n                kendo._widgetRegisteredCallbacks[i](widgetEntry);\n            }\n\n            $.fn[name] = function(options) {\n                var value = this,\n                    args;\n\n                if (typeof options === STRING) {\n                    args = slice.call(arguments, 1);\n\n                    this.each(function() {\n                        var widget = $.data(this, name),\n                            method,\n                            result;\n\n                        if (!widget) {\n                            throw new Error(kendo.format(\"Cannot call method '{0}' of {1} before it is initialized\", options, name));\n                        }\n\n                        method = widget[options];\n\n                        if (typeof method !== FUNCTION) {\n                            throw new Error(kendo.format(\"Cannot find method '{0}' of {1}\", options, name));\n                        }\n\n                        result = method.apply(widget, args);\n\n                        if (result !== undefined$1) {\n                            value = result;\n                            return false;\n                        }\n                    });\n                } else {\n                    this.each(function() {\n                        return new widget(this, options);\n                    });\n                }\n\n                return value;\n            };\n\n            $.fn[name].widget = widget;\n\n            $.fn[getter] = function() {\n                return this.data(name);\n            };\n        }\n    });\n\n    kendo.ui.progress.messages = {\n        loading: \"Loading...\"\n    };\n\n    var ContainerNullObject = { bind: function() { return this; }, nullObject: true, options: {} };\n\n    var MobileWidget = Widget.extend({\n        init: function(element, options) {\n            Widget.fn.init.call(this, element, options);\n            this.element.autoApplyNS();\n            this.wrapper = this.element;\n            this.element.addClass(\"km-widget\");\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n            this.element.kendoDestroy();\n        },\n\n        options: {\n            prefix: \"Mobile\"\n        },\n\n        events: [],\n\n        view: function() {\n            var viewElement = this.element.closest(kendo.roleSelector(\"view splitview modalview drawer\"));\n            return kendo.widgetInstance(viewElement, kendo.mobile.ui) || ContainerNullObject;\n        },\n\n        viewHasNativeScrolling: function() {\n            var view = this.view();\n            return view && view.options.useNativeScrolling;\n        },\n\n        container: function() {\n            var element = this.element.closest(kendo.roleSelector(\"view layout modalview drawer splitview\"));\n            return kendo.widgetInstance(element.eq(0), kendo.mobile.ui) || ContainerNullObject;\n        }\n    });\n\n    extend(kendo.mobile, {\n        init: function(element) {\n            kendo.init(element, kendo.mobile.ui, kendo.ui, kendo.dataviz.ui);\n        },\n\n        roles: {},\n\n        ui: {\n            Widget: MobileWidget,\n            DataBoundWidget: DataBoundWidget.extend(MobileWidget.prototype),\n            roles: {},\n            plugin: function(widget) {\n                kendo.ui.plugin(widget, kendo.mobile.ui, \"Mobile\");\n            }\n        }\n    });\n\n    deepExtend(kendo.dataviz, {\n        init: function(element) {\n            kendo.init(element, kendo.dataviz.ui);\n        },\n        ui: {\n            roles: {},\n            themes: {},\n            views: [],\n            plugin: function(widget) {\n                kendo.ui.plugin(widget, kendo.dataviz.ui);\n            }\n        },\n        roles: {}\n    });\n\n    kendo.touchScroller = function(elements, options) {\n        // return the first touch scroller\n        if (!options) { options = {}; }\n\n        options.useNative = true;\n\n        return $(elements).map(function(idx, element) {\n            element = $(element);\n            if (support.kineticScrollNeeded && kendo.mobile.ui.Scroller && !element.data(\"kendoMobileScroller\")) {\n                element.kendoMobileScroller(options);\n                return element.data(\"kendoMobileScroller\");\n            } else {\n                return false;\n            }\n        })[0];\n    };\n\n    kendo.preventDefault = function(e) {\n        e.preventDefault();\n    };\n\n    kendo.widgetInstance = function(element, suites) {\n        var role = element.data(kendo.ns + \"role\"),\n            widgets = [], i, length,\n            elementData = element.data(\"kendoView\");\n\n        if (role) {\n            // HACK!!! mobile view scroller widgets are instantiated on data-role=\"content\" elements. We need to discover them when resizing.\n            if (role === \"content\") {\n                role = \"scroller\";\n            }\n\n            // kendo.View is not a ui plugin\n\n            if (role === \"view\" && elementData) {\n                return elementData;\n            }\n\n            if (suites) {\n                if (suites[0]) {\n                    for (i = 0, length = suites.length; i < length; i ++) {\n                        widgets.push(suites[i].roles[role]);\n                    }\n                } else {\n                    widgets.push(suites.roles[role]);\n                }\n            }\n            else {\n                widgets = [ kendo.ui.roles[role], kendo.dataviz.ui.roles[role], kendo.mobile.ui.roles[role] ];\n            }\n\n            if (role.indexOf(\".\") >= 0) {\n                widgets = [ kendo.getter(role)(window) ];\n            }\n\n            for (i = 0, length = widgets.length; i < length; i ++) {\n                var widget = widgets[i];\n                if (widget) {\n                    var instance = element.data(\"kendo\" + widget.fn.options.prefix + widget.fn.options.name);\n                    if (instance) {\n                        return instance;\n                    }\n                }\n            }\n        }\n    };\n\n    kendo.onResize = function(callback) {\n        var handler = callback;\n        if (support.mobileOS.android) {\n            handler = function() { setTimeout(callback, 600); };\n        }\n\n        $(window).on(support.resize, handler);\n        return handler;\n    };\n\n    kendo.unbindResize = function(callback) {\n        $(window).off(support.resize, callback);\n    };\n\n    kendo.attrValue = function(element, key) {\n        return element.data(kendo.ns + key);\n    };\n\n    kendo.days = {\n        Sunday: 0,\n        Monday: 1,\n        Tuesday: 2,\n        Wednesday: 3,\n        Thursday: 4,\n        Friday: 5,\n        Saturday: 6\n    };\n\n    function focusable(element, isTabIndexNotNaN) {\n        var nodeName = element.nodeName.toLowerCase();\n\n        return (/input|select|textarea|button|object/.test(nodeName) ?\n                !element.disabled :\n                nodeName === \"a\" ?\n                element.href || isTabIndexNotNaN :\n                isTabIndexNotNaN\n               ) &&\n            visible(element);\n    }\n\n    function visible(element) {\n        return $.expr.pseudos.visible(element) &&\n            !$(element).parents().addBack().filter(function() {\n                return $.css(this,\"visibility\") === \"hidden\";\n            }).length;\n    }\n\n    $.extend($.expr.pseudos, {\n        kendoFocusable: function(element) {\n            var idx = $.attr(element, \"tabindex\");\n            return focusable(element, !isNaN(idx) && idx > -1);\n        }\n    });\n\n    var MOUSE_EVENTS = [\"mousedown\", \"mousemove\", \"mouseenter\", \"mouseleave\", \"mouseover\", \"mouseout\", \"mouseup\", \"click\"];\n    var EXCLUDE_BUST_CLICK_SELECTOR = \"label, input, [data-rel=external]\";\n\n    var MouseEventNormalizer = {\n        setupMouseMute: function() {\n            var idx = 0,\n                length = MOUSE_EVENTS.length,\n                element = document.documentElement;\n\n            if (MouseEventNormalizer.mouseTrap || !support.eventCapture) {\n                return;\n            }\n\n            MouseEventNormalizer.mouseTrap = true;\n\n            MouseEventNormalizer.bustClick = false;\n            MouseEventNormalizer.captureMouse = false;\n\n            var handler = function(e) {\n                if (MouseEventNormalizer.captureMouse) {\n                    if (e.type === \"click\") {\n                        if (MouseEventNormalizer.bustClick && !$(e.target).is(EXCLUDE_BUST_CLICK_SELECTOR)) {\n                            e.preventDefault();\n                            e.stopPropagation();\n                        }\n                    } else {\n                        e.stopPropagation();\n                    }\n                }\n            };\n\n            for (; idx < length; idx++) {\n                element.addEventListener(MOUSE_EVENTS[idx], handler, true);\n            }\n        },\n\n        muteMouse: function(e) {\n            MouseEventNormalizer.captureMouse = true;\n            if (e.data.bustClick) {\n                MouseEventNormalizer.bustClick = true;\n            }\n            clearTimeout(MouseEventNormalizer.mouseTrapTimeoutID);\n        },\n\n        unMuteMouse: function() {\n            clearTimeout(MouseEventNormalizer.mouseTrapTimeoutID);\n            MouseEventNormalizer.mouseTrapTimeoutID = setTimeout(function() {\n                MouseEventNormalizer.captureMouse = false;\n                MouseEventNormalizer.bustClick = false;\n            }, 400);\n        }\n    };\n\n    var eventMap = {\n        down: \"touchstart mousedown\",\n        move: \"mousemove touchmove\",\n        up: \"mouseup touchend touchcancel\",\n        cancel: \"mouseleave touchcancel\"\n    };\n\n    if (support.touch && (support.mobileOS.ios || support.mobileOS.android)) {\n        eventMap = {\n            down: \"touchstart\",\n            move: \"touchmove\",\n            up: \"touchend touchcancel\",\n            cancel: \"touchcancel\"\n        };\n    } else if (support.pointers) {\n        eventMap = {\n            down: \"pointerdown\",\n            move: \"pointermove\",\n            up: \"pointerup\",\n            cancel: \"pointercancel pointerleave\"\n        };\n    } else if (support.msPointers) {\n        eventMap = {\n            down: \"MSPointerDown\",\n            move: \"MSPointerMove\",\n            up: \"MSPointerUp\",\n            cancel: \"MSPointerCancel MSPointerLeave\"\n        };\n    }\n\n    if (support.msPointers && !(\"onmspointerenter\" in window)) { // IE10\n        // Create MSPointerEnter/MSPointerLeave events using mouseover/out and event-time checks\n        $.each({\n            MSPointerEnter: \"MSPointerOver\",\n            MSPointerLeave: \"MSPointerOut\"\n        }, function( orig, fix ) {\n            $.event.special[ orig ] = {\n                delegateType: fix,\n                bindType: fix,\n\n                handle: function( event ) {\n                    var ret,\n                        target = this,\n                        related = event.relatedTarget,\n                        handleObj = event.handleObj;\n\n                    // For mousenter/leave call the handler if related is outside the target.\n                    // NB: No relatedTarget if the mouse left/entered the browser window\n                    if ( !related || (related !== target && !$.contains( target, related )) ) {\n                        event.type = handleObj.origType;\n                        ret = handleObj.handler.apply( this, arguments );\n                        event.type = fix;\n                    }\n                    return ret;\n                }\n            };\n        });\n    }\n\n\n    var getEventMap = function(e) { return (eventMap[e] || e); },\n        eventRegEx = /([^ ]+)/g;\n\n    kendo.applyEventMap = function(events, ns) {\n        events = events.replace(eventRegEx, getEventMap);\n\n        if (ns) {\n            events = events.replace(eventRegEx, \"$1.\" + ns);\n        }\n\n        return events;\n    };\n\n    kendo.keyDownHandler = function(e, widget) {\n        var events = widget._events.kendoKeydown;\n\n        if (!events) {\n            return true;\n        }\n\n        events = events.slice();\n        e.sender = widget;\n        e.preventKendoKeydown = false;\n        for (var idx = 0, length = events.length; idx < length; idx++) {\n            events[idx].call(widget, e);\n        }\n\n        return !e.preventKendoKeydown;\n    };\n\n    var on = $.fn.on;\n\n    function kendoJQuery(selector, context) {\n        return new kendoJQuery.fn.init(selector, context);\n    }\n\n    noDepricateExtend(true, kendoJQuery, $);\n\n    kendoJQuery.fn = kendoJQuery.prototype = new $();\n\n    kendoJQuery.fn.constructor = kendoJQuery;\n\n    kendoJQuery.fn.init = function(selector, context) {\n        if (context && context instanceof $ && !(context instanceof kendoJQuery)) {\n            context = kendoJQuery(context);\n        }\n\n        return $.fn.init.call(this, selector, context, rootjQuery);\n    };\n\n    kendoJQuery.fn.init.prototype = kendoJQuery.fn;\n\n    var rootjQuery = kendoJQuery(document);\n\n    extend(kendoJQuery.fn, {\n        handler: function(handler) {\n            this.data(\"handler\", handler);\n            return this;\n        },\n\n        autoApplyNS: function(ns) {\n            this.data(\"kendoNS\", ns || kendo.guid());\n            return this;\n        },\n\n        on: function() {\n            var that = this,\n                ns = that.data(\"kendoNS\");\n\n            // support for event map signature\n            if (arguments.length === 1) {\n                return on.call(that, arguments[0]);\n            }\n\n            var context = that,\n                args = slice.call(arguments);\n\n            if (typeof args[args.length - 1] === UNDEFINED) {\n                args.pop();\n            }\n\n            var callback = args[args.length - 1],\n                events = kendo.applyEventMap(args[0], ns);\n\n            // setup mouse trap\n            if (support.mouseAndTouchPresent && events.search(/mouse|click/) > -1 && this[0] !== document.documentElement) {\n                MouseEventNormalizer.setupMouseMute();\n\n                var selector = args.length === 2 ? null : args[1],\n                    bustClick = events.indexOf(\"click\") > -1 && events.indexOf(\"touchend\") > -1;\n\n                on.call(this,\n                    {\n                        touchstart: MouseEventNormalizer.muteMouse,\n                        touchend: MouseEventNormalizer.unMuteMouse\n                    },\n                    selector,\n                    {\n                        bustClick: bustClick\n                    });\n            }\n\n            if (arguments[0].indexOf(\"keydown\") !== -1 && args[1] && args[1].options) {\n                args[0] = events;\n                var widget = args[1];\n                var keyDownCallBack = args[args.length - 1];\n                args[args.length - 1] = function(e) {\n                    if (kendo.keyDownHandler(e, widget)) {\n                       return keyDownCallBack.apply(this, [e]);\n                    }\n                };\n                on.apply(that, args);\n                return that;\n            }\n\n            if (typeof callback === STRING) {\n                context = that.data(\"handler\");\n                callback = context[callback];\n\n                args[args.length - 1] = function(e) {\n                    callback.call(context, e);\n                };\n            }\n\n            args[0] = events;\n\n            on.apply(that, args);\n\n            return that;\n        },\n\n        kendoDestroy: function(ns) {\n            ns = ns || this.data(\"kendoNS\");\n\n            if (ns) {\n                this.off(\".\" + ns);\n            }\n\n            return this;\n        }\n    });\n\n    kendo.jQuery = kendoJQuery;\n    kendo.eventMap = eventMap;\n\n    kendo.timezone = (function() {\n        var months = { Jan: 0, Feb: 1, Mar: 2, Apr: 3, May: 4, Jun: 5, Jul: 6, Aug: 7, Sep: 8, Oct: 9, Nov: 10, Dec: 11 };\n        var days = { Sun: 0, Mon: 1, Tue: 2, Wed: 3, Thu: 4, Fri: 5, Sat: 6 };\n\n        function ruleToDate(year, rule) {\n            var date;\n            var targetDay;\n            var ourDay;\n            var month = rule[3];\n            var on = rule[4];\n            var time = rule[5];\n            var cache = rule[8];\n\n            if (!cache) {\n                rule[8] = cache = {};\n            }\n\n            if (cache[year]) {\n                return cache[year];\n            }\n\n            if (!isNaN(on)) {\n                date = new Date(Date.UTC(year, months[month], on, time[0], time[1], time[2], 0));\n            } else if (on.indexOf(\"last\") === 0) {\n                date = new Date(Date.UTC(year, months[month] + 1, 1, time[0] - 24, time[1], time[2], 0));\n\n                targetDay = days[on.substr(4, 3)];\n                ourDay = date.getUTCDay();\n\n                date.setUTCDate(date.getUTCDate() + targetDay - ourDay - (targetDay > ourDay ? 7 : 0));\n            } else if (on.indexOf(\">=\") >= 0) {\n                date = new Date(Date.UTC(year, months[month], on.substr(5), time[0], time[1], time[2], 0));\n\n                targetDay = days[on.substr(0, 3)];\n                ourDay = date.getUTCDay();\n\n                date.setUTCDate(date.getUTCDate() + targetDay - ourDay + (targetDay < ourDay ? 7 : 0));\n            } else if (on.indexOf(\"<=\") >= 0) {\n                date = new Date(Date.UTC(year, months[month], on.substr(5), time[0], time[1], time[2], 0));\n\n                targetDay = days[on.substr(0, 3)];\n                ourDay = date.getUTCDay();\n\n                date.setUTCDate(date.getUTCDate() + targetDay - ourDay - (targetDay > ourDay ? 7 : 0));\n            }\n\n            return cache[year] = date;\n        }\n\n        function findRule(utcTime, rules, zone) {\n            rules = rules[zone];\n\n            if (!rules) {\n                var time = zone.split(\":\");\n                var offset = 0;\n\n                if (time.length > 1) {\n                    offset = time[0] * 60 + Number(time[1]);\n                }\n\n                return [-1000000, 'max', '-', 'Jan', 1, [0, 0, 0], offset, '-'];\n            }\n\n            var year = new Date(utcTime).getUTCFullYear();\n\n            rules = jquery__WEBPACK_IMPORTED_MODULE_0___default().grep(rules, function(rule) {\n                var from = rule[0];\n                var to = rule[1];\n\n                return from <= year && (to >= year || (from == year && to == \"only\") || to == \"max\");\n            });\n\n            rules.push(utcTime);\n\n            rules.sort(function(a, b) {\n                if (typeof a != \"number\") {\n                    a = Number(ruleToDate(year, a));\n                }\n\n                if (typeof b != \"number\") {\n                    b = Number(ruleToDate(year, b));\n                }\n\n                return a - b;\n            });\n\n            var rule = rules[jquery__WEBPACK_IMPORTED_MODULE_0___default().inArray(utcTime, rules) - 1] || rules[rules.length - 1];\n\n            return isNaN(rule) ? rule : null;\n        }\n\n        function findZone(utcTime, zones, timezone) {\n            var zoneRules = zones[timezone];\n\n            if (typeof zoneRules === \"string\") {\n                zoneRules = zones[zoneRules];\n            }\n\n            if (!zoneRules) {\n                throw new Error('Timezone \"' + timezone + '\" is either incorrect, or kendo.timezones.min.js is not included.');\n            }\n\n            for (var idx = zoneRules.length - 1; idx >= 0; idx--) {\n                var until = zoneRules[idx][3];\n\n                if (until && utcTime > until) {\n                    break;\n                }\n            }\n\n            var zone = zoneRules[idx + 1];\n\n            if (!zone) {\n                throw new Error('Timezone \"' + timezone + '\" not found on ' + utcTime + \".\");\n            }\n\n            return zone;\n        }\n\n        function zoneAndRule(utcTime, zones, rules, timezone) {\n            if (typeof utcTime != NUMBER) {\n                utcTime = Date.UTC(utcTime.getFullYear(), utcTime.getMonth(),\n                    utcTime.getDate(), utcTime.getHours(), utcTime.getMinutes(),\n                    utcTime.getSeconds(), utcTime.getMilliseconds());\n            }\n\n            var zone = findZone(utcTime, zones, timezone);\n\n            return {\n                zone: zone,\n                rule: findRule(utcTime, rules, zone[1])\n            };\n        }\n\n        function offset(utcTime, timezone) {\n            if (timezone == \"Etc/UTC\" || timezone == \"Etc/GMT\") {\n                return 0;\n            }\n\n            var info = zoneAndRule(utcTime, this.zones, this.rules, timezone);\n            var zone = info.zone;\n            var rule = info.rule;\n\n            return kendo.parseFloat(rule ? zone[0] - rule[6] : zone[0]);\n        }\n\n        function abbr(utcTime, timezone) {\n            var info = zoneAndRule(utcTime, this.zones, this.rules, timezone);\n            var zone = info.zone;\n            var rule = info.rule;\n\n            var base = zone[2];\n\n            if (base.indexOf(\"/\") >= 0) {\n                return base.split(\"/\")[rule && +rule[6] ? 1 : 0];\n            } else if (base.indexOf(\"%s\") >= 0) {\n                return base.replace(\"%s\", (!rule || rule[7] == \"-\") ? '' : rule[7]);\n            }\n\n            return base;\n        }\n\n        function convert(date, fromOffset, toOffset) {\n            var tempToOffset = toOffset;\n            var diff;\n\n            if (typeof fromOffset == STRING) {\n                fromOffset = this.offset(date, fromOffset);\n            }\n\n            if (typeof toOffset == STRING) {\n                toOffset = this.offset(date, toOffset);\n            }\n\n            var fromLocalOffset = date.getTimezoneOffset();\n\n            date = new Date(date.getTime() + (fromOffset - toOffset) * 60000);\n\n            var toLocalOffset = date.getTimezoneOffset();\n\n            if (typeof tempToOffset == STRING) {\n                tempToOffset = this.offset(date, tempToOffset);\n            }\n\n            diff = (toLocalOffset - fromLocalOffset) + (toOffset - tempToOffset);\n\n            return new Date(date.getTime() + diff * 60000);\n        }\n\n        function apply(date, timezone) {\n           return this.convert(date, date.getTimezoneOffset(), timezone);\n        }\n\n        function remove(date, timezone) {\n           return this.convert(date, timezone, date.getTimezoneOffset());\n        }\n\n        function toLocalDate(time) {\n            return this.apply(new Date(time), \"Etc/UTC\");\n        }\n\n        return {\n           zones: {},\n           rules: {},\n           offset: offset,\n           convert: convert,\n           apply: apply,\n           remove: remove,\n           abbr: abbr,\n           toLocalDate: toLocalDate\n        };\n    })();\n\n    kendo.date = (function() {\n        var MS_PER_MINUTE = 60000,\n            MS_PER_DAY = 86400000;\n\n        function adjustDST(date, hours) {\n            if (hours === 0 && date.getHours() === 23) {\n                date.setHours(date.getHours() + 2);\n                return true;\n            }\n\n            return false;\n        }\n\n        function setDayOfWeek(date, day, dir) {\n            var hours = date.getHours();\n\n            dir = dir || 1;\n            day = ((day - date.getDay()) + (7 * dir)) % 7;\n\n            date.setDate(date.getDate() + day);\n            adjustDST(date, hours);\n        }\n\n        function dayOfWeek(date, day, dir) {\n            date = new Date(date);\n            setDayOfWeek(date, day, dir);\n            return date;\n        }\n\n        function firstDayOfMonth(date) {\n            return new Date(\n                date.getFullYear(),\n                date.getMonth(),\n                1\n            );\n        }\n\n        function lastDayOfMonth(date) {\n            var last = new Date(date.getFullYear(), date.getMonth() + 1, 0),\n                first = firstDayOfMonth(date),\n                timeOffset = Math.abs(last.getTimezoneOffset() - first.getTimezoneOffset());\n\n            if (timeOffset) {\n                last.setHours(first.getHours() + (timeOffset / 60));\n            }\n\n            return last;\n        }\n\n        function firstDayOfYear(date) {\n            return new Date(date.getFullYear(), 0, 1);\n        }\n\n        function lastDayOfYear(date) {\n            return new Date(date.getFullYear(), 11, 31);\n        }\n\n        function moveDateToWeekStart(date, weekStartDay) {\n            if (weekStartDay !== 1) {\n                return addDays(dayOfWeek(date, weekStartDay, -1), 4);\n            }\n\n            return addDays(date, (4 - (date.getDay() || 7)));\n        }\n\n        function calcWeekInYear(date, weekStartDay) {\n            var firstWeekInYear = new Date(date.getFullYear(), 0, 1, -6);\n\n            var newDate = moveDateToWeekStart(date, weekStartDay);\n\n            var diffInMS = newDate.getTime() - firstWeekInYear.getTime();\n\n            var days = Math.floor(diffInMS / MS_PER_DAY);\n\n            return 1 + Math.floor(days / 7);\n        }\n\n        function weekInYear(date, weekStartDay) {\n            if (weekStartDay === undefined$1) {\n                weekStartDay = kendo.culture().calendar.firstDay;\n            }\n\n            var prevWeekDate = addDays(date, -7);\n            var nextWeekDate = addDays(date, 7);\n\n            var weekNumber = calcWeekInYear(date, weekStartDay);\n\n            if (weekNumber === 0) {\n                return calcWeekInYear(prevWeekDate, weekStartDay) + 1;\n            }\n\n            if (weekNumber === 53 && calcWeekInYear(nextWeekDate, weekStartDay) > 1) {\n                return 1;\n            }\n\n            return weekNumber;\n        }\n\n        function getDate(date) {\n            date = new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0);\n            adjustDST(date, 0);\n            return date;\n        }\n\n        function toUtcTime(date) {\n            return Date.UTC(date.getFullYear(), date.getMonth(),\n                        date.getDate(), date.getHours(), date.getMinutes(),\n                        date.getSeconds(), date.getMilliseconds());\n        }\n\n        function getMilliseconds(date) {\n            return toInvariantTime(date).getTime() - getDate(toInvariantTime(date));\n        }\n\n        function isInTimeRange(value, min, max) {\n            var msMin = getMilliseconds(min),\n                msMax = getMilliseconds(max),\n                msValue;\n\n            if (!value || msMin == msMax) {\n                return true;\n            }\n\n            if (min >= max) {\n                max += MS_PER_DAY;\n            }\n\n            msValue = getMilliseconds(value);\n\n            if (msMin > msValue) {\n                msValue += MS_PER_DAY;\n            }\n\n            if (msMax < msMin) {\n                msMax += MS_PER_DAY;\n            }\n\n            return msValue >= msMin && msValue <= msMax;\n        }\n\n        function isInDateRange(value, min, max) {\n            var msMin = min.getTime(),\n                msMax = max.getTime(),\n                msValue;\n\n            if (msMin >= msMax) {\n                msMax += MS_PER_DAY;\n            }\n\n            msValue = value.getTime();\n\n            return msValue >= msMin && msValue <= msMax;\n        }\n\n        function addDays(date, offset) {\n            var hours = date.getHours();\n                date = new Date(date);\n\n            setTime(date, offset * MS_PER_DAY);\n            adjustDST(date, hours);\n            return date;\n        }\n\n        function setTime(date, milliseconds, ignoreDST) {\n            var offset = date.getTimezoneOffset();\n            var difference;\n\n            date.setTime(date.getTime() + milliseconds);\n\n            if (!ignoreDST) {\n                difference = date.getTimezoneOffset() - offset;\n                date.setTime(date.getTime() + difference * MS_PER_MINUTE);\n            }\n        }\n\n        function setHours(date, time) {\n            date = new Date(date.getFullYear(), date.getMonth(), date.getDate(), time.getHours(), time.getMinutes(), time.getSeconds(), time.getMilliseconds());\n            adjustDST(date, time.getHours());\n            return date;\n        }\n\n        function today() {\n            return getDate(new Date());\n        }\n\n        function isToday(date) {\n           return getDate(date).getTime() == today().getTime();\n        }\n\n        function toInvariantTime(date) {\n            var staticDate = new Date(1980, 1, 1, 0, 0, 0);\n\n            if (date) {\n                staticDate.setHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n            }\n\n            return staticDate;\n        }\n\n        function addYear(date, offset) {\n            var currentDate = new Date(date);\n\n            return new Date(currentDate.setFullYear(currentDate.getFullYear() + offset));\n        }\n\n        function addLiteral(parts, value) {\n            var lastPart = parts[parts.length - 1];\n            if (lastPart && lastPart.type === \"LITERAL\") {\n                lastPart.pattern += value;\n            } else {\n                parts.push({\n                    type: \"literal\",\n                    pattern: value\n                });\n            }\n        }\n\n        function isHour12(pattern) {\n            return pattern === \"h\" || pattern === \"K\";\n        }\n\n        function dateNameType(formatLength) {\n            var nameType;\n            if (formatLength <= 3) {\n                nameType = \"abbreviated\";\n            } else if (formatLength === 4) {\n                nameType = \"wide\";\n            } else if (formatLength === 5) {\n                nameType = \"narrow\";\n            }\n\n            return nameType;\n        }\n\n        function startsWith(text, searchString, position) {\n            position = position || 0;\n            return text.indexOf(searchString, position) === position;\n        }\n\n        function datePattern(format, info) {\n            var calendar = info.calendar;\n            var result;\n            if (typeof format === \"string\") {\n                if (calendar.patterns[format]) {\n                    result = calendar.patterns[format];\n                } else {\n                    result = format;\n                }\n            }\n\n            if (!result) {\n                result = calendar.patterns.d;\n            }\n\n            return result;\n        }\n\n        function splitDateFormat(format) {\n            var info = kendo.culture();\n            var pattern = datePattern(format, info).replaceAll(\"dddd\", \"EEEE\").replaceAll(\"ddd\", \"EEE\").replace(\"tt\", \"aa\");\n            var parts = [];\n            var dateFormatRegExp = /d{1,2}|E{1,6}|e{1,6}|c{3,6}|c{1}|M{1,5}|L{1,5}|y{1,4}|H{1,2}|h{1,2}|k{1,2}|K{1,2}|m{1,2}|a{1,5}|s{1,2}|S{1,3}|t{1,2}|z{1,4}|Z{1,5}|x{1,5}|X{1,5}|G{1,5}|q{1,5}|Q{1,5}|\"[^\"]*\"|'[^']*'/g;\n\n            var lastIndex = dateFormatRegExp.lastIndex = 0;\n            var match = dateFormatRegExp.exec(pattern);\n            var specifier;\n            var type;\n            var part;\n            var names;\n            var minLength;\n            var patternLength;\n\n            while (match) {\n                var value = match[0];\n\n                if (lastIndex < match.index) {\n                    addLiteral(parts, pattern.substring(lastIndex, match.index));\n                }\n\n                if (startsWith(value, '\"') || startsWith(value, \"'\")) {\n                    addLiteral(parts, value);\n                } else {\n                    specifier = value[0];\n                    type = DATE_FIELD_MAP[specifier];\n                    part = {\n                        type: type,\n                        pattern: value\n                    };\n\n                    if (type === \"hour\") {\n                        part.hour12 = isHour12(value);\n                    }\n\n                    names = NAME_TYPES[type];\n\n                    if (names) {\n                        minLength = typeof names.minLength === \"number\" ? names.minLength : names.minLength[specifier];\n                        patternLength = value.length;\n\n                        if (patternLength >= minLength && value !== \"aa\") {\n                            part.names = {\n                                type: names.type,\n                                nameType: dateNameType(patternLength),\n                                standAlone: names.standAlone === specifier\n                            };\n                        }\n                    }\n\n                    parts.push(part);\n                }\n\n                lastIndex = dateFormatRegExp.lastIndex;\n                match = dateFormatRegExp.exec(pattern);\n            }\n\n            if (lastIndex < pattern.length) {\n                addLiteral(parts, pattern.substring(lastIndex));\n            }\n\n            return parts;\n        }\n\n        function dateFormatNames(options) {\n            let { type, nameType } = options;\n            const info = kendo.culture();\n            if (nameType === \"wide\") {\n                nameType = \"names\";\n            }\n            if (nameType === \"abbreviated\") {\n                nameType = \"namesAbbr\";\n            }\n            if (nameType === \"narrow\") {\n                nameType = \"namesShort\";\n            }\n            let result = info.calendar[type][nameType];\n            if (!result) {\n                result = info.calendar[type][\"name\"];\n            }\n            return result;\n        }\n\n        function dateFieldName(options) {\n            const info = kendo.culture();\n            const dateFields = info.calendar.dateFields;\n            const fieldNameInfo = dateFields[options.type] || {};\n\n            return fieldNameInfo[options.nameType];\n        }\n\n        return {\n            adjustDST: adjustDST,\n            dayOfWeek: dayOfWeek,\n            setDayOfWeek: setDayOfWeek,\n            getDate: getDate,\n            isInDateRange: isInDateRange,\n            isInTimeRange: isInTimeRange,\n            isToday: isToday,\n            nextDay: function(date) {\n                return addDays(date, 1);\n            },\n            previousDay: function(date) {\n                return addDays(date, -1);\n            },\n            toUtcTime: toUtcTime,\n            MS_PER_DAY: MS_PER_DAY,\n            MS_PER_HOUR: 60 * MS_PER_MINUTE,\n            MS_PER_MINUTE: MS_PER_MINUTE,\n            setTime: setTime,\n            setHours: setHours,\n            addDays: addDays,\n            today: today,\n            toInvariantTime: toInvariantTime,\n            firstDayOfMonth: firstDayOfMonth,\n            splitDateFormat: splitDateFormat,\n            dateFieldName: dateFieldName,\n            dateFormatNames: dateFormatNames,\n            lastDayOfMonth: lastDayOfMonth,\n            weekInYear: weekInYear,\n            getMilliseconds: getMilliseconds,\n            firstDayOfYear: firstDayOfYear,\n            lastDayOfYear: lastDayOfYear,\n            nextYear: function(date) {\n                return addYear(date, 1);\n            },\n            previousYear: function(date) {\n                return addYear(date, -1);\n            }\n        };\n    })();\n\n\n    kendo.stripWhitespace = function(element) {\n        if (document.createNodeIterator) {\n            var iterator = document.createNodeIterator(element, NodeFilter.SHOW_TEXT, function(node) {\n                    return node.parentNode == element ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_REJECT;\n                }, false);\n\n            while (iterator.nextNode()) {\n                if (iterator.referenceNode && !iterator.referenceNode.textContent.trim()) {\n                    iterator.referenceNode.parentNode.removeChild(iterator.referenceNode);\n                }\n            }\n        } else { // IE7/8 support\n            for (var i = 0; i < element.childNodes.length; i++) {\n                var child = element.childNodes[i];\n\n                if (child.nodeType == 3 && !/\\S/.test(child.nodeValue)) {\n                    element.removeChild(child);\n                    i--;\n                }\n\n                if (child.nodeType == 1) {\n                    kendo.stripWhitespace(child);\n                }\n            }\n        }\n    };\n\n    var animationFrame = window.requestAnimationFrame ||\n                          window.webkitRequestAnimationFrame ||\n                          window.mozRequestAnimationFrame ||\n                          window.oRequestAnimationFrame ||\n                          window.msRequestAnimationFrame ||\n                          function(callback) { setTimeout(callback, 1000 / 60); };\n\n    kendo.animationFrame = function(callback) {\n        animationFrame.call(window, callback);\n    };\n\n    var animationQueue = [];\n\n    kendo.queueAnimation = function(callback) {\n        animationQueue[animationQueue.length] = callback;\n        if (animationQueue.length === 1) {\n            kendo.runNextAnimation();\n        }\n    };\n\n    kendo.runNextAnimation = function() {\n        kendo.animationFrame(function() {\n            if (animationQueue[0]) {\n                animationQueue.shift()();\n                if (animationQueue[0]) {\n                    kendo.runNextAnimation();\n                }\n            }\n        });\n    };\n\n    kendo.parseQueryStringParams = function(url) {\n        var queryString = url.split('?')[1] || \"\",\n            params = {},\n            paramParts = queryString.split(/&|=/),\n            length = paramParts.length,\n            idx = 0;\n\n        for (; idx < length; idx += 2) {\n            if (paramParts[idx] !== \"\") {\n                params[decodeURIComponent(paramParts[idx])] = decodeURIComponent(paramParts[idx + 1]);\n            }\n        }\n\n        return params;\n    };\n\n    kendo.elementUnderCursor = function(e) {\n        if (typeof e.x.client != \"undefined\") {\n            return document.elementFromPoint(e.x.client, e.y.client);\n        }\n    };\n\n    kendo.wheelDeltaY = function(jQueryEvent) {\n        var e = jQueryEvent.originalEvent,\n            deltaY = e.wheelDeltaY,\n            delta;\n\n            if (e.wheelDelta) { // Webkit and IE\n                if (deltaY === undefined$1 || deltaY) { // IE does not have deltaY, thus always scroll (horizontal scrolling is treated as vertical)\n                    delta = e.wheelDelta;\n                }\n            } else if (e.detail && e.axis === e.VERTICAL_AXIS) { // Firefox and Opera\n                delta = (-e.detail) * 10;\n            }\n\n        return delta;\n    };\n\n    kendo.throttle = function(fn, delay) {\n        var timeout;\n        var lastExecTime = 0;\n\n        if (!delay || delay <= 0) {\n            return fn;\n        }\n\n        var throttled = function() {\n            var that = this;\n            var elapsed = +new Date() - lastExecTime;\n            var args = arguments;\n\n            function exec() {\n                fn.apply(that, args);\n                lastExecTime = +new Date();\n            }\n\n            // first execution\n            if (!lastExecTime) {\n                return exec();\n            }\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            if (elapsed > delay) {\n                exec();\n            } else {\n                timeout = setTimeout(exec, delay - elapsed);\n            }\n        };\n\n        throttled.cancel = function() {\n            clearTimeout(timeout);\n        };\n\n        return throttled;\n    };\n\n\n    kendo.caret = function(element, start, end) {\n        var rangeElement;\n        var isPosition = start !== undefined$1;\n\n        if (end === undefined$1) {\n            end = start;\n        }\n\n        if (element[0]) {\n            element = element[0];\n        }\n\n        if (isPosition && element.disabled) {\n            return;\n        }\n\n        try {\n            if (element.selectionStart !== undefined$1) {\n                if (isPosition) {\n                    element.focus();\n                    var mobile = support.mobileOS;\n                    if (mobile.wp || mobile.android) {// without the timeout the caret is at the end of the input\n                        setTimeout(function() { element.setSelectionRange(start, end); }, 0);\n                    }\n                    else {\n                        element.setSelectionRange(start, end);\n                    }\n                } else {\n                    start = [element.selectionStart, element.selectionEnd];\n                }\n            } else if (document.selection) {\n                if ($(element).is(\":visible\")) {\n                    element.focus();\n                }\n\n                rangeElement = element.createTextRange();\n\n                if (isPosition) {\n                    rangeElement.collapse(true);\n                    rangeElement.moveStart(\"character\", start);\n                    rangeElement.moveEnd(\"character\", end - start);\n                    rangeElement.select();\n                } else {\n                    var rangeDuplicated = rangeElement.duplicate(),\n                        selectionStart, selectionEnd;\n\n                        rangeElement.moveToBookmark(document.selection.createRange().getBookmark());\n                        rangeDuplicated.setEndPoint('EndToStart', rangeElement);\n                        selectionStart = rangeDuplicated.text.length;\n                        selectionEnd = selectionStart + rangeElement.text.length;\n\n                    start = [selectionStart, selectionEnd];\n                }\n            }\n        } catch (e) {\n            /* element is not focused or it is not in the DOM */\n            start = [];\n        }\n\n        return start;\n    };\n\n    kendo.antiForgeryTokens = function() {\n        var tokens = { },\n            csrf_token = $(\"meta[name=csrf-token],meta[name=_csrf]\").attr(\"content\"),\n            csrf_param = $(\"meta[name=csrf-param],meta[name=_csrf_header]\").attr(\"content\");\n\n        $(\"input[name^='__RequestVerificationToken']\").each(function() {\n            tokens[this.name] = this.value;\n        });\n\n        if (csrf_param !== undefined$1 && csrf_token !== undefined$1) {\n          tokens[csrf_param] = csrf_token;\n        }\n\n        return tokens;\n    };\n\n    kendo.cycleForm = function(form) {\n        var firstElement = form.find(\"input, .k-widget, .k-dropdownlist, .k-combobox\").first();\n        var lastElement = form.find(\"button, .k-button\").last();\n\n        function focus(el) {\n            var widget = kendo.widgetInstance(el);\n\n            if (widget && widget.focus) {\n              widget.focus();\n            } else {\n              el.trigger(\"focus\");\n            }\n        }\n\n        lastElement.on(\"keydown\", function(e) {\n          if (e.keyCode == kendo.keys.TAB && !e.shiftKey) {\n            e.preventDefault();\n            focus(firstElement);\n          }\n        });\n\n        firstElement.on(\"keydown\", function(e) {\n          if (e.keyCode == kendo.keys.TAB && e.shiftKey) {\n            e.preventDefault();\n            focus(lastElement);\n          }\n        });\n    };\n\n    kendo.focusElement = function(element) {\n        var scrollTopPositions = [];\n        var scrollableParents = element.parentsUntil(\"body\")\n                .filter(function(index, element) {\n                    var computedStyle = kendo.getComputedStyles(element, [\"overflow\"]);\n                    return computedStyle.overflow !== \"visible\";\n                })\n                .add(window);\n\n        scrollableParents.each(function(index, parent) {\n            scrollTopPositions[index] = $(parent).scrollTop();\n        });\n\n        try {\n            //The setActive method does not cause the document to scroll to the active object in the current page\n            element[0].setActive();\n        } catch (e) {\n            element[0].focus();\n        }\n\n        scrollableParents.each(function(index, parent) {\n            $(parent).scrollTop(scrollTopPositions[index]);\n        });\n    };\n\n    kendo.focusNextElement = function() {\n        if (document.activeElement) {\n            var focussable = $(\":kendoFocusable\");\n            var index = focussable.index(document.activeElement);\n\n            if (index > -1) {\n               var nextElement = focussable[index + 1] || focussable[0];\n               nextElement.focus();\n            }\n        }\n    };\n\n    kendo.trim = function(value) {\n        if (!!value) {\n            return value.toString().trim();\n        } else {\n            return \"\";\n        }\n    };\n\n    kendo.getWidgetFocusableElement = function(element) {\n        var nextFocusable = element.closest(\":kendoFocusable\"),\n            widgetInstance = kendo.widgetInstance(element),\n            target;\n\n        if (nextFocusable.length) {\n            target = nextFocusable;\n        } else if (widgetInstance) {\n            target = widgetInstance.options.name === 'Editor' ?\n                $(widgetInstance.body) :\n                widgetInstance.wrapper.find(\":kendoFocusable\").first();\n        } else {\n            target = element;\n        }\n\n        return target;\n    };\n\n    kendo.addAttribute = function(element, attribute, value) {\n        var current = element.attr(attribute) || \"\";\n\n        if (current.indexOf(value) < 0) {\n            element.attr(attribute, (current + \" \" + value).trim());\n        }\n    };\n\n    kendo.removeAttribute = function(element, attribute, value) {\n        var current = element.attr(attribute) || \"\";\n\n        element.attr(attribute, current.replace(value, \"\").trim());\n    };\n\n    kendo.toggleAttribute = function(element, attribute, value) {\n        var current = element.attr(attribute) || \"\";\n\n        if (current.indexOf(value) < 0) {\n            kendo.addAttribute(element, attribute, value);\n        } else {\n            kendo.removeAttribute(element, attribute, value);\n        }\n    };\n\n    kendo.matchesMedia = function(mediaQuery) {\n        var media = kendo._bootstrapToMedia(mediaQuery) || mediaQuery;\n        return support.matchMedia && window.matchMedia(media).matches;\n    };\n\n    kendo._bootstrapToMedia = function(bootstrapMedia) {\n        return {\n            \"xs\": \"(max-width: 576px)\",\n            \"sm\": \"(min-width: 576px)\",\n            \"md\": \"(min-width: 768px)\",\n            \"lg\": \"(min-width: 992px)\",\n            \"xl\": \"(min-width: 1200px)\"\n        }[bootstrapMedia];\n    };\n\n    kendo.fileGroupMap = {\n        audio: [\".aif\", \".iff\", \".m3u\", \".m4a\", \".mid\", \".mp3\", \".mpa\", \".wav\", \".wma\", \".ogg\", \".wav\", \".wma\", \".wpl\"],\n        video: [\".3g2\", \".3gp\", \".avi\", \".asf\", \".flv\", \".m4u\", \".rm\", \".h264\", \".m4v\", \".mkv\", \".mov\", \".mp4\", \".mpg\",\n                \".rm\", \".swf\", \".vob\", \".wmv\"],\n        image: [\".ai\", \".dds\", \".heic\", \".jpe\", \"jfif\", \".jif\", \".jp2\", \".jps\", \".eps\", \".bmp\", \".gif\", \".jpeg\",\n                \".jpg\", \".png\", \".ps\", \".psd\", \".svg\", \".svgz\", \".tif\", \".tiff\"],\n        txt: [\".doc\", \".docx\", \".log\", \".pages\", \".tex\", \".wpd\", \".wps\", \".odt\", \".rtf\", \".text\", \".txt\", \".wks\"],\n        presentation: [\".key\", \".odp\", \".pps\", \".ppt\", \".pptx\"],\n        data: [\".xlr\", \".xls\", \".xlsx\"],\n        programming: [\".tmp\", \".bak\", \".msi\", \".cab\", \".cpl\", \".cur\", \".dll\", \".dmp\", \".drv\", \".icns\", \".ico\", \".link\",\n                      \".sys\", \".cfg\", \".ini\", \".asp\", \".aspx\", \".cer\", \".csr\", \".css\", \".dcr\", \".htm\", \".html\", \".js\",\n                      \".php\", \".rss\", \".xhtml\"],\n        pdf: [\".pdf\"],\n        config: [\".apk\", \".app\", \".bat\", \".cgi\", \".com\", \".exe\", \".gadget\", \".jar\", \".wsf\"],\n        zip: [\".7z\", \".cbr\", \".gz\", \".sitx\", \".arj\", \".deb\", \".pkg\", \".rar\", \".rpm\", \".tar.gz\", \".z\", \".zip\", \".zipx\"],\n        \"disc-image\": [\".dmg\", \".iso\", \".toast\", \".vcd\", \".bin\", \".cue\", \".mdf\"]\n    };\n\n    kendo.getFileGroup = function(extension, withPrefix) {\n        var fileTypeMap = kendo.fileGroupMap;\n        var groups = Object.keys(fileTypeMap);\n        var type = \"file\";\n\n        if (extension === undefined$1 || !extension.length) {\n            return type;\n        }\n\n        for (var i = 0; i < groups.length; i += 1) {\n            var extensions = fileTypeMap[groups[i]];\n\n            if (extensions.indexOf(extension.toLowerCase()) > -1) {\n               return withPrefix ? \"file-\" + groups[i] : groups[i];\n            }\n        }\n\n        return type;\n    };\n\n    kendo.getFileSizeMessage = function(size) {\n        var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n\n        if (size === 0) {\n            return '0 Byte';\n        }\n\n        var i = parseInt(Math.floor(Math.log(size) / Math.log(1024)), 10);\n        return Math.round(size / Math.pow(1024, i), 2) + ' ' + sizes[i];\n    };\n\n    kendo.selectorFromClasses = function(classes) {\n        return \".\" + classes.split(\" \").join(\".\");\n    };\n\n    // Standardized Properties and CSS classes\n\n    var themeColorValues = ['base', 'primary', 'secondary', 'tertiary', 'inherit', 'info', 'success', 'warning', 'error', 'dark', 'light', 'inverse'];\n    var fillValues = ['solid', 'outline', 'flat'];\n    //var postitionValues = ['edge', 'outside', 'inside'];\n    var shapeValues = ['rectangle', 'square'];\n    var sizeValues = [ ['small', 'sm'], ['medium', 'md'], ['large', 'lg'] ];\n    var roundedValues = [ ['small', 'sm'], ['medium', 'md'], ['large', 'lg'] ];\n    //var alignValues = [ ['top start', 'top-start'], ['top end', 'top-end'], ['bottom start', 'bottom-start'], ['bottom end', 'bottom-end'] ];\n    var positionModeValues = [ 'fixed', 'static', 'sticky', 'absolute' ];\n    var resizeValues = [ ['both', 'resize'], ['horizontal', 'resize-x'], ['vertical', 'resize-y'] ];\n    var overflowValues = [ 'auto', 'hidden', 'visible', 'scroll', 'clip' ];\n    var layoutFlowValues = [ ['vertical', '!k-flex-col'], ['horizontal', '!k-flex-row'] ];\n\n    kendo.cssProperties = (function() {\n        var defaultValues = {},\n            propertyDictionary = {};\n\n        function registerPrefix(widget, prefix) {\n            var dict = kendo.cssProperties.propertyDictionary;\n\n            if (!dict[widget]) {\n                dict[widget] = {};\n            }\n\n            dict[widget][PREFIX] = prefix;\n        }\n\n        function registerValues(widget, args) {\n            var dict = kendo.cssProperties.propertyDictionary,\n                i, j, prop, values, newValues, currentValue;\n\n            for (i = 0; i < args.length; i++) {\n                prop = args[i].prop;\n                newValues = args[i].values;\n\n                if (!dict[widget][prop]) {\n                    dict[widget][prop] = {};\n                }\n\n                values = dict[widget][prop];\n\n                for (j = 0; j < newValues.length; j++) {\n                    currentValue = newValues[j];\n\n                    if (isArray(newValues[j])) {\n                        values[currentValue[0]] = currentValue[1];\n                    } else {\n                        values[currentValue] = currentValue;\n                    }\n                }\n            }\n        }\n\n        function registerCssClass(propName, value, shorthand) {\n            if (!defaultValues[propName]) {\n                defaultValues[propName] = {};\n            }\n\n            defaultValues[propName][value] = shorthand || value;\n        }\n\n        function registerCssClasses(propName, arr) {\n            for (var i = 0; i < arr.length; i++) {\n                if (isArray(arr[i])) {\n                    registerCssClass(propName, arr[i][0], arr[i][1]);\n                } else {\n                    registerCssClass(propName, arr[i]);\n                }\n            }\n        }\n\n        function getValidClass(args) {\n            var widget = args.widget,\n                propName = args.propName,\n                value = args.value,\n                fill = args.fill,\n                cssProperties = kendo.cssProperties,\n                defaultValues = cssProperties.defaultValues[propName],\n                widgetProperties = cssProperties.propertyDictionary[widget],\n                overridePrefix = args.prefix,\n                widgetValues, validValue, prefix;\n\n            if (!widgetProperties) {\n                return \"\";\n            }\n\n            widgetValues = widgetProperties[propName];\n            validValue = widgetValues ? widgetValues[value] || defaultValues[value] : defaultValues[value];\n\n            if (validValue) {\n                if (propName === \"themeColor\") {\n                    prefix = widgetProperties[PREFIX] + fill + \"-\";\n                } else if (propName === \"positionMode\") {\n                    prefix = \"k-pos-\";\n                } else if (propName === \"rounded\") {\n                    prefix = \"k-rounded-\";\n                } else if (propName === \"resize\") {\n                    prefix = \"k-\";\n                } else if (propName === \"overflow\") {\n                    prefix = \"k-overflow-\";\n                } else if (propName === \"layoutFlow\") {\n                    prefix = \"\";\n                } else {\n                    prefix = widgetProperties[PREFIX];\n                }\n\n                prefix = overridePrefix || prefix;\n\n                return prefix + validValue;\n            } else {\n                return \"\";\n            }\n        }\n\n        registerCssClasses(\"themeColor\", themeColorValues);\n        registerCssClasses(\"fillMode\", fillValues);\n        registerCssClasses(\"shape\", shapeValues);\n        registerCssClasses(\"size\", sizeValues);\n        registerCssClasses(\"positionMode\", positionModeValues);\n        registerCssClasses(\"rounded\", roundedValues);\n        registerCssClasses(\"resize\", resizeValues);\n        registerCssClasses(\"overflow\", overflowValues);\n        registerCssClasses(\"layoutFlow\", layoutFlowValues);\n\n        return {\n            positionModeValues: positionModeValues,\n            roundedValues: roundedValues,\n            sizeValues: sizeValues,\n            shapeValues: shapeValues,\n            fillModeValues: fillValues,\n            themeColorValues: themeColorValues,\n\n            defaultValues: defaultValues,\n            propertyDictionary: propertyDictionary,\n\n            registerValues: registerValues,\n            getValidClass: getValidClass,\n            registerPrefix: registerPrefix\n        };\n    }());\n\n    //To do: delete below after implementing new styles and classes for BottomNavigation\n    kendo.registerCssClass = function(propName, value, shorthand) {\n        if (!kendo.propertyToCssClassMap[propName]) {\n            kendo.propertyToCssClassMap[propName] = {};\n        }\n\n        kendo.propertyToCssClassMap[propName][value] = shorthand || value;\n    };\n\n    kendo.registerCssClasses = function(propName, arr) {\n        for (var i = 0; i < arr.length; i++) {\n            if (isArray(arr[i])) {\n                kendo.registerCssClass(propName, arr[i][0], arr[i][1]);\n            } else {\n                kendo.registerCssClass(propName, arr[i]);\n            }\n        }\n    };\n\n    kendo.getValidCssClass = function(prefix, propName, value) {\n        var validValue = kendo.propertyToCssClassMap[propName][value];\n\n        if (validValue) {\n            return prefix + validValue;\n        }\n    };\n\n    kendo.propertyToCssClassMap = {};\n\n    kendo.registerCssClasses(\"themeColor\", themeColorValues);\n    kendo.registerCssClasses(\"fill\", fillValues);\n    //kendo.registerCssClasses(\"postition\", postitionValues);\n    kendo.registerCssClasses(\"shape\", shapeValues);\n    kendo.registerCssClasses(\"size\", sizeValues);\n    //kendo.registerCssClasses(\"align\", alignValues);\n    kendo.registerCssClasses(\"positionMode\", positionModeValues);\n\n    kendo.applyStylesFromKendoAttributes = function(element, styleProps) {\n        let selector = styleProps.map(styleProp=> `[${kendo.attr(`style-${styleProp}`)}]`).join(',');\n        element.find(selector).addBack(selector).each((_, currentElement) => {\n            let $currentElement = $(currentElement);\n            styleProps.forEach(function(styleProp) {\n                let kendoAttr = kendo.attr(`style-${styleProp}`);\n                if ($currentElement.attr(kendoAttr)) {\n                    $currentElement.css(styleProp, $currentElement.attr(kendoAttr));\n                    $currentElement.removeAttr(kendoAttr);\n                }\n            });\n        });\n    };\n\n    // jQuery deferred helpers\n\n    // influenced from: https://gist.github.com/fearphage/4341799\n    kendo.whenAll = function(array) {\n        var resolveValues = arguments.length == 1 && Array.isArray(array) ? array : Array.prototype.slice.call(arguments),\n            length = resolveValues.length,\n            remaining = length,\n            deferred = $.Deferred(),\n            i = 0,\n            failed = 0,\n            rejectContexts = Array(length),\n            rejectValues = Array(length),\n            resolveContexts = Array(length),\n            value;\n\n        function updateFunc(index, contexts, values) {\n            return function() {\n                if (values != resolveValues) {\n                    failed++;\n                }\n\n                deferred.notifyWith(\n                    contexts[index] = this,\n                    values[index] = Array.prototype.slice.call(arguments)\n                );\n\n                if (!(--remaining)) {\n                    deferred[(!failed ? 'resolve' : 'reject') + 'With'](contexts, values);\n                }\n            };\n        }\n\n        for (; i < length; i++) {\n            if ((value = resolveValues[i]) && kendo.isFunction(value.promise)) {\n                value.promise()\n                    .done(updateFunc(i, resolveContexts, resolveValues))\n                    .fail(updateFunc(i, rejectContexts, rejectValues));\n            }\n\n            else {\n                deferred.notifyWith(this, value);\n                --remaining;\n            }\n        }\n\n        if (!remaining) {\n            deferred.resolveWith(resolveContexts, resolveValues);\n        }\n\n        return deferred.promise();\n    };\n\n    // kendo.saveAs -----------------------------------------------\n    (function() {\n        function postToProxy(dataURI, fileName, proxyURL, proxyTarget) {\n            var form = $(\"<form>\").attr({\n                action: proxyURL,\n                method: \"POST\",\n                target: proxyTarget\n            });\n\n            var data = kendo.antiForgeryTokens();\n            data.fileName = fileName;\n\n            var parts = dataURI.split(\";base64,\");\n            data.contentType = parts[0].replace(\"data:\", \"\");\n            data.base64 = parts[1];\n\n            for (var name in data) {\n                if (data.hasOwnProperty(name)) {\n                    $('<input>').attr({\n                        value: data[name],\n                        name: name,\n                        type: \"hidden\"\n                    }).appendTo(form);\n                }\n            }\n\n            form.appendTo(\"body\").submit().remove();\n        }\n\n        var fileSaver = document.createElement(\"a\");\n        var downloadAttribute = \"download\" in fileSaver && !kendo.support.browser.edge;\n\n        function saveAsBlob(dataURI, fileName) {\n            var blob = dataURI; // could be a Blob object\n\n            if (typeof dataURI == \"string\") {\n                var parts = dataURI.split(\";base64,\");\n                var contentType = parts[0];\n                var base64 = atob(parts[1]);\n                var array = new Uint8Array(base64.length);\n\n                for (var idx = 0; idx < base64.length; idx++) {\n                    array[idx] = base64.charCodeAt(idx);\n                }\n                blob = new Blob([array.buffer], { type: contentType });\n            }\n\n            navigator.msSaveBlob(blob, fileName);\n        }\n\n        function saveAsDataURI(dataURI, fileName) {\n            if (window.Blob && dataURI instanceof Blob) {\n                dataURI = URL.createObjectURL(dataURI);\n            }\n\n            fileSaver.download = fileName;\n            fileSaver.href = dataURI;\n\n            var e = document.createEvent(\"MouseEvents\");\n            e.initMouseEvent(\"click\", true, false, window,\n                0, 0, 0, 0, 0, false, false, false, false, 0, null);\n\n            fileSaver.dispatchEvent(e);\n            setTimeout(function() {\n                URL.revokeObjectURL(dataURI);\n            });\n        }\n\n        kendo.saveAs = function(options) {\n            var save = postToProxy;\n\n            if (!options.forceProxy) {\n                if (downloadAttribute) {\n                    save = saveAsDataURI;\n                } else if (navigator.msSaveBlob) {\n                    save = saveAsBlob;\n                }\n            }\n\n            save(options.dataURI, options.fileName, options.proxyURL, options.proxyTarget);\n        };\n    })();\n\n    // kendo proxySetters\n    kendo.proxyModelSetters = function proxyModelSetters(data) {\n        var observable = {};\n\n        Object.keys(data || {}).forEach(function(property) {\n          Object.defineProperty(observable, property, {\n            get: function() {\n              return data[property];\n            },\n            set: function(value) {\n              data[property] = value;\n              data.dirty = true;\n            }\n          });\n        });\n\n        return observable;\n    };\n\n    kendo.getSeriesColors = function() {\n        var seriesColorsTemplate = '<div class=\"k-var--series-a\"></div>' +\n                '<div class=\"k-var--series-b\"></div>' +\n                '<div class=\"k-var--series-c\"></div>' +\n                '<div class=\"k-var--series-d\"></div>' +\n                '<div class=\"k-var--series-e\"></div>' +\n                '<div class=\"k-var--series-f\"></div>',\n            series = $(seriesColorsTemplate),\n            colors = [];\n\n        series.appendTo($('body'));\n\n        series.each(function(i, item) {\n            colors.push($(item).css(\"background-color\"));\n        });\n\n        series.remove();\n\n        return colors;\n    };\n\n    kendo.isElement = function(element) {\n        return element instanceof Element || element instanceof HTMLDocument;\n    };\n\n    // Kendo defaults\n    (function() {\n\n        kendo.defaults = kendo.defaults || {};\n        kendo.setDefaults = function(key, value) {\n            var path = key.split(\".\");\n            var curr = kendo.defaults;\n\n            key = path.pop();\n\n            path.forEach(function(part) {\n                if (curr[part] === undefined$1) {\n                    curr[part] = {};\n                }\n\n                curr = curr[part];\n            });\n\n            if (value.constructor === Object) {\n                curr[key] = deepExtend({}, curr[key], value);\n            } else {\n                curr[key] = value;\n            }\n        };\n\n        // Use external global flags for templates.\n        kendo.debugTemplates = window.DEBUG_KENDO_TEMPLATES;\n\n        // Setup default mediaQuery breakpoints\n        kendo.setDefaults('breakpoints', defaultBreakpoints);\n    })();\n\n    // Implement type() as it has been depricated in jQuery\n    (function() {\n        kendo.class2type = {};\n\n        jquery__WEBPACK_IMPORTED_MODULE_0___default().each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\n            function( _i, name ) {\n                kendo.class2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n            } );\n\n        kendo.type = function(obj) {\n            if ( obj == null ) {\n                return obj + \"\";\n            }\n\n            // Support: Android <=2.3 only (functionish RegExp)\n            return typeof obj === \"object\" || typeof obj === \"function\" ?\n                kendo.class2type[Object.prototype.toString.call(obj)] || \"object\" :\n                typeof obj;\n        };\n    }());\n\n    var KendoLicensing = { validatePackage: function() { return true; },setScriptKey: function() {} };\n\n    window.KendoLicensing = {\n        setScriptKey: KendoLicensing.setScriptKey\n    };\n\n    function validatePackage() {\n        return KendoLicensing.validatePackage(packageMetadata);\n    }\n\n    function addWatermarkOverlay(el) {\n        KendoLicensing.addWatermarkOverlay && KendoLicensing.addWatermarkOverlay(el, packageMetadata);\n        KendoLicensing.showBanner && KendoLicensing.showBanner(packageMetadata);\n    }\n\n})((jquery__WEBPACK_IMPORTED_MODULE_0___default()), window);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.core.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.data.js":
/*!******************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.data.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* harmony import */ var _kendo_data_odata_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.data.odata.js */ \"./node_modules/kendo-ui-core/esm/kendo.data.odata.js\");\n/* harmony import */ var _kendo_data_xml_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kendo.data.xml.js */ \"./node_modules/kendo-ui-core/esm/kendo.data.xml.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\n\n/*\nThis code is copied/inspired by the internal @progress/kendo-data-query repo:\nhttps://github.com/telerik/kendo-data-query/tree/develop/src/filtering\n\n!!!\n1. If updates are to be synced consider the accentFoldingFiltering,\n   which at the moment is not present as a feature in the data-query-package.\n\n2. Double-check available operators as well.\n\n3. Make sure objs are strings -> i.e., replace (a || \"\") to (a + '')\n!!!\n\nIn future, if we consider reusing the code directly we should revise the above omissions.\n*/\n\nconst logic = {\n    \"or\": {\n        concat: (acc, fn) => a => acc(a) || fn(a),\n        identity: () => false\n    },\n    \"and\": {\n        concat: (acc, fn) => a => acc(a) && fn(a),\n        identity: () => true\n    }\n};\n\nconst operatorsMap = {\n    isnullorempty: (a) => kendo.isBlank(a) || a === '',\n    isnotnullorempty: (a) => kendo.isPresent(a) && a !== '',\n    contains: (a, b) => (a + '').indexOf(b) >= 0,\n    doesnotcontain: (a, b) => (a + '').indexOf(b) === -1,\n    doesnotendwith: (a, b) => (a + '').indexOf(b, (a || \"\").length - (b || \"\").length) < 0,\n    doesnotstartwith: (a, b) => (a + '').lastIndexOf(b, 0) === -1,\n    endswith: (a, b) => (a + '').indexOf(b, (a || \"\").length - (b || \"\").length) >= 0,\n    eq: (a, b) => a === b,\n    gt: (a, b) => a > b,\n    gte: (a, b) => a >= b,\n    isempty: (a) => a === '',\n    isnotempty: (a) => a !== '',\n    isnotnull: (a) => kendo.isPresent(a),\n    isnull: (a) => kendo.isBlank(a),\n    lt: (a, b) => a < b,\n    lte: (a, b) => a <= b,\n    neq: (a, b) => a != b,\n    startswith: (a, b) => (a + '').lastIndexOf(b, 0) === 0\n};\n\nconst dateRegExp = /^\\/Date\\((.*?)\\)\\/$/;\n\nconst convertValue = (value, ignoreCase, accentFoldingFiltering) => {\n    if (value != null && kendo.isString(value)) {\n        const date = dateRegExp.exec(value);\n        if (date) {\n            return new Date(+date[1]).getTime();\n        } else if (ignoreCase) {\n            return accentFoldingFiltering ? value.toLocaleLowerCase(accentFoldingFiltering) : value.toLowerCase();\n        }\n    } else if (value != null && kendo.isDate(value)) {\n        return value.getTime();\n    }\n    return value;\n};\n\nconst typedGetter = (prop, value, ignoreCase, accentFoldingFiltering) => {\n    if (!kendo.isPresent(value)) {\n        return prop;\n    }\n\n    let acc = prop;\n\n    if (kendo.isString(value)) {\n        const date = dateRegExp.exec(value);\n        if (date) {\n            value = new Date(+date[1]);\n        } else {\n            acc = a => {\n                const x = prop(a);\n                if (typeof x === 'string' && ignoreCase) {\n                    return accentFoldingFiltering ? x.toLocaleLowerCase(accentFoldingFiltering) : x.toLowerCase();\n                } else {\n                    return kendo.isNumeric(x) ? x + \"\" : x;\n                }\n            };\n        }\n    }\n\n    if (kendo.isDate(value)) {\n        return a => {\n            const x = acc(a);\n            return kendo.isDate(x) ? x.getTime() : x;\n        };\n    }\n    return acc;\n};\n\nconst transformFilter = ({ field, ignoreCase, value, operator = 'eq', accentFoldingFiltering }) => {\n    field = !kendo.isPresent(field) ? a => a : field;\n\n    ignoreCase = kendo.isPresent(ignoreCase) ? ignoreCase : true;\n\n    const itemProp = typedGetter(\n        kendo.isFunction(field) ? field : kendo.getter(field, true),\n        value,\n        ignoreCase,\n        accentFoldingFiltering\n    );\n\n    value = convertValue(value, ignoreCase, accentFoldingFiltering);\n\n    const op = kendo.isFunction(operator) ? operator : operatorsMap[operator];\n\n    return a => op(itemProp(a), value, ignoreCase);\n};\n\nconst isCompositeFilterDescriptor = (source) => kendo.isPresent(source.filters);\n\nconst transformCompositeFilter = (filter) => {\n    const accentFoldingFiltering = filter.accentFoldingFiltering;\n    const combiner = logic[filter.logic || 'and'];\n    return filter.filters\n        .filter(kendo.isPresent)\n        .map(x => (isCompositeFilterDescriptor(x) ? transformCompositeFilter(extendAccentFolding(x, accentFoldingFiltering)) : transformFilter(extendAccentFolding(x, accentFoldingFiltering))))\n        .reduce(combiner.concat, combiner.identity);\n};\n\nconst extendAccentFolding = (filter, accentFoldingFiltering) => (kendo.isPresent(accentFoldingFiltering) ? Object.assign(filter, { accentFoldingFiltering }) : filter);\n\nconst filterExprNoEval = function(expr) {\n    return transformCompositeFilter(expr);\n};\n\nvar __meta__ = {\n    id: \"data\",\n    name: \"Data source\",\n    category: \"framework\",\n    description: \"Powerful component for using local and remote data.Fully supports CRUD, Sorting, Paging, Filtering, Grouping, and Aggregates.\",\n    depends: [ \"core\" ],\n    features: [ {\n        id: \"data-odata\",\n        name: \"OData\",\n        description: \"Support for accessing Open Data Protocol (OData) services.\",\n        depends: [ \"data.odata\" ]\n    }, {\n        id: \"data-signalr\",\n        name: \"SignalR\",\n        description: \"Support for binding to SignalR hubs.\",\n        depends: [ \"data.signalr\" ]\n    }, {\n        id: \"data-XML\",\n        name: \"XML\",\n        description: \"Support for binding to XML.\",\n        depends: [ \"data.xml\" ]\n    }]\n};\n\n\n(function($, undefined$1) {\n    var extend = $.extend,\n        isPlainObject = $.isPlainObject,\n        isEmptyObject = $.isEmptyObject,\n        isArray = Array.isArray,\n        grep = $.grep,\n        ajax = $.ajax,\n        map,\n        each = $.each,\n        noop = $.noop,\n        kendo = __webpack_provided_window_dot_kendo,\n        isFunction = kendo.isFunction,\n        Observable = kendo.Observable,\n        Class = kendo.Class,\n        STRING = \"string\",\n        FUNCTION = \"function\",\n        ASCENDING = \"asc\",\n        CREATE = \"create\",\n        READ = \"read\",\n        UPDATE = \"update\",\n        DESTROY = \"destroy\",\n        CHANGE = \"change\",\n        SYNC = \"sync\",\n        GET = \"get\",\n        ERROR = \"error\",\n        REQUESTSTART = \"requestStart\",\n        PROGRESS = \"progress\",\n        REQUESTEND = \"requestEnd\",\n        ITEMSLOADED = \"itemsLoaded\",\n        ITEMLOAD = \"itemLoad\",\n        crud = [CREATE, READ, UPDATE, DESTROY],\n        identity = function(o) { return o; },\n        getter = kendo.getter,\n        stringify = kendo.stringify,\n        math = Math,\n        push = [].push,\n        join = [].join,\n        pop = [].pop,\n        splice = [].splice,\n        shift = [].shift,\n        slice = [].slice,\n        unshift = [].unshift,\n        toString = {}.toString,\n        stableSort = kendo.support.stableSort,\n        dateRegExp = /^\\/Date\\((.*?)\\)\\/$/,\n        objectKeys = [];\n\n    var ObservableArray = Observable.extend({\n        init: function(array, type) {\n            var that = this;\n\n            that.type = type || ObservableObject;\n\n            Observable.fn.init.call(that);\n\n            that.length = array.length;\n\n            that.wrapAll(array, that);\n            that._loadPromises = [];\n            that._loadedNodes = [];\n        },\n\n        at: function(index) {\n            return this[index];\n        },\n\n        toJSON: function(serializeFunctions) {\n            var idx, length = this.length, value, json = new Array(length);\n\n            for (idx = 0; idx < length; idx++) {\n                value = this[idx];\n\n                if (value instanceof ObservableObject) {\n                    value = value.toJSON(serializeFunctions);\n                }\n\n                json[idx] = value;\n            }\n\n            return json;\n        },\n\n        parent: noop,\n\n        wrapAll: function(source, target) {\n            var that = this,\n                idx,\n                length,\n                parent = function() {\n                    return that;\n                };\n\n            target = target || [];\n\n            for (idx = 0, length = source.length; idx < length; idx++) {\n                target[idx] = that.wrap(source[idx], parent);\n            }\n\n            return target;\n        },\n\n        wrap: function(object, parent) {\n            var that = this,\n                observable;\n\n            if (object !== null && toString.call(object) === \"[object Object]\") {\n                observable = object instanceof that.type || object instanceof Model;\n\n                if (!observable) {\n                    object = object instanceof ObservableObject ? object.toJSON() : object;\n                    object = new that.type(object);\n                }\n\n                object.parent = parent;\n\n                object.bind(CHANGE, function(e) {\n                    var isGroup = object.hasOwnProperty(\"hasSubgroups\");\n                    that.trigger(CHANGE, {\n                        field: e.field,\n                        node: e.node,\n                        index: e.index,\n                        items: e.items || [this],\n                        action: e.node || isGroup ? (e.action || \"itemloaded\") : \"itemchange\"\n                    });\n                });\n\n                object.bind(ITEMLOAD, function(e) {\n                    that._loadPromises.push(e.promise);\n                    that._loading = true;\n\n                    e.promise.done(function() {\n                        that._loadedNodes.push(e.node);\n                        var index = that._loadPromises.indexOf(e.promise);\n                        that._loadPromises.splice(index, 1);\n\n                        if (!that._loadPromises.length) {\n                            that._loading = false;\n                            that.trigger(ITEMSLOADED, { collection: that, nodes: that._loadedNodes });\n                            that._loadedNodes = [];\n                        }\n                    });\n                });\n            }\n\n            return object;\n        },\n\n        loading: function() {\n            return this._loading;\n        },\n\n        push: function() {\n            var index = this.length,\n                items = this.wrapAll(arguments),\n                result;\n\n            result = push.apply(this, items);\n\n            if (!this.omitChangeEvent) {\n                this.trigger(CHANGE, {\n                    action: \"add\",\n                    index: index,\n                    items: items\n                });\n            }\n\n            return result;\n        },\n\n        slice: slice,\n\n        sort: [].sort,\n\n        join: join,\n\n        pop: function() {\n            var length = this.length, result = pop.apply(this);\n\n            if (length) {\n                this.trigger(CHANGE, {\n                    action: \"remove\",\n                    index: length - 1,\n                    items: [result]\n                });\n            }\n\n            return result;\n        },\n\n        splice: function(index, howMany, item) {\n            var items = this.wrapAll(slice.call(arguments, 2)),\n                result, i, len;\n\n            result = splice.apply(this, [index, howMany].concat(items));\n\n            if (result.length) {\n                if (!this.omitChangeEvent) {\n                    this.trigger(CHANGE, {\n                        action: \"remove\",\n                        index: index,\n                        items: this.omitCache && this.omitCache.length ? result.concat(this.omitCache) : result\n                    });\n                    this.omitCache = [];\n                }\n\n                for (i = 0, len = result.length; i < len; i++) {\n                    if (result[i] && result[i].children) {\n                        result[i].unbind(CHANGE);\n                    }\n                }\n            }\n\n            if (item) {\n                if (!this.omitChangeEvent) {\n                    this.trigger(CHANGE, {\n                        action: \"add\",\n                        index: index,\n                        items: items\n                    });\n                }\n            }\n            return result;\n        },\n\n        shift: function() {\n            var length = this.length, result = shift.apply(this);\n\n            if (length) {\n                this.trigger(CHANGE, {\n                    action: \"remove\",\n                    index: 0,\n                    items: [result]\n                });\n            }\n\n            return result;\n        },\n\n        unshift: function() {\n            var items = this.wrapAll(arguments),\n                result;\n\n            result = unshift.apply(this, items);\n\n            this.trigger(CHANGE, {\n                action: \"add\",\n                index: 0,\n                items: items\n            });\n\n            return result;\n        },\n\n        indexOf: function(item) {\n            var that = this,\n                idx,\n                length;\n\n            for (idx = 0, length = that.length; idx < length; idx++) {\n                if (that[idx] === item) {\n                    return idx;\n                }\n            }\n            return -1;\n        },\n\n        forEach: function(callback, thisArg) {\n            var idx = 0;\n            var length = this.length;\n            var context = thisArg || window;\n\n            for (; idx < length; idx++) {\n                callback.call(context, this[idx], idx, this);\n            }\n        },\n\n        map: function(callback, thisArg) {\n            var idx = 0;\n            var result = [];\n            var length = this.length;\n            var context = thisArg || window;\n\n            for (; idx < length; idx++) {\n                result[idx] = callback.call(context, this[idx], idx, this);\n            }\n\n            return result;\n        },\n\n        reduce: function(callback) {\n            var idx = 0,\n                result,\n                length = this.length;\n\n            if (arguments.length == 2) {\n                result = arguments[1];\n            } else if (idx < length) {\n                result = this[idx++];\n            }\n\n            for (; idx < length; idx++) {\n                result = callback(result, this[idx], idx, this);\n            }\n\n            return result;\n        },\n\n        reduceRight: function(callback) {\n            var idx = this.length - 1,\n                result;\n\n            if (arguments.length == 2) {\n                result = arguments[1];\n            } else if (idx > 0) {\n                result = this[idx--];\n            }\n\n            for (; idx >= 0; idx--) {\n                result = callback(result, this[idx], idx, this);\n            }\n\n            return result;\n        },\n\n        filter: function(callback, thisArg) {\n            var idx = 0;\n            var result = [];\n            var item;\n            var length = this.length;\n            var context = thisArg || window;\n\n            for (; idx < length; idx++) {\n                item = this[idx];\n                if (callback.call(context, item, idx, this)) {\n                    result[result.length] = item;\n                }\n            }\n\n            return result;\n        },\n\n        find: function(callback, thisArg) {\n            var idx = 0;\n            var item;\n            var length = this.length;\n            var context = thisArg || window;\n\n            for (; idx < length; idx++) {\n                item = this[idx];\n                if (callback.call(context, item, idx, this)) {\n                    return item;\n                }\n            }\n        },\n\n        every: function(callback, thisArg) {\n            var idx = 0;\n            var item;\n            var length = this.length;\n            var context = thisArg || window;\n\n            for (; idx < length; idx++) {\n                item = this[idx];\n                if (!callback.call(context, item, idx, this)) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        some: function(callback, thisArg) {\n            var idx = 0;\n            var item;\n            var length = this.length;\n            var context = thisArg || window;\n\n            for (; idx < length; idx++) {\n                item = this[idx];\n                if (callback.call(context, item, idx, this)) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        // non-standard collection methods\n        remove: function(item) {\n            var idx = this.indexOf(item);\n\n            if (idx !== -1) {\n                this.splice(idx, 1);\n            }\n        },\n\n        empty: function() {\n            this.splice(0, this.length);\n        }\n    });\n\n    // Polyfill for Symbol.iterator\n    if (typeof Symbol !== \"undefined\" && Symbol.iterator && !ObservableArray.prototype[Symbol.iterator]) {\n        ObservableArray.prototype[Symbol.iterator] = [][Symbol.iterator];\n    }\n\n    var LazyObservableArray = ObservableArray.extend({\n        init: function(data, type, events) {\n            var parentFn = function() { return this; };\n\n            Observable.fn.init.call(this);\n\n            this.type = type || ObservableObject;\n\n            if (events) {\n                this._events = events;\n            }\n\n            for (var idx = 0; idx < data.length; idx++) {\n                this[idx] = data[idx];\n            }\n\n            this.length = idx;\n            this._parent = parentFn.bind(this);\n            this._loadPromises = [];\n            this._loadedNodes = [];\n        },\n        at: function(index) {\n            var item = this[index];\n\n            if (!(item instanceof this.type)) {\n                item = this[index] = this.wrap(item, this._parent);\n            } else {\n                item.parent = this._parent;\n            }\n\n            return item;\n        }\n    });\n\n    function eventHandler(context, type, field, prefix) {\n        return function(e) {\n            var event = {}, key;\n\n            for (key in e) {\n                event[key] = e[key];\n            }\n\n            if (prefix) {\n                event.field = field + \".\" + e.field;\n            } else {\n                event.field = field;\n            }\n\n            if (type == CHANGE && context._notifyChange) {\n                context._notifyChange(event);\n            }\n\n            context.trigger(type, event);\n        };\n    }\n\n    function isPrimitiveType(value) {\n        return (typeof value === \"object\" && Object.getPrototypeOf(value) === Object.getPrototypeOf({}))\n                || Object.getPrototypeOf(value) === Object.getPrototypeOf(new Date())\n                || typeof value !== \"object\";\n      }\n\n    function ownKeys(value, ignoreObjectKeys) {\n        var props = [];\n        var protoKeys = [];\n        var keys, filteredObjectKeys;\n\n        value = value || {};\n\n        if (!isPrimitiveType(value)) {\n            protoKeys = Object.getOwnPropertyNames(Object.getPrototypeOf(value)).filter(f => f.indexOf(\"__\") !== 0);\n        }\n\n        keys = Object.getOwnPropertyNames(value).concat(protoKeys);\n\n        filteredObjectKeys = objectKeys.filter(function(key) {\n            return keys.indexOf(key) < 0;\n        });\n\n        while (value) {\n            Object.getOwnPropertyNames(value).forEach(function(prop) {\n                if (props.indexOf(prop) === -1 && (!ignoreObjectKeys || filteredObjectKeys.indexOf(prop) < 0)) {\n                    props.push(prop);\n                }\n            });\n            value = Object.getPrototypeOf(value);\n        }\n\n        return props;\n    }\n\n    objectKeys = ownKeys({}, false);\n\n    var ObservableObject = Observable.extend({\n        init: function(value) {\n            var that = this,\n                member,\n                keys = ownKeys(value, true),\n                parent = function() {\n                    return that;\n                };\n\n            Observable.fn.init.call(this);\n\n            this._handlers = {};\n\n            keys.forEach(function(field) {\n                member = value[field];\n\n                if (typeof member === \"object\" && member && !member.getTime && field.charAt(0) != \"_\") {\n                    member = that.wrap(member, field, parent);\n                }\n\n                that[field] = member;\n            });\n\n            that.uid = kendo.guid();\n        },\n\n        shouldSerialize: function(field, serializeFunctions) {\n            return this.hasOwnProperty(field) && field !== \"_handlers\" && field !== \"_events\" && ((serializeFunctions && serializeFunctions[field]) || typeof this[field] !== FUNCTION) && field !== \"uid\";\n        },\n\n        forEach: function(f) {\n            for (var i in this) {\n                if (this.shouldSerialize(i)) {\n                    f(this[i], i);\n                }\n            }\n        },\n\n        toJSON: function(serializeFunctions) {\n            var result = {}, value, field;\n\n            for (field in this) {\n                if (this.shouldSerialize(field, serializeFunctions)) {\n                    value = this[field];\n\n                    if (value instanceof ObservableObject || value instanceof ObservableArray) {\n                        value = value.toJSON(serializeFunctions);\n                    }\n\n                    result[field] = value;\n                }\n            }\n\n            return result;\n        },\n\n        get: function(field) {\n            var that = this, result;\n\n            that.trigger(GET, { field: field });\n\n            if (field === \"this\") {\n                result = that;\n            } else {\n                result = kendo.getter(field, true)(that);\n            }\n\n            return result;\n        },\n\n        _set: function(field, value) {\n            var that = this;\n            var composite = field.indexOf(\".\") >= 0;\n\n            if (composite) {\n                var paths = field.split(\".\"),\n                    path = \"\";\n\n                while (paths.length > 1) {\n                    path += paths.shift();\n                    var obj = kendo.getter(path, true)(that);\n                    if (obj instanceof ObservableObject) {\n                        obj.set(paths.join(\".\"), value);\n                        return composite;\n                    }\n                    path += \".\";\n                }\n            }\n\n            kendo.setter(field)(that, value);\n\n            return composite;\n        },\n\n        set: function(field, value) {\n            var that = this,\n                isSetPrevented = false,\n                composite = field.indexOf(\".\") >= 0,\n                current = kendo.getter(field, true)(that);\n\n            if (current !== value) {\n                if (current instanceof Observable && this._handlers[field]) {\n                    if (this._handlers[field].get) {\n                       current.unbind(GET, this._handlers[field].get);\n                    }\n                    current.unbind(CHANGE, this._handlers[field].change);\n                }\n\n                isSetPrevented = that.trigger(\"set\", { field: field, value: value });\n\n                if (!isSetPrevented) {\n                    if (!composite) {\n                        value = that.wrap(value, field, function() { return that; });\n                    }\n                    if ((!that._set(field, value) || field.indexOf(\"(\") >= 0 || field.indexOf(\"[\") >= 0)) {\n                        that.trigger(CHANGE, { field: field });\n                    }\n                }\n            }\n\n            return isSetPrevented;\n        },\n\n        parent: noop,\n\n        wrap: function(object, field, parent) {\n            var that = this;\n            var get;\n            var change;\n            var type = toString.call(object);\n\n            if (object != null && (type === \"[object Object]\" || type === \"[object Array]\")) {\n                var isObservableArray = object instanceof ObservableArray;\n                var isDataSource = object instanceof DataSource;\n\n                if (type === \"[object Object]\" && !isDataSource && !isObservableArray) {\n                    if (!(object instanceof ObservableObject)) {\n                        object = new ObservableObject(object);\n                    }\n\n                    get = eventHandler(that, GET, field, true);\n                    object.bind(GET, get);\n                    change = eventHandler(that, CHANGE, field, true);\n                    object.bind(CHANGE, change);\n\n                    that._handlers[field] = { get: get, change: change };\n                } else if (type === \"[object Array]\" || isObservableArray || isDataSource) {\n                    if (!isObservableArray && !isDataSource) {\n                        object = new ObservableArray(object);\n                    }\n\n                    change = eventHandler(that, CHANGE, field, false);\n\n                    object.bind(CHANGE, change);\n\n                    that._handlers[field] = { change: change };\n                }\n\n                object.parent = parent;\n            }\n\n            return object;\n        }\n    });\n\n    function equal(x, y) {\n        if (x === y) {\n            return true;\n        }\n\n        var xtype = kendo.type(x), ytype = kendo.type(y), field;\n\n        if (xtype !== ytype) {\n            return false;\n        }\n\n        if (xtype === \"date\") {\n            return x.getTime() === y.getTime();\n        }\n\n        if (xtype !== \"object\" && xtype !== \"array\") {\n            return false;\n        }\n\n        for (field in x) {\n            if (!equal(x[field], y[field])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    var parsers = {\n        \"number\": function(value) {\n            if (typeof value === STRING && value.toLowerCase() === \"null\") {\n                return null;\n            }\n            return kendo.parseFloat(value);\n        },\n\n        \"date\": function(value) {\n            if (typeof value === STRING && value.toLowerCase() === \"null\") {\n                return null;\n            }\n            return kendo.parseDate(value);\n        },\n\n        \"boolean\": function(value) {\n            if (typeof value === STRING) {\n                if (value.toLowerCase() === \"null\") {\n                    return null;\n                } else {\n                    return value.toLowerCase() === \"true\";\n                }\n            }\n            return value != null ? !!value : value;\n        },\n\n        \"string\": function(value) {\n            if (typeof value === STRING && value.toLowerCase() === \"null\") {\n                return null;\n            }\n            return value != null ? (value + \"\") : value;\n        },\n\n        \"default\": function(value) {\n            return value;\n        }\n    };\n\n    var defaultValues = {\n        \"string\": \"\",\n        \"number\": 0,\n        \"date\": new Date(),\n        \"boolean\": false,\n        \"default\": \"\"\n    };\n\n    function getFieldByName(obj, name) {\n        var field,\n            fieldName;\n\n        for (fieldName in obj) {\n            field = obj[fieldName];\n            if (isPlainObject(field) && field.field && field.field === name) {\n                return field;\n            } else if (field === name) {\n                return field;\n            }\n        }\n        return null;\n    }\n\n    var Model = ObservableObject.extend({\n        init: function(data) {\n            var that = this;\n\n            if (!data || $.isEmptyObject(data)) {\n                data = $.extend({}, that.defaults, data);\n\n                if (that._initializers) {\n                    for (var idx = 0; idx < that._initializers.length; idx++) {\n                         var name = that._initializers[idx];\n                         data[name] = that.defaults[name]();\n                    }\n                }\n            }\n\n            ObservableObject.fn.init.call(that, data);\n\n            that.dirty = false;\n            that.dirtyFields = {};\n\n            if (that.idField) {\n                that.id = that.get(that.idField);\n\n                if (that.id === undefined$1) {\n                    that.id = that._defaultId;\n                }\n            }\n        },\n\n        shouldSerialize: function(field) {\n            return ObservableObject.fn.shouldSerialize.call(this, field) &&\n                field !== \"uid\" && !(this.idField !== \"id\" && field === \"id\") &&\n                field !== \"dirty\" && field !== \"dirtyFields\" && field !== \"_accessors\";\n        },\n\n        _parse: function(field, value) {\n            var that = this,\n                fieldName = field,\n                fields = (that.fields || {}),\n                parse;\n\n            field = fields[field];\n            if (!field) {\n                field = getFieldByName(fields, fieldName);\n            }\n            if (field) {\n                parse = field.parse;\n                if (!parse && field.type) {\n                    parse = parsers[field.type.toLowerCase()];\n                }\n            }\n\n            return parse ? parse(value) : value;\n        },\n\n        _notifyChange: function(e) {\n            var action = e.action;\n\n            if (action == \"add\" || action == \"remove\") {\n                this.dirty = true;\n                this.dirtyFields[e.field] = true;\n            }\n        },\n\n        editable: function(field) {\n            field = (this.fields || {})[field];\n            return field ? field.editable !== false : true;\n        },\n\n        set: function(field, value) {\n            var that = this;\n            var dirty = that.dirty;\n\n            if (that.editable(field)) {\n                value = that._parse(field, value);\n\n                if (!equal(value, that.get(field))) {\n                    that.dirty = true;\n                    that.dirtyFields[field] = true;\n\n                    if (ObservableObject.fn.set.call(that, field, value) && !dirty) {\n                        that.dirty = dirty;\n\n                        if (!that.dirty) {\n                            that.dirtyFields[field] = false;\n                        }\n                    }\n                } else {\n                    that.trigger(\"equalSet\", { field: field, value: value });\n                }\n            }\n        },\n\n        accept: function(data) {\n            var that = this,\n                parent = function() { return that; },\n                field;\n\n            for (field in data) {\n                var value = data[field];\n\n                if (field.charAt(0) != \"_\") {\n                    value = that.wrap(data[field], field, parent);\n                }\n\n                that._set(field, value);\n            }\n\n            if (that.idField) {\n                that.id = that.get(that.idField);\n            }\n\n            that.dirty = false;\n            that.dirtyFields = {};\n        },\n\n        isNew: function() {\n            return this.id === this._defaultId;\n        }\n    });\n\n    Model.define = function(base, options) {\n        if (options === undefined$1) {\n            options = base;\n            base = Model;\n        }\n\n        var model,\n            proto = extend({ defaults: {} }, options),\n            name,\n            field,\n            type,\n            value,\n            idx,\n            length,\n            fields = {},\n            originalName,\n            id = proto.id,\n            functionFields = [];\n\n        if (id) {\n            proto.idField = id;\n        }\n\n        if (proto.id) {\n            delete proto.id;\n        }\n\n        if (id) {\n            proto.defaults[id] = proto._defaultId = \"\";\n        }\n\n        if (toString.call(proto.fields) === \"[object Array]\") {\n            for (idx = 0, length = proto.fields.length; idx < length; idx++) {\n                field = proto.fields[idx];\n                if (typeof field === STRING) {\n                    fields[field] = {};\n                } else if (field.field) {\n                    fields[field.field] = field;\n                }\n            }\n            proto.fields = fields;\n        }\n\n        for (name in proto.fields) {\n            field = proto.fields[name];\n            type = field.type || \"default\";\n            value = null;\n            originalName = name;\n\n            name = typeof (field.field) === STRING ? field.field : name;\n\n            if (!field.nullable || field.defaultValue) {\n                value = proto.defaults[originalName !== name ? originalName : name] = field.defaultValue !== undefined$1 ? field.defaultValue : defaultValues[type.toLowerCase()];\n\n                if (typeof value === \"function\") {\n                    functionFields.push(name);\n                }\n            }\n\n            if (options.id === name) {\n                proto._defaultId = value;\n            }\n\n            proto.defaults[originalName !== name ? originalName : name] = value;\n\n            if ($.isPlainObject(field)) {\n                field.parse = field.parse || parsers[type];\n            } else {\n                field = {\n                    parse: parsers[type]\n                };\n            }\n        }\n\n        if (functionFields.length > 0) {\n            proto._initializers = functionFields;\n        }\n\n        model = base.extend(proto);\n        model.define = function(options) {\n            return Model.define(model, options);\n        };\n\n        if (proto.fields) {\n            model.fields = proto.fields;\n            model.idField = proto.idField;\n        }\n\n        return model;\n    };\n\n    var Comparer = {\n        selector: function(field) {\n            return isFunction(field) ? field : getter(field);\n        },\n\n        compare: function(field) {\n            var selector = this.selector(field);\n            return function(a, b) {\n                a = selector(a);\n                b = selector(b);\n\n                if (a == null && b == null) {\n                    return 0;\n                }\n\n                if (a == null) {\n                    return -1;\n                }\n\n                if (b == null) {\n                    return 1;\n                }\n\n                if (a.localeCompare) {\n                    return a.localeCompare(b);\n                }\n\n                return a > b ? 1 : (a < b ? -1 : 0);\n            };\n        },\n\n        create: function(sort) {\n            var compare = sort.compare || this.compare(sort.field);\n\n            if (sort.dir == \"desc\") {\n                return function(a, b) {\n                    return compare(b, a, true);\n                };\n            }\n\n            return compare;\n        },\n\n        combine: function(comparers) {\n            return function(a, b) {\n                var result = comparers[0](a, b),\n                    idx,\n                    length;\n\n                for (idx = 1, length = comparers.length; idx < length; idx ++) {\n                    result = result || comparers[idx](a, b);\n                }\n\n                return result;\n            };\n        }\n    };\n\n    var StableComparer = extend({}, Comparer, {\n        asc: function(field) {\n            var selector = this.selector(field);\n            return function(a, b) {\n                var valueA = selector(a);\n                var valueB = selector(b);\n\n                if (valueA && valueA.getTime && valueB && valueB.getTime) {\n                    valueA = valueA.getTime();\n                    valueB = valueB.getTime();\n                }\n\n                if (valueA === valueB) {\n                    return a.__position - b.__position;\n                }\n\n                if (valueA == null) {\n                    return -1;\n                }\n\n                if (valueB == null) {\n                    return 1;\n                }\n\n                if (valueA.localeCompare) {\n                    return valueA.localeCompare(valueB);\n                }\n\n                return valueA > valueB ? 1 : -1;\n            };\n        },\n\n        desc: function(field) {\n            var selector = this.selector(field);\n            return function(a, b) {\n                var valueA = selector(a);\n                var valueB = selector(b);\n\n                if (valueA && valueA.getTime && valueB && valueB.getTime) {\n                    valueA = valueA.getTime();\n                    valueB = valueB.getTime();\n                }\n\n                if (valueA === valueB) {\n                    return a.__position - b.__position;\n                }\n\n                if (valueA == null) {\n                    return 1;\n                }\n\n                if (valueB == null) {\n                    return -1;\n                }\n\n                if (valueB.localeCompare) {\n                    return valueB.localeCompare(valueA);\n                }\n\n                return valueA < valueB ? 1 : -1;\n            };\n        },\n        create: function(sort) {\n           return this[sort.dir](sort.field);\n        }\n    });\n\n    map = function(array, callback) {\n        var idx, length = array.length, result = new Array(length);\n\n        for (idx = 0; idx < length; idx++) {\n            result[idx] = callback(array[idx], idx, array);\n        }\n\n        return result;\n    };\n\n    var operators = (function() {\n\n        function quote(str) {\n            if (typeof str == \"string\") {\n                str = str.replace(/[\\r\\n]+/g, \"\");\n            }\n            return JSON.stringify(str);\n        }\n\n        function textOp(impl) {\n            return function(a, b, ignore, accentFoldingFiltering) {\n                b += \"\";\n                if (ignore) {\n                    a = \"(\" + a + \" + '').toString()\" + ((accentFoldingFiltering) ? \".toLocaleLowerCase('\" + accentFoldingFiltering + \"')\" : \".toLowerCase()\");\n                    b = ((accentFoldingFiltering) ? b.toLocaleLowerCase(accentFoldingFiltering) : b.toLowerCase());\n                }\n                return impl(a, quote(b), ignore);\n            };\n        }\n\n        function operator(op, a, b, ignore, accentFoldingFiltering) {\n            if (b != null) {\n                if (typeof b === STRING) {\n                    var date = dateRegExp.exec(b);\n                    if (date) {\n                        b = new Date(+date[1]);\n                    } else if (ignore) {\n                        b = quote(((accentFoldingFiltering) ? b.toLocaleLowerCase(accentFoldingFiltering) : b.toLowerCase()));\n                        a = \"((\" + a + \" || '')+'')\" + ((accentFoldingFiltering) ? \".toLocaleLowerCase('\" + accentFoldingFiltering + \"')\" : \".toLowerCase()\");\n                    } else {\n                        b = quote(b);\n                    }\n                }\n\n                if (b.getTime) {\n                    //b looks like a Date\n                    a = \"(\" + a + \"&&\" + a + \".getTime?\" + a + \".getTime():\" + a + \")\";\n                    b = b.getTime();\n                }\n            }\n\n            return a + \" \" + op + \" \" + b;\n        }\n\n        function getMatchRegexp(pattern) {\n            // take a pattern, as supported by Excel match filter, and\n            // convert it to the equivalent JS regular expression.\n            // Excel patterns support:\n            //\n            //   * - match any sequence of characters\n            //   ? - match a single character\n            //\n            // to match a literal * or ?, they must be prefixed by a tilde (~)\n            for (var rx = \"/^\", esc = false, i = 0; i < pattern.length; ++i) {\n                var ch = pattern.charAt(i);\n                if (esc) {\n                    rx += \"\\\\\" + ch;\n                } else if (ch == \"~\") {\n                    esc = true;\n                    continue;\n                } else if (ch == \"*\") {\n                    rx += \".*\";\n                } else if (ch == \"?\") {\n                    rx += \".\";\n                } else if (\".+^$()[]{}|\\\\/\\n\\r\\u2028\\u2029\\xA0\".indexOf(ch) >= 0) {\n                    rx += \"\\\\\" + ch;\n                } else {\n                    rx += ch;\n                }\n                esc = false;\n            }\n            return rx + \"$/\";\n        }\n\n        return {\n            quote: function(value) {\n                if (value && value.getTime) {\n                    return \"new Date(\" + value.getTime() + \")\";\n                }\n                return quote(value);\n            },\n            eq: function(a, b, ignore, accentFoldingFiltering) {\n                return operator(\"==\", a, b, ignore, accentFoldingFiltering);\n            },\n            neq: function(a, b, ignore, accentFoldingFiltering) {\n                return operator(\"!=\", a, b, ignore, accentFoldingFiltering);\n            },\n            gt: function(a, b, ignore) {\n                return operator(\">\", a, b, ignore);\n            },\n            gte: function(a, b, ignore) {\n                return operator(\">=\", a, b, ignore);\n            },\n            lt: function(a, b, ignore) {\n                return operator(\"<\", a, b, ignore);\n            },\n            lte: function(a, b, ignore) {\n                return operator(\"<=\", a, b, ignore);\n            },\n            startswith: textOp(function(a, b) {\n                return a + \".lastIndexOf(\" + b + \", 0) == 0\";\n            }),\n            doesnotstartwith: textOp(function(a, b) {\n                return a + \".lastIndexOf(\" + b + \", 0) == -1\";\n            }),\n            endswith: textOp(function(a, b) {\n                var n = b ? b.length - 2 : 0;\n                return a + \".indexOf(\" + b + \", \" + a + \".length - \" + n + \") >= 0\";\n            }),\n            doesnotendwith: textOp(function(a, b) {\n                var n = b ? b.length - 2 : 0;\n                return a + \".indexOf(\" + b + \", \" + a + \".length - \" + n + \") < 0\";\n            }),\n            contains: textOp(function(a, b) {\n                return a + \".indexOf(\" + b + \") >= 0\";\n            }),\n            doesnotcontain: textOp(function(a, b) {\n                return a + \".indexOf(\" + b + \") == -1\";\n            }),\n            matches: textOp(function(a, b) {\n                b = b.substring(1, b.length - 1);\n                return getMatchRegexp(b) + \".test(\" + a + \")\";\n            }),\n            doesnotmatch: textOp(function(a, b) {\n                b = b.substring(1, b.length - 1);\n                return \"!\" + getMatchRegexp(b) + \".test(\" + a + \")\";\n            }),\n            isempty: function(a) {\n                return a + \" === ''\";\n            },\n            isnotempty: function(a) {\n                return a + \" !== ''\";\n            },\n            isnull: function(a) {\n                return \"(\" + a + \" == null)\";\n            },\n            isnotnull: function(a) {\n                return \"(\" + a + \" != null)\";\n            },\n            isnullorempty: function(a) {\n                return \"(\" + a + \" === null) || (\" + a + \" === '')\";\n            },\n            isnotnullorempty: function(a) {\n                return \"(\" + a + \" !== null) && (\" + a + \" !== '')\";\n            }\n        };\n    })();\n\n    function Query(data) {\n        this.data = data || [];\n    }\n\n    // Continue to support legacy unsafe-eval for the spreadsheet\n    Query.filterExpr = function(expression, options = { noEval: false }) {\n        if (options.noEval) {\n            // using no-eval for most cases\n            return filterExprNoEval(expression);\n        }\n\n        var expressions = [],\n            logic = { and: \" && \", or: \" || \" },\n            idx,\n            length,\n            filter,\n            expr,\n            fieldFunctions = [],\n            operatorFunctions = [],\n            field,\n            operator,\n            filters = expression.filters;\n\n        for (idx = 0, length = filters.length; idx < length; idx++) {\n            filter = filters[idx];\n            field = filter.field;\n            operator = filter.operator;\n\n            if (filter.filters) {\n                expr = Query.filterExpr(filter);\n                //Nested function fields or operators - update their index e.g. __o[0] -> __o[1]\n                filter = expr.expression\n                .replace(/__o\\[(\\d+)\\]/g, function(match, index) {\n                    index = +index;\n                    return \"__o[\" + (operatorFunctions.length + index) + \"]\";\n                })\n                .replace(/__f\\[(\\d+)\\]/g, function(match, index) {\n                    index = +index;\n                    return \"__f[\" + (fieldFunctions.length + index) + \"]\";\n                });\n\n                operatorFunctions.push.apply(operatorFunctions, expr.operators);\n                fieldFunctions.push.apply(fieldFunctions, expr.fields);\n            } else {\n                if (typeof field === FUNCTION) {\n                    expr = \"__f[\" + fieldFunctions.length + \"](d)\";\n                    fieldFunctions.push(field);\n                } else {\n                    expr = kendo.expr(field);\n                }\n\n                if (typeof operator === FUNCTION) {\n                    filter = \"__o[\" + operatorFunctions.length + \"](\" + expr + \", \" + operators.quote(filter.value) + \")\";\n                    operatorFunctions.push(operator);\n                } else {\n                    filter = operators[(operator || \"eq\").toLowerCase()](expr, filter.value, filter.ignoreCase !== undefined$1 ? filter.ignoreCase : true, expression.accentFoldingFiltering);\n                }\n            }\n\n            expressions.push(filter);\n        }\n\n        return { expression: \"(\" + expressions.join(logic[expression.logic]) + \")\", fields: fieldFunctions, operators: operatorFunctions };\n    };\n\n    function normalizeSort(field, dir) {\n        if (field) {\n            var descriptor = typeof field === STRING ? { field: field, dir: dir } : field,\n            descriptors = isArray(descriptor) ? descriptor : (descriptor !== undefined$1 ? [descriptor] : []);\n\n            return grep(descriptors, function(d) { return !!d.dir; });\n        }\n    }\n\n    function sortFields(sorts, dir) {\n        var sortObject = {};\n\n        if (sorts) {\n            var descriptor = typeof sorts === STRING ? { field: sorts, dir: dir } : sorts,\n            descriptors = isArray(descriptor) ? descriptor : (descriptor !== undefined$1 ? [descriptor] : []);\n\n            for (var i = 0; i < descriptors.length; i++) {\n                sortObject[descriptors[i].field] = { dir: descriptors[i].dir, index: i + 1 };\n            }\n        }\n\n        return sortObject;\n    }\n\n    var operatorMap = {\n        \"==\": \"eq\",\n        equals: \"eq\",\n        isequalto: \"eq\",\n        equalto: \"eq\",\n        equal: \"eq\",\n        \"!=\": \"neq\",\n        ne: \"neq\",\n        notequals: \"neq\",\n        isnotequalto: \"neq\",\n        notequalto: \"neq\",\n        notequal: \"neq\",\n        \"<\": \"lt\",\n        islessthan: \"lt\",\n        lessthan: \"lt\",\n        less: \"lt\",\n        \"<=\": \"lte\",\n        le: \"lte\",\n        islessthanorequalto: \"lte\",\n        lessthanequal: \"lte\",\n        \">\": \"gt\",\n        isgreaterthan: \"gt\",\n        greaterthan: \"gt\",\n        greater: \"gt\",\n        \">=\": \"gte\",\n        isgreaterthanorequalto: \"gte\",\n        greaterthanequal: \"gte\",\n        ge: \"gte\",\n        notsubstringof: \"doesnotcontain\",\n        isnull: \"isnull\",\n        isempty: \"isempty\",\n        isnotempty: \"isnotempty\"\n    };\n\n    function normalizeOperator(expression) {\n        var idx,\n        length,\n        filter,\n        operator,\n        filters = expression.filters;\n\n        if (filters) {\n            for (idx = 0, length = filters.length; idx < length; idx++) {\n                filter = filters[idx];\n                operator = filter.operator;\n\n                if (operator && typeof operator === STRING) {\n                    filter.operator = operatorMap[operator.toLowerCase()] || operator;\n                }\n\n                normalizeOperator(filter);\n            }\n        }\n    }\n\n    function normalizeFilter(expression) {\n        if (expression && !isEmptyObject(expression)) {\n            if (isArray(expression) || !expression.filters) {\n                expression = {\n                    logic: \"and\",\n                    filters: isArray(expression) ? expression : [expression]\n                };\n            }\n\n            normalizeOperator(expression);\n\n            return expression;\n        }\n    }\n\n    Query.normalizeFilter = normalizeFilter;\n\n    function compareDescriptor(f1, f2) {\n        if (f1.logic || f2.logic) {\n            return false;\n        }\n\n        return f1.field === f2.field && f1.value === f2.value && f1.operator === f2.operator;\n    }\n\n    function normalizeDescriptor(filter) {\n        filter = filter || {};\n\n        if (isEmptyObject(filter)) {\n            return { logic: \"and\", filters: [] };\n        }\n\n        return normalizeFilter(filter);\n    }\n\n    function fieldComparer(a, b) {\n        if (b.logic || (a.field > b.field)) {\n            return 1;\n        } else if (a.field < b.field) {\n            return -1;\n        } else {\n            return 0;\n        }\n    }\n\n    function hasNotFetchedItems(items, start, end) {\n        for (let idx = start; idx < end; idx++) {\n            if (items[idx].notFetched) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    function compareFilters(expr1, expr2) {\n        expr1 = normalizeDescriptor(expr1);\n        expr2 = normalizeDescriptor(expr2);\n\n        if (expr1.logic !== expr2.logic) {\n            return false;\n        }\n\n        var f1, f2;\n        var filters1 = (expr1.filters || []).slice();\n        var filters2 = (expr2.filters || []).slice();\n\n        if (filters1.length !== filters2.length) {\n            return false;\n        }\n\n        filters1 = filters1.sort(fieldComparer);\n        filters2 = filters2.sort(fieldComparer);\n\n        for (var idx = 0; idx < filters1.length; idx++) {\n            f1 = filters1[idx];\n            f2 = filters2[idx];\n\n            if (f1.logic && f2.logic) {\n                if (!compareFilters(f1, f2)) {\n                    return false;\n                }\n            } else if (!compareDescriptor(f1, f2)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    Query.compareFilters = compareFilters;\n\n    function normalizeAggregate(expressions) {\n        return isArray(expressions) ? expressions : [expressions];\n    }\n\n    function normalizeGroup(field, dir, compare, skipItemSorting) {\n        var descriptor = typeof field === STRING ? { field: field, dir: dir, compare: compare, skipItemSorting: skipItemSorting } : field,\n        descriptors = isArray(descriptor) ? descriptor : (descriptor !== undefined$1 ? [descriptor] : []);\n\n        return map(descriptors, function(d) {\n            return {\n                field: d.field,\n                dir: d.dir || \"asc\",\n                aggregates: d.aggregates,\n                compare: d.compare,\n                skipItemSorting: d.skipItemSorting\n            };\n        });\n    }\n\n    function normalizeGroupWithoutCompare(field, dir, compare) {\n        var descriptors = normalizeGroup(field, dir, compare);\n\n        for (var i = 0; i < descriptors.length; i++) {\n            delete descriptors[i].compare;\n        }\n\n        return descriptors;\n    }\n\n    function anyGroupDescriptorHasCompare(groupDescriptors) {\n        var descriptors = isArray(groupDescriptors) ? groupDescriptors : [groupDescriptors];\n\n        for (var i = 0; i < descriptors.length; i++) {\n            if (descriptors[i] && isFunction(descriptors[i].compare)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    Query.prototype = {\n        toArray: function() {\n            return this.data;\n        },\n        range: function(index, count) {\n            return new Query(this.data.slice(index, index + count));\n        },\n        skip: function(count) {\n            return new Query(this.data.slice(count));\n        },\n        take: function(count) {\n            return new Query(this.data.slice(0, count));\n        },\n        select: function(selector) {\n            return new Query(map(this.data, selector));\n        },\n        order: function(selector, dir, inPlace) {\n            var sort = { dir: dir };\n\n            if (selector) {\n                if (selector.compare) {\n                    sort.compare = selector.compare;\n                } else {\n                    sort.field = selector;\n                }\n            }\n\n            if (inPlace) {\n                return new Query(this.data.sort(Comparer.create(sort)));\n            }\n\n            return new Query(this.data.slice(0).sort(Comparer.create(sort)));\n        },\n        orderBy: function(selector, inPlace) {\n            return this.order(selector, \"asc\", inPlace);\n        },\n        orderByDescending: function(selector, inPlace) {\n            return this.order(selector, \"desc\", inPlace);\n        },\n        sort: function(field, dir, comparer, inPlace) {\n            var idx,\n            length,\n            descriptors = normalizeSort(field, dir),\n            comparers = [];\n\n            comparer = comparer || Comparer;\n\n            if (descriptors.length) {\n                for (idx = 0, length = descriptors.length; idx < length; idx++) {\n                    comparers.push(comparer.create(descriptors[idx]));\n                }\n\n                return this.orderBy({ compare: comparer.combine(comparers) }, inPlace);\n            }\n\n            return this;\n        },\n\n        filter: function(expressions) {\n            var compiled,\n            data = this.data,\n            result = [];\n\n            expressions = normalizeFilter(expressions);\n\n            if (!expressions || expressions.filters.length === 0) {\n                return this;\n            }\n\n            compiled = Query.filterExpr(expressions, { noEval: true });\n\n            result = data.filter(compiled);\n            return new Query(result);\n        },\n\n        group: function(descriptors, allData, options) {\n            descriptors = normalizeGroup(descriptors || []);\n            allData = allData || this.data;\n\n            var that = this,\n            result = new Query(that.data),\n            descriptor;\n\n            var getFilteredData = (g, data) => {\n                data = data || new Query(allData).filter([{\n                    field: g.field,\n                    operator: \"eq\",\n                    value: g.value,\n                    ignoreCase: false\n                }]);\n\n                return data;\n            };\n\n            if (descriptors.length > 0) {\n                descriptor = descriptors[0];\n\n                if (options && options.groupPaging) {\n                    result = new Query(allData).groupAllData(descriptor, allData).select(function(group) {\n                        var cachedFilteredData;\n\n                        var items = descriptors.length > 1 ? new Query(group.items).group(descriptors.slice(1), getFilteredData(group, cachedFilteredData).toArray(), options).toArray() : group.items;\n\n                        return {\n                            field: group.field,\n                            value: group.value,\n                            hasSubgroups: descriptors.length > 1,\n                            items: items,\n                            aggregates: descriptor.aggregates && descriptor.aggregates.length ? getFilteredData(group, cachedFilteredData).aggregate(descriptor.aggregates) : {},\n                            uid: kendo.guid(),\n                            itemCount: items.length,\n                            subgroupCount: items.length\n                        };\n                    });\n\n                } else {\n                    result = result.groupBy(descriptor).select(function(group) {\n                        var cachedFilteredData;\n                        return {\n                            field: group.field,\n                            value: group.value,\n                            items: descriptors.length > 1 ? new Query(group.items).group(descriptors.slice(1), getFilteredData(group, cachedFilteredData).toArray()).toArray() : group.items,\n                            hasSubgroups: descriptors.length > 1,\n                            aggregates: descriptor.aggregates && descriptor.aggregates.length ? getFilteredData(group, cachedFilteredData).aggregate(descriptor.aggregates) : {},\n                        };\n                    });\n                }\n            }\n            return result;\n        },\n\n        groupBy: function(descriptor) {\n            var that = this;\n\n            if (isEmptyObject(descriptor) || !this.data.length) {\n                return new Query([]);\n            }\n\n            var field = descriptor.field,\n                sorted = descriptor.skipItemSorting ? this.data : this._sortForGrouping(field, descriptor.dir || \"asc\"),\n                accessor = kendo.accessor(field),\n                item,\n                groupValue = accessor.get(sorted[0], field),\n                group = {\n                    field: field,\n                    value: groupValue,\n                    items: []\n                },\n                currentValue,\n                idx,\n                len,\n                result = [group];\n\n            for (idx = 0, len = sorted.length; idx < len; idx++) {\n                item = sorted[idx];\n                currentValue = accessor.get(item, field);\n                if (!groupValueComparer(groupValue, currentValue)) {\n                    groupValue = currentValue;\n                    group = {\n                        field: field,\n                        value: groupValue,\n                        items: []\n                    };\n                    result.push(group);\n                }\n                group.items.push(item);\n            }\n\n            result = that._sortGroups(result, descriptor);\n\n            return new Query(result);\n        },\n\n        groupAllData: function(descriptor, allData) {\n            if (isEmptyObject(descriptor) || this.data && !this.data.length) {\n                return new Query([]);\n            }\n\n            var field = descriptor.field,\n                sorted = descriptor.skipItemSorting ? allData : new Query(allData).sort(field, descriptor.dir || \"asc\", StableComparer).toArray(),\n                accessor = kendo.accessor(field),\n                item,\n                groupValue = accessor.get(sorted[0], field),\n                group = {\n                    field: field,\n                    value: groupValue,\n                    items: []\n                },\n                currentValue,\n                idx,\n                len,\n                result = [group];\n\n            for (idx = 0, len = sorted.length; idx < len; idx++) {\n                item = sorted[idx];\n                currentValue = accessor.get(item, field);\n                if (!groupValueComparer(groupValue, currentValue)) {\n                    groupValue = currentValue;\n                    group = {\n                        field: field,\n                        value: groupValue,\n                        items: []\n                    };\n                    result.push(group);\n                }\n                group.items.push(item);\n            }\n\n            result = this._sortGroups(result, descriptor);\n\n            return new Query(result);\n        },\n\n        _sortForGrouping: function(field, dir) {\n            var idx, length,\n                data = this.data;\n\n            if (!stableSort) {\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    data[idx].__position = idx;\n                }\n\n                data = new Query(data).sort(field, dir, StableComparer).toArray();\n\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    delete data[idx].__position;\n                }\n                return data;\n            }\n\n            return this.sort(field, dir).toArray();\n        },\n\n        _sortGroups: function(groups, descriptor) {\n            var result = groups;\n\n            if (descriptor && isFunction(descriptor.compare)) {\n                result = new Query(result).order({ compare: descriptor.compare }, descriptor.dir || ASCENDING).toArray();\n            }\n\n            return result;\n        },\n\n        aggregate: function(aggregates) {\n            var idx,\n                len,\n                result = {},\n                state = {};\n\n            if (aggregates && aggregates.length) {\n                for (idx = 0, len = this.data.length; idx < len; idx++) {\n                    calculateAggregate(result, aggregates, this.data[idx], idx, len, state);\n                }\n            }\n            return result;\n        }\n    };\n\n    function groupValueComparer(a, b) {\n        if (a && a.getTime && b && b.getTime) {\n            return a.getTime() === b.getTime();\n        }\n        return a === b;\n    }\n\n    function calculateAggregate(accumulator, aggregates, item, index, length, state) {\n        aggregates = aggregates || [];\n        var idx,\n            aggr,\n            functionName,\n            len = aggregates.length;\n\n        for (idx = 0; idx < len; idx++) {\n            aggr = aggregates[idx];\n            functionName = aggr.aggregate;\n            var field = aggr.field;\n            accumulator[field] = accumulator[field] || {};\n            state[field] = state[field] || {};\n            state[field][functionName] = state[field][functionName] || {};\n            accumulator[field][functionName] = functions[functionName.toLowerCase()](accumulator[field][functionName], item, kendo.accessor(field), index, length, state[field][functionName]);\n        }\n    }\n\n    var functions = {\n        sum: function(accumulator, item, accessor) {\n            var value = accessor.get(item);\n\n            if (!isNumber(accumulator)) {\n                accumulator = value;\n            } else if (isNumber(value)) {\n                accumulator += value;\n            }\n\n            return accumulator;\n        },\n        count: function(accumulator) {\n            return (accumulator || 0) + 1;\n        },\n        average: function(accumulator, item, accessor, index, length, state) {\n            var value = accessor.get(item);\n\n            if (state.count === undefined$1) {\n                state.count = 0;\n            }\n\n            if (!isNumber(accumulator)) {\n                accumulator = value;\n            } else if (isNumber(value)) {\n                accumulator += value;\n            }\n\n            if (isNumber(value)) {\n                state.count++;\n            }\n\n            if (index == length - 1 && isNumber(accumulator)) {\n                accumulator = accumulator / state.count;\n            }\n            return accumulator;\n        },\n        max: function(accumulator, item, accessor) {\n            var value = accessor.get(item);\n\n            if (!isNumber(accumulator) && !isDate(accumulator)) {\n                accumulator = value;\n            }\n\n            if (accumulator < value && (isNumber(value) || isDate(value))) {\n                accumulator = value;\n            }\n            return accumulator;\n        },\n        min: function(accumulator, item, accessor) {\n            var value = accessor.get(item);\n\n            if (!isNumber(accumulator) && !isDate(accumulator)) {\n                accumulator = value;\n            }\n\n            if (accumulator > value && (isNumber(value) || isDate(value))) {\n                accumulator = value;\n            }\n            return accumulator;\n        }\n    };\n\n    function isNumber(val) {\n        return typeof val === \"number\" && !isNaN(val);\n    }\n\n    function isDate(val) {\n        return val && val.getTime;\n    }\n\n    function toJSON(array) {\n        var idx, length = array.length, result = new Array(length);\n\n        for (idx = 0; idx < length; idx++) {\n            result[idx] = array[idx].toJSON();\n        }\n\n        return result;\n    }\n\n    Query.normalizeGroup = normalizeGroup;\n    Query.normalizeSort = normalizeSort;\n\n    Query.process = function(data, options, inPlace) {\n        options = options || {};\n\n        var group = options.group;\n        var customGroupSort = anyGroupDescriptorHasCompare(normalizeGroup(group || []));\n        var query = new Query(data),\n            groupDescriptorsWithoutCompare = normalizeGroupWithoutCompare(group || []),\n            normalizedSort = normalizeSort(options.sort || []),\n            sort = customGroupSort ? normalizedSort : groupDescriptorsWithoutCompare.concat(normalizedSort),\n            groupDescriptorsWithoutSort,\n            total,\n            filterCallback = options.filterCallback,\n            filter = options.filter,\n            skip = options.skip,\n            take = options.take;\n\n        if (sort && inPlace) {\n            query = query.sort(sort, undefined$1, undefined$1, inPlace);\n        }\n\n        if (filter) {\n            query = query.filter(filter);\n\n            if (filterCallback) {\n                query = filterCallback(query);\n            }\n\n            total = query.toArray().length;\n        }\n\n        if (sort) {\n            if (!inPlace) {\n                query = query.sort(sort);\n            }\n\n            if (group) {\n                data = query.toArray();\n            }\n        }\n\n        if (customGroupSort) {\n            query = query.group(group, data, options);\n\n            if (skip !== undefined$1 && take !== undefined$1 && !options.groupPaging) {\n                query = new Query(flatGroups(query.toArray())).range(skip, take);\n\n                groupDescriptorsWithoutSort = map(groupDescriptorsWithoutCompare, function(groupDescriptor) {\n                    return extend({}, groupDescriptor, {\n                        skipItemSorting: true\n                    });\n                });\n\n                query = query.group(groupDescriptorsWithoutSort, data, options);\n            }\n        } else {\n            if (skip !== undefined$1 && take !== undefined$1) {\n                total = query.data.length;\n\n                if (skip + take > total && options.virtual) {\n                    skip -= skip + take - total;\n                    skip = skip < 0 ? 0 : skip;\n                }\n                query = query.range(skip, take);\n            }\n\n            if (group && (!isEmptyObject(group) || group.length !== 0)) {\n                query = query.group(group, data, options);\n            }\n        }\n\n        return {\n            total: total,\n            data: query.toArray()\n        };\n    };\n\n    var LocalTransport = Class.extend({\n        init: function(options) {\n            this.data = options.data;\n        },\n\n        read: function(options) {\n            options.success(this.data);\n        },\n        update: function(options) {\n            options.success(options.data);\n        },\n        create: function(options) {\n            options.success(options.data);\n        },\n        destroy: function(options) {\n            options.success(options.data);\n        }\n    });\n\n    var RemoteTransport = Class.extend( {\n        init: function(options) {\n            var that = this, parameterMap;\n\n            options = that.options = extend({}, that.options, options);\n\n            each(crud, function(index, type) {\n                if (typeof options[type] === STRING) {\n                    options[type] = {\n                        url: options[type]\n                    };\n                }\n            });\n\n            that.cache = options.cache ? Cache.create(options.cache) : {\n                find: noop,\n                add: noop\n            };\n\n            parameterMap = options.parameterMap;\n\n            if (options.submit) {\n                that.submit = options.submit;\n            }\n\n            if (isFunction(options.push)) {\n                that.push = options.push;\n            }\n\n            if (!that.push) {\n                that.push = identity;\n            }\n\n            that.parameterMap = isFunction(parameterMap) ? parameterMap : function(options) {\n                var result = {};\n\n                each(options, function(option, value) {\n                    if (option in parameterMap) {\n                        option = parameterMap[option];\n                        if (isPlainObject(option)) {\n                            value = option.value(value);\n                            option = option.key;\n                        }\n                    }\n\n                    result[option] = value;\n                });\n\n                return result;\n            };\n        },\n\n        options: {\n            parameterMap: identity\n        },\n\n        create: function(options) {\n            return ajax(this.setup(options, CREATE));\n        },\n\n        read: function(options) {\n            var that = this,\n                success,\n                error,\n                result,\n                cache = that.cache;\n\n            options = that.setup(options, READ);\n\n            success = options.success || noop;\n            error = options.error || noop;\n\n            result = cache.find(options.data);\n\n            if (result !== undefined$1) {\n                success(result);\n            } else {\n                options.success = function(result) {\n                    cache.add(options.data, result);\n\n                    success(result);\n                };\n\n                $.ajax(options);\n            }\n        },\n\n        update: function(options) {\n            return ajax(this.setup(options, UPDATE));\n        },\n\n        destroy: function(options) {\n            return ajax(this.setup(options, DESTROY));\n        },\n\n        setup: function(options, type) {\n            options = options || {};\n\n            var that = this,\n                parameters,\n                operation = that.options[type],\n                data = isFunction(operation.data) ? operation.data(options.data) : operation.data;\n\n            options = extend(true, {}, operation, options);\n            parameters = extend(true, {}, data, options.data);\n\n            options.data = that.parameterMap(parameters, type);\n\n            if (isFunction(options.url)) {\n                options.url = options.url(parameters);\n            }\n\n            return options;\n        }\n    });\n\n    var Cache = Class.extend({\n        init: function() {\n            this._store = {};\n        },\n        add: function(key, data) {\n            if (key !== undefined$1) {\n                this._store[stringify(key)] = data;\n            }\n        },\n        find: function(key) {\n            return this._store[stringify(key)];\n        },\n        clear: function() {\n            this._store = {};\n        },\n        remove: function(key) {\n            delete this._store[stringify(key)];\n        }\n    });\n\n    Cache.create = function(options) {\n        var store = {\n            \"inmemory\": function() { return new Cache(); }\n        };\n\n        if (isPlainObject(options) && isFunction(options.find)) {\n            return options;\n        }\n\n        if (options === true) {\n            return new Cache();\n        }\n\n        return store[options]();\n    };\n\n    function serializeRecords(data, getters, modelInstance, originalFieldNames, fieldNames) {\n        var record,\n            getter,\n            originalName,\n            idx,\n            setters = {},\n            length;\n\n        for (idx = 0, length = data.length; idx < length; idx++) {\n            record = data[idx];\n            for (getter in getters) {\n                originalName = fieldNames[getter];\n\n                if (originalName && originalName !== getter) {\n                    if (!setters[originalName]) {\n                        setters[originalName] = kendo.setter(originalName);\n                    }\n                    setters[originalName](record, getters[getter](record));\n                    delete record[getter];\n                }\n            }\n        }\n    }\n\n    function convertRecords(data, getters, modelInstance, originalFieldNames, fieldNames) {\n        var record,\n            getter,\n            originalName,\n            idx,\n            length;\n\n        for (idx = 0, length = data.length; idx < length; idx++) {\n            record = data[idx];\n            for (getter in getters) {\n                record[getter] = modelInstance._parse(getter, getters[getter](record));\n\n                originalName = fieldNames[getter];\n                if (originalName && originalName !== getter) {\n                    delete record[originalName];\n                }\n            }\n        }\n    }\n\n    function convertGroup(data, getters, modelInstance, originalFieldNames, fieldNames) {\n        var record,\n            idx,\n            fieldName,\n            length;\n\n        for (idx = 0, length = data.length; idx < length; idx++) {\n            record = data[idx];\n\n            fieldName = originalFieldNames[record.field];\n            if (fieldName && fieldName != record.field) {\n                record.field = fieldName;\n            }\n\n            record.value = modelInstance._parse(record.field, record.value);\n\n            if (record.items) {\n                if (record.hasSubgroups) {\n                    convertGroup(record.items, getters, modelInstance, originalFieldNames, fieldNames);\n                } else {\n                    convertRecords(record.items, getters, modelInstance, originalFieldNames, fieldNames);\n                }\n            }\n        }\n    }\n\n    function wrapDataAccess(originalFunction, model, converter, getters, originalFieldNames, fieldNames) {\n        return function(data) {\n            data = originalFunction(data);\n\n            return wrapDataAccessBase(model, converter, getters, originalFieldNames, fieldNames)(data);\n        };\n    }\n\n    function wrapDataAccessBase(model, converter, getters, originalFieldNames, fieldNames) {\n        return function(data) {\n\n            if (data && !isEmptyObject(getters)) {\n                if (toString.call(data) !== \"[object Array]\" && !(data instanceof ObservableArray)) {\n                    data = [data];\n                }\n\n                converter(data, getters, new model(), originalFieldNames, fieldNames);\n            }\n\n            return data || [];\n        };\n    }\n\n    var DataReader = Class.extend({\n        init: function(schema) {\n            var that = this, member, get, model, base;\n\n            schema = schema || {};\n\n            for (member in schema) {\n                get = schema[member];\n\n                that[member] = typeof get === STRING ? getter(get) : get;\n            }\n\n            base = schema.modelBase || Model;\n\n            if (isPlainObject(that.model)) {\n                that.model = model = base.define(that.model);\n            }\n\n            var dataFunction = that.data.bind(that);\n\n            that._dataAccessFunction = dataFunction;\n\n            if (that.model) {\n                var groupsFunction = that.groups.bind(that),\n                    serializeFunction = that.serialize.bind(that),\n                    originalFieldNames = {},\n                    getters = {},\n                    serializeGetters = {},\n                    fieldNames = {},\n                    shouldSerialize = false,\n                    fieldName,\n                    name;\n\n                model = that.model;\n\n                if (model.fields) {\n                    each(model.fields, function(field, value) {\n                        var fromName;\n\n                        fieldName = field;\n\n                        if (isPlainObject(value) && value.field) {\n                            fieldName = value.field;\n                        } else if (typeof value === STRING) {\n                            fieldName = value;\n                        }\n\n                        if (isPlainObject(value) && value.from) {\n                            fromName = value.from;\n                        }\n\n                        shouldSerialize = shouldSerialize || (fromName && fromName !== field) || fieldName !== field;\n                        name = fromName || fieldName;\n                        getters[field] = name.indexOf(\".\") !== -1 ? getter(name, true) : getter(name);\n                        serializeGetters[field] = getter(field);\n                        originalFieldNames[fromName || fieldName] = field;\n                        fieldNames[field] = fromName || fieldName;\n                    });\n\n                    if (!schema.serialize && shouldSerialize) {\n                        that.serialize = wrapDataAccess(serializeFunction, model, serializeRecords, serializeGetters, originalFieldNames, fieldNames);\n                    }\n                }\n\n                that._dataAccessFunction = dataFunction;\n                that._wrapDataAccessBase = wrapDataAccessBase(model, convertRecords, getters, originalFieldNames, fieldNames);\n                that.data = wrapDataAccess(dataFunction, model, convertRecords, getters, originalFieldNames, fieldNames);\n                that.groups = wrapDataAccess(groupsFunction, model, convertGroup, getters, originalFieldNames, fieldNames);\n            }\n        },\n        errors: function(data) {\n            return data ? data.errors : null;\n        },\n        parse: identity,\n        data: identity,\n        total: function(data) {\n            return data.length;\n        },\n        groups: identity,\n        aggregates: function() {\n            return {};\n        },\n        serialize: function(data) {\n            return data;\n        }\n    });\n\n    function fillLastGroup(originalGroup, newGroup) {\n        var currOriginal;\n        var currentNew;\n\n        if (newGroup.items && newGroup.items.length) {\n            for (var i = 0; i < newGroup.items.length; i++) {\n                currOriginal = originalGroup.items[originalGroup.items.length - 1];\n                currentNew = newGroup.items[i];\n                if (currOriginal && currentNew) {\n                    if (currOriginal.hasSubgroups && currOriginal.value == currentNew.value) {\n                        fillLastGroup(currOriginal, currentNew);\n                    } else if (currOriginal.field && currOriginal.value == currentNew.value) {\n                        currOriginal.items.omitChangeEvent = true;\n                        currOriginal.items.push.apply(currOriginal.items, currentNew.items);\n                        currOriginal.items.omitChangeEvent = false;\n                    } else {\n                        originalGroup.items.omitChangeEvent = true;\n                        originalGroup.items.push.apply(originalGroup.items, [currentNew]);\n                        originalGroup.items.omitChangeEvent = false;\n                    }\n                } else if (currentNew) {\n                    originalGroup.items.omitChangeEvent = true;\n                    originalGroup.items.push.apply(originalGroup.items, [currentNew]);\n                    originalGroup.items.omitChangeEvent = false;\n                }\n            }\n        }\n    }\n    function mergeGroups(target, dest, skip, take) {\n        var group,\n            idx = 0,\n            items;\n\n        while (dest.length && take) {\n            group = dest[idx];\n            items = group.items;\n\n            var length = items.length;\n\n            if (target && target.field === group.field && target.value === group.value) {\n                if (target.hasSubgroups && target.items.length) {\n                    mergeGroups(target.items[target.items.length - 1], group.items, skip, take);\n                } else {\n                    items = items.slice(skip, skip + take);\n                    target.items = target.items.concat(items);\n                }\n                dest.splice(idx--, 1);\n            } else if (group.hasSubgroups && items.length) {\n                mergeGroups(group, items, skip, take);\n                if (!group.items.length) {\n                    dest.splice(idx--, 1);\n                }\n            } else {\n                items = items.slice(skip, skip + take);\n                group.items = items;\n\n                if (!group.items.length) {\n                    dest.splice(idx--, 1);\n                }\n            }\n\n            if (items.length === 0) {\n                skip -= length;\n            } else {\n                skip = 0;\n                take -= items.length;\n            }\n\n            if (++idx >= dest.length) {\n                break;\n            }\n        }\n\n        if (idx < dest.length) {\n            dest.splice(idx, dest.length - idx);\n        }\n    }\n\n    function flatGroups(groups, indexFunction) {\n        var result = [];\n        var groupsLength = (groups || []).length;\n        var group;\n        var items;\n        var indexFn = isFunction(indexFunction) ? indexFunction : function(array, index) {\n            return array[index];\n        };\n\n        for (var groupIndex = 0; groupIndex < groupsLength; groupIndex++) {\n            group = indexFn(groups, groupIndex);\n\n            if (group.hasSubgroups) {\n                result = result.concat(flatGroups(group.items));\n            } else {\n                items = group.items;\n\n                for (var itemIndex = 0; itemIndex < items.length; itemIndex++) {\n                    result.push(indexFn(items, itemIndex));\n                }\n            }\n        }\n        return result;\n    }\n\n    function flattenGroups(data) {\n        var idx,\n            result = [],\n            length,\n            items,\n            itemIndex;\n\n        for (idx = 0, length = data.length; idx < length; idx++) {\n            var group = data.at(idx);\n            if (group.items) {\n                if (group.hasSubgroups) {\n                    result = result.concat(flattenGroups(group.items));\n                } else {\n                    items = group.items;\n                    for (itemIndex = 0; itemIndex < items.length; itemIndex++) {\n                        result.push(items.at(itemIndex));\n                    }\n                }\n            }\n        }\n        return result;\n    }\n\n    function wrapGroupItems(data, model) {\n        var idx, length, group;\n        if (model) {\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                group = data.at(idx);\n                if (group.items) {\n                    if (group.hasSubgroups) {\n                        wrapGroupItems(group.items, model);\n                    } else {\n                        group.items = new LazyObservableArray(group.items, model, group.items._events);\n                    }\n                }\n            }\n        }\n    }\n\n    function eachGroupItems(data, func) {\n        for (var idx = 0; idx < data.length; idx++) {\n            if (data[idx].hasSubgroups) {\n                if (eachGroupItems(data[idx].items, func)) {\n                    return true;\n                }\n            } else if (func(data[idx].items, data[idx])) {\n                return true;\n            }\n        }\n    }\n\n    function replaceInRanges(ranges, data, item, observable) {\n        for (var idx = 0; idx < ranges.length; idx++) {\n            if (ranges[idx].data === data) {\n                break;\n            }\n            if (replaceInRange(ranges[idx].data, item, observable)) {\n                break;\n            }\n        }\n    }\n\n    function replaceInRange(items, item, observable) {\n        for (var idx = 0, length = items.length; idx < length; idx++) {\n            if (items[idx] && items[idx].hasSubgroups) {\n                return replaceInRange(items[idx].items, item, observable);\n            } else if (items[idx] === item || items[idx] === observable) {\n               items[idx] = observable;\n               return true;\n            }\n        }\n    }\n\n    function replaceWithObservable(view, data, ranges, type, serverGrouping) {\n        for (var viewIndex = 0, length = view.length; viewIndex < length; viewIndex++) {\n            var item = view[viewIndex];\n\n            if (!item || item instanceof type) {\n                continue;\n            }\n\n            if (item.hasSubgroups !== undefined$1 && !serverGrouping) {\n                replaceWithObservable(item.items, data, ranges, type, serverGrouping);\n            } else {\n                for (var idx = 0; idx < data.length; idx++) {\n                    if (data[idx] === item) {\n                        view[viewIndex] = data.at(idx);\n                        replaceInRanges(ranges, data, item, view[viewIndex]);\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    function removeModel(data, model) {\n        if (!data) {\n            return;\n        }\n        var length = data.length;\n        var dataItem;\n        var idx;\n\n        for (idx = 0; idx < length; idx++) {\n            dataItem = data[idx];\n\n            if (dataItem.uid && dataItem.uid == model.uid) {\n                data.splice(idx, 1);\n                return dataItem;\n            }\n        }\n    }\n\n    function indexOfPristineModel(data, model) {\n        if (model) {\n            return indexOf(data, function(item) {\n                return (item.uid && item.uid == model.uid) || (item[model.idField] === model.id && model.id !== model._defaultId);\n            });\n        }\n        return -1;\n    }\n\n    function indexOfModel(data, model) {\n        if (model) {\n            return indexOf(data, function(item) {\n                return item.uid == model.uid;\n            });\n        }\n        return -1;\n    }\n\n    function indexOf(data, comparer) {\n        var idx, length;\n        if (!data) {\n            return;\n        }\n\n        for (idx = 0, length = data.length; idx < length; idx++) {\n            if (comparer(data[idx])) {\n                return idx;\n            }\n        }\n\n        return -1;\n    }\n\n    function fieldNameFromModel(fields, name) {\n        if (fields && !isEmptyObject(fields)) {\n            var descriptor = fields[name];\n            var fieldName;\n            if (isPlainObject(descriptor)) {\n                fieldName = descriptor.from || descriptor.field || name;\n            } else {\n                fieldName = fields[name] || name;\n            }\n\n            if (isFunction(fieldName)) {\n                return name;\n            }\n\n            return fieldName;\n        }\n        return name;\n    }\n\n    function convertFilterDescriptorsField(descriptor, model) {\n        var idx,\n            length,\n            target = {};\n\n        for (var field in descriptor) {\n            if (field !== \"filters\") {\n                target[field] = descriptor[field];\n            }\n        }\n\n        if (descriptor.filters) {\n            target.filters = [];\n            for (idx = 0, length = descriptor.filters.length; idx < length; idx++) {\n                target.filters[idx] = convertFilterDescriptorsField(descriptor.filters[idx], model);\n            }\n        } else {\n            target.field = fieldNameFromModel(model.fields, target.field);\n        }\n        return target;\n    }\n\n    function convertDescriptorsField(descriptors, model) {\n        var idx,\n            length,\n            result = [],\n            target,\n            descriptor;\n\n        for (idx = 0, length = descriptors.length; idx < length; idx ++) {\n            target = {};\n\n            descriptor = descriptors[idx];\n\n            for (var field in descriptor) {\n                target[field] = descriptor[field];\n            }\n\n            target.field = fieldNameFromModel(model.fields, target.field);\n\n            if (target.aggregates && isArray(target.aggregates)) {\n                target.aggregates = convertDescriptorsField(target.aggregates, model);\n            }\n            result.push(target);\n        }\n        return result;\n    }\n\n    var DataSource = Observable.extend({\n        init: function(options) {\n            var that = this, model, data;\n\n            if (options) {\n                data = options.data;\n            }\n\n            options = that.options = extend({}, that.options, options);\n\n            that._map = {};\n            that._prefetch = {};\n            that._data = [];\n            that._pristineData = [];\n            that._ranges = [];\n            that._view = [];\n            that._pristineTotal = 0;\n            that._destroyed = [];\n            that._pageSize = options.pageSize;\n            that._page = options.page || (options.pageSize ? 1 : undefined$1);\n            that._sort = normalizeSort(options.sort);\n            that._sortFields = sortFields(options.sort);\n            that._filter = normalizeFilter(options.filter);\n            that._group = normalizeGroup(options.group);\n            that._aggregate = options.aggregate;\n            that._total = options.total;\n            that._groupPaging = options.groupPaging;\n\n            if (that._groupPaging) {\n                that._groupsState = {};\n            }\n            that._shouldDetachObservableParents = true;\n\n            Observable.fn.init.call(that);\n\n            that.transport = Transport.create(options, data, that);\n\n            if (isFunction(that.transport.push)) {\n                that.transport.push({\n                    pushCreate: that._pushCreate.bind(that),\n                    pushUpdate: that._pushUpdate.bind(that),\n                    pushDestroy: that._pushDestroy.bind(that)\n                });\n            }\n\n            if (options.offlineStorage != null) {\n                if (typeof options.offlineStorage == \"string\") {\n                    var key = options.offlineStorage;\n\n                    that._storage = {\n                        getItem: function() {\n                            return JSON.parse(localStorage.getItem(key));\n                        },\n                        setItem: function(item) {\n                            localStorage.setItem(key, stringify(that.reader.serialize(item)));\n                        }\n                    };\n                } else {\n                    that._storage = options.offlineStorage;\n                }\n            }\n\n            that.reader = new kendo.data.readers[options.schema.type || \"json\" ](options.schema);\n\n            model = that.reader.model || {};\n\n            that._detachObservableParents();\n\n            that._data = that._observe(that._data);\n            that._online = true;\n\n            that.bind([\"push\", ERROR, CHANGE, REQUESTSTART, SYNC, REQUESTEND, PROGRESS], options);\n        },\n\n        options: {\n            data: null,\n            schema: {\n               modelBase: Model\n            },\n            offlineStorage: null,\n            serverSorting: false,\n            serverPaging: false,\n            serverFiltering: false,\n            serverGrouping: false,\n            serverAggregates: false,\n            batch: false,\n            inPlaceSort: false\n        },\n\n        clone: function() {\n            return this;\n        },\n\n        online: function(value) {\n            if (value !== undefined$1) {\n                if (this._online != value) {\n                    this._online = value;\n\n                    if (value) {\n                        return this.sync();\n                    }\n                }\n\n                return $.Deferred().resolve().promise();\n            } else {\n                return this._online;\n            }\n        },\n\n        offlineData: function(state) {\n            if (this.options.offlineStorage == null) {\n                return null;\n            }\n\n            if (state !== undefined$1) {\n                return this._storage.setItem(state);\n            }\n\n            return this._storage.getItem() || [];\n        },\n\n        _isGrouped: function() {\n            var group = this.group() || [];\n\n            return group.length;\n        },\n\n        _isServerGrouped: function() {\n            var group = this.group() || [];\n\n            return this.options.serverGrouping && group.length;\n        },\n\n        _isServerGroupPaged: function() {\n            return this._isServerGrouped() && this._groupPaging;\n        },\n\n        _isGroupPaged: function() {\n            var group = this._group || [];\n\n            return this._groupPaging && group.length;\n        },\n\n        _pushCreate: function(result) {\n            this._push(result, \"pushCreate\");\n        },\n\n        _pushUpdate: function(result) {\n            this._push(result, \"pushUpdate\");\n        },\n\n        _pushDestroy: function(result) {\n            this._push(result, \"pushDestroy\");\n        },\n\n        _push: function(result, operation) {\n            var data = this._readData(result);\n\n            if (!data) {\n                data = result;\n            }\n\n            this[operation](data);\n        },\n\n        _flatData: function(data, skip) {\n            if (data) {\n                if (this._isServerGrouped()) {\n                    return flattenGroups(data);\n                }\n\n                if (!skip) {\n                    for (var idx = 0; idx < data.length; idx++) {\n                        data.at(idx);\n                    }\n                }\n            }\n\n            return data;\n        },\n\n        parent: noop,\n\n        get: function(id) {\n            var idx, length, data = this._flatData(this._data, this.options.useRanges);\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                if (data[idx].id == id) {\n                    return data[idx];\n                }\n            }\n        },\n\n        getByUid: function(id) {\n            return this._getByUid(id, this._data);\n        },\n\n        _getByUid: function(id, dataItems) {\n            var idx, length, data = this._flatData(dataItems, this.options.useRanges);\n\n            if (!data) {\n                return;\n            }\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                if (data[idx].uid == id) {\n                    return data[idx];\n                }\n            }\n        },\n\n        indexOf: function(model) {\n            return indexOfModel(this._data, model);\n        },\n\n        at: function(index) {\n            return this._data.at(index);\n        },\n\n        data: function(value) {\n            var that = this;\n            if (value !== undefined$1) {\n                that._detachObservableParents();\n                that._data = this._observe(value);\n\n                that._pristineData = value.slice(0);\n\n                that._storeData();\n\n                that._ranges = [];\n                that.trigger(\"reset\");\n                that._addRange(that._data);\n\n                that._total = that._data.length;\n                that._pristineTotal = that._total;\n\n                that._process(that._data);\n            } else {\n                if (that._data) {\n                    for (var idx = 0; idx < that._data.length; idx++) {\n                        that._data.at(idx);\n                    }\n                }\n\n                return that._data;\n            }\n        },\n\n        view: function(value) {\n            if (value === undefined$1) {\n                return this._view;\n            } else {\n                this._view = this._observeView(value);\n            }\n        },\n\n        _observeView: function(data) {\n            var that = this;\n            replaceWithObservable(data, that._data, that._ranges, that.reader.model || ObservableObject, that._isServerGrouped());\n\n            var view = new LazyObservableArray(data, that.reader.model);\n            view.parent = function() { return that.parent(); };\n            return view;\n        },\n\n        flatView: function() {\n            var groups = this.group() || [];\n\n            if (groups.length) {\n                return flattenGroups(this._view);\n            } else {\n                return this._view;\n            }\n        },\n\n        add: function(model) {\n            return this.insert(this._data.length, model);\n        },\n\n        _createNewModel: function(model) {\n            if (this.reader.model) {\n                return new this.reader.model(model);\n            }\n\n            if (model instanceof ObservableObject) {\n                return model;\n            }\n\n            return new ObservableObject(model);\n        },\n\n        insert: function(index, model) {\n            if (!model) {\n                model = index;\n                index = 0;\n            }\n\n            if (!(model instanceof Model)) {\n                model = this._createNewModel(model);\n            }\n\n            if (this._isServerGrouped()) {\n                this._data.splice(index, 0, this._wrapInEmptyGroup(model));\n            } else {\n                this._data.splice(index, 0, model);\n            }\n\n            this._insertModelInRange(index, model);\n\n            return model;\n        },\n\n        pushInsert: function(index, items) {\n            var that = this;\n            var rangeSpan = that._getCurrentRangeSpan();\n\n            if (!items) {\n                items = index;\n                index = 0;\n            }\n\n            if (!isArray(items)) {\n                items = [items];\n            }\n\n            var pushed = [];\n            var autoSync = this.options.autoSync;\n            this.options.autoSync = false;\n\n            try {\n                for (var idx = 0; idx < items.length; idx ++) {\n                    var item = items[idx];\n\n                    var result = this.insert(index, item);\n\n                    pushed.push(result);\n\n                    var pristine = result.toJSON();\n\n                    if (this._isServerGrouped()) {\n                        pristine = this._wrapInEmptyGroup(pristine);\n                    }\n\n                    this._pristineData.push(pristine);\n\n                    if (rangeSpan && rangeSpan.length) {\n                        $(rangeSpan).last()[0].pristineData.push(pristine);\n                    }\n\n                    index++;\n                }\n            } finally {\n                this.options.autoSync = autoSync;\n            }\n\n            if (pushed.length) {\n                this.trigger(\"push\", {\n                    type: \"create\",\n                    items: pushed\n                });\n            }\n        },\n\n        pushCreate: function(items) {\n            this.pushInsert(this._data.length, items);\n        },\n\n        pushUpdate: function(items) {\n            if (!isArray(items)) {\n                items = [items];\n            }\n\n            var pushed = [];\n\n            for (var idx = 0; idx < items.length; idx ++) {\n                var item = items[idx];\n                var model = this._createNewModel(item);\n\n                var target = this.get(model.id);\n\n                if (target) {\n                    pushed.push(target);\n\n                    target.accept(item);\n\n                    target.trigger(CHANGE);\n\n                    this._updatePristineForModel(target, item);\n                } else {\n                    this.pushCreate(item);\n                }\n            }\n\n            if (pushed.length) {\n                this.trigger(\"push\", {\n                    type: \"update\",\n                    items: pushed\n                });\n            }\n        },\n\n        pushDestroy: function(items) {\n            var pushed = this._removeItems(items);\n\n            if (pushed.length) {\n                this.trigger(\"push\", {\n                    type: \"destroy\",\n                    items: pushed\n                });\n            }\n        },\n\n        _removeItems: function(itemsToRemove, removePristine) {\n            if (!isArray(itemsToRemove)) {\n                itemsToRemove = [itemsToRemove];\n            }\n\n            var shouldRemovePristine = typeof removePristine !== \"undefined\" ? removePristine : true;\n\n            var destroyed = [];\n            var autoSync = this.options.autoSync;\n            this.options.autoSync = false;\n            try {\n                for (var idx = 0; idx < itemsToRemove.length; idx ++) {\n                    var item = itemsToRemove[idx];\n                    var model = this._createNewModel(item);\n                    var found = false;\n                    var index = idx;\n\n                    this._eachItem(this._data, function(items) {\n                        // Ensure all children of a parent are removed before the change event is triggered.\n                        if (index !== itemsToRemove.length - 1) {\n                            items.omitChangeEvent = true;\n                            items.omitCache = [];\n                        } else {\n                            items.omitChangeEvent = false;\n                        }\n\n                        for (var idx = 0; idx < items.length; idx++) {\n                            var item = items.at(idx);\n                            if (item.id === model.id) {\n                                /* When the change event is omitted, certain calculations such as 'total' are broken because only the last item reaches the change handler.\n                                   Keep track of all child items that had their change event omitted and when the change is finally triggered, concat them to the result.*/\n                                if (items.omitChangeEvent) {\n                                    items.omitCache.push(item);\n                                }\n                                destroyed.push(item);\n                                items.splice(idx, 1);\n                                found = true;\n                                break;\n                            }\n                        }\n                    });\n\n                    if (found && shouldRemovePristine) {\n                        this._removePristineForModel(model);\n                        this._destroyed.pop();\n                    }\n                }\n            } finally {\n                this.options.autoSync = autoSync;\n            }\n\n            return destroyed;\n        },\n\n        pushMove: function(index, items) {\n            var pushed = this._moveItems(index, items);\n\n            if (pushed.length) {\n                this.trigger(\"push\", {\n                    type: \"update\",\n                    items: pushed\n                });\n            }\n        },\n\n        _moveItems: function(index, items) {\n            if (!isArray(items)) {\n                items = [items];\n            }\n\n            var moved = [];\n            var autoSync = this.options.autoSync;\n            this.options.autoSync = false;\n\n            try {\n                for (var i = 0; i < items.length; i ++) {\n                    var item = items[i];\n\n                    this._eachItem(this._data, function(dataItems) {\n                        for (var idx = 0; idx < dataItems.length; idx++) {\n                            var dataItem = dataItems.at(idx);\n                            if (dataItem.uid === item.uid) {\n                                moved.push(dataItem);\n                                dataItems.splice(index >= idx ? --index : index, 0, dataItems.splice(idx, 1)[0]);\n                                index++;\n                                break;\n                            }\n                        }\n                    });\n                }\n            } finally {\n                this.options.autoSync = autoSync;\n            }\n\n            return moved;\n        },\n\n        remove: function(model) {\n            var result,\n                that = this,\n                hasGroups = that._isServerGrouped();\n\n            if (hasGroups && model.uid && (!model.isNew || !model.isNew())) {\n                that._pushInDestroyed(model);\n            }\n\n            this._eachItem(that._data, function(items) {\n                result = removeModel(items, model);\n\n                if (result && hasGroups) {\n                    return true;\n                }\n            });\n\n            this._removeModelFromRanges(model);\n\n            return model;\n        },\n\n        destroyed: function() {\n            return this._destroyed;\n        },\n\n        created: function() {\n            var idx,\n                length,\n                result = [],\n                data = this._flatData(this._data, this.options.useRanges);\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                if (data[idx].isNew && data[idx].isNew() && !data[idx].notFetched) {\n                    result.push(data[idx]);\n                }\n            }\n            return result;\n        },\n\n        updated: function() {\n            var idx,\n                length,\n                result = [],\n                data = this._flatData(this._data, this.options.useRanges);\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                if ((data[idx].isNew && !data[idx].isNew()) && data[idx].dirty) {\n                    result.push(data[idx]);\n                }\n            }\n            return result;\n        },\n\n        sync: function() {\n            var that = this,\n                created = [],\n                updated = [],\n                destroyed = that._destroyed;\n\n            var promise = $.Deferred().resolve().promise();\n\n            if (that.online()) {\n\n                if (!that.reader.model) {\n                    return promise;\n                }\n\n                created = that.created();\n                updated = that.updated();\n\n                var promises = [];\n\n                if (that.options.batch && that.transport.submit) {\n                    promises = that._sendSubmit(created, updated, destroyed);\n                } else {\n                    promises.push.apply(promises, that._send(\"create\", created));\n                    promises.push.apply(promises, that._send(\"update\", updated));\n                    promises.push.apply(promises, that._send(\"destroy\", destroyed));\n                }\n\n                promise = $.when\n                 .apply(null, promises)\n                 .then(function() {\n                    var idx, length, changedItems = [];\n\n                    for (idx = 0, length = arguments.length; idx < length; idx++) {\n                        if (arguments[idx]) {\n                            that._accept(arguments[idx]);\n                            changedItems.push(...arguments[idx].models);\n                        }\n                    }\n\n                    that._storeData(true);\n\n                    that._syncEnd();\n\n                    that._change({ action: \"sync\", changedItems: changedItems });\n\n                    that.trigger(SYNC);\n\n                    if (that._isServerGroupPaged()) {\n                        that.read();\n                    }\n                });\n            } else {\n                that._storeData(true);\n\n                that._syncEnd();\n\n                that._change({ action: \"sync\" });\n            }\n\n            return promise;\n        },\n\n        _syncEnd: noop,\n\n        cancelChanges: function(model) {\n            var that = this;\n\n            if (model instanceof kendo.data.Model) {\n                that._cancelModel(model);\n            } else {\n                that._destroyed = [];\n                that._detachObservableParents();\n                that._data = that._observe(that._pristineData);\n                if (that.options.serverPaging) {\n                    that._total = that._pristineTotal;\n                }\n\n                that._ranges = [];\n                that._addRange(that._data, 0);\n\n                that._changesCanceled();\n\n                that._change();\n\n                that._markOfflineUpdatesAsDirty();\n\n                if (that._isServerGrouped()) {\n                    that.read();\n                }\n            }\n        },\n\n        _changesCanceled: noop,\n\n        _markOfflineUpdatesAsDirty: function() {\n            var that = this;\n\n            if (that.options.offlineStorage != null) {\n                that._eachItem(that._data, function(items) {\n                    for (var idx = 0; idx < items.length; idx++) {\n                        var item = items.at(idx);\n                        if (item.__state__ == \"update\" || item.__state__ == \"create\") {\n                            item.dirty = true;\n                        }\n                    }\n                });\n            }\n        },\n\n        hasChanges: function() {\n            var idx,\n                length,\n                data = this._flatData(this._data, this.options.useRanges);\n\n            if (this._destroyed.length) {\n                return true;\n            }\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                if ((data[idx].isNew && data[idx].isNew()) || data[idx].dirty) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        _accept: function(result) {\n            var that = this,\n                models = result.models,\n                response = result.response,\n                idx = 0,\n                serverGroup = that._isServerGrouped(),\n                pristine = that._pristineData,\n                type = result.type,\n                length;\n\n            that.trigger(REQUESTEND, { response: response, type: type });\n\n            if (response && !isEmptyObject(response)) {\n                response = that.reader.parse(response);\n\n                if (that._handleCustomErrors(response)) {\n                    return;\n                }\n\n                response = that.reader.data(response);\n\n                if (!isArray(response)) {\n                    response = [response];\n                }\n            } else {\n                response = $.map(models, function(model) { return model.toJSON(); } );\n            }\n\n            if (type === \"destroy\") {\n                that._destroyed = [];\n            }\n\n            for (idx = 0, length = models.length; idx < length; idx++) {\n                if (type !== \"destroy\") {\n                    models[idx].accept(response[idx]);\n\n                    if (type === \"create\") {\n                        pristine.push(serverGroup ? that._wrapInEmptyGroup(models[idx].toJSON()) : response[idx]);\n                    } else if (type === \"update\") {\n                        that._updatePristineForModel(models[idx], response[idx]);\n                    }\n                } else {\n                    that._removePristineForModel(models[idx]);\n                }\n            }\n        },\n\n        _updatePristineForModel: function(model, values) {\n            this._executeOnPristineForModel(model, function(index, items) {\n                kendo.deepExtend(items[index], values);\n            });\n        },\n\n        _executeOnPristineForModel: function(model, callback) {\n            this._eachPristineItem(\n                function(items) {\n                    var index = indexOfPristineModel(items, model);\n                    if (index > -1) {\n                        callback(index, items);\n                        return true;\n                    }\n                });\n        },\n\n        _removePristineForModel: function(model) {\n            this._executeOnPristineForModel(model, function(index, items) {\n                items.splice(index, 1);\n            });\n        },\n\n        _readData: function(data) {\n            var read = !this._isServerGrouped() ? this.reader.data : this.reader.groups;\n            return read.call(this.reader, data);\n        },\n\n        _eachPristineItem: function(callback) {\n            var that = this;\n            var options = that.options;\n            var rangeSpan = that._getCurrentRangeSpan();\n\n            that._eachItem(that._pristineData, callback);\n\n            if (options.serverPaging && options.useRanges) {\n                each(rangeSpan, function(i, range) {\n                    that._eachItem(range.pristineData, callback);\n                });\n            }\n        },\n\n       _eachItem: function(data, callback) {\n            if (data && data.length) {\n                if (this._isServerGrouped()) {\n                    eachGroupItems(data, callback);\n                } else {\n                    callback(data);\n                }\n            }\n        },\n\n        _pristineForModel: function(model) {\n            var pristine,\n                idx,\n                callback = function(items) {\n                    idx = indexOfPristineModel(items, model);\n                    if (idx > -1) {\n                        pristine = items[idx];\n                        return true;\n                    }\n                };\n\n            this._eachPristineItem(callback);\n\n            return pristine;\n        },\n\n        _cancelModel: function(model) {\n            var that = this;\n            var pristine = this._pristineForModel(model);\n\n            this._eachItem(this._data, function(items) {\n                var idx = indexOfModel(items, model);\n                if (idx >= 0) {\n                    if (pristine && (!model.isNew() || pristine.__state__)) {\n                        items[idx].accept(pristine);\n\n                        if (pristine.__state__ == \"update\") {\n                            items[idx].dirty = true;\n                        }\n\n                    } else {\n                        that._modelCanceled(model);\n\n                        items.splice(idx, 1);\n\n                        that._removeModelFromRanges(model);\n                    }\n                }\n            });\n        },\n\n        _modelCanceled: noop,\n\n        _submit: function(promises, data) {\n            var that = this;\n\n            that.trigger(REQUESTSTART, { type: \"submit\" });\n\n            that.trigger(PROGRESS);\n\n            that.transport.submit(extend({\n                success: function(response, type) {\n                    var promise = $.grep(promises, function(x) {\n                        return x.type == type;\n                    })[0];\n\n                    if (promise) {\n                        promise.resolve({\n                            response: response,\n                            models: promise.models,\n                            type: type\n                        });\n                    }\n                },\n                error: function(response, status, error) {\n                    for (var idx = 0; idx < promises.length; idx++) {\n                        promises[idx].reject(response);\n                    }\n\n                    that.error(response, status, error);\n                }\n            }, data));\n        },\n\n        _sendSubmit: function(created, updated, destroyed) {\n            var that = this,\n                promises = [];\n\n            if (that.options.batch) {\n                if (created.length) {\n                    promises.push($.Deferred(function(deferred) {\n                        deferred.type = \"create\";\n                        deferred.models = created;\n                    }));\n                }\n\n                if (updated.length) {\n                    promises.push($.Deferred(function(deferred) {\n                        deferred.type = \"update\";\n                        deferred.models = updated;\n                    }));\n                }\n\n                if (destroyed.length) {\n                    promises.push($.Deferred(function(deferred) {\n                        deferred.type = \"destroy\";\n                        deferred.models = destroyed;\n                    }));\n                }\n\n                that._submit(promises, {\n                    data: {\n                        created: that.reader.serialize(toJSON(created)),\n                        updated: that.reader.serialize(toJSON(updated)),\n                        destroyed: that.reader.serialize(toJSON(destroyed))\n                    }\n                });\n            }\n\n            return promises;\n        },\n\n        _promise: function(data, models, type) {\n            var that = this;\n\n            return $.Deferred(function(deferred) {\n                that.trigger(REQUESTSTART, { type: type });\n\n                that.trigger(PROGRESS);\n\n                that.transport[type].call(that.transport, extend({\n                    success: function(response) {\n                        deferred.resolve({\n                            response: response,\n                            models: models,\n                            type: type\n                        });\n                    },\n                    error: function(response, status, error) {\n                        deferred.reject(response);\n                        that.error(response, status, error);\n                    }\n                }, data));\n            }).promise();\n        },\n\n        _send: function(method, data) {\n            var that = this,\n                idx,\n                length,\n                promises = [],\n                converted = that.reader.serialize(toJSON(data));\n\n            if (that.options.batch) {\n                if (data.length) {\n                    promises.push(that._promise( { data: { models: converted } }, data , method));\n                }\n            } else {\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    promises.push(that._promise( { data: converted[idx] }, [ data[idx] ], method));\n                }\n            }\n\n            return promises;\n        },\n\n        read: function(data) {\n            var that = this, params = that._params(data);\n            var deferred = $.Deferred();\n\n            that._queueRequest(params, function() {\n                var isPrevented = that.trigger(REQUESTSTART, { type: \"read\" });\n                if (!isPrevented) {\n                    that.trigger(PROGRESS);\n\n                    that._ranges = [];\n                    that.trigger(\"reset\");\n                    if (that.online()) {\n                        that.transport.read({\n                            data: params,\n                            success: function(data) {\n                                that._ranges = [];\n                                that.success(data, params);\n\n                                deferred.resolve();\n                            },\n                            error: function() {\n                                var args = slice.call(arguments);\n\n                                that.error.apply(that, args);\n\n                                deferred.reject.apply(deferred, args);\n                            }\n                        });\n                    } else if (that.options.offlineStorage != null) {\n                        that.success(that.offlineData(), params);\n\n                        deferred.resolve();\n                    }\n                } else {\n                    that._dequeueRequest();\n\n                    deferred.resolve(isPrevented);\n                }\n            });\n\n            return deferred.promise();\n        },\n\n        _readAggregates: function(data) {\n            return this.reader.aggregates(data);\n        },\n\n        success: function(data) {\n            var that = this,\n                options = that.options,\n                items,\n                replaceSubset;\n\n            that.trigger(REQUESTEND, { response: data, type: \"read\" });\n\n            if (that.online()) {\n                data = that.reader.parse(data);\n\n                if (that._handleCustomErrors(data)) {\n                    that._dequeueRequest();\n                    return;\n                }\n\n                that._total = that.reader.total(data);\n\n                if (that._isServerGroupPaged()) {\n                    that._serverGroupsTotal = that._total;\n                }\n\n                if (that._pageSize > that._total) {\n                    that._pageSize = that._total;\n                    if (that.options.pageSize && that.options.pageSize > that._pageSize) {\n                        that._pageSize = that.options.pageSize;\n                    }\n                }\n\n                if (that._aggregate && options.serverAggregates) {\n                    that._aggregateResult = that._readAggregates(data);\n                }\n\n                data = that._readData(data);\n\n                that._destroyed = [];\n            } else {\n                data = that._readData(data);\n\n                items = [];\n                var itemIds = {};\n                var model = that.reader.model;\n                var idField = model ? model.idField : \"id\";\n                var idx;\n\n                for (idx = 0; idx < this._destroyed.length; idx++) {\n                    var id = this._destroyed[idx][idField];\n                    itemIds[id] = id;\n                }\n\n                for (idx = 0; idx < data.length; idx++) {\n                    var item = data[idx];\n                    var state = item.__state__;\n                    if (state == \"destroy\") {\n                        if (!itemIds[item[idField]]) {\n                            this._pushInDestroyed(this._createNewModel(item));\n                        }\n                    } else {\n                        items.push(item);\n                    }\n                }\n\n                data = items;\n\n                that._total = data.length;\n            }\n\n            that._pristineTotal = that._total;\n            replaceSubset = that._skip && that._data.length && that._skip < that._data.length;\n\n            if (that.options.endless) {\n                if (replaceSubset) {\n                    that._pristineData.splice(that._skip, that._pristineData.length);\n                }\n                items = data.slice(0);\n                for (var j = 0; j < items.length; j++) {\n                    that._pristineData.push(items[j]);\n                }\n            } else {\n                that._pristineData = data.slice(0);\n            }\n\n            that._detachObservableParents();\n\n            if (that.options.endless) {\n                that._data.unbind(CHANGE, that._changeHandler);\n\n                if (that._isServerGrouped() && that._data[that._data.length - 1].value === data[0].value) {\n                    fillLastGroup(that._data[that._data.length - 1], data[0]);\n                    data.shift();\n                }\n\n                data = that._observe(data);\n                if (replaceSubset) {\n                    that._data.splice(that._skip, that._data.length);\n                }\n                for (var i = 0; i < data.length; i++) {\n                    that._data.push(data[i]);\n                }\n                that._data.bind(CHANGE, that._changeHandler);\n            } else {\n                that._data = that._observe(data);\n            }\n\n            that._markOfflineUpdatesAsDirty();\n\n            that._storeData();\n\n            that._addRange(that._data);\n\n            that._process(that._data);\n\n            that._dequeueRequest();\n        },\n\n        _detachObservableParents: function() {\n            if (this._data && this._shouldDetachObservableParents) {\n                for (var idx = 0; idx < this._data.length; idx++) {\n                    if (this._data[idx].parent) {\n                        this._data[idx].parent = noop;\n                    }\n                }\n            }\n        },\n\n        _storeData: function(updatePristine) {\n            var serverGrouping = this._isServerGrouped();\n            var model = this.reader.model;\n\n            function items(data) {\n                var state = [];\n\n                for (var idx = 0; idx < data.length; idx++) {\n                    var dataItem = data.at(idx);\n                    var item = dataItem.toJSON();\n\n                    if (serverGrouping && dataItem.items) {\n                        item.items = items(dataItem.items);\n                    } else {\n                        item.uid = dataItem.uid;\n\n                        if (model) {\n                            if (dataItem.isNew()) {\n                                item.__state__ = \"create\";\n                            } else if (dataItem.dirty) {\n                                item.__state__ = \"update\";\n                            }\n                        }\n                    }\n                    state.push(item);\n                }\n\n                return state;\n            }\n\n            if (this.options.offlineStorage != null) {\n                var state = items(this._data);\n\n                var destroyed = [];\n\n                for (var idx = 0; idx < this._destroyed.length; idx++) {\n                    var item = this._destroyed[idx].toJSON();\n                    item.__state__ = \"destroy\";\n                    destroyed.push(item);\n                }\n\n                this.offlineData(state.concat(destroyed));\n\n                if (updatePristine) {\n                    this._pristineData = this.reader.reader ? this.reader.reader._wrapDataAccessBase(state) : this.reader._wrapDataAccessBase(state);\n                }\n            }\n        },\n\n        _addRange: function(data, skip) {\n            var that = this,\n                start = typeof (skip) !== \"undefined\" ? skip : (that._skip || 0),\n                end,\n                range = {\n                    data: data,\n                    pristineData: data.toJSON(),\n                    timestamp: that._timeStamp()\n                };\n\n            if (this._isGroupPaged()) {\n                end = start + data.length;\n                range.outerStart = start;\n                range.outerEnd = end;\n            } else {\n                end = start + that._flatData(data, true).length;\n            }\n\n            range.start = start;\n            range.end = end;\n            that._ranges.push(range);\n            that._sortRanges();\n\n            if (that._isGroupPaged()) {\n                if (!that._groupsFlat) {\n                    that._groupsFlat = [];\n                }\n                that._appendToGroupsFlat(range.data);\n                that._updateOuterRangesLength();\n            }\n        },\n\n        _appendToGroupsFlat: function(data) {\n            var length = data.length;\n\n            for (var i = 0; i < length; i++) {\n                this._groupsFlat.push(data[i]);\n            }\n        },\n\n        _getGroupByUid: function(uid) {\n            var length = this._groupsFlat.length;\n            var group;\n\n            for (var i = 0; i < length; i++) {\n                group = this._groupsFlat[i];\n                if (group.uid === uid) {\n                    return group;\n                }\n            }\n        },\n\n        _sortRanges: function() {\n            this._ranges.sort(function(x, y) {\n                return x.start - y.start;\n            });\n        },\n\n        error: function(xhr, status, errorThrown) {\n            this._dequeueRequest();\n            this.trigger(REQUESTEND, { });\n            this.trigger(ERROR, { xhr: xhr, status: status, errorThrown: errorThrown });\n        },\n\n        _params: function(data) {\n            var that = this,\n                options = extend({\n                    take: that.take(),\n                    skip: that.skip(),\n                    page: that.page(),\n                    pageSize: that.pageSize(),\n                    sort: that._sort,\n                    filter: that._filter,\n                    group: that._group,\n                    aggregate: that._aggregate,\n                    groupPaging: !!that._groupPaging,\n                    isExcelExportRequest: that.options.isExcelExportRequest\n                }, data);\n\n            if (!that.options.serverPaging) {\n                delete options.take;\n                delete options.skip;\n                delete options.page;\n                delete options.pageSize;\n            }\n\n            if (!that.options.serverGrouping) {\n                delete options.group;\n            } else if (that.reader.model && options.group) {\n                options.group = convertDescriptorsField(options.group, that.reader.model);\n            }\n\n            if (!that.options.serverFiltering) {\n                delete options.filter;\n            } else if (that.reader.model && options.filter) {\n               options.filter = convertFilterDescriptorsField(options.filter, that.reader.model);\n            }\n\n            if (!that.options.serverSorting) {\n                delete options.sort;\n            } else if (that.reader.model && options.sort) {\n                options.sort = convertDescriptorsField(options.sort, that.reader.model);\n            }\n\n            if (!that.options.serverAggregates) {\n                delete options.aggregate;\n            } else if (that.reader.model && options.aggregate) {\n                options.aggregate = convertDescriptorsField(options.aggregate, that.reader.model);\n            }\n\n            if (!that.options.groupPaging || !(that.options.serverPaging && that.options.serverGrouping)) {\n                delete options.groupPaging;\n            }\n\n            if (!that.options.isExcelExportRequest) {\n                delete options.isExcelExportRequest;\n            }\n\n            return options;\n        },\n\n        _queueRequest: function(options, callback) {\n            var that = this;\n            if (!that._requestInProgress) {\n                that._requestInProgress = true;\n                that._pending = undefined$1;\n                callback();\n            } else {\n                that._pending = { callback: callback.bind(that), options: options };\n            }\n        },\n\n        _dequeueRequest: function() {\n            var that = this;\n            that._requestInProgress = false;\n            if (that._pending) {\n                that._queueRequest(that._pending.options, that._pending.callback);\n            }\n        },\n\n        _handleCustomErrors: function(response) {\n            if (this.reader.errors) {\n                var errors = this.reader.errors(response);\n                if (errors) {\n                    this.trigger(ERROR, { xhr: null, status: \"customerror\", errorThrown: \"custom error\", errors: errors });\n                    return true;\n                }\n            }\n            return false;\n        },\n\n        _shouldWrap: function(data) {\n            var model = this.reader.model;\n\n            if (model && data.length) {\n                return !(data[0] instanceof model);\n            }\n\n            return false;\n        },\n\n        _observe: function(data) {\n            var that = this,\n                model = that.reader.model;\n\n            that._shouldDetachObservableParents = true;\n\n            if (data instanceof ObservableArray) {\n                that._shouldDetachObservableParents = false;\n                if (that._shouldWrap(data)) {\n                    data.type = that.reader.model;\n                    data.wrapAll(data, data);\n                }\n            } else {\n                var arrayType = that.pageSize() && !that.options.serverPaging ? LazyObservableArray : ObservableArray;\n                data = new arrayType(data, that.reader.model);\n                data.parent = function() { return that.parent(); };\n            }\n\n            if (that._isServerGrouped()) {\n                wrapGroupItems(data, model);\n            }\n\n            if (that._changeHandler && that._data && that._data instanceof ObservableArray &&\n                !(that.options.useRanges && that.options.serverPaging)) {\n                that._data.unbind(CHANGE, that._changeHandler);\n            } else {\n                that._changeHandler = that._change.bind(that);\n            }\n\n            return data.bind(CHANGE, that._changeHandler);\n        },\n\n        _updateTotalForAction: function(action, items) {\n            var that = this;\n\n            var total = parseInt(that._total, 10);\n\n            if (!isNumber(that._total)) {\n                total = parseInt(that._pristineTotal, 10);\n            }\n            if (action === \"add\") {\n                total += items.length;\n            } else if (action === \"remove\") {\n                total -= items.length;\n            } else if (action !== \"itemchange\" && action !== \"sync\" && !that.options.serverPaging) {\n                total = that._pristineTotal;\n            } else if (action === \"sync\") {\n                total = that._pristineTotal = parseInt(that._total, 10);\n            }\n\n            that._total = total;\n        },\n\n        _operationsForUpdatedFields: function() {\n            const that = this,\n                updatedFields = that._updatedFields || [],\n                operations = {};\n\n            let found = false,\n                stringified;\n\n            operations.sort = that._sort;\n            operations.filter = that._filter;\n            operations.group = that._group;\n            operations.aggregate = that._aggregate;\n\n            stringified = stringify(operations);\n            found = updatedFields.some(u => stringified.indexOf((`\"field\":\"${u}\"`)) > -1);\n\n            return !found;\n        },\n\n        _pushInDestroyed: function(model) {\n            var isPushed = this._destroyed.find(function(item) {\n                return item.uid === model.uid;\n            });\n            if (!isPushed) {\n                this._destroyed.push(model);\n            }\n        },\n\n        _change: function(e) {\n            let that = this, idx, items, length, action = e ? e.action : \"\";\n\n            if (action === \"remove\") {\n                for (idx = 0, length = e.items.length; idx < length; idx++) {\n                    if (!e.items[idx].isNew || !e.items[idx].isNew()) {\n                        that._pushInDestroyed(e.items[idx]);\n                    }\n                }\n            }\n\n            if (e) {\n                items = e.items || [];\n                e.partialUpdate = that._operationsForUpdatedFields() && !that._preventPartialUpdate;\n\n                if (e.action === \"itemchange\" && items.some(i => i.dirtyFields)) {\n                    let item = e.items[0],\n                        keys = Object.keys(item.dirtyFields),\n                        result = keys;\n\n                    for (const key of keys) {\n                        if (item[key] instanceof Object) {\n                            let cleanObject = JSON.parse(kendo.stringify(item[key])),\n                                cleanObjectKeys = Object.keys(cleanObject).map((k) => key + \".\" + k);\n\n                            result.push(...cleanObjectKeys);\n                        }\n                    }\n\n                    that._updatedFields = result;\n                }\n            }\n\n            if (that.options.autoSync && (action === \"add\" || action === \"remove\" || action === \"itemchange\")) {\n                if (action === \"add\") {\n                    that._preventPartialUpdate = true;\n                }\n\n                var handler = function(args) {\n                    if (args.action === \"sync\") {\n                        that._preventPartialUpdate = false;\n                        that.unbind(\"change\", handler);\n                        that._updateTotalForAction(action, e.items);\n                    }\n                };\n\n                that.first(\"change\", handler);\n\n                that.sync();\n\n            } else {\n                that._updateTotalForAction(action, e ? e.items : []);\n\n                that._process(that._data, e);\n            }\n        },\n\n        _calculateAggregates: function(data, options) {\n            options = options || {};\n\n            var query = new Query(data),\n                aggregates = options.aggregate,\n                filter = options.filter;\n\n            if (filter) {\n                query = query.filter(filter);\n            }\n\n            return query.aggregate(aggregates);\n        },\n\n        _process: function(data, e) {\n            var that = this,\n                options = {},\n                result;\n\n            if (that.options.serverPaging !== true) {\n                options.skip = that._skip;\n                options.take = that._take || that._pageSize;\n\n                if (options.skip === undefined$1 && that._page !== undefined$1 && that._pageSize !== undefined$1) {\n                    options.skip = (that._page - 1) * that._pageSize;\n                }\n\n                if (that.options.useRanges) {\n                    options.skip = that.currentRangeStart();\n                }\n            }\n\n            if (that.options.serverSorting !== true) {\n                options.sort = that._sort;\n            }\n\n            if (that.options.serverFiltering !== true) {\n                options.filter = that._filter;\n            }\n\n            if (that.options.serverGrouping !== true) {\n                options.group = that._group;\n            }\n\n            if (that.options.serverAggregates !== true) {\n                options.aggregate = that._aggregate;\n            }\n\n            if (that.options.serverGrouping) {\n                that._clearEmptyGroups(data);\n            }\n\n            options.groupPaging = that._groupPaging;\n\n            if (that._isGroupPaged() && e && (e.action === \"page\" || e.action === \"expandGroup\" || e.action === \"collapseGroup\")) {\n                result = that._queryProcess(data, {\n                    aggregate: that._aggregate\n                });\n            } else {\n                result = that._queryProcess(data, options);\n            }\n\n            if (that._filter && e && e.action === \"add\") {\n                var model = e.items[0],\n                    resultData = result.data;\n\n                if (that._isGrouped() && !this._isServerGrouped()) {\n                    resultData = flattenGroups(resultData);\n                }\n\n                var modelIsInView = resultData.find(function(item) {\n                    return item.uid === model.uid;\n                });\n\n                if (!modelIsInView) {\n                    result.data.splice(model.index, 0, that._isGrouped() ? that._wrapInEmptyGroup(model) : model);\n                    result.total++;\n                }\n            }\n\n            if (that.options.serverAggregates !== true) {\n                // for performance reasons, calculate aggregates for part of the data only after query process\n                // this is necessary in the TreeList when paging\n                that._aggregateResult = that._calculateAggregates(result.dataToAggregate || data, options);\n            }\n\n            that._setView(result, options, e);\n\n            that._setFilterTotal(result.total, false);\n\n            e = e || {};\n\n            e.items = e.items || that._view;\n\n            that.trigger(CHANGE, e);\n        },\n\n        _setView: function(result, options, e) {\n            var that = this;\n\n            if (that._isGroupPaged() && !that._isServerGrouped()) {\n                if (e && (e.action === \"page\" || e.action === \"expandGroup\" || e.action === \"collapseGroup\")) {\n                    that.view(result.data);\n                    that._updateOuterRangesLength();\n                } else {\n                    that._ranges = [];\n                    var query = new Query(result.data);\n                    that._addRange(that._observe(result.data));\n\n                    if (options.skip + options.take > result.data.length) {\n                        options.skip = Math.max(0, result.data.length - options.take);\n                    }\n\n                    that.view(query.range(options.skip, options.take).toArray());\n                }\n\n            } else {\n                that.view(result.data);\n            }\n        },\n\n        _clearEmptyGroups: function(data) {\n            for (var idx = data.length - 1; idx >= 0; idx--) {\n                var group = data[idx];\n                if (group.hasSubgroups) {\n                    this._clearEmptyGroups(group.items);\n                }\n\n                if (group.items && !group.items.length && !group.itemCount) {\n                    splice.apply(group.parent(), [idx, 1]);\n                }\n            }\n        },\n\n        _queryProcess: function(data, options) {\n            if (this.options.inPlaceSort) {\n                return Query.process(data, options, this.options.inPlaceSort);\n            }\n            else {\n                return Query.process(data, options);\n            }\n        },\n\n        _mergeState: function(options) {\n            var that = this;\n\n            if (options !== undefined$1) {\n                that._pageSize = options.pageSize;\n                that._page = options.page;\n                that._sort = options.sort;\n                that._filter = options.filter;\n                that._group = options.group;\n                that._aggregate = options.aggregate;\n                that._skip = that._currentRangeStart = options.skip;\n                that._take = options.take;\n\n                if (that._skip === undefined$1) {\n                    that._skip = that._currentRangeStart = that.skip();\n                    options.skip = that.skip();\n                }\n\n                if (that._take === undefined$1 && that._pageSize !== undefined$1) {\n                    that._take = that._pageSize;\n                    options.take = that._take;\n                }\n\n                if (that.options.virtual) {\n                    options.virtual = that.options.virtual;\n                }\n\n                if (options.sort) {\n                    that._sort = options.sort = normalizeSort(options.sort);\n                    that._sortFields = sortFields(options.sort);\n                }\n\n                if (options.filter) {\n                    that._filter = options.filter = (that.options.accentFoldingFiltering && !$.isEmptyObject(options.filter)) ? $.extend({}, normalizeFilter(options.filter), { accentFoldingFiltering: that.options.accentFoldingFiltering }) : normalizeFilter(options.filter);\n                }\n\n                if (options.group) {\n                    that._group = options.group = normalizeGroup(options.group);\n                }\n                if (options.aggregate) {\n                    that._aggregate = options.aggregate = normalizeAggregate(options.aggregate);\n                }\n            }\n            return options;\n        },\n\n        query: function(options) {\n            var result;\n            var remote = this.options.serverSorting || this.options.serverPaging || this.options.serverFiltering || this.options.serverGrouping || this.options.serverAggregates;\n\n            if (remote || ((this._data === undefined$1 || this._data.length === 0) && !this._destroyed.length)) {\n                if (this.options.endless) {\n                    var moreItemsCount = options.pageSize - this.pageSize();\n                    if (moreItemsCount > 0) {\n                        moreItemsCount = this.pageSize();\n                        options.page = options.pageSize / moreItemsCount;\n                        options.pageSize = moreItemsCount;\n                    } else {\n                        options.page = 1;\n                        this.options.endless = false;\n                    }\n                }\n                return this.read(this._mergeState(options));\n            }\n\n            var isPrevented = this.trigger(REQUESTSTART, { type: \"read\" });\n            if (!isPrevented) {\n                this.trigger(PROGRESS);\n                if (options) {\n                    options.groupPaging = this._groupPaging;\n                }\n                result = this._queryProcess(this._data, this._mergeState(options));\n\n                this._setFilterTotal(result.total, true);\n\n                this._aggregateResult = this._calculateAggregates(result.dataToAggregate || this._data, options);\n                this._setView(result, options);\n                this.trigger(REQUESTEND, { type: \"read\" });\n                this.trigger(CHANGE, { items: result.data, action: options ? options.action : \"\" });\n            }\n\n            return $.Deferred().resolve(isPrevented).promise();\n        },\n\n        _hasExpandedSubGroups: function(group) {\n            var result = false;\n            var length = group.items ? group.items.length : 0;\n\n            if (!group.hasSubgroups) {\n                return false;\n            }\n\n            for (var i = 0; i < length; i++) {\n                if (this._groupsState[group.items[i].uid]) {\n                    result = true;\n                    break;\n                }\n            }\n            return result;\n        },\n\n        _findGroupedRange: function(data, result, options, parents, callback) {\n            var that = this;\n            var length = data.length;\n            var group;\n            var current;\n            var itemsLength;\n            var groupCount;\n            var itemsToSkip;\n\n            for (var i = 0; i < length; i++) {\n                group = data[i];\n\n                if (options.taken >= options.take) {\n                    break;\n                }\n\n                if (!that._getGroupByUid(group.uid)) {\n                    that._groupsFlat.push(group);\n                }\n\n                if (that._groupsState[group.uid]) {\n                    if (that._isServerGroupPaged()) {\n                       if (that._fetchGroupItems(group, options, parents, callback)) {\n                            that._fetchingGroupItems = true;\n                            return;\n                       }\n                       groupCount = (group.subgroupCount || group.itemCount) + 1;\n                       itemsToSkip = options.skip - options.skipped;\n                       if (!that._hasExpandedSubGroups(group) && itemsToSkip > groupCount) {\n                           options.skipped += groupCount;\n                           continue;\n                       }\n                    }\n\n                    if (options.includeParents && options.skipped < options.skip) {\n                        options.skipped++;\n                        group.excludeHeader = true;\n                    } else if (options.includeParents) {\n                        options.taken++;\n                        group.excludeHeader = false;\n                    }\n\n                    if (group.hasSubgroups && group.items && group.items.length) {\n                        group.currentItems = [];\n\n                        if (!parents) {\n                            parents = [];\n                        }\n                        parents.push(group);\n\n                        that._findGroupedRange(group.items, group.currentItems, options, parents, callback);\n                        parents.pop();\n\n                        if (group.currentItems.length || options.taken > 0) {\n                            result.push(group);\n                        } else {\n                            group.excludeHeader = false;\n                        }\n                    } else {\n                        current = [];\n                        itemsLength = group.items.length;\n\n                        for (var j = 0; j < itemsLength; j++) {\n                            if (options.skipped < options.skip) {\n                                options.skipped++;\n                                continue;\n                            }\n\n                            if (options.taken >= options.take) {\n                                break;\n                            }\n                            current.push(group.items[j]);\n                            options.taken++;\n                        }\n\n                        if (current.length || options.taken > 0) {\n                            group.currentItems = current;\n                            result.push(group);\n                        } else {\n                            group.excludeHeader = false;\n                        }\n                    }\n                } else {\n                    if (options.skipped < options.skip) {\n                        options.skipped++;\n                        continue;\n                    }\n                    result.push(group);\n                    options.taken++;\n                }\n            }\n        },\n\n        _expandedSubGroupItemsCount: function(group, end, includeCurrentItems) {\n            var that = this;\n            var result = 0;\n            var subGroup;\n            var endSpecified = typeof end === \"number\";\n            var length = endSpecified ? end : group.subgroupCount;\n            var temp;\n\n            if (!group.hasSubgroups) {\n                return result;\n            }\n\n            for (var i = 0; i < length; i++) {\n                subGroup = group.items[i];\n\n                if (!subGroup) {\n                    break;\n                }\n\n                if (subGroup.hasSubgroups && that._groupsState[group.uid]) {\n                    temp = that._expandedSubGroupItemsCount(subGroup, length, true);\n                    result += temp;\n\n                    if (endSpecified) {\n                        length -= temp;\n                    }\n                } else if (!subGroup.hasSubgroups && that._groupsState[subGroup.uid]) {\n                    temp = subGroup.items ? subGroup.items.length : 0;\n                    result += temp;\n                    if (endSpecified) {\n                        length -= temp;\n                    }\n                }\n\n                if (includeCurrentItems) {\n                    result += 1;\n                    if (endSpecified) {\n                        length -= 1;\n                    }\n                }\n\n                if (endSpecified && result > length) {\n                    return result;\n                }\n            }\n\n            return result;\n        },\n\n        _fetchGroupItems: function(group, options, parents, callback) {\n            let that = this;\n            let groupItemsSkip;\n            let firstItem;\n            let lastItem;\n            let groupItemCount = group.hasSubgroups ? group.subgroupCount : group.itemCount;\n            let take = options.take;\n            let skipped = options.skipped;\n            let pageSize = that.take();\n            let expandedSubGroupItemsCount;\n\n            if (options.includeParents) {\n                if (skipped < options.skip) {\n                    skipped += 1;\n                } else {\n                    take -= 1;\n                }\n            }\n\n            if (!group.items || (group.items && !group.items.length)) {\n                that.getGroupItems(group, options, parents, callback, 0);\n                return true;\n            } else {\n                expandedSubGroupItemsCount = this._expandedSubGroupItemsCount(group, options.skip - skipped);\n                groupItemsSkip = Math.max(options.skip - (skipped + expandedSubGroupItemsCount), 0);\n\n                if (groupItemsSkip >= groupItemCount) {\n                    return false;\n                }\n\n                let lastItemIndex = Math.min(groupItemsSkip + take, groupItemCount - 1);\n                firstItem = group.items[groupItemsSkip];\n                lastItem = group.items[lastItemIndex];\n\n                if (firstItem.notFetched) {\n                    that.getGroupItems(group, options, parents, callback, groupItemsSkip, math.round((groupItemsSkip + pageSize) / pageSize));\n                    return true;\n                }\n\n                if (lastItem.notFetched) {\n                    that.getGroupItems(group, options, parents, callback, math.max(math.floor((groupItemsSkip + pageSize) / pageSize), 0) * pageSize, math.round((groupItemsSkip + pageSize) / pageSize));\n                    return true;\n                }\n\n                if (!firstItem.notFetched && !lastItem.notFetched && hasNotFetchedItems(group.items, groupItemsSkip, lastItemIndex)) {\n                    that.getGroupItems(group, options, parents, callback, groupItemsSkip, lastItemIndex);\n                    return true;\n                }\n            }\n        },\n\n        getGroupItems: function(group, options, parents, callback, groupItemsSkip, page) {\n            var that = this;\n            var take;\n            var filter;\n            var data;\n            var subgroups;\n\n            if (!group.items) {\n                group.items = [];\n            }\n\n            take = that.take();\n            filter = this._composeItemsFilter(group, parents);\n            data = {\n                page: page || 1,\n                pageSize: take,\n                skip: groupItemsSkip,\n                take: take,\n                filter: filter,\n                aggregate: that._aggregate,\n                sort: that._sort\n            };\n            subgroups = that.findSubgroups(group);\n\n            if (subgroups && subgroups.length) {\n                data.group = subgroups;\n            }\n\n            data.groupPaging = true;\n\n            clearTimeout(that._timeout);\n            that._timeout = setTimeout(function() {\n                that._queueRequest(data, function() {\n                    if (!that.trigger(REQUESTSTART, {\n                            type: \"read\"\n                        })) {\n                        that.transport.read({\n                            data: data,\n                            success: that._groupItemsSuccessHandler(group, options.skip, that.take(), callback, groupItemsSkip),\n                            error: function() {\n                                var args = slice.call(arguments);\n                                that.error.apply(that, args);\n                            }\n                        });\n                    } else {\n                        that._dequeueRequest();\n                    }\n                });\n            }, 100);\n        },\n\n        _groupItemsSuccessHandler: function(group, skip, take, callback, groupItemsSkip) {\n            var that = this;\n            var timestamp = that._timeStamp();\n            callback = isFunction(callback) ? callback : noop;\n            var totalField = that.options.schema && that.options.schema.total ? that.options.schema.total : \"Total\";\n\n            return function(data) {\n                var temp;\n                var model = Model.define(that.options.schema.model);\n                var totalCount;\n\n                that._dequeueRequest();\n\n                that.trigger(REQUESTEND, {\n                    response: data,\n                    type: \"read\"\n                });\n\n                if (isFunction(totalField)) {\n                    totalCount = totalField(data);\n                } else {\n                    totalCount = data[totalField];\n                }\n\n                data = that.reader.parse(data);\n\n                if (group.hasSubgroups) {\n                    temp = that.reader.groups(data);\n                    group.subgroupCount = totalCount;\n                } else {\n                    temp = that.reader.data(data);\n                    temp = temp.map(function(item) {\n                        return new model(item);\n                    });\n                }\n\n                group.items.omitChangeEvent = true;\n                for (var i = 0; i < totalCount; i++) {\n                    if (i >= groupItemsSkip && i < (groupItemsSkip + take) ) {\n                        group.items.splice(i, 1, temp[i - groupItemsSkip]);\n                    } else {\n                        if (!group.items[i]) {\n                            group.items.splice(i, 0, { notFetched: true });\n                        }\n                    }\n                }\n                group.items.omitChangeEvent = false;\n\n                that._updateRangePristineData(group);\n                that._fetchingGroupItems = false;\n\n                if (!group.countAdded) {\n                    that._serverGroupsTotal += totalCount;\n                    group.countAdded = true;\n                }\n\n                that.range(skip, take, callback, \"expandGroup\");\n\n                if (timestamp >= that._currentRequestTimeStamp || !that._skipRequestsInProgress) {\n                    that.trigger(CHANGE, {});\n                }\n            };\n        },\n\n        findSubgroups: function(group) {\n            var indexOfCurrentGroup = this._group.map(function(g) {\n                return g.field;\n            }).indexOf(group.field);\n\n            return this._group.slice(indexOfCurrentGroup + 1, this._group.length);\n        },\n\n        _composeItemsFilter: function(group, parents) {\n            var filter = {\n                logic: \"and\",\n                filters: []\n            };\n\n            if (this.filter()) {\n                filter.filters.push(this.filter());\n            }\n\n            filter = extend(true, {}, filter);\n            filter.filters.push({\n                field: group.field,\n                operator: \"eq\",\n                value: group.value\n            });\n\n            if (parents) {\n                for (var i = 0; i < parents.length; i++) {\n                    filter.filters.push({\n                        field: parents[i].field,\n                        operator: \"eq\",\n                        value: parents[i].value\n                    });\n                }\n            }\n\n            return filter;\n        },\n\n        _updateRangePristineData: function(group) {\n            var that = this;\n            var ranges = that._ranges;\n            var rangesLength = ranges.length;\n            var temp;\n            var currentGroup;\n            var range;\n            var dataLength;\n            var indexes;\n            var currIdx;\n\n            for (var i = 0; i < rangesLength; i++) {\n                range = ranges[i];\n                dataLength = range.data.length;\n                indexes = [];\n                temp = null;\n\n                for (var j = 0; j < dataLength; j++) {\n                    currentGroup = range.data[j];\n                    indexes.push(j);\n\n                    if ((currentGroup.uid === group.uid) || (currentGroup.hasSubgroups && currentGroup.items.length && that._containsSubGroup(currentGroup, group, indexes))) {\n                        break;\n                    }\n                    indexes.pop();\n                }\n\n                if (indexes.length) {\n                    temp = ranges[i].pristineData;\n\n                    while (indexes.length > 1) {\n                        currIdx = indexes.splice(0, 1)[0];\n                        temp = temp[currIdx].items;\n                    }\n                    temp[indexes[0]] = that._cloneGroup(group);\n                    break;\n                }\n            }\n        },\n\n        _containsSubGroup: function(group, subgroup, indexes) {\n            var that = this;\n            var length = group.items.length;\n            var currentSubGroup;\n\n            if (group.hasSubgroups && length) {\n                for (var i = 0; i < length; i++) {\n                    currentSubGroup = group.items[i];\n                    indexes.push(i);\n                    if (currentSubGroup.uid === subgroup.uid ||\n                            (currentSubGroup.hasSubgroups &&\n                            currentSubGroup.items.length &&\n                            that._containsSubGroup(currentSubGroup, subgroup, indexes))) {\n                        return true;\n                    }\n                    indexes.pop();\n                }\n            }\n\n        },\n\n        _cloneGroup: function(group) {\n            var that = this;\n            group = typeof group.toJSON == \"function\" ? group.toJSON() : group;\n\n            if (group.items && group.items.length) {\n                group.items = group.items.map(function(item) {\n                    return that._cloneGroup(item);\n                });\n            }\n\n            return group;\n        },\n\n        _setFilterTotal: function(filterTotal, setDefaultValue) {\n            var that = this;\n\n            if (!that.options.serverFiltering) {\n                if (filterTotal !== undefined$1) {\n                    that._total = filterTotal;\n                } else if (setDefaultValue) {\n                    that._total = that._data.length;\n                }\n            }\n        },\n\n        fetch: function(callback) {\n            var that = this;\n            var fn = function(isPrevented) {\n                if (isPrevented !== true && isFunction(callback)) {\n                    callback.call(that);\n                }\n            };\n\n            return this._query().done(fn);\n        },\n\n        _query: function(options) {\n            var that = this;\n\n            return that.query(extend({}, {\n                page: that.page(),\n                pageSize: that.pageSize(),\n                sort: that.sort(),\n                filter: that.filter(),\n                group: that.group(),\n                aggregate: that.aggregate()\n            }, options));\n        },\n\n        next: function(options) {\n            var that = this,\n                page = that.page(),\n                total = that.total();\n\n            options = options || {};\n\n            if (!page || (total && page + 1 > that.totalPages())) {\n                return;\n            }\n\n            that._skip = that._currentRangeStart = page * that.take();\n\n            page += 1;\n            options.page = page;\n\n            that._query(options);\n\n            return page;\n        },\n\n        prev: function(options) {\n            var that = this,\n                page = that.page();\n\n            options = options || {};\n\n            if (!page || page === 1) {\n                return;\n            }\n\n            that._skip = that._currentRangeStart = that._skip - that.take();\n\n            page -= 1;\n            options.page = page;\n\n            that._query(options);\n\n            return page;\n        },\n\n        page: function(val) {\n            var that = this,\n            skip;\n\n            if (val !== undefined$1) {\n                val = math.max(math.min(math.max(val, 1), that.totalPages()), 1);\n                var take = that.take();\n\n                if (that._isGroupPaged()) {\n                    val -= 1;\n                    that.range(val * take, take, null, \"page\");\n                    return;\n                }\n                that._query(that._pageableQueryOptions({ page: val }));\n                return;\n            }\n            skip = that.skip();\n\n            return skip !== undefined$1 ? math.round((skip || 0) / (that.take() || 1)) + 1 : undefined$1;\n        },\n\n        pageSize: function(val) {\n            var that = this;\n\n            if (val !== undefined$1) {\n                that._query(that._pageableQueryOptions({ pageSize: val, page: 1 }));\n                return;\n            }\n\n            return that.take();\n        },\n\n        sort: function(val) {\n            var that = this;\n\n            if (val !== undefined$1) {\n                that.trigger(\"sort\");\n                that._query({ sort: val });\n                return;\n            }\n\n            return that._sort;\n        },\n\n        filter: function(val) {\n            var that = this;\n\n            if (val === undefined$1) {\n                return that._filter;\n            }\n\n            that.trigger(\"reset\");\n            that._query({ filter: val, page: 1 });\n        },\n\n        group: function(val) {\n            var that = this;\n            var options = { group: val };\n\n            if (that._groupPaging) {\n                // clear ranges if ungrouping is performed\n                if (val !== undefined$1 && (!val || !val.length) ) {\n                    that._ranges = [];\n                }\n                options.page = 1;\n            }\n\n            if (val !== undefined$1) {\n                that._query(options);\n                return;\n            }\n\n            return that._group;\n        },\n\n        getGroupsFlat: function(data) {\n            var idx,\n                result = [],\n                length;\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                var group = data[idx];\n                if (group.hasSubgroups) {\n                    result = result.concat(this.getGroupsFlat(group.items));\n                }\n\n                result.push(group);\n            }\n\n            return result;\n        },\n\n        total: function() {\n            return parseInt(this._total || 0, 10);\n        },\n\n        groupsTotal: function(includeExpanded) {\n            var that = this;\n\n            if (!that._group.length) {\n                return that.total();\n            }\n\n            if (that._isServerGrouped()) {\n                if (that._serverGroupsTotal) {\n                    return that._serverGroupsTotal;\n                }\n                that._serverGroupsTotal = that.total();\n\n                return that._serverGroupsTotal;\n            }\n\n            return that._calculateGroupsTotal(that._ranges.length ? that._ranges[0].data : [], includeExpanded);\n        },\n\n        _calculateGroupsTotal: function(groups, includeExpanded, itemsField, ignoreState) {\n            var that = this;\n            itemsField = itemsField || \"items\";\n            var total;\n            var length;\n\n            if (that._group.length && groups) {\n                total = 0;\n                length = groups.length;\n\n                for (var i = 0; i < length; i++) {\n                    total += that.groupCount(groups[i], includeExpanded, itemsField, ignoreState);\n                }\n                that._groupsTotal = total;\n                return total;\n            }\n\n            that._groupsTotal = that._data.length;\n            return that._groupsTotal;\n        },\n\n        groupCount: function(group, includeExpanded, itemsField, ignoreState) {\n            var that = this;\n            var total = 0;\n\n            if (group.hasSubgroups && that._groupsState[group.uid]) {\n                if (includeExpanded && !group.excludeHeader || ignoreState) {\n                    total += 1;\n                }\n\n                group[itemsField].forEach(function(subgroup) {\n                    total += that.groupCount(subgroup, includeExpanded, itemsField, ignoreState);\n                });\n            } else {\n                if (that._groupsState[group.uid]) {\n                    if (includeExpanded && !group.excludeHeader || ignoreState) {\n                        total++;\n                    }\n                    total += group[itemsField] ? group[itemsField].length : 0;\n                } else {\n                    total++;\n                }\n            }\n            return total;\n        },\n\n        countGroupRange: function(range) {\n            var total = 0;\n            var length = range.length;\n\n            for (var i = 0; i < length; i++) {\n                total += this.groupCount(range[i], true);\n            }\n\n            return total;\n        },\n\n        aggregate: function(val) {\n            var that = this;\n\n            if (val !== undefined$1) {\n                that._query({ aggregate: val });\n                return;\n            }\n\n            return that._aggregate;\n        },\n\n        aggregates: function() {\n            var result = this._aggregateResult;\n\n            if (isEmptyObject(result)) {\n                result = this._emptyAggregates(this.aggregate());\n            }\n\n            return result;\n        },\n\n        _emptyAggregates: function(aggregates) {\n            var result = {};\n\n            if (!isEmptyObject(aggregates)) {\n                var aggregate = {};\n\n                if (!isArray(aggregates)) {\n                    aggregates = [aggregates];\n                }\n\n                for (var idx = 0; idx < aggregates.length; idx++) {\n                    aggregate[aggregates[idx].aggregate] = 0;\n                    result[aggregates[idx].field] = aggregate;\n                }\n            }\n\n            return result;\n        },\n\n        _pageableQueryOptions: function(options) {\n            return options;\n        },\n\n        _wrapInEmptyGroup: function(model) {\n            var groups = this.group(),\n                parent,\n                group,\n                idx,\n                length;\n\n            for (idx = groups.length - 1, length = 0; idx >= length; idx--) {\n                group = groups[idx];\n                parent = {\n                    value: model.get ? model.get(group.field) : model[group.field],\n                    field: group.field,\n                    items: parent ? [parent] : [model],\n                    hasSubgroups: !!parent,\n                    aggregates: this._emptyAggregates(group.aggregates)\n                };\n            }\n\n            return parent;\n        },\n\n        totalPages: function() {\n            var that = this,\n                pageSize = that.pageSize() || that.total(),\n                total = that._isGroupPaged() ? that.groupsTotal(true) : that.total();\n\n            return math.ceil((total || 0) / pageSize);\n        },\n\n        inRange: function(skip, take) {\n            var that = this,\n                end = math.min(skip + take, that.total());\n\n            if (!that.options.serverPaging && that._data.length > 0) {\n                return true;\n            }\n\n            return that._findRange(skip, end).length > 0;\n        },\n\n        lastRange: function() {\n            var ranges = this._ranges;\n            return ranges[ranges.length - 1] || { start: 0, end: 0, data: [] };\n        },\n\n        firstItemUid: function() {\n            var ranges = this._ranges;\n            return ranges.length && ranges[0].data.length && ranges[0].data[0].uid;\n        },\n\n        enableRequestsInProgress: function() {\n            this._skipRequestsInProgress = false;\n        },\n\n        _timeStamp: function() {\n            return new Date().getTime();\n        },\n\n        range: function(skip, take, callback, action) {\n            this._currentRequestTimeStamp = this._timeStamp();\n            this._skipRequestsInProgress = true;\n            var total = this._isGroupPaged() ? this.groupsTotal(true) : this.total();\n\n            if (action === \"expandGroup\" || action === \"collapseGroup\") {\n                this._updateOuterRangesLength();\n            }\n\n            skip = math.min(skip || 0, total);\n            callback = isFunction(callback) ? callback : noop;\n\n            var that = this,\n                pageSkip = math.max(math.floor(skip / take), 0) * take,\n                size = math.min(pageSkip + take, total),\n                data;\n\n            data = that._findRange(skip, math.min(skip + take, total), callback);\n\n            if ((data.length || total === 0) && !that._fetchingGroupItems) {\n                that._processRangeData(data, skip, take, that._originalPageSkip || pageSkip, that._originalSize || size, {\n                    action: action\n                });\n                that._originalPageSkip = null;\n                that._originalSize = null;\n                callback();\n                return;\n            }\n\n            if (that._isGroupPaged()) {\n                that._originalPageSkip = pageSkip;\n                that._originalSize = size;\n\n                pageSkip = math.max(math.floor(that._adjustPageSkip(skip, take) / take), 0) * take;\n                size = math.min(pageSkip + take, total);\n            }\n\n            if (take !== undefined$1 && !that._fetchingGroupItems) {\n                if ((that._isGroupPaged() && !that._groupRangeExists(pageSkip, take)) || !that._rangeExists(pageSkip, size)) {\n                    that.prefetch(pageSkip, take, function() {\n                        if (skip > pageSkip && size < that.total() && !that._rangeExists(size, math.min(size + take, that.total()))) {\n                            that.prefetch(size, take, function() {\n                                that.range(skip, take, callback );\n                            });\n                        } else {\n                            that.range(skip, take, callback);\n                        }\n                    });\n                } else if (pageSkip < skip) {\n                    that.prefetch(size, take, function() {\n                        that.range(skip, take, callback );\n                    });\n                }\n            }\n        },\n\n        _findRange: function(start, end, callback) {\n            var that = this,\n                ranges = that._ranges,\n                range,\n                data = [],\n                skipIdx,\n                takeIdx,\n                startIndex,\n                endIndex,\n                rangeData,\n                rangeEnd,\n                processed,\n                options = that.options,\n                remote = options.serverSorting || options.serverPaging || options.serverFiltering || options.serverGrouping || options.serverAggregates,\n                flatData,\n                count,\n                length,\n                groupMapOptions = {\n                        take: end - start,\n                        skip: start,\n                        skipped: 0,\n                        taken: 0,\n                        includeParents: true\n                    },\n                prevRangeEnd,\n                isGroupPaged = that._isGroupPaged(),\n                startField = isGroupPaged ? \"outerStart\" : \"start\",\n                endField = isGroupPaged ? \"outerEnd\" : \"end\",\n                currentDataLength;\n\n            for (skipIdx = 0, length = ranges.length; skipIdx < length; skipIdx++) {\n                range = ranges[skipIdx];\n\n                if (isGroupPaged) {\n                    if (range.outerStart >= end) {\n                        return [];\n                    }\n\n                    if (start > range.outerEnd) {\n                        groupMapOptions.skipped += range.outerEnd - (prevRangeEnd || 0);\n                        prevRangeEnd = range.outerEnd;\n                        continue;\n                    }\n\n                    if (typeof prevRangeEnd !== \"undefined\" && prevRangeEnd != range.outerStart) {\n                        groupMapOptions.skipped += range.outerStart - prevRangeEnd;\n                    }\n\n                    if (groupMapOptions.skipped > groupMapOptions.skip) {\n                        return [];\n                    }\n\n                    if (typeof prevRangeEnd === \"undefined\" && start > 0 && range.start > 0) {\n                        groupMapOptions.skipped = range.outerStart;\n                    }\n\n                    takeIdx = skipIdx;\n                    while (true) {\n                        this._findGroupedRange(range.data, data, groupMapOptions, null, callback);\n                        currentDataLength = that._calculateGroupsTotal(data, true, \"currentItems\");\n\n                        if (currentDataLength >= groupMapOptions.take) {\n                            return data;\n                        }\n\n                        if (that._fetchingGroupItems) {\n                            return [];\n                        }\n                        takeIdx++;\n\n                        if (ranges[takeIdx] && ranges[takeIdx].outerStart === range.outerEnd) {\n                            range = ranges[takeIdx];\n                        } else {\n                            break;\n                        }\n                    }\n                } else if (start >= range[startField] && start <= range[endField]) {\n                    count = 0;\n\n                    for (takeIdx = skipIdx; takeIdx < length; takeIdx++) {\n                        range = ranges[takeIdx];\n                        flatData = that._flatData(range.data, true);\n\n                        if (flatData.length && start + count >= range.start) {\n                            rangeData = range.data;\n                            rangeEnd = range.end;\n\n                            if (!remote) {\n                                if (options.inPlaceSort) {\n                                    processed = that._queryProcess(range.data, { filter: that.filter() });\n                                } else {\n                                    var sort = normalizeGroupWithoutCompare(that.group() || []).concat(normalizeSort(that.sort() || []));\n                                    processed = that._queryProcess(range.data, { sort: sort, filter: that.filter() });\n                                }\n                                flatData = rangeData = processed.data;\n\n                                if (processed.total !== undefined$1) {\n                                    rangeEnd = processed.total;\n                                }\n                            }\n\n                            startIndex = 0;\n                            if (start + count > range.start) {\n                                startIndex = (start + count) - range.start;\n                            }\n                            endIndex = flatData.length;\n                            if (rangeEnd > end) {\n                                endIndex = endIndex - (rangeEnd - end);\n                            }\n                            count += endIndex - startIndex;\n                            data = that._mergeGroups(data, rangeData, startIndex, endIndex);\n\n                            if (end <= range.end && count == end - start) {\n                                return data;\n                            }\n                        }\n                    }\n                    break;\n                }\n                prevRangeEnd = range.outerEnd;\n            }\n            return [];\n        },\n\n        _getRangesMismatch: function(pageSkip) {\n            var that = this;\n            var ranges = that._ranges;\n            var mismatch = 0;\n            var i = 0;\n\n            while (true) {\n                var range = ranges[i];\n                if (!range || range.outerStart > pageSkip) {\n                    break;\n                }\n\n                if (range.outerEnd != range.end) {\n                    mismatch = range.outerEnd - range.end;\n                }\n                i++;\n            }\n\n            return mismatch;\n        },\n\n        _mergeGroups: function(data, range, skip, take) {\n            if (this._isServerGrouped()) {\n                var temp = range.toJSON(),\n                    prevGroup;\n\n                if (data.length) {\n                    prevGroup = data[data.length - 1];\n                }\n\n                mergeGroups(prevGroup, temp, skip, take);\n\n                return data.concat(temp);\n            }\n            return data.concat(range.slice(skip, take));\n        },\n\n        _processRangeData: function(data, skip, take, pageSkip, size, eventData) {\n            var that = this;\n\n            that._pending = undefined$1;\n\n            that._skip = skip > that.skip() && !that._omitPrefetch ? math.min(size, (that.totalPages() - 1) * that.take()) : pageSkip;\n\n            that._currentRangeStart = skip;\n\n            that._take = take;\n\n            var paging = that.options.serverPaging;\n            var sorting = that.options.serverSorting;\n            var filtering = that.options.serverFiltering;\n            var aggregates = that.options.serverAggregates;\n            try {\n                that.options.serverPaging = true;\n                if (!that._isServerGrouped() && !(that.group() && that.group().length)) {\n                    that.options.serverSorting = true;\n                }\n                that.options.serverFiltering = true;\n                that.options.serverPaging = true;\n                that.options.serverAggregates = true;\n\n                if (paging) {\n                    that._detachObservableParents();\n                    that._data = data = that._observe(data);\n                }\n                that._process(data, eventData);\n            } finally {\n                that.options.serverPaging = paging;\n                that.options.serverSorting = sorting;\n                that.options.serverFiltering = filtering;\n                that.options.serverAggregates = aggregates;\n            }\n        },\n\n        skip: function() {\n            var that = this;\n\n            if (that._skip === undefined$1) {\n                return (that._page !== undefined$1 ? (that._page - 1) * (that.take() || 1) : undefined$1);\n            }\n            return that._skip;\n        },\n\n        currentRangeStart: function() {\n            return this._currentRangeStart || 0;\n        },\n\n        take: function() {\n            return this._take || this._pageSize;\n        },\n\n        _prefetchSuccessHandler: function(skip, size, callback, force) {\n            var that = this;\n            var timestamp = that._timeStamp();\n\n            return function(data) {\n                var found = false,\n                    range = { start: skip, end: size, data: [], timestamp: that._timeStamp() },\n                    idx,\n                    length,\n                    temp;\n\n                that._dequeueRequest();\n\n                that.trigger(REQUESTEND, { response: data, type: \"read\" });\n\n                data = that.reader.parse(data);\n\n                temp = that._readData(data);\n\n                if (temp.length) {\n                    for (idx = 0, length = that._ranges.length; idx < length; idx++) {\n                        if (that._ranges[idx].start === skip) {\n                            found = true;\n                            range = that._ranges[idx];\n\n                            if (!that._isGroupPaged()) {\n                                range.pristineData = temp;\n                                range.data = that._observe(temp);\n                                range.end = range.start + that._flatData(range.data, true).length;\n                                that._sortRanges();\n                            }\n\n                            break;\n                        }\n                    }\n\n                    if (!found) {\n                        that._addRange(that._observe(temp), skip);\n                    }\n                }\n\n                that._total = that.reader.total(data);\n\n                if (force || (timestamp >= that._currentRequestTimeStamp || !that._skipRequestsInProgress)) {\n                    if (callback && temp.length) {\n                        callback();\n                    } else {\n                        that.trigger(CHANGE, {});\n                    }\n                }\n            };\n        },\n\n        prefetch: function(skip, take, callback) {\n            var that = this,\n                size = math.min(skip + take, that.total()),\n                options = {\n                    take: take,\n                    skip: skip,\n                    page: skip / take + 1,\n                    pageSize: take,\n                    sort: that._sort,\n                    filter: that._filter,\n                    group: that._group,\n                    aggregate: that._aggregate\n                };\n\n\n            if ((that._isGroupPaged() && !that._isServerGrouped() && that._groupRangeExists(skip, size))) {\n                if (callback) {\n                    callback();\n                }\n                return;\n            }\n\n            if ((that._isServerGroupPaged() && !that._groupRangeExists(skip, size)) || !that._rangeExists(skip, size)) {\n                clearTimeout(that._timeout);\n\n                that._timeout = setTimeout(function() {\n                    that._queueRequest(options, function() {\n                        if (!that.trigger(REQUESTSTART, { type: \"read\" })) {\n                            if (that._omitPrefetch) {\n                                that.trigger(PROGRESS);\n                            }\n                            that.transport.read({\n                                data: that._params(options),\n                                success: that._prefetchSuccessHandler(skip, size, callback),\n                                error: function() {\n                                    var args = slice.call(arguments);\n                                    that.error.apply(that, args);\n                                }\n                            });\n                        } else {\n                            that._dequeueRequest();\n                        }\n                    });\n                }, 100);\n            } else if (callback) {\n                callback();\n            }\n        },\n\n        _multiplePrefetch: function(skip, take, callback) {\n            var that = this,\n                size = math.min(skip + take, that.total()),\n                options = {\n                    take: take,\n                    skip: skip,\n                    page: skip / take + 1,\n                    pageSize: take,\n                    sort: that._sort,\n                    filter: that._filter,\n                    group: that._group,\n                    aggregate: that._aggregate\n                };\n\n            if (!that._rangeExists(skip, size)) {\n                if (!that.trigger(REQUESTSTART, { type: \"read\" })) {\n                    that.transport.read({\n                        data: that._params(options),\n                        success: that._prefetchSuccessHandler(skip, size, callback, true)\n                    });\n                }\n            } else if (callback) {\n                callback();\n            }\n        },\n\n        _adjustPageSkip: function(start, take) {\n            var that = this;\n            var prevRange = that._getPrevRange(start);\n            var result;\n            var total = that.total();\n            var mismatch;\n\n            if (prevRange) {\n                mismatch = that._getRangesMismatch(start);\n\n                if (!mismatch) {\n                    return start;\n                }\n                start -= mismatch;\n            }\n            result = math.max(math.floor(start / take), 0) * take;\n\n            if (result > total) {\n                while (true) {\n                    result -= take;\n                    if (result < total) {\n                        break;\n                    }\n                }\n            }\n            return result;\n        },\n\n        _getNextRange: function(end) {\n            var that = this,\n                ranges = that._ranges,\n                idx,\n                length;\n\n            for (idx = 0, length = ranges.length; idx < length; idx++) {\n                if (ranges[idx].start <= end && ranges[idx].end >= end) {\n                    return ranges[idx];\n                }\n            }\n        },\n\n        _getPrevRange: function(start) {\n            var that = this,\n                ranges = that._ranges,\n                idx,\n                range,\n                length = ranges.length;\n\n            for (idx = length - 1; idx >= 0; idx--) {\n                if (ranges[idx].outerStart <= start) {\n                    range = ranges[idx];\n                    break;\n                }\n\n            }\n\n            return range;\n        },\n\n        _rangeExists: function(start, end) {\n            var that = this,\n                ranges = that._ranges,\n                idx,\n                length;\n\n            for (idx = 0, length = ranges.length; idx < length; idx++) {\n                if (ranges[idx].start <= start && ranges[idx].end >= end) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        _groupRangeExists: function(start, end) {\n            var that = this,\n                ranges = that._ranges,\n                idx,\n                length,\n                availableItemsCount = 0,\n                total = that.groupsTotal(true);\n\n            if (end > total && !that._isServerGrouped()) {\n                end = total;\n            }\n\n            for (idx = 0, length = ranges.length; idx < length; idx++) {\n                var range = ranges[idx];\n                if (range.outerStart <= start && range.outerEnd >= start) {\n                    availableItemsCount += range.outerEnd - start;\n                } else if (range.outerStart <= end && range.outerEnd >= end) {\n                    availableItemsCount += end - range.outerStart;\n                }\n            }\n\n            return availableItemsCount >= end - start;\n        },\n\n        _getCurrentRangeSpan: function() {\n            var that = this;\n            var ranges = that._ranges;\n            var start = that.currentRangeStart();\n            var end = start + (that.take() || 0);\n            var rangeSpan = [];\n            var range;\n            var idx;\n            var length = ranges.length;\n\n            for (idx = 0; idx < length; idx++) {\n                range = ranges[idx];\n\n                if ((range.start <= start && range.end >= start) || (range.start >= start && range.start <= end)) {\n                    rangeSpan.push(range);\n                }\n            }\n\n            return rangeSpan;\n        },\n\n        _removeModelFromRanges: function(model) {\n            var that = this;\n            var range;\n\n            for (var idx = 0, length = this._ranges.length; idx < length; idx++) {\n                range = this._ranges[idx];\n\n                that._removeModelFromRange(range, model);\n            }\n\n            that._updateRangesLength();\n        },\n\n        _removeModelFromRange: function(range, model) {\n            this._eachItem(range.data, function(data) {\n                if (!data) {\n                    return;\n                }\n                for (var idx = 0; idx < data.length; idx++) {\n                    var dataItem = data[idx];\n\n                    if (dataItem.uid && dataItem.uid == model.uid) {\n                        [].splice.call(data, idx, 1);\n                        break;\n                    }\n                }\n            });\n        },\n\n        _insertModelInRange: function(index, model) {\n            var that = this;\n            var ranges = that._ranges || [];\n            var rangesLength = ranges.length;\n            var range;\n            var i;\n\n            for (i = 0; i < rangesLength; i++) {\n                range = ranges[i];\n\n                if (range.start <= index && range.end >= index) {\n                    if (!that._getByUid(model.uid, range.data)) {\n                        if (that._isServerGrouped()) {\n                            range.data.splice(index, 0, that._wrapInEmptyGroup(model));\n                        } else {\n                            range.data.splice(index, 0, model);\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            that._updateRangesLength();\n        },\n\n        _updateRangesLength: function() {\n            var that = this;\n            var ranges = that._ranges || [];\n            var rangesLength = ranges.length;\n            var mismatchFound = false;\n            var mismatchLength = 0;\n            var lengthDifference = 0;\n            var rangeLength;\n            var range;\n            var i;\n\n            for (i = 0; i < rangesLength; i++) {\n                range = ranges[i];\n                rangeLength = that._isGroupPaged() ? range.data.length : that._flatData(range.data, true).length;\n                lengthDifference = rangeLength - math.abs(range.end - range.start);\n\n                if (!mismatchFound && lengthDifference !== 0) {\n                    mismatchFound = true;\n                    mismatchLength = lengthDifference;\n                    range.end += mismatchLength;\n                    continue;\n                }\n\n                if (mismatchFound) {\n                    range.start += mismatchLength;\n                    range.end += mismatchLength;\n                }\n            }\n        },\n\n        _updateOuterRangesLength: function() {\n            var that = this;\n            var ranges = that._ranges || [];\n            var rangesLength = ranges.length;\n            var mismatchLength = 0;\n            var range;\n            var i;\n            var prevRange;\n            var rangeLength;\n\n            for (i = 0; i < rangesLength; i++) {\n                range = ranges[i];\n                rangeLength = that._isGroupPaged() ? that._calculateGroupsTotal(range.data, true, \"items\", true) : that._flatData(range.data, true).length;\n\n                if (prevRange) {\n                    if (prevRange.end != range.start) {\n                        mismatchLength = range.start - prevRange.end;\n                    }\n                    range.outerStart = prevRange.outerEnd + mismatchLength;\n                    mismatchLength = 0;\n                } else {\n                    range.outerStart = range.start;\n                }\n\n                range.outerEnd = range.outerStart + rangeLength;\n                prevRange = range;\n            }\n        }\n    });\n\n    var Transport = {};\n\n    Transport.create = function(options, data, dataSource) {\n        var transport,\n            transportOptions = options.transport ? $.extend({}, options.transport) : null;\n\n        if (transportOptions) {\n            transportOptions.read = typeof transportOptions.read === STRING ? { url: transportOptions.read } : transportOptions.read;\n\n            if (options.type === \"jsdo\") {\n                transportOptions.dataSource = dataSource;\n            }\n\n            if (options.type) {\n                kendo.data.transports = kendo.data.transports || {};\n                kendo.data.schemas = kendo.data.schemas || {};\n\n                if (!kendo.data.transports[options.type]) {\n                    kendo.logToConsole(\"Unknown DataSource transport type '\" + options.type + \"'.\\nVerify that registration scripts for this type are included after Kendo UI on the page.\", \"warn\");\n                } else if (!isPlainObject(kendo.data.transports[options.type])) {\n                    transport = new kendo.data.transports[options.type](extend(transportOptions, { data: data }));\n                } else {\n                    transportOptions = extend(true, {}, kendo.data.transports[options.type], transportOptions);\n                }\n\n                options.schema = extend(true, {}, kendo.data.schemas[options.type], options.schema);\n            }\n\n            if (!transport) {\n                transport = isFunction(transportOptions.read) ? transportOptions : new RemoteTransport(transportOptions);\n            }\n        } else {\n            transport = new LocalTransport({ data: options.data || [] });\n        }\n        return transport;\n    };\n\n    DataSource.create = function(options) {\n        if (isArray(options) || options instanceof ObservableArray) {\n           options = { data: options };\n        }\n\n        var dataSource = options || {},\n            data = dataSource.data,\n            fields = dataSource.fields,\n            table = dataSource.table,\n            select = dataSource.select,\n            idx,\n            length,\n            model = {},\n            field;\n\n        if (!data && fields && !dataSource.transport) {\n            if (table) {\n                data = inferTable(table, fields);\n            } else if (select) {\n                data = inferSelect(select, fields);\n\n                if (dataSource.group === undefined$1 && data[0] && data[0].optgroup !== undefined$1) {\n                    dataSource.group = \"optgroup\";\n                }\n            }\n        }\n\n        if (kendo.data.Model && fields && (!dataSource.schema || !dataSource.schema.model)) {\n            for (idx = 0, length = fields.length; idx < length; idx++) {\n                field = fields[idx];\n                if (field.type) {\n                    model[field.field] = field;\n                }\n            }\n\n            if (!isEmptyObject(model)) {\n                dataSource.schema = extend(true, dataSource.schema, { model: { fields: model } });\n            }\n        }\n\n        dataSource.data = data;\n\n        select = null;\n        dataSource.select = null;\n        table = null;\n        dataSource.table = null;\n\n        return dataSource instanceof DataSource ? dataSource : new DataSource(dataSource);\n    };\n\n    function inferSelect(select, fields) {\n        select = $(select)[0];\n        var options = select.options;\n        var firstField = fields[0];\n        var secondField = fields[1];\n\n        var data = [];\n        var idx, length;\n        var optgroup;\n        var option;\n        var record;\n        var value;\n\n        for (idx = 0, length = options.length; idx < length; idx++) {\n            record = {};\n            option = options[idx];\n            optgroup = option.parentNode;\n\n            if (optgroup === select) {\n                optgroup = null;\n            }\n\n            if (option.disabled || (optgroup && optgroup.disabled)) {\n                continue;\n            }\n\n            if (optgroup) {\n                record.optgroup = optgroup.label;\n            }\n\n            record[firstField.field] = option.text;\n\n            value = option.attributes.value;\n\n            if (value && value.specified) {\n                value = option.value;\n            } else {\n                value = option.text;\n            }\n\n            record[secondField.field] = value;\n\n            data.push(record);\n        }\n\n        return data;\n    }\n\n    function inferTable(table, fields) {\n        var tbody = $(table)[0].tBodies[0],\n        rows = tbody ? tbody.rows : [],\n        idx,\n        length,\n        fieldIndex,\n        fieldCount = fields.length,\n        data = [],\n        cells,\n        record,\n        cell,\n        empty;\n\n        for (idx = 0, length = rows.length; idx < length; idx++) {\n            record = {};\n            empty = true;\n            cells = rows[idx].cells;\n\n            for (fieldIndex = 0; fieldIndex < fieldCount; fieldIndex++) {\n                cell = cells[fieldIndex];\n                if (cell.nodeName.toLowerCase() !== \"th\") {\n                    empty = false;\n                    record[fields[fieldIndex].field] = cell.innerHTML;\n                }\n            }\n            if (!empty) {\n                data.push(record);\n            }\n        }\n\n        return data;\n    }\n\n    var Node = Model.define({\n        idField: \"id\",\n\n        init: function(value) {\n            var that = this,\n                hasChildren = that.hasChildren || value && value.hasChildren,\n                childrenField = \"items\",\n                childrenOptions = {};\n\n            kendo.data.Model.fn.init.call(that, value);\n\n            if (typeof that.children === STRING) {\n                childrenField = that.children;\n            }\n\n            childrenOptions = {\n                schema: {\n                    data: childrenField,\n                    model: {\n                        hasChildren: hasChildren,\n                        id: that.idField,\n                        fields: that.fields\n                    }\n                }\n            };\n\n            if (typeof that.children !== STRING) {\n                extend(childrenOptions, that.children);\n            }\n\n            childrenOptions.data = value;\n\n            if (!hasChildren) {\n                hasChildren = childrenOptions.schema.data;\n            }\n\n            if (typeof hasChildren === STRING) {\n                hasChildren = kendo.getter(hasChildren);\n            }\n\n            if (isFunction(hasChildren)) {\n                var hasChildrenObject = hasChildren.call(that, that);\n\n                if (hasChildrenObject && hasChildrenObject.length === 0) {\n                    that.hasChildren = false;\n                } else {\n                    that.hasChildren = !!hasChildrenObject;\n                }\n            }\n\n            that._childrenOptions = childrenOptions;\n\n            if (that.hasChildren) {\n                that._initChildren();\n            }\n\n            that._loaded = !!(value && value._loaded);\n        },\n\n        _initChildren: function() {\n            var that = this;\n            var children, transport, parameterMap;\n\n            if (!(that.children instanceof HierarchicalDataSource)) {\n                children = that.children = new HierarchicalDataSource(that._childrenOptions);\n\n                transport = children.transport;\n                parameterMap = transport.parameterMap;\n\n                transport.parameterMap = function(data, type) {\n                    data[that.idField || \"id\"] = that.id;\n\n                    if (parameterMap) {\n                        data = parameterMap.call(that, data, type);\n                    }\n\n                    return data;\n                };\n\n                children.parent = function() {\n                    return that;\n                };\n\n                children.bind(CHANGE, function(e) {\n                    e.node = e.node || that;\n                    that.trigger(CHANGE, e);\n                });\n\n                children.bind(ERROR, function(e) {\n                    var collection = that.parent();\n\n                    if (collection) {\n                        e.node = e.node || that;\n                        collection.trigger(ERROR, e);\n                    }\n                });\n\n                children.bind(ITEMSLOADED, function(e) {\n                    var collection = that.parent();\n\n                    if (collection) {\n                        collection.trigger(ITEMSLOADED, e);\n                    }\n                });\n\n                that._updateChildrenField();\n            }\n        },\n\n        append: function(model) {\n            this._initChildren();\n            this.loaded(true);\n            this.children.add(model);\n        },\n\n        hasChildren: false,\n\n        level: function() {\n            var parentNode = this.parentNode(),\n                level = 0;\n\n            while (parentNode && parentNode.parentNode) {\n                level++;\n                parentNode = parentNode.parentNode ? parentNode.parentNode() : null;\n            }\n\n            return level;\n        },\n\n        _updateChildrenField: function() {\n            var fieldName = this._childrenOptions.schema.data;\n\n            this[fieldName || \"items\"] = this.children.data();\n        },\n\n        _childrenLoaded: function() {\n            this._loaded = true;\n\n            this._updateChildrenField();\n        },\n\n        load: function() {\n            var options = {};\n            var method = \"_query\";\n            var children, promise;\n\n            if (this.hasChildren) {\n                this._initChildren();\n\n                children = this.children;\n\n                options[this.idField || \"id\"] = this.id;\n\n                if (!this._loaded) {\n                    children._data = undefined$1;\n                    method = \"read\";\n                }\n\n                children.one(CHANGE, this._childrenLoaded.bind(this));\n\n                if (this._matchFilter) {\n                    options.filter = { field: '_matchFilter', operator: 'eq', value: true };\n                }\n\n                promise = children[method](options);\n                if (!this._loaded) {\n                    this.trigger(ITEMLOAD, { promise: promise, node: this });\n                }\n            } else {\n                this.loaded(true);\n            }\n\n            return promise || $.Deferred().resolve().promise();\n        },\n\n        parentNode: function() {\n            var array = this.parent();\n\n            return array.parent();\n        },\n\n        loaded: function(value) {\n            if (value !== undefined$1) {\n                this._loaded = value;\n            } else {\n                return this._loaded;\n            }\n        },\n\n        shouldSerialize: function(field) {\n            return Model.fn.shouldSerialize.call(this, field) &&\n                    field !== \"children\" &&\n                    field !== \"_loaded\" &&\n                    field !== \"hasChildren\" &&\n                    field !== \"_childrenOptions\";\n        }\n    });\n\n    function dataMethod(name) {\n        return function() {\n            var data = this._data,\n                result = DataSource.fn[name].apply(this, slice.call(arguments));\n\n            if (this._data != data) {\n                this._attachBubbleHandlers();\n            }\n\n            return result;\n        };\n    }\n\n    var HierarchicalDataSource = DataSource.extend({\n        init: function(options) {\n            var node = Node.define({\n                children: options\n            });\n\n            if (options.filter && !options.serverFiltering) {\n                this._hierarchicalFilter = options.filter;\n                options.filter = null;\n            }\n\n            DataSource.fn.init.call(this, extend(true, {}, { schema: { modelBase: node, model: node } }, options));\n\n            this._attachBubbleHandlers();\n        },\n\n        _attachBubbleHandlers: function() {\n            var that = this;\n\n            that._data.bind(ERROR, function(e) {\n                that.trigger(ERROR, e);\n            });\n\n            that._data.bind(ITEMSLOADED, function(e) {\n                that.trigger(ITEMSLOADED, e);\n            });\n        },\n\n        loading: function() {\n            if (this._data) {\n                return this._data.loading() || this._childrenLoading();\n            }\n            return false;\n        },\n\n        _childrenLoading: function() {\n            var isLoading = false;\n            this._data.forEach(function(node) {\n                if (node.hasChildren && node.children.loading()) {\n                    isLoading = true;\n                }\n            });\n            return isLoading;\n        },\n\n        read: function(data) {\n            var result = DataSource.fn.read.call(this, data);\n\n            if (this._hierarchicalFilter) {\n                if (this._data && this._data.length > 0) {\n                    this.filter(this._hierarchicalFilter);\n                } else {\n                    this.options.filter = this._hierarchicalFilter;\n                    this._filter = normalizeFilter(this.options.filter);\n                    this._hierarchicalFilter = null;\n                }\n            }\n\n            return result;\n        },\n\n        remove: function(node) {\n            var parentNode = node.parentNode(),\n                dataSource = this,\n                result;\n\n            if (parentNode && parentNode._initChildren) {\n                dataSource = parentNode.children;\n            }\n\n            result = DataSource.fn.remove.call(dataSource, node);\n\n            if (parentNode && !dataSource.data().length) {\n                parentNode.hasChildren = false;\n            }\n\n            return result;\n        },\n\n        success: dataMethod(\"success\"),\n\n        data: dataMethod(\"data\"),\n\n        insert: function(index, model) {\n            var parentNode = this.parent();\n\n            if (parentNode && parentNode._initChildren) {\n                parentNode.hasChildren = true;\n                parentNode._initChildren();\n            }\n\n            return DataSource.fn.insert.call(this, index, model);\n        },\n\n        filter: function(val) {\n            if (val === undefined$1) {\n                 return this._filter;\n            }\n\n            if (!this.options.serverFiltering && this._markHierarchicalQuery(val)) {\n                val = { logic: \"or\", filters: [val, { field: '_matchFilter', operator: 'equals', value: true }] };\n            }\n\n            this.trigger(\"reset\");\n            this._query({ filter: val, page: 1 });\n        },\n\n        _markHierarchicalQuery: function(expressions) {\n            var compiled;\n            var accentFoldingFiltering = this.options.accentFoldingFiltering;\n\n            expressions = accentFoldingFiltering ? $.extend({}, normalizeFilter(expressions), { accentFoldingFiltering: accentFoldingFiltering }) : normalizeFilter(expressions);\n\n            if (!expressions || expressions.filters.length === 0) {\n                this._updateHierarchicalFilter(function() {return true;});\n                return false;\n            }\n\n            compiled = Query.filterExpr(expressions, { noEval: true });\n\n            this._updateHierarchicalFilter(compiled);\n            return true;\n        },\n\n         _updateHierarchicalFilter: function(filter) {\n            var current;\n            var data = this._data;\n            var result = false;\n\n            for (var idx = 0; idx < data.length; idx++) {\n                 current = data[idx];\n\n                 if (current.hasChildren) {\n                     current._matchFilter = current.children._updateHierarchicalFilter(filter);\n                    if (!current._matchFilter) {\n                        current._matchFilter = filter(current);\n                    }\n                } else {\n                    current._matchFilter = filter(current);\n                }\n\n                if (current._matchFilter) {\n                    result = true;\n                }\n            }\n            return result;\n        },\n\n        _find: function(method, value) {\n            var idx, length, node, children;\n            var data = this._data;\n\n            if (!data) {\n                return;\n            }\n\n            node = DataSource.fn[method].call(this, value);\n\n            if (node) {\n                return node;\n            }\n\n            data = this._flatData(this._data);\n\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                children = data[idx].children;\n\n                if (!(children instanceof HierarchicalDataSource)) {\n                    continue;\n                }\n\n                node = children[method](value);\n\n                if (node) {\n                    return node;\n                }\n            }\n        },\n\n        get: function(id) {\n            return this._find(\"get\", id);\n        },\n\n        getByUid: function(uid) {\n            return this._find(\"getByUid\", uid);\n        }\n    });\n\n    function inferList(list, fields) {\n        var items = $(list).children(),\n            idx,\n            length,\n            data = [],\n            record,\n            textField = fields[0].field,\n            urlField = fields[1] && fields[1].field,\n            spriteCssClassField = fields[2] && fields[2].field,\n            imageUrlField = fields[3] && fields[3].field,\n            item,\n            id,\n            textChild,\n            className,\n            children;\n\n        function elements(collection, tagName) {\n            return collection.filter(tagName).add(collection.find(tagName));\n        }\n\n        for (idx = 0, length = items.length; idx < length; idx++) {\n            record = { _loaded: true };\n            item = items.eq(idx);\n\n            textChild = item[0].firstChild;\n            children = item.children();\n            list = children.filter(\"ul\");\n            children = children.filter(\":not(ul)\");\n\n            id = item.attr(\"data-id\");\n\n            if (id) {\n                record.id = id;\n            }\n\n            if (textChild) {\n                record[textField] = textChild.nodeType == 3 ? textChild.nodeValue : children.text();\n            }\n\n            if (urlField) {\n                record[urlField] = elements(children, \"a\").attr(\"href\");\n            }\n\n            if (imageUrlField) {\n                record[imageUrlField] = elements(children, \"img\").attr(\"src\");\n            }\n\n            if (spriteCssClassField) {\n                className = elements(children, \".k-sprite\").prop(\"className\");\n                record[spriteCssClassField] = className && kendo.trim(className.replace(\"k-sprite\", \"\"));\n            }\n\n            if (list.length) {\n                record.items = inferList(list.eq(0), fields);\n            }\n\n            if (item.attr(\"data-hasChildren\") == \"true\") {\n                record.hasChildren = true;\n            }\n\n            data.push(record);\n        }\n\n        return data;\n    }\n\n    HierarchicalDataSource.create = function(options) {\n        options = options && options.push ? { data: options } : options;\n\n        var dataSource = options || {},\n            data = dataSource.data,\n            fields = dataSource.fields,\n            list = dataSource.list;\n\n        if (data && data._dataSource) {\n            return data._dataSource;\n        }\n\n        if (!data && fields && !dataSource.transport) {\n            if (list) {\n                data = inferList(list, fields);\n            }\n        }\n\n        dataSource.data = data;\n\n        return dataSource instanceof HierarchicalDataSource ? dataSource : new HierarchicalDataSource(dataSource);\n    };\n\n    var Buffer = kendo.Observable.extend({\n        init: function(dataSource, viewSize, disablePrefetch) {\n            kendo.Observable.fn.init.call(this);\n\n            this._prefetching = false;\n            this.dataSource = dataSource;\n            this.prefetch = !disablePrefetch;\n\n            var buffer = this;\n\n            dataSource.bind(\"change\", function() {\n                buffer._change();\n            });\n\n            dataSource.bind(\"reset\", function() {\n                buffer._reset();\n            });\n\n            this._syncWithDataSource();\n\n            this.setViewSize(viewSize);\n        },\n\n        setViewSize: function(viewSize) {\n            this.viewSize = viewSize;\n            this._recalculate();\n        },\n\n        at: function(index) {\n            var pageSize = this.pageSize,\n                itemPresent = true;\n\n            if (index >= this.total()) {\n                this.trigger(\"endreached\", { index: index });\n                return null;\n            }\n\n            if (!this.useRanges) {\n               return this.dataSource.view()[index];\n            }\n            if (this.useRanges) {\n                // out of range request\n                if (index < this.dataOffset || index >= this.skip + pageSize) {\n                    itemPresent = this.range(Math.floor(index / pageSize) * pageSize);\n                }\n\n                // prefetch\n                if (index === this.prefetchThreshold) {\n                    this._prefetch();\n                }\n\n                // mid-range jump - prefetchThreshold and nextPageThreshold may be equal, do not change to else if\n                if (index === this.midPageThreshold) {\n                    this.range(this.nextMidRange, true);\n                }\n                // next range jump\n                else if (index === this.nextPageThreshold) {\n                    this.range(this.nextFullRange);\n                }\n                // pull-back\n                else if (index === this.pullBackThreshold) {\n                    if (this.offset === this.skip) { // from full range to mid range\n                        this.range(this.previousMidRange);\n                    } else { // from mid range to full range\n                        this.range(this.previousFullRange);\n                    }\n                }\n\n                if (itemPresent) {\n                    return this.dataSource.at(index - this.dataOffset);\n                } else {\n                    this.trigger(\"endreached\", { index: index });\n                    return null;\n                }\n            }\n        },\n\n        indexOf: function(item) {\n            return this.dataSource.data().indexOf(item) + this.dataOffset;\n        },\n\n        total: function() {\n            return parseInt(this.dataSource.total(), 10);\n        },\n\n        next: function() {\n            var buffer = this,\n                pageSize = buffer.pageSize,\n                offset = buffer.skip - buffer.viewSize + pageSize,\n                pageSkip = math.max(math.floor(offset / pageSize), 0) * pageSize;\n\n            this.offset = offset;\n            this.dataSource.prefetch(pageSkip, pageSize, function() {\n                buffer._goToRange(offset, true);\n            });\n        },\n\n        range: function(offset, nextRange) {\n            if (this.offset === offset) {\n                return true;\n            }\n\n            var buffer = this,\n                pageSize = this.pageSize,\n                pageSkip = math.max(math.floor(offset / pageSize), 0) * pageSize,\n                dataSource = this.dataSource;\n\n            if (nextRange) {\n                pageSkip += pageSize;\n            }\n\n            if (dataSource.inRange(offset, pageSize)) {\n                this.offset = offset;\n                this._recalculate();\n                this._goToRange(offset);\n                return true;\n            } else if (this.prefetch) {\n                dataSource.prefetch(pageSkip, pageSize, function() {\n                    buffer.offset = offset;\n                    buffer._recalculate();\n                    buffer._goToRange(offset, true);\n                });\n                return false;\n            }\n\n            return true;\n        },\n\n        syncDataSource: function() {\n            var offset = this.offset;\n            this.offset = null;\n            this.range(offset);\n        },\n\n        destroy: function() {\n            this.unbind();\n        },\n\n        _prefetch: function() {\n            var buffer = this,\n                pageSize = this.pageSize,\n                prefetchOffset = this.skip + pageSize,\n                dataSource = this.dataSource;\n\n            if (!dataSource.inRange(prefetchOffset, pageSize) && !this._prefetching && this.prefetch) {\n                this._prefetching = true;\n                this.trigger(\"prefetching\", { skip: prefetchOffset, take: pageSize });\n\n                dataSource.prefetch(prefetchOffset, pageSize, function() {\n                    buffer._prefetching = false;\n                    buffer.trigger(\"prefetched\", { skip: prefetchOffset, take: pageSize });\n                });\n            }\n        },\n\n        _goToRange: function(offset, expanding) {\n            if (this.offset !== offset) {\n                return;\n            }\n\n            this.dataOffset = offset;\n            this._expanding = expanding;\n            this.dataSource.range(offset, this.pageSize);\n            this.dataSource.enableRequestsInProgress();\n        },\n\n        _reset: function() {\n            this._syncPending = true;\n        },\n\n        _change: function() {\n            var dataSource = this.dataSource;\n\n            this.length = this.useRanges ? dataSource.lastRange().end : dataSource.view().length;\n\n            if (this._syncPending) {\n                this._syncWithDataSource();\n                this._recalculate();\n                this._syncPending = false;\n                this.trigger(\"reset\", { offset: this.offset });\n            }\n\n            this.trigger(\"resize\");\n\n            if (this._expanding) {\n                this.trigger(\"expand\");\n            }\n\n            delete this._expanding;\n        },\n\n        _syncWithDataSource: function() {\n            var dataSource = this.dataSource;\n\n            this._firstItemUid = dataSource.firstItemUid();\n            this.dataOffset = this.offset = dataSource.skip() || 0;\n            this.pageSize = dataSource.pageSize();\n            this.useRanges = dataSource.options.serverPaging;\n        },\n\n        _recalculate: function() {\n            var pageSize = this.pageSize,\n                offset = this.offset,\n                viewSize = this.viewSize,\n                skip = Math.ceil(offset / pageSize) * pageSize;\n\n            this.skip = skip;\n            this.midPageThreshold = skip + pageSize - 1;\n            this.nextPageThreshold = skip + viewSize - 1;\n            this.prefetchThreshold = skip + Math.floor(pageSize / 3 * 2);\n            this.pullBackThreshold = this.offset - 1;\n\n            this.nextMidRange = skip + pageSize - viewSize;\n            this.nextFullRange = skip;\n            this.previousMidRange = offset - viewSize;\n            this.previousFullRange = skip - pageSize;\n        }\n    });\n\n    var BatchBuffer = kendo.Observable.extend({\n        init: function(dataSource, batchSize) {\n            var batchBuffer = this;\n\n            kendo.Observable.fn.init.call(batchBuffer);\n\n            this.dataSource = dataSource;\n            this.batchSize = batchSize;\n            this._total = 0;\n\n            this.buffer = new Buffer(dataSource, batchSize * 3);\n\n            this.buffer.bind({\n                \"endreached\": function(e) {\n                    batchBuffer.trigger(\"endreached\", { index: e.index });\n                },\n                \"prefetching\": function(e) {\n                    batchBuffer.trigger(\"prefetching\", { skip: e.skip, take: e.take });\n                },\n                \"prefetched\": function(e) {\n                    batchBuffer.trigger(\"prefetched\", { skip: e.skip, take: e.take });\n                },\n                \"reset\": function() {\n                    batchBuffer._total = 0;\n                    batchBuffer.trigger(\"reset\");\n                },\n                \"resize\": function() {\n                    batchBuffer._total = Math.ceil(this.length / batchBuffer.batchSize);\n                    batchBuffer.trigger(\"resize\", { total: batchBuffer.total(), offset: this.offset });\n                }\n            });\n        },\n\n        syncDataSource: function() {\n            this.buffer.syncDataSource();\n        },\n\n        at: function(index) {\n            var buffer = this.buffer,\n                skip = index * this.batchSize,\n                take = this.batchSize,\n                view = [],\n                item;\n\n            if (buffer.offset > skip) {\n                buffer.at(buffer.offset - 1);\n            }\n\n            for (var i = 0; i < take; i++) {\n                item = buffer.at(skip + i);\n\n                if (item === null) {\n                    break;\n                }\n\n                view.push(item);\n            }\n\n            return view;\n        },\n\n        total: function() {\n            return this._total;\n        },\n\n        destroy: function() {\n            this.buffer.destroy();\n            this.unbind();\n        }\n    });\n\n    extend(true, kendo.data, {\n        readers: {\n            json: DataReader\n        },\n        Query: Query,\n        DataSource: DataSource,\n        HierarchicalDataSource: HierarchicalDataSource,\n        Node: Node,\n        Comparer: Comparer,\n        ObservableObject: ObservableObject,\n        ObservableArray: ObservableArray,\n        LazyObservableArray: LazyObservableArray,\n        LocalTransport: LocalTransport,\n        RemoteTransport: RemoteTransport,\n        Cache: Cache,\n        DataReader: DataReader,\n        Model: Model,\n        Buffer: Buffer,\n        BatchBuffer: BatchBuffer\n    });\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.data.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.data.odata.js":
/*!************************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.data.odata.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\nvar __meta__ = {\n    id: \"data.odata\",\n    name: \"OData\",\n    category: \"framework\",\n    depends: [ \"core\" ],\n    hidden: true\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        extend = $.extend,\n        NEWLINE = \"\\r\\n\",\n        DOUBLELINE = \"\\r\\n\\r\\n\",\n        isFunction = kendo.isFunction,\n        odataFilters = {\n            eq: \"eq\",\n            neq: \"ne\",\n            gt: \"gt\",\n            gte: \"ge\",\n            lt: \"lt\",\n            lte: \"le\",\n            contains: \"substringof\",\n            doesnotcontain: \"substringof\",\n            endswith: \"endswith\",\n            startswith: \"startswith\",\n            isnull: \"eq\",\n            isnotnull: \"ne\",\n            isnullorempty: \"eq\",\n            isnotnullorempty: \"ne\",\n            isempty: \"eq\",\n            isnotempty: \"ne\"\n        },\n        odataFiltersVersionFour = extend({}, odataFilters, {\n            contains: \"contains\"\n        }),\n        mappers = {\n            pageSize: $.noop,\n            page: $.noop,\n            filter: function(params, filter, useVersionFour) {\n                if (filter) {\n                    filter = toOdataFilter(filter, useVersionFour);\n                    if (filter) {\n                        params.$filter = filter;\n                    }\n                }\n            },\n            sort: function(params, orderby) {\n                var expr = $.map(orderby, function(value) {\n                    var order = value.field.replace(/\\./g, \"/\");\n\n                    if (value.dir === \"desc\") {\n                        order += \" desc\";\n                    }\n\n                    return order;\n                }).join(\",\");\n\n                if (expr) {\n                    params.$orderby = expr;\n                }\n            },\n            skip: function(params, skip) {\n                if (skip) {\n                    params.$skip = skip;\n                }\n            },\n            take: function(params, take) {\n                if (take) {\n                    params.$top = take;\n                }\n            }\n        },\n        defaultDataType = {\n            read: {\n                dataType: \"jsonp\"\n            }\n        };\n\n    function toOdataFilter(filter, useOdataFour) {\n        var result = [],\n            logic = filter.logic || \"and\",\n            idx,\n            length,\n            field,\n            type,\n            format,\n            operator,\n            value,\n            ignoreCase,\n            filters = filter.filters;\n\n        for (idx = 0, length = filters.length; idx < length; idx++) {\n            filter = filters[idx];\n            field = filter.field;\n            value = filter.value;\n            operator = filter.operator;\n\n            if (filter.filters) {\n                filter = toOdataFilter(filter, useOdataFour);\n            } else {\n                ignoreCase = filter.ignoreCase;\n                field = field.replace(/\\./g, \"/\");\n                filter = odataFilters[operator];\n                if (useOdataFour) {\n                    filter = odataFiltersVersionFour[operator];\n                }\n\n                if (operator === \"isnullorempty\") {\n                    filter = kendo.format(\"({0} {1} null or {0} {1} '')\", field, filter);\n                } else if (operator === \"isnotnullorempty\") {\n                    filter = kendo.format(\"({0} {1} null and {0} {1} '')\", field, filter);\n                } else if (operator === \"isnull\" || operator === \"isnotnull\") {\n                    filter = kendo.format(\"{0} {1} null\", field, filter);\n                } else if (operator === \"isempty\" || operator === \"isnotempty\") {\n                    filter = kendo.format(\"{0} {1} ''\", field, filter);\n                } else if (filter && value !== undefined$1) {\n                    type = kendo.type(value);\n                    if (type === \"string\") {\n                        format = \"'{1}'\";\n                        value = value.replace(/'/g, \"''\");\n\n                        if (ignoreCase === true) {\n                            field = \"tolower(\" + field + \")\";\n                        }\n\n                    } else if (type === \"date\") {\n                        if (useOdataFour) {\n                            format = \"{1:yyyy-MM-ddTHH:mm:ss+00:00}\";\n                            value = kendo.timezone.apply(value, 'Etc/UTC');\n                        } else {\n                            format = \"datetime'{1:yyyy-MM-ddTHH:mm:ss}'\";\n                        }\n                    } else {\n                        format = \"{1}\";\n                    }\n\n                    if (filter.length > 3) {\n                        if (filter !== \"substringof\") {\n                            format = \"{0}({2},\" + format + \")\";\n                        } else {\n                            format = \"{0}(\" + format + \",{2})\";\n                            if (operator === \"doesnotcontain\") {\n                                if (useOdataFour) {\n                                    format = \"{0}({2},'{1}') eq -1\";\n                                    filter = \"indexof\";\n                                } else {\n                                    format += \" eq false\";\n                                }\n                            }\n                        }\n                    } else {\n                        format = \"{2} {0} \" + format;\n                    }\n\n                    filter = kendo.format(format, filter, value, field);\n                }\n            }\n\n            result.push(filter);\n        }\n\n        filter = result.join(\" \" + logic + \" \");\n\n        if (result.length > 1) {\n            filter = \"(\" + filter + \")\";\n        }\n\n        return filter;\n    }\n\n    function stripMetadata(obj) {\n        for (var name in obj) {\n            if (name.indexOf(\"@odata\") === 0) {\n                delete obj[name];\n            }\n        }\n    }\n\n    function hex16() {\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substr(1);\n    }\n\n    function createBoundary(prefix) {\n        return prefix + hex16() + '-' + hex16() + '-' + hex16();\n    }\n\n    function createDelimeter(boundary, close) {\n        var result = NEWLINE + \"--\" + boundary;\n\n        if (close) {\n            result += \"--\";\n        }\n\n        return result;\n    }\n\n    function createCommand(transport, item, httpVerb, command) {\n         var transportUrl = transport.options[command].url;\n         var commandPrefix = kendo.format(\"{0} \", httpVerb);\n\n         if (isFunction(transportUrl)) {\n             return commandPrefix + transportUrl(item);\n         } else {\n             return commandPrefix + transportUrl;\n         }\n    }\n\n    function getOperationHeader(changeset, changeId) {\n        var header = \"\";\n\n        header += createDelimeter(changeset, false);\n        header += NEWLINE + 'Content-Type: application/http';\n        header += NEWLINE + 'Content-Transfer-Encoding: binary';\n        header += NEWLINE + 'Content-ID: ' + changeId;\n\n        return header;\n    }\n\n    function getOperationContent(item) {\n        var content = \"\";\n\n        content += NEWLINE + \"Content-Type: application/json;odata=minimalmetadata\";\n        content += NEWLINE + \"Prefer: return=representation\";\n        content += DOUBLELINE + kendo.stringify(item);\n\n        return content;\n    }\n\n    function getOperations(collection, changeset, changeId, command, transport, skipContent) {\n        var requestBody = \"\";\n\n        for (var i = 0; i < collection.length; i++) {\n            requestBody += getOperationHeader(changeset, changeId);\n            requestBody += DOUBLELINE + createCommand(transport, collection[i], transport.options[command].type, command) + ' HTTP/1.1';\n            if (!skipContent) {\n                requestBody += getOperationContent(collection[i]);\n            }\n            requestBody += NEWLINE;\n            changeId++;\n        }\n\n        return requestBody;\n    }\n\n    function processCollection(colection, boundary, changeset, changeId, transport, command, skipContent) {\n        var requestBody = \"\";\n\n        requestBody += getBoundary(boundary, changeset);\n        requestBody += getOperations(colection, changeset, changeId, command, transport, skipContent);\n        requestBody += createDelimeter(changeset, true);\n        requestBody += NEWLINE;\n\n        return requestBody;\n    }\n\n    function getBoundary(boundary,changeset) {\n        var requestBody = \"\";\n\n        requestBody += \"--\" + boundary + NEWLINE;\n        requestBody += \"Content-Type: multipart/mixed; boundary=\" + changeset + NEWLINE;\n\n        return requestBody;\n    }\n\n    function createBatchRequest(transport, colections) {\n\t\tvar options = extend({}, transport.options.batch);\n        var boundary = createBoundary(\"sf_batch_\");\n        var requestBody = \"\";\n        var changeId = 0;\n        var batchURL = transport.options.batch.url;\n        var changeset = createBoundary(\"sf_changeset_\");\n\n        options.type = transport.options.batch.type;\n        options.url = isFunction(batchURL) ? batchURL() : batchURL;\n\t\toptions.headers = extend(options.headers || {}, {\n\t\t\t\"Content-Type\": \"multipart/mixed; boundary=\" + boundary\n\t\t});\n\n        if (colections.updated.length) {\n            requestBody += processCollection(colections.updated, boundary, changeset, changeId, transport, \"update\", false);\n            changeId += colections.updated.length;\n            changeset = createBoundary(\"sf_changeset_\");\n        }\n\n        if (colections.destroyed.length) {\n            requestBody += processCollection(colections.destroyed, boundary, changeset, changeId, transport, \"destroy\", true);\n            changeId += colections.destroyed.length;\n            changeset = createBoundary(\"sf_changeset_\");\n        }\n\n        if (colections.created.length) {\n            requestBody += processCollection(colections.created, boundary, changeset, changeId, transport, \"create\", false);\n        }\n\n        requestBody += createDelimeter(boundary, true);\n\n        options.data = requestBody;\n\n        return options;\n    }\n\n    function parseBatchResponse(responseText) {\n        var responseMarkers = responseText.match(/--changesetresponse_[a-z0-9-]+$/gm);\n        var markerIndex = 0;\n        var collections = [];\n        var changeBody;\n        var status;\n        var code;\n        var marker;\n        var jsonModel;\n\n        collections.push({ models: [], passed: true });\n\n        for (var i = 0; i < responseMarkers.length; i++) {\n            marker = responseMarkers[i];\n            if (marker.lastIndexOf('--', marker.length - 1)) {\n                if (i < responseMarkers.length - 1) {\n                    collections.push({ models: [], passed: true });\n                }\n                continue;\n            }\n\n            if (!markerIndex) {\n                markerIndex = responseText.indexOf(marker);\n            } else {\n                markerIndex = responseText.indexOf(marker, markerIndex + marker.length);\n            }\n\n            changeBody = responseText.substring(markerIndex, responseText.indexOf(\"--\", markerIndex + 1));\n            status = changeBody.match(/^HTTP\\/1\\.\\d (\\d{3}) (.*)$/gm).pop();\n            code = kendo.parseFloat(status.match(/\\d{3}/g).pop());\n\n            if (code >= 200 && code <= 299) {\n                jsonModel = changeBody.match(/\\{.*\\}/gm);\n                if (jsonModel) {\n                    collections[collections.length - 1].models.push(JSON.parse(jsonModel[0]));\n                }\n            } else {\n                collections[collections.length - 1].passed = false;\n            }\n\n        }\n\n        return collections;\n    }\n\n    extend(true, kendo.data, {\n        schemas: {\n            odata: {\n                type: \"json\",\n                data: function(data) {\n                    return data.d.results || [data.d];\n                },\n                total: \"d.__count\"\n            }\n        },\n        transports: {\n            odata: {\n                read: {\n                    cache: true, // to prevent jQuery from adding cache buster\n                    dataType: \"jsonp\",\n                    jsonp: \"$callback\"\n                },\n                update: {\n                    cache: true,\n                    dataType: \"json\",\n                    contentType: \"application/json\", // to inform the server the the request body is JSON encoded\n                    type: \"PUT\" // can be PUT or MERGE\n                },\n                create: {\n                    cache: true,\n                    dataType: \"json\",\n                    contentType: \"application/json\",\n                    type: \"POST\" // must be POST to create new entity\n                },\n                destroy: {\n                    cache: true,\n                    dataType: \"json\",\n                    type: \"DELETE\"\n                },\n                parameterMap: function(options, type, useVersionFour) {\n                    var params,\n                        value,\n                        option,\n                        dataType;\n\n                    options = options || {};\n                    type = type || \"read\";\n                    dataType = (this.options || defaultDataType)[type];\n                    dataType = dataType ? dataType.dataType : \"json\";\n\n                    if (type === \"read\") {\n                        params = {\n                            $inlinecount: \"allpages\"\n                        };\n\n                        if (dataType != \"json\") {\n                            params.$format = \"json\";\n                        }\n\n                        for (option in options) {\n                            if (mappers[option]) {\n                                mappers[option](params, options[option], useVersionFour);\n                            } else {\n                                params[option] = options[option];\n                            }\n                        }\n                    } else {\n                        if (dataType !== \"json\") {\n                            throw new Error(\"Only json dataType can be used for \" + type + \" operation.\");\n                        }\n\n                        if (type !== \"destroy\") {\n                            for (option in options) {\n                                value = options[option];\n                                if (typeof value === \"number\") {\n                                    options[option] = value + \"\";\n                                }\n                            }\n\n                            params = kendo.stringify(options);\n                        }\n                    }\n\n                    return params;\n                }\n            }\n        }\n    });\n\n    extend(true, kendo.data, {\n        schemas: {\n            \"odata-v4\": {\n                type: \"json\",\n                data: function(data) {\n                    if (Array.isArray(data)) {\n                        for (var i = 0; i < data.length; i++) {\n                            stripMetadata(data[i]);\n                        }\n                        return data;\n                    } else {\n                        data = $.extend({}, data);\n                        stripMetadata(data);\n\n                        if (data.value) {\n                            return data.value;\n                        }\n                        return [data];\n                    }\n                },\n                total: function(data) {\n                    return data[\"@odata.count\"];\n                }\n            }\n        },\n        transports: {\n            \"odata-v4\": {\n                batch: {\n                    type: \"POST\"\n                },\n                read: {\n                    cache: true, // to prevent jQuery from adding cache buster\n                    dataType: \"json\"\n                },\n                update: {\n                    cache: true,\n                    dataType: \"json\",\n                    contentType: \"application/json;IEEE754Compatible=true\", // to inform the server the the request body is JSON encoded\n                    type: \"PUT\" // can be PUT or MERGE\n                },\n                create: {\n                    cache: true,\n                    dataType: \"json\",\n                    contentType: \"application/json;IEEE754Compatible=true\",\n                    type: \"POST\" // must be POST to create new entity\n                },\n                destroy: {\n                    cache: true,\n                    dataType: \"json\",\n                    type: \"DELETE\"\n                },\n                parameterMap: function(options, type) {\n                    var result = kendo.data.transports.odata.parameterMap(options, type, true);\n                    if (type == \"read\") {\n                        result.$count = true;\n                        delete result.$inlinecount;\n                    }\n\n\t\t\t\t\tif (result && result.$filter) {\n\t\t\t\t\t\t// Remove the single quotation marks around the GUID (OData v4).\n\t\t\t\t\t\tresult.$filter = result.$filter.replace(/('[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}')/ig, function(x) {\n\t\t\t\t\t\t\treturn x.substring(1, x.length - 1);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n                    return result;\n                },\n                submit: function(e) {\n                    var that = this;\n                    var options = createBatchRequest(that, e.data);\n                    var collections = e.data;\n\n                    if (!collections.updated.length && !collections.destroyed.length && !collections.created.length) {\n                        return;\n                    }\n\n                    $.ajax(extend(true, {}, {\n                        success: function(response) {\n                            var responses = parseBatchResponse(response);\n                            var index = 0;\n                            var current;\n\n                            if (collections.updated.length) {\n                                current = responses[index];\n                                if (current.passed) {\n                                    // Pass either the obtained models or an empty array if only status codes are returned.\n                                    e.success(current.models.length ? current.models : [], \"update\");\n                                }\n                                index++;\n                            }\n                            if (collections.destroyed.length) {\n                                current = responses[index];\n                                if (current.passed) {\n                                    // For delete operations OData returns only status codes.\n                                    // Passing empty array to datasource will force it to correctly remove the deleted items from the pristine collection.\n                                    e.success([], \"destroy\");\n                                }\n                                index++;\n                            }\n                            if (collections.created.length) {\n                                current = responses[index];\n                                if (current.passed) {\n                                    e.success(current.models, \"create\");\n                                }\n                            }\n                        },\n                        error: function(response, status, error) {\n                            e.error(response, status, error);\n                        }\n                    }, options));\n                }\n            }\n        }\n    });\n\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.data.odata.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.data.signalr.js":
/*!**************************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.data.signalr.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.data.js */ \"./node_modules/kendo-ui-core/esm/kendo.data.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\nvar __meta__ = {\n    id: \"data.signalr\",\n    name: \"SignalR\",\n    category: \"framework\",\n    depends: [ \"data\" ],\n    hidden: true\n};\n\n(function($) {\n    var kendo = __webpack_provided_window_dot_kendo;\n    var isFunction = kendo.isFunction;\n\n    function isJQueryPromise(promise) {\n        return promise && isFunction(promise.done) && isFunction(promise.fail);\n    }\n\n    function isNativePromise(promise) {\n        return promise && isFunction(promise.then) && isFunction(promise.catch);\n    }\n\n    var transport = kendo.data.RemoteTransport.extend({\n        init: function(options) {\n            var signalr = options && options.signalr ? options.signalr : {};\n\n            var promise = signalr.promise;\n\n            if (!promise) {\n                throw new Error('The \"promise\" option must be set.');\n            }\n\n            if (!isJQueryPromise(promise) && !isNativePromise(promise)) {\n                throw new Error('The \"promise\" option must be a Promise.');\n            }\n\n            this.promise = promise;\n\n            var hub = signalr.hub;\n\n            if (!hub) {\n                throw new Error('The \"hub\" option must be set.');\n            }\n\n            if (typeof hub.on != \"function\" || typeof hub.invoke != \"function\") {\n                throw new Error('The \"hub\" option is not a valid SignalR hub proxy.');\n            }\n\n            this.hub = hub;\n\n            kendo.data.RemoteTransport.fn.init.call(this, options);\n        },\n\n        push: function(callbacks) {\n            var client = this.options.signalr.client || {};\n\n            if (client.create) {\n                this.hub.on(client.create, callbacks.pushCreate);\n            }\n\n            if (client.update) {\n                this.hub.on(client.update, callbacks.pushUpdate);\n            }\n\n            if (client.destroy) {\n                this.hub.on(client.destroy, callbacks.pushDestroy);\n            }\n        },\n\n        _crud: function(options, type) {\n            var hub = this.hub;\n            var promise = this.promise;\n            var server = this.options.signalr.server;\n\n            if (!server || !server[type]) {\n                throw new Error(kendo.format('The \"server.{0}\" option must be set.', type));\n            }\n\n            var args = [server[type]];\n\n            var data = this.parameterMap(options.data, type);\n\n            if (!$.isEmptyObject(data)) {\n                args.push(data);\n            }\n\n            if (isJQueryPromise(promise)) {\n                promise.done(function() {\n                    hub.invoke.apply(hub, args)\n                              .done(options.success)\n                              .fail(options.error);\n                });\n            } else if (isNativePromise(promise)) {\n                promise.then(function() {\n                    hub.invoke.apply(hub, args)\n                              .then(options.success)\n                              .catch(options.error);\n                });\n            }\n        },\n\n        read: function(options) {\n            this._crud(options, \"read\");\n        },\n\n        create: function(options) {\n            this._crud(options, \"create\");\n        },\n\n        update: function(options) {\n            this._crud(options, \"update\");\n        },\n\n        destroy: function(options) {\n            this._crud(options, \"destroy\");\n        }\n    });\n\n    $.extend(true, kendo.data, {\n        transports: {\n            signalr: transport\n        }\n    });\n\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.data.signalr.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.data.xml.js":
/*!**********************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.data.xml.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\nvar __meta__ = {\n    id: \"data.xml\",\n    name: \"XML\",\n    category: \"framework\",\n    depends: [ \"core\" ],\n    hidden: true\n};\n\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        isArray = Array.isArray,\n        isPlainObject = $.isPlainObject,\n        map = $.map,\n        each = $.each,\n        extend = $.extend,\n        getter = kendo.getter,\n        Class = kendo.Class;\n\n    var XmlDataReader = Class.extend({\n        init: function(options) {\n            var that = this,\n                total = options.total,\n                model = options.model,\n                parse = options.parse,\n                errors = options.errors,\n                serialize = options.serialize,\n                data = options.data;\n\n            if (model) {\n                if (isPlainObject(model)) {\n                    var base = options.modelBase || kendo.data.Model;\n\n                    if (model.fields) {\n                        each(model.fields, function(field, value) {\n                            if (isPlainObject(value) && value.field) {\n                                if (!kendo.isFunction(value.field)) {\n                                    value = extend(value, { field: that.getter(value.field) });\n                                }\n                            } else {\n                                value = { field: that.getter(value) };\n                            }\n                            model.fields[field] = value;\n                        });\n                    }\n\n                    var id = model.id;\n                    if (id) {\n                        var idField = {};\n\n                        idField[that.xpathToMember(id, true)] = { field: that.getter(id) };\n                        model.fields = extend(idField, model.fields);\n                        model.id = that.xpathToMember(id);\n                    }\n                    model = base.define(model);\n                }\n\n                that.model = model;\n            }\n\n            if (total) {\n                if (typeof total == \"string\") {\n                    total = that.getter(total);\n                    that.total = function(data) {\n                        return parseInt(total(data), 10);\n                    };\n                } else if (typeof total == \"function\") {\n                    that.total = total;\n                }\n            }\n\n            if (errors) {\n                if (typeof errors == \"string\") {\n                    errors = that.getter(errors);\n                    that.errors = function(data) {\n                        return errors(data) || null;\n                    };\n                } else if (typeof errors == \"function\") {\n                    that.errors = errors;\n                }\n            }\n\n            if (data) {\n                if (typeof data == \"string\") {\n                    data = that.xpathToMember(data);\n                    that.data = function(value) {\n                        var result = that.evaluate(value, data),\n                            modelInstance;\n\n                        result = isArray(result) ? result : [result];\n\n                        if (that.model && model.fields) {\n                            modelInstance = new that.model();\n\n                            return map(result, function(value) {\n                                if (value) {\n                                    var record = {}, field;\n\n                                    for (field in model.fields) {\n                                        record[field] = modelInstance._parse(field, model.fields[field].field(value));\n                                    }\n\n                                    return record;\n                                }\n                            });\n                        }\n\n                        return result;\n                    };\n                } else if (typeof data == \"function\") {\n                    that.data = data;\n                }\n            }\n\n            if (typeof parse == \"function\") {\n                var xmlParse = that.parse;\n\n                that.parse = function(data) {\n                    var xml = parse.call(that, data);\n                    return xmlParse.call(that, xml);\n                };\n            }\n\n            if (typeof serialize == \"function\") {\n                that.serialize = serialize;\n            }\n        },\n        total: function(result) {\n            return this.data(result).length;\n        },\n        errors: function(data) {\n            return data ? data.errors : null;\n        },\n        serialize: function(data) {\n            return data;\n        },\n        parseDOM: function(element) {\n            var result = {},\n                parsedNode,\n                node,\n                nodeType,\n                nodeName,\n                member,\n                attribute,\n                attributes = element.attributes,\n                attributeCount = attributes.length,\n                idx;\n\n            for (idx = 0; idx < attributeCount; idx++) {\n                attribute = attributes[idx];\n                result[\"@\" + attribute.nodeName] = attribute.nodeValue;\n            }\n\n            for (node = element.firstChild; node; node = node.nextSibling) {\n                nodeType = node.nodeType;\n\n                if (nodeType === 3 || nodeType === 4) {\n                    // text nodes or CDATA are stored as #text field\n                    result[\"#text\"] = node.nodeValue;\n                } else if (nodeType === 1) {\n                    // elements are stored as fields\n                    parsedNode = this.parseDOM(node);\n\n                    nodeName = node.nodeName;\n\n                    member = result[nodeName];\n\n                    if (isArray(member)) {\n                        // elements of same nodeName are stored as array\n                        member.push(parsedNode);\n                    } else if (member !== undefined$1) {\n                        member = [member, parsedNode];\n                    } else {\n                        member = parsedNode;\n                    }\n\n                    result[nodeName] = member;\n                }\n            }\n            return result;\n        },\n\n        evaluate: function(value, expression) {\n            var members = expression.split(\".\"),\n                member,\n                result,\n                length,\n                intermediateResult,\n                idx;\n\n            while (member = members.shift()) {\n                value = value[member];\n\n                if (isArray(value)) {\n                    result = [];\n                    expression = members.join(\".\");\n\n                    for (idx = 0, length = value.length; idx < length; idx++) {\n                        intermediateResult = this.evaluate(value[idx], expression);\n\n                        intermediateResult = isArray(intermediateResult) ? intermediateResult : [intermediateResult];\n\n                        result.push.apply(result, intermediateResult);\n                    }\n\n                    return result;\n                }\n            }\n\n            return value;\n        },\n\n        parse: function(xml) {\n            var documentElement,\n                tree,\n                result = {};\n\n            documentElement = xml.documentElement || $.parseXML(xml).documentElement;\n\n            tree = this.parseDOM(documentElement);\n\n            result[documentElement.nodeName] = tree;\n\n            return result;\n        },\n\n        xpathToMember: function(member, raw) {\n            if (!member) {\n                return \"\";\n            }\n\n            member = member.replace(/^\\//, \"\") // remove the first \"/\"\n                           .replace(/\\//g, \".\"); // replace all \"/\" with \".\"\n\n            if (member.indexOf(\"@\") >= 0) {\n                // replace @attribute with '[\"@attribute\"]'\n                return member.replace(/\\.?(@.*)/, raw ? '$1' : '[\"$1\"]');\n            }\n\n            if (member.indexOf(\"text()\") >= 0) {\n                // replace \".text()\" with '[\"#text\"]'\n                return member.replace(/(\\.?text\\(\\))/, raw ? '#text' : '[\"#text\"]');\n            }\n\n            return member;\n        },\n        getter: function(member) {\n            return getter(this.xpathToMember(member), true);\n        }\n    });\n\n    $.extend(true, kendo.data, {\n        XmlDataReader: XmlDataReader,\n        readers: {\n            xml: XmlDataReader\n        }\n    });\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.data.xml.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.dateinput.js":
/*!***********************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.dateinput.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _kendo_label_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.label.js */ \"./node_modules/kendo-ui-core/esm/kendo.label.js\");\n/* harmony import */ var _kendo_icons_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.icons.js */ \"./node_modules/kendo-ui-core/esm/kendo.icons.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\n// The current file development is no longer in active phase but the code will be kept as is.\n\nvar __meta__ = {\n    id: \"dateinput\",\n    name: \"DateInput\",\n    category: \"web\",\n    description: \"The DateInput widget allows to edit date by typing.\",\n    depends: [ \"core\", \"label\" ]\n};\n\n(function($, undefined$1) {\n    var global = window;\n    var kendo = __webpack_provided_window_dot_kendo;\n    var caret = kendo.caret;\n    var ui = kendo.ui;\n    var Widget = ui.Widget;\n    var keys = kendo.keys;\n    var ns = \".kendoDateInput\";\n    var objectToString = {}.toString;\n    var isPlainObject = $.isPlainObject;\n\n    var INPUT_EVENT_NAME = (kendo.support.propertyChangeEvent ? \"propertychange.kendoDateInput input\" : \"input\") + ns;\n\n    var FOCUSED = \"k-focus\";\n    var STATEDISABLED = \"k-disabled\";\n    var STATEINVALID = \"k-invalid\";\n\n    var DISABLED = \"disabled\";\n    var READONLY = \"readonly\";\n    var CHANGE = \"change\";\n\n    var knownSymbols = \"dMyHhmftsz\";\n\n    var DateInput = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n            element = that.element;\n\n            options = that.options;\n            options.format = kendo._extractFormat(options.format || kendo.getCulture(options.culture).calendars.standard.patterns.d);\n            options.min = kendo.parseDate(element.attr(\"min\")) || kendo.parseDate(options.min);\n            options.max = kendo.parseDate(element.attr(\"max\")) || kendo.parseDate(options.max);\n\n            var wrapperClass = (element.parent().attr(\"class\") || \"\");\n            var skipStyling = wrapperClass.indexOf(\"picker\") >= 0 && wrapperClass.indexOf(\"rangepicker\") < 0;\n\n            if (skipStyling) {\n                that.wrapper = that.element.parent();\n            } else {\n                that.wrapper = element.wrap(\"<span class='k-dateinput k-input'></span>\").parent();\n                that.wrapper.addClass(element[0].className).removeClass('input-validation-error');\n            }\n            that.wrapper[0].style.cssText = element[0].style.cssText;\n            element.css({\n                height: element[0].style.height\n            });\n\n\n            that._validationIcon = $(kendo.ui.icon({ icon: \"exclamation-circle\", iconClass: \"k-input-validation-icon k-hidden\" })).insertAfter(element);\n\n            that._form();\n\n            that.element\n                .addClass(\"k-input-inner\")\n                .attr(\"autocomplete\", \"off\")\n                .on(\"focus\" + ns, function() {\n                    that.wrapper.addClass(FOCUSED);\n                })\n                .on(\"focusout\" + ns, function() {\n                    that.wrapper.removeClass(FOCUSED);\n                    that._change();\n                });\n\n            try {\n                element[0].setAttribute(\"type\", \"text\");\n            } catch (e) {\n                element[0].type = \"text\";\n            }\n\n            var disabled = element.is(\"[disabled]\") || $(that.element).parents(\"fieldset\").is(':disabled');\n\n            if (disabled) {\n                that.enable(false);\n            } else {\n                that.readonly(element.is(\"[readonly]\"));\n            }\n            that.value(that.options.value || element.val());\n            if (!skipStyling) {\n                that._applyCssClasses();\n            }\n\n            if (options.label) {\n                that._label();\n            }\n\n            kendo.notify(that);\n        },\n\n        options: {\n            name: \"DateInput\",\n            culture: \"\",\n            value: \"\",\n            format: \"\",\n            min: new Date(1900, 0, 1),\n            max: new Date(2099, 11, 31),\n            messages: {\n                \"year\": \"year\",\n                \"month\": \"month\",\n                \"day\": \"day\",\n                \"weekday\": \"day of the week\",\n                \"hour\": \"hours\",\n                \"minute\": \"minutes\",\n                \"second\": \"seconds\",\n                \"dayperiod\": \"AM/PM\"\n            },\n            size: \"medium\",\n            fillMode: \"solid\",\n            rounded: \"medium\",\n            label: null\n        },\n\n        events: [\n            CHANGE\n        ],\n\n        min: function(value) {\n            if (value !== undefined$1) {\n                this.options.min = value;\n            } else {\n                return this.options.min;\n            }\n        },\n\n        max: function(value) {\n            if (value !== undefined$1) {\n                this.options.max = value;\n            } else {\n                return this.options.max;\n            }\n        },\n\n        setOptions: function(options) {\n            var that = this;\n            Widget.fn.setOptions.call(that, options);\n            this._unbindInput();\n            this._bindInput();\n            this._updateElementValue();\n\n            if (options.label && that._inputLabel) {\n                that.label.setOptions(options.label);\n            } else if (options.label === false) {\n                that.label._unwrapFloating();\n                that._inputLabel.remove();\n                delete that._inputLabel;\n            } else if (options.label) {\n                that._label();\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n            that.element.off(ns);\n\n            if (that._formElement) {\n                that._formElement.off(\"reset\", that._resetHandler);\n            }\n\n            if (that.label) {\n                that.label.destroy();\n            }\n\n            Widget.fn.destroy.call(that);\n        },\n\n        value: function(value) {\n            if (value === undefined$1) {\n                return this._dateTime.getDateObject();\n            }\n\n            if (value === null) {\n                value = \"\";\n            }\n\n            if (objectToString.call(value) !== \"[object Date]\") {\n                value = kendo.parseDate(value, this.options.format, this.options.culture);\n            }\n\n            if (value && !value.getTime()) {\n                value = null;\n            }\n\n            this._dateTime = new customDateTime(value, this.options.format, this.options.culture, this.options.messages);\n\n            this._updateElementValue();\n            this._oldValue = value;\n\n            if (this.label && this.label.floatingLabel) {\n                this.label.floatingLabel.refresh();\n            }\n        },\n\n        _updateElementValue: function() {\n            var stringAndFormat = this._dateTime.toPair(this.options.format, this.options.culture, this.options.messages);\n            this.element.val(stringAndFormat[0]);\n            this._oldText = stringAndFormat[0];\n            this._format = stringAndFormat[1];\n        },\n\n        _toggleDateMask: function(toShow) {\n            var that = this;\n\n            if (toShow) {\n                that._updateElementValue();\n            } else {\n                this.element.val(\"\");\n            }\n        },\n\n        _hasDateInput: function() {\n            var emptyInput = (new customDateTime(null, this.options.format, this.options.culture, this.options.messages))\n                                .toPair(this.options.format, this.options.culture, this.options.messages)[0];\n            var currentInput = this._dateTime.toPair(this.options.format, this.options.culture, this.options.messages)[0];\n\n            return emptyInput !== currentInput;\n        },\n\n        readonly: function(readonly) {\n            this._editable({\n                readonly: readonly === undefined$1 ? true : readonly,\n                disable: false\n            });\n\n            if (this.label && this.label.floatingLabel) {\n                this.label.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n            }\n        },\n\n        enable: function(enable) {\n            this._editable({\n                readonly: false,\n                disable: !(enable = enable === undefined$1 ? true : enable)\n            });\n\n            if (this.label && this.label.floatingLabel) {\n                this.label.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n            }\n        },\n\n        _label: function() {\n            var that = this;\n            var options = that.options;\n            var labelOptions = isPlainObject(options.label) ? options.label : {\n                content: options.label\n            };\n\n            that.label = new kendo.ui.Label(null, $.extend({}, labelOptions, {\n                widget: that,\n                floatCheck: () => {\n                    that._toggleDateMask(true);\n\n                    if (!that.value() && !that._hasDateInput() && document.activeElement !== that.element[0]) {\n                        that._toggleDateMask(false);\n                        return true;\n                    }\n\n                    return false;\n                }\n            }));\n\n            that._inputLabel = that.label.element;\n        },\n\n        _bindInput: function() {\n            var that = this;\n            that.element\n                .on(\"focus\" + ns, function() {\n                    that.wrapper.addClass(FOCUSED);\n                })\n                .on(\"focusout\" + ns, function() {\n                    that.wrapper.removeClass(FOCUSED);\n                    that._change();\n                })\n                .on(\"paste\" + ns, that._paste.bind(that))\n                .on(\"keydown\" + ns, that._keydown.bind(that))\n                .on(INPUT_EVENT_NAME, that._input.bind(that))\n                .on(\"mouseup\" + ns, that._mouseUp.bind(that))\n                .on(\"DOMMouseScroll\" + ns + \" mousewheel\" + ns, that._scroll.bind(that));\n        },\n\n        _unbindInput: function() {\n            this.element\n                .off(\"keydown\" + ns)\n                .off(\"paste\" + ns)\n                .off(\"focus\" + ns)\n                .off(\"focusout\" + ns)\n                .off(INPUT_EVENT_NAME)\n                .off(\"mouseup\" + ns)\n                .off(\"DOMMouseScroll\" + ns + \" mousewheel\" + ns);\n        },\n\n        _editable: function(options) {\n            var that = this;\n            var element = that.element;\n            var disable = options.disable;\n            var readonly = options.readonly;\n            var wrapper = that.wrapper;\n\n            that._unbindInput();\n\n            if (!readonly && !disable) {\n                wrapper.removeClass(STATEDISABLED);\n                if (element && element.length) {\n                    element[0].removeAttribute(DISABLED);\n                    element[0].removeAttribute(READONLY);\n                }\n\n                that._bindInput();\n            } else {\n                if (disable) {\n                    wrapper.addClass(STATEDISABLED);\n                    element.attr(DISABLED, disable);\n                    if (element && element.length) {\n                        element[0].removeAttribute(READONLY);\n                    }\n                }\n                if (readonly) {\n                    element.attr(READONLY, readonly);\n                }\n            }\n        },\n\n        _change: function() {\n            var that = this;\n            var oldValue = that._oldValue;\n            var value = that.value();\n\n            if (value && that.min() && value < that.min()) {\n                that.value(that.min());\n                value = that.value();\n            }\n            if (value && that.max() && value > that.max()) {\n                that.value(that.max());\n                value = that.value();\n            }\n\n            if (oldValue && value && value.getTime() !== oldValue.getTime() ||\n                oldValue && !value ||\n                !oldValue && value\n            ) {\n                that._oldValue = value;\n                that.trigger(CHANGE);\n                that.element.trigger(CHANGE);\n            }\n        },\n\n        _input: function() {\n            var that = this;\n            var element = that.element[0];\n            var blinkInvalid = false;\n\n            if (kendo._activeElement() !== element) {\n                return;\n            }\n\n            var diff = approximateStringMatching(\n                this._oldText,\n                this._format,\n                this.element[0].value,\n                caret(this.element[0])[0]);\n\n            var navigationOnly = (diff.length === 1 && diff[0][1] === \" \");\n            if (!navigationOnly) {\n                for (var i = 0; i < diff.length; i++) {\n                    var valid = this._dateTime.parsePart(diff[i][0], diff[i][1]);\n                    blinkInvalid = blinkInvalid || !valid;\n                }\n            }\n            this._updateElementValue();\n\n            if (diff.length && diff[0][0] !== \" \") {\n                this._selectSegment(diff[0][0]);\n\n                //android fix\n                if (!navigationOnly) {\n                    var difSym = diff[0][0];\n                    setTimeout(function() { that._selectSegment(difSym); });\n                }\n            }\n            if (navigationOnly) {\n                var newEvent = { keyCode: 39, preventDefault: function() { } };\n                this._keydown(newEvent);\n            }\n            if (blinkInvalid) {\n                that._blinkInvalidState();\n            }\n        },\n\n        _blinkInvalidState: function() {\n            var that = this;\n\n            that._addInvalidState();\n            clearTimeout(that._invalidStateTimeout);\n            that._invalidStateTimeout = setTimeout(that._removeInvalidState.bind(that), 100);\n        },\n\n        _addInvalidState: function() {\n            var that = this;\n\n            that.wrapper.addClass(STATEINVALID);\n            that._validationIcon.removeClass(\"k-hidden\");\n        },\n\n        _removeInvalidState: function() {\n            var that = this;\n\n            that.wrapper.removeClass(STATEINVALID);\n            that._validationIcon.addClass(\"k-hidden\");\n            that._invalidStateTimeout = null;\n        },\n\n        _mouseUp: function() {\n            var selection = caret(this.element[0]);\n            if (selection[0] === selection[1]) {\n                this._selectNearestSegment();\n            }\n        },\n\n        _scroll: function(e) {\n            if (kendo._activeElement() !== this.element[0] || this.element.is(\"[readonly]\")) {\n                return;\n            }\n            e = window.event || e;\n\n            var newEvent = { keyCode: 37, preventDefault: function() { } };\n\n            if (e.shiftKey) {\n                newEvent.keyCode = (e.wheelDelta || -e.detail) > 0 ? 37 : 39;\n            } else {\n                newEvent.keyCode = (e.wheelDelta || -e.detail) > 0 ? 38 : 40;\n            }\n            this._keydown(newEvent);\n            e.returnValue = false;\n            if (e.preventDefault) {\n                e.preventDefault();\n            }\n            if (e.stopPropagation) {\n                e.stopPropagation();\n            }\n        },\n\n        _form: function() {\n            var that = this;\n            var element = that.element;\n            var formId = element.attr(\"form\");\n            var form = formId ? $(\"#\" + formId) : element.closest(\"form\");\n            var initialValue = element[0].value;\n\n            if (!initialValue && that.options.value) {\n                initialValue = that.options.value;\n            }\n\n            if (form[0]) {\n                that._resetHandler = function() {\n                    setTimeout(function() {\n                        that.value(initialValue);\n                    });\n                };\n\n                that._formElement = form.on(\"reset\", that._resetHandler);\n            }\n        },\n\n        _paste: function(e) {\n            e.preventDefault();\n        },\n\n        _keydown: function(e) {\n            var key = e.keyCode;\n            var selection;\n            if (key == 37 || key == 39) { //left/right\n                e.preventDefault();\n                selection = caret(this.element[0]);\n                if (selection[0] != selection[1]) {\n                    this._selectNearestSegment();\n                }\n                var dir = (key == 37) ? -1 : 1;\n                var index = (dir == -1) ? caret(this.element[0])[0] - 1 : caret(this.element[0])[1] + 1;\n                while (index >= 0 && index < this._format.length) {\n                    if (knownSymbols.indexOf(this._format[index]) >= 0) {\n                        this._selectSegment(this._format[index]);\n                        break;\n                    }\n                    index += dir;\n                }\n            }\n            if (key == 38 || key == 40) { //up/down\n                e.preventDefault();\n                selection = caret(this.element[0]);\n                var symbol = this._format[selection[0]];\n                if (knownSymbols.indexOf(symbol) >= 0) {\n                    var interval = 1;\n                    if (symbol == 'm') {\n                        interval = this.options.interval || 1;\n                    }\n                    this._dateTime.modifyPart(symbol, key == 38 ? interval * 1 : interval * -1);\n                    this._updateElementValue();\n                    this._selectSegment(symbol);\n                    this.element.trigger(CHANGE);\n                }\n            }\n            if (kendo.support.browser.msie && kendo.support.browser.version < 10) {\n                var keycode = e.keyCode ? e.keyCode : e.which;\n                if (keycode === 8 || keycode === 46) {\n                    var that = this;\n                    setTimeout(function() {\n                        that._input();\n                    }, 0);\n                }\n            }\n            if (key === keys.ENTER) {\n                this._change();\n            }\n        },\n\n        _selectNearestSegment: function() {\n            var selection = caret(this.element[0]);\n            var start = selection[0];\n            for (var i = start, j = start - 1; i < this._format.length || j >= 0; i++ , j--) {\n                if (i < this._format.length && knownSymbols.indexOf(this._format[i]) !== -1) {\n                    this._selectSegment(this._format[i]);\n                    return;\n                }\n                if (j >= 0 && knownSymbols.indexOf(this._format[j]) !== -1) {\n                    this._selectSegment(this._format[j]);\n                    return;\n                }\n            }\n        },\n\n        _selectSegment: function(symbol) {\n            var begin = -1, end = 0;\n            for (var i = 0; i < this._format.length; i++) {\n                if (this._format[i] === symbol) {\n                    end = i + 1;\n                    if (begin === -1) {\n                        begin = i;\n                    }\n                }\n            }\n            if (begin < 0) {\n                begin = 0;\n            }\n            caret(this.element, begin, end);\n        }\n\n    });\n\n    kendo.cssProperties.registerPrefix(\"DateInput\", \"k-input-\");\n\n    kendo.cssProperties.registerValues(\"DateInput\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n    ui.plugin(DateInput);\n\n    var customDateTime = function(initDate, initFormat, initCulture, initMessages) {\n\n        var value = null;\n        var year = true, month = true, date = true, hours = true, minutes = true, seconds = true, milliseconds = true;\n        var typedMonthPart = \"\";\n        var typedDayPeriodPart = \"\";\n        var placeholders = {};\n\n        //TODO: rewrite pad method\n        var zeros = [\"\", \"0\", \"00\", \"000\", \"0000\"];\n        function pad(number, digits, end) {\n            number = number + \"\";\n            digits = digits || 2;\n            end = digits - number.length;\n\n            if (end) {\n                return zeros[digits].substring(0, end) + number;\n            }\n\n            return number;\n        }\n        var dateFormatRegExp = /dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|HH|H|hh|h|mm|m|fff|ff|f|tt|ss|s|zzz|zz|z|\"[^\"]*\"|'[^']*'/g;\n        var months = null, calendar = null, days = null, returnsFormat = false;\n        var matcher = function(match) {\n            var mins, sign;\n            var result;\n\n            switch (match) {\n                case (\"d\"): result = date ? value.getDate() : placeholders.day; break;\n                case (\"dd\"): result = date ? pad(value.getDate()) : placeholders.day; break;\n                case (\"ddd\"): result = date && month && year ? days.namesAbbr[value.getDay()] : placeholders.weekday; break;\n                case (\"dddd\"): result = date && month && year ? days.names[value.getDay()] : placeholders.weekday; break;\n\n                case (\"M\"): result = month ? value.getMonth() + 1 : placeholders.month; break;\n                case (\"MM\"): result = month ? pad(value.getMonth() + 1) : placeholders.month; break;\n                case (\"MMM\"): result = month ? months.namesAbbr[value.getMonth()] : placeholders.month; break;\n                case (\"MMMM\"): result = month ? months.names[value.getMonth()] : placeholders.month; break;\n\n                case (\"yy\"): result = year ? pad(value.getFullYear() % 100) : placeholders.year; break;\n                case (\"yyyy\"): result = year ? pad(value.getFullYear(), 4) : placeholders.year; break;\n\n                case (\"h\"): result = hours ? value.getHours() % 12 || 12 : placeholders.hour; break;\n                case (\"hh\"): result = hours ? pad(value.getHours() % 12 || 12) : placeholders.hour; break;\n                case (\"H\"): result = hours ? value.getHours() : placeholders.hour; break;\n                case (\"HH\"): result = hours ? pad(value.getHours()) : placeholders.hour; break;\n\n                case (\"m\"): result = minutes ? value.getMinutes() : placeholders.minute; break;\n                case (\"mm\"): result = minutes ? pad(value.getMinutes()) : placeholders.minute; break;\n                case (\"s\"): result = seconds ? value.getSeconds() : placeholders.second; break;\n                case (\"ss\"): result = seconds ? pad(value.getSeconds()) : placeholders.second; break;\n                case (\"f\"): result = milliseconds ? Math.floor(value.getMilliseconds() / 100) : milliseconds; break;\n                case (\"ff\"):\n                    result = value.getMilliseconds();\n                    if (result > 99) {\n                        result = Math.floor(result / 10);\n                    }\n                    result = milliseconds ? pad(result) : match;\n                    break;\n                case (\"fff\"): result = milliseconds ? pad(value.getMilliseconds(), 3) : match; break;\n                case (\"tt\"): result = hours ? (value.getHours() < 12 ? calendar.AM[0] : calendar.PM[0]) : placeholders.dayperiod; break;\n                case (\"zzz\"):\n                    mins = value.getTimezoneOffset();\n                    sign = mins < 0;\n                    result = Math.abs(mins / 60).toString().split(\".\")[0];\n                    mins = Math.abs(mins) - (result * 60);\n                    result = (sign ? \"+\" : \"-\") + pad(result);\n                    result += \":\" + pad(mins);\n                    break;\n                case (\"z\"):\n                case (\"zz\"):\n                    result = value.getTimezoneOffset() / 60;\n                    sign = result < 0;\n                    result = Math.abs(result).toString().split(\".\")[0];\n                    result = (sign ? \"+\" : \"-\") + (match === \"zz\" ? pad(result) : result);\n                    break;\n            }\n            result = (result !== undefined$1 ? result : match.slice(1, match.length - 1));\n\n            if (returnsFormat) {\n                result = \"\" + result;\n                var formatResult = \"\";\n                if (match == \"ddd\") { match = \"EEE\"; }\n                if (match == \"dddd\") { match = \"EEEE\"; }\n                for (var i = 0; i < result.length; i++) {\n                    formatResult += match[0];\n                }\n                return formatResult;\n            } else {\n                return result;\n            }\n        };\n\n        function generateMatcher(retFormat) {\n            returnsFormat = retFormat;\n            return matcher;\n        }\n\n        function setExisting(symbol, val) {\n            switch (symbol) {\n                case \"y\": year = val; break;\n                case \"M\": month = val;\n                    if (!val) {\n                        value.setMonth(0);\n                        typedMonthPart = \"\";\n                    }\n                    break;\n                case \"d\": date = val; break;\n                case \"H\":\n                case \"h\": hours = val;\n                    if (!val) {\n                        typedDayPeriodPart = \"\";\n                    }\n                    break;\n                case \"m\": minutes = val; break;\n                case \"s\": seconds = val; break;\n                default: return;\n            }\n        }\n\n        this.setValue = function(val) {\n            date = val;\n        };\n\n        this.getValue = function() {\n            return date;\n        };\n\n        this.modifyPart = function(symbol, offset) {\n            var newValue = new Date((value && value.getTime) ? value.getTime() : value);\n            switch (symbol) {\n                case \"y\": newValue.setFullYear(newValue.getFullYear() + offset); break;\n                case \"M\":\n                    var newMonth = newValue.getMonth() + offset;\n                    newValue.setMonth(newMonth);\n                    if (newValue.getMonth() % 12 !== (newMonth + 12) % 12) {\n                        //handle case when new month does not have such date\n                        newValue.setDate(1);\n                        newValue.setMonth(newMonth);\n                    }\n                    break;\n                case \"d\":\n                case \"E\": newValue.setDate(newValue.getDate() + offset); break;\n                case \"H\":\n                case \"h\": newValue.setHours(newValue.getHours() + offset); break;\n                case \"m\": newValue.setMinutes(newValue.getMinutes() + offset); break;\n                case \"s\": newValue.setSeconds(newValue.getSeconds() + offset); break;\n                case \"t\": newValue.setHours((newValue.getHours() + 12) % 24); break;\n                default: break;\n            }\n            if (newValue.getFullYear() > 0) {\n                setExisting(symbol, true);\n                value = newValue;\n            }\n        };\n\n        this.parsePart = function(symbol, currentChar) {\n            if (!currentChar) {\n                setExisting(symbol, false);\n                return true;\n            }\n            var newValue = new Date((value && value.getTime) ? value.getTime() : value);\n            var lastDateOfMonth = new Date(newValue.getFullYear(), newValue.getMonth() + 1, 0).getDate();\n            var newHours;\n            switch (symbol) {\n                case \"d\":\n                    var newDate = (date ? newValue.getDate() * 10 : 0) + parseInt(currentChar, 10);\n                    if (isNaN(newDate)) { return; }\n                    while (newDate > lastDateOfMonth) {\n                        newDate = parseInt(newDate.toString().slice(1), 10);\n                    }\n                    if (newDate < 1) {\n                        date = false;\n                    } else {\n                        newValue.setDate(newDate);\n                        if (newValue.getMonth() !== value.getMonth()) {\n                            return;\n                        }\n                        date = true;\n                    }\n                    break;\n                case \"M\":\n                    var newMonth = (month ? (newValue.getMonth() + 1) * 10 : 0) + parseInt(currentChar, 10);\n                    if (!isNaN(newMonth)) {\n                        while (newMonth > 12) {\n                            newMonth = parseInt(newMonth.toString().slice(1), 10);\n                        }\n                        if (newMonth < 1) {\n                            month = false;\n                        } else {\n                            newValue.setMonth(newMonth - 1);\n                            if (newValue.getMonth() !== newMonth - 1) {\n                                newValue.setDate(1);\n                                newValue.setMonth(newMonth - 1);\n                            }\n                            month = true;\n                        }\n                    }\n                    else {\n                        var monthNames = calendar.months.names;\n                        typedMonthPart += currentChar.toLowerCase();\n\n                        while (typedMonthPart.length > 0) {\n                            for (var i = 0; i < monthNames.length; i++) {\n                                if (monthNames[i].toLowerCase().indexOf(typedMonthPart) === 0) {\n                                    newValue.setMonth(i);\n                                    month = true;\n                                    value = newValue;\n                                    return true;\n                                }\n                            }\n                            typedMonthPart = typedMonthPart.substring(1, typedMonthPart.length);\n                        }\n                        return false;\n                    }\n                    break;\n                case \"y\":\n                    var newYear = (year ? (newValue.getFullYear()) * 10 : 0) + parseInt(currentChar, 10);\n                    if (isNaN(newYear)) {return;}\n                    while (newYear > 9999) {\n                        newYear = parseInt(newYear.toString().slice(1), 10);\n                    }\n                    if (newYear < 1) {\n                        year = false;\n                    } else {\n                        newValue.setFullYear(newYear);\n                        year = true;\n                    }\n                    break;\n                case \"h\":\n                    newHours = (hours ? (newValue.getHours() % 12 || 12) * 10 : 0) + parseInt(currentChar, 10);\n                    if (isNaN(newHours)) { return; }\n                    while (newHours > 12) {\n                        newHours = parseInt(newHours.toString().slice(1), 10);\n                    }\n                    newValue.setHours(Math.floor(newValue.getHours() / 12) * 12 + newHours % 12);\n                    hours = true;\n                    break;\n                case \"H\":\n                    newHours = (hours ? (newValue.getHours()) * 10 : 0) + parseInt(currentChar, 10);\n                    if (isNaN(newHours)) { return; }\n                    while (newHours > 23) {\n                        newHours = parseInt(newHours.toString().slice(1), 10);\n                    }\n                    newValue.setHours(newHours);\n                    hours = true;\n                    break;\n                case \"m\":\n                    var newMinutes = (minutes ? (newValue.getMinutes()) * 10 : 0) + parseInt(currentChar, 10);\n                    if (isNaN(newMinutes)) { return; }\n                    while (newMinutes > 59) {\n                        newMinutes = parseInt(newMinutes.toString().slice(1), 10);\n                    }\n                    newValue.setMinutes(newMinutes);\n                    minutes = true;\n                    break;\n                case \"s\":\n                    var newSeconds = (seconds ? (newValue.getSeconds()) * 10 : 0) + parseInt(currentChar, 10);\n                    if (isNaN(newSeconds)) { return; }\n                    while (newSeconds > 59) {\n                        newSeconds = parseInt(newSeconds.toString().slice(1), 10);\n                    }\n                    newValue.setSeconds(newSeconds);\n                    seconds = true;\n                    break;\n                case \"t\":\n                    if (hours) {\n                        typedDayPeriodPart += currentChar.toLowerCase();\n                        while (typedDayPeriodPart.length > 0) {\n                            if (calendar.AM[0].toLowerCase().indexOf(typedDayPeriodPart) === 0 && newValue.getHours() >= 12 ||\n                                calendar.PM[0].toLowerCase().indexOf(typedDayPeriodPart) === 0 && newValue.getHours() < 12) {\n                                newValue.setHours((newValue.getHours() + 12) % 24);\n                                value = newValue;\n                                return true;\n                            }\n                            typedDayPeriodPart = typedDayPeriodPart.substring(1, typedDayPeriodPart.length);\n                        }\n                        return false;\n                    }\n                    break;\n                default: break;\n            }\n            value = newValue;\n            return true;\n        };\n\n        this.toPair = function(format, culture , messages) {\n            if (!format) {\n                return [\"\", \"\"];\n            }\n            culture = kendo.getCulture(culture);\n            calendar = culture.calendars.standard;\n            format = calendar.patterns[format] || format;\n            days = calendar.days;\n            months = calendar.months;\n            placeholders = messages;\n            return [\n                format.replace(dateFormatRegExp, generateMatcher(false)),\n                format.replace(dateFormatRegExp, generateMatcher(true))\n            ];\n        };\n\n        this.getDateObject = function() {\n            return (year && month && date && hours && minutes && seconds && milliseconds) ?\n                new Date(value.getTime()) : null;\n        };\n\n        if (!initDate) {\n            value = new Date();\n            var sampleFormat = this.toPair(initFormat, initCulture, initMessages)[1];\n            for (var i = 0; i < sampleFormat.length; i++) {\n                setExisting(sampleFormat[i], false);\n            }\n        } else {\n            value = new Date(initDate.getTime());\n        }\n    };\n\n    function approximateStringMatching(oldText, oldFormat, newText, caret) {\n        var oldTextSeparator = oldText[caret + oldText.length - newText.length];\n        oldText = oldText.substring(0, caret + oldText.length - newText.length);\n        newText = newText.substring(0, caret);\n        var diff = [];\n        var i;\n        //handle typing single character over the same selection\n        if (oldText === newText && caret > 0) {\n            diff.push([oldFormat[caret - 1], newText[caret - 1]]);\n            return diff;\n        }\n        if (oldText.indexOf(newText) === 0 && (newText.length === 0 || oldFormat[newText.length - 1] !== oldFormat[newText.length])) {\n            //handle delete/backspace\n            var deletedSymbol = \"\";\n            for (i = newText.length; i < oldText.length; i++) {\n                if (oldFormat[i] !== deletedSymbol && knownSymbols.indexOf(oldFormat[i]) >= 0) {\n                    deletedSymbol = oldFormat[i];\n                    diff.push([deletedSymbol, \"\"]);\n                }\n            }\n            return diff;\n        }\n\n        //handle entering space or separator, for nagivation to next item\n        if (newText[newText.length - 1] === \" \" || newText[newText.length - 1] === oldTextSeparator) {\n            return [[oldFormat[caret - 1], \" \"]];\n        }\n\n        //handle inserting text (new text is longer than previous)\n        //handle typing over literal as well\n        if (newText.indexOf(oldText) === 0 || knownSymbols.indexOf(oldFormat[caret - 1]) === -1) {\n            var symbol = oldFormat[0];\n            for (i = Math.max(0, oldText.length - 1); i < oldFormat.length; i++) {\n                if (knownSymbols.indexOf(oldFormat[i]) >= 0) {\n                    symbol = oldFormat[i];\n                    break;\n                }\n            }\n            return [[symbol, newText[caret - 1]]];\n        }\n        //handle typing over correctly selected part\n        return [[oldFormat[caret - 1], newText[caret - 1]]];\n}\n\n})(__webpack_provided_window_dot_kendo.jQuery);\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.dateinput.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.datepicker.js":
/*!************************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.datepicker.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _kendo_popup_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.popup.js */ \"./node_modules/kendo-ui-core/esm/kendo.popup.js\");\n/* harmony import */ var _kendo_dateinput_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.dateinput.js */ \"./node_modules/kendo-ui-core/esm/kendo.dateinput.js\");\n/* harmony import */ var _kendo_html_button_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kendo.html.button.js */ \"./node_modules/kendo-ui-core/esm/kendo.html.button.js\");\n/* harmony import */ var _kendo_label_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./kendo.label.js */ \"./node_modules/kendo-ui-core/esm/kendo.label.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\n\n\n// The current file development is no longer in active phase but the code will be kept as is.\n\nvar __meta__ = {\n    id: \"datepicker\",\n    name: \"DatePicker\",\n    category: \"web\",\n    description: \"The DatePicker widget allows the user to select a date from a calendar or by direct input.\",\n    depends: [ \"calendar\", \"popup\", \"html.button\", \"label\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n    ui = kendo.ui,\n    html = kendo.html,\n    Widget = ui.Widget,\n    parse = kendo.parseDate,\n    keys = kendo.keys,\n    support = kendo.support,\n    template = kendo.template,\n    activeElement = kendo._activeElement,\n    DIV = \"<div />\",\n    SPAN = \"<span />\",\n    ns = \".kendoDatePicker\",\n    CLICK = \"click\" + ns,\n    UP = support.mouseAndTouchPresent ? kendo.applyEventMap(\"up\", ns.slice(1)) : CLICK,\n    OPEN = \"open\",\n    CLOSE = \"close\",\n    CHANGE = \"change\",\n    DISABLED = \"disabled\",\n    READONLY = \"readonly\",\n    FOCUSED = \"k-focus\",\n    SELECTED = \"k-selected\",\n    STATEDISABLED = \"k-disabled\",\n    HOVER = \"k-hover\",\n    HOVEREVENTS = \"mouseenter\" + ns + \" mouseleave\" + ns,\n    MOUSEDOWN = \"mousedown\" + ns,\n    NAVIGATE = \"navigate\",\n    ID = \"id\",\n    MIN = \"min\",\n    MAX = \"max\",\n    MONTH = \"month\",\n    ARIA_DISABLED = \"aria-disabled\",\n    ARIA_READONLY = \"aria-readonly\",\n    ARIA_EXPANDED = \"aria-expanded\",\n    ARIA_HIDDEN = \"aria-hidden\",\n    ARIA_ACTIVEDESCENDANT = \"aria-activedescendant\",\n    calendar = kendo.calendar,\n    isInRange = calendar.isInRange,\n    restrictValue = calendar.restrictValue,\n    isEqualDatePart = calendar.isEqualDatePart,\n    extend = $.extend,\n    DATE = Date;\n\n    function normalize(options) {\n        var parseFormats = options.parseFormats,\n            format = options.format;\n\n        calendar.normalize(options);\n\n        parseFormats = Array.isArray(parseFormats) ? parseFormats : [parseFormats];\n\n        if (!parseFormats.length) {\n            parseFormats.push(\"yyyy-MM-dd\");\n        }\n\n        if ($.inArray(format, parseFormats) === -1) {\n            parseFormats.splice(0, 0, options.format);\n        }\n\n        options.parseFormats = parseFormats;\n    }\n\n    function preventDefault(e) {\n        e.preventDefault();\n    }\n\n    var DateView = function(options) {\n        var that = this, id,\n            body = document.body,\n            div = $(DIV).attr(ARIA_HIDDEN, \"true\")\n                        .addClass(\"k-calendar-container\");\n\n        that.options = options = options || {};\n        id = options.id;\n\n        if (!options.omitPopup) {\n            div.appendTo(body);\n            that.popup = new ui.Popup(div, extend(options.popup, options, { name: \"Popup\", isRtl: kendo.support.isRtl(options.anchor) }));\n        } else {\n            div = options.dateDiv;\n        }\n        if (id) {\n            id += \"_dateview\";\n\n            div.attr(ID, id);\n            that._dateViewID = id;\n        }\n        that.div = div;\n\n        that.value(options.value);\n    };\n\n    DateView.prototype = {\n        _calendar: function() {\n            var that = this;\n            var calendar = that.calendar;\n            var options = that.options;\n            var div;\n\n            if (!calendar) {\n                div = $(DIV).attr(ID, kendo.guid())\n                            .appendTo(options.omitPopup ? options.dateDiv : that.popup.element)\n                            .on(MOUSEDOWN, preventDefault)\n                            .on(CLICK, \"td:has(.k-link)\", that._click.bind(that));\n\n                that.calendar = calendar = new ui.Calendar(div, {\n                    componentType: options.componentType,\n                    size: options.size,\n                    messages: options.messages\n                });\n                that._setOptions(options);\n\n                div.addClass(kendo.getValidCssClass(\"k-calendar-\", \"size\", options.size));\n\n                calendar.navigate(that._value || that._current, options.start);\n\n                that.value(that._value);\n            }\n        },\n\n        _setOptions: function(options) {\n            this.calendar.setOptions({\n                focusOnNav: false,\n                change: options.change,\n                culture: options.culture,\n                dates: options.dates,\n                depth: options.depth,\n                footer: options.footer,\n                format: options.format,\n                max: options.max,\n                min: options.min,\n                month: options.month,\n                weekNumber: options.weekNumber,\n                start: options.start,\n                messages: options.messages,\n                disableDates: options.disableDates\n            });\n        },\n\n        setOptions: function(options) {\n            var that = this;\n            var old = that.options;\n            var disableDates = options.disableDates;\n\n            if (disableDates) {\n                options.disableDates = calendar.disabled(disableDates);\n            }\n\n            that.options = extend(old, options, {\n                change: old.change,\n                close: old.close,\n                open: old.open\n            });\n\n            if (that.calendar) {\n                that._setOptions(that.options);\n            }\n        },\n\n        destroy: function() {\n            if (this.popup) {\n                this.popup.destroy();\n            }\n        },\n\n        open: function() {\n            var that = this;\n            var popupHovered;\n\n            that._calendar();\n\n            // In some cases when the popup is opened resize is triggered which will cause it to close\n            // Setting the below flag will prevent this from happening\n            // Reference: https://github.com/telerik/kendo/pull/7553\n            popupHovered = that.popup._hovered;\n            that.popup._hovered = true;\n\n            that.popup.open();\n\n            setTimeout(function() {\n                that.popup._hovered = popupHovered;\n            }, 1);\n        },\n\n        close: function() {\n            if (this.popup) {\n                this.popup.close();\n            }\n        },\n\n        min: function(value) {\n            this._option(MIN, value);\n        },\n\n        max: function(value) {\n            this._option(MAX, value);\n        },\n\n        toggle: function() {\n            var that = this;\n\n            that[that.popup.visible() ? CLOSE : OPEN]();\n        },\n\n        move: function(e) {\n            var that = this,\n                key = e.keyCode,\n                calendar = that.calendar,\n                selectIsClicked = e.ctrlKey && key == keys.DOWN || key == keys.ENTER,\n                handled = false;\n\n            if (e.altKey) {\n                if (key == keys.DOWN) {\n                    that.open();\n                    e.preventDefault();\n                    handled = true;\n                } else if (key == keys.UP) {\n                    that.close();\n                    e.preventDefault();\n                    handled = true;\n                }\n\n            } else if (that.popup && that.popup.visible()) {\n\n                if (key == keys.ESC || (selectIsClicked && calendar._cell.hasClass(SELECTED))) {\n                    that.close();\n                    e.preventDefault();\n                    return true;\n                }\n                //spacebar selects a date in the calendar\n                if (key != keys.SPACEBAR) {\n                    that._current = calendar._move(e);\n                }\n\n                handled = true;\n            }\n\n            return handled;\n        },\n\n        current: function(date) {\n            this._current = date;\n            if (this.calendar) {\n                this.calendar._focus(date);\n            }\n        },\n\n        value: function(value) {\n            var that = this,\n                calendar = that.calendar,\n                options = that.options,\n                disabledDate = options.disableDates;\n\n            if (disabledDate && disabledDate(value)) {\n                value = null;\n            }\n\n            that._value = value;\n            that._current = new DATE(+restrictValue(value, options.min, options.max));\n\n            if (calendar) {\n                calendar.value(value);\n            }\n        },\n\n        _click: function(e) {\n\n            if (e.currentTarget.className.indexOf(SELECTED) !== -1) {\n                this.calendar.trigger(\"change\");\n                this.close();\n            }\n        },\n\n        _option: function(option, value) {\n            var that = this;\n            var calendar = that.calendar;\n\n            that.options[option] = value;\n\n            if (calendar) {\n                calendar[option](value);\n            }\n        }\n    };\n\n    DateView.normalize = normalize;\n\n    kendo.DateView = DateView;\n\n    var DatePicker = Widget.extend({\n        init: function(element, options) {\n            var that = this,\n                initialValue,\n                disabled,\n                div;\n\n            Widget.fn.init.call(that, element, options);\n            element = that.element;\n            options = that.options;\n\n            options.disableDates = kendo.calendar.disabled(options.disableDates);\n\n            options.min = parse(element.attr(\"min\")) || parse(options.min);\n            options.max = parse(element.attr(\"max\")) || parse(options.max);\n\n            that.options.readonly = options.readonly !== undefined$1 ? options.readonly : Boolean(that.element.attr(\"readonly\"));\n            that.options.enable = options.enable !== undefined$1 ? options.enable : !(Boolean(element.is(\"[disabled]\") || $(element).parents(\"fieldset\").is(':disabled')));\n\n            normalize(options);\n\n            that._initialOptions = extend({}, options);\n\n            that._wrapper();\n\n            that.dateView = new DateView(extend({}, options, {\n                id: element.attr(ID),\n                anchor: that.wrapper,\n                change: function() {\n                    // calendar is the current scope\n                    that._change(this.value());\n                    that.close();\n                },\n                close: function(e) {\n                    if (that.trigger(CLOSE)) {\n                        e.preventDefault();\n                    } else {\n                        element.attr(ARIA_EXPANDED, false);\n                        div.attr(ARIA_HIDDEN, true);\n\n                        setTimeout(function() {\n                            element.removeAttr(\"aria-activedescendant\");\n                        });\n                    }\n                },\n                open: function(e) {\n                    var options = that.options,\n                        date;\n\n                    if (that.trigger(OPEN)) {\n                        e.preventDefault();\n                    } else {\n                        if (that.element.val() !== that._oldText) {\n                            date = parse(element.val(), options.parseFormats, options.culture);\n\n                            that.dateView[date ? \"current\" : \"value\"](date);\n                        }\n\n                        element.attr(ARIA_EXPANDED, true);\n                        div.attr(ARIA_HIDDEN, false);\n\n                        that._updateARIA(date);\n\n                    }\n                }\n            }));\n\n            div = that.dateView.div;\n\n            that._icon();\n\n            try {\n                element[0].setAttribute(\"type\", \"text\");\n            } catch (e) {\n                element[0].type = \"text\";\n            }\n\n            element\n                .addClass(\"k-input-inner\")\n                .attr({\n                    role: \"combobox\",\n                    \"aria-expanded\": false,\n                    \"aria-haspopup\": \"grid\",\n                    \"aria-controls\": that.dateView._dateViewID,\n                    \"autocomplete\": \"off\"\n                });\n            that._reset();\n            that._template();\n\n            disabled = !that.options.enable;\n            if (disabled) {\n                that.enable(false);\n            } else {\n                that.readonly(element.is(\"[readonly]\"));\n            }\n\n            initialValue = parse(options.value || that.element.val(), options.parseFormats, options.culture);\n\n            that._createDateInput(options);\n\n            that._old = that._update(initialValue || that.element.val());\n            that._oldText = element.val();\n            that._applyCssClasses();\n\n            if (options.label) {\n                that._label();\n            }\n\n            kendo.notify(that);\n        },\n        events: [\n        OPEN,\n        CLOSE,\n        CHANGE],\n        options: {\n            name: \"DatePicker\",\n            value: null,\n            footer: \"\",\n            format: \"\",\n            culture: \"\",\n            parseFormats: [],\n            min: new Date(1900, 0, 1),\n            max: new Date(2099, 11, 31),\n            start: MONTH,\n            depth: MONTH,\n            animation: {},\n            month: {},\n            dates: [],\n            disableDates: null,\n            ARIATemplate: ({ valueType, text }) => `Current focused ${valueType} is ${text}`,\n            dateInput: false,\n            weekNumber: false,\n            messages: {\n                weekColumnHeader: \"\"\n            },\n            componentType: \"classic\",\n            size: \"medium\",\n            fillMode: \"solid\",\n            rounded: \"medium\",\n            label: null\n        },\n\n        setOptions: function(options) {\n            var that = this;\n            var value = that._value;\n\n            Widget.fn.setOptions.call(that, options);\n\n            options = that.options;\n\n            options.min = parse(options.min);\n            options.max = parse(options.max);\n\n            normalize(options);\n\n            that._dateIcon.off(ns);\n            that._dateIcon.remove();\n\n            that.dateView.setOptions(options);\n            that._icon();\n            that._editable({\n                readonly: options.readonly === undefined$1 ? that.options.readonly : options.readonly,\n                disable: !(options.enable === undefined$1 ? that.options.enable : options.enable)\n            });\n\n            that._createDateInput(options);\n\n            if (!that._dateInput) {\n                that.element.val(kendo.toString(value, options.format, options.culture));\n            }\n\n            if (value) {\n                that._updateARIA(value);\n            }\n\n            if (options.label && that._inputLabel) {\n                that.label.setOptions(options.label);\n            } else if (options.label === false) {\n                that.label._unwrapFloating();\n                that._inputLabel.remove();\n                delete that._inputLabel;\n            } else if (options.label) {\n                that._label();\n            }\n        },\n\n        _editable: function(options) {\n            var that = this,\n                icon = that._dateIcon.off(ns),\n                element = that.element.off(ns),\n                wrapper = that.wrapper.off(ns),\n                readonly = options.readonly,\n                disable = options.disable;\n\n            if (!readonly && !disable) {\n                wrapper\n                    .removeClass(STATEDISABLED)\n                    .on(HOVEREVENTS, that._toggleHover);\n                if (element && element.length) {\n                    element[0].removeAttribute(DISABLED);\n                    element[0].removeAttribute(READONLY);\n                }\n                element.attr(ARIA_DISABLED, false)\n                       .attr(ARIA_READONLY, false)\n                       .on(\"keydown\" + ns, that._keydown.bind(that))\n                       .on(\"focusout\" + ns, that._blur.bind(that))\n                       .on(\"focus\" + ns, function() {\n                           that.wrapper.addClass(FOCUSED);\n                       });\n\n               icon.on(UP, that._click.bind(that))\n                   .on(MOUSEDOWN, preventDefault);\n            } else {\n                wrapper\n                    .addClass(disable ? STATEDISABLED : \"\")\n                    .removeClass(disable ? \"\" : STATEDISABLED);\n\n                element.attr(DISABLED, disable)\n                       .attr(READONLY, readonly)\n                       .attr(ARIA_DISABLED, disable)\n                       .attr(ARIA_READONLY, readonly);\n            }\n        },\n\n        readonly: function(readonly) {\n            this._editable({\n                readonly: readonly === undefined$1 ? true : readonly,\n                disable: false\n            });\n            if (this._dateInput) {\n                this._dateInput._editable({\n                    readonly: readonly === undefined$1 ? true : readonly,\n                    disable: false\n                });\n            }\n\n            if (this.label && this.label.floatingLabel) {\n                this.label.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n            }\n        },\n\n        enable: function(enable) {\n            this._editable({\n                readonly: false,\n                disable: !(enable = enable === undefined$1 ? true : enable)\n            });\n            if (this._dateInput) {\n                this._dateInput._editable({\n                    readonly: false,\n                    disable: !(enable = enable === undefined$1 ? true : enable)\n                });\n            }\n\n            if (this.label && this.label.floatingLabel) {\n                this.label.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n            }\n        },\n\n        _label: function() {\n            var that = this;\n            var options = that.options;\n            var labelOptions = $.isPlainObject(options.label) ? options.label : {\n                content: options.label\n            };\n\n            if (that._dateInput) {\n                labelOptions.floatCheck = () => {\n                    that._dateInput._toggleDateMask(true);\n\n                    if (!that.value() && !that._dateInput._hasDateInput() && document.activeElement !== that.element[0]) {\n                        that._dateInput._toggleDateMask(false);\n                        return true;\n                    }\n\n                    return false;\n                };\n            }\n\n            that.label = new kendo.ui.Label(null, $.extend({}, labelOptions, {\n                widget: that\n            }));\n\n            that._inputLabel = that.label.element;\n        },\n\n        destroy: function() {\n            var that = this;\n\n            if (that.label) {\n                that.label.destroy();\n            }\n\n            Widget.fn.destroy.call(that);\n\n            if (that.dateView.calendar && that._navigateCalendarHandler) {\n                that.dateView.calendar.unbind(NAVIGATE, that._navigateCalendarHandler);\n                that._navigateCalendarHandler = null;\n            }\n\n            that.dateView.destroy();\n\n            that.element.off(ns);\n            that._dateIcon.off(ns);\n\n            if (that._form) {\n                that._form.off(\"reset\", that._resetHandler);\n            }\n        },\n\n        open: function() {\n            this.dateView.open();\n            this._navigateCalendar();\n        },\n\n        close: function() {\n            this.dateView.close();\n        },\n\n        min: function(value) {\n            return this._option(MIN, value);\n        },\n\n        max: function(value) {\n            return this._option(MAX, value);\n        },\n\n        value: function(value) {\n            var that = this;\n\n            if (value === undefined$1) {\n                return that._value;\n            }\n\n            that._old = that._update(value);\n\n            if (that._old === null) {\n                if (that._dateInput) {\n                    that._dateInput.value(that._old);\n                } else {\n                    that.element.val(\"\");\n                }\n            }\n\n            that._oldText = that.element.val();\n\n            if (that.label && that.label.floatingLabel) {\n                that.label.floatingLabel.refresh();\n            }\n        },\n\n        _toggleHover: function(e) {\n            $(e.currentTarget).toggleClass(HOVER, e.type === \"mouseenter\");\n        },\n\n        _blur: function() {\n            var that = this,\n                value = that.element.val();\n\n            that.close();\n            if (value !== that._oldText) {\n                that._change(value);\n                if (!value) {\n                    that.dateView.current(kendo.calendar.getToday());\n                }\n            }\n\n            that.wrapper.removeClass(FOCUSED);\n        },\n\n        _click: function(e) {\n            var that = this;\n\n            that.dateView.toggle();\n            that._navigateCalendar();\n            that._focusElement(e.type);\n        },\n\n        _focusElement: function(eventType) {\n            var element = this.element;\n\n            if ((!support.touch || (support.mouseAndTouchPresent && !(eventType || \"\").match(/touch/i))) && element[0] !== activeElement()) {\n                element.trigger(\"focus\");\n            }\n        },\n\n        _change: function(value) {\n            var that = this,\n            oldValue = that.element.val(),\n            dateChanged;\n\n            value = that._update(value);\n            dateChanged = !kendo.calendar.isEqualDate(that._old, value);\n\n            var valueUpdated = dateChanged && !that._typing;\n            var textFormatted = oldValue !== that.element.val();\n\n            if (valueUpdated || textFormatted) {\n                that.element.trigger(CHANGE);\n            }\n\n            if (dateChanged) {\n                that._old = value;\n                that._oldText = that.element.val();\n\n                that.trigger(CHANGE);\n            }\n\n            that._typing = false;\n        },\n\n        _keydown: function(e) {\n            var that = this,\n                dateView = that.dateView,\n                value = that.element.val(),\n                handled = false;\n\n            if (!dateView.popup.visible() && e.keyCode == keys.ENTER && value !== that._oldText) {\n                that._change(value);\n            } else {\n                handled = dateView.move(e);\n                that._updateARIA(dateView._current);\n\n                if (!handled) {\n                    that._typing = true;\n                } else if (that._dateInput && e.stopImmediatePropagation) {\n                    e.stopImmediatePropagation();\n                }\n            }\n        },\n\n        _icon: function() {\n            var that = this,\n                element = that.element,\n                options = that.options,\n                icon;\n\n            icon = element.next(\"button.k-input-button\");\n\n            if (!icon[0]) {\n                icon = $(html.renderButton('<button aria-label=\"select\" tabindex=\"-1\" class=\"k-input-button k-button k-icon-button\"></button>', {\n                    icon: \"calendar\",\n                    size: options.size,\n                    fillMode: options.fillMode,\n                    shape: \"none\",\n                    rounded: \"none\"\n                })).insertAfter(element);\n            }\n\n            that._dateIcon = icon.attr({\n                \"role\": \"button\"\n            });\n        },\n\n        _setCalendarAttribute: function() {\n            var that = this;\n            setTimeout(function() {\n                that.element.attr(ARIA_ACTIVEDESCENDANT, that.dateView.calendar._table.attr(ARIA_ACTIVEDESCENDANT));\n            });\n        },\n\n        _navigateCalendar: function() {\n            var that = this;\n\n            if (!that._navigateCalendarHandler) {\n                that._navigateCalendarHandler = that._setCalendarAttribute.bind(that);\n            }\n\n            if (!!that.dateView.calendar) {\n                that.dateView.calendar.unbind(NAVIGATE, that._navigateCalendarHandler).bind(NAVIGATE, that._navigateCalendarHandler);\n            }\n        },\n\n        _option: function(option, value) {\n            var that = this,\n                options = that.options;\n\n            if (value === undefined$1) {\n                return options[option];\n            }\n\n            value = parse(value, options.parseFormats, options.culture);\n\n            if (!value) {\n                return;\n            }\n\n            options[option] = new DATE(+value);\n            that.dateView[option](value);\n        },\n\n        _update: function(value) {\n            var that = this,\n                options = that.options,\n                min = options.min,\n                max = options.max,\n                current = that._value,\n                date = parse(value, options.parseFormats, options.culture),\n                isSameType = (date === null && current === null) || (date instanceof Date && current instanceof Date),\n                formattedValue;\n\n            if (options.disableDates(date)) {\n                date = null;\n                if (!that._old && !that.element.val()) {\n                    value = null;\n                }\n            }\n\n            if (+date === +current && isSameType) {\n                formattedValue = kendo.toString(date, options.format, options.culture);\n\n                if (formattedValue !== value && !(that._dateInput && !date)) {\n                    that.element.val(date === null ? value : formattedValue);\n                }\n\n                return date;\n            }\n\n            if (date !== null && isEqualDatePart(date, min)) {\n                date = restrictValue(date, min, max);\n            } else if (!isInRange(date, min, max)) {\n                date = null;\n            }\n\n            that._value = date;\n            that.dateView.value(date);\n            if (that._dateInput && date) {\n                that._dateInput.value(date || value);\n            } else {\n                that.element.val(kendo.toString(date || value, options.format, options.culture));\n            }\n            that._updateARIA(date);\n\n            return date;\n        },\n\n        _wrapper: function() {\n            var that = this,\n                element = that.element,\n                wrapper;\n\n            wrapper = element.parents(\".k-datepicker\");\n\n            if (!wrapper[0]) {\n                wrapper = element.wrap(SPAN).parent();\n            }\n\n            wrapper[0].style.cssText = element[0].style.cssText;\n            element.css({\n                height: element[0].style.height\n            });\n\n            that.wrapper = wrapper.addClass(\"k-datepicker k-input\")\n                .addClass(element[0].className).removeClass('input-validation-error');\n        },\n\n        _reset: function() {\n            var that = this,\n                element = that.element,\n                formId = element.attr(\"form\"),\n                options = that.options,\n                disabledDate = options.disableDates,\n                parseFormats = options.parseFormats.length ? options.parseFormats : null,\n                optionsValue = that._initialOptions.value,\n                form = formId ? $(\"#\" + formId) : element.closest(\"form\"),\n                initialValue = element[0].defaultValue;\n\n            if (optionsValue && (disabledDate && disabledDate(optionsValue))) {\n                optionsValue = null;\n            }\n\n            if ((!initialValue || !kendo.parseDate(initialValue, parseFormats, options.culture)) && optionsValue) {\n                element.attr(\"value\", kendo.toString(optionsValue, options.format, options.culture));\n            }\n\n            if (form[0]) {\n                that._resetHandler = function() {\n                    that.value(optionsValue || element[0].defaultValue);\n                    that.max(that._initialOptions.max);\n                    that.min(that._initialOptions.min);\n                };\n\n                that._form = form.on(\"reset\", that._resetHandler);\n            }\n        },\n\n        _template: function() {\n            this._ariaTemplate = template(this.options.ARIATemplate).bind(this);\n        },\n\n        _createDateInput: function(options) {\n            if (this._dateInput) {\n                this._dateInput.destroy();\n                this._dateInput = null;\n            }\n\n            if (options.dateInput ) {\n                this._dateInput = new ui.DateInput(this.element, {\n                    culture: options.culture,\n                    format: options.format,\n                    size: options.size,\n                    fillMode: options.fillMode,\n                    rounded: options.rounded,\n                    min: options.min,\n                    max: options.max,\n                    messages: options.messages.dateInput\n                });\n            }\n        },\n\n        _updateARIA: function(date) {\n            var that = this;\n            var calendar = that.dateView.calendar;\n\n            if (that.element && that.element.length) {\n                that.element[0].removeAttribute(ARIA_ACTIVEDESCENDANT);\n            }\n\n            if (calendar) {\n                that.element.attr(ARIA_ACTIVEDESCENDANT, calendar._updateAria(that._ariaTemplate, date));\n            }\n        }\n    });\n\n    kendo.cssProperties.registerPrefix(\"DatePicker\", \"k-input-\");\n\n    kendo.cssProperties.registerValues(\"DatePicker\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n    ui.plugin(DatePicker);\n\n})(__webpack_provided_window_dot_kendo.jQuery);\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.datepicker.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.datetimepicker.js":
/*!****************************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.datetimepicker.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _kendo_timepicker_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.timepicker.js */ \"./node_modules/kendo-ui-core/esm/kendo.timepicker.js\");\n/* harmony import */ var _kendo_html_button_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.html.button.js */ \"./node_modules/kendo-ui-core/esm/kendo.html.button.js\");\n/* harmony import */ var _kendo_label_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kendo.label.js */ \"./node_modules/kendo-ui-core/esm/kendo.label.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\n\n// The current file development is no longer in active phase but the code will be kept as is.\n\nvar __meta__ = {\n    id: \"datetimepicker\",\n    name: \"DateTimePicker\",\n    category: \"web\",\n    description: \"The DateTimePicker allows the end user to select a value from a calendar or a time drop-down list.\",\n    depends: [ \"datepicker\", \"timepicker\", \"label\" ]\n};\n\n(function($, undefined$1) {\n\n    var kendo = __webpack_provided_window_dot_kendo,\n        TimeView = kendo.TimeView,\n        html = kendo.html,\n        parse = kendo.parseDate,\n        support = kendo.support,\n        activeElement = kendo._activeElement,\n        extractFormat = kendo._extractFormat,\n        calendar = kendo.calendar,\n        isInRange = calendar.isInRange,\n        restrictValue = calendar.restrictValue,\n        isEqualDatePart = calendar.isEqualDatePart,\n        getMilliseconds = TimeView.getMilliseconds,\n        ui = kendo.ui,\n        Widget = ui.Widget,\n        OPEN = \"open\",\n        CLOSE = \"close\",\n        CHANGE = \"change\",\n        ns = \".kendoDateTimePicker\",\n        CLICK = \"click\" + ns,\n        UP = support.mouseAndTouchPresent ? kendo.applyEventMap(\"up\", ns.slice(1)) : CLICK,\n        DISABLED = \"disabled\",\n        READONLY = \"readonly\",\n        FOCUSED = \"k-focus\",\n        HOVER = \"k-hover\",\n        STATEDISABLED = \"k-disabled\",\n        HOVEREVENTS = \"mouseenter\" + ns + \" mouseleave\" + ns,\n        MOUSEDOWN = \"mousedown\" + ns,\n        MONTH = \"month\",\n        SPAN = \"<span/>\",\n        ARIA_ACTIVEDESCENDANT = \"aria-activedescendant\",\n        ARIA_EXPANDED = \"aria-expanded\",\n        ARIA_HIDDEN = \"aria-hidden\",\n        ARIA_DISABLED = \"aria-disabled\",\n        ARIA_READONLY = \"aria-readonly\",\n        DATE = Date,\n        MIN = new DATE(1800, 0, 1),\n        MAX = new DATE(2099, 11, 31),\n        dateViewParams = { view: \"date\" },\n        timeViewParams = { view: \"time\" },\n        extend = $.extend,\n        SINGLE_POPUP_TEMPLATE = ({ buttonSize, messages }) => '<div class=\"k-date-tab k-datetime-wrap\">' +\n                                    '<div class=\"k-datetime-buttongroup\">' +\n                                        '<div class=\"k-button-group k-button-group-stretched\">' +\n                                            kendo.html.renderButton(`<button class=\"k-selected k-group-start\">${messages.date}</button>`, {\n                                                size: buttonSize\n                                            }) +\n                                            kendo.html.renderButton(`<button class=\"k-group-end\">${messages.time}</button>`, {\n                                                size: buttonSize\n                                            }) +\n                                        '</div>' +\n                                    '</div>' +\n                                    '<div class=\"k-datetime-selector\">' +\n                                        '<div class=\"k-datetime-calendar-wrap\">' +\n                                        '</div>' +\n                                        '<div class=\"k-datetime-time-wrap\">' +\n                                        '</div>' +\n                                    '</div>' +\n                                    '<div class=\"k-datetime-footer k-actions\">' +\n                                        kendo.html.renderButton(`<button class=\"k-time-accept\" title=\"Set\" aria-label=\"Set\">${messages.set}</button>`, {\n                                            size: buttonSize,\n                                            themeColor: \"primary\"\n                                        }) +\n                                        kendo.html.renderButton(`<button class=\"k-time-cancel\" title=\"Cancel\" aria-label=\"Cancel\">${messages.cancel}</button>`, {\n                                            size: buttonSize\n                                        }) +\n                                    '</div>' +\n                                '</div>',\n        STATE_SELECTED = \"k-selected\";\n\n    var DateTimePicker = Widget.extend({\n        init: function(element, options) {\n            var that = this, disabled, initialValue;\n\n            options = options || {};\n            options.componentType = options.componentType || \"classic\";\n            Widget.fn.init.call(that, element, options);\n\n            element = that.element;\n            options = that.options;\n\n            options.disableDates = kendo.calendar.disabled(options.disableDates);\n            options.min = parse(element.attr(\"min\")) || parse(options.min);\n            options.max = parse(element.attr(\"max\")) || parse(options.max);\n\n            if (+options.max != +MAX || +options.min != +MIN || +options.startTime != +MIN || options.endTime != +MAX) {\n                this._specifiedRange = true;\n            }\n\n            normalize(options);\n\n            that._initialOptions = extend({}, options);\n\n            that._wrapper();\n\n            if (options.singlePopup) {\n                that._popup();\n            }\n\n            that._views();\n\n            that._icons();\n\n            that._reset();\n            that._template();\n\n            try {\n                element[0].setAttribute(\"type\", \"text\");\n            } catch (e) {\n                element[0].type = \"text\";\n            }\n\n            element.addClass(\"k-input-inner\")\n                   .attr({\n                       \"role\": \"combobox\",\n                       \"aria-expanded\": false,\n                       \"aria-haspopup\": \"grid\",\n                       \"aria-controls\": that.dateView._dateViewID + \" \" + that.timeView._timeViewID,\n                       \"autocomplete\": \"off\"\n                   });\n\n\n            that._midnight = that._calculateMidnight(options.min, options.max);\n\n            disabled = element.is(\"[disabled]\") || $(that.element).parents(\"fieldset\").is(':disabled');\n            if (disabled) {\n                that.enable(false);\n            } else {\n                that.readonly(element.is(\"[readonly]\"));\n            }\n\n            initialValue = parse(options.value || that.element.val(), options.parseFormats, options.culture);\n\n            that._createDateInput(options);\n\n            that._old = that._update(initialValue || that.element.val());\n            that._oldText = element.val();\n            that._applyCssClasses();\n\n            if (options.label) {\n                that._label();\n            }\n\n            kendo.notify(that);\n        },\n\n        options: {\n            name: \"DateTimePicker\",\n            value: null,\n            format: \"\",\n            timeFormat: \"\",\n            culture: \"\",\n            parseFormats: [],\n            dates: [],\n            disableDates: null,\n            startTime: null,\n            endTime: null,\n            min: new DATE(MIN),\n            max: new DATE(MAX),\n            interval: 30,\n            height: 200,\n            footer: \"\",\n            start: MONTH,\n            depth: MONTH,\n            animation: {},\n            month: {},\n            ARIATemplate: ({ valueType, text }) => `Current focused ${valueType} is ${text}`,\n            dateButtonText: \"Open the date view\",\n            timeButtonText: \"Open the time view\",\n            dateInput: false,\n            weekNumber: false,\n            messages: {\n                set: \"Set\",\n                cancel: \"Cancel\",\n                hour: \"hour\",\n                minute: \"minute\",\n                second: \"second\",\n                millisecond: \"millisecond\",\n                now: \"Now\",\n                date: \"Date\",\n                time: \"Time\",\n                today: \"Today\",\n                weekColumnHeader: \"\"\n            },\n            componentType: \"classic\",\n            size: \"medium\",\n            fillMode: \"solid\",\n            rounded: \"medium\",\n            label: null\n        },\n\n        events: [\n            OPEN,\n            CLOSE,\n            CHANGE\n        ],\n\n        componentTypes: {\n            \"classic\": {\n                singlePopup: false,\n                timeView: {\n                    list: \"list\"\n                }\n            },\n            \"modern\": {\n                singlePopup: true,\n                timeView: {\n                    list: \"scroll\"\n                }\n            }\n        },\n\n        setOptions: function(options) {\n            var that = this,\n                value = that._value,\n                min, max, currentValue;\n\n            Widget.fn.setOptions.call(that, options);\n\n            options = that.options;\n\n            options.min = min = parse(options.min);\n            options.max = max = parse(options.max);\n\n            normalize(options);\n\n            that._midnight = that._calculateMidnight(options.min, options.max);\n\n            currentValue = options.value || that._value || that.dateView._current;\n\n            if (min && !isEqualDatePart(min, currentValue)) {\n                min = new DATE(MIN);\n            }\n\n            if (max && !isEqualDatePart(max, currentValue)) {\n                max = new DATE(MAX);\n            }\n\n            that._dateIcon.off(ns);\n            that._dateIcon.remove();\n            that._timeIcon.off(ns);\n            that._timeIcon.remove();\n\n            that.dateView.setOptions(options);\n\n            that.timeView.setOptions(extend({}, options, {\n                format: options.timeFormat,\n                min: min,\n                max: max\n            }));\n\n            that._icons();\n            that._editable(options);\n            that._createDateInput(options);\n\n            if (!that._dateInput) {\n                that.element.val(kendo.toString(value, options.format, options.culture));\n            }\n\n            if (value) {\n                that._updateARIA(value);\n            }\n\n            if (options.label && that._inputLabel) {\n                that.label.setOptions(options.label);\n            } else if (options.label === false) {\n                that.label._unwrapFloating();\n                that._inputLabel.remove();\n                delete that._inputLabel;\n            } else if (options.label) {\n                that._label();\n            }\n        },\n\n        _editable: function(options) {\n            var that = this,\n                element = that.element.off(ns),\n                dateIcon = that._dateIcon.off(ns),\n                timeIcon = that._timeIcon.off(ns),\n                wrapper = that.wrapper.off(ns),\n                readonly = options.readonly,\n                disable = options.disable;\n\n            if (!readonly && !disable) {\n                wrapper\n                    .removeClass(STATEDISABLED)\n                    .on(HOVEREVENTS, that._toggleHover);\n                if (element && element.length) {\n                    element[0].removeAttribute(DISABLED);\n                    element[0].removeAttribute(READONLY, false);\n                    element[0].removeAttribute(ARIA_DISABLED, false);\n                    element[0].removeAttribute(ARIA_READONLY, false);\n                }\n                element.on(\"keydown\" + ns, that._keydown.bind(that))\n                       .on(\"focus\" + ns, function() {\n                           that.wrapper.addClass(FOCUSED);\n                       })\n                       .on(\"focusout\" + ns, function() {\n                           that.wrapper.removeClass(FOCUSED);\n                           if (element.val() !== that._oldText) {\n                               that._change(element.val());\n                               if (!element.val()) {\n                                   that.dateView.current(kendo.calendar.getToday());\n                               }\n                           }\n                           if (that.options.singlePopup) {\n                               return;\n                           }\n                           that.close(\"date\");\n                           that.close(\"time\");\n                       });\n\n               dateIcon.on(MOUSEDOWN, preventDefault)\n                        .on(UP, function(e) {\n                            that.toggle(\"date\");\n                            that._focusElement(e.type);\n                        });\n\n               timeIcon.on(MOUSEDOWN, preventDefault)\n                        .on(UP, function(e) {\n                            that.toggle(\"time\");\n                            that._focusElement(e.type);\n                        });\n\n            } else {\n                wrapper\n                    .addClass(disable ? STATEDISABLED : \"\")\n                    .removeClass(disable ? \"\" : STATEDISABLED);\n\n                element.attr(DISABLED, disable)\n                       .attr(READONLY, readonly)\n                       .attr(ARIA_DISABLED, disable)\n                       .attr(ARIA_READONLY, readonly);\n            }\n        },\n\n        _label: function() {\n            var that = this;\n            var options = that.options;\n            var labelOptions = $.isPlainObject(options.label) ? options.label : {\n                content: options.label\n            };\n\n            if (that._dateInput) {\n                labelOptions.floatCheck = () => {\n                    that._dateInput._toggleDateMask(true);\n\n                    if (!that.value() && !that._dateInput._hasDateInput() && document.activeElement !== that.element[0]) {\n                        that._dateInput._toggleDateMask(false);\n                        return true;\n                    }\n\n                    return false;\n                };\n            }\n\n            that.label = new kendo.ui.Label(null, $.extend({}, labelOptions, {\n                widget: that\n            }));\n\n            that._inputLabel = that.label.element;\n        },\n\n        _focusElement: function(eventType) {\n            var element = this.element;\n\n            if ((!support.touch || (support.mouseAndTouchPresent && !(eventType || \"\").match(/touch/i))) && element[0] !== activeElement()) {\n                element.trigger(\"focus\");\n            }\n        },\n\n        readonly: function(readonly) {\n            this._editable({\n                readonly: readonly === undefined$1 ? true : readonly,\n                disable: false\n            });\n\n            if (this.label && this.label.floatingLabel) {\n                this.label.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n            }\n        },\n\n        enable: function(enable) {\n            this._editable({\n                readonly: false,\n                disable: !(enable = enable === undefined$1 ? true : enable)\n            });\n\n            if (this.label && this.label.floatingLabel) {\n                this.label.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n\n            Widget.fn.destroy.call(that);\n            that.dateView.destroy();\n            that.timeView.destroy();\n\n            if (that.label) {\n                that.label.destroy();\n            }\n\n            if (that.options.singlePopup) {\n                that.popup.element.off(ns);\n                that.popup.destroy();\n            }\n\n            that.element.off(ns);\n            that._dateIcon.off(ns);\n            that._timeIcon.off(ns);\n            that.wrapper.off(ns);\n\n            if (that._form) {\n                that._form.off(\"reset\", that._resetHandler);\n            }\n        },\n\n        close: function(view) {\n            var that = this;\n\n            if (that.options.singlePopup) {\n                that.popup.close();\n            } else {\n                if (view !== \"time\") {\n                    view = \"date\";\n                }\n\n                that[view + \"View\"].close();\n            }\n\n            setTimeout(function() {\n                that.element.removeAttr(\"aria-activedescendant\");\n            });\n        },\n\n        open: function(view) {\n            var that = this;\n            var popupHovered;\n\n            if (that.options.singlePopup) {\n\n                that.dateView._calendar();\n\n                if (that.timeView.ul.find(\"li\").length < 1) {\n                    that.timeView.bind();\n                }\n\n                // In some cases when the popup is opened resize is triggered which will cause it to close\n                // Setting the below flag will prevent this from happening\n                // Reference: https://github.com/telerik/kendo/pull/7553\n                popupHovered = that.popup._hovered;\n                that.popup._hovered = true;\n\n                that.popup.open();\n\n                if (view === \"time\") {\n                    that._switchToTimeView();\n                } else {\n                    that._switchToDateView();\n                }\n\n                this._dateIcon.toggle(view !== \"time\");\n                this._timeIcon.toggle(view === \"time\");\n\n                setTimeout(function() {\n                    that.popup._hovered = popupHovered;\n                }, 1);\n\n            } else {\n                if (view !== \"time\") {\n                    view = \"date\";\n                }\n\n                this[view + \"View\"].open();\n            }\n        },\n\n        min: function(value) {\n            return this._option(\"min\", value);\n        },\n\n        max: function(value) {\n            return this._option(\"max\", value);\n        },\n\n        toggle: function(view) {\n            if (this.options.singlePopup) {\n                if (this.popup.visible()) {\n                    this.close();\n                } else {\n                    this.open(view);\n                }\n            } else {\n                var secondView = \"timeView\";\n\n                if (view !== \"time\") {\n                    view = \"date\";\n                } else {\n                    secondView = \"dateView\";\n                }\n\n                this[view + \"View\"].toggle();\n                this[secondView].close();\n            }\n\n        },\n\n        value: function(value) {\n            var that = this;\n\n            if (value === undefined$1) {\n                return that._value;\n            }\n\n            that._old = that._update(value);\n            if (that._old === null) {\n                if (that._dateInput) {\n                    that._dateInput.value(that._old);\n                } else {\n                    that.element.val(\"\");\n                }\n            }\n\n            that._oldText = that.element.val();\n\n            if (that.label && that.label.floatingLabel) {\n                that.label.floatingLabel.refresh();\n            }\n        },\n\n        _change: function(value) {\n            var that = this,\n            oldValue = that.element.val(),\n            dateChanged;\n\n            value = that._update(value);\n            dateChanged = +that._old != +value;\n\n            var valueUpdated = dateChanged && !that._typing;\n            var textFormatted = oldValue !== that.element.val();\n\n            if (valueUpdated || textFormatted) {\n                that.element.trigger(CHANGE);\n            }\n\n            if (dateChanged) {\n                that._old = value;\n                that._oldText = that.element.val();\n\n                that.trigger(CHANGE);\n            }\n\n            that._typing = false;\n        },\n\n        _option: function(option, value) {\n            var that = this;\n            var options = that.options;\n            var timeView = that.timeView;\n            var timeViewOptions = timeView.options;\n            var current = that._value || that._old;\n            var minDateEqual;\n            var maxDateEqual;\n\n            if (value === undefined$1) {\n                return options[option];\n            }\n\n            value = parse(value, options.parseFormats, options.culture);\n            timeViewOptions.maxSet = false;\n\n            if (!value) {\n                return;\n            }\n\n            if (options.min.getTime() === options.max.getTime()) {\n                timeViewOptions.dates = [];\n            }\n\n            options[option] = new DATE(value.getTime());\n            that.dateView[option](value);\n\n            that._midnight = that._calculateMidnight(options.min, options.max);\n\n            if (current) {\n                minDateEqual = isEqualDatePart(options.min, current);\n                maxDateEqual = isEqualDatePart(options.max, current);\n            }\n\n            if (minDateEqual || maxDateEqual) {\n                timeViewOptions[option] = value;\n\n                if (minDateEqual && !maxDateEqual) {\n                    timeViewOptions.max = lastTimeOption(options.interval);\n                }\n\n                if (maxDateEqual) {\n                    if (that._midnight) {\n                        timeView.dataBind([MAX]);\n                        return;\n                    } else if (!minDateEqual) {\n                        timeViewOptions.min = MIN;\n                        timeViewOptions.maxSet = true;\n                    }\n                }\n            } else {\n                timeViewOptions.max = MAX;\n                timeViewOptions.min = MIN;\n            }\n\n            timeView.bind();\n        },\n\n        _toggleHover: function(e) {\n            $(e.currentTarget).toggleClass(HOVER, e.type === \"mouseenter\");\n        },\n\n        _update: function(value) {\n            var that = this,\n                options = that.options,\n                min = options.min,\n                max = options.max,\n                startTime = options.startTime,\n                endTime = options.endTime,\n                dates = options.dates,\n                timeView = that.timeView,\n                current = that._value,\n                date = parse(value, options.parseFormats, options.culture),\n                isSameType = (date === null && current === null) || (date instanceof Date && current instanceof Date),\n                rebind, timeViewOptions, old, skip, formattedValue;\n\n            if (options.disableDates && options.disableDates(date)) {\n                date = null;\n                if (!that._old && !that.element.val()) {\n                    value = null;\n                }\n            }\n\n            if (+date === +current && isSameType) {\n                formattedValue = kendo.toString(date, options.format, options.culture);\n\n                if (formattedValue !== value ) {\n                    that.element.val(date === null ? value : formattedValue);\n                    if (value instanceof String) {\n                        that.element.trigger(CHANGE);\n                    }\n                }\n\n                return date;\n            }\n\n            if (date !== null && isEqualDatePart(date, min)) {\n                date = restrictValue(date, min, max);\n            } else if (!isInRange(date, min, max)) {\n                date = null;\n            }\n\n            that._value = date;\n            timeView.value(date);\n            that.dateView.value(date);\n\n            if (date) {\n                old = that._old;\n                timeViewOptions = timeView.options;\n                timeViewOptions.maxSet = false;\n\n                if (dates[0]) {\n                    dates = $.grep(dates, function(d) { return isEqualDatePart(date, d); });\n\n                    if (dates[0]) {\n                        timeView.dataBind(dates);\n                        skip = true;\n                    }\n                }\n\n                if (!skip) {\n                    if (isEqualDatePart(date, min)) {\n                        timeViewOptions.min = startTime ? startTime : min;\n                        timeViewOptions.max = endTime ? endTime : lastTimeOption(options.interval);\n                        rebind = true;\n                    }\n\n                    if (isEqualDatePart(date, max)) {\n                        if (that._midnight) {\n                            timeView.dataBind([MAX]);\n                            skip = true;\n                        } else {\n                            timeViewOptions.max = endTime ? endTime : max;\n                            timeViewOptions.maxSet = true;\n                            if (!rebind) {\n                                timeViewOptions.min = MIN;\n                            }\n                            rebind = true;\n                        }\n                    }\n                }\n\n                if (!skip && ((!old && rebind) || (old && !isEqualDatePart(old, date)))) {\n                    if (!rebind) {\n                        timeViewOptions.max = endTime ? endTime : MAX;\n                        timeViewOptions.min = startTime ? startTime : MIN;\n                    }\n\n                    timeView.bind();\n                }\n            }\n            if (that._dateInput) {\n                if (date) {\n                    that._dateInput.value(date);\n                }\n            } else {\n                that.element.val(kendo.toString(date || value, options.format, options.culture));\n            }\n            that._updateARIA(date);\n\n            return date;\n        },\n\n        _keydown: function(e) {\n            var that = this,\n                dateView = that.dateView,\n                timeView = that.timeView,\n                value = that.element.val(),\n                isDateViewVisible = that.options.singlePopup ? that.popup.visible() : dateView.popup.visible();\n\n            var stopPropagation = that._dateInput && e.stopImmediatePropagation;\n\n            if (e.altKey && e.keyCode === kendo.keys.DOWN) {\n                that.toggle(isDateViewVisible ? \"time\" : \"date\");\n            } else if (isDateViewVisible) {\n                dateView.move(e);\n                that._updateARIA(dateView._current);\n\n                if (e.keyCode === kendo.keys.ENTER) {\n                    that.toggle(\"time\");\n                }\n            } else if (!that.options.singlePopup && timeView.popup.visible()) {\n                timeView.move(e);\n            } else if (e.keyCode === kendo.keys.ENTER && value !== that._oldText) {\n                that._change(value);\n            } else {\n                that._typing = true;\n                stopPropagation = false;\n            }\n            if (stopPropagation) {\n                e.stopImmediatePropagation();\n            }\n        },\n\n        _timeOption: function(arg) {\n            var that = this,\n            options = that.options,\n            timeOption = options[arg],\n            dateRangeOption = arg == \"startTime\" ? options.min : options.max,\n            option = arg == \"startTime\" ? new DATE(MIN) : new DATE(MAX),\n            date;\n\n            if ( timeOption ) {\n                option = new DATE(timeOption);\n            }\n\n            if (timeOption && dateRangeOption ) {\n                date = new Date(dateRangeOption.getFullYear(), dateRangeOption.getMonth(), dateRangeOption.getDate(), timeOption.getHours(), timeOption.getMinutes(), timeOption.getSeconds());\n                if (arg == \"startTime\" ) {\n                    that.options.min = date;\n                } else {\n                    that.options.max = date;\n                }\n            }\n\n            if ( options.componentType === \"modern\") {\n                option = dateRangeOption;\n            }\n\n            return option;\n        },\n\n        _views: function() {\n            var that = this,\n                element = that.element,\n                options = that.options,\n                id = element.attr(\"id\"),\n                dateView, timeView,\n                div, ul, msMin,\n                date,\n                timeDiv,\n                omitPopup,\n                timeViewOptions;\n\n            if (options.singlePopup) {\n                options.dateDiv = that.popup.element.find(\".k-datetime-calendar-wrap\");\n                timeDiv = that.popup.element.find(\".k-datetime-time-wrap\");\n                options.omitPopup = omitPopup = true;\n                timeViewOptions = options.timeView;\n            }\n\n            that.dateView = dateView = new kendo.DateView(extend({}, options, {\n                id: id,\n                anchor: that.wrapper,\n                change: function() {\n                    var value = that._applyDateValue();\n\n                    if (options.singlePopup) {\n                        if (!that.timeView._currentlySelected) {\n                            that.timeView._currentlySelected = new Date();\n                        }\n                        that.timeView._currentlySelected.setFullYear(value.getFullYear());\n                        that.timeView._currentlySelected.setMonth(value.getMonth());\n                        that.timeView._currentlySelected.setDate(value.getDate());\n                        that._switchToTimeView();\n                        that._toggleIcons();\n                    } else {\n                        that._change(value);\n                        that.close(\"date\");\n                    }\n                },\n                close: function(e) {\n                    if (that.trigger(CLOSE, dateViewParams)) {\n                        e.preventDefault();\n                    } else {\n                        element.attr(ARIA_EXPANDED, false);\n                        div.attr(ARIA_HIDDEN, true);\n                    }\n                },\n                open: function(e) {\n                    if (that.trigger(OPEN, dateViewParams)) {\n                        e.preventDefault();\n                    } else {\n\n                        if (element.val() !== that._oldText) {\n                            date = parse(element.val(), options.parseFormats, options.culture);\n\n                            that.dateView[date ? \"current\" : \"value\"](date);\n                        }\n\n                        div.attr(ARIA_HIDDEN, false);\n                        element.attr(ARIA_EXPANDED, true);\n\n                        that._updateARIA(date);\n                    }\n                }\n            }));\n            div = dateView.div;\n\n            msMin = options.min.getTime();\n            that.timeView = timeView = new TimeView({\n                id: id,\n                value: options.value,\n                size: options.size,\n                anchor: that.wrapper,\n                animation: options.animation,\n                format: options.timeFormat,\n                culture: options.culture,\n                height: options.componentType === \"modern\" ? null : options.height,\n                interval: options.interval,\n                startTime: options.startTime,\n                endTime: options.endTime,\n                min: that._timeOption(\"startTime\"),\n                max: that._timeOption(\"endTime\"),\n                dates: msMin === options.max.getTime() ? [new Date(msMin)] : [],\n                parseFormats: options.parseFormats,\n                validateDate: (options.startTime || options.endTime ) ? false : true,\n                change: function(value, trigger) {\n                    value = that._applyTimeValue(value);\n\n                    if (trigger) {\n                        that._timeSelected = true;\n                        that._change(value);\n                    } else {\n                        element.val(kendo.toString(value, options.format, options.culture));\n                        dateView.value(value);\n                        that._updateARIA(value);\n                    }\n                },\n                close: function(e) {\n                    if (that.trigger(CLOSE, timeViewParams)) {\n                        e.preventDefault();\n                    } else {\n                        ul.attr(ARIA_HIDDEN, true);\n                        element.attr(ARIA_EXPANDED, false);\n                    }\n                },\n                open: function(e) {\n                    if (that.options.componentType !== \"modern\") {\n                        timeView._adjustListWidth();\n                    } else {\n                        that.timeView._updateTitle();\n                    }\n\n                    if (that.trigger(OPEN, timeViewParams)) {\n                        e.preventDefault();\n                    } else {\n                        if (element.val() !== that._oldText) {\n                            date = parse(element.val(), options.parseFormats, options.culture);\n\n                            that.timeView.value(date);\n                        }\n\n                        ul.attr(ARIA_HIDDEN, false);\n                        element.attr(ARIA_EXPANDED, true);\n\n                        timeView.options.active(timeView.current());\n                    }\n                },\n                active: function(current) {\n                    if (element && element.length) {\n                        element[0].removeAttribute(ARIA_ACTIVEDESCENDANT);\n                    }\n                    if (current) {\n                        element.attr(ARIA_ACTIVEDESCENDANT, timeView._optionID);\n                    }\n                },\n                popup: options.popup,\n                useValueToRender: true,\n                specifiedRange: that._specifiedRange,\n                omitPopup: omitPopup,\n                timeDiv: timeDiv,\n                timeView: timeViewOptions,\n                messages: that.options.messages\n            });\n            ul = timeView.ul;\n        },\n\n        _applyDateValue: function() {\n            var that = this;\n            var options = that.options;\n            var dateView = that.dateView;\n            var value = dateView.calendar.value();\n            var msValue = +value;\n            var msMin = +options.min;\n            var msMax = +options.max;\n            var current, adjustedDate;\n\n            if (msValue === msMin || msValue === msMax) {\n                current = msValue === msMin ? msMin : msMax;\n                current = new DATE(that._value || current);\n                current.setFullYear(value.getFullYear(), value.getMonth(), value.getDate());\n\n                if (isInRange(current, msMin, msMax)) {\n                    value = current;\n                }\n            }\n\n            if (that._value) {\n\n                adjustedDate = kendo.date.setHours(new Date(value), that._value);\n\n                if (isInRange(adjustedDate, msMin, msMax)) {\n                    value = adjustedDate;\n                }\n            }\n\n            return value;\n        },\n\n        _applyTimeValue: function(value) {\n            var timeView = this.timeView;\n            var options = this.options;\n\n            value = timeView._parse(value);\n\n            if (value < options.min) {\n                value = new DATE(+options.min);\n                timeView.options.min = value;\n            } else if (value > options.max) {\n                value = new DATE(+options.max);\n                timeView.options.max = value;\n            }\n\n            return value;\n        },\n\n        _icons: function() {\n            var that = this;\n            var element = that.element;\n            var options = that.options;\n            var icons;\n\n            icons = that.wrapper.find(\"button.k-input-button\");\n\n            if (!icons[0]) {\n                that._dateIcon = $(html.renderButton('<button unselectable=\"on\" tabindex=\"-1\" class=\"k-input-button\" aria-label=\"' + options.dateButtonText + '\"></button>', {\n                    icon: \"calendar\",\n                    size: options.size,\n                    fillMode: options.fillMode,\n                    shape: \"none\",\n                    rounded: \"none\"\n                })).insertAfter(element);\n                that._timeIcon = $(html.renderButton('<button unselectable=\"on\" tabindex=\"-1\" class=\"k-input-button\" aria-label=\"' + options.timeButtonText + '\"></button>', {\n                    icon: \"clock\",\n                    size: options.size,\n                    fillMode: options.fillMode,\n                    shape: \"none\",\n                    rounded: \"none\"\n                })).insertAfter(element);\n            }\n\n            if (options.singlePopup) {\n                that._timeIcon.hide();\n            }\n        },\n\n        _wrapper: function() {\n            var that = this,\n            element = that.element,\n            wrapper;\n\n            wrapper = element.parents(\".k-datetimepicker\");\n\n            if (!wrapper[0]) {\n                wrapper = element.wrap(SPAN).parent();\n            }\n\n            wrapper[0].style.cssText = element[0].style.cssText;\n            element.css({\n                height: element[0].style.height\n            });\n\n            that.wrapper = wrapper.addClass(\"k-datetimepicker k-input\")\n                .addClass(element[0].className).removeClass('input-validation-error');\n        },\n\n        _reset: function() {\n            var that = this,\n                element = that.element,\n                formId = element.attr(\"form\"),\n                form = formId ? $(\"#\" + formId) : element.closest(\"form\"),\n                options = that.options,\n                disabledDate = options.disableDates,\n                parseFormats = options.parseFormats.length ? options.parseFormats : null,\n                optionsValue = that._initialOptions.value,\n                initialValue = element[0].defaultValue;\n\n            if (optionsValue && (disabledDate && disabledDate(optionsValue))) {\n                optionsValue = null;\n            }\n\n            if ((!initialValue || !kendo.parseDate(initialValue, parseFormats, options.culture)) && optionsValue) {\n                element.attr(\"value\", kendo.toString(optionsValue, options.format, options.culture));\n            }\n\n            if (form[0]) {\n                that._resetHandler = function() {\n                    that.value(optionsValue || element[0].defaultValue);\n                    that.max(that._initialOptions.max);\n                    that.min(that._initialOptions.min);\n                };\n\n                that._form = form.on(\"reset\", that._resetHandler);\n            }\n        },\n\n        _template: function() {\n            this._ariaTemplate = kendo.template(this.options.ARIATemplate).bind(this);\n        },\n\n        _createDateInput: function(options) {\n            if (this._dateInput) {\n                this._dateInput.destroy();\n                this._dateInput = null;\n            }\n\n            if (options.dateInput ) {\n                this._dateInput = new ui.DateInput(this.element, {\n                    culture: options.culture,\n                    format: options.format,\n                    size: options.size,\n                    fillMode: options.fillMode,\n                    rounded: options.rounded,\n                    min: options.min,\n                    max: options.max,\n                    interval: options.interval,\n                    messages: options.messages.dateInput\n                });\n            }\n        },\n\n        _calculateMidnight: function(min, max) {\n            return getMilliseconds(min) + getMilliseconds(max) === 0;\n        },\n\n        _updateARIA: function(date) {\n            var that = this;\n            var calendar = that.dateView.calendar;\n\n            if (that.element && that.element.length) {\n                that.element[0].removeAttribute(ARIA_ACTIVEDESCENDANT);\n            }\n\n            if (calendar) {\n                that.element.attr(ARIA_ACTIVEDESCENDANT, calendar._updateAria(that._ariaTemplate, date));\n            }\n        },\n        _popup: function() {\n            var that = this;\n            var options = that.options;\n            var div = $(\"<div></div>\").attr(ARIA_HIDDEN, \"true\")\n                .addClass(\"k-datetime-container k-group k-reset\")\n                .appendTo(document.body);\n\n            div.append(kendo.template(SINGLE_POPUP_TEMPLATE)(extend({}, that.options, {\n                buttonSize: that.options.size\n            })));\n            that.popup = new ui.Popup(div, extend(options.popup, options, {\n                name: \"Popup\",\n                isRtl: kendo.support.isRtl(that.wrapper),\n                anchor: that.wrapper,\n                activate: function() {\n                    if (that.options.timeView && that.options.timeView.list === \"scroll\") {\n                        that.timeView.addTranslate();\n                        that.timeView.applyValue(that._value);\n                        that.timeView._updateRanges();\n                    }\n                },\n                open: function(e) {\n                    if (that.trigger(OPEN, { view: this.element.find('.k-date-tab').length ? 'date' : 'time', sender: that })) {\n                        e.preventDefault();\n                    } else {\n                        this.element.attr(ARIA_HIDDEN, false);\n                        that.element.attr(ARIA_EXPANDED, true);\n                    }\n\n                    that.timeView._updateTitle();\n                },\n                close: function(e) {\n                    if (that.trigger(CLOSE, { view: this.element.find('.k-date-tab').length ? 'date' : 'time', sender: that })) {\n                        e.preventDefault();\n                    } else {\n                        that.element.attr(ARIA_EXPANDED, false);\n                        this.element.attr(ARIA_HIDDEN, true);\n                    }\n                }\n            }));\n\n            div.on(CLICK + ns, \".k-datetime-buttongroup .k-button\", that._groupChangeClick.bind(that));\n            div.on(CLICK + ns, \".k-datetime-footer button.k-time-cancel\", that._cancelClickHandler.bind(that));\n            div.on(CLICK + ns, \".k-datetime-footer button.k-time-accept\", that._setClickHandler.bind(that));\n        },\n\n        _groupChangeClick: function(e) {\n            preventDefault(e);\n            var button = $(e.currentTarget);\n            var index = button.index();\n\n            if (index) {\n                this._switchToTimeView();\n            } else {\n                this._switchToDateView();\n            }\n            this._toggleIcons();\n        },\n\n        _switchToDateView: function() {\n            this.popup.element.find(\".k-group-start, .k-group-end\").removeClass(STATE_SELECTED).eq(0).addClass(STATE_SELECTED);\n            this.popup.element.find(\".k-datetime-wrap\").removeClass(\"k-time-tab\").addClass(\"k-date-tab\");\n        },\n\n        _switchToTimeView: function() {\n            this.timeView.addTranslate();\n            this.timeView.applyValue(this._value);\n            this.timeView._updateRanges();\n            this.popup.element.find(\".k-group-start, .k-group-end\").removeClass(STATE_SELECTED).eq(1).addClass(STATE_SELECTED);\n            this.popup.element.find(\".k-datetime-wrap\").removeClass(\"k-date-tab\").addClass(\"k-time-tab\");\n        },\n\n        _toggleIcons: function() {\n            this._dateIcon.toggle();\n            this._timeIcon.toggle();\n        },\n\n        _cancelClickHandler: function(e) {\n            preventDefault(e);\n            if (this._value) {\n                this.value(this._value);\n                this.dateView.value(this._value);\n            }\n            this.popup.close();\n        },\n\n        _setClickHandler: function(e) {\n            preventDefault(e);\n            var value = this._applyDateValue();\n            var time;\n\n            value = value || new Date();\n            time = this.timeView._currentlySelected || value;\n            this.timeView._updateCurrentlySelected();\n            value.setHours(time.getHours());\n            value.setMinutes(time.getMinutes());\n            value.setSeconds(time.getSeconds());\n            value = this._applyTimeValue(value);\n\n            this._change(value);\n            this.popup.close();\n        }\n    });\n\n    function lastTimeOption(interval) {\n        var date = new Date(2100, 0, 1);\n        date.setMinutes(-interval);\n        return date;\n    }\n\n    function preventDefault(e) {\n        e.preventDefault();\n    }\n\n    function normalize(options) {\n        var patterns = kendo.getCulture(options.culture).calendars.standard.patterns,\n            parseFormats = !options.parseFormats.length,\n            timeFormat;\n\n        options.format = extractFormat(options.format || patterns.g);\n        options.timeFormat = timeFormat = extractFormat(options.timeFormat || patterns.t);\n        kendo.DateView.normalize(options);\n\n        if (parseFormats) {\n           options.parseFormats.unshift(\"yyyy-MM-ddTHH:mm:ss\");\n        }\n\n        if ($.inArray(timeFormat, options.parseFormats) === -1) {\n            options.parseFormats.push(timeFormat);\n        }\n    }\n\n    kendo.cssProperties.registerPrefix(\"DateTimePicker\", \"k-input-\");\n\n    kendo.cssProperties.registerValues(\"DateTimePicker\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n    ui.plugin(DateTimePicker);\n\n})(__webpack_provided_window_dot_kendo.jQuery);\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.datetimepicker.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.dialog.js":
/*!********************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.dialog.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* harmony import */ var _kendo_popup_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.popup.js */ \"./node_modules/kendo-ui-core/esm/kendo.popup.js\");\n/* harmony import */ var _kendo_textbox_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kendo.textbox.js */ \"./node_modules/kendo-ui-core/esm/kendo.textbox.js\");\n/* harmony import */ var _kendo_icons_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./kendo.icons.js */ \"./node_modules/kendo-ui-core/esm/kendo.icons.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\n\n\nvar __meta__ = {\n        id: \"dialog\",\n        name: \"Dialog\",\n        category: \"web\", // suite\n        description: \"The dialog widget is a modal popup that brings information to the user.\",\n        depends: [\"core\", \"popup\", \"textbox\", \"icons\"] // dependencies\n    };\n\n    (function($, undefined$1) {\n        var kendo = __webpack_provided_window_dot_kendo,\n            Widget = kendo.ui.Widget,\n            TabKeyTrap = kendo.ui.Popup.TabKeyTrap,\n            template = kendo.template,\n            keys = kendo.keys,\n            isFunction = kendo.isFunction,\n            encode = kendo.htmlEncode,\n            NS = \"kendoWindow\",\n            KDIALOG = \".k-dialog\",\n            KDIALOGWRAP = \".k-dialog-wrapper\",\n            KWINDOW = \".k-window\",\n            KCLOSE = \"[data-role='close']\",\n            KCONTENTCLASS = \"k-window-content k-dialog-content\",\n            KCONTENTSELECTOR = \".k-window-content\",\n            KSCROLL = \"k-scroll\",\n            KDIALOGTITLE = \".k-dialog-title\",\n            KDIALOGTITLEBAR = \".k-dialog-titlebar\",\n            KBUTTONGROUP = \".k-dialog-actions\",\n            // KACTIONS = \".k-actions\",\n            KBUTTON = \".k-button\",\n            KTEXTBOX = \".k-input-inner\",\n            KOVERLAY = \".k-overlay\",\n            VISIBLE = \":visible\",\n            ZINDEX = \"zIndex\",\n            BODY = \"body\",\n            INITOPEN = \"initOpen\",\n            TOUCHSTART = \"touchstart\",\n            TOUCHMOVE = \"touchmove\",\n            OPEN = \"open\",\n            CLOSE = \"close\",\n            SHOW = \"show\",\n            HIDE = \"hide\",\n            SIZE = {\n                small: \"k-window-sm\",\n                medium: \"k-window-md\",\n                large: \"k-window-lg\"\n            },\n            HIDDEN = \"hidden\",\n            OVERFLOW = \"overflow\",\n            DATADOCOVERFLOWRULE = \"original-overflow-rule\",\n            DATAHTMLTAPYRULE = \"tap-y\",\n            messages = {\n                okText: \"OK\",\n                cancel: \"Cancel\",\n                promptInput: \"Input\"\n            },\n            ceil = Math.ceil,\n            templates;\n\n        function defined(x) {\n            return (typeof x != \"undefined\");\n        }\n\n        function constrain(value, low, high) {\n            return Math.max(Math.min(parseInt(value, 10), high === Infinity ? high : parseInt(high, 10)), parseInt(low, 10));\n        }\n\n        function buttonKeyTrigger(e) {\n            return e.keyCode == keys.ENTER || e.keyCode == keys.SPACEBAR;\n        }\n\n        var DialogBase = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n                Widget.fn.init.call(that, element, options);\n                that._init(that.element, that.options);\n                kendo.notify(that);\n                if (that._showWatermarkOverlay) {\n                    that._showWatermarkOverlay(that.wrapper[0]);\n                }\n            },\n\n            _init: function(element, options) {\n                var that = this,\n                    wrapper;\n\n                that._centerCallback = that._center.bind(that);\n\n                that.appendTo = $(BODY);\n                if (!defined(options.visible) || options.visible === null) {\n                    options.visible = element.is(VISIBLE);\n                }\n\n                if (that.wrapperTemplate === undefined$1) {\n                    that.wrapperTemplate = templates.wrapper;\n                }\n\n                that._createDialog();\n                wrapper = that.wrapper = element.closest(KDIALOG);\n                that.dialogWrapper = wrapper.closest(KDIALOGWRAP);\n\n                if (options._defaultFocus === undefined$1) {\n                    that._defaultFocus = element[0];\n                }\n\n                that._tabindex(element);\n                that._dimensions();\n\n                if (!options.modal && that._isDialog()) {\n                    that.dialogWrapper.width(that.wrapper.width());\n                    that.dialogWrapper.height(that.wrapper.height());\n                    if (that.wrapper[0].style.width.indexOf(\"%\") > -1) {\n                        that.wrapper[0].style.width = \"100%\";\n                    }\n                    if (that.wrapper[0].style.height.indexOf(\"%\") > -1) {\n                        that.wrapper[0].style.height = \"100%\";\n                    }\n                }\n\n                this._tabKeyTrap = new TabKeyTrap(wrapper);\n\n                if (!that.options.visible) {\n                    that.dialogWrapper.hide();\n                } else {\n                    that._triggerOpen();\n                }\n            },\n\n            setOptions: function(options) {\n                var that = this;\n                var sizeClass = that.options.size;\n                that.wrapper.removeClass(kendo.getValidCssClass(\"k-dialog-\", \"themeColor\", that.options.themeColor));\n\n                options = $.extend(that.options, options);\n\n                Widget.fn.setOptions.call(that, options);\n\n                if (options.title !== undefined$1) {\n                    that.title(options.title);\n                }\n\n                if (options.content) {\n                    kendo.destroy(that.element.children());\n                    that.element.html(options.content);\n                }\n\n                if (options.actions) {\n                    that.wrapper.children(KBUTTONGROUP).remove();\n                    that._createActionbar(that.wrapper);\n                }\n\n                that.dialogWrapper.show();\n                that._closable(that.wrapper);\n\n                that.wrapper.removeClass(SIZE[sizeClass]);\n                that._dimensions();\n\n                if (!options.visible) {\n                    that.dialogWrapper.hide();\n                } else {\n                    that._triggerOpen();\n                }\n\n                if (options.themeColor && options.themeColor !== \"none\") {\n                    that.wrapper.addClass(kendo.getValidCssClass(\"k-dialog-\", \"themeColor\", that.options.themeColor));\n                }\n\n                if (typeof options.modal !== \"undefined\") {\n                    that._enableDocumentScrolling();\n                }\n            },\n\n            _isDialog: function() {\n                return this.options.name === \"Dialog\";\n            },\n\n            _dimensions: function() {\n                var that = this,\n                    wrapper = that.wrapper,\n                    options = that.options,\n                    width = options.width,\n                    height = options.height,\n                    sizeClass = options.size,\n                    dimensions = [\"minWidth\", \"minHeight\", \"maxWidth\", \"maxHeight\"];\n\n                for (var i = 0; i < dimensions.length; i++) {\n                    var value = options[dimensions[i]];\n                    if (value && value != Infinity) {\n                        wrapper.css(dimensions[i], value);\n                    }\n                }\n\n                this._setElementMaxHeight();\n\n                if (width) {\n                    if (width.toString().indexOf(\"%\") > 0) {\n                        wrapper.width(width);\n                    } else {\n                        wrapper.outerWidth(constrain(width, options.minWidth, options.maxWidth));\n                    }\n                }\n\n                if (height) {\n                    if (height.toString().indexOf(\"%\") > 0) {\n                        wrapper.height(height);\n                    } else {\n                        wrapper.outerHeight(constrain(height, options.minHeight, options.maxHeight));\n                    }\n\n                    this._setElementHeight();\n                }\n\n                if (sizeClass && SIZE[sizeClass]) {\n                    wrapper.addClass(SIZE[sizeClass]);\n                }\n            },\n\n            _setElementMaxHeight: function() {\n                var that = this,\n                    element = that.element,\n                    maxHeight = that.options.maxHeight,\n                    elementMaxHeight;\n\n                if (maxHeight != Infinity) {\n                    elementMaxHeight = parseFloat(maxHeight, 10) - that._uiHeight();\n                    if (elementMaxHeight > 0) {\n                        element.css({\n                            maxHeight: ceil(elementMaxHeight) + \"px\"\n                        });\n                    }\n                }\n\n            },\n\n            _setElementHeight: function() {\n                var that = this,\n                    element = that.element,\n                    height = that.wrapper.outerHeight(true),\n                    elementHeight = parseFloat(height, 10) - that._uiHeight();\n\n                if (elementHeight < 0) {\n                    elementHeight = 0;\n                }\n\n                element.css({\n                    height: ceil(elementHeight) + \"px\"\n                });\n\n                this._applyScrollClassName(element);\n\n            },\n\n            _applyScrollClassName: function(element) {\n                    var hasScroll = element.get(0).scrollHeight > element.outerHeight();\n\n                    if (hasScroll) {\n                        element.addClass(KSCROLL);\n                    } else {\n                        element.removeClass(KSCROLL);\n                    }\n            },\n\n            _uiHeight: function() {\n                var that = this,\n                    wrapper = that.wrapper,\n                    actionbar = wrapper.children(KBUTTONGROUP),\n                    actionbarHeight = actionbar[0] && actionbar[0].offsetHeight || 0,\n                    titlebar = wrapper.children(KDIALOGTITLEBAR),\n                    titlebarHeight = titlebar[0] && titlebar[0].offsetHeight || 0;\n\n                return actionbarHeight + titlebarHeight;\n            },\n\n            _closeClick: function(e) {\n                e.preventDefault();\n                this.close(false);\n            },\n\n            _closeKeyHandler: function(e) {\n                if (buttonKeyTrigger(e) || e.keyCode == keys.ESC) {\n                    this.close(false);\n                }\n            },\n\n            _keydown: function(e) {\n                var that = this,\n                    options = that.options,\n                    keyCode = e.keyCode;\n\n                if (keyCode == keys.ESC && !that._closing && options.closable) {\n                    that.close(false);\n                }\n            },\n\n            _createDialog: function() {\n                var that = this,\n                    content = that.element,\n                    options = that.options,\n                    isRtl = kendo.support.isRtl(content),\n                    titlebar = $(templates.titlebar(options)),\n                    titleId = (content.id || kendo.guid()) + \"_title\",\n                    wrapper = $(that.wrapperTemplate(options));\n\n                content.addClass(KCONTENTCLASS);\n                that.appendTo.append(wrapper);\n                wrapper = wrapper.find(\".k-dialog\");\n                wrapper.toggleClass(\"k-rtl\", isRtl);\n\n                if (options.title !== false) {\n                    wrapper.append(titlebar);\n                    titlebar.attr(\"id\", titleId);\n                    wrapper.attr(\"aria-labelledby\", titleId);\n                }\n\n                that._closable(wrapper);\n\n                wrapper.append(content);\n                if (options.themeColor && options.themeColor !== \"none\") {\n                    wrapper.addClass(wrapper.addClass(kendo.getValidCssClass(\"k-dialog-\", \"themeColor\", options.themeColor)));\n                }\n\n                if (options.content) {\n                    kendo.destroy(content.children());\n                    content.html(options.content);\n                }\n\n                if (options.actions.length) {\n                    that._createActionbar(wrapper);\n                }\n            },\n\n            _closable: function(wrapper) {\n                var that = this;\n                var options = that.options;\n                var titlebar = wrapper.children(KDIALOGTITLEBAR);\n                var titlebarActions = titlebar.find(\".k-window-titlebar-actions\");\n                var closeAction = titlebarActions.length ? titlebarActions.find(KCLOSE) : wrapper.find(KCLOSE);\n\n                closeAction.remove();\n\n                if (options.closable !== false) {\n                    if (options.title !== false && titlebarActions.length) {\n                        titlebarActions.append(templates.close(options));\n                    }\n                    else {\n                        wrapper.prepend(templates.close(options));\n                    }\n\n                    wrapper.autoApplyNS(NS);\n                    that.element.autoApplyNS(NS);\n\n                    wrapper.find(KCLOSE)\n                        .on(\"click\", that._closeClick.bind(that))\n                        .on(\"keydown\", that._closeKeyHandler.bind(that));\n\n                    that.element.on(\"keydown\", that._keydown.bind(that));\n                }\n            },\n\n            _createActionbar: function(wrapper) {\n                var isStretchedLayout = (this.options.buttonLayout === \"stretched\");\n                var buttonLayout = isStretchedLayout ? \"stretched\" : \"end\";\n                var actionbar = $(templates.actionbar({ buttonLayout: buttonLayout }));\n\n                this._addButtons(actionbar);\n                wrapper.append(actionbar);\n            },\n\n            _addButtons: function(actionbar) {\n                var that = this,\n                    actionClick = that._actionClick.bind(that),\n                    actionKeyHandler = that._actionKeyHandler.bind(that),\n                    actions = that.options.actions,\n                    length = actions.length,\n                    action,\n                    text;\n\n                for (var i = 0; i < length; i++) {\n                    action = actions[i];\n                    text = that._mergeTextWithOptions(action);\n\n                    $(templates.action(action, text))\n                        .autoApplyNS(NS)\n                        .appendTo(actionbar)\n                        .addClass(action.cssClass)\n                        .data(\"action\", action.action)\n                        .on(\"click\", actionClick)\n                        .on(\"keydown\", actionKeyHandler);\n                }\n            },\n\n            _mergeTextWithOptions: function(action) {\n                var text = action.text;\n\n                if (isFunction(text)) {\n                    return text(this.options);\n                }\n\n                return text ? text : \"\";\n            },\n\n            _tabindex: function(target) {\n                var that = this;\n                var wrapper = that.wrapper;\n                var closeBtn = wrapper.find(KCLOSE);\n                var actionButtons = wrapper.find(KBUTTONGROUP + \" \" + KBUTTON);\n\n                Widget.fn._tabindex.call(this, target);\n\n                var tabIndex = target.attr(\"tabindex\");\n\n                closeBtn.attr(\"tabIndex\", tabIndex);\n                actionButtons.attr(\"tabIndex\", tabIndex);\n            },\n\n            _actionClick: function(e) {\n                if (this.dialogWrapper.is(VISIBLE)) {\n                    this._runActionBtn(e.currentTarget);\n                }\n            },\n\n            _actionKeyHandler: function(e) {\n                if (buttonKeyTrigger(e)) {\n                    e.preventDefault();\n                    this._runActionBtn(e.currentTarget);\n                } else if (e.keyCode == keys.ESC) {\n                    this.close(false);\n                }\n            },\n\n            _runActionBtn: function(target) {\n                var that = this;\n                if (that._closing) {\n                    return;\n                }\n\n                var action = $(target).data(\"action\"),\n                    preventClose = (isFunction(action) && action({ sender: that }) === false);\n\n                if (!preventClose) {\n                    that.close(false);\n                }\n            },\n\n            _triggerOpen: function() {\n                var that = this;\n                var options = that.options;\n\n                that.toFront();\n                that._triggerInitOpen();\n                that.trigger(OPEN);\n                if (options.modal) {\n                    if (options.modal.preventScroll) {\n                        that._stopDocumentScrolling();\n                    }\n                    that._focusDialog();\n                }\n            },\n\n            open: function() {\n                var that = this,\n                    wrapper = that.dialogWrapper,\n                    showOptions = this._animationOptions(OPEN),\n                    options = that.options,\n                    overlay;\n\n                this._triggerInitOpen();\n\n                if (!that.trigger(OPEN)) {\n                    if (that._closing) {\n                        wrapper.kendoStop(true, true);\n                    }\n\n                    that._closing = false;\n\n                    that.toFront();\n                    options.visible = true;\n                    if (options.modal) {\n                        overlay = that.dialogWrapper.find(KOVERLAY);\n                        if (options.modal.preventScroll) {\n                            that._stopDocumentScrolling();\n                        }\n\n                        overlay.kendoStop(true, true);\n\n                        if (showOptions.duration && kendo.effects.Fade) {\n                            var overlayFx = kendo.fx(overlay).fadeIn();\n                            overlayFx.duration(showOptions.duration || 0);\n                            overlayFx.endValue(0.5);\n                            overlayFx.play();\n                        }\n                        that.dialogWrapper.show();\n\n                    }\n\n                    (options.modal ? that.wrapper : that.dialogWrapper).show().kendoStop().kendoAnimate({\n                        effects: showOptions.effects,\n                        duration: showOptions.duration,\n                        complete: that._openAnimationEnd.bind(that)\n                    });\n                    wrapper.show();\n\n                }\n\n                return that;\n            },\n\n            _animationOptions: function(id) {\n                var animation = this.options.animation;\n                var basicAnimation = {\n                    open: { effects: {} },\n                    close: { hide: true, effects: {} }\n                };\n\n                return animation && animation[id] || basicAnimation[id];\n            },\n\n            _openAnimationEnd: function() {\n                if (this.options.modal) {\n                    this._focusDialog();\n                }\n                this.trigger(SHOW);\n            },\n\n            _triggerInitOpen: function() {\n                if (!defined(this._initOpenTriggered)) {\n                    this._initOpenTriggered = true;\n                    this.trigger(INITOPEN);\n                }\n            },\n\n            toFront: function() {\n                var that = this,\n                    wrapper = that.dialogWrapper,\n                    zIndex = +wrapper.css(ZINDEX),\n                    originalZIndex = zIndex;\n\n                that.center();\n\n                $(KWINDOW + \",\" + KDIALOGWRAP).each(function(i, element) {\n                    var windowObject = $(element),\n                        zIndexNew = windowObject.css(ZINDEX);\n\n                    if (!isNaN(zIndexNew)) {\n                        zIndex = Math.max(+zIndexNew, zIndex);\n                    }\n                });\n\n                if (!wrapper[0].style.zIndex || originalZIndex < zIndex) {\n                    wrapper.css(ZINDEX, zIndex + 2);\n                }\n\n                wrapper = null;\n\n                return that;\n            },\n\n            close: function(systemTriggered) {\n                if (!arguments.length) {\n                    systemTriggered = true;\n                }\n\n                this._close(systemTriggered);\n                this._stopCenterOnResize();\n                return this;\n            },\n\n            _close: function(systemTriggered) {\n                var that = this,\n                    wrapper = that.dialogWrapper,\n                    options = that.options,\n                    showOptions = this._animationOptions(\"open\"),\n                    hideOptions = this._animationOptions(\"close\");\n\n                if (wrapper.is(VISIBLE) && !that.trigger(CLOSE, { userTriggered: !systemTriggered })) {\n                    if (that._closing) {\n                        return;\n                    }\n                    that._closing = true;\n\n                    options.visible = false;\n                    this._handleDocumentScrolling();\n\n                    (options.modal ? that.wrapper : that.dialogWrapper).kendoStop().kendoAnimate({\n                        effects: hideOptions.effects || showOptions.effects,\n                        reverse: hideOptions.reverse === true,\n                        duration: hideOptions.duration,\n                        complete: this._closeAnimationEnd.bind(this)\n                    });\n                }\n\n                return that;\n            },\n\n            center: function() {\n                this._center();\n                this._centerOnResize();\n            },\n\n            _center: function() {\n                var that = this,\n                    wrapper = that.dialogWrapper,\n                    documentWindow = $(window),\n                    scrollTop = 0,\n                    scrollLeft = 0,\n                    newLeft = scrollLeft + Math.max(0, (documentWindow.width() - wrapper.width()) / 2),\n                    newTop = scrollTop + Math.max(0, (documentWindow.height() - wrapper.height() - parseInt(wrapper.css(\"paddingTop\"), 10)) / 2);\n\n                wrapper.css({\n                    left: newLeft,\n                    top: newTop\n                });\n\n                return that;\n            },\n\n            _centerOnResize: function() {\n                if (this._trackResize) {\n                    return;\n                }\n\n                kendo.onResize(this._centerCallback);\n                this._trackResize = true;\n            },\n\n            _stopCenterOnResize: function() {\n                kendo.unbindResize(this._centerCallback);\n                this._trackResize = false;\n            },\n\n            _handleDocumentScrolling: function() {\n                var modals = this._modals();\n                var options = this.options;\n                var hideOverlay = options.modal && !modals.length;\n\n                if (hideOverlay && options.modal.preventScroll) {\n                    this._enableDocumentScrolling();\n                } else if (modals.length && options.modal.preventScroll) {\n                     this._stopDocumentScrolling();\n                }\n            },\n\n            _stopDocumentScrolling: function() {\n                var that = this;\n\n                var $body = $(\"body\");\n                that._storeOverflowRule($body);\n                $body.css(OVERFLOW, HIDDEN);\n\n                var $html = $(\"html\");\n                var html = $html[0];\n                that._storeOverflowRule($html);\n                $html.css(OVERFLOW, HIDDEN);\n\n                // prevent touch due to bug in ios\n                if (kendo.support.mobileOS.ios) {\n                    html.addEventListener(TOUCHSTART, that._touchStart, { passive: false });\n                    html.addEventListener(TOUCHMOVE, that._touchMove, { passive: false });\n                }\n            },\n\n            _touchStart: function(e) {\n                $(this).data(DATAHTMLTAPYRULE, e.changedTouches[0].pageY);\n            },\n\n            _touchMove: function(e) {\n                var target = e.target;\n                var $target = $(e.target);\n                var upScroll = e.changedTouches[0].pageY - $(this).data(DATAHTMLTAPYRULE) > 0;\n                var preventYScroll = $target.is(KCONTENTSELECTOR) &&\n                    (upScroll && $target.scrollTop() === 0) ||\n                    (!upScroll && $target.scrollTop() === target.scrollHeight - target.clientHeight);\n                if (!$target.is(KCONTENTSELECTOR) || preventYScroll) {\n                    e.preventDefault();\n                }\n            },\n\n            _enableDocumentScrolling: function() {\n                var that = this;\n                var $body = $(document.body);\n                var $html = $(\"html\");\n                var html = $html[0];\n\n                that._restoreOverflowRule($body);\n                that._restoreOverflowRule($html);\n\n                if (kendo.support.mobileOS.ios) {\n                    $html.removeData(DATAHTMLTAPYRULE);\n                    html.removeEventListener(TOUCHSTART, that._touchStart, { passive: false });\n                    html.removeEventListener(TOUCHMOVE, that._touchMove, { passive: false });\n                }\n            },\n\n            _storeOverflowRule: function($element) {\n                if (this._isOverflowStored($element)) {\n                    return;\n                }\n\n                var overflowRule = $element.get(0).style.overflow;\n\n                if (typeof overflowRule === \"string\") {\n                    $element.data(DATADOCOVERFLOWRULE, overflowRule);\n                }\n            },\n\n            _isOverflowStored: function($element) {\n                return typeof $element.data(DATADOCOVERFLOWRULE) === \"string\";\n            },\n\n            _restoreOverflowRule: function($element) {\n                var overflowRule = $element.data(DATADOCOVERFLOWRULE);\n\n                if (overflowRule !== null && overflowRule !== undefined$1) {\n                    $element.css(OVERFLOW, overflowRule);\n                    $element.removeData(DATADOCOVERFLOWRULE);\n                } else {\n                    $element.css(OVERFLOW, \"\");\n                }\n            },\n\n            _closeAnimationEnd: function() {\n                var that = this,\n                    previousFocus = that._previousFocus;\n\n                that._closing = false;\n                that.dialogWrapper.hide().css(\"opacity\", \"\");\n                that.trigger(HIDE);\n\n                if (that.options.modal) {\n                    var lastModal = that._object(that._modals().last());\n                    if (lastModal) {\n                        lastModal.toFront();\n                    } else if (previousFocus) {\n                        that._previousFocus = null;\n\n                        setTimeout(function() {\n                            previousFocus.focus();\n                        });\n                    }\n                }\n            },\n\n            _modals: function() {\n                var that = this;\n\n                var zStack = $(KWINDOW + \",\" + KDIALOGWRAP).filter(function() {\n                    var modal = that._object($(this));\n\n                    return modal &&\n                        modal.options &&\n                        modal.options.modal &&\n                        modal.options.visible &&\n                        modal.options.appendTo === that.options.appendTo &&\n                        !modal.containment &&\n                        $(modal.element).is(VISIBLE);\n                });\n\n                zStack = [].sort.call(zStack, function(a, b) {\n                    return +$(a).css(\"zIndex\") - +$(b).css(\"zIndex\");\n                });\n\n                that = null;\n\n                return zStack;\n            },\n\n            _object: function(element) {\n                var content = element.find(KCONTENTSELECTOR);\n                var widget = kendo.widgetInstance(content);\n\n                if (widget) {\n                    return widget;\n                }\n\n                return undefined$1;\n            },\n\n            destroy: function() {\n                var that = this;\n                that._destroy();\n\n                Widget.fn.destroy.call(that);\n\n                kendo.destroy(that.wrapper);\n\n                that.dialogWrapper.remove();\n                that.dialogWrapper = that.wrapper = that.element = $();\n            },\n\n            _destroy: function() {\n                var that = this;\n                var ns = \".\" + NS;\n\n                that.wrapper.off(ns);\n                that.element.off(ns);\n                that.wrapper.find(KCLOSE + \",\" + KBUTTONGROUP + \" > \" + KBUTTON).off(ns);\n                that._stopCenterOnResize();\n            },\n\n            title: function(html) {\n                var that = this,\n                    wrapper = that.wrapper,\n                    options = that.options,\n                    titlebar = wrapper.children(KDIALOGTITLEBAR),\n                    title = titlebar.children(KDIALOGTITLE),\n                    encodedHtml = encode(html);\n\n                if (!arguments.length) {\n                    return title.html();\n                }\n\n                if (html === false) {\n                    titlebar.remove();\n                } else {\n                    if (!titlebar.length) {\n                        titlebar = $(templates.titlebar(options)).prependTo(wrapper);\n                        title = titlebar.children(KDIALOGTITLE);\n                    }\n                    title.html(encodedHtml);\n                }\n\n                that.options.title = encodedHtml;\n\n                return that;\n            },\n\n            content: function(html) {\n                var that = this,\n                    content = that.wrapper.children(KCONTENTSELECTOR);\n\n                if (!defined(html)) {\n                    return content.html();\n                }\n\n                kendo.destroy(content.children());\n                content.html(html);\n\n                that.options.content = html;\n\n                return that;\n            },\n\n            _focusDialog: function() {\n                var firstModal = this._object(this._modals().first());\n\n                this._previousFocus = firstModal && firstModal._previousFocus ? firstModal._previousFocus : document.activeElement;\n\n                if (this._defaultFocus) {\n                    this._focus(this._defaultFocus);\n                }\n                this._tabKeyTrap.trap();\n            },\n\n            _focus: function(node) {\n                if (node) {\n                    node.focus();\n                }\n            },\n\n            events: [\n                INITOPEN,\n                OPEN,\n                CLOSE,\n                SHOW,\n                HIDE\n            ],\n\n            options: {\n                title: \"\",\n                buttonLayout: \"stretched\",\n                themeColor: \"\",\n                actions: [],\n                modal: true,\n                size: \"auto\",\n                width: null,\n                height: null,\n                minWidth: 0,\n                minHeight: 0,\n                maxWidth: Infinity,\n                maxHeight: Infinity,\n                content: null,\n                visible: null,\n                appendTo: BODY,\n                closable: true\n            }\n        });\n\n        var Dialog = DialogBase.extend({\n            options: {\n                name: \"Dialog\",\n                messages: {\n                    close: \"Close\"\n                }\n            }\n        });\n\n        kendo.ui.plugin(Dialog);\n\n        var PopupBox = DialogBase.extend({\n            _init: function(element, options) {\n                var that = this;\n\n                that.wrapperTemplate = templates.alertWrapper;\n                options._defaultFocus = null;\n                that._ensureContentId(element);\n\n                DialogBase.fn._init.call(that, element, options);\n\n                that.bind(HIDE, that.destroy.bind(that));\n\n                that._ariaDescribedBy();\n                that._initFocus();\n            },\n\n            _ensureContentId: function(element) {\n                var node = $(element);\n                if (!node.attr(\"id\")) {\n                    node.attr(\"id\", kendo.guid() + \"_k-popup\");\n                }\n            },\n\n            _ariaDescribedBy: function() {\n                this.wrapper.attr(\"aria-describedby\", this.element.attr(\"id\"));\n            },\n\n            _initFocus: function() {\n                var o = this.options;\n\n                this._defaultFocus = this._chooseEntryFocus();\n                if (this._defaultFocus && o.visible && o.modal) {\n                    this._focusDialog();\n                }\n            },\n\n            _chooseEntryFocus: function() {\n                return this.wrapper.find(KBUTTONGROUP + \" > \" + KBUTTON)[0];\n            },\n\n            options: {\n                title: window.location.host,\n                closable: false,\n                messages: messages\n            }\n        });\n\n        var Alert = PopupBox.extend({\n            _init: function(element, options) {\n                var that = this;\n                PopupBox.fn._init.call(that, element, options);\n            },\n\n            options: {\n                name: \"Alert\",\n                modal: true,\n                actions: [{\n                    text: ({ messages }) => `${encode(messages.okText)}`\n                }]\n            }\n        });\n\n        kendo.ui.plugin(Alert);\n\n        var kendoAlert = function(text) {\n            return $(templates.alert).kendoAlert({ content: text }).data(\"kendoAlert\").open();\n        };\n\n        var Confirm = PopupBox.extend({\n            _init: function(element, options) {\n                var that = this;\n                PopupBox.fn._init.call(that, element, options);\n                that.result = $.Deferred();\n            },\n\n            options: {\n                name: \"Confirm\",\n                modal: true,\n                actions: [{\n                    text: ({ messages }) => `${encode(messages.okText)}`,\n                    primary: true,\n                    action: function(e) {\n                        e.sender.result.resolve();\n                    }\n                }, {\n                    text: ({ messages }) => `${encode(messages.cancel)}`,\n                    action: function(e) {\n                        e.sender.result.reject();\n                    }\n                }]\n            }\n        });\n\n        kendo.ui.plugin(Confirm);\n\n        var kendoConfirm = function(text) {\n            var confirmDialog = $(templates.confirm).kendoConfirm({ content: text }).data(\"kendoConfirm\").open();\n            return confirmDialog.result;\n        };\n\n        var Prompt = PopupBox.extend({\n            _init: function(element, options) {\n                var that = this;\n                PopupBox.fn._init.call(that, element, options);\n                that._createPrompt();\n                that.result = $.Deferred();\n            },\n\n            _createPrompt: function() {\n                var value = this.options.value,\n                    promptContainer = $(templates.promptInputContainer(this.options)).insertAfter(this.element);\n\n                this.input = new kendo.ui.TextBox(promptContainer.find(\"input\"));\n\n                if (value) {\n                    this.input.value(value);\n                }\n\n                this._defaultFocus = this._chooseEntryFocus();\n                this._focusDialog();\n            },\n\n            _chooseEntryFocus: function() {\n                return this.wrapper.find(KTEXTBOX)[0];\n            },\n\n            options: {\n                name: \"Prompt\",\n                modal: true,\n                value: \"\",\n                actions: [{\n                    text: ({ messages }) => `${encode(messages.okText)}`,\n                    primary: true,\n                    action: function(e) {\n                        var sender = e.sender,\n                            value = sender.input.value();\n\n                        sender.result.resolve(value);\n                    }\n                }, {\n                    text: ({ messages }) => `${encode(messages.cancel)}`,\n                    action: function(e) {\n                        var sender = e.sender,\n                            value = sender.input.value();\n\n                        e.sender.result.reject(value);\n                    }\n                }]\n            }\n        });\n\n        kendo.ui.plugin(Prompt);\n\n        var kendoPrompt = function(text, value) {\n            var promptDialog = $(templates.prompt).kendoPrompt({\n                content: text,\n                value: value\n            }).data(\"kendoPrompt\").open();\n\n            return promptDialog.result;\n        };\n\n        templates = {\n            wrapper: template((options) => `<div class='k-dialog-wrapper'>${options.modal ? '<div class=\"k-overlay\"></div>' : ''}<div class='k-window k-dialog' role='dialog'></div></div>`),\n            action: template((data, text) => `<button type='button' class='k-button k-button-md k-rounded-md k-button-solid ${data.primary ? 'k-button-solid-primary' : 'k-button-solid-base'}'><span class=\"k-button-text\">${encode(text)}</span></button>`),\n            titlebar: template(({ title }) =>\n                \"<div class='k-window-titlebar k-dialog-titlebar'>\" +\n                    `<span class='k-window-title k-dialog-title'>${encode(title)}</span>` +\n                    \"<div class='k-window-titlebar-actions k-dialog-titlebar-actions'></div>\" +\n                \"</div>\"\n            ),\n            close: template(({ messages }) => `<button class=\"k-window-titlebar-action k-dialog-titlebar-action k-button k-button-md k-button-flat k-button-flat-base k-rounded-md k-icon-button\" data-role=\"close\" title='${encode(messages.close)}' aria-label='${encode(messages.close)}' tabindex='-1'>\n                                                    ${kendo.ui.icon({ icon: \"x\", iconClass: \"k-button-icon\" })}\n                                                </button>`),\n            actionbar: template(({ buttonLayout }) => `<div class='k-dialog-actions k-actions k-actions-horizontal k-window-actions k-actions-${encode(buttonLayout)}'></div>`),\n            alertWrapper: template(() => \"<div class='k-dialog-wrapper'><div class='k-overlay'></div><div class='k-window k-dialog' role='alertdialog'></div></div>\"),\n            alert: \"<div></div>\",\n            confirm: \"<div></div>\",\n            prompt: \"<div></div>\",\n            promptInputContainer: template(({ messages }) => `<div class='k-prompt-container'><input type='text' title='${encode(messages.promptInput)}' aria-label='${encode(messages.promptInput)}' /></div>`)\n        };\n\n        kendo.alert = kendoAlert;\n        kendo.confirm = kendoConfirm;\n        kendo.prompt = kendoPrompt;\n\n    })(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.dialog.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.draganddrop.js":
/*!*************************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.draganddrop.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* harmony import */ var _kendo_userevents_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.userevents.js */ \"./node_modules/kendo-ui-core/esm/kendo.userevents.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\nvar __meta__ = {\n    id: \"draganddrop\",\n    name: \"Drag & drop\",\n    category: \"framework\",\n    description: \"Drag & drop functionality for any DOM element.\",\n    depends: [ \"core\", \"userevents\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        support = kendo.support,\n        document = window.document,\n        $window = $(window),\n        Class = kendo.Class,\n        Widget = kendo.ui.Widget,\n        Observable = kendo.Observable,\n        UserEvents = kendo.UserEvents,\n        ClickMoveClick = kendo.ClickMoveClick,\n        extend = $.extend,\n        getOffset = kendo.getOffset,\n        draggables = {},\n        dropTargets = {},\n        dropAreas = {},\n        lastDropTarget,\n        elementUnderCursor = kendo.elementUnderCursor,\n        KEYUP = \"keyup\",\n        CHANGE = \"change\",\n\n        // Draggable events\n        DRAGSTART = \"dragstart\",\n        HOLD = \"hold\",\n        DRAG = \"drag\",\n        DRAGEND = \"dragend\",\n        DRAGCANCEL = \"dragcancel\",\n        HINTDESTROYED = \"hintDestroyed\",\n\n        // DropTarget events\n        DRAGENTER = \"dragenter\",\n        DRAGLEAVE = \"dragleave\",\n        DROP = \"drop\";\n\n    function contains(parent, child) {\n        try {\n            return $.contains(parent, child) || parent == child;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    function numericCssPropery(element, property) {\n        return parseInt(element.css(property), 10) || 0;\n    }\n\n    function within(value, range) {\n        return Math.min(Math.max(value, range.min), range.max);\n    }\n\n    function containerBoundaries(container, element) {\n        var offset = getOffset(container),\n            outerWidth = kendo._outerWidth,\n            outerHeight = kendo._outerHeight,\n            minX = offset.left + numericCssPropery(container, \"borderLeftWidth\") + numericCssPropery(container, \"paddingLeft\"),\n            minY = offset.top + numericCssPropery(container, \"borderTopWidth\") + numericCssPropery(container, \"paddingTop\"),\n            maxX = minX + container.width() - outerWidth(element, true),\n            maxY = minY + container.height() - outerHeight(element, true);\n\n        return {\n            x: { min: minX, max: maxX },\n            y: { min: minY, max: maxY }\n        };\n    }\n\n    function checkTarget(target, targets, areas) {\n        var theTarget, theFilter, i = 0,\n            targetLen = targets && targets.length,\n            areaLen = areas && areas.length;\n\n        while (target && target.parentNode) {\n            for (i = 0; i < targetLen; i ++) {\n                theTarget = targets[i];\n                if (theTarget.element[0] === target) {\n                    return { target: theTarget, targetElement: target };\n                }\n            }\n\n            for (i = 0; i < areaLen; i ++) {\n                theFilter = areas[i];\n                if ($.contains(theFilter.element[0], target) && support.matchesSelector.call(target, theFilter.options.filter)) {\n                    return { target: theFilter, targetElement: target };\n                }\n            }\n\n            target = target.parentNode;\n        }\n\n        return undefined$1;\n    }\n\n    var TapCapture = Observable.extend({\n        init: function(element, options) {\n            var that = this,\n                domElement = element[0];\n\n            that.capture = false;\n\n            if (domElement.addEventListener) {\n                $.each(kendo.eventMap.down.split(\" \"), function() {\n                    domElement.addEventListener(this, that._press.bind(that), true);\n                });\n                $.each(kendo.eventMap.up.split(\" \"), function() {\n                    domElement.addEventListener(this, that._release.bind(that), true);\n                });\n            } else {\n                $.each(kendo.eventMap.down.split(\" \"), function() {\n                    domElement.attachEvent(this, that._press.bind(that));\n                });\n                $.each(kendo.eventMap.up.split(\" \"), function() {\n                    domElement.attachEvent(this, that._release.bind(that));\n                });\n            }\n\n            Observable.fn.init.call(that);\n\n            that.bind([\"press\", \"release\"], options || {});\n        },\n\n        captureNext: function() {\n            this.capture = true;\n        },\n\n        cancelCapture: function() {\n            this.capture = false;\n        },\n\n        _press: function(e) {\n            var that = this;\n            that.trigger(\"press\");\n            if (that.capture) {\n                e.preventDefault();\n            }\n        },\n\n        _release: function(e) {\n            var that = this;\n            that.trigger(\"release\");\n\n            if (that.capture) {\n                e.preventDefault();\n                that.cancelCapture();\n            }\n        }\n    });\n\n    var PaneDimension = Observable.extend({\n        init: function(options) {\n            var that = this;\n            Observable.fn.init.call(that);\n\n            that.forcedEnabled = false;\n\n            $.extend(that, options);\n\n            that.scale = 1;\n\n            if (that.horizontal) {\n                that.measure = \"offsetWidth\";\n                that.scrollSize = \"scrollWidth\";\n                that.axis = \"x\";\n            } else {\n                that.measure = \"offsetHeight\";\n                that.scrollSize = \"scrollHeight\";\n                that.axis = \"y\";\n            }\n        },\n\n        makeVirtual: function() {\n            $.extend(this, {\n                virtual: true,\n                forcedEnabled: true,\n                _virtualMin: 0,\n                _virtualMax: 0\n            });\n        },\n\n        virtualSize: function(min, max) {\n            if (this._virtualMin !== min || this._virtualMax !== max) {\n                this._virtualMin = min;\n                this._virtualMax = max;\n                this.update();\n            }\n        },\n\n        outOfBounds: function(offset) {\n            return offset > this.max || offset < this.min;\n        },\n\n        forceEnabled: function() {\n            this.forcedEnabled = true;\n        },\n\n        getSize: function() {\n            return this.container[0][this.measure];\n        },\n\n        getTotal: function() {\n            return this.element[0][this.scrollSize];\n        },\n\n        rescale: function(scale) {\n            this.scale = scale;\n        },\n\n        update: function(silent) {\n            var that = this,\n                total = that.virtual ? that._virtualMax : that.getTotal(),\n                scaledTotal = total * that.scale,\n                size = that.getSize();\n\n            if (total === 0 && !that.forcedEnabled) {\n                return; // we are not visible.\n            }\n\n            that.max = that.virtual ? -that._virtualMin : 0;\n            that.size = size;\n            that.total = scaledTotal;\n            that.min = Math.min(that.max, size - scaledTotal);\n            that.minScale = size / total;\n            that.centerOffset = (scaledTotal - size) / 2;\n\n            that.enabled = that.forcedEnabled || (scaledTotal > size);\n\n            if (!silent) {\n                that.trigger(CHANGE, that);\n            }\n        }\n    });\n\n    var PaneDimensions = Observable.extend({\n        init: function(options) {\n            var that = this;\n\n            Observable.fn.init.call(that);\n\n            that.x = new PaneDimension(extend({ horizontal: true }, options));\n            that.y = new PaneDimension(extend({ horizontal: false }, options));\n            that.container = options.container;\n            that.forcedMinScale = options.minScale;\n            that.maxScale = options.maxScale || 100;\n\n            that.bind(CHANGE, options);\n        },\n\n        rescale: function(newScale) {\n            this.x.rescale(newScale);\n            this.y.rescale(newScale);\n            this.refresh();\n        },\n\n        centerCoordinates: function() {\n            return { x: Math.min(0, -this.x.centerOffset), y: Math.min(0, -this.y.centerOffset) };\n        },\n\n        refresh: function() {\n            var that = this;\n            that.x.update();\n            that.y.update();\n            that.enabled = that.x.enabled || that.y.enabled;\n            that.minScale = that.forcedMinScale || Math.min(that.x.minScale, that.y.minScale);\n            that.fitScale = Math.max(that.x.minScale, that.y.minScale);\n            that.trigger(CHANGE);\n        }\n    });\n\n    var PaneAxis = Observable.extend({\n        init: function(options) {\n            var that = this;\n            extend(that, options);\n            Observable.fn.init.call(that);\n        },\n\n        outOfBounds: function() {\n            return this.dimension.outOfBounds(this.movable[this.axis]);\n        },\n\n        dragMove: function(delta) {\n            var that = this,\n                dimension = that.dimension,\n                axis = that.axis,\n                movable = that.movable,\n                position = movable[axis] + delta;\n\n            if (!dimension.enabled) {\n                return;\n            }\n\n            if ((position < dimension.min && delta < 0) || (position > dimension.max && delta > 0)) {\n                delta *= that.resistance;\n            }\n\n            movable.translateAxis(axis, delta);\n            that.trigger(CHANGE, that);\n        }\n    });\n\n    var Pane = Class.extend({\n\n        init: function(options) {\n            var that = this,\n                x,\n                y,\n                resistance,\n                movable;\n\n            extend(that, { elastic: true }, options);\n\n            resistance = that.elastic ? 0.5 : 0;\n            movable = that.movable;\n\n            that.x = x = new PaneAxis({\n                axis: \"x\",\n                dimension: that.dimensions.x,\n                resistance: resistance,\n                movable: movable\n            });\n\n            that.y = y = new PaneAxis({\n                axis: \"y\",\n                dimension: that.dimensions.y,\n                resistance: resistance,\n                movable: movable\n            });\n\n            that.userEvents.bind([\"press\", \"move\", \"end\", \"gesturestart\", \"gesturechange\"], {\n                gesturestart: function(e) {\n                    that.gesture = e;\n                    that.offset = that.dimensions.container.offset();\n                },\n\n                press: function(e) {\n                    if ($(e.event.target).closest(\"a\").is(\"[data-navigate-on-press=true]\")) {\n                        e.sender.cancel();\n                    }\n                },\n\n                gesturechange: function(e) {\n                    var previousGesture = that.gesture,\n                        previousCenter = previousGesture.center,\n\n                        center = e.center,\n\n                        scaleDelta = e.distance / previousGesture.distance,\n\n                        minScale = that.dimensions.minScale,\n                        maxScale = that.dimensions.maxScale,\n                        coordinates;\n\n                    if (movable.scale <= minScale && scaleDelta < 1) {\n                        // Resist shrinking. Instead of shrinking from 1 to 0.5, it will shrink to 0.5 + (1 /* minScale */ - 0.5) * 0.8 = 0.9;\n                        scaleDelta += (1 - scaleDelta) * 0.8;\n                    }\n\n                    if (movable.scale * scaleDelta >= maxScale) {\n                        scaleDelta = maxScale / movable.scale;\n                    }\n\n                    var offsetX = movable.x + that.offset.left,\n                        offsetY = movable.y + that.offset.top;\n\n                    coordinates = {\n                        x: (offsetX - previousCenter.x) * scaleDelta + center.x - offsetX,\n                        y: (offsetY - previousCenter.y) * scaleDelta + center.y - offsetY\n                    };\n\n                    movable.scaleWith(scaleDelta);\n\n                    x.dragMove(coordinates.x);\n                    y.dragMove(coordinates.y);\n\n                    that.dimensions.rescale(movable.scale);\n                    that.gesture = e;\n                    e.preventDefault();\n                },\n\n                move: function(e) {\n                    if (e.event.target.tagName.match(/textarea|input/i)) {\n                        return;\n                    }\n\n                    if (x.dimension.enabled || y.dimension.enabled) {\n                        x.dragMove(e.x.delta);\n                        y.dragMove(e.y.delta);\n                        e.preventDefault();\n                    } else {\n                        e.touch.skip();\n                    }\n                },\n\n                end: function(e) {\n                    e.preventDefault();\n                }\n            });\n        }\n    });\n\n    var TRANSFORM_STYLE = \"transform\",\n        translate;\n\n\n    if (support.hasHW3D) {\n        translate = function(x, y, scale) {\n            return \"translate3d(\" + x + \"px,\" + y + \"px,0) scale(\" + scale + \")\";\n        };\n    } else {\n        translate = function(x, y, scale) {\n            return \"translate(\" + x + \"px,\" + y + \"px) scale(\" + scale + \")\";\n        };\n    }\n\n    var Movable = Observable.extend({\n        init: function(element) {\n            var that = this;\n\n            Observable.fn.init.call(that);\n\n            that.element = $(element);\n            that.element[0].style.webkitTransformOrigin = \"left top\";\n            that.x = 0;\n            that.y = 0;\n            that.scale = 1;\n            that._saveCoordinates(translate(that.x, that.y, that.scale));\n        },\n\n        translateAxis: function(axis, by) {\n            this[axis] += by;\n            this.refresh();\n        },\n\n        scaleTo: function(scale) {\n            this.scale = scale;\n            this.refresh();\n        },\n\n        scaleWith: function(scaleDelta) {\n            this.scale *= scaleDelta;\n            this.refresh();\n        },\n\n        translate: function(coordinates) {\n            this.x += coordinates.x;\n            this.y += coordinates.y;\n            this.refresh();\n        },\n\n        moveAxis: function(axis, value) {\n            this[axis] = value;\n            this.refresh();\n        },\n\n        moveTo: function(coordinates) {\n            extend(this, coordinates);\n            this.refresh();\n        },\n\n        refresh: function() {\n            var that = this,\n                x = that.x,\n                y = that.y,\n                newCoordinates;\n\n            if (that.round) {\n                x = Math.round(x);\n                y = Math.round(y);\n            }\n\n            newCoordinates = translate(x, y, that.scale);\n\n            if (newCoordinates != that.coordinates) {\n                if (kendo.support.browser.msie && kendo.support.browser.version < 10) {\n                    that.element[0].style.position = \"absolute\";\n                    that.element[0].style.left = that.x + \"px\";\n                    that.element[0].style.top = that.y + \"px\";\n\n                } else {\n                    that.element[0].style[TRANSFORM_STYLE] = newCoordinates;\n                }\n                that._saveCoordinates(newCoordinates);\n                that.trigger(CHANGE);\n            }\n        },\n\n        _saveCoordinates: function(coordinates) {\n            this.coordinates = coordinates;\n        }\n    });\n\n    function destroyDroppable(collection, widget) {\n        var groupName = widget.options.group,\n        droppables = collection[groupName],\n        i;\n\n        Widget.fn.destroy.call(widget);\n\n        if (droppables.length > 1) {\n            for (i = 0; i < droppables.length; i++) {\n                if (droppables[i] == widget) {\n                    droppables.splice(i, 1);\n                    break;\n                }\n            }\n        } else {\n            droppables.length = 0; // WTF, porting this from the previous destroyGroup\n            delete collection[groupName];\n        }\n    }\n\n    var DropTarget = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            var group = that.options.group;\n\n            if (!(group in dropTargets)) {\n                dropTargets[group] = [ that ];\n            } else {\n                dropTargets[group].push( that );\n            }\n        },\n\n        events: [\n            DRAGENTER,\n            DRAGLEAVE,\n            DROP\n        ],\n\n        options: {\n            name: \"DropTarget\",\n            group: \"default\"\n        },\n\n        destroy: function() {\n            destroyDroppable(dropTargets, this);\n        },\n\n        _trigger: function(eventName, e) {\n            var that = this,\n                draggable = draggables[that.options.group];\n\n            if (draggable) {\n                return that.trigger(eventName, extend({}, e.event, {\n                           draggable: draggable,\n                           dropTarget: e.dropTarget\n                       }));\n            }\n        },\n\n        _over: function(e) {\n            this._trigger(DRAGENTER, e);\n        },\n\n        _out: function(e) {\n            this._trigger(DRAGLEAVE, e);\n        },\n\n        _drop: function(e) {\n            var that = this,\n                draggable = draggables[that.options.group];\n\n            if (draggable) {\n                draggable.dropped = !that._trigger(DROP, e);\n            }\n        }\n    });\n\n    DropTarget.destroyGroup = function(groupName) {\n        var group = dropTargets[groupName] || dropAreas[groupName],\n            i;\n\n        if (group) {\n            for (i = 0; i < group.length; i++) {\n                Widget.fn.destroy.call(group[i]);\n            }\n\n            group.length = 0;\n            delete dropTargets[groupName];\n            delete dropAreas[groupName];\n        }\n    };\n\n    DropTarget._cache = dropTargets;\n\n    var DropTargetArea = DropTarget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            var group = that.options.group;\n\n            if (!(group in dropAreas)) {\n                dropAreas[group] = [ that ];\n            } else {\n                dropAreas[group].push( that );\n            }\n        },\n\n        destroy: function() {\n            destroyDroppable(dropAreas, this);\n        },\n\n        options: {\n            name: \"DropTargetArea\",\n            group: \"default\",\n            filter: null\n        }\n    });\n\n    var Draggable = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that._activated = false;\n\n            if (this.options.clickMoveClick) {\n                that.clickMoveClick = new ClickMoveClick(that.element, {\n                    global: true,\n                    filter: that.options.filter,\n                    start: that._startClickMoveClick.bind(that),\n                    move: that._drag.bind(that),\n                    end: that._end.bind(that),\n                    cancel: that._onCancel.bind(that)\n                });\n            }\n\n            that.userEvents = new UserEvents(that.element, {\n                global: true,\n                allowSelection: true,\n                filter: that.options.filter,\n                threshold: that.options.distance,\n                start: that._start.bind(that),\n                hold: that._hold.bind(that),\n                move: that._drag.bind(that),\n                end: that._end.bind(that),\n                cancel: that._onCancel.bind(that),\n                select: that._select.bind(that),\n                press: that._press.bind(that),\n            });\n\n            if (kendo.support.touch) {\n                that.element.find(that.options.filter).css('touch-action', 'none');\n            }\n\n            that._afterEndHandler = that._afterEnd.bind(that);\n            that._captureEscape = that._captureEscape.bind(that);\n        },\n\n        events: [\n            HOLD,\n            DRAGSTART,\n            DRAG,\n            DRAGEND,\n            DRAGCANCEL,\n            HINTDESTROYED\n        ],\n\n        options: {\n            name: \"Draggable\",\n            distance: ( kendo.support.touch ? 0 : 5),\n            group: \"default\",\n            cursorOffset: null,\n            axis: null,\n            container: null,\n            filter: null,\n            ignore: null,\n            holdToDrag: false,\n            showHintOnHold: false,\n            autoScroll: false,\n            dropped: false,\n            clickMoveClick: false,\n            preventOsHoldFeatures: false\n        },\n\n        cancelHold: function() {\n            this._activated = false;\n        },\n\n        _captureEscape: function(e) {\n            var that = this;\n\n            if (e.keyCode === kendo.keys.ESC) {\n                that.userEvents.cancel();\n\n                if (that.clickMoveClick) {\n                    that.clickMoveClick.cancel();\n                }\n\n                this._trigger(DRAGCANCEL, { event: e });\n            }\n        },\n\n        _updateHint: function(e) {\n            var that = this,\n                coordinates,\n                options = that.options,\n                boundaries = that.boundaries,\n                axis = options.axis,\n                cursorOffset = that.options.cursorOffset,\n                updateHint = options.updateHint;\n\n            if (cursorOffset) {\n               coordinates = { left: e.x.location + cursorOffset.left, top: e.y.location + cursorOffset.top };\n            } else {\n                if (e.x.delta !== 0 || e.y.delta !== 0) {\n                    that.hintOffset.left += e.x.delta;\n                    that.hintOffset.top += e.y.delta;\n                    coordinates = $.extend({}, that.hintOffset);\n                } else {\n                    that.hintOffset.left = e.x.startLocation + e.x.initialDelta;\n                    that.hintOffset.top = e.y.startLocation + e.y.initialDelta;\n                    coordinates = $.extend({}, that.hintOffset);\n                }\n            }\n\n            if (boundaries) {\n                coordinates.top = within(coordinates.top, boundaries.y);\n                coordinates.left = within(coordinates.left, boundaries.x);\n            }\n\n            if (axis === \"x\") {\n                delete coordinates.top;\n            } else if (axis === \"y\") {\n                delete coordinates.left;\n            }\n\n            if (updateHint && kendo.isFunction(updateHint)) {\n               return $(updateHint.call(that, that.hint, e));\n            }\n\n            that.hint.css(coordinates);\n        },\n\n        _shouldIgnoreTarget: function(target) {\n            var ignoreSelector = this.options.ignore;\n            return ignoreSelector && $(target).is(ignoreSelector);\n        },\n\n        _select: function(e) {\n            if (!this._shouldIgnoreTarget(e.event.target)) {\n                e.preventDefault();\n            }\n        },\n\n        _startClickMoveClick: function(e) {\n            this._activated = true;\n\n            this._start(e);\n        },\n\n        _hint: function() {\n            var that = this,\n                hint = that.options.hint;\n\n            if (hint) {\n                if (that.hint) {\n                    that.hint.stop(true, true).remove();\n                }\n\n                that.hint = kendo.isFunction(hint) ? $(hint.call(that, that.currentTarget)) : hint;\n\n                var offset = getOffset(that.currentTarget);\n                that.hintOffset = offset;\n\n                that.hint.css({\n                    position: \"absolute\",\n                    zIndex: 20000, // the Window's z-index is 10000 and can be raised because of z-stacking\n                    left: offset.left,\n                    top: offset.top,\n                })\n                .appendTo(document.body);\n            }\n        },\n\n        _start: function(e) {\n            var that = this,\n                options = that.options,\n                container = options.container ? $(options.container) : null,\n                hint = options.hint;\n\n            if (this._shouldIgnoreTarget(e.touch.initialTouch) || (options.holdToDrag && !that._activated)) {\n                that.userEvents.cancel();\n                return;\n            }\n\n            that.currentTarget = e.target;\n            that.currentTargetOffset = getOffset(that.currentTarget);\n\n            if (hint) {\n                that._hint();\n            }\n\n            draggables[options.group] = that;\n\n            that.dropped = false;\n\n            if (container) {\n                that.boundaries = containerBoundaries(container, that.hint);\n            }\n\n            $(document).on(KEYUP, that._captureEscape);\n\n            if (that._trigger(DRAGSTART, e)) {\n                that.userEvents.cancel();\n\n                if (that.clickMoveClick) {\n                    that.clickMoveClick.cancel();\n                }\n\n                that._afterEnd();\n            }\n\n            that.userEvents.capture();\n        },\n\n        _hold: function(e) {\n            this.currentTarget = e.target;\n\n            if (this._trigger(HOLD, e)) {\n                this.userEvents.cancel();\n            } else {\n                this._activated = true;\n                if (this.options.showHintOnHold) {\n                    this._hint();\n                }\n            }\n        },\n\n        _drag: function(e) {\n            e.preventDefault();\n\n            var cursorElement = this._elementUnderCursor(e);\n\n            if (this.options.autoScroll && this._cursorElement !== cursorElement) {\n                this._scrollableParent = findScrollableParent(cursorElement);\n                this._cursorElement = cursorElement;\n            }\n\n            this._lastEvent = e;\n            this._processMovement(e, cursorElement);\n\n            if (this.options.autoScroll) {\n                // chrome seems to trigger mousemove when mouse is moved outside of the window (over the Chrome), too.\n                if (this._scrollableParent[0]) {\n                    var velocity = autoScrollVelocity(e.x.location, e.y.location, scrollableViewPort(this._scrollableParent));\n\n\n                    this._scrollCompenstation = $.extend({}, this.hintOffset);\n                    this._scrollVelocity = velocity;\n\n                    if (velocity.y === 0 && velocity.x === 0) {\n                        clearInterval(this._scrollInterval);\n                        this._scrollInterval = null;\n                    } else if (!this._scrollInterval) {\n                        this._scrollInterval = setInterval(this._autoScroll.bind(this), 50);\n                    }\n                }\n            }\n\n            if (this.hint) {\n                this._updateHint(e);\n            }\n        },\n\n        _processMovement: function(e, cursorElement) {\n            this._withDropTarget(cursorElement, function(target, targetElement) {\n                if (!target) {\n                    if (lastDropTarget) {\n                        lastDropTarget._trigger(DRAGLEAVE, extend(e, { dropTarget: $(lastDropTarget.targetElement) }));\n                        lastDropTarget = null;\n                    }\n                    return;\n                }\n\n                if (lastDropTarget) {\n                    if (targetElement === lastDropTarget.targetElement) {\n                        return;\n                    }\n\n                    lastDropTarget._trigger(DRAGLEAVE, extend(e, { dropTarget: $(lastDropTarget.targetElement) }));\n                }\n\n                target._trigger(DRAGENTER, extend(e, { dropTarget: $(targetElement) }));\n                lastDropTarget = extend(target, { targetElement: targetElement });\n            });\n\n            this._trigger(DRAG, extend(e, { dropTarget: lastDropTarget, elementUnderCursor: cursorElement }));\n        },\n\n        _autoScroll: function() {\n            var parent = this._scrollableParent[0],\n                velocity = this._scrollVelocity,\n                compensation = this._scrollCompenstation;\n\n            if (!parent) {\n                return;\n            }\n\n            var cursorElement = this._elementUnderCursor(this._lastEvent);\n            this._processMovement(this._lastEvent, cursorElement);\n\n            var yIsScrollable, xIsScrollable;\n\n            var isRootNode = parent === scrollableRoot()[0];\n\n            if (isRootNode) {\n                yIsScrollable = document.body.scrollHeight > $window.height();\n                xIsScrollable = document.body.scrollWidth > $window.width();\n            } else {\n                yIsScrollable = parent.offsetHeight <= parent.scrollHeight;\n                xIsScrollable = parent.offsetWidth <= parent.scrollWidth;\n            }\n\n            var yDelta = parent.scrollTop + velocity.y;\n            var yInBounds = yIsScrollable && yDelta > 0 && yDelta < parent.scrollHeight;\n\n            var xDelta = parent.scrollLeft + velocity.x;\n            var xInBounds = xIsScrollable && xDelta > 0 && xDelta < parent.scrollWidth;\n\n            if (yInBounds) {\n                parent.scrollTop += velocity.y;\n            } else if (yIsScrollable && yDelta < 0) {\n                parent.scrollTop = 0;\n            }\n\n            if (xInBounds) {\n                parent.scrollLeft += velocity.x;\n            } else if (xIsScrollable && xDelta < 0) {\n                parent.scrollLeft = 0;\n            }\n\n            if (this.hint && isRootNode && (xInBounds || yInBounds)) {\n                if (yInBounds) {\n                    compensation.top += velocity.y;\n                }\n\n                if (xInBounds) {\n                    compensation.left += velocity.x;\n                }\n\n                this.hint.css(compensation);\n            }\n        },\n\n        _press: function(ev) {\n            if (this.options.preventOsHoldFeatures) {\n                ev.target.css('-webkit-user-select', 'none');\n                ev.target.attr('unselectable', 'on');\n                ev.target.one('contextmenu', (ev) => {\n                    ev.preventDefault();\n                });\n            }\n        },\n\n        _end: function(e) {\n            this._withDropTarget(this._elementUnderCursor(e), function(target, targetElement) {\n                if (target) {\n                    target._drop(extend({}, e, { dropTarget: $(targetElement) }));\n                    lastDropTarget = null;\n                }\n            });\n\n            clearInterval(this._scrollInterval);\n            this._scrollInterval = null;\n            this._cancel(this._trigger(DRAGEND, e));\n        },\n\n        _onCancel: function(e) {\n            this._cancel();\n            this._trigger(DRAGCANCEL, { event: e });\n        },\n\n        _cancel: function(isDefaultPrevented) {\n            var that = this;\n\n            that._scrollableParent = null;\n            this._cursorElement = null;\n            clearInterval(this._scrollInterval);\n            that._activated = false;\n\n            if (that.hint && !that.dropped) {\n                setTimeout(function() {\n                    that.hint.stop(true, true);\n\n                    if (isDefaultPrevented) {\n                        that._afterEndHandler();\n                    } else {\n                        that.hint.animate(that.currentTargetOffset, \"fast\", that._afterEndHandler);\n                    }\n                }, 0);\n            } else {\n                that._afterEnd();\n            }\n        },\n\n        _trigger: function(eventName, e) {\n            var that = this;\n\n            return that.trigger(\n                eventName, extend(\n                {},\n                e.event,\n                {\n                    x: e.x,\n                    y: e.y,\n                    currentTarget: that.currentTarget,\n                    initialTarget: e.touch ? e.touch.initialTouch : null,\n                    dropTarget: e.dropTarget,\n                    elementUnderCursor: e.elementUnderCursor,\n                    clickMoveClick: e.clickMoveClick\n                }\n            ));\n        },\n\n        _elementUnderCursor: function(e) {\n            var target = elementUnderCursor(e),\n                hint = this.hint;\n\n            if (hint && contains(hint[0], target)) {\n                hint.hide();\n                target = elementUnderCursor(e);\n                // IE8 does not return the element in iframe from first attempt\n                if (!target) {\n                    target = elementUnderCursor(e);\n                }\n                hint.show();\n            }\n\n            return target;\n        },\n\n        _withDropTarget: function(element, callback) {\n            var result,\n                group = this.options.group,\n                targets = dropTargets[group],\n                areas = dropAreas[group];\n\n            if (targets && targets.length || areas && areas.length) {\n                result = checkTarget(element, targets, areas);\n\n                if (result) {\n                    callback(result.target, result.targetElement);\n                } else {\n                    callback();\n                }\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n\n            Widget.fn.destroy.call(that);\n\n            that._afterEnd();\n\n            that.userEvents.destroy();\n\n            if (that.clickMoveClick) {\n                that.clickMoveClick.destroy();\n            }\n\n            this._scrollableParent = null;\n            this._cursorElement = null;\n            clearInterval(this._scrollInterval);\n\n            that.currentTarget = null;\n        },\n\n        _afterEnd: function() {\n            var that = this;\n\n            if (that.hint) {\n                that.hint.remove();\n            }\n\n            delete draggables[that.options.group];\n\n            that.trigger(\"destroy\");\n            that.trigger(HINTDESTROYED);\n            $(document).off(KEYUP, that._captureEscape);\n        }\n    });\n\n    kendo.ui.plugin(DropTarget);\n    kendo.ui.plugin(DropTargetArea);\n    kendo.ui.plugin(Draggable);\n    kendo.TapCapture = TapCapture;\n    kendo.containerBoundaries = containerBoundaries;\n\n    extend(kendo.ui, {\n        Pane: Pane,\n        PaneDimensions: PaneDimensions,\n        Movable: Movable\n    });\n\n    function scrollableViewPort(element) {\n        var root = scrollableRoot()[0],\n            offset,\n            top,\n            left;\n\n        if (element[0] === root) {\n            top = root.scrollTop;\n            left = root.scrollLeft;\n\n            return {\n                top: top,\n                left: left,\n                bottom: top + $window.height(),\n                right: left + $window.width()\n            };\n        } else {\n            offset = element.offset();\n            offset.bottom = offset.top + element.height();\n            offset.right = offset.left + element.width();\n            return offset;\n        }\n    }\n\n    function scrollableRoot() {\n        return $(kendo.support.browser.edge || kendo.support.browser.safari ? document.body : document.documentElement);\n    }\n\n    function findScrollableParent(element) {\n        var root = scrollableRoot();\n\n        if (!element || element === document.body || element === document.documentElement) {\n            return root;\n        }\n\n        var parent = $(element)[0];\n\n        while (parent && !kendo.isScrollable(parent) && parent !== document.body) {\n            parent = parent.parentNode;\n        }\n\n        if (parent === document.body) {\n            return root;\n        }\n\n        return $(parent);\n    }\n\n    function autoScrollVelocity(mouseX, mouseY, rect) {\n        var velocity = { x: 0, y: 0 };\n\n        var AUTO_SCROLL_AREA = 50;\n\n        if (mouseX - rect.left < AUTO_SCROLL_AREA) {\n            velocity.x = -(AUTO_SCROLL_AREA - (mouseX - rect.left));\n        } else if (rect.right - mouseX < AUTO_SCROLL_AREA) {\n            velocity.x = AUTO_SCROLL_AREA - (rect.right - mouseX);\n        }\n\n        if (mouseY - rect.top < AUTO_SCROLL_AREA) {\n            velocity.y = -(AUTO_SCROLL_AREA - (mouseY - rect.top));\n        } else if (rect.bottom - mouseY < AUTO_SCROLL_AREA) {\n            velocity.y = AUTO_SCROLL_AREA - (rect.bottom - mouseY);\n        }\n\n        return velocity;\n    }\n\n    // export for testing\n    kendo.ui.Draggable.utils = {\n        autoScrollVelocity: autoScrollVelocity,\n        scrollableViewPort: scrollableViewPort,\n        findScrollableParent: findScrollableParent\n    };\n\n })(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.draganddrop.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.dropdownbutton.js":
/*!****************************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.dropdownbutton.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_html_button_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.html.button.js */ \"./node_modules/kendo-ui-core/esm/kendo.html.button.js\");\n/* harmony import */ var _kendo_button_menu_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.button.menu.js */ \"./node_modules/kendo-ui-core/esm/kendo.button.menu.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\nvar __meta__ = {\n    id: \"dropdownbutton\",\n    name: \"DropDownButton\",\n    category: \"web\",\n    description: \"The DropDownButton allows the user to execute an action from a drop-down list.\",\n    depends: [\"button.menu\", \"html.button\"]\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        Widget = kendo.ui.Widget,\n        NS = \".kendoDropDownButton\",\n        ui = kendo.ui,\n        keys = kendo.keys,\n        extend = $.extend,\n        html = kendo.html,\n        outerWidth = kendo._outerWidth,\n\n        DOT = \".\",\n        ID = \"id\",\n\n        ARIA_HASPOPUP = \"aria-haspopup\",\n        ARIA_DISABLED = \"aria-disabled\",\n        ARIA_CONTROLS = \"aria-controls\",\n        ARIA_LABEL = \"aria-label\",\n        ARIA_EXPANDED = \"aria-expanded\",\n\n        DISABLED = \"disabled\",\n        DISABLEDSTATE = \"k-disabled\",\n\n        CLICK = \"click\",\n        KEYDOWN = \"keydown\",\n        OPEN = \"open\",\n        CLOSE = \"close\",\n\n        FOCUS = \"focus\";\n\n    var cssClasses = {\n        menuButton: \"k-menu-button\",\n        dropdownButton: \"k-dropdown-button\"\n    };\n\n    var DropDownButton = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            options.enabled = options.enabled !== false && !$(element).prop(DISABLED);\n            Widget.fn.init.call(that, element, options);\n\n            that.wrapper = that.element;\n\n            that._mainButton();\n            that._renderMenu();\n\n            that._enable(that.options.enabled);\n\n            that._aria();\n\n            that._attachEvents();\n\n            kendo.notify(that);\n\n            that._applyCssClasses();\n        },\n\n        options: {\n            name: \"DropDownButton\",\n            direction: \"down\",\n            enabled: true,\n            items: [],\n            rounded: \"medium\",\n            size: \"medium\",\n            fillMode: \"solid\",\n            themeColor: \"base\",\n            showArrowButton: false,\n            icon: null,\n            popup: null,\n            messages: {\n                labelSuffix: \"dropdownbutton\"\n            }\n        },\n\n        events: [\n            CLICK,\n            OPEN,\n            CLOSE\n        ],\n\n        _mainButton: function() {\n            var that = this,\n                options = extend({}, that.options, {\n                    type: that.element.attr(\"type\") || \"button\"\n                });\n\n            delete options.click;\n\n            that.element.addClass(cssClasses.menuButton).addClass(cssClasses.dropdownButton);\n\n            html.renderButton(that.element, options);\n\n            if (that.options.showArrowButton) {\n                $(\"<span></span>\")\n                    .addClass(\"k-button-arrow\")\n                    .addClass(\"k-menu-button-arrow\")\n                    .append(kendo.ui.icon(kendo.htmlEncode(\"caret-alt-down\")))\n                    .appendTo(that.element);\n            } else {\n                const arrowButton = that.element.find(\".k-button-arrow\");\n                if (arrowButton) {\n                    arrowButton.remove();\n                }\n            }\n        },\n\n        _aria: function() {\n            var that = this,\n                element = that.element,\n                menu = that.menu;\n\n            element.attr(ARIA_HASPOPUP, menu ? \"menu\" : null);\n            element.attr(ARIA_EXPANDED, menu ? false : null);\n            element.attr(ARIA_CONTROLS, menu ? menu.list.attr(ID) : null);\n\n            if (!element.attr(ARIA_LABEL)) {\n                element.attr(ARIA_LABEL, element.text() + \" \" + that.options.messages.labelSuffix);\n            }\n        },\n\n        _renderMenu: function() {\n            var that = this,\n                options = extend({}, that.options),\n                menu = $(\"<div></div>\");\n\n            delete options.click;\n            delete options.name;\n\n            that.menu = menu.appendTo(document.body).kendoButtonMenu(extend({\n                mainButton: that.element,\n                toggleTarget: that.element,\n                menuOpen: that.menuOpenHandler.bind(that),\n                menuClose: that.menuCloseHandler.bind(that),\n                menuClick: that._click.bind(that)\n            }, options)).data(\"kendoButtonMenu\");\n        },\n\n        menuOpenHandler: function(ev) {\n            var that = this,\n                computedWidth = outerWidth(that.element);\n\n            var isDefaultPrevented = that.trigger(OPEN, { target: that.element });\n            if (isDefaultPrevented) {\n                ev.preventDefault();\n                return;\n            }\n\n            ev.sender.adjustPopupWidth(computedWidth);\n            that.element.attr(ARIA_EXPANDED, true);\n        },\n\n        menuCloseHandler: function(ev) {\n            var that = this,\n                isDefaultPrevented = that.trigger(CLOSE, { target: that.element });\n\n            if (isDefaultPrevented) {\n                ev.preventDefault();\n                return;\n            }\n\n            that.element.attr(ARIA_EXPANDED, false);\n            that.element.trigger(FOCUS);\n        },\n\n        _attachEvents: function() {\n            var that = this;\n\n            that.element.on(KEYDOWN + NS, that._keydown.bind(that));\n        },\n\n        _click: function(ev) {\n            var that = this,\n                id = ev.id,\n                target = ev.target,\n                originalEvent = ev.originalEvent;\n\n            that.menu.close();\n\n            that.trigger(CLICK, { id: id, target: target, originalEvent: originalEvent });\n        },\n\n        _keydown: function(ev) {\n            var that = this;\n\n            if (that.element.is(DOT + DISABLEDSTATE) && (ev.keyCode === keys.ENTER || ev.keyCode === keys.SPACEBAR)) {\n                ev.preventDefault();\n            }\n        },\n\n        focus: function() {\n            var that = this;\n            that.element.trigger(FOCUS);\n        },\n\n        _enable: function(enable, soft) {\n            this.element\n                .toggleClass(DISABLEDSTATE, !enable);\n\n            if (enable) {\n                this.element.removeAttr(ARIA_DISABLED);\n            } else {\n                this.element.attr(ARIA_DISABLED, !enable);\n            }\n\n            if (!soft) {\n                this.element.attr(DISABLED, !enable);\n            }\n        },\n\n        enable: function(enable, menuItem, soft) {\n            var that = this;\n\n            if (enable === undefined$1) {\n                enable = true;\n            }\n\n            if (menuItem && menuItem.length) {\n                that.menu.enable(enable, menuItem);\n                return;\n            }\n\n            that.options.enabled = enable;\n\n            that._enable(enable, soft);\n            that.menu.enable(enable);\n        },\n\n        hide: function(menuItem) {\n            var that = this;\n\n            if (menuItem && menuItem.length) {\n                that.menu.hide(menuItem);\n            }\n        },\n\n        show: function(menuItem) {\n            var that = this;\n\n            if (menuItem && menuItem.length) {\n                that.menu.show(menuItem);\n            }\n        },\n\n        open: function() {\n            this.menu.open();\n        },\n\n        close: function() {\n            this.menu.close();\n        },\n\n        items: function() {\n            return this.menu.items();\n        },\n\n        setOptions: function(options) {\n            var that = this;\n\n            Widget.fn.setOptions.call(that, options);\n\n            if (options.popup || options.items || options.size) {\n                that.menu.destroy();\n                that._renderMenu();\n            }\n\n            that._mainButton();\n\n            that._aria();\n        },\n\n        destroy: function() {\n            var that = this;\n\n            that.menu.destroy();\n\n            that.element.off(NS);\n\n            Widget.fn.destroy.call(that);\n        }\n    });\n\n    ui.plugin(DropDownButton);\n\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.dropdownbutton.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.dropdownlist.js":
/*!**************************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.dropdownlist.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_list_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.list.js */ \"./node_modules/kendo-ui-core/esm/kendo.list.js\");\n/* harmony import */ var _kendo_mobile_scroller_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.mobile.scroller.js */ \"./node_modules/kendo-ui-core/esm/kendo.mobile.scroller.js\");\n/* harmony import */ var _kendo_virtuallist_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kendo.virtuallist.js */ \"./node_modules/kendo-ui-core/esm/kendo.virtuallist.js\");\n/* harmony import */ var _kendo_html_button_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./kendo.html.button.js */ \"./node_modules/kendo-ui-core/esm/kendo.html.button.js\");\n/* harmony import */ var _kendo_icons_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./kendo.icons.js */ \"./node_modules/kendo-ui-core/esm/kendo.icons.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\n\n\n\nvar __meta__ = {\n    id: \"dropdownlist\",\n    name: \"DropDownList\",\n    category: \"web\",\n    description: \"The DropDownList widget displays a list of values and allows the selection of a single value from the list.\",\n    depends: [ \"list\", \"html.button\", \"icons\" ],\n    features: [ {\n        id: \"mobile-scroller\",\n        name: \"Mobile scroller\",\n        description: \"Support for kinetic scrolling in mobile device\",\n        depends: [ \"mobile.scroller\" ]\n    }, {\n        id: \"virtualization\",\n        name: \"VirtualList\",\n        description: \"Support for virtualization\",\n        depends: [ \"virtuallist\" ]\n    } ]\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        encode = kendo.htmlEncode,\n        ui = kendo.ui,\n        html = kendo.html,\n        List = ui.List,\n        Select = ui.Select,\n        support = kendo.support,\n        activeElement = kendo._activeElement,\n        ObservableObject = kendo.data.ObservableObject,\n        keys = kendo.keys,\n        ns = \".kendoDropDownList\",\n        nsFocusEvent = ns + \"FocusEvent\",\n        DISABLED = \"disabled\",\n        READONLY = \"readonly\",\n        CHANGE = \"change\",\n        FOCUSED = \"k-focus\",\n        STATEDISABLED = \"k-disabled\",\n        ARIA_DISABLED = \"aria-disabled\",\n        ARIA_READONLY = \"aria-readonly\",\n        CLICKEVENTS = \"click\" + ns + \" touchend\" + ns,\n        HOVEREVENTS = \"mouseenter\" + ns + \" mouseleave\" + ns,\n        TABINDEX = \"tabindex\",\n        STATE_FILTER = \"filter\",\n        STATE_ACCEPT = \"accept\",\n        MSG_INVALID_OPTION_LABEL = \"The `optionLabel` option is not valid due to missing fields. Define a custom optionLabel as shown here http://docs.telerik.com/kendo-ui/api/javascript/ui/dropdownlist#configuration-optionLabel\",\n        OPEN = \"open\",\n        CLOSE = \"close\";\n\n    var DropDownList = Select.extend( {\n        init: function(element, options) {\n            var that = this;\n            var index = options && options.index;\n            var optionLabel, text, disabled;\n\n            that.ns = ns;\n            options = Array.isArray(options) ? { dataSource: options } : options;\n\n            Select.fn.init.call(that, element, options);\n\n            options = that.options;\n            element = that.element.on(\"focus\" + ns, that._focusHandler.bind(that));\n\n            that._focusInputHandler = that._focusInput.bind(that);\n\n            that.optionLabel = $();\n            that._optionLabel();\n\n            that._inputTemplate();\n\n            that._reset();\n\n            that._prev = \"\";\n            that._word = \"\";\n\n            that._wrapper();\n\n            that._tabindex();\n            that.wrapper.data(TABINDEX, that.wrapper.attr(TABINDEX));\n\n            that._span();\n\n            that._popup();\n\n            that._mobile();\n\n            that._dataSource();\n\n            that._ignoreCase();\n\n            if (options.label) {\n                this._label();\n            }\n\n            that._aria();\n\n            that._enable();\n\n            that._oldIndex = that.selectedIndex = -1;\n\n            if (index !== undefined$1) {\n                options.index = index;\n            }\n\n            that._initialIndex = options.index;\n\n            that.requireValueMapper(that.options);\n            that._initList();\n            that.listView.one(\"dataBound\", that._attachAriaActiveDescendant.bind(that));\n\n            that._cascade();\n\n            that.one(\"set\", function(e) {\n                if (!e.sender.listView.bound() && that.hasOptionLabel()) {\n                    that._textAccessor(that._optionLabelText());\n                }\n            });\n\n            if (options.autoBind) {\n                that.dataSource.fetch();\n            } else if (that.selectedIndex === -1) { //selectedIndex !== -1 when cascade functionality happens instantly\n                text = options.text || \"\";\n                if (!text) {\n                    optionLabel = options.optionLabel;\n\n                    if (optionLabel && options.index === 0) {\n                        text = optionLabel;\n                    } else if (that._isSelect) {\n                        text = element.children(\":selected\").text();\n                    }\n                }\n\n                that._textAccessor(text);\n            }\n\n            disabled = $(that.element).parents(\"fieldset\").is(':disabled');\n\n            if (disabled) {\n                that.enable(false);\n            }\n\n            that.listView.bind(\"click\", function(e) { e.preventDefault(); });\n\n            kendo.notify(that);\n            that._applyCssClasses();\n        },\n\n        options: {\n            name: \"DropDownList\",\n            enabled: true,\n            autoBind: true,\n            _allowFilterPaste: true, // Related to the paste functionality in the Grid. In certain cases the focus remains on the dropdownlist and the paste action is executed on it instead of the Grid.\n            index: 0,\n            text: null,\n            value: null,\n            delay: 500,\n            height: 200,\n            dataTextField: \"\",\n            dataValueField: \"\",\n            optionLabel: \"\",\n            cascadeFrom: \"\",\n            cascadeFromField: \"\",\n            cascadeFromParentField: \"\",\n            ignoreCase: true,\n            animation: {},\n            filter: \"none\",\n            minLength: 1,\n            enforceMinLength: false,\n            virtual: false,\n            template: null,\n            valueTemplate: null,\n            optionLabelTemplate: null,\n            groupTemplate: (data) => encode(data),\n            fixedGroupTemplate: (data) => encode(data),\n            autoWidth: false,\n            popup: null,\n            filterTitle: null,\n            size: \"medium\",\n            fillMode: \"solid\",\n            rounded: \"medium\",\n            label: null,\n            popupFilter: true\n        },\n\n        events: [\n            \"open\",\n            \"close\",\n            CHANGE,\n            \"select\",\n            \"filtering\",\n            \"dataBinding\",\n            \"dataBound\",\n            \"cascade\",\n            \"set\",\n            \"kendoKeydown\"\n        ],\n\n        setOptions: function(options) {\n            Select.fn.setOptions.call(this, options);\n\n            this.listView.setOptions(this._listOptions(options));\n\n            this._optionLabel();\n            this._inputTemplate();\n            this._accessors();\n            this._removeFilterHeader();\n            this._addFilterHeader();\n            this._enable();\n            this._aria();\n\n            if (!this.value() && this.hasOptionLabel()) {\n                this.select(0);\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n\n            Select.fn.destroy.call(that);\n\n            that.wrapper.off(ns);\n            that.wrapper.off(nsFocusEvent);\n            that.element.off(ns);\n\n            that._arrow.off();\n            that._arrow = null;\n            that._arrowIcon = null;\n\n            that.optionLabel.off();\n\n            if (that.filterInput) {\n                that.filterInput.off(nsFocusEvent);\n            }\n        },\n\n        open: function() {\n            var that = this;\n            var isFiltered = that.dataSource.filter() ? that.dataSource.filter().filters.length > 0 : false;\n            var listView = this.listView;\n\n            if (that.popup.visible()) {\n                return;\n            }\n\n            if (!that.listView.bound() || that._state === STATE_ACCEPT) {\n                that._open = true;\n                that._state = \"rebind\";\n\n                if (that.filterInput) {\n                    that.filterInput.val(\"\");\n                    that._prev = \"\";\n                }\n\n                if (that.filterInput && that.options.minLength !== 1 && !isFiltered) {\n                    that.refresh();\n                    that.popup.one(\"activate\", that._focusInputHandler);\n                    that.wrapper.attr(\"aria-activedescendant\", listView._optionID);\n                    that.popup.open();\n                    that._resizeFilterInput();\n                } else {\n                    that._filterSource();\n                }\n            } else if (that._allowOpening()) {\n                that._focusFilter = true;\n                that.popup.one(\"activate\", that._focusInputHandler);\n                // In some cases when the popup is opened resize is triggered which will cause it to close\n                // Setting the below flag will prevent this from happening\n                that.popup._hovered = true;\n                that.wrapper.attr(\"aria-activedescendant\", listView._optionID);\n                that.popup.open();\n                that._resizeFilterInput();\n                that._focusItem();\n            }\n        },\n\n        close: function() {\n            this._attachAriaActiveDescendant();\n            this.popup.close();\n        },\n\n        _attachAriaActiveDescendant: function() {\n            var wrapper = this.wrapper,\n                inputId = wrapper.find(\".k-input-inner\").attr('id');\n\n            wrapper.attr(\"aria-describedby\", inputId);\n        },\n\n        _focusInput: function() {\n            if (!this._hasActionSheet()) {\n                this._focusElement(this.filterInput);\n            }\n        },\n\n        _resizeFilterInput: function() {\n            var filterInput = this.filterInput;\n            var originalPrevent = this._prevent;\n\n            if (!filterInput || this._hasActionSheet()) {\n                return;\n            }\n\n            var isInputActive = this.filterInput[0] === activeElement();\n            var caret = kendo.caret(this.filterInput[0])[0];\n\n            this._prevent = true;\n\n            filterInput.addClass(\"k-hidden\");\n            filterInput.closest(\".k-list-filter\").css(\"width\", this.popup.element.width());\n            filterInput.removeClass(\"k-hidden\");\n\n            if (isInputActive) {\n                filterInput.trigger(\"focus\");\n                kendo.caret(filterInput[0], caret);\n            }\n\n            this._prevent = originalPrevent;\n        },\n\n        _allowOpening: function() {\n            return this.hasOptionLabel() || this.filterInput || Select.fn._allowOpening.call(this);\n        },\n\n        toggle: function(toggle) {\n            this._toggle(toggle, true);\n        },\n\n        current: function(candidate) {\n            var current;\n\n            if (candidate === undefined$1) {\n                current = this.listView.focus();\n\n                if (!current && this.selectedIndex === 0 && this.hasOptionLabel()) {\n                    return this.optionLabel;\n                }\n\n                return current;\n            }\n\n            this._focus(candidate);\n        },\n\n        dataItem: function(index) {\n            var that = this;\n            var dataItem = null;\n\n            if (index === null) { return index; }\n\n            if (index === undefined$1) {\n                dataItem = that.listView.selectedDataItems()[0];\n            } else {\n                if (typeof index !== \"number\") {\n                    if (that.options.virtual) {\n                        return that.dataSource.getByUid($(index).data(\"uid\"));\n                    }\n                    if (index.hasClass(\"k-list-optionlabel\")) {\n                        index = -1;\n                    } else {\n                        index = $(that.items()).index(index);\n                    }\n                } else if (that.hasOptionLabel()) {\n                    index -= 1;\n                }\n\n                dataItem = that.dataSource.flatView()[index];\n            }\n\n            if (!dataItem) {\n                dataItem = that._optionLabelDataItem();\n            }\n\n            return dataItem;\n        },\n\n        refresh: function() {\n            this.listView.refresh();\n        },\n\n        text: function(text) {\n            var that = this;\n            var loweredText;\n            var ignoreCase = that.options.ignoreCase;\n\n            text = text === null ? \"\" : text;\n\n            if (text !== undefined$1) {\n                if (typeof text !== \"string\") {\n                    that._textAccessor(text);\n                    return;\n                }\n\n                loweredText = ignoreCase ? text.toLowerCase() : text;\n\n                that._select(function(data) {\n                    data = that._text(data);\n\n                    if (ignoreCase) {\n                        data = (data + \"\").toLowerCase();\n                    }\n\n                    return data === loweredText;\n                }).done(function() {\n                    that._textAccessor(that.dataItem() || text);\n                    that._refreshFloatingLabel();\n                });\n\n            } else {\n                return that._textAccessor();\n            }\n        },\n\n        _clearFilter: function() {\n            $(this.filterInput).val(\"\");\n            Select.fn._clearFilter.call(this);\n        },\n\n        value: function(value) {\n            var that = this;\n            var listView = that.listView;\n            var dataSource = that.dataSource;\n            var valueFn = function() { that.value(value); };\n\n            if (value === undefined$1) {\n                value = that._accessor() || that.listView.value()[0];\n                return value === undefined$1 || value === null ? \"\" : value;\n            }\n\n            that.requireValueMapper(that.options, value);\n\n            if (value || !that.hasOptionLabel()) {\n                that._initialIndex = null;\n            }\n\n            this.trigger(\"set\", { value: value });\n\n            if (that._request && that.options.cascadeFrom && that.listView.bound()) {\n                if (that._valueSetter) {\n                    dataSource.unbind(CHANGE, that._valueSetter);\n                }\n\n                that._valueSetter = valueFn.bind(that);\n\n                dataSource.one(CHANGE, that._valueSetter);\n                return;\n            }\n\n            if (that._isFilterEnabled() && listView.bound() && listView.isFiltered()) {\n                that._clearFilter();\n            } else {\n                that._fetchData();\n            }\n\n            listView.value(value).done(function() {\n                that._old = that._valueBeforeCascade = that._accessor();\n                that._oldIndex = that.selectedIndex;\n                that._refreshFloatingLabel();\n            });\n        },\n\n        hasOptionLabel: function() {\n            return this.optionLabel && !!this.optionLabel[0];\n        },\n\n        _optionLabel: function() {\n            var that = this;\n            var options = that.options;\n            var optionLabel = options.optionLabel;\n            var template = options.optionLabelTemplate;\n\n            if (!optionLabel) {\n                that.optionLabel.off().remove();\n                that.optionLabel = $();\n                return;\n            }\n\n            if (!template) {\n                template = (data) => (typeof optionLabel === \"string\" ?\n                    encode(data) :\n                    encode(kendo.getter(options.dataTextField)(data)));\n            }\n\n            if (typeof template !== \"function\") {\n                template = kendo.template(template);\n            }\n\n            that.optionLabelTemplate = template;\n\n            if (!that.hasOptionLabel()) {\n                that.optionLabel = $('<div role=\"option\" class=\"k-list-optionlabel\"></div>').prependTo(that.list);\n            }\n\n            that.optionLabel.html(template(optionLabel))\n                            .off()\n                            .on(CLICKEVENTS, that._click.bind(that))\n                            .on(HOVEREVENTS, that._toggleHover);\n\n        },\n\n        _optionLabelText: function() {\n            var optionLabel = this.options.optionLabel;\n            return (typeof optionLabel === \"string\") ? optionLabel : this._text(optionLabel);\n        },\n\n        _optionLabelDataItem: function() {\n            var that = this;\n            var optionLabel = that.options.optionLabel;\n\n            if (that.hasOptionLabel()) {\n                return $.isPlainObject(optionLabel) ? new ObservableObject(optionLabel) : that._assignInstance(that._optionLabelText(), \"\");\n            }\n\n            return undefined$1;\n        },\n\n        _buildOptions: function(data) {\n            var that = this;\n            if (!that._isSelect) {\n                return;\n            }\n\n            var value = that.listView.value()[0];\n            var optionLabel = that._optionLabelDataItem();\n            var optionLabelValue = optionLabel && that._value(optionLabel);\n\n            if (value === undefined$1 || value === null) {\n                value = \"\";\n            }\n\n            if (optionLabel) {\n                if (optionLabelValue === undefined$1 || optionLabelValue === null) {\n                    optionLabelValue = \"\";\n                }\n\n                optionLabel = '<option value=\"' + optionLabelValue + '\">' + that._text(optionLabel) + \"</option>\";\n            }\n\n            that._options(data, optionLabel, value);\n\n            if (value !== List.unifyType(that._accessor(), typeof value)) {\n                that._customOption = null;\n                that._custom(value);\n            }\n        },\n\n        _listBound: function() {\n\n            var that = this;\n            var initialIndex = that._initialIndex;\n            var filtered = that._state === STATE_FILTER;\n\n            var data = that.dataSource.flatView();\n            var dataItem;\n\n            that._presetValue = false;\n\n            that._renderFooter();\n            that._renderNoData();\n            that._toggleNoData(!data.length);\n\n            that._resizePopup(true);\n\n            that.popup.position();\n\n            that._buildOptions(data);\n\n            if (!filtered) {\n                if (that._open) {\n                    that.toggle(that._allowOpening());\n                }\n\n                that._open = false;\n\n                if (!that._fetch) {\n                    if (data.length) {\n                        if (!that.listView.value().length && initialIndex > -1 && initialIndex !== null) {\n                            that.select(initialIndex);\n                        }\n\n                        that._initialIndex = null;\n                        dataItem = that.listView.selectedDataItems()[0];\n                        if (dataItem && that.text() !== that._text(dataItem)) {\n                            that._selectValue(dataItem);\n                        }\n                    } else if (that._textAccessor() !== that._optionLabelText()) {\n                        that.listView.value(\"\");\n                        that._selectValue(null);\n                        that._oldIndex = that.selectedIndex;\n                    }\n                }\n            }\n\n            that._hideBusy();\n            that.trigger(\"dataBound\");\n        },\n\n        _listChange: function() {\n            this._selectValue(this.listView.selectedDataItems()[0]);\n\n            if (this._presetValue || (this._old && this._oldIndex === -1)) {\n                this._oldIndex = this.selectedIndex;\n            }\n        },\n\n        _filterPaste: function() {\n            if (this.options._allowFilterPaste) {\n                this._search();\n            }\n        },\n\n        _attachFocusHandlers: function() {\n            var that = this;\n            var wrapper = that.wrapper;\n\n            wrapper.on(\"focusin\" + nsFocusEvent, that._focusinHandler.bind(that))\n                   .on(\"focusout\" + nsFocusEvent, that._focusoutHandler.bind(that));\n            if (that.filterInput) {\n                that.filterInput.on(\"focusin\" + nsFocusEvent, that._focusinHandler.bind(that))\n                   .on(\"focusout\" + nsFocusEvent, that._focusoutHandler.bind(that));\n            }\n        },\n\n        _focusHandler: function() {\n            this.wrapper.trigger(\"focus\");\n        },\n\n        _focusinHandler: function() {\n            this.wrapper.addClass(FOCUSED);\n            this._prevent = false;\n        },\n\n        _focusoutHandler: function() {\n            var that = this;\n            var isIFrame = window.self !== window.top;\n\n            if (!that._prevent) {\n                clearTimeout(that._typingTimeout);\n\n                if (support.mobileOS.ios && isIFrame) {\n                    that._change();\n                } else {\n                    that._blur();\n                }\n\n                that.wrapper.removeClass(FOCUSED);\n                that._prevent = true;\n                that._open = false;\n                that.element.trigger(\"blur\");\n            }\n        },\n\n        _wrapperMousedown: function() {\n            this._prevent = !!this.filterInput;\n        },\n\n        _wrapperClick: function(e) {\n            e.preventDefault();\n            this.popup.unbind(\"activate\", this._focusInputHandler);\n            this._focused = this.wrapper;\n            this._prevent = false;\n            this._toggle();\n        },\n\n        _editable: function(options) {\n            var that = this;\n            var element = that.element;\n            var disable = options.disable;\n            var readonly = options.readonly;\n            var wrapper = that.wrapper.add(that.filterInput).off(ns);\n            var dropDownWrapper = that.wrapper.off(HOVEREVENTS);\n\n            if (!readonly && !disable) {\n                element.prop(DISABLED, false).prop(READONLY, false);\n\n                dropDownWrapper\n                    .removeClass(STATEDISABLED)\n                    .on(HOVEREVENTS, that._toggleHover);\n\n                wrapper\n                    .attr(TABINDEX, wrapper.data(TABINDEX))\n                    .attr(ARIA_DISABLED, false)\n                    .attr(ARIA_READONLY, false)\n                    .on(\"keydown\" + ns, that, that._keydown.bind(that))\n                    .on(kendo.support.mousedown + ns, that._wrapperMousedown.bind(that))\n                    .on(\"paste\" + ns, that._filterPaste.bind(that));\n\n                that.wrapper.on(\"click\" + ns, that._wrapperClick.bind(that));\n\n                if (!that.filterInput) {\n                    wrapper.on(\"keypress\" + ns, that._keypress.bind(that));\n                } else {\n                    wrapper.on(\"input\" + ns, that._search.bind(that));\n                }\n\n            } else if (disable) {\n                wrapper.removeAttr(TABINDEX);\n                dropDownWrapper.addClass(STATEDISABLED);\n            } else {\n                dropDownWrapper.removeClass(STATEDISABLED);\n            }\n\n            element.attr(DISABLED, disable)\n                   .attr(READONLY, readonly);\n\n            wrapper.attr(ARIA_DISABLED, disable)\n                    .attr(ARIA_READONLY, readonly);\n        },\n\n        _keydown: function(e) {\n            var that = this;\n            var key = e.keyCode;\n            var altKey = e.altKey;\n            var isInputActive;\n            var handled;\n\n            var isPopupVisible = that.popup.visible();\n\n            if (that.filterInput) {\n                isInputActive = that.filterInput[0] === activeElement();\n            }\n\n            if (key === keys.LEFT) {\n                key = keys.UP;\n                handled = true;\n            } else if (key === keys.RIGHT) {\n                key = keys.DOWN;\n                handled = true;\n            }\n\n            if (handled && isInputActive) {\n                return;\n            }\n\n            e.keyCode = key;\n\n            if ((altKey && key === keys.UP) || key === keys.ESC) {\n                that._focusElement(that.wrapper);\n            }\n\n            if (that._state === STATE_FILTER && key === keys.ESC) {\n                that._clearFilter();\n                that._open = false;\n                that._state = STATE_ACCEPT;\n            }\n\n            if (key === keys.ENTER && that._typingTimeout && that.filterInput && isPopupVisible) {\n                e.preventDefault();\n                return;\n            }\n\n            if (key === keys.SPACEBAR && !isInputActive) {\n                that.toggle(!isPopupVisible);\n                e.preventDefault();\n            }\n\n            handled = that._move(e);\n\n            if (handled) {\n                return;\n            }\n\n            if (!isPopupVisible || !that.filterInput) {\n                var current = that._focus();\n\n                if (key === keys.HOME) {\n                    handled = true;\n                    that._firstItem();\n                } else if (key === keys.END) {\n                    handled = true;\n                    that._lastItem();\n                }\n\n                if (handled) {\n                    if (that.trigger(\"select\", { dataItem: that._getElementDataItem(that._focus()), item: that._focus() })) {\n                        that._focus(current);\n                        return;\n                    }\n\n                    that._select(that._focus(), true).done(function() {\n                        if (!isPopupVisible) {\n                            that._blur();\n                        }\n                    });\n                    e.preventDefault();\n                }\n            }\n\n            if (!altKey && !handled && that.filterInput) {\n                that._search();\n            }\n        },\n\n        _matchText: function(text, word) {\n            var ignoreCase = this.options.ignoreCase;\n\n            if (text === undefined$1 || text === null) {\n                return false;\n            }\n\n            text = text + \"\";\n\n            if (ignoreCase) {\n                text = text.toLowerCase();\n            }\n\n            return text.indexOf(word) === 0;\n        },\n\n        _shuffleData: function(data, splitIndex) {\n            var optionDataItem = this._optionLabelDataItem();\n\n            if (optionDataItem) {\n                data = [optionDataItem].concat(data);\n            }\n\n            return data.slice(splitIndex).concat(data.slice(0, splitIndex));\n        },\n\n        _selectNext: function() {\n            var that = this;\n            var data = that.dataSource.flatView();\n            var dataLength = data.length + (that.hasOptionLabel() ? 1 : 0);\n            var isInLoop = sameCharsOnly(that._word, that._last);\n            var startIndex = that.selectedIndex;\n            var oldFocusedItem;\n            var text;\n\n            if (startIndex === -1) {\n                startIndex = 0;\n            } else {\n                startIndex += isInLoop ? 1 : 0;\n                startIndex = normalizeIndex(startIndex, dataLength);\n            }\n\n            data = data.toJSON ? data.toJSON() : data.slice();\n            data = that._shuffleData(data, startIndex);\n\n            for (var idx = 0; idx < dataLength; idx++) {\n                text = that._text(data[idx]);\n\n                if (isInLoop && that._matchText(text, that._last)) {\n                    break;\n                } else if (that._matchText(text, that._word)) {\n                    break;\n                }\n            }\n\n            if (idx !== dataLength) {\n                oldFocusedItem = that._focus();\n\n                that._select(normalizeIndex(startIndex + idx, dataLength)).done(function() {\n                    var done = function() {\n                        if (!that.popup.visible()) {\n                            that._change();\n                        }\n                    };\n\n                    if (that.trigger(\"select\", { dataItem: that._getElementDataItem(that._focus()), item: that._focus() })) {\n                        that._select(oldFocusedItem).done(done);\n                    } else {\n                        done();\n                    }\n                });\n            }\n        },\n\n        _keypress: function(e) {\n            var that = this;\n\n            if (e.which === 0 || e.keyCode === kendo.keys.ENTER) {\n                return;\n            }\n\n            var character = String.fromCharCode(e.charCode || e.keyCode);\n\n            if (that.options.ignoreCase) {\n                character = character.toLowerCase();\n            }\n\n            if (character === \" \") {\n                e.preventDefault();\n            }\n\n            that._word += character;\n            that._last = character;\n\n            that._search();\n        },\n\n        _popupOpen: function(e) {\n            var popup = this.popup;\n\n            if (e.isDefaultPrevented() || this._hasActionSheet()) {\n                return;\n            }\n\n            popup.wrapper = kendo.wrap(popup.element);\n\n            if (popup.element.closest(\".km-root\")[0]) {\n                popup.wrapper.addClass(\"km-popup km-widget\");\n                this.wrapper.addClass(\"km-widget\");\n            }\n        },\n\n        _popup: function() {\n            Select.fn._popup.call(this);\n            this.popup.element.addClass(\"k-dropdownlist-popup\");\n            this.popup.one(\"open\", this._popupOpen.bind(this));\n        },\n\n        _postCreatePopup: function() {\n            Select.fn._postCreatePopup.call(this);\n            this._attachFocusHandlers();\n        },\n\n        _getElementDataItem: function(element) {\n            if (!element || !element[0]) {\n                return null;\n            }\n\n            if (element[0] === this.optionLabel[0]) {\n                return this._optionLabelDataItem();\n            }\n\n            return this.listView.dataItemByIndex(this.listView.getElementIndex(element));\n        },\n\n        _click: function(e) {\n            var that = this;\n            var item = e.item || $(e.currentTarget);\n\n            e.preventDefault();\n\n            if (that.trigger(\"select\", { dataItem: that._getElementDataItem(item), item: item })) {\n                that.close();\n                return;\n            }\n\n            that._userTriggered = true;\n\n            that._select(item).done(function() {\n                that._blur();\n                that._focusElement(that.wrapper);\n            });\n        },\n\n        _focusElement: function(element) {\n            var active = activeElement();\n            var wrapper = this.wrapper;\n            var filterInput = this.filterInput;\n            var compareElement = element === filterInput ? wrapper : filterInput;\n            var touchEnabled = support.mobileOS && (support.touch || support.MSPointers || support.pointers);\n\n            if (filterInput && filterInput[0] === element[0] && touchEnabled) {\n                return;\n            }\n\n            if (filterInput && (compareElement[0] === active || this._focusFilter)) {\n                this._focusFilter = false;\n                this._prevent = true;\n                this._focused = element.trigger(\"focus\");\n            }\n        },\n\n        _searchByWord: function(word) {\n            if (!word) {\n                return;\n            }\n\n            var that = this;\n            var ignoreCase = that.options.ignoreCase;\n\n            if (ignoreCase) {\n                word = word.toLowerCase();\n            }\n\n            that._select(function(dataItem) {\n                return that._matchText(that._text(dataItem), word);\n            });\n        },\n\n        _inputValue: function() {\n            return this.text();\n        },\n\n        _search: function() {\n            var that = this;\n            var dataSource = that.dataSource;\n\n            clearTimeout(that._typingTimeout);\n\n            if (that._isFilterEnabled()) {\n                that._typingTimeout = setTimeout(function() {\n                    var value = that.filterInput.val();\n\n                    if (that._prev !== value) {\n                        that._prev = value;\n                        that.search(value);\n                        that._resizeFilterInput();\n                    }\n\n                    that._typingTimeout = null;\n                }, that.options.delay);\n            } else {\n                that._typingTimeout = setTimeout(function() {\n                    that._word = \"\";\n                }, that.options.delay);\n\n                if (!that.listView.bound()) {\n                    dataSource.fetch().done(function() {\n                        that._selectNext();\n                    });\n                    return;\n                }\n\n                that._selectNext();\n            }\n        },\n\n        _get: function(candidate) {\n            var data, found, idx;\n            var isFunction = typeof candidate === \"function\";\n            var jQueryCandidate = !isFunction ? $(candidate) : $();\n\n            if (this.hasOptionLabel()) {\n                if (typeof candidate === \"number\") {\n                    if (candidate > -1) {\n                        candidate -= 1;\n                    }\n                } else if (jQueryCandidate.hasClass(\"k-list-optionlabel\")) {\n                    candidate = -1;\n                }\n            }\n\n            if (isFunction) {\n                data = this.dataSource.flatView();\n\n                for (idx = 0; idx < data.length; idx++) {\n                    if (candidate(data[idx])) {\n                        candidate = idx;\n                        found = true;\n                        break;\n                    }\n                }\n\n                if (!found) {\n                    candidate = -1;\n                }\n            }\n\n            return candidate;\n        },\n\n        _firstItem: function() {\n            if (this.hasOptionLabel()) {\n                this._focus(this.optionLabel);\n            } else {\n                this.listView.focusFirst();\n            }\n        },\n\n        _lastItem: function() {\n            this._resetOptionLabel();\n            this.listView.focusLast();\n        },\n\n        _nextItem: function() {\n            var focusIndex;\n\n            if (this.optionLabel.hasClass(\"k-focus\")) {\n                this._resetOptionLabel();\n                this.listView.focusFirst();\n                focusIndex = 1;\n            } else {\n                focusIndex = this.listView.focusNext();\n            }\n\n            return focusIndex;\n        },\n\n        _prevItem: function() {\n            var focusIndex;\n\n            if (this.optionLabel.hasClass(\"k-focus\")) {\n                return;\n            }\n\n            focusIndex = this.listView.focusPrev();\n\n            if (!this.listView.focus() && !this.options.virtual) {\n                this._focus(this.optionLabel);\n            }\n\n            return focusIndex;\n        },\n\n        _focusItem: function() {\n            var options = this.options;\n            var listView = this.listView;\n            var focusedItem = listView.focus();\n            var index = listView.select();\n\n            index = index[index.length - 1];\n\n            if (index === undefined$1 && options.highlightFirst && !focusedItem) {\n                index = 0;\n            }\n\n            if (index !== undefined$1) {\n                listView.focus(index);\n            } else {\n                if (options.optionLabel && (!options.virtual || options.virtual.mapValueTo !== \"dataItem\")) {\n                    this._focus(this.optionLabel);\n                    this._select(this.optionLabel);\n                    this.listView.content.scrollTop(0);\n                } else {\n                    listView.scrollToIndex(0);\n                }\n            }\n        },\n\n        _resetOptionLabel: function(additionalClass) {\n            this.optionLabel.removeClass(\"k-focus\" + (additionalClass || \"\")).removeAttr(\"id\");\n        },\n\n        _focus: function(candidate) {\n            var listView = this.listView;\n            var optionLabel = this.optionLabel;\n\n            if (candidate === undefined$1) {\n                candidate = listView.focus();\n\n                if (!candidate && optionLabel.hasClass(\"k-focus\")) {\n                    candidate = optionLabel;\n                }\n\n                return candidate;\n            }\n\n            this._resetOptionLabel();\n\n            candidate = this._get(candidate);\n\n            listView.focus(candidate);\n\n            if (candidate === -1) {\n                optionLabel.addClass(\"k-focus\")\n                           .attr(\"id\", listView._optionID);\n\n                if (this.filterInput) {\n                    this.filterInput\n                        .removeAttr(\"aria-activedescendant\")\n                        .attr(\"aria-activedescendant\", listView._optionID);\n                }\n            }\n        },\n\n        _select: function(candidate, keepState) {\n            var that = this;\n\n            candidate = that._get(candidate);\n\n            return that.listView.select(candidate).done(function() {\n                if (!keepState && that._state === STATE_FILTER) {\n                    that._state = STATE_ACCEPT;\n                }\n\n                if (candidate === -1) {\n                    that._selectValue(null);\n                }\n            });\n        },\n\n        _selectValue: function(dataItem) {\n            var that = this;\n            var optionLabel = that.options.optionLabel;\n            var idx = that.listView.select();\n\n            var value = \"\";\n            var text = \"\";\n\n            idx = idx[idx.length - 1];\n            if (idx === undefined$1) {\n                idx = -1;\n            }\n\n            this._resetOptionLabel(\" k-selected\");\n\n            if (dataItem || dataItem === 0) {\n                text = dataItem;\n                value = that._dataValue(dataItem);\n                if (optionLabel) {\n                    idx += 1;\n                }\n            } else if (optionLabel) {\n                that._focus(that.optionLabel.addClass(\"k-selected\"));\n\n                text = that._optionLabelText();\n\n                if (typeof optionLabel === \"string\") {\n                    value = \"\";\n                } else {\n                    value = that._value(optionLabel);\n                }\n\n                idx = 0;\n            }\n\n            that.selectedIndex = idx;\n\n            if (value === null) {\n                value = \"\";\n            }\n\n            that._textAccessor(text);\n            that._accessor(value, idx);\n\n            that._triggerCascade();\n        },\n\n        _mobile: function() {\n            var that = this,\n                popup = that.popup,\n                mobileOS = support.mobileOS,\n                root = popup.element.parents(\".km-root\").eq(0);\n\n            if (root.length && mobileOS) {\n                popup.options.animation.open.effects = (mobileOS.android || mobileOS.meego) ? \"fadeIn\" : (mobileOS.ios || mobileOS.wp) ? \"slideIn:up\" : popup.options.animation.open.effects;\n            }\n        },\n\n        _span: function() {\n            var that = this,\n                wrapper = that.wrapper,\n                SELECTOR = \"span.k-input-value-text\",\n                id = kendo.guid(),\n                options = that.options,\n                span, arrowBtn;\n\n            span = wrapper.find(SELECTOR);\n\n            if (!span[0]) {\n                arrowBtn = html.renderButton('<span role=\"button\" class=\"k-input-button\" aria-label=\"select\"></span>', {\n                    icon: \"caret-alt-down\",\n                    size: options.size,\n                    fillMode: options.fillMode,\n                    shape: \"none\",\n                    rounded: \"none\"\n                });\n\n                wrapper.append('<span id=\"' + id + '\" unselectable=\"on\" class=\"k-input-inner\">' +\n                            '<span class=\"k-input-value-text\"></span>' +\n                        '</span>')\n                    .append(arrowBtn)\n                    .append(that.element);\n\n                span = wrapper.find(SELECTOR);\n            }\n\n            that.span = span;\n            that._arrow = wrapper.find(\".k-input-button\");\n            that._arrowIcon = that._arrow.find(\".k-icon,.k-svg-icon\");\n        },\n\n        _wrapper: function() {\n            var that = this,\n                element = that.element,\n                DOMelement = element[0],\n                wrapper;\n\n            wrapper = element.parent();\n\n            if (!wrapper.is(\"span.k-picker\")) {\n                wrapper = element.wrap(\"<span />\").parent();\n                wrapper[0].style.cssText = DOMelement.style.cssText;\n                wrapper[0].title = DOMelement.title;\n            }\n\n            that._focused = that.wrapper = wrapper\n                .addClass(\"k-picker k-dropdownlist\")\n                .addClass(DOMelement.className)\n                .removeClass('input-validation-error')\n                .css(\"display\", \"\")\n                .attr({\n                    accesskey: element.attr(\"accesskey\"),\n                    unselectable: \"on\",\n                    role: \"combobox\",\n                    \"aria-expanded\": false\n                });\n\n            element.hide().removeAttr(\"accesskey\");\n        },\n\n        _clearSelection: function(parent) {\n            this.select(parent.value() ? 0 : -1);\n        },\n\n        _openHandler: function(e) {\n            this._adjustListWidth();\n\n            if (this.trigger(OPEN)) {\n                e.preventDefault();\n            } else {\n                this.wrapper.attr(\"aria-expanded\", true);\n                this.ul.attr(\"aria-hidden\", false);\n            }\n        },\n\n        _closeHandler: function(e) {\n            if (this.trigger(CLOSE)) {\n                e.preventDefault();\n            } else {\n                this.wrapper.attr(\"aria-expanded\", false);\n                this.ul.attr(\"aria-hidden\", true);\n            }\n        },\n\n        _inputTemplate: function() {\n            var that = this,\n                template = that.options.valueTemplate;\n\n\n            if (!template) {\n                template = (data) => encode(that._text(data));\n            } else {\n                template = kendo.template(template);\n            }\n\n            that.valueTemplate = template;\n\n            if (that.hasOptionLabel() && !that.options.optionLabelTemplate) {\n                try {\n                    that.valueTemplate(that._optionLabelDataItem());\n                } catch (e) {\n                    throw new Error(MSG_INVALID_OPTION_LABEL);\n                }\n            }\n        },\n\n        _textAccessor: function(text) {\n            var dataItem = null;\n            var template = this.valueTemplate;\n            var optionLabelText = this._optionLabelText();\n            var span = this.span;\n\n            if (text === undefined$1) {\n                return span.text();\n            }\n\n            if ($.isPlainObject(text) || text instanceof ObservableObject) {\n                dataItem = text;\n            } else if (optionLabelText && optionLabelText === text) {\n                dataItem = this.options.optionLabel;\n            }\n\n            if (!dataItem) {\n                dataItem = this._assignInstance(text, this._accessor());\n            }\n\n            if (this.hasOptionLabel()) {\n                if (dataItem === optionLabelText || this._text(dataItem) === optionLabelText) {\n                    template = this.optionLabelTemplate;\n\n                    if (typeof this.options.optionLabel === \"string\" && !this.options.optionLabelTemplate) {\n                        dataItem = optionLabelText;\n                    }\n                }\n            }\n\n            try {\n                span.html(template(dataItem));\n            } catch (e) {\n                //dataItem has missing fields required in custom template\n                span.html(\"\");\n            }\n        },\n\n        _preselect: function(value, text) {\n            if (!value && !text) {\n                text = this._optionLabelText();\n            }\n\n            this._accessor(value);\n            this._textAccessor(text);\n\n            this._old = this._accessor();\n            this._oldIndex = this.selectedIndex;\n\n            this.listView.setValue(value);\n\n            this._initialIndex = null;\n            this._presetValue = true;\n        },\n\n        _assignInstance: function(text, value) {\n            var dataTextField = this.options.dataTextField;\n            var dataItem = {};\n\n            if (dataTextField) {\n                assign(dataItem, dataTextField.split(\".\"), text);\n                assign(dataItem, this.options.dataValueField.split(\".\"), value);\n                dataItem = new ObservableObject(dataItem);\n            } else {\n                dataItem = text;\n            }\n\n            return dataItem;\n        }\n    });\n\n    function assign(instance, fields, value) {\n        var idx = 0,\n            lastIndex = fields.length - 1,\n            field;\n\n        for (; idx < lastIndex; ++idx) {\n            field = fields[idx];\n\n            if (!(field in instance)) {\n                instance[field] = {};\n            }\n\n            instance = instance[field];\n        }\n\n        instance[fields[lastIndex]] = value;\n    }\n\n    function normalizeIndex(index, length) {\n        if (index >= length) {\n            index -= length;\n        }\n        return index;\n    }\n\n    function sameCharsOnly(word, character) {\n        for (var idx = 0; idx < word.length; idx++) {\n            if (word.charAt(idx) !== character) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    ui.plugin(DropDownList);\n\n    kendo.cssProperties.registerPrefix(\"DropDownList\", \"k-picker-\");\n\n    kendo.cssProperties.registerValues(\"DropDownList\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.dropdownlist.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.editable.js":
/*!**********************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.editable.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _kendo_dropdownlist_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.dropdownlist.js */ \"./node_modules/kendo-ui-core/esm/kendo.dropdownlist.js\");\n/* harmony import */ var _kendo_datepicker_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.datepicker.js */ \"./node_modules/kendo-ui-core/esm/kendo.datepicker.js\");\n/* harmony import */ var _kendo_numerictextbox_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kendo.numerictextbox.js */ \"./node_modules/kendo-ui-core/esm/kendo.numerictextbox.js\");\n/* harmony import */ var _kendo_validator_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./kendo.validator.js */ \"./node_modules/kendo-ui-core/esm/kendo.validator.js\");\n/* harmony import */ var _kendo_binder_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./kendo.binder.js */ \"./node_modules/kendo-ui-core/esm/kendo.binder.js\");\n/* harmony import */ var _kendo_icons_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./kendo.icons.js */ \"./node_modules/kendo-ui-core/esm/kendo.icons.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\n\n\n\n\n// The current file development is no longer in active phase but the code will be kept as is.\n\nvar __meta__ = {\n    id: \"editable\",\n    name: \"Editable\",\n    category: \"framework\",\n    depends: [ \"checkbox\", \"dropdownlist\", \"datepicker\", \"numerictextbox\", \"validator\", \"binder\", \"icons\" ],\n    hidden: true\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        ui = kendo.ui,\n        Widget = ui.Widget,\n        extend = $.extend,\n        isFunction = kendo.isFunction,\n        isPlainObject = $.isPlainObject,\n        inArray = $.inArray,\n        POINT = \".\",\n        AUTOCOMPLETEVALUE = \"off\",\n        nameSpecialCharRegExp = /(\"|\\%|'|\\[|\\]|\\$|\\.|\\,|\\:|\\;|\\+|\\*|\\&|\\!|\\#|\\(|\\)|<|>|\\=|\\?|\\@|\\^|\\{|\\}|\\~|\\/|\\||`)/g,\n        ERRORTEMPLATE = ({ message }) => '<div class=\"k-tooltip k-tooltip-error k-validator-tooltip\">' +\n            kendo.ui.icon({ icon: \"exclamation-circle\", iconClass: \"k-tooltip-icon\" }) +\n            `<span class=\"k-tooltip-content\">${message}</span>` +\n            '<span class=\"k-callout k-callout-n\"></span>' +\n        '</div>',\n        CHANGE = \"change\";\n    var EQUAL_SET = \"equalSet\";\n    var specialRules = [\"url\", \"email\", \"number\", \"date\", \"boolean\"];\n\n    function fieldType(field) {\n        field = field != null ? field : \"\";\n        return field.type || kendo.type(field) || \"string\";\n    }\n\n    function convertToValueBinding(container) {\n        container.find(\":input:not(:button, .k-combobox .k-input, .k-checkbox-list .k-checkbox, .k-radio-list .k-radio, [\" + kendo.attr(\"role\") + \"=listbox], [\" + kendo.attr(\"role\") + \"=upload], [\" + kendo.attr(\"skip\") + \"], [type=file]), [\" + kendo.attr(\"role\") + \"=radiogroup]\").each(function() {\n            var bindAttr = kendo.attr(\"bind\"),\n                binding = this.getAttribute(bindAttr) || \"\",\n                bindingName = this.type === \"checkbox\" || this.type === \"radio\" ? \"checked:\" : \"value:\",\n                isAntiForgeryToken = this.getAttribute(\"name\") === Editable.antiForgeryTokenName,\n                fieldName = this.attributes.name && this.attributes.name.value;\n\n            if (binding.indexOf(bindingName) === -1 && fieldName && !isAntiForgeryToken) {\n                binding += (binding.length ? \",\" : \"\") + bindingName + fieldName;\n\n                $(this).attr(bindAttr, binding);\n            }\n        });\n    }\n\n    function createAttributes(options) {\n        var field = (options.model.fields || options.model)[options.field],\n            type = fieldType(field),\n            validation = field ? field.validation : {},\n            attributes = field ? field.attributes : {},\n            ruleName,\n            DATATYPE = kendo.attr(\"type\"),\n            BINDING = kendo.attr(\"bind\"),\n            rule,\n            attr = {\n                id: options.id || options.field,\n                name: options.field,\n                title: options.title ? options.title : options.field\n            };\n\n        for (ruleName in validation) {\n            rule = validation[ruleName];\n\n            if (inArray(ruleName, specialRules) >= 0) {\n                attr[DATATYPE] = ruleName;\n            } else if (!isFunction(rule)) {\n                var culture = kendo.getCulture();\n\n                if (typeof rule === \"number\" && culture.name.length) {\n                    var numberFormat = culture.numberFormat;\n                    var stringRule = rule.toString()\n                        .replace(POINT, numberFormat[POINT]);\n\n                    attr[ruleName] = stringRule;\n                } else {\n                    attr[ruleName] = isPlainObject(rule) ? rule.value || ruleName : rule;\n                }\n            }\n\n            attr[kendo.attr(ruleName + \"-msg\")] = rule.message;\n\n            attr.autocomplete = AUTOCOMPLETEVALUE;\n        }\n\n        for (var attributeName in attributes) {\n            attr[attributeName] = attributes[attributeName];\n        }\n\n        if (inArray(type, specialRules) >= 0) {\n            attr[DATATYPE] = type;\n        }\n\n        attr[BINDING] = (type === \"boolean\" ? \"checked:\" : \"value:\") + options.field;\n\n        return attr;\n    }\n\n    function addIdAttribute(container, attr) {\n        var id = container.attr(\"id\");\n\n        if (id) {\n            attr.id = id;\n            container.removeAttr(\"id\");\n        }\n\n        return attr;\n    }\n\n    function convertItems(items) {\n        var idx,\n            length,\n            item,\n            value,\n            text,\n            result;\n\n        if (items && items.length) {\n            result = [];\n            for (idx = 0, length = items.length; idx < length; idx++) {\n                item = items[idx];\n                text = item.text || item.value || item;\n                value = item.value == null ? (item.text || item) : item.value;\n\n                result[idx] = { text: text, value: value };\n            }\n        }\n        return result;\n    }\n\n    function getEditorTag(type, options) {\n        var tag;\n\n        if (!type.length) { return; }\n\n        if ((type === \"DropDownTree\" && options && options.checkboxes) || type === \"MultiSelect\") {\n            tag = \"<select />\";\n        } else if (type === \"RadioGroup\" || type === \"CheckBoxGroup\") {\n            tag = \"<ul />\";\n        } else if (type === \"Signature\") {\n            tag = \"<div></div>\";\n        } else {\n            tag = type === \"Editor\" || type === \"TextArea\" ? \"<textarea />\" : \"<input />\";\n        }\n\n        return tag;\n    }\n\n    var kendoEditors = [\n        \"AutoComplete\", \"CheckBox\", \"CheckBoxGroup\", \"ColorGradient\", \"ColorPicker\", \"ColorPalette\", \"ComboBox\", \"DateInput\",\n        \"DatePicker\", \"DateTimePicker\", \"DropDownTree\",\n        \"Editor\", \"FlatColorPicker\", \"MaskedTextBox\", \"MultiColumnComboBox\",\"MultiSelect\",\n        \"NumericTextBox\", \"RadioGroup\", \"Rating\", \"Slider\", \"Switch\", \"TimePicker\", \"DropDownList\",\n        \"TextBox\", \"TextArea\", \"Captcha\", \"Signature\", \"TimeDurationPicker\"\n    ];\n\n    var editors = {\n        \"hidden\": function(container, options) {\n            var attr = createAttributes(options);\n            $('<input type=\"hidden\"/>').attr(attr).appendTo(container);\n        },\n        \"number\": function(container, options) {\n            var attr = createAttributes(options);\n            $('<input type=\"text\"/>').attr(attr).appendTo(container).kendoNumericTextBox(extend({}, options.editorOptions, { format: options.format }));\n            $('<span ' + kendo.attr(\"for\") + '=\"' + options.field + '\" class=\"k-invalid-msg k-hidden\"/>').appendTo(container);\n        },\n        \"date\": function(container, options) {\n            var attr = createAttributes(options),\n                format = options.format;\n\n            if (format) {\n                format = kendo._extractFormat(format);\n            }\n\n            attr[kendo.attr(\"format\")] = format;\n\n            $('<input type=\"text\"/>').attr(attr).appendTo(container).kendoDatePicker(extend({}, options.editorOptions, { format: options.format }));\n            $('<span ' + kendo.attr(\"for\") + '=\"' + options.field + '\" class=\"k-invalid-msg k-hidden\"/>').appendTo(container);\n        },\n        \"string\": function(container, options) {\n            var attr = createAttributes(options);\n\n            $('<input type=\"text\"/>').attr(attr).appendTo(container).kendoTextBox(options.editorOptions);\n        },\n        \"boolean\": function(container, options) {\n            var attr = createAttributes(options);\n            var element = $('<input type=\"checkbox\" />').attr(attr).kendoCheckBox(options.editorOptions).appendTo(container);\n\n            renderHiddenForMvcCheckbox(element, container, options);\n        },\n        \"values\": function(container, options) {\n            var attr = createAttributes(options);\n            var items = kendo.stringify(convertItems(options.values));\n            $('<select ' +\n                kendo.attr(\"text-field\") + '=\"text\"' +\n                kendo.attr(\"value-field\") + '=\"value\"' +\n                kendo.attr(\"source\") + \"=\\'\" + (items ? items.replace(/\\'/g,\"&apos;\") : items) + \"\\'\" +\n                kendo.attr(\"size\") + '=\"' + options.editorOptions.size + '\"' +\n                kendo.attr(\"role\") + '=\"dropdownlist\"/>')\n                .attr(attr).appendTo(container);\n            $('<span ' + kendo.attr(\"for\") + '=\"' + options.field + '\" class=\"k-invalid-msg  k-hidden\"/>').appendTo(container);\n        },\n        \"kendoEditor\": function(container, options) {\n            var attr = createAttributes(options);\n            var type = options.editor;\n            var editor = \"kendo\" + type;\n            var editorOptions = options.editorOptions;\n            var tagElement = getEditorTag(type, editorOptions);\n\n            var element = $(tagElement)\n                .attr(attr)\n                .appendTo(container)\n                [editor](editorOptions);\n\n            renderHiddenForMvcCheckbox(element, container, options);\n        }\n    };\n\n    var mobileEditors = {\n        \"number\": function(container, options) {\n            var attr = createAttributes(options);\n            attr = addIdAttribute(container, attr);\n\n            $('<input type=\"number\"/>').attr(attr).appendTo(container);\n        },\n        \"date\": function(container, options) {\n            var attr = createAttributes(options);\n            attr = addIdAttribute(container, attr);\n\n            $('<input type=\"date\"/>').attr(attr).appendTo(container);\n        },\n        \"string\": function(container, options) {\n            var attr = createAttributes(options);\n            attr = addIdAttribute(container, attr);\n\n            $('<input type=\"text\" />').attr(attr).appendTo(container);\n        },\n        \"boolean\": function(container, options) {\n            var attr = createAttributes(options);\n            attr = addIdAttribute(container, attr);\n\n            $('<input type=\"checkbox\" />').attr(attr).appendTo(container);\n        },\n        \"values\": function(container, options) {\n            var attr = createAttributes(options);\n            var items = options.values;\n            var select = $('<select />');\n\n            attr = addIdAttribute(container, attr);\n\n            for (var index in items) {\n                $('<option value=\"' + items[index].value + '\">' + items[index].text + '</option>').appendTo(select);\n            }\n\n            select.attr(attr).appendTo(container);\n        }\n    };\n\n    function addValidationRules(modelField, rules) {\n        var validation = modelField ? (modelField.validation || {}) : {},\n            rule,\n            descriptor;\n\n        for (rule in validation) {\n            descriptor = validation[rule];\n\n            if (isPlainObject(descriptor) && descriptor.value) {\n                descriptor = descriptor.value;\n            }\n\n            if (isFunction(descriptor)) {\n                rules[rule] = descriptor;\n            }\n        }\n    }\n\n    function renderHiddenForMvcCheckbox(tag, container, field) {\n        var addHidden = field ? (field.shouldRenderHidden || false) : false;\n\n        if (addHidden) {\n            tag.val(true);\n            container.append($(\"<input type='hidden' name='\" + field.field + \"' value='false' data-skip='true' data-validate='false'/>\"));\n        }\n    }\n\n    var Editable = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            if (options.target) {\n                if (options.target.pane) {\n                    that._isMobile = true;\n                }\n            }\n            Widget.fn.init.call(that, element, options);\n            that._validateProxy = that._validate.bind(that);\n            that.refresh();\n        },\n\n        events: [CHANGE],\n\n        options: {\n            name: \"Editable\",\n            editors: editors,\n            mobileEditors: mobileEditors,\n            clearContainer: true,\n            validateOnBlur: true,\n            validationSummary: false,\n            errorTemplate: ERRORTEMPLATE,\n            skipFocus: false,\n            size: \"medium\"\n        },\n\n        editor: function(field, modelField) {\n            var that = this,\n                editors = that._isMobile ? mobileEditors : that.options.editors,\n                isObject = isPlainObject(field),\n                fieldName = isObject ? field.field : field,\n                model = that.options.model || {},\n                isValuesEditor = isObject && field.values,\n                type = isValuesEditor ? \"values\" : fieldType(modelField),\n                isHidden = isObject && typeof field.editor === \"string\" && field.editor === \"hidden\",\n                isCustomEditor = isObject && !isHidden && field.editor,\n                isKendoEditor = isObject && $.inArray(field.editor, kendoEditors) !== -1,\n                editor = isCustomEditor ? field.editor : editors[isHidden ? \"hidden\" : type],\n                container = that.element.find(\"[\" + kendo.attr(\"container-for\") + \"=\" + fieldName.replace(nameSpecialCharRegExp, \"\\\\$1\") + \"]\"),\n                op;\n\n            editor = editor ? editor : editors.string;\n\n            if (isKendoEditor) {\n                editor = editors.kendoEditor;\n            } else if (isCustomEditor && typeof field.editor === \"string\") {\n                editor = function(container) {\n                    container.append(field.editor);\n                };\n            }\n\n            if (!isObject) {\n                op = {\n                    field: fieldName,\n                    editorOptions: {\n                        size: that.options.size\n                    }\n                };\n            } else {\n                if (!field.editorOptions) {\n                    field.editorOptions = {};\n                }\n\n                field.editorOptions = extend({}, { size: that.options.size }, field.editorOptions);\n                op = field;\n            }\n\n            container = container.length ? container : that.element;\n            editor(container, extend(true, {}, op, { model: model }));\n        },\n\n        _validate: function(e) {\n            var that = this,\n                input,\n                value = e.value,\n                preventChangeTrigger = that._validationEventInProgress,\n                values = {},\n                bindAttribute = kendo.attr(\"bind\"),\n                fieldName = e.field.replace(nameSpecialCharRegExp, \"\\\\$1\"),\n                bindingRegex = new RegExp(\"(value|checked)\\\\s*:\\\\s*\" + fieldName + \"\\\\s*(,|$)\");\n\n            values[e.field] = e.value;\n\n            input = $(':input[' + bindAttribute + '*=\"' + fieldName + '\"]', that.element)\n                .filter(\"[\" + kendo.attr(\"validate\") + \"!='false']\").filter(function() {\n                   return bindingRegex.test($(this).attr(bindAttribute));\n                });\n            if (input.length > 1) {\n                input = input.filter(function() {\n                    var element = $(this);\n                    return !element.is(\":radio\") || element.val() == value;\n                });\n            }\n\n            try {\n                that._validationEventInProgress = true;\n\n                if (!that.validatable.validateInput(input) || (!preventChangeTrigger && that.trigger(CHANGE, { values: values }))) {\n                    e.preventDefault();\n                }\n\n            } finally {\n                that._validationEventInProgress = false;\n            }\n        },\n\n        end: function() {\n            return this.validatable.validate();\n        },\n\n        destroy: function() {\n            var that = this;\n\n            Widget.fn.destroy.call(that);\n\n            that.options.model.unbind(\"set\", that._validateProxy);\n            that.options.model.unbind(EQUAL_SET, that._validateProxy);\n\n            kendo.unbind(that.element);\n\n            if (that.validatable) {\n                that.validatable.destroy();\n            }\n            kendo.destroy(that.element);\n\n            that.element.removeData(\"kendoValidator\");\n\n            if (that.element.is(\"[\" + kendo.attr(\"role\") + \"=editable]\")) {\n                that.element.removeAttr(kendo.attr(\"role\"));\n            }\n        },\n\n        refresh: function() {\n            var that = this,\n                idx,\n                length,\n                fields = that.options.fields || [],\n                container = that.options.clearContainer ? that.element.empty() : that.element,\n                model = that.options.model || {},\n                rules = {},\n                field,\n                isObject,\n                fieldName,\n                modelField,\n                modelFields;\n\n            if (!Array.isArray(fields)) {\n                fields = [fields];\n            }\n\n            for (idx = 0, length = fields.length; idx < length; idx++) {\n                 field = fields[idx];\n                 isObject = isPlainObject(field);\n                 fieldName = isObject ? field.field : field;\n                 modelField = (model.fields || model)[fieldName];\n\n                 addValidationRules(modelField, rules);\n\n                 that.editor(field, modelField);\n            }\n\n            if (!length) {\n                modelFields = model.fields || model;\n                for (fieldName in modelFields) {\n                    addValidationRules(modelFields[fieldName], rules);\n               }\n            }\n\n            convertToValueBinding(container);\n\n            if (that.validatable) {\n                that.validatable.destroy();\n            }\n\n            kendo.bind(container, that.options.model);\n\n            if (that.options.validateOnBlur) {\n                that.options.model\n                    .unbind(\"set\", that._validateProxy)\n                    .bind(\"set\", that._validateProxy);\n\n                that.options.model\n                    .unbind(EQUAL_SET, that._validateProxy)\n                    .bind(EQUAL_SET, that._validateProxy);\n            }\n\n            that.validatable = new kendo.ui.Validator(container, {\n                validateOnBlur: that.options.validateOnBlur,\n                validationSummary: that.options.validationSummary,\n                errorTemplate: that.options.errorTemplate || undefined$1,\n                rules: rules });\n\n            if (!that.options.skipFocus) {\n                container.find(\":kendoFocusable\").eq(0).trigger(\"focus\");\n            }\n        }\n   });\n\n   Editable.antiForgeryTokenName = \"__RequestVerificationToken\";\n\n   ui.plugin(Editable);\n})(__webpack_provided_window_dot_kendo.jQuery);\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.editable.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.floatinglabel.js":
/*!***************************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.floatinglabel.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\nvar __meta__ = {\n    id: \"floatinglabel\",\n    name: \"FloatingLabel\",\n    category: \"framework\",\n    depends: [\"core\"],\n    hidden: true\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        Widget = kendo.ui.Widget,\n        ui = kendo.ui,\n        NS = \".kendoFloatingLabel\",\n        FLOATINGLABELCONTAINER = \"k-floating-label-container\",\n        EMPTY = \"k-empty\",\n        FOCUSED = \"k-focus\",\n        STATEDISABLED = \"k-disabled\",\n        STATEREADONLY = \"k-readonly\",\n        FLOATINGLABEL_OFFSET_Y = \"--kendo-floating-label-offset-y\",\n        FLOATINGLABEL_OFFSET_X = \"--kendo-floating-label-offset-x\",\n        FLOATINGLABEL_FOCUS_OFFSET_Y = \"--kendo-floating-label-focus-offset-y\",\n        FLOATINGLABEL_FOCUS_OFFSET_X = \"--kendo-floating-label-focus-offset-x\";\n\n    var FloatingLabel = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n            options = $.extend(true, {}, options);\n\n            that.widget = that.options.widget;\n            that.widgetWrapper = that.widget.wrapper[0];\n\n            that.refresh();\n            that._editable({\n                readonly: that.options.widget.options.readonly !== undefined$1 ? that.options.widget.options.readonly : false,\n                disable: that.options.widget.options.enable !== undefined$1 ? !(that.options.widget.options.enable) : false\n            });\n\n            if (that.widgetWrapper.style.width) {\n                that.element.css(\"width\", that.widgetWrapper.style.width);\n                that.widgetWrapper.style.width = \"100%\";\n            }\n\n            that.element.addClass(FLOATINGLABELCONTAINER);\n\n            kendo.notify(that);\n        },\n\n        options: {\n            name: 'FloatingLabel',\n            widget: null,\n            floatCheck: ({ element }) => !element.val()\n        },\n\n        readonly: function(readonly) {\n            this._editable({\n                readonly: readonly === undefined$1 ? true : readonly,\n                disable: false\n            });\n        },\n\n        enable: function(enable) {\n            this._editable({\n                readonly: false,\n                disable: !(enable = enable === undefined$1 ? true : enable)\n            });\n        },\n\n        refresh: function() {\n            var that = this;\n            var element = that.element;\n            var inputInner = that.options.widget.wrapper.find(\".k-input-inner\");\n            if (inputInner.length > 0) {\n                var labelHeight = that.element.find(\"> .k-floating-label\").height();\n                var offsetX = inputInner.position().left + Number.parseInt(inputInner.css('padding-left'));\n                var offsetY = inputInner.position().top + Number.parseInt(inputInner.css('padding-top')) + labelHeight;\n                element[0].style.setProperty(FLOATINGLABEL_OFFSET_X, offsetX + \"px\");\n                element[0].style.setProperty(FLOATINGLABEL_OFFSET_Y, offsetY + \"px\");\n            }\n\n            element\n                .removeClass(EMPTY)\n                .removeClass(FOCUSED);\n\n            if (that.options.floatCheck({ element: that.options.widget.element, floating: that.element })) {\n                element.addClass(EMPTY);\n            }\n\n            if (document.activeElement === that.options.widget.element[0]\n                || (that.options.widget.input && document.activeElement === that.options.widget.input[0])) {\n\n                element.addClass(FOCUSED);\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n\n            that.element.off(NS);\n            Widget.fn.destroy.call(that);\n        },\n\n        _editable: function(options) {\n            var that = this;\n            var element = that.element;\n            var disable = options.disable;\n            var readonly = options.readonly;\n\n            element.off(NS);\n\n            if (!readonly && !disable) {\n                element\n                    .removeClass(STATEDISABLED)\n                    .removeClass(STATEREADONLY);\n\n                element.on(\"focusin\" + NS, that.refresh.bind(that));\n                element.on(\"focusout\" + NS, that.refresh.bind(that));\n            } else {\n                element\n                    .toggleClass(STATEDISABLED, disable)\n                    .toggleClass(STATEREADONLY, readonly);\n            }\n        }\n    });\n    ui.plugin(FloatingLabel);\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.floatinglabel.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.fx.js":
/*!****************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.fx.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\nlet __meta__ = {\n    id: \"fx\",\n    name: \"Effects\",\n    category: \"framework\",\n    description: \"Required for animation effects in all Kendo UI widgets.\",\n    depends: [ \"core\" ]\n};\n\n(function($, undefined$1) {\n    let kendo = __webpack_provided_window_dot_kendo,\n        fx = kendo.effects,\n        each = $.each,\n        extend = $.extend,\n        support = kendo.support,\n        matrix3dRegExp = /matrix3?d?\\s*\\(.*,\\s*([\\d\\.\\-]+)\\w*?,\\s*([\\d\\.\\-]+)\\w*?,\\s*([\\d\\.\\-]+)\\w*?,\\s*([\\d\\.\\-]+)\\w*?/i,\n        translateXRegExp = /translatex?$/i,\n        oldEffectsRegExp = /(zoom|fade|expand)(\\w+)/,\n        singleEffectRegExp = /(zoom|fade|expand)/,\n        transformProps = [\"perspective\", \"rotate\", \"rotatex\", \"rotatey\", \"rotatez\", \"rotate3d\", \"scale\", \"scalex\", \"scaley\", \"scalez\", \"scale3d\", \"skew\", \"skewx\", \"skewy\", \"translate\", \"translatex\", \"translatey\", \"translatez\", \"translate3d\", \"matrix\", \"matrix3d\"],\n        transform2d = [\"rotate\", \"scale\", \"scalex\", \"scaley\", \"skew\", \"skewx\", \"skewy\", \"translate\", \"translatex\", \"translatey\", \"matrix\"],\n        round = Math.round,\n        BLANK = \"\",\n        PX = \"px\",\n        NONE = \"none\",\n        AUTO = \"auto\",\n        WIDTH = \"width\",\n        HEIGHT = \"height\",\n        HIDDEN = \"hidden\",\n        ORIGIN = \"origin\",\n        ABORT_ID = \"abortId\",\n        OVERFLOW = \"overflow\",\n        POSITION = \"position\",\n        COMPLETE_CALLBACK = \"completeCallback\",\n        TRANSITIONEND = \"transitionend\",\n        TRANSITION = \"transition\",\n        TRANSFORM = \"transform\",\n        BACKFACE = \"backface-visibility\",\n        PERSPECTIVE = \"perspective\",\n        DEFAULT_PERSPECTIVE = \"1500px\",\n        TRANSFORM_PERSPECTIVE = \"perspective(\" + DEFAULT_PERSPECTIVE + \")\",\n        directions = {\n            left: {\n                reverse: \"right\",\n                property: \"left\",\n                transition: \"translatex\",\n                vertical: false,\n                modifier: -1\n            },\n            right: {\n                reverse: \"left\",\n                property: \"left\",\n                transition: \"translatex\",\n                vertical: false,\n                modifier: 1\n            },\n            down: {\n                reverse: \"up\",\n                property: \"top\",\n                transition: \"translatey\",\n                vertical: true,\n                modifier: 1\n            },\n            up: {\n                reverse: \"down\",\n                property: \"top\",\n                transition: \"translatey\",\n                vertical: true,\n                modifier: -1\n            },\n            top: {\n                reverse: \"bottom\"\n            },\n            bottom: {\n                reverse: \"top\"\n            },\n            \"in\": {\n                reverse: \"out\",\n                modifier: -1\n            },\n            out: {\n                reverse: \"in\",\n                modifier: 1\n            },\n\n            vertical: {\n                reverse: \"vertical\"\n            },\n\n            horizontal: {\n                reverse: \"horizontal\"\n            }\n        };\n\n    kendo.directions = directions;\n\n    extend($.fn, {\n        kendoStop: function(clearQueue, gotoEnd) {\n            return fx.stopQueue(this, clearQueue || false, gotoEnd || false);\n        }\n    });\n\n    kendo.toggleClass = function(element, classes, options, add) {\n        if (classes) {\n            classes = classes.split(\" \");\n\n            options = extend({\n                exclusive: \"all\",\n                duration: 400,\n                ease: \"ease-out\"\n            }, options);\n\n            element.css(TRANSITION, options.exclusive + \" \" + options.duration + \"ms \" + options.ease);\n            setTimeout(function() {\n                element.css(TRANSITION, \"\").css(HEIGHT);\n            }, options.duration); // TODO: this should fire a kendoAnimate session instead.\n\n            each(classes, function(idx, value) {\n                element.toggleClass(value, add);\n            });\n        }\n\n        return element;\n    };\n\n    kendo.parseEffects = function(input, mirror) {\n        var effects = {};\n\n        if (typeof input === \"string\") {\n            each(input.split(\" \"), function(idx, value) {\n                var redirectedEffect = !singleEffectRegExp.test(value),\n                    resolved = value.replace(oldEffectsRegExp, function(match, $1, $2) {\n                        return $1 + \":\" + $2.toLowerCase();\n                    }), // Support for old zoomIn/fadeOut style, now deprecated.\n                    effect = resolved.split(\":\"),\n                    direction = effect[1],\n                    effectBody = {};\n\n                if (effect.length > 1) {\n                    effectBody.direction = (mirror && redirectedEffect ? directions[direction].reverse : direction);\n                }\n\n                effects[effect[0]] = effectBody;\n            });\n        } else {\n            each(input, function(idx) {\n                var direction = this.direction;\n\n                if (direction && mirror && !singleEffectRegExp.test(idx)) {\n                    this.direction = directions[direction].reverse;\n                }\n\n                effects[idx] = this;\n            });\n        }\n\n        return effects;\n    };\n\n    function parseInteger(value) {\n        return parseInt(value, 10);\n    }\n\n    function parseCSS(element, property) {\n        return parseInteger(element.css(property));\n    }\n\n    function keys(obj) {\n        var acc = [];\n        for (var propertyName in obj) {\n            acc.push(propertyName);\n        }\n        return acc;\n    }\n\n    function strip3DTransforms(properties) {\n        for (var key in properties) {\n            if (transformProps.indexOf(key) != -1 && transform2d.indexOf(key) == -1) {\n                delete properties[key];\n            }\n        }\n\n        return properties;\n    }\n\n    function normalizeCSS(element, properties) {\n        var transformation = [], cssValues = {}, lowerKey, key, value, isTransformed;\n\n        for (key in properties) {\n            lowerKey = key.toLowerCase();\n            isTransformed = transformProps.indexOf(lowerKey) != -1;\n\n            if (!support.hasHW3D && isTransformed && transform2d.indexOf(lowerKey) == -1) {\n                delete properties[key];\n            } else {\n                value = properties[key];\n\n                if (isTransformed) {\n                    transformation.push(key + \"(\" + value + \")\");\n                } else {\n                    cssValues[key] = value;\n                }\n            }\n        }\n\n        if (transformation.length) {\n            cssValues[TRANSFORM] = transformation.join(\" \");\n        }\n\n        return cssValues;\n    }\n\n    extend(fx, {\n        transition: function(element, properties, options) {\n            let css,\n                delay = 0,\n                oldKeys = element.data(\"keys\") || [],\n                timeoutID;\n\n            options = extend({\n                duration: 200,\n                ease: \"ease-out\",\n                complete: null,\n                exclusive: \"all\"\n            },\n                options\n            );\n\n            let stopTransitionCalled = false;\n\n            let stopTransition = function() {\n                if (!stopTransitionCalled) {\n                    stopTransitionCalled = true;\n\n                    if (timeoutID) {\n                        clearTimeout(timeoutID);\n                        timeoutID = null;\n                    }\n\n                    element\n                        .removeData(ABORT_ID)\n                        .dequeue()\n                        .css(TRANSITION, \"\")\n                        .css(TRANSITION);\n\n                    options.complete.call(element);\n                }\n            };\n\n            options.duration = $.fx ? $.fx.speeds[options.duration] || options.duration : options.duration;\n\n            css = normalizeCSS(element, properties);\n\n            $.merge(oldKeys, keys(css));\n\n            if ($.hasOwnProperty(\"uniqueSort\")) {\n                element\n                    .data(\"keys\", $.uniqueSort(oldKeys))\n                    .height();\n            } else {\n                element\n                    .data(\"keys\", $.unique(oldKeys))\n                    .height();\n            }\n\n            element.css(TRANSITION, options.exclusive + \" \" + options.duration + \"ms \" + options.ease).css(TRANSITION);\n            element.css(css).css(TRANSFORM);\n\n            /**\n             * Use transitionEnd event for browsers who support it - but duplicate it with setTimeout, as the transitionEnd event will not be triggered if no CSS properties change.\n             * This should be cleaned up at some point (widget by widget), and refactored to widgets not relying on the complete callback if no transition occurs.\n             *\n             * For IE9 and below, resort to setTimeout.\n             */\n            element.one(TRANSITIONEND, stopTransition);\n            if (options.duration !== 0) {\n                delay = 500;\n            }\n\n            timeoutID = setTimeout(stopTransition, options.duration + delay);\n            element.data(ABORT_ID, timeoutID);\n            element.data(COMPLETE_CALLBACK, stopTransition);\n        },\n\n        stopQueue: function(element, clearQueue, gotoEnd) {\n            var cssValues,\n                taskKeys = element.data(\"keys\"),\n                retainPosition = (!gotoEnd && taskKeys),\n                completeCallback = element.data(COMPLETE_CALLBACK);\n\n            if (retainPosition) {\n                cssValues = kendo.getComputedStyles(element[0], taskKeys);\n            }\n\n            if (completeCallback) {\n                completeCallback();\n            }\n\n            if (retainPosition) {\n                element.css(cssValues);\n            }\n\n            return element\n                .removeData(\"keys\")\n                .stop(clearQueue);\n        }\n    });\n\n    function animationProperty(element, property) {\n        let transform = element.css(TRANSFORM);\n        if (transform == NONE) {\n            return property == \"scale\" ? 1 : 0;\n        }\n\n        let match = transform.match(new RegExp(property + \"\\\\s*\\\\(([\\\\d\\\\w\\\\.]+)\")),\n            computed = 0;\n\n        if (match) {\n            computed = parseInteger(match[1]);\n        } else {\n            match = transform.match(matrix3dRegExp) || [0, 0, 0, 0, 0];\n            property = property.toLowerCase();\n\n            if (translateXRegExp.test(property)) {\n                computed = parseFloat(match[3] / match[2]);\n            } else if (property == \"translatey\") {\n                computed = parseFloat(match[4] / match[2]);\n            } else if (property == \"scale\") {\n                computed = parseFloat(match[2]);\n            } else if (property == \"rotate\") {\n                computed = parseFloat(Math.atan2(match[2], match[1]));\n            }\n        }\n\n        return computed;\n    }\n\n    var EffectSet = kendo.Class.extend({\n        init: function(element, options) {\n            var that = this;\n\n            that.element = element;\n            that.effects = [];\n            that.options = options;\n            that.restore = [];\n        },\n\n        run: function(effects) {\n            let that = this,\n                effect,\n                idx, jdx,\n                length = effects.length,\n                element = that.element,\n                options = that.options,\n                deferred = $.Deferred(),\n                start = {},\n                end = {},\n                target,\n                children,\n                childrenLength;\n\n            that.effects = effects;\n\n            deferred.done(that.complete.bind(that));\n\n            element.data(\"animating\", true);\n\n            for (idx = 0; idx < length; idx ++) {\n                effect = effects[idx];\n\n                effect.setReverse(options.reverse);\n                effect.setOptions(options);\n\n                that.addRestoreProperties(effect.restore);\n\n                effect.prepare(start, end);\n\n                children = effect.children();\n\n                for (jdx = 0, childrenLength = children.length; jdx < childrenLength; jdx ++) {\n                    children[jdx].duration(options.duration).run();\n                }\n            }\n\n            // legacy support for options.properties\n            for (var effectName in options.effects) {\n                extend(end, options.effects[effectName].properties);\n            }\n\n            // Show the element initially\n            if (!element.is(\":visible\")) {\n                extend(start, { display: element.data(\"olddisplay\") || \"block\" });\n            }\n\n            if (!options.reset) {\n                target = element.data(\"targetTransform\");\n\n                if (target) {\n                    start = extend(target, start);\n                }\n            }\n\n            start = normalizeCSS(element, start);\n\n            element.css(start)\n                   .css(TRANSFORM); // Nudge\n\n            for (idx = 0; idx < length; idx ++) {\n                effects[idx].setup();\n            }\n\n            if (options.init) {\n                options.init();\n            }\n\n            element.data(\"targetTransform\", end);\n            fx.animate(element, end, extend({}, options, { complete: deferred.resolve }));\n\n            return deferred.promise();\n        },\n\n        stop: function() {\n            $(this.element).kendoStop(true, true);\n        },\n\n        addRestoreProperties: function(restore) {\n            var element = this.element,\n                value,\n                i = 0,\n                length = restore.length;\n\n            for (; i < length; i ++) {\n                value = restore[i];\n\n                this.restore.push(value);\n\n                if (!element.data(value)) {\n                    element.data(value, element.css(value));\n                }\n            }\n        },\n\n        restoreCallback: function() {\n            var element = this.element;\n\n            for (var i = 0, length = this.restore.length; i < length; i ++) {\n                var value = this.restore[i];\n                element.css(value, element.data(value));\n            }\n        },\n\n        complete: function() {\n            let that = this,\n                idx = 0,\n                element = that.element,\n                options = that.options,\n                effects = that.effects,\n                length = effects.length;\n\n            element\n                .removeData(\"animating\")\n                .dequeue(); // call next animation from the queue\n\n            if (options.hide) {\n                element.data(\"olddisplay\", element.css(\"display\")).hide();\n            }\n\n            this.restoreCallback();\n\n            for (; idx < length; idx ++) {\n                effects[idx].teardown();\n            }\n\n            if (options.completeCallback) {\n                options.completeCallback(element);\n            }\n        }\n    });\n\n    fx.promise = function(element, options) {\n        var effects = [],\n            effectClass,\n            effectSet = new EffectSet(element, options),\n            parsedEffects = kendo.parseEffects(options.effects),\n            effect;\n\n        options.effects = parsedEffects;\n\n        for (var effectName in parsedEffects) {\n            effectClass = fx[capitalize(effectName)];\n\n            if (effectClass) {\n                effect = new effectClass(element, parsedEffects[effectName].direction);\n                effects.push(effect);\n           }\n        }\n\n        if (effects[0]) {\n            effectSet.run(effects);\n        } else { // Not sure how would an fx promise reach this state - means that you call kendoAnimate with no valid effects? Why?\n            if (!element.is(\":visible\")) {\n                element.css({ display: element.data(\"olddisplay\") || \"block\" }).css(\"display\");\n            }\n\n            if (options.init) {\n                options.init();\n            }\n\n            element.dequeue();\n            effectSet.complete();\n        }\n    };\n\n    extend(fx, {\n        animate: function(elements, properties, options) {\n            let useTransition = options.transition !== false;\n            delete options.transition;\n\n            if (\"transition\" in fx && useTransition) {\n                fx.transition(elements, properties, options);\n            } else {\n                elements.animate(strip3DTransforms(properties), { queue: false, show: false, hide: false, duration: options.duration, complete: options.complete }); // Stop animate from showing/hiding the element to be able to hide it later on.\n            }\n        }\n    });\n\n    fx.animatedPromise = fx.promise;\n\n    var Effect = kendo.Class.extend({\n        init: function(element, direction) {\n            var that = this;\n            that.element = element;\n            that._direction = direction;\n            that.options = {};\n            that._additionalEffects = [];\n\n            if (!that.restore) {\n                that.restore = [];\n            }\n        },\n\n// Public API\n        reverse: function() {\n            this._reverse = true;\n            return this.run();\n        },\n\n        play: function() {\n            this._reverse = false;\n            return this.run();\n        },\n\n        add: function(additional) {\n            this._additionalEffects.push(additional);\n            return this;\n        },\n\n        direction: function(value) {\n            this._direction = value;\n            return this;\n        },\n\n        duration: function(duration) {\n            this._duration = duration;\n            return this;\n        },\n\n        compositeRun: function() {\n            var that = this,\n                effectSet = new EffectSet(that.element, { reverse: that._reverse, duration: that._duration }),\n                effects = that._additionalEffects.concat([ that ]);\n\n            return effectSet.run(effects);\n        },\n\n        run: function() {\n            if (this._additionalEffects && this._additionalEffects[0]) {\n                return this.compositeRun();\n            }\n\n            let that = this,\n                element = that.element,\n                idx = 0,\n                restore = that.restore,\n                length = restore.length,\n                value,\n                deferred = $.Deferred(),\n                start = {},\n                end = {},\n                target,\n                children = that.children(),\n                childrenLength = children.length;\n\n            deferred.done(that._complete.bind(that));\n\n            element.data(\"animating\", true);\n\n            for (idx = 0; idx < length; idx ++) {\n                value = restore[idx];\n\n                if (!element.data(value)) {\n                    element.data(value, element.css(value));\n                }\n            }\n\n            for (idx = 0; idx < childrenLength; idx ++) {\n                children[idx].duration(that._duration).run();\n            }\n\n            that.prepare(start, end);\n\n            if (!element.is(\":visible\")) {\n                extend(start, { display: element.data(\"olddisplay\") || \"block\" });\n            }\n\n            target = element.data(\"targetTransform\");\n\n            if (target) {\n                start = extend(target, start);\n            }\n\n            start = normalizeCSS(element, start);\n\n            element.css(start).css(TRANSFORM); // Trick webkit into re-rendering\n\n            that.setup();\n\n            element.data(\"targetTransform\", end);\n            fx.animate(element, end, { duration: that._duration, complete: deferred.resolve });\n\n            return deferred.promise();\n        },\n\n        stop: function() {\n            var idx = 0,\n                children = this.children(),\n                childrenLength = children.length;\n\n            for (idx = 0; idx < childrenLength; idx ++) {\n                children[idx].stop();\n            }\n\n            $(this.element).kendoStop(true, true);\n            return this;\n        },\n\n        restoreCallback: function() {\n            var element = this.element;\n\n            for (var i = 0, length = this.restore.length; i < length; i ++) {\n                var value = this.restore[i];\n                element.css(value, element.data(value));\n            }\n        },\n\n        _complete: function() {\n            let that = this,\n                element = that.element;\n\n            element\n                .removeData(\"animating\")\n                .dequeue(); // call next animation from the queue\n\n            that.restoreCallback();\n\n            if (that.shouldHide()) {\n                element.data(\"olddisplay\", element.css(\"display\")).hide();\n            }\n\n            that.teardown();\n        },\n\n        /////////////////////////// Support for kendo.animate;\n        setOptions: function(options) {\n            extend(true, this.options, options);\n        },\n\n        children: function() {\n            return [];\n        },\n\n        shouldHide: $.noop,\n\n        setup: $.noop,\n        prepare: $.noop,\n        teardown: $.noop,\n        directions: [],\n\n        setReverse: function(reverse) {\n            this._reverse = reverse;\n            return this;\n        }\n    });\n\n    function capitalize(word) {\n        return word.charAt(0).toUpperCase() + word.substring(1);\n    }\n\n    function createEffect(name, definition) {\n        var effectClass = Effect.extend(definition),\n            directions = effectClass.prototype.directions;\n\n        fx[capitalize(name)] = effectClass;\n\n        fx.Element.prototype[name] = function(direction, opt1, opt2, opt3) {\n            return new effectClass(this.element, direction, opt1, opt2, opt3);\n        };\n\n        each(directions, function(idx, theDirection) {\n            fx.Element.prototype[name + capitalize(theDirection)] = function(opt1, opt2, opt3) {\n                return new effectClass(this.element, theDirection, opt1, opt2, opt3);\n            };\n        });\n    }\n\n    var FOUR_DIRECTIONS = [\"left\", \"right\", \"up\", \"down\"],\n        IN_OUT = [\"in\", \"out\"];\n\n    createEffect(\"slideIn\", {\n        directions: FOUR_DIRECTIONS,\n\n        divisor: function(value) {\n            this.options.divisor = value;\n            return this;\n        },\n\n        prepare: function(start, end) {\n            let that = this,\n                tmp,\n                element = that.element,\n                outerWidth = kendo._outerWidth,\n                outerHeight = kendo._outerHeight,\n                direction = directions[that._direction],\n                offset = -direction.modifier * (direction.vertical ? outerHeight(element) : outerWidth(element)),\n                startValue = offset / (that.options && that.options.divisor || 1) + PX,\n                endValue = \"0px\";\n\n            if (that._reverse) {\n                tmp = start;\n                start = end;\n                end = tmp;\n            }\n\n            start[direction.transition] = startValue;\n            end[direction.transition] = endValue;\n        }\n    });\n\n    createEffect(\"tile\", {\n        directions: FOUR_DIRECTIONS,\n\n        init: function(element, direction, previous) {\n            Effect.prototype.init.call(this, element, direction);\n            this.options = { previous: previous };\n        },\n\n        previousDivisor: function(value) {\n            this.options.previousDivisor = value;\n            return this;\n        },\n\n        children: function() {\n            var that = this,\n                reverse = that._reverse,\n                previous = that.options.previous,\n                divisor = that.options.previousDivisor || 1,\n                dir = that._direction;\n\n            var children = [ kendo.fx(that.element).slideIn(dir).setReverse(reverse) ];\n\n            if (previous) {\n                children.push( kendo.fx(previous).slideIn(directions[dir].reverse).divisor(divisor).setReverse(!reverse) );\n            }\n\n            return children;\n        }\n    });\n\n    function createToggleEffect(name, property, defaultStart, defaultEnd) {\n        createEffect(name, {\n            directions: IN_OUT,\n\n            startValue: function(value) {\n                this._startValue = value;\n                return this;\n            },\n\n            endValue: function(value) {\n                this._endValue = value;\n                return this;\n            },\n\n            shouldHide: function() {\n               return this._shouldHide;\n            },\n\n            prepare: function(start, end) {\n                var that = this,\n                    startValue,\n                    endValue,\n                    out = this._direction === \"out\",\n                    startDataValue = that.element.data(property),\n                    startDataValueIsSet = !(isNaN(startDataValue) || startDataValue == defaultStart);\n\n                if (startDataValueIsSet) {\n                    startValue = startDataValue;\n                } else if (typeof this._startValue !== \"undefined\") {\n                    startValue = this._startValue;\n                } else {\n                    startValue = out ? defaultStart : defaultEnd;\n                }\n\n                if (typeof this._endValue !== \"undefined\") {\n                    endValue = this._endValue;\n                } else {\n                    endValue = out ? defaultEnd : defaultStart;\n                }\n\n                if (this._reverse) {\n                    start[property] = endValue;\n                    end[property] = startValue;\n                } else {\n                    start[property] = startValue;\n                    end[property] = endValue;\n                }\n\n                that._shouldHide = end[property] === defaultEnd;\n            }\n        });\n    }\n\n    createToggleEffect(\"fade\", \"opacity\", 1, 0);\n    createToggleEffect(\"zoom\", \"scale\", 1, 0.01);\n\n    createEffect(\"slideMargin\", {\n        prepare: function(start, end) {\n            var that = this,\n                element = that.element,\n                options = that.options,\n                origin = element.data(ORIGIN),\n                offset = options.offset,\n                margin,\n                reverse = that._reverse;\n\n            if (!reverse && origin === null) {\n                element.data(ORIGIN, parseFloat(element.css(\"margin-\" + options.axis)));\n            }\n\n            margin = (element.data(ORIGIN) || 0);\n            end[\"margin-\" + options.axis] = !reverse ? margin + offset : margin;\n        }\n    });\n\n    createEffect(\"slideTo\", {\n        prepare: function(start, end) {\n            let that = this,\n                element = that.element,\n                options = that.options,\n                offset = options.offset.split(\",\"),\n                reverse = that._reverse;\n\n            end.translatex = !reverse ? offset[0] : 0;\n            end.translatey = !reverse ? offset[1] : 0;\n\n            element.css(\"left\");\n        }\n    });\n\n    createEffect(\"expand\", {\n        directions: [\"horizontal\", \"vertical\"],\n\n        restore: [ OVERFLOW ],\n\n        prepare: function(start, end) {\n            var that = this,\n                element = that.element,\n                options = that.options,\n                reverse = that._reverse,\n                property = that._direction === \"vertical\" ? HEIGHT : WIDTH,\n                setLength = element[0].style[property],\n                oldLength = element.data(property),\n                length = parseFloat(oldLength || setLength),\n                realLength = round(element.css(property, AUTO)[property]());\n\n            start.overflow = HIDDEN;\n\n            length = (options && options.reset) ? realLength || length : length || realLength;\n\n            end[property] = (reverse ? 0 : length) + PX;\n            start[property] = (reverse ? length : 0) + PX;\n\n            if (oldLength === undefined$1) {\n                element.data(property, setLength);\n            }\n        },\n\n        shouldHide: function() {\n           return this._reverse;\n        },\n\n        teardown: function() {\n            var that = this,\n                element = that.element,\n                property = that._direction === \"vertical\" ? HEIGHT : WIDTH,\n                length = element.data(property);\n\n            if (length == AUTO || length === BLANK) {\n                setTimeout(function() { element.css(property, AUTO).css(property); }, 0); // jQuery animate complete callback in IE is called before the last animation step!\n            }\n        }\n    });\n\n    var TRANSFER_START_STATE = { position: \"absolute\", marginLeft: 0, marginTop: 0, scale: 1 };\n    /**\n     * Intersection point formulas are taken from here - http://zonalandeducation.com/mmts/intersections/intersectionOfTwoLines1/intersectionOfTwoLines1.html\n     * Formula for a linear function from two points from here - http://demo.activemath.org/ActiveMath2/search/show.cmd?id=mbase://AC_UK_calculus/functions/ex_linear_equation_two_points\n     * The transform origin point is the intersection point of the two lines from the top left corners/top right corners of the element and target.\n     * The math and variables below MAY BE SIMPLIFIED (zeroes removed), but this would make the formula too cryptic.\n     */\n    createEffect(\"transfer\", {\n        init: function(element, target) {\n            this.element = element;\n            this.options = { target: target };\n            this.restore = [];\n        },\n\n        setup: function() {\n            this.element.appendTo(document.body);\n        },\n\n        prepare: function(start, end) {\n            var that = this,\n                element = that.element,\n                outerBox = fx.box(element),\n                innerBox = fx.box(that.options.target),\n                currentScale = animationProperty(element, \"scale\"),\n                scale = fx.fillScale(innerBox, outerBox),\n                transformOrigin = fx.transformOrigin(innerBox, outerBox);\n\n            extend(start, TRANSFER_START_STATE);\n            end.scale = 1;\n\n            element.css(TRANSFORM, \"scale(1)\").css(TRANSFORM);\n            element.css(TRANSFORM, \"scale(\" + currentScale + \")\");\n\n            start.top = outerBox.top;\n            start.left = outerBox.left;\n            start.transformOrigin = transformOrigin.x + PX + \" \" + transformOrigin.y + PX;\n\n            if (that._reverse) {\n                start.scale = scale;\n            } else {\n                end.scale = scale;\n            }\n        }\n    });\n\n\n    var CLIPS = {\n        top: \"rect(auto auto $size auto)\",\n        bottom: \"rect($size auto auto auto)\",\n        left: \"rect(auto $size auto auto)\",\n        right: \"rect(auto auto auto $size)\"\n    };\n\n    var ROTATIONS = {\n        top: { start: \"rotatex(0deg)\", end: \"rotatex(180deg)\" },\n        bottom: { start: \"rotatex(-180deg)\", end: \"rotatex(0deg)\" },\n        left: { start: \"rotatey(0deg)\", end: \"rotatey(-180deg)\" },\n        right: { start: \"rotatey(180deg)\", end: \"rotatey(0deg)\" }\n    };\n\n    function clipInHalf(container, direction) {\n        var vertical = kendo.directions[direction].vertical,\n            size = (container[vertical ? HEIGHT : WIDTH]() / 2) + \"px\";\n\n        return CLIPS[direction].replace(\"$size\", size);\n    }\n\n    createEffect(\"turningPage\", {\n        directions: FOUR_DIRECTIONS,\n\n        init: function(element, direction, container) {\n            Effect.prototype.init.call(this, element, direction);\n            this._container = container;\n        },\n\n        prepare: function(start, end) {\n            var that = this,\n                reverse = that._reverse,\n                direction = reverse ? directions[that._direction].reverse : that._direction,\n                rotation = ROTATIONS[direction];\n\n            start.zIndex = 1;\n\n            if (that._clipInHalf) {\n               start.clip = clipInHalf(that._container, kendo.directions[direction].reverse);\n            }\n\n            start[BACKFACE] = HIDDEN;\n\n            end[TRANSFORM] = TRANSFORM_PERSPECTIVE + (reverse ? rotation.start : rotation.end);\n            start[TRANSFORM] = TRANSFORM_PERSPECTIVE + (reverse ? rotation.end : rotation.start);\n        },\n\n        setup: function() {\n            this._container.append(this.element);\n        },\n\n        face: function(value) {\n            this._face = value;\n            return this;\n        },\n\n        shouldHide: function() {\n            var that = this,\n                reverse = that._reverse,\n                face = that._face;\n\n            return (reverse && !face) || (!reverse && face);\n        },\n\n        clipInHalf: function(value) {\n            this._clipInHalf = value;\n            return this;\n        },\n\n        temporary: function() {\n            this.element.addClass('temp-page');\n            return this;\n        }\n    });\n\n    createEffect(\"staticPage\", {\n        directions: FOUR_DIRECTIONS,\n\n        init: function(element, direction, container) {\n            Effect.prototype.init.call(this, element, direction);\n            this._container = container;\n        },\n\n        restore: [\"clip\"],\n\n        prepare: function(start, end) {\n            var that = this,\n                direction = that._reverse ? directions[that._direction].reverse : that._direction;\n\n            start.clip = clipInHalf(that._container, direction);\n            start.opacity = 0.999;\n            end.opacity = 1;\n        },\n\n        shouldHide: function() {\n            var that = this,\n                reverse = that._reverse,\n                face = that._face;\n\n            return (reverse && !face) || (!reverse && face);\n        },\n\n        face: function(value) {\n            this._face = value;\n            return this;\n        }\n    });\n\n    createEffect(\"pageturn\", {\n        directions: [\"horizontal\", \"vertical\"],\n\n        init: function(element, direction, face, back) {\n            Effect.prototype.init.call(this, element, direction);\n            this.options = {};\n            this.options.face = face;\n            this.options.back = back;\n        },\n\n        children: function() {\n            var that = this,\n                options = that.options,\n                direction = that._direction === \"horizontal\" ? \"left\" : \"top\",\n                reverseDirection = kendo.directions[direction].reverse,\n                reverse = that._reverse,\n                temp,\n                faceClone = options.face.clone(true).removeAttr(\"id\"),\n                backClone = options.back.clone(true).removeAttr(\"id\"),\n                element = that.element;\n\n            if (reverse) {\n                temp = direction;\n                direction = reverseDirection;\n                reverseDirection = temp;\n            }\n\n            return [\n                kendo.fx(options.face).staticPage(direction, element).face(true).setReverse(reverse),\n                kendo.fx(options.back).staticPage(reverseDirection, element).setReverse(reverse),\n                kendo.fx(faceClone).turningPage(direction, element).face(true).clipInHalf(true).temporary().setReverse(reverse),\n                kendo.fx(backClone).turningPage(reverseDirection, element).clipInHalf(true).temporary().setReverse(reverse)\n            ];\n        },\n\n        prepare: function(start, end) {\n            start[PERSPECTIVE] = DEFAULT_PERSPECTIVE;\n            start.transformStyle = \"preserve-3d\";\n            // hack to trigger transition end.\n            start.opacity = 0.999;\n            end.opacity = 1;\n        },\n\n        teardown: function() {\n            this.element.find(\".temp-page\").remove();\n        }\n    });\n\n    createEffect(\"flip\", {\n        directions: [\"horizontal\", \"vertical\"],\n\n        init: function(element, direction, face, back) {\n            Effect.prototype.init.call(this, element, direction);\n            this.options = {};\n            this.options.face = face;\n            this.options.back = back;\n        },\n\n        children: function() {\n            var that = this,\n                options = that.options,\n                direction = that._direction === \"horizontal\" ? \"left\" : \"top\",\n                reverseDirection = kendo.directions[direction].reverse,\n                reverse = that._reverse,\n                temp,\n                element = that.element;\n\n            if (reverse) {\n                temp = direction;\n                direction = reverseDirection;\n                reverseDirection = temp;\n            }\n\n            return [\n                kendo.fx(options.face).turningPage(direction, element).face(true).setReverse(reverse),\n                kendo.fx(options.back).turningPage(reverseDirection, element).setReverse(reverse)\n            ];\n        },\n\n        prepare: function(start) {\n            start[PERSPECTIVE] = DEFAULT_PERSPECTIVE;\n            start.transformStyle = \"preserve-3d\";\n        }\n    });\n\n    var RESTORE_OVERFLOW = !support.mobileOS.android;\n    var IGNORE_TRANSITION_EVENT_SELECTOR = \".km-touch-scrollbar, .km-actionsheet-wrapper\";\n\n    createEffect(\"replace\", {\n        _before: $.noop,\n        _after: $.noop,\n        init: function(element, previous, transitionClass) {\n            Effect.prototype.init.call(this, element);\n            this._previous = $(previous);\n            this._transitionClass = transitionClass;\n        },\n\n        duration: function() {\n            throw new Error(\"The replace effect does not support duration setting; the effect duration may be customized through the transition class rule\");\n        },\n\n        beforeTransition: function(callback) {\n            this._before = callback;\n            return this;\n        },\n\n        afterTransition: function(callback) {\n            this._after = callback;\n            return this;\n        },\n\n        _both: function() {\n            return $().add(this._element).add(this._previous);\n        },\n\n        _containerClass: function() {\n            var direction = this._direction,\n                containerClass = \"k-fx k-fx-start k-fx-\" + this._transitionClass;\n\n            if (direction) {\n                containerClass += \" k-fx-\" + direction;\n            }\n\n            if (this._reverse) {\n                containerClass += \" k-fx-reverse\";\n            }\n\n            return containerClass;\n        },\n\n        complete: function(e) {\n            if (!this.deferred || (e && $(e.target).is(IGNORE_TRANSITION_EVENT_SELECTOR))) {\n                return;\n            }\n\n            var container = this.container;\n\n            container\n                .removeClass(\"k-fx-end\")\n                .removeClass(this._containerClass())\n                .off(TRANSITIONEND, this.completeProxy);\n\n            this._previous.hide().removeClass(\"k-fx-current\");\n            this.element.removeClass(\"k-fx-next\");\n\n            if (RESTORE_OVERFLOW) {\n                container.css(OVERFLOW, \"\");\n            }\n\n            if (!this.isAbsolute) {\n                this._both().css(POSITION, \"\");\n            }\n\n            this.deferred.resolve();\n            delete this.deferred;\n        },\n\n        run: function() {\n            if (this._additionalEffects && this._additionalEffects[0]) {\n                return this.compositeRun();\n            }\n\n            let that = this,\n                element = that.element,\n                previous = that._previous,\n                container = element.parents().filter(previous.parents()).first(),\n                both = that._both(),\n                deferred = $.Deferred(),\n                originalPosition = element.css(POSITION),\n                originalOverflow;\n\n            // edge case for grid/scheduler, where the previous is already destroyed.\n            if (!container.length) {\n                container = element.parent();\n            }\n\n            this.container = container;\n            this.deferred = deferred;\n            this.isAbsolute = originalPosition == \"absolute\";\n\n            if (!this.isAbsolute) {\n                both.css(POSITION, \"absolute\");\n            }\n\n            if (RESTORE_OVERFLOW) {\n                originalOverflow = container.css(OVERFLOW);\n                container.css(OVERFLOW, \"hidden\");\n            }\n\n            element.addClass(\"k-fx-hidden\");\n\n            container.addClass(this._containerClass());\n\n            this.completeProxy = this.complete.bind(this);\n            container.on(TRANSITIONEND, this.completeProxy);\n\n            kendo.animationFrame(function() {\n                element.removeClass(\"k-fx-hidden\").addClass(\"k-fx-next\");\n                previous.css(\"display\", \"\").addClass(\"k-fx-current\");\n                that._before(previous, element);\n                kendo.animationFrame(function() {\n                    container.removeClass(\"k-fx-start\").addClass(\"k-fx-end\");\n                    that._after(previous, element);\n                });\n            });\n\n            return deferred.promise();\n        },\n\n        stop: function() {\n            this.complete();\n        }\n    });\n\n    var Animation = kendo.Class.extend({\n        init: function() {\n            var that = this;\n            that._tickProxy = that._tick.bind(that);\n            that._started = false;\n        },\n\n        tick: $.noop,\n        done: $.noop,\n        onEnd: $.noop,\n        onCancel: $.noop,\n\n        start: function() {\n            if (!this.enabled()) {\n                return;\n            }\n\n            if (!this.done()) {\n                this._started = true;\n                kendo.animationFrame(this._tickProxy);\n            } else {\n                this.onEnd();\n            }\n        },\n\n        enabled: function() {\n            return true;\n        },\n\n        cancel: function() {\n            this._started = false;\n            this.onCancel();\n        },\n\n        _tick: function() {\n            var that = this;\n            if (!that._started) { return; }\n\n            that.tick();\n\n            if (!that.done()) {\n                kendo.animationFrame(that._tickProxy);\n            } else {\n                that._started = false;\n                that.onEnd();\n            }\n        }\n    });\n\n    var Transition = Animation.extend({\n        init: function(options) {\n            var that = this;\n            extend(that, options);\n            Animation.fn.init.call(that);\n        },\n\n        done: function() {\n            return this.timePassed() >= this.duration;\n        },\n\n        timePassed: function() {\n            return Math.min(this.duration, (new Date()) - this.startDate);\n        },\n\n        moveTo: function(options) {\n            var that = this,\n                movable = that.movable;\n\n            that.initial = movable[that.axis];\n            that.delta = options.location - that.initial;\n\n            that.duration = typeof options.duration == \"number\" ? options.duration : 300;\n\n            that.tick = that._easeProxy(options.ease);\n\n            that.startDate = new Date();\n            that.start();\n        },\n\n        _easeProxy: function(ease) {\n            var that = this;\n\n            return function() {\n                that.movable.moveAxis(that.axis, ease(that.timePassed(), that.initial, that.delta, that.duration));\n            };\n        }\n    });\n\n    extend(Transition, {\n        easeOutExpo: function(t, b, c, d) {\n            return (t == d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n        },\n\n        easeOutBack: function(t, b, c, d, s) {\n            s = 1.70158;\n            return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n        }\n    });\n\n    fx.Animation = Animation;\n    fx.Transition = Transition;\n    fx.createEffect = createEffect;\n\n    fx.box = function(element) {\n        element = $(element);\n        var result = element.offset();\n        result.width = kendo._outerWidth(element);\n        result.height = kendo._outerHeight(element);\n        return result;\n    };\n\n    fx.transformOrigin = function(inner, outer) {\n        var x = (inner.left - outer.left) * outer.width / (outer.width - inner.width),\n            y = (inner.top - outer.top) * outer.height / (outer.height - inner.height);\n\n        return {\n            x: isNaN(x) ? 0 : x,\n            y: isNaN(y) ? 0 : y\n        };\n    };\n\n    fx.fillScale = function(inner, outer) {\n        return Math.min(inner.width / outer.width, inner.height / outer.height);\n    };\n\n    fx.fitScale = function(inner, outer) {\n        return Math.max(inner.width / outer.width, inner.height / outer.height);\n    };\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.fx.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.html.base.js":
/*!***********************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.html.base.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\nvar __meta__ = {\n    id: \"html.base\",\n    name: \"Html.Base\",\n    category: \"web\",\n    description: \"\",\n    depends: [\"core\"],\n    features: []\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        Class = kendo.Class;\n\n    kendo.html = kendo.html || {};\n\n    var HTMLBase = Class.extend({\n        init: function(element, options) {\n            var that = this;\n            that.element = $(element);\n            options = options || {};\n            delete options.name;\n            that._initOptions(options);\n        },\n        options: {\n            stylingOptions: []\n        },\n        _addClasses: function() {\n            var that = this,\n                options = that.options,\n                stylingOptions = options.stylingOptions,\n                previouslyAddedClasses = that.wrapper.data(\"added-classes\");\n\n            stylingOptions = stylingOptions.map(function(option) {\n                var validFill;\n\n                if (option === \"themeColor\") {\n                    validFill = kendo.cssProperties.getValidClass({\n                        widget: options.name,\n                        propName: \"fillMode\",\n                        value: options.fillMode\n                    });\n\n                    if (!validFill || validFill.length === 0) {\n                        return \"\";\n                    }\n                }\n\n                return kendo.cssProperties.getValidClass({\n                    widget: options.name,\n                    propName: option,\n                    value: options[option],\n                    fill: options.fillMode\n                });\n            });\n\n            if (previouslyAddedClasses) {\n                that.wrapper.removeClass(previouslyAddedClasses.join(\" \"));\n            }\n\n            that.wrapper.data(\"added-classes\", stylingOptions);\n            that.wrapper.addClass(stylingOptions.join(\" \"));\n        },\n        html: function() {\n            var that = this;\n\n            return that.wrapper[0].outerHTML;\n        }\n    });\n\n    $.extend(kendo.html, {\n        HTMLBase: HTMLBase\n    });\n\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.html.base.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.html.button.js":
/*!*************************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.html.button.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_html_base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.html.base.js */ \"./node_modules/kendo-ui-core/esm/kendo.html.base.js\");\n/* harmony import */ var _kendo_icons_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.icons.js */ \"./node_modules/kendo-ui-core/esm/kendo.icons.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\nvar __meta__ = {\n    id: \"html.button\",\n    name: \"Html.Button\",\n    category: \"web\",\n    description: \"HTML rendering utility for Kendo UI for jQuery.\",\n    depends: [ \"html.base\", \"icons\" ],\n    features: []\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        HTMLBase = kendo.html.HTMLBase,\n\n        KBUTTON = \"k-button\",\n        KBUTTONICON = \"k-button-icon\",\n        KBUTTONTEXT = \"k-button-text\";\n\n    var renderButton = function(element, options) {\n        if (arguments[0] === undefined$1 || $.isPlainObject(arguments[0])) {\n            options = element;\n            element = $(\"<button></button>\");\n        }\n\n        return (new HTMLButton(element, options)).html();\n    };\n\n    var HTMLButton = HTMLBase.extend({\n        init: function(element, options) {\n            var that = this;\n            HTMLBase.fn.init.call(that, element, options);\n            that.wrapper = that.element.addClass(KBUTTON);\n\n            if (!that.element.attr(\"type\") && that.options.type) {\n                that.element.attr(\"type\", that.options.type);\n            }\n\n            that._addClasses();\n            that.iconElement();\n            that._textElement();\n        },\n        options: {\n            name: \"HTMLButton\",\n            type: \"button\",\n            icon: \"\",\n            iconClass: \"\",\n            spriteCssClass: \"\",\n            imageUrl: \"\",\n            size: \"medium\",\n            rounded: \"medium\",\n            fillMode: \"solid\",\n            themeColor: \"base\",\n            stylingOptions: [ \"size\", \"rounded\", \"fillMode\", \"themeColor\" ]\n        },\n        iconElement: function() {\n            var that = this,\n                element = that.element,\n                options = that.options,\n                icon = options.icon,\n                iconClass = options.iconClass,\n                spriteCssClass = options.spriteCssClass,\n                imageUrl = options.imageUrl,\n                span, img, isEmpty;\n\n            if (spriteCssClass || imageUrl || icon || iconClass) {\n                isEmpty = true;\n\n                element.contents().filter(function() {\n                    return (!$(this).hasClass(\"k-sprite\") && !$(this).hasClass(\"k-icon\") && !$(this).hasClass(\"k-svg-icon\") && !$(this).hasClass(\"k-image\"));\n                }).each(function(idx, el) {\n                    if (el.nodeType == 1 || el.nodeType == 3 && kendo.trim(el.nodeValue).length > 0) {\n                        isEmpty = false;\n                    }\n                });\n            }\n\n            if (isEmpty) {\n                that.element.addClass(\"k-icon-button\");\n            }\n\n            if (imageUrl) {\n                img = element.children(\"img.k-image\").first();\n                if (!img[0]) {\n                    img = $('<img alt=\"icon\" class=\"k-image\" />').prependTo(element);\n                }\n                img.attr(\"src\", imageUrl);\n                img.addClass(KBUTTONICON);\n            } else if (icon || iconClass) {\n                span = element.children(\"span.k-icon, span.k-svg-icon\").first();\n                if (!span[0]) {\n                    span = $(kendo.ui.icon({ icon, iconClass })).prependTo(element);\n                } else {\n                    kendo.ui.icon(span, { icon, iconClass });\n                }\n\n                span.addClass(KBUTTONICON);\n            } else if (spriteCssClass) {\n                span = element.children(\"span.k-sprite\").first();\n                if (!span[0]) {\n                    span = $('<span class=\"k-sprite\"></span>').prependTo(element);\n                }\n                span.addClass(spriteCssClass + \" \" + KBUTTONICON);\n            }\n        },\n        _textElement: function() {\n            var element = this.element;\n\n            element.contents().filter(function() {\n                return (!$(this).hasClass(KBUTTONICON) && !$(this).hasClass(\"k-sprite\") && !$(this).hasClass(\"k-icon\") && !$(this).hasClass(\"k-image\"));\n            }).each(function(idx, el) {\n                if (el.nodeType == 1 || el.nodeType == 3 && kendo.trim(el.nodeValue).length > 0) {\n                    if (el.nodeType === 3) {\n                        var newSpan = document.createElement('span');\n\n                        el.parentNode.insertBefore(newSpan, el);\n                        newSpan.appendChild(el);\n                        el = newSpan;\n                    }\n\n                    el.classList.add(KBUTTONTEXT);\n                }\n            });\n        }\n    });\n\n    $.extend(kendo.html, {\n        renderButton: renderButton,\n        HTMLButton: HTMLButton\n    });\n\n    kendo.cssProperties.registerPrefix(\"HTMLButton\", \"k-button-\");\n\n    kendo.cssProperties.registerValues(\"HTMLButton\", [{\n        prop: \"fillMode\",\n        values: kendo.cssProperties.fillModeValues.concat([\"link\", \"clear\"])\n    }, {\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.html.button.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.html.chip.js":
/*!***********************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.html.chip.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_html_base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.html.base.js */ \"./node_modules/kendo-ui-core/esm/kendo.html.base.js\");\n/* harmony import */ var _kendo_icons_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.icons.js */ \"./node_modules/kendo-ui-core/esm/kendo.icons.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\nvar __meta__ = {\n    id: \"html.chip\",\n    name: \"Html.Chip\",\n    category: \"web\",\n    description: \"HTML rendering utility for Kendo UI for jQuery.\",\n    depends: [ \"html.base\", \"icons\" ],\n    features: []\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        HTMLBase = kendo.html.HTMLBase;\n\n    var renderChip = function(element, options) {\n        if (!element || $.isPlainObject(element)) {\n            options = element;\n            element = $(\"<span></span>\");\n        }\n\n        return (new HTMLChip(element, options)).html();\n    };\n\n    var HTMLChip = HTMLBase.extend({\n        init: function(element, options) {\n            var that = this;\n            HTMLBase.fn.init.call(that, element, options);\n            that._wrapper();\n        },\n        options: {\n            name: \"HTMLChip\",\n            size: \"medium\",\n            rounded: \"medium\",\n            fillMode: \"solid\",\n            themeColor: \"base\",\n            attr: {},\n            icon: \"\",\n            iconClass: \"\",\n            iconAttr: {},\n            removable: false,\n            removableAttr: {},\n            removeIcon: \"x-circle\",\n            removeIconClass: \"\",\n            content: \"\",\n            text: \"\",\n            actions: [],\n            stylingOptions: [ \"size\", \"rounded\", \"fillMode\", \"themeColor\" ]\n        },\n        _wrapper: function() {\n            var that = this,\n                options = that.options;\n\n            options.text = options.text || options.label;\n            that.wrapper = that.element.wrap(\"<div class='k-chip'></div>\").parent().attr(options.attr);\n            that._addClasses();\n\n            if (options.icon) {\n                that.wrapper.prepend($(kendo.ui.icon({ icon: options.icon, size: \"small\", iconClass: `k-chip-icon${options.iconClass ? ` ${options.iconClass}` : '' }` })).attr(options.iconAttr));\n            } else if (options.iconClass) {\n                that.wrapper.prepend($(\"<span class='\" + options.iconClass + \"'></span>\").attr(options.iconAttr));\n            } else if (options.avatarClass) {\n                that.wrapper.prepend($(\"<span class='k-chip-avatar k-avatar k-avatar-md k-avatar-solid k-avatar-solid-primary k-rounded-full \" + options.avatarClass + \"'></span>\").attr(options.iconAttr));\n            }\n\n            that.element.addClass(\"k-chip-content\");\n            if (options.text) {\n                that.element.html('<span class=\"k-chip-label\">' + options.text + '</span>');\n            }\n\n            if (options.visible === false) {\n                that.wrapper.addClass(\"k-hidden\");\n            }\n\n            if (options.selected === true) {\n                that.wrapper.addClass(\"k-selected\");\n            }\n\n            if (options.enabled === false) {\n                that.wrapper.addClass(\"k-disabled\");\n            }\n\n            if ((options.actions && options.actions.length > 0) || options.removable) {\n                that._actions();\n            }\n\n\n        },\n        _actions: function() {\n            var that = this,\n                options = that.options;\n\n            that.actionsWrapper = $(\"<span class='k-chip-actions'></span>\");\n            that.actionsWrapper.appendTo(that.wrapper);\n\n            if (options.actions && options.actions.length > 0) {\n                for (var i = 0; i < options.actions.length; i++) {\n                    var action = options.actions[i];\n                    that.actionsWrapper.append($(`<span class='k-chip-action ${action.iconClass ? action.iconClass : ''}'>${kendo.ui.icon({ icon: action.icon, size: \"small\" })}</span>`).attr(action.attr ? action.attr : {}));\n                }\n            }\n\n            if (options.removable) {\n                that.actionsWrapper.append($(`<span class='k-chip-action k-chip-remove-action'>${kendo.ui.icon({ icon: options.removeIcon, size: \"small\" })}</span>`).attr(options.removableAttr));\n            }\n        }\n    });\n\n    $.extend(kendo.html, {\n        renderChip: renderChip,\n        HTMLChip: HTMLChip\n    });\n\n    kendo.cssProperties.registerPrefix(\"HTMLChip\", \"k-chip-\");\n\n    kendo.cssProperties.registerValues(\"HTMLChip\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.html.chip.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.html.chiplist.js":
/*!***************************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.html.chiplist.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_html_base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.html.base.js */ \"./node_modules/kendo-ui-core/esm/kendo.html.base.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\nvar __meta__ = {\n    id: \"html.chiplist\",\n    name: \"Html.ChipList\",\n    category: \"web\",\n    description: \"HTML rendering utility for Kendo UI for jQuery.\",\n    depends: [\"html.base\"],\n    features: []\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        HTMLBase = kendo.html.HTMLBase;\n\n    var renderChipList = function(element, options) {\n        if (arguments[0] === undefined$1 || $.isPlainObject(arguments[0])) {\n            options = element;\n            element = $(\"<div></div>\");\n        }\n\n        return (new HTMLChipList(element, options)).html();\n    };\n\n    var HTMLChipList = HTMLBase.extend({\n        init: function(element, options) {\n            var that = this;\n            HTMLBase.fn.init.call(that, element, options);\n            that.wrapper = that.element.addClass(\"k-chip-list\");\n            that._applyAriaAttributes(options);\n            that._addClasses();\n        },\n        options: {\n            name: \"HTMLChipList\",\n            size: \"medium\",\n            stylingOptions: [\"size\"]\n        },\n        _applyAriaAttributes: function(options) {\n            var that = this;\n            options = $.extend({ selectable: \"none\" }, options);\n            var ariaLabelOption = (options.attributes || {})[\"aria-label\"];\n\n            if (options.selectable !== \"none\") {\n                that.element.attr({\n                    \"aria-multiselectable\": options.selectable === \"multiple\",\n                    role: \"listbox\",\n                    \"aria-label\": ariaLabelOption || that.element.attr(\"id\") + \" listbox\",\n                    \"aria-orientation\": \"horizontal\"\n                });\n            } else {\n                that.element.removeAttr(\"role aria-label aria-multiselectable aria-orientation\");\n            }\n        }\n    });\n\n    $.extend(kendo.html, {\n        renderChipList: renderChipList,\n        HTMLChipList: HTMLChipList\n    });\n\n    kendo.cssProperties.registerPrefix(\"HTMLChipList\", \"k-chip-list-\");\n\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.html.chiplist.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.html.icon.js":
/*!***********************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.html.icon.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_html_base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.html.base.js */ \"./node_modules/kendo-ui-core/esm/kendo.html.base.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\nvar __meta__ = {\n    id: \"html.icon\",\n    name: \"Html.Icon\",\n    category: \"web\",\n    description: \"HTML font icon rendering utility for Kendo UI for jQuery.\",\n    depends: [\"html.base\"]\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        extend = $.extend,\n        HTMLBase = kendo.html.HTMLBase;\n\n    var KFONTICON = 'k-icon k-font-icon';\n    var KI_PREFFIX = 'k-i-';\n    var KSVGICON = 'k-icon k-svg-icon';\n    var KSVG_PREFFIX = 'k-svg-i-';\n\n    var FLIP_PREFIX = 'k-flip-';\n    var FLIP_HORIZONTAL = `${FLIP_PREFIX}h`;\n    var FLIP_VERTICAL = `${FLIP_PREFIX}v`;\n\n    var THEME_COLOR_PREFIX = 'k-color-';\n\n    var ICON_TYPES = {\n        'svg': (element, options) => new HTMLSvgIcon(element, options),\n        'font': (element, options) => new HTMLFontIcon(element, options)\n    };\n\n    var FLIP_CLASSES = {\n        default: '',\n        horizontal: FLIP_HORIZONTAL,\n        vertical: FLIP_VERTICAL,\n        both: `${FLIP_HORIZONTAL} ${FLIP_VERTICAL}`\n    };\n\n    var renderIcon = function(element, options) {\n        if (!element || $.isPlainObject(element) || kendo.isString(element)) {\n            options = element;\n            element = $(\"<span></span>\");\n        }\n\n        if (kendo.isString(options)) {\n            options = {\n                icon: options\n            };\n        }\n\n        if (!kendo.isPresent(options.type)) {\n            options.type = kendo.defaults.iconType ? kendo.defaults.iconType : 'svg';\n        }\n\n        if (kendo.isFunction(options.type)) {\n            return options.type(element, options);\n        }\n\n        if (!kendo.isFunction(ICON_TYPES[options.type])) {\n            return null;\n        }\n\n        return (ICON_TYPES[options.type](element, options)).html();\n    };\n\n    var HTMLBaseIcon = HTMLBase.extend({\n        init: function(element, options) {\n            var that = this;\n            HTMLBase.fn.init.call(that, element, options);\n            that._wrapper();\n        },\n        options: {\n            name: 'HTMLIcon',\n            size: 'none',\n            themeColor: 'none',\n            flip: 'default',\n            iconClass: '',\n            stylingOptions: [ 'size', 'themeColor', 'fill' ]\n        },\n        _wrapper: function() {\n            var that = this;\n\n            that._addClasses();\n        },\n        _addClasses: function() {\n            var that = this,\n                options = that.options,\n                stylingOptions = options.stylingOptions,\n                previouslyAddedClasses = that.wrapper.data(\"added-classes\");\n\n            stylingOptions = stylingOptions.map(function(option) {\n                if (option === 'themeColor') {\n                    return kendo.cssProperties.getValidClass({\n                        widget: options.name,\n                        propName: option,\n                        value: options[option],\n                        prefix: THEME_COLOR_PREFIX\n                    });\n                }\n\n                if (option === 'fill') {\n                    return FLIP_CLASSES[options.flip];\n                }\n\n                return kendo.cssProperties.getValidClass({\n                    widget: options.name,\n                    propName: option,\n                    value: options[option],\n                    fill: options.fillMode\n                });\n            });\n\n            if (previouslyAddedClasses) {\n                that.wrapper.removeClass(previouslyAddedClasses.filter(x => x !== that._className).join(\" \"));\n            }\n\n            that.wrapper.data(\"added-classes\", stylingOptions.concat([that._className]));\n            that.wrapper.addClass(stylingOptions.join(\" \"));\n        }\n    });\n\n    var HTMLFontIcon = HTMLBaseIcon.extend({\n        init: function(element, options) {\n            HTMLBaseIcon.fn.init.call(this, element, options);\n        },\n        options: extend({}, HTMLBaseIcon.fn.options, {\n            name: 'HTMLFontIcon',\n            icon: null\n        }),\n        _wrapper: function() {\n            var that = this,\n                // Find if there is an existing k-i- class appended to the element.\n                currentIconClass = that.element[0].className.split(\" \").find(x => x.includes(KI_PREFFIX)),\n                className = that.options.icon ? `${that.options.icon.startsWith(KI_PREFFIX) ? \"\" : KI_PREFFIX}${that.options.icon}` : \"\";\n\n            that._className = className;\n            that.wrapper = that.element\n                .addClass(KFONTICON)\n                .removeClass(currentIconClass) // Remove any existing icons.\n                .addClass(className)\n                .addClass(that.options.iconClass || '');\n\n            HTMLBaseIcon.fn._wrapper.call(this);\n        }\n    });\n\n    var HTMLSvgIcon = HTMLBaseIcon.extend({\n        init: function(element, options) {\n            // Ensure that the inner contents of the wrapping span element are always removed for re-rendering purposes.\n            element.empty();\n            HTMLBaseIcon.fn.init.call(this, element, options);\n        },\n        options: extend({}, HTMLBaseIcon.fn.options, {\n            name: 'HTMLSVGIcon',\n            icon: null\n        }),\n        _wrapper: function() {\n            var that = this,\n                icon = that.options.icon,\n                iconClass = that.options.iconClass,\n                // Find if there is an existing k-svg-i- class appended to the element.\n                currentIconClass = that.element[0].className.split(\" \").find(x => x.includes(KSVG_PREFFIX)),\n                svgElm = $('<svg></svg>'),\n                className;\n\n            if (!icon && iconClass) {\n                // match k-i-(some-icon-name)\n                const regex = /k-i-(\\w+(?:-\\w+)*)/;\n                let iconNameMatch = iconClass.match(regex);\n                if (iconNameMatch) {\n                    icon = iconNameMatch[1];\n                    iconClass = iconClass.replace(iconNameMatch[0], \"\");\n                }\n            }\n\n            if (kendo.isString(icon)) {\n                // remove k-i- and convert kebab-case-icon to camelCaseIcon\n                icon = icon.replace('k-i-', '').replace(/-./g, x=>x[1].toUpperCase());\n                icon = kendo.ui.svgIcons[icon] || kendo.ui.svgIcons[`${icon}Icon`];\n            }\n\n            className = icon && icon.name ? `${KSVG_PREFFIX}${icon.name}` : '';\n            that._className = className;\n\n            that.wrapper = that.element\n                .addClass(KSVGICON)\n                .removeClass(currentIconClass) // Remove any existing icons.\n                .addClass(className)\n                .addClass(iconClass || '')\n                .attr(\"aria-hidden\", true);\n\n            if ($.isPlainObject(icon)) {\n                svgElm.attr('viewBox', icon.viewBox || '')\n                    .attr({\n                        'viewBox': icon.viewBox || '',\n                        'focusable': 'false',\n                        'xmlns': 'http://www.w3.org/2000/svg'\n                    })\n                    .html(icon.content || '');\n\n                that.wrapper.append(svgElm[0].outerHTML);\n            }\n\n            HTMLBaseIcon.fn._wrapper.call(this);\n        }\n    });\n\n    $.extend(kendo.html, {\n        renderIcon: renderIcon,\n        HTMLFontIcon: HTMLFontIcon,\n        HTMLSvgIcon: HTMLSvgIcon,\n        getIconRenderer: (type) => ICON_TYPES[type]\n    });\n\n    kendo.cssProperties.registerPrefix(\"HTMLFontIcon\", \"k-icon-\");\n\n    kendo.cssProperties.registerValues(\"HTMLFontIcon\", [{\n        prop: \"size\",\n        values: kendo.cssProperties.sizeValues.concat([['xsmall', 'xs'], ['xlarge', 'xl'], ['xxlarge', 'xxl'], ['xxxlarge', 'xxxl']])\n    }, {\n        prop: \"themeColor\",\n        values: ['primary', 'secondary', 'tertiary', 'inherit', 'info', 'success', 'warning', 'error', 'dark', 'light', 'inverse']\n    }]);\n\n    kendo.cssProperties.registerPrefix(\"HTMLSVGIcon\", \"k-icon-\");\n\n    kendo.cssProperties.registerValues(\"HTMLSVGIcon\", [{\n        prop: \"size\",\n        values: kendo.cssProperties.sizeValues.concat([['xsmall', 'xs'], ['xlarge', 'xl'], ['xxlarge', 'xxl'], ['xxxlarge', 'xxxl']])\n    }, {\n        prop: \"themeColor\",\n        values: ['primary', 'secondary', 'tertiary', 'inherit', 'info', 'success', 'warning', 'error', 'dark', 'light', 'inverse']\n    }]);\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.html.icon.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.icons.js":
/*!*******************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.icons.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_html_icon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.html.icon.js */ \"./node_modules/kendo-ui-core/esm/kendo.html.icon.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\nconst caretTrIcon = {\n    name: 'caret-tr',\n    content: '<path d=\"M352 160v192L160 160z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst caretBrIcon = {\n    name: 'caret-br',\n    content: '<path d=\"M352 352H160l192-192z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst caretBlIcon = {\n    name: 'caret-bl',\n    content: '<path d=\"M160 352V160l192 192z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst caretTlIcon = {\n    name: 'caret-tl',\n    content: '<path d=\"M160 160h192L160 352z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst caretAltUpIcon = {\n    name: 'caret-alt-up',\n    content: '<path d=\"m256 160 128 192H128z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst caretAltRightIcon = {\n    name: 'caret-alt-right',\n    content: '<path d=\"M352 256 160 384V128z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst caretAltDownIcon = {\n    name: 'caret-alt-down',\n    content: '<path d=\"M256 352 128 160h256z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst caretAltLeftIcon = {\n    name: 'caret-alt-left',\n    content: '<path d=\"m160 256 192-128v256z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst caretAltToTopIcon = {\n    name: 'caret-alt-to-top',\n    content: '<path d=\"m128 352 128-192 128 192zm256-224H128v32h256z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst caretAltToRightIcon = {\n    name: 'caret-alt-to-right',\n    content: '<path d=\"m128 128 192 128-192 128zm224 256V128h-32v256z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst caretAltToBottomIcon = {\n    name: 'caret-alt-to-bottom',\n    content: '<path d=\"M384 128 256 320 128 128zM128 352h256v-32H128z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst caretAltToLeftIcon = {\n    name: 'caret-alt-to-left',\n    content: '<path d=\"M352 384 160 256l192-128zM128 128v256h32V128z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst caretDoubleAltUpIcon = {\n    name: 'caret-double-alt-up',\n    content: '<path d=\"m128 448 128-192 128 192zM256 64 128 256h256z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst caretDoubleAltRightIcon = {\n    name: 'caret-double-alt-right',\n    content: '<path d=\"m64 128 192 128L64 384zm384 128L256 128v256z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst caretDoubleAltDownIcon = {\n    name: 'caret-double-alt-down',\n    content: '<path d=\"M384 64 256 256 128 64zM256 448l128-192-128 1H128z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst caretDoubleAltLeftIcon = {\n    name: 'caret-double-alt-left',\n    content: '<path d=\"M448 384 256 256.001l192-128zM64 256.001 256 384V128z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst caretAltExpandIcon = {\n    name: 'caret-alt-expand',\n    content: '<path d=\"M128 288h256L256 480zM256 32 128 224h256.001z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst arrowsNoChangeIcon = {\n    name: 'arrows-no-change',\n    content: '<path d=\"M256 160 128 352 0 160zm96 0L224 352h256.001z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst arrowOverflowDownIcon = {\n    name: 'arrow-overflow-down',\n    content: '<path d=\"M384 160 256 352 128 160zM128 96v32h256V96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chevronUpIcon = {\n    name: 'chevron-up',\n    content: '<path d=\"m129.941 353.941 126.06-126.06 126.061 126.06L416 320 256.001 160 96 320z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chevronRightIcon = {\n    name: 'chevron-right',\n    content: '<path d=\"m158.059 129.941 126.06 126.06-126.06 126.061L192 416l160-159.999L192 96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chevronDownIcon = {\n    name: 'chevron-down',\n    content: '<path d=\"m382.059 158.059-126.06 126.06-126.061-126.06L96 192l159.999 160L416 192z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chevronLeftIcon = {\n    name: 'chevron-left',\n    content: '<path d=\"m353.941 382.059-126.06-126.06 126.06-126.061L320 96 160 255.999 320 416z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst arrowUpIcon = {\n    name: 'arrow-up',\n    content: '<path d=\"M384 288h-96v128h-64l-.001-128H128L255.999 96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst arrowRightIcon = {\n    name: 'arrow-right',\n    content: '<path d=\"M224 384v-96H96v-64h128v-96l192 128z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst arrowDownIcon = {\n    name: 'arrow-down',\n    content: '<path d=\"M128 224h96V96h64l.001 128H384L256.001 416z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst arrowLeftIcon = {\n    name: 'arrow-left',\n    content: '<path d=\"M288 128v96h128v64l-128 .001V384L96 256.001z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst levelDownIcon = {\n    name: 'level-down',\n    content: '<path d=\"M288 192v64h64l-80 128-80-128h64v-64H128v-32h288v32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst levelUpIcon = {\n    name: 'level-up',\n    content: '<path d=\"m128 288 80-128 80 128h-64v64h192v32H192v-96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst levelToTopIcon = {\n    name: 'level-to-top',\n    content: '<path d=\"m128 288 80-128 80 128h-64v64h192v32H192v-96zm288-160H96v32h320z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst colResizeIcon = {\n    name: 'col-resize',\n    content: '<path d=\"M128 255h64v33h-64v64.6L0 271.9l128-80.7zm96 225h64V32h-64zm288-207.9-128-80.7V256h-64v33h64v63.9z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst arrowsAxesIcon = {\n    name: 'arrows-axes',\n    content: '<path d=\"M352 480v-64H128v64H96v-64H32v-32h64V160H32l80-128 80 128h-64v224h224v-64l128 80z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst arrowsSwapIcon = {\n    name: 'arrows-swap',\n    content: '<path d=\"M256 160h-64v224h-32V160H96l80-128zm96 192V128h-32v224h-64l80 128 80-128z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst dragAndDropIcon = {\n    name: 'drag-and-drop',\n    content: '<path d=\"m32 128 192 112L32 352zm224 96v32h224v-32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst categorizeIcon = {\n    name: 'categorize',\n    content: '<path d=\"M32 32v192l160-96zm0 448V288l160 96zM192 64h288v32H192zm0 96h288v32H192zm0 160h288v32H192zm0 96h288v32H192z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst gridIcon = {\n    name: 'grid',\n    content: '<path d=\"M32 32h128v128H32zm160 448h128V352H192zm-160 0h128V352H32zm0-160h128V192H32zm160 0h128V192H192zM352 32v128h128V32zm0 288h128V192H352zM192 160h128V32H192zm160 320h128V352H352z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst gridLayoutIcon = {\n    name: 'grid-layout',\n    content: '<path d=\"M32 32h96v96H32zm128 0v96h320V32zM32 288h96v-96H32zm128 0h320v-96H160zM32 448h96v-96H32zm128 0h320v-96H160z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst groupIcon = {\n    name: 'group',\n    content: '<path d=\"M32 256h192v192H32zm0-32h192V32H32zm224 224h192V256H256zm0-416v192h192V32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst ungroupIcon = {\n    name: 'ungroup',\n    content: '<path d=\"M32 256h192v192H32zm32-64h128V64H64zm224 224h128V288H288zM256 32v192h192V32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst handleDragIcon = {\n    name: 'handle-drag',\n    content: '<path d=\"M160 64h64v384h-64zm96 0v384h64V64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst layoutIcon = {\n    name: 'layout',\n    content: '<path d=\"M192 416h256v64H192zm0-32h256v-64H192zM32 480h128V128H32zm160-288h256v-64H192zm0 96h256v-64H192zM32 0v96h416V0z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst layout1By4Icon = {\n    name: 'layout-1-by-4',\n    content: '<path d=\"M32 0h192v480H32zm224 0v96h192V0zm0 224h192v-96H256zm0 128h192v-96H256zm0 128h192v-96H256z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst layout2By2Icon = {\n    name: 'layout-2-by-2',\n    content: '<path d=\"M32 224h192V0H32zm224 0h192V0H256zM32 480h192V256H32zm224 0h192V256H256z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst layoutSideBySideIcon = {\n    name: 'layout-side-by-side',\n    content: '<path d=\"M32 384h416v96H32zm0-32h416v-96H32zm0-128h416v-96H32zM32 0v96h416V0z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst layoutStackedIcon = {\n    name: 'layout-stacked',\n    content: '<path d=\"M32 256h192v96H32zm0 224h192v-96H32zm224-128h192v-96H256zM32 0v224h416V0zm224 480h192v-96H256z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst columnsIcon = {\n    name: 'columns',\n    content: '<path d=\"M64 32h96v448H64zm128 448h96V32h-96zM320 32v448h96V32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst rowsIcon = {\n    name: 'rows',\n    content: '<path d=\"M480 64v96H32V64zM32 192v96h448v-96zm448 128H32v96h448z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst reorderIcon = {\n    name: 'reorder',\n    content: '<path d=\"M480 128v64H32v-64zM32 224v64h448v-64zm448 96H32v64h448z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst menuIcon = {\n    name: 'menu',\n    content: '<path d=\"M480 32v96H32V32zM32 192v96h448v-96zm448 160H32v96h448z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst moreVerticalIcon = {\n    name: 'more-vertical',\n    content: '<path d=\"M240 128c26.4 0 48-21.6 48-48s-21.6-48-48-48-48 21.6-48 48 21.6 48 48 48m0 64c-26.4 0-48 21.6-48 48s21.6 48 48 48 48-21.6 48-48-21.6-48-48-48m0 160c-26.4 0-48 21.6-48 48s21.6 48 48 48 48-21.6 48-48-21.6-48-48-48\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst moreHorizontalIcon = {\n    name: 'more-horizontal',\n    content: '<path d=\"M128 240c0-26.4-21.6-48-48-48s-48 21.6-48 48 21.6 48 48 48 48-21.6 48-48m64 0c0 26.4 21.6 48 48 48s48-21.6 48-48-21.6-48-48-48-48 21.6-48 48m160 0c0 26.4 21.6 48 48 48s48-21.6 48-48-21.6-48-48-48-48 21.6-48 48\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst overlapIcon = {\n    name: 'overlap',\n    content: '<path d=\"M320 320V64H64v256zM192 448h256V192h-96v160H192z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst homeIcon = {\n    name: 'home',\n    content: '<path d=\"M480 256c0 17.7-14.3 32-32 32-9.1 0-17.4-3.8-23.2-10l-8.8-8.7V416c0 17.7-14.3 32-32 32h-64c-17.7 0-32-14.3-32-32v-96h-64v96c0 17.7-14.3 32-32 32h-64c-17.7 0-32-14.3-32-32V268.6l-8.3 8.9C81.8 284 73.4 288 64 288c-17.7 0-32-14.3-32-32 0-8.5 3.3-16.1 8.6-21.9l.2-.2 1-1 191-191.3 1-1c5.8-5.5 13.6-8.9 22.2-8.9 9.1 0 17.3 3.8 23.1 9.9L470.3 233l.7.7.3.3c5.4 5.8 8.7 13.5 8.7 22\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst arrowsLeftRightIcon = {\n    name: 'arrows-left-right',\n    content: '<path d=\"m512 240-128-80v64H128v-64L0 240l128 80v-64h256v64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst arrowsTopBottomIcon = {\n    name: 'arrows-top-bottom',\n    content: '<path d=\"m240 512 80-128h-64V128h64L240 0l-80 128h64v256h-64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst borderRadiusBottomLeftIcon = {\n    name: 'border-radius-bottom-left',\n    content: '<path d=\"M384 368c0 8.8-7.2 16-16 16h-64c-97 0-176-79-176-176v-64c0-8.8 7.2-16 16-16s16 7.2 16 16v64c0 79.4 64.6 144 144 144h64c8.8 0 16 7.2 16 16\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst borderRadiusBottomRightIcon = {\n    name: 'border-radius-bottom-right',\n    content: '<path d=\"M368 128c8.8 0 16 7.2 16 16v64c0 97-79 176-176 176h-64c-8.8 0-16-7.2-16-16s7.2-16 16-16h64c79.4 0 144-64.6 144-144v-64c0-8.8 7.2-16 16-16\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst borderRadiusTopLeftIcon = {\n    name: 'border-radius-top-left',\n    content: '<path d=\"M144 384c-8.8 0-16-7.2-16-16v-64c0-97 79-176 176-176h64c8.8 0 16 7.2 16 16s-7.2 16-16 16h-64c-79.4 0-144 64.6-144 144v64c0 8.8-7.2 16-16 16\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst borderRadiusTopRightIcon = {\n    name: 'border-radius-top-right',\n    content: '<path d=\"M128 144c0-8.8 7.2-16 16-16h64c97 0 176 79 176 176v64c0 8.8-7.2 16-16 16s-16-7.2-16-16v-64c0-79.4-64.6-144-144-144h-64c-8.8 0-16-7.2-16-16\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst borderRadiusIcon = {\n    name: 'border-radius',\n    content: '<path d=\"M64 32h96v32H64v96H32V32zm384 416h-96v32h128V352h-32zM352 32v32h96v96h32V32zM64 352H32v128h128v-32H64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst borderStyleBottomIcon = {\n    name: 'border-style-bottom',\n    content: '<path d=\"M96 480v-64h320v64zm1-416h320V32H97zM64 416V96H32v320zm416 0V96h-32v320z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst borderStyleLeftIcon = {\n    name: 'border-style-left',\n    content: '<path d=\"M32 96h64v320H32zm416 1v320h32V97zM96 64h320V32H96zm0 416h320v-32H96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst borderStyleRightIcon = {\n    name: 'border-style-right',\n    content: '<path d=\"M480 416h-64V96h64zm-416-1V95H32v320zm352 33H96v32h320zm0-416H96v32h320z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst borderStyleTopIcon = {\n    name: 'border-style-top',\n    content: '<path d=\"M416 32v64H96V32zm-1 416H95v32h320zm33-352v320h32V96zM32 96v320h32V96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst borderStyleIcon = {\n    name: 'border-style',\n    content: '<path d=\"M32 96h32v320H32zm416 1h32v320h-32zM96 32h320v32H96zm0 416h320v32H96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst boxSizingIcon = {\n    name: 'box-sizing',\n    content: '<path d=\"M32 0H0v480h480V0zm416 448H32V32h416zm-96-320h-32V96h32zM96 192H64v-32h32zm0-64H64V96h32zm64 0h-32V96h32zm64 0h-32V96h32zm64 0h-32V96h32zM96 256H64v-32h32zm320-128h-32V96h32zm0 128h-32v-32h32zm0-64h-32v-32h32zM96 384H64v-32h32zm256 0h-32v-32h32zm-192 0h-32v-32h32zm64 0h-32v-32h32zm64 0h-32v-32h32zm128 0h-32v-32h32zM96 320H64v-32h32zm320 0h-32v-32h32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chevronDoubleDownIcon = {\n    name: 'chevron-double-down',\n    content: '<path d=\"M382.1 224 256 350.1 129.9 224 96 257.9l160 160 160-160zm0-128L256 222.1 129.9 96 96 129.9l160 160 160-160z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chevronDoubleLeftIcon = {\n    name: 'chevron-double-left',\n    content: '<path d=\"M289 383 162.9 257 289 130.9 255 97 95 257l160 160zm128 0L290.9 257 417 130.9 383 97 223 257l160 160z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chevronDoubleRightIcon = {\n    name: 'chevron-double-right',\n    content: '<path d=\"M223 130.9 349.1 257 223 383l34 34 160-160L257 97zm-128 0L221.1 257 95 383l34 34 160-160L129 97z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chevronDoubleUpIcon = {\n    name: 'chevron-double-up',\n    content: '<path d=\"m129.9 289.9 126.1-126L382.1 290l33.9-34L256 96 96 256zm0 128 126.1-126L382.1 418l33.9-34-160-160L96 384z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst dataOdsIcon = {\n    name: 'data-ods',\n    content: '<path d=\"M415.94 93.61v.33c-.53 33.88-86.26 61.29-191.93 61.29S32.6 127.82 32.07 93.94v-.33C32.06 59.59 118 32 224 32s191.94 27.59 191.94 61.61m-.06 46.39v.32c-.53 33.88-86.26 61.29-191.93 61.29S32.54 174.2 32 140.32V140l.12 86.81v.32c.53 33.88 86.26 61.29 191.93 61.29S415.46 261 416 227.13v-.32Zm.12 180-.07-52v.32c-.34 21.73-35.73 40.8-88.93 51.68Zm-256 6.11C85.73 317.69 32.43 295 32 268.32V268l.12 86.81v.32C32.55 381.8 85.8 404.47 160 412.9Zm73.5 123.55q-22.26 0-36.28-14.49t-14-37.76q0-24.57 14.24-39.74t37.72-15.18q22.18 0 35.88 14.53t13.69 38.3q0 24.42-14.2 39.38t-37.05 14.96m1-87.08q-12.28 0-19.51 9.22t-7.23 24.39q0 15.39 7.23 24.35a23.15 23.15 0 0 0 18.93 9q12.07 0 19.15-8.71t7.08-24.17q0-16.11-6.86-25.08t-18.78-9Zm68.9 85.28V344.23h36.71q55.22 0 55.21 50.51 0 24.21-15.06 38.66t-40.15 14.46Zm23.34-84.63v65.69h11.57q15.17 0 23.81-9.1t8.64-24.82q0-14.82-8.56-23.31t-24-8.49Zm82.49 80.65v-23.12a44.8 44.8 0 0 0 13.66 7.91 43.9 43.9 0 0 0 14.89 2.64 33 33 0 0 0 7.7-.8 18 18 0 0 0 5.49-2.2 9.7 9.7 0 0 0 3.29-3.33 8.3 8.3 0 0 0 1.08-4.15 9 9 0 0 0-1.73-5.42 18.8 18.8 0 0 0-4.74-4.41 49 49 0 0 0-7.12-3.9q-4.11-1.87-8.89-3.83-12.14-5.06-18.1-12.36a27 27 0 0 1-6-17.63 28.05 28.05 0 0 1 3.25-13.91 27.7 27.7 0 0 1 8.85-9.58 39.9 39.9 0 0 1 13-5.53 66.6 66.6 0 0 1 15.61-1.77 94 94 0 0 1 14.34 1 56.4 56.4 0 0 1 11.53 3v21.6a36 36 0 0 0-5.68-3.18 45 45 0 0 0-6.32-2.27 49 49 0 0 0-6.47-1.34 45.5 45.5 0 0 0-6.1-.43 31.7 31.7 0 0 0-7.23.76 18.2 18.2 0 0 0-5.49 2.13 10.5 10.5 0 0 0-3.47 3.29 7.77 7.77 0 0 0-1.23 4.3 8.27 8.27 0 0 0 1.37 4.66 15.9 15.9 0 0 0 3.91 3.9 41 41 0 0 0 6.14 3.61q3.61 1.77 8.16 3.65a91.6 91.6 0 0 1 11.17 5.53 39.9 39.9 0 0 1 8.49 6.61 25.8 25.8 0 0 1 5.42 8.42 29.8 29.8 0 0 1 1.88 11q0 8.67-3.29 14.56a26.7 26.7 0 0 1-8.92 9.54 38.6 38.6 0 0 1-13.12 5.24 76 76 0 0 1-15.79 1.59 88 88 0 0 1-16.22-1.44 49.2 49.2 0 0 1-13.31-4.34Z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst nonRecurrenceIcon = {\n    name: 'non-recurrence',\n    content: '<path d=\"m321 434.2 47.5 47.5C335.5 501 297 512 256 512 132.3 512 32 411.7 32 288c0-41 11-79.5 30.3-112.6l47.5 47.5c-8.9 19.9-13.8 41.9-13.8 65 0 88.2 71.8 160 160 160 23.1.1 45.2-4.8 65-13.7m118.3-17.5c12.9-18.3 23.1-38.7 30.1-60.4 6.9-21.5 10.6-44.5 10.6-68.3 0-40.8-10.9-79.1-30-112l-55.5 32c13.6 23.5 21.5 50.9 21.5 80 0 4.8-.2 9.5-.6 14.2-2.2 24.8-10.1 47.9-22.3 68.2L173.6 150.9c20.3-12.2 43.4-20.1 68.2-22.3 4.7-.4 9.4-.6 14.2-.6v64l160-96L256 0v64c-23.8 0-46.7 3.7-68.3 10.6-21.8 7-42.1 17.2-60.4 30.1L22.6 0 0 22.6 489.4 512l22.6-22.6z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst displayBlockIcon = {\n    name: 'display-block',\n    content: '<path d=\"M32 32h448v32H32zm0 416h448v32H32zm0-64h448V128H32zm64-192h320v128H96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst displayFlexIcon = {\n    name: 'display-flex',\n    content: '<path d=\"M32 32v448h448V32zm416 416H64V64h384zM128 128h96v256h-96zm160 0h96v256h-96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst displayInlineFlexIcon = {\n    name: 'display-inline-flex',\n    content: '<path d=\"M96 416h320V96H96zm32-288h256v256H128zm32 32h64v192h-64zm128 0h64v192h-64zM32 32h32v448H32zm416 0h32v448h-32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst dropletSliderIcon = {\n    name: 'droplet-slider',\n    content: '<path d=\"M192 384v32c-53 0-96-43-96-96h32c0 35.3 28.7 64 64 64m160-72c0 92.8-71.6 168-160 168S32 404.8 32 312C32 181.3 192 32 192 32s160 149.3 160 280m-32 0c0-46.3-25.3-104.7-73-169-20-27-40.3-49.8-55-65.4-14.7 15.6-34.9 38.5-55 65.4-47.8 64.3-73 122.8-73 169 0 75 57.4 136 128 136s128-61 128-136m128-88h-32v256h32zm0-192h-32v64h32zm-64 96v64h96v-64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst fileReportIcon = {\n    name: 'file-report',\n    content: '<path d=\"M416 32H96a32 32 0 0 0-32 32v384a32 32 0 0 0 32 32h320a32 32 0 0 0 32-32V64a32 32 0 0 0-32-32m0 416H96V64h320Zm-96-96-160 .14V384l160-.14Zm32-64-192 .17V320l192-.17ZM223.15 127.9a64 64 0 1 0 64 64h-64Zm32-32v64h64a64 64 0 0 0-63.99-64Z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst gapColumnIcon = {\n    name: 'gap-column',\n    content: '<path d=\"M32 32v448h448V32zm416 416H64V64h384zM96 96h96v320H96zm224 0h96v320h-96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst gapRowIcon = {\n    name: 'gap-row',\n    content: '<path d=\"M480 32H32v448h448zM64 448V64h384v384zM96 96h320v96H96zm0 224h320v96H96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst handleResizeAltIcon = {\n    name: 'handle-resize-alt',\n    content: '<path d=\"M480 224v256H224v-64h192V224z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst handleResizeIcon = {\n    name: 'handle-resize',\n    content: '<path d=\"m379.5 475.5-22.6-22.6 96-96 22.6 22.6zm79.7-208.2-22.6-22.6-191.9 191.9 22.6 22.6z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst imagesIcon = {\n    name: 'images',\n    content: '<path d=\"M256 288c0 17.7-14.3 32-32 32s-32-14.3-32-32 14.3-32 32-32 32 14.3 32 32m96-64v192c0 17.7-14.3 32-32 32H64c-17.7 0-32-14.3-32-32V224c0-17.7 14.3-32 32-32h256c17.7 0 32 14.3 32 32m-31.8 0q-.15-.15 0 0l-256.1-.1-.1.1v149.9l74.6-70 85.3 80 53.3-50 42.7 40zm63.8-96H128c-17.7 0-32 14.3-32 32h288v224c17.7 0 32-14.3 32-32V160c0-17.7-14.3-32-32-32m64-64H192c-17.7 0-32 14.3-32 32h288v224c17.7 0 32-14.3 32-32V96c0-17.7-14.3-32-32-32\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst letterSpaceIcon = {\n    name: 'letter-space',\n    content: '<path d=\"m310 336 26 80h48L280 96h-48L128 416h48l26-80zm-54-166.2L294.4 288h-76.8zM448 32h32v448h-32zM32 32h32v448H32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst lineHeightIcon = {\n    name: 'line-height',\n    content: '<path d=\"m310 336 26 80h48L280 96h-48L128 416h48l26-80zm-54-166.2L294.4 288h-76.8zM32 32h448v32H32zm0 416h448v32H32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst listLatinBigIcon = {\n    name: 'list-latin-big',\n    content: '<path d=\"M115.1 136H72.6l-7.4 24H32.1L79.3 31.5h29.1L155.9 160h-33.3zm-35-23.9h27.6L93.8 67.5zM42.1 320V191.5h46.2c16.5 0 29.1 3 37.7 9.1q12.9 9.15 12.9 26.4c0 6.6-1.5 12.3-4.6 17s-7.6 8.2-13.5 10.4c6.7 1.8 11.9 5.1 15.4 9.9q5.4 7.2 5.4 17.7c0 12.6-4 22.1-12 28.4s-19.8 9.5-35.4 9.7H42.1zm31-74.9h16.2c6.8-.1 11.6-1.3 14.5-3.7s4.3-6 4.3-10.7c0-5.4-1.6-9.3-4.7-11.7s-8.2-3.6-15.1-3.6H73.1zm0 20.3v30.8h20.3c5.6 0 9.9-1.3 12.9-3.8q4.5-3.9 4.5-10.8c0-10.7-5.3-16.1-16-16.2zm73 171.1q-.6 13.35-7.2 23.7t-18.6 15.9c-8 3.8-17.1 5.6-27.3 5.6q-25.35 0-39.9-16.5c-14.55-16.5-14.6-26.5-14.6-46.6v-6.4c0-12.6 2.2-23.6 6.6-33.1Q51.7 365 64 357.2c8.2-5.1 17.8-7.7 28.6-7.7 15.6 0 28.1 4.1 37.6 12.3q14.25 12.3 16.2 33.9h-30.9c-.2-7.8-2.2-13.4-5.9-16.9-3.7-3.4-9.4-5.1-16.9-5.1-7.7 0-13.4 2.9-16.9 8.6-3.6 5.8-5.5 15-5.6 27.6v9.1c0 13.7 1.7 23.5 5.2 29.4 3.4 5.9 9.4 8.8 17.8 8.8 7.1 0 12.6-1.7 16.3-5 3.8-3.4 5.8-8.7 6-16h30.6zM192 96h288v32H192zm0 160h288v32H192zm0 160h288v32H192z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst listLatinSmallIcon = {\n    name: 'list-latin-small',\n    content: '<path d=\"M94.5 152c-1.1-1.9-2-4.8-2.8-8.6-5.5 6.9-13.1 10.3-22.9 10.3-9 0-16.7-2.7-22.9-8.2-6.3-5.4-9.4-12.3-9.4-20.5 0-10.4 3.8-18.2 11.5-23.5 7.6-5.3 18.8-7.9 33.4-7.9h9.2v-5.1q0-13.2-11.4-13.2c-7.1 0-10.6 3.5-10.6 10.5H38.7c0-9.2 3.9-16.7 11.8-22.5s17.9-8.6 30.1-8.6 21.8 3 28.9 8.9 10.7 14.1 10.9 24.4v42.3c.1 8.8 1.5 15.5 4.1 20.1v1.5zm-18.6-19.4c3.7 0 6.8-.8 9.2-2.4s4.2-3.4 5.3-5.4v-15.3h-8.6c-10.4 0-15.5 4.6-15.5 13.9q0 4.05 2.7 6.6c1.8 1.7 4.1 2.6 6.9 2.6M129.4 280c0 15.7-3.2 27.7-9.7 36.1s-15.6 12.6-27.4 12.6c-9.7 0-17.5-3.9-23.5-11.6l-1.2 9.8H41V191.4h29.7v47.7c5.5-6.3 12.7-9.4 21.4-9.4 11.9 0 21.1 4.3 27.5 12.8 6.5 8.5 9.7 20.5 9.7 36zm-29.8-1.9c0-9.2-1.2-15.7-3.7-19.6-2.4-3.9-6.2-5.9-11.3-5.9-6.7 0-11.4 2.6-13.9 7.7v37.9c2.5 5.1 7.2 7.6 14.1 7.6 7 0 11.4-3.4 13.3-10.2 1-3.4 1.5-9.2 1.5-17.5M81.1 452.8c4.2 0 7.4-1.1 9.7-3.4s3.4-5.4 3.4-9.5h27.9c0 10.5-3.8 19.1-11.3 25.8s-17.2 10.1-29 10.1c-13.9 0-24.8-4.4-32.8-13.1s-12-20.8-12-36.2v-1.2c0-9.6 1.8-18.2 5.3-25.6 3.6-7.4 8.7-13.1 15.4-17 6.7-4 14.7-6 23.8-6 12.4 0 22.3 3.4 29.6 10.3s10.9 16.2 10.9 28H94.2q0-7.35-3.6-11.4c-2.4-2.6-5.6-4-9.7-4q-11.55 0-13.5 14.7-.6 4.65-.6 12.9c0 9.6 1.1 16.2 3.4 19.9s5.9 5.7 10.9 5.7M192 96h288v32H192zm0 160h288v32H192zm0 160h288v32H192z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst listRomanBigIcon = {\n    name: 'list-roman-big',\n    content: '<path d=\"M32 32h32v128H32zm0 288h32V192H32zm64 0h32V192H96zM32 480h32V352H32zm64 0h32V352H96zm64 0h32V352h-32zM128 96h352v32H128zm64 160h288v32H192zm64 160h224v32H256zM96 152c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8m64 160c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8m64 160c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst listRomanSmallIcon = {\n    name: 'list-roman-small',\n    content: '<path d=\"M32 64h16v96H32zm0 256h16v-96H32zm32 0h16v-96H64zM32 480h16v-96H32zm32 0h16v-96H64zm32 0h16v-96H96zM48 40c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8m32 112c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8m32 160c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8M48 200c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8m32 0c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8M48 360c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8m32 0c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8m32 0c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8m32 112c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8M128 96h352v32H128zm32 160h320v32H160zm32 160h288v32H192z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst listUnorderedOutlineIcon = {\n    name: 'list-unordered-outline',\n    content: '<path d=\"M192 80h288v32H192zm0 160h288v32H192zm0 160h288v32H192zM80 80c8.8 0 16 7.2 16 16s-7.2 16-16 16-16-7.2-16-16 7.2-16 16-16m0-32c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48m0 192c8.8 0 16 7.2 16 16s-7.2 16-16 16-16-7.2-16-16 7.2-16 16-16m0-32c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48m0 192c8.8 0 16 7.2 16 16s-7.2 16-16 16-16-7.2-16-16 7.2-16 16-16m0-32c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst listUnorderedSquareIcon = {\n    name: 'list-unordered-square',\n    content: '<path d=\"M128 160H32V64h96zm0 64H32v96h96zm0 160H32v96h96zm64-256h288V96H192zm0 160h288v-32H192zm0 160h288v-32H192z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst maxHeightIcon = {\n    name: 'max-height',\n    content: '<path d=\"M384 0H96v32h288zm0 479H240.6L320 352h-64V160h64L240 32l-80 128h64v192h-64l79.4 127H96v32h288z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst maxWidthIcon = {\n    name: 'max-width',\n    content: '<path d=\"M0 96v288h32V96zm479 0v143.4L352 160v64H160v-64L32 240l128 80v-64h192v64l127-79.4V384h32V96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst minHeightIcon = {\n    name: 'min-height',\n    content: '<path d=\"M240 192H96v32h288v-32zm144 96H96v32h288zM160 448h160l-80-128zm64 0h32v64h-32zm32-384V0h-32v64h-64l80 128 80-128z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst minWidthIcon = {\n    name: 'min-width',\n    content: '<path d=\"M192 240v144h32V96h-32zm96-144v288h32V96zm160 224V160l-128 80zm0-96h64v32h-64zm-384 0H0v32h64v64l128-80-128-80z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst outlineOffsetIcon = {\n    name: 'outline-offset',\n    content: '<path d=\"M448 32H32v448h448V32zm0 416H64V64h384zM160 320v32h192V160H160zm32-128h128v128H192z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst outlineWidthIcon = {\n    name: 'outline-width',\n    content: '<path d=\"M416 32H32v448h448V32zm0 384H96V96h320zm-256-32h224V128H128v256zm0-224h192v192H160z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst paddingBottomIcon = {\n    name: 'padding-bottom',\n    content: '<path d=\"M288.2 352H256v64h64v64H160v-64h64v-64h-32v-64h96.2zM160 32h64v96h-32.2v32H288v-32h-32V32h64V0H160zm192 192v-32.2h-32V288h32v-32h96v64h32V160h-32v64zm-224 32v32.2h32V192h-32v32H32v-64H0v160h32v-64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst paddingLeftIcon = {\n    name: 'padding-left',\n    content: '<path d=\"M128 288.2V256H64v64H0V160h64v64h64v-32h64v96.2zM448 160v64h-96v-32.2h-32V288h32v-32h96v64h32V160zM256 352h32.2v-32H192v32h32v96h-64v32h160v-32h-64zm-32-224h-32.2v32H288v-32h-32V32h64V0H160v32h64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst paddingRightIcon = {\n    name: 'padding-right',\n    content: '<path d=\"M352 191.8V224h64v-64h64v160h-64v-64h-64v32h-64v-96.2zM32 320v-64h96v32.2h32V192h-32v32H32v-64H0v160zm192-192h-32.2v32H288v-32h-32V32h64V0H160v32h64zm32 224h32.2v-32H192v32h32v96h-64v32h160v-32h-64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst paddingTopIcon = {\n    name: 'padding-top',\n    content: '<path d=\"M191.8 128H224V64h-64V0h160v64h-64v64h32v64h-96.2zM320 448h-64v-96h32.2v-32H192v32h32v96h-64v32h160zM128 256v32.2h32V192h-32v32H32v-64H0v160h32v-64zm224-32v-32.2h-32V288h32v-32h96v64h32V160h-32v64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst paddingIcon = {\n    name: 'padding',\n    content: '<path d=\"M128 288.2V256H32v64H0V160h32v64h96v-32h32v96.2zM448 160v64h-96v-32.2h-32V288h32v-32h96v64h32V160zM256 352h32.2v-32H192v32h32v96h-64v32h160v-32h-64zm-32-224h-32.2v32H288v-32h-32V32h64V0H160v32h64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst positionBottomIcon = {\n    name: 'position-bottom',\n    content: '<path d=\"M32 64v416h448V32H32zm416 0v384H64V64zM96 320h320v96H96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst positionLeftIcon = {\n    name: 'position-left',\n    content: '<path d=\"M448 32H32v448h448V32zm0 416H64V64h384zM96 96h96v320H96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst positionRightIcon = {\n    name: 'position-right',\n    content: '<path d=\"M64 480h416V32H32v448zm0-416h384v384H64zm256 32h96v320h-96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst positionTopIcon = {\n    name: 'position-top',\n    content: '<path d=\"M480 448V32H32v448h448zm-416 0V64h384v384zM96 96h320v96H96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst regularExpressionIcon = {\n    name: 'regular-expression',\n    content: '<path d=\"M442.6 299.7 352 247.4V352h-64V247.4l-90.6 52.3-32-55.4L256 192l-90.6-52.3 32-55.4 90.6 52.3V32h64v104.6l90.6-52.3 32 55.4L384 192l90.6 52.3zM80 384c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst replaceAllIcon = {\n    name: 'replace-all',\n    content: '<path d=\"M288 288h192v192H288zm64-64H224V32h128zM320 64h-64v128h64zM160 352H96V160h96V96H96c-35.3 0-64 28.7-64 64v192c0 35.3 28.7 64 64 64h64v64l96-96-96-96zM448 32v192h32V32zm-32 0h-32v192h32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst replaceSingleIcon = {\n    name: 'replace-single',\n    content: '<path d=\"M288 288h192v192H288zM32 160v192c0 35.3 28.7 64 64 64h64v64l96-96-96-96v64H96V160h160V96H96c-35.3 0-64 28.7-64 64M480 32v192H288V32zm-32 32H320v128h128z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst reportElementIcon = {\n    name: 'report-element',\n    content: '<path d=\"M480 320V192H160v48H96v-80h256V32H32v128h32v320h32v-48h64v48h256V352H160v48H96V272h64v48ZM64 64h256v64H64Zm128 320h192v64H192z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst rightDoubleQuotesIcon = {\n    name: 'right-double-quotes',\n    content: '<path d=\"M136 100.2c-57.4 0-104 46.6-104 104s46.6 104 104 104c20.1 0 38.9-5.7 54.8-15.6-14.2 30.5-37.4 55.2-69.2 73.7-44 25.6-89.1 29.6-89.6 29.6l1.3 15.9 1.3 15.9c2.1-.2 51.8-4.4 102-33.2 47.1-27 103.3-81.3 103.3-186.1.1-1.4.1-2.8.1-4.3 0-57.3-46.6-103.9-104-103.9m344 104c0-57.4-46.6-104-104-104s-104 46.6-104 104 46.6 104 104 104c20.1 0 38.9-5.7 54.8-15.6-14.2 30.5-37.4 55.2-69.2 73.7-44 25.6-89.1 29.6-89.6 29.6l2.6 31.9c2.1-.2 51.8-4.4 102-33.2 47.1-27 103.3-81.3 103.3-186.1.1-1.4.1-2.8.1-4.3\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst wholeWordIcon = {\n    name: 'whole-word',\n    content: '<path d=\"M379 243.6c-2.7-9.3-6.5-17.2-11.7-23.8-5-6.4-11.4-11.4-18.6-15-7.4-3.5-15.9-5.2-25.3-5.2-16.3 0-30 6.9-41.4 20.5V160h-26v192h26v-14.8c10.8 9.8 24.1 14.8 39.7 14.8 8.7 0 16.9-1.8 24.3-5.4 7.5-3.8 14-8.9 19.5-15.5 5.5-6.8 9.7-14.9 12.9-24.4 3-9.6 4.6-20.3 4.6-32.1 0-11.5-1.3-21.8-4-31m-31.8 73.7c-6.6 9.5-15.6 14.2-26.8 14.2-14.5 0-27.3-5.9-38.4-17.8v-69.1c11.9-16.6 25-24.9 39.4-24.9 11.4 0 20 4.6 26.2 13.9 6.1 9.2 9.3 22.9 9.3 41 0 18.9-3.3 33.3-9.7 42.7m-139-107.8c-10.6-7.5-25.2-11.1-44.1-11.1-40.5 0-61.7 15-63.6 44.6h26.1c.7-16.2 12.8-24.4 36-24.4 11 0 19.2 1.6 24.4 4.8 2.6 1.6 4.6 3.4 6.2 5.1 1.5 1.8 2.5 4 3.2 6.6s1.1 5.6 1.4 9.4c.1 3.6.1 8.3.1 13.5h-12.8c-59.3.1-89.1 17.3-89.1 51.5 0 6.4 1.3 12 3.8 17.2 2.4 5.3 5.9 9.6 10.4 13.4 4.4 3.8 9.8 6.7 16 8.7 6.1 2.2 12.7 3.2 20 3.2 20.9 0 51.8-18.6 51.8-18.6V351h26v-97.5c0-22-5.4-36.6-15.8-44m-10.2 100c-2.3 3.4-5.1 6.3-8.4 9-3.2 2.6-6.8 4.9-10.7 6.8-3.9 1.8-8 3.3-12.2 4.3s-8.6 1.4-12.8 1.4c-9.6 0-17-2-22.5-5.9-5.5-4.1-8.3-9.8-8.3-17.2 0-20.6 18.9-30.9 56.9-30.9h18zM448 96h-32v320h32zm0-32H64V32h384zm0 415.6H64v-32h384z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst dataSdsIcon = {\n    name: 'data-sds',\n    content: '<path d=\"M224 152.54c105.6 0 191.4-27.4 191.9-61.3v-.3c0-34-85.9-61.6-191.9-61.6S32.1 56.94 32.1 90.94v.3c.5 33.9 86.3 61.3 191.9 61.3m-191.9 71.9c.5 33.9 86.3 61.3 191.9 61.3s191.4-27.4 192-61.3v-.3l-.1-86.5c-.5 33.9-86.3 61.3-191.9 61.3s-191.49-27.4-192-61.29l.1 86.49zm-.1 41.21.1 86.49v.3c.4 26.7 53.7 49.3 127.9 57.8v-86.8c-74.29-8.4-127.59-31.1-128-57.79m320 37.69 105 70-105 70v-52.5H189v-35h163z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst downloadLightIcon = {\n    name: 'download-light',\n    content: '<path d=\"M368 256 256 384 144 256h96V32h32v224zm112 192H32v32h448z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst eyeSlashIcon = {\n    name: 'eye-slash',\n    content: '<path d=\"m245.43 358.68 24.92 24.92c-4.75.26-9.54.4-14.34.4-94.7 0-179.7-51.5-224-128 13.19-22.83 30.01-43.43 49.65-61.1l23.01 23.01C91.46 229.29 79.51 242.07 69.8 256c26.33 33.77 54.15 53.86 72.6 65.1 39.18 23.88 77.54 33.37 103.03 37.58m131.42-4.44L480 457.39 457.39 480 345.51 368.12s-.07.03-.1.04L232.2 254.94l.11-.03-39.21-39.21-.03.11-26.8-26.8s.04-.05.06-.08l-7.01-7.01s-.06.03-.09.04l-24.17-24.17s.06-.03.09-.05L32 54.61 54.61 32l111.87 111.87A260.2 260.2 0 0 1 256 128c94.8 0 179.8 51.5 224 128-24 41.53-60.05 75.69-103.15 98.24m-7.25-33.14c27.8-16.4 54.1-38.7 72.6-65.1-18.4-26.4-44.8-48.7-72.6-65.1-12.2-7.2-25.1-13.2-38.4-17.9 22.6 20.5 36.8 50.1 36.8 83 0 25.15-8.31 48.37-22.32 67.08l7.01 7.01c5.76-2.76 11.41-5.74 16.91-8.99\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst displayInlineBlockIcon = {\n    name: 'display-inline-block',\n    content: '<path d=\"M448 32h32v448h-32zM32 32h32v448H32zm64 352h320V128H96zm64-192h192v128H160z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst paperPlaneIcon = {\n    name: 'paper-plane',\n    content: '<path d=\"M469.783 271.879 54.329 446.734c-13.149 5.534-26.266-8.042-21.225-21.967l48.3-133.404c2.16-5.966 7.298-10.169 13.326-10.901C312.468 256 239.85 263.839 312.468 256c-72.618-7.839 0 0-217.739-24.462-6.027-.732-11.165-4.935-13.325-10.901l-48.3-133.404C28.063 73.308 41.18 59.732 54.33 65.266l415.454 174.855c13.623 5.734 13.623 26.024 0 31.758\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst gaugeLinearIcon = {\n    name: 'gauge-linear',\n    content: '<path d=\"M16 164h480v184H16zM90 58h110l-55 74zM16 380h36v74H16zm444 0h36v74h-36zm-222 0h36v74h-36zm-111 0h36v36h-36zm222 0h36v36h-36z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst gaugeRadialIcon = {\n    name: 'gauge-radial',\n    content: '<path d=\"M256 16C123.5 16 16 123.5 16 256s107.5 240 240 240 240-107.5 240-240S388.5 16 256 16m0 445.7c-113.4 0-205.7-92.3-205.7-205.7S142.6 50.3 256 50.3 461.7 142.6 461.7 256 369.4 461.7 256 461.7m0-377.1c94.7 0 171.4 76.7 171.5 171.5h-68.6c0-56.8-46.2-102.9-102.9-102.9-22.2 0-42.8 7-59.6 19l37.4 37.4c6.7-3.2 14.3-5 22.2-5 28.4 0 51.4 23 51.4 51.4s-23 51.4-51.4 51.4-51.4-23-51.4-51.4c0-8 1.8-15.5 5-22.2l-37.4-37.4c-11.9 16.9-19 37.4-19 59.6H84.6c0-41.2 14.5-78.9 38.7-108.5l-12.7-12.7 24.2-24.2 12.7 12.7c29.6-24.2 67.3-38.7 108.5-38.7\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst envelopeBoxIcon = {\n    name: 'envelope-box',\n    content: '<path d=\"m377 182.4-88.8 88.8-31.2 29-33.2-29-88.8-88.8c-7.7 2-13.8 8.1-15.8 15.8l73 73-73 73c2 7.7 8.1 13.8 15.8 15.8l73-73 49 44.8 47-44.8 73 73c7.7-2 13.8-8.1 15.8-15.8l-73-73 73-73c-2-7.7-8.1-13.8-15.8-15.8M448 32H64c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32m-32 329.6c0 12.4-10 22.4-22.4 22.4H118.4C106 384 96 374 96 361.6V182.4c0-12.4 10-22.4 22.4-22.4h275.2c12.4 0 22.4 10 22.4 22.4z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst envelopeLinkIcon = {\n    name: 'envelope-link',\n    content: '<path d=\"M224 432c0-5.1.8-10.1 2.3-14.7C232.5 398 250.6 384 272 384h64c-1.5-1.9-3-3.8-4.6-5.6-14.6-16.2-35.8-26.4-59.4-26.4-12.2 0-23.8 2.7-34.1 7.6-4.4 2.1-8.6 4.6-12.5 7.4-16.4 11.8-28.2 29.7-32 50.4-.9 4.7-1.4 9.6-1.4 14.6 0 44.2 35.8 80 80 80 26.2 0 49.4-12.6 64-32h-64c-26.5 0-48-21.5-48-48m208-80c-26.2 0-49.4 12.6-64 32h64c26.5 0 48 21.5 48 48s-21.5 48-48 48h-64c14.6 19.4 37.8 32 64 32 44.2 0 80-35.8 80-80s-35.8-80-80-80m0 64H272c-8.8 0-16 7.2-16 16s7.2 16 16 16h160c8.8 0 16-7.2 16-16s-7.2-16-16-16M32 0C14.3 0 0 14.3 0 32v256c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32zm23.7 32L224 200.3 392.3 32c11 2.9 19.7 11.6 22.6 22.6L310.6 158.9l104.3 104.3c-2.9 11-11.6 19.7-22.6 22.6L288 181.5l-64 64-64-64L55.7 285.8c-11-2.9-19.7-11.6-22.6-22.6l104.3-104.3L33.1 54.6C36 43.6 44.7 34.9 55.7 32\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst envelopeIcon = {\n    name: 'envelope',\n    content: '<path d=\"M64 96c-17.7 0-32 14.3-32 32v256c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V128c0-17.7-14.3-32-32-32zm23.7 32L256 296.3 424.3 128c11 2.9 19.7 11.6 22.6 22.6L342.6 254.9l104.3 104.3c-2.9 11-11.6 19.7-22.6 22.6L320 277.5l-64 64-64-64L87.7 381.8c-11-2.9-19.7-11.6-22.6-22.6l104.3-104.3L65.1 150.6c2.9-11 11.6-19.7 22.6-22.6\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst warningCircleIcon = {\n    name: 'warning-circle',\n    content: '<path d=\"M256 480c123.7 0 224-100.3 224-224S379.7 32 256 32 32 132.3 32 256s100.3 224 224 224m-32-352h64v160h-64zm0 256v-64h64v64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst warningTriangleIcon = {\n    name: 'warning-triangle',\n    content: '<path d=\"M256 32 0 480h512zm-32 160h64v160h-64zm0 256v-64h64v64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst infoSolidIcon = {\n    name: 'info-solid',\n    content: '<path d=\"M256 32C132.3 32 32 132.3 32 256s100.3 224 224 224 224-100.3 224-224S379.7 32 256 32m-32 96h64v64h-64zm96 256H192v-32h32v-96h-32v-32h96v128h32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst fontGrowIcon = {\n    name: 'font-grow',\n    content: '<path d=\"m384 32-96 128h192zM222 96h-60L32 480h60l32.4-96h135.2l32.4 96h60zm-78 230.4 48-141.7 48 141.7z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst fontShrinkIcon = {\n    name: 'font-shrink',\n    content: '<path d=\"m384 160 96-128H288zm-152 0h-48L80 480h48l25.9-80h108.2l25.9 80h48zm-62.4 192L208 233.9 246.4 352z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst textOverflowIcon = {\n    name: 'text-overflow',\n    content: '<path d=\"M288 304v176h32V304zm0-272v176h32V32zM64 32v448h32V32zm288 288v-48H128v-32h224v-48l96 64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst textWrapArrowIcon = {\n    name: 'text-wrap-arrow',\n    content: '<path d=\"M64 176v32h384v-32zm0-64v32h384v-32zm0 256v32h160v-32zm0-64v32h160v-32zm0 128v32h160v-32zm288-32v.12c5.22.04 10.43.04 16.04-.12zm94.44-64.64c-1.28 7.68-4.16 15.04-8 22.4-2.06 3.65-4.27 7.06-6.65 10.24-15.2 20.5-36.6 31.17-63.75 32H352v48l-96-64 96-64v48h14.12c18.88 0 33.28-7.68 43.2-23.68 2.24-3.84 3.84-7.68 5.12-11.52 2.24-8.32 2.24-16.96 0-24.96-2.88-10.56-9.28-20.48-18.88-26.88-8.64-6.08-18.24-8.96-28.8-8.96H64v-32h305.32c34.24.32 65.6 24.32 75.2 56.96.96 3.2 1.6 6.08 1.92 9.28 1.92 9.92 2.24 19.52 0 29.12M64 48v32h384V48z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst textTruncateIcon = {\n    name: 'text-truncate',\n    content: '<path d=\"M448 32v384h-32V64H95.92L96 480H64V32zm0 416h-32v32h32zm-64 .08h-31.92V480H384zm-64-.08h-32v32h32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst textClipIcon = {\n    name: 'text-clip',\n    content: '<path d=\"M64 32v448h32V32zm384 448V32h-32v448zM320 320v-48H128v-32h192v-48l96 64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst borderColorIcon = {\n    name: 'border-color',\n    content: '<path d=\"M480 384v96H168l95.9-96zm-80-182.14L121.86 480H32v-89.86L310.14 112zm-65.28-24.89-22.4-22.4L82.56 384.01l-5.44 5.44 22.72 22.72L128 384.01zm136.02-45.98L426.03 176 336 86.29l45.01-45.02c12.36-12.36 32.33-12.36 45.01 0l44.71 45.02c12.36 12.04 12.36 32.33 0 44.69z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst borderTypeIcon = {\n    name: 'border-type',\n    content: '<path d=\"M479 96H33v64h446zM96 384c0-17.67-14.33-32-32-32s-32 14.33-32 32 14.33 32 32 32 32-14.33 32-32m128 0c0-17.67-14.33-32-32-32s-32 14.33-32 32 14.33 32 32 32 32-14.33 32-32m128 0c0-17.67-14.33-32-32-32s-32 14.33-32 32 14.33 32 32 32 32-14.33 32-32m128 0c0-17.67-14.33-32-32-32s-32 14.33-32 32 14.33 32 32 32 32-14.33 32-32M224 224H32v64h192zm256 0H288v64h192z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst thumbDownOutlineIcon = {\n    name: 'thumb-down-outline',\n    content: '<path d=\"M0 240a48 48 0 0 0 48 48h144v112a48 48 0 0 0 95.7 5.5C299 355 323 303 352 256a32 32 0 0 0 32 32h96a32 32 0 0 0 32-32V32a32 32 0 0 0-32-32h-96a32 32 0 0 0-32 32c-25-18-42-32-80-32H112a48 48 0 0 0-44.6 65.7 48 48 0 0 0-32 64A48 48 0 0 0 12.2 208 47.8 47.8 0 0 0 0 240M383.8 31.7h96v224h-96zm-332 160h-6c-8.8 0-14-7.2-14-16s7.1-16 16-16h32a16 16 0 1 0 0-32h-2c-8.9 0-14-7.2-14-16s7.1-16 16-16h32a16 16 0 1 0 0-32 16 16 0 1 1 0-32h160c23 2 65 36 80 48v128c-49 50-85 142-96 192a16 16 0 1 1-32 0v-144h-176c-8.9 0-16-7.2-16-16s5.1-16 14-16h5.8c8-1 14.2-7.9 14.2-16s-6.2-15-14-16\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst thumbDownIcon = {\n    name: 'thumb-down',\n    content: '<path d=\"M12.2 208a47.8 47.8 0 0 1 23.2-78.3 48 48 0 0 1 32-64A48 48 0 0 1 112 0h160c38 0 55 14 80 32v224c-29 47-53 99-64.3 149.5A48 48 0 0 1 192 400V288H48a48 48 0 0 1-35.8-80M384 32v224a32 32 0 0 0 32 32h64a32 32 0 0 0 32-32V32a32 32 0 0 0-32-32h-64a32 32 0 0 0-32 32\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst thumbUpOutlineIcon = {\n    name: 'thumb-up-outline',\n    content: '<path d=\"M512 208a48 48 0 0 0-48-48H320V48a48 48 0 0 0-95.7-5.5C213 93 189 145 160 192a32 32 0 0 0-32-32H32a32 32 0 0 0-32 32v224a32 32 0 0 0 32 32h96a32 32 0 0 0 32-32c25 18 42 32 80 32h160a48 48 0 0 0 44.6-65.7 48 48 0 0 0 32-64 48 48 0 0 0 23.2-78.3 47.8 47.8 0 0 0 12.2-32M128.2 416.3h-96v-224h96zm332-160h6c8.8 0 14 7.2 14 16s-7.2 16-16 16h-32a16 16 0 1 0 0 32h2c8.8 0 14 7.2 14 16s-7.2 16-16 16h-32a16 16 0 1 0 0 32 16 16 0 1 1 0 32h-160c-23-2-65-36-80-48v-128c49-50 85-142 96-192a16 16 0 1 1 32 0v144h176a16 16 0 0 1 16 16c0 8.9-5.2 16-14 16h-5.8a16.2 16.2 0 0 0-.1 32Z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst thumbUpIcon = {\n    name: 'thumb-up',\n    content: '<path d=\"M499.8 240a47.8 47.8 0 0 1-23.2 78.3 48 48 0 0 1-32 64A48 48 0 0 1 400 448H240c-38 0-55-14-80-32V192c29-47 53-99 64.3-149.5A48 48 0 0 1 320 48v112h144a48 48 0 0 1 35.8 80M128 416V192a32 32 0 0 0-32-32H32a32 32 0 0 0-32 32v224a32 32 0 0 0 32 32h64a32 32 0 0 0 32-32\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst sparklesIcon = {\n    name: 'sparkles',\n    content: '<path d=\"m320 32 54.3 137.7L512 224l-137.7 54.3L320 416l-54.3-137.7L128 224l137.7-54.3zM94 350 0 384l94 34 34 94 34-94 94-34-94-34-34-94zM70.6 70.6 0 96l70.5 25.5L96 192l25.5-70.5L192 96l-70.5-25.5L96 0 70.5 70.5Z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst paragraphMarkIcon = {\n    name: 'paragraph-mark',\n    content: '<path d=\"M423.79 69.29h-74.57v410.16h-37.29V69.29h-74.57v410.16h-37.29V255.73c-61.76 0-111.86-50.1-111.86-111.86s50.1-111.86 111.86-111.86h223.72V69.3Z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst paragraphHeightIcon = {\n    name: 'paragraph-height',\n    content: '<path d=\"M480 64H224V32h256zm0 32H224v32h256zm0 64H224v32h256zm0 64H224v32h256zm0 64H224v32h256zm0 64H224v32h256zm0 64H224v32h256zm-368 32 80-128h-64V160h64L112 32 32 160h64v160H32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst userOutlineIcon = {\n    name: 'user-outline',\n    content: '<path d=\"M256 224c53.02 0 96-42.98 96-96s-42.98-96-96-96-96 42.98-96 96 42.98 96 96 96m0-32c-35.348 0-64-28.654-64-64s28.652-64 64-64 64 28.654 64 64-28.652 64-64 64M96 480c-17.7 0-32-14.301-32-32 0-106 86-192 192-192s192 86 192 192c0 17.699-14.301 32-32 32zm160-192c-88.367 0-160 71.635-160 160h320c0-88.365-71.633-160-160-160\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst undoIcon = {\n    name: 'undo',\n    content: '<path d=\"M479.9 416c-57.7-56.6-136.7-96-223.9-96v128L32 256 256 64v128c122.2 0 221.5 102.4 223.9 224\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst redoIcon = {\n    name: 'redo',\n    content: '<path d=\"M256 192V64l224 192-224 192V320c-87.2 0-166.2 39.4-223.9 96C34.5 294.4 133.9 192 256 192\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst arrowRotateCcwIcon = {\n    name: 'arrow-rotate-ccw',\n    content: '<path d=\"m62 176 55.5 32C103.8 231.6 96 258.9 96 288c0 88.2 71.8 160 160 160s160-71.8 160-160-71.8-160-160-160v64L96 96 256 0v64c123.7 0 224 100.3 224 224S379.7 512 256 512 32 411.7 32 288c0-40.8 10.9-79.1 30-112\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst arrowRotateCwIcon = {\n    name: 'arrow-rotate-cw',\n    content: '<path d=\"M480 288c0 123.7-100.3 224-224 224S32 411.7 32 288 132.3 64 256 64V0l160 96-160 96v-64c-88.2 0-160 71.8-160 160s71.8 160 160 160 160-71.8 160-160c0-29.1-7.8-56.4-21.5-80l55.5-32c19.1 32.9 30 71.2 30 112\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst arrowsNoRepeatIcon = {\n    name: 'arrows-no-repeat',\n    content: '<path d=\"m321 434.2 47.5 47.5C335.5 501 297 512 256 512 132.3 512 32 411.7 32 288c0-41 11-79.5 30.3-112.6l47.5 47.5c-8.9 19.9-13.8 41.9-13.8 65 0 88.2 71.8 160 160 160 23.1.1 45.2-4.8 65-13.7m118.3-17.5c12.9-18.3 23.1-38.7 30.1-60.4 6.9-21.5 10.6-44.5 10.6-68.3 0-40.8-10.9-79.1-30-112l-55.5 32c13.6 23.5 21.5 50.9 21.5 80 0 4.8-.2 9.5-.6 14.2-2.2 24.8-10.1 47.9-22.3 68.2L173.6 150.9c20.3-12.2 43.4-20.1 68.2-22.3 4.7-.4 9.4-.6 14.2-.6v64l160-96L256 0v64c-23.8 0-46.7 3.7-68.3 10.6-21.8 7-42.1 17.2-60.4 30.1L22.6 0 0 22.6 489.4 512l22.6-22.6z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst arrowRotateCcwSmallIcon = {\n    name: 'arrow-rotate-ccw-small',\n    content: '<path d=\"m101.4 238.6 46.4 12.4c-2.5 9.3-3.8 19-3.8 29 0 61.8 50.2 112 112 112s112-50.2 112-112-50.2-112-112-112v56l-128-80 128-80v56c88.4 0 160 71.6 160 160s-71.6 160-160 160S96 368.4 96 280c0-14.3 1.9-28.2 5.4-41.4\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst arrowRotateCwSmallIcon = {\n    name: 'arrow-rotate-cw-small',\n    content: '<path d=\"M416 280c0 88.4-71.6 160-160 160S96 368.4 96 280s71.6-160 160-160V64l128 80-128 80v-56c-61.8 0-112 50.2-112 112s50.2 112 112 112 112-50.2 112-112c0-10-1.3-19.7-3.8-29l46.4-12.4c3.5 13.2 5.4 27.1 5.4 41.4\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst clockIcon = {\n    name: 'clock',\n    content: '<path d=\"M256 128h-32v160h160v-32H256zm0-96C132.3 32 32 132.3 32 256s100.3 224 224 224 224-100.3 224-224S379.7 32 256 32m0 416c-105.9 0-192-86.1-192-192S150.1 64 256 64s192 86.1 192 192-86.1 192-192 192\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst calendarIcon = {\n    name: 'calendar',\n    content: '<path d=\"M416 416H288V288h128zm64-352v384c0 17.6-14.4 32-32 32H64c-17.6 0-32-14.4-32-32V64c0-17.6 14.4-32 32-32h64V0h64v32h128V0h64v32h64c17.6 0 32 14.4 32 32m-32 128H64v255.9l.1.1 383.9-.1zm0-127.9q-.15-.15 0 0l-64-.1v32h-64V64H192v32h-64V64H64.1l-.1.1V160h384z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst saveIcon = {\n    name: 'save',\n    content: '<path d=\"M384 32H64c-17.6 0-32 14.4-32 32v384c0 17.6 14.4 32 32 32h384c17.6 0 32-14.4 32-32V128zm-64 32v128h-64V64zm128 384-383.9.1-.1-.1V64.1l.1-.1H96v160h256V64h18.7l77.3 77.3z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst printIcon = {\n    name: 'print',\n    content: '<path d=\"M448 160h-32V96l-64-64H128c-17.7 0-32 14.3-32 32v96H64c-17.6 0-32 14.4-32 32v160c0 17.6 14.4 32 32 32h32v64c0 17.6 14.4 32 32 32h256c17.6 0 32-14.4 32-32v-64h32c17.6 0 32-14.4 32-32V192c0-17.6-14.4-32-32-32M128 64h192v64h64v64H128zm320 256h-64v127.9l-.1.1H128.1l-.1-.1V320H64v-32h384zm-288 0h192v32H160zm0 64h160v32H160z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst pencilIcon = {\n    name: 'pencil',\n    content: '<path d=\"m334.9 86.6 45.3-45.3c12.4-12.4 32.8-12.4 45.3 0l45.3 45.3c12.4 12.4 12.4 32.8 0 45.3l-45.3 45.3zm-22.6 22.6L32 389.5V480h90.5l280.3-280.3zM99.9 412.1l-22.6-22.6 235-235 22.6 22.6z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst trashIcon = {\n    name: 'trash',\n    content: '<path d=\"M416 96h-96V64c0-17.6-14.4-32-32-32h-96c-17.6 0-32 14.4-32 32v32H64v64h32v288c0 17.6 14.4 32 32 32h224c17.6 0 32-14.4 32-32V160h32zM192 64h95.9l.1.1V96h-96c.1-.1.1-32.1 0-32m160 384H128.1l-.1-.1V160h32v256h32V160h32v256h32V160h32v256h32V160h32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst paperclipIcon = {\n    name: 'paperclip',\n    content: '<path d=\"M384 128v256h-32V128c0-52.9-43.1-96-96-96s-96 43.1-96 96v288c0 35.3 28.7 64 64 64s64-28.7 64-64V128c0-17.6-14.4-32-32-32s-32 14.4-32 32v256h-32V128c0-35.3 28.7-64 64-64s64 28.7 64 64v288c0 52.9-43.1 96-96 96s-96-43.1-96-96V128C128 57.4 185.4 0 256 0s128 57.4 128 128\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst paperclipAltIcon = {\n    name: 'paperclip-alt',\n    content: '<path d=\"M407 452.1c-18.6 18.6-43 27.9-67.5 27.9s-48.9-9.3-67.6-27.9L69.3 249.4c-49.7-49.7-49.7-130.5 0-180.2s130.5-49.7 180.2 0l180.2 180.2-22.7 22.5L226.9 91.8c-37.2-37.2-97.9-37.2-135.1 0s-37.2 97.9 0 135.1l202.7 202.7c24.8 24.8 65.2 24.8 90.1 0 24.8-24.8 24.8-65.2 0-90.1L181.9 136.8c-12.4-12.4-32.7-12.4-45 0s-12.4 32.7 0 45L317 362l-22.5 22.5-180.2-180.1c-24.8-24.8-24.8-65.2 0-90.1s65.2-24.8 90.1 0L407 317c37.3 37.2 37.3 97.9 0 135.1\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst linkIcon = {\n    name: 'link',\n    content: '<path d=\"M384 384c-47.4 0-88.7-25.8-110.8-64H384c35.4 0 64-28.6 64-64s-28.7-64-64-64H273.2c22.1-38.2 63.5-64 110.8-64 70.7 0 128 57.3 128 128s-57.3 128-128 128M96 256c0-17.7 14.3-32 32-32h256c17.7 0 32 14.3 32 32s-14.3 32-32 32H128c-17.7 0-32-14.3-32-32m-32 0c0 35.4 28.6 64 64 64h110.8c-22.1 38.2-63.5 64-110.8 64C57.3 384 0 326.7 0 256s57.3-128 128-128c47.4 0 88.7 25.8 110.8 64H128c-35.4 0-64 28.6-64 64\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst unlinkIcon = {\n    name: 'unlink',\n    content: '<path d=\"M384 384c-47.4 0-88.7-25.8-110.8-64H384c35.4 0 64-28.6 64-64s-28.7-64-64-64H273.2c22.1-38.2 63.5-64 110.8-64 70.7 0 128 57.3 128 128s-57.3 128-128 128M64 256c0 35.4 28.6 64 64 64h110.8c-22.1 38.2-63.5 64-110.8 64C57.3 384 0 326.7 0 256s57.3-128 128-128c47.4 0 88.7 25.8 110.8 64H128c-35.3 0-64 28.6-64 64M272 97.6V0h-32v97.6c5.2-1 10.5-1.6 16-1.6s10.8.6 16 1.6m-60.1 11.7-69-69-22.6 22.6 69 69c5.9-9 13.6-16.7 22.6-22.6m110.8 22.6 69-69-22.6-22.6-69 69c9 5.9 16.7 13.6 22.6 22.6M256 416c-5.5 0-10.8-.6-16-1.6V512h32v-97.6c-5.2 1-10.5 1.6-16 1.6m-66.7-35.9-69 69 22.6 22.6 69-69c-9-5.9-16.7-13.6-22.6-22.6m110.8 22.6 69 69 22.6-22.6-69-69c-5.9 9-13.6 16.7-22.6 22.6\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst linkVerticalIcon = {\n    name: 'link-vertical',\n    content: '<path d=\"M128 384c0-47.4 25.8-88.7 64-110.8V384c0 35.4 28.6 64 64 64s64-28.7 64-64V273.2c38.2 22.1 64 63.5 64 110.8 0 70.7-57.3 128-128 128s-128-57.3-128-128M256 96c17.7 0 32 14.3 32 32v256c0 17.7-14.3 32-32 32s-32-14.3-32-32V128c0-17.7 14.3-32 32-32m0-32c-35.4 0-64 28.6-64 64v110.8c-38.2-22.1-64-63.5-64-110.8C128 57.3 185.3 0 256 0s128 57.3 128 128c0 47.4-25.8 88.7-64 110.8V128c0-35.4-28.6-64-64-64\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst unlinkVerticalIcon = {\n    name: 'unlink-vertical',\n    content: '<path d=\"M414.4 272H512v-32h-97.6c1 5.2 1.6 10.5 1.6 16s-.5 10.8-1.6 16m-11.6-60.1 69-69-22.6-22.6-69 69c8.9 5.9 16.6 13.6 22.6 22.6m-22.7 110.8 69 69 22.6-22.6-69-69c-5.9 9-13.6 16.7-22.6 22.6M96 256c0-5.5.6-10.8 1.6-16H0v32h97.6c-1-5.2-1.6-10.5-1.6-16m35.9-66.8-69-69-22.6 22.6 69 69c5.9-8.9 13.6-16.6 22.6-22.6m-22.6 110.9-69 69 22.6 22.6 69-69c-9-5.9-16.7-13.6-22.6-22.6M128 384c0-47.4 25.8-88.7 64-110.8V384c0 35.4 28.6 64 64 64s64-28.7 64-64V273.2c38.2 22.1 64 63.5 64 110.8 0 70.7-57.3 128-128 128s-128-57.3-128-128M256 64c-35.4 0-64 28.6-64 64v110.8c-38.2-22.1-64-63.5-64-110.8C128 57.3 185.3 0 256 0s128 57.3 128 128c0 47.4-25.8 88.7-64 110.8V128c0-35.4-28.6-64-64-64\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst lockIcon = {\n    name: 'lock',\n    content: '<path d=\"M384 224h-32v-96c0-53-43-96-96-96s-96 43-96 96v96h-32c-17.6 0-32 14.4-32 32v192c0 17.6 14.4 32 32 32h256c17.6 0 32-14.4 32-32V256c0-17.6-14.4-32-32-32m-192-96c0-35.3 28.7-64 64-64s64 28.7 64 64v96H192zm64 256c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst unlockIcon = {\n    name: 'unlock',\n    content: '<path d=\"M416 224H224v-96c0-53-43-96-96-96s-96 43-96 96v128h32V128c0-35.3 28.7-64 64-64s64 28.7 64 64v96h-32c-17.6 0-32 14.4-32 32v192c0 17.6 14.4 32 32 32h256c17.6 0 32-14.4 32-32V256c0-17.6-14.4-32-32-32M288 384c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst cancelIcon = {\n    name: 'cancel',\n    content: '<path d=\"M256 32c-50.3 0-96.8 16.6-134.1 44.6-17.2 12.8-32.4 28.1-45.3 45.3C48.6 159.2 32 205.7 32 256c0 123.7 100.3 224 224 224 50.3 0 96.8-16.6 134.1-44.6 17.2-12.8 32.4-28.1 45.3-45.3 28-37.4 44.6-83.8 44.6-134.1 0-123.7-100.3-224-224-224m0 384c-88.2 0-160-71.8-160-160 0-32.6 9.8-62.9 26.6-88.2l221.6 221.6C318.9 406.2 288.6 416 256 416m133.4-71.8L167.8 122.6C193.1 105.8 223.4 96 256 96c88.2 0 160 71.8 160 160 0 32.6-9.8 62.9-26.6 88.2\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst cancelOutlineIcon = {\n    name: 'cancel-outline',\n    content: '<path d=\"M256 32c-56.1 0-107.4 20.6-146.7 54.7-8.1 7-15.6 14.6-22.6 22.6C52.6 148.6 32 199.9 32 256c0 123.7 100.3 224 224 224 56.1 0 107.4-20.6 146.7-54.7 8.1-7 15.6-14.6 22.6-22.6C459.4 363.4 480 312.1 480 256c0-123.7-100.3-224-224-224m0 416c-106 0-192-86-192-192 0-47.2 17.1-90.5 45.4-124L380 402.6c-33.5 28.3-76.8 45.4-124 45.4m146.6-68L132 109.4C165.5 81.1 208.8 64 256 64c106 0 192 86 192 192 0 47.2-17.1 90.5-45.4 124\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst cancelCircleIcon = {\n    name: 'cancel-circle',\n    content: '<path d=\"m169.4 214.6 128 128c-12.5 6-26.6 9.4-41.4 9.4-52.9 0-96-43.1-96-96 0-14.8 3.4-28.8 9.4-41.4M256 160c-14.8 0-28.8 3.4-41.4 9.4l128 128c6-12.5 9.4-26.6 9.4-41.4 0-52.9-43.1-96-96-96m224 96c0 123.7-100.3 224-224 224S32 379.7 32 256 132.3 32 256 32s224 100.3 224 224m-64 0c0-88.2-71.8-160-160-160-32.6 0-62.9 9.8-88.2 26.6-17.9 11.9-33.4 27.3-45.3 45.3C105.8 193.1 96 223.4 96 256c0 88.2 71.8 160 160 160 32.6 0 62.9-9.8 88.2-26.6 17.9-11.9 33.4-27.3 45.3-45.3 16.7-25.2 26.5-55.5 26.5-88.1\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst checkIcon = {\n    name: 'check',\n    content: '<path d=\"M434.7 82.7 480 128 192 416 32 256l45.3-45.3L192 325.5z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst checkOutlineIcon = {\n    name: 'check-outline',\n    content: '<path d=\"M256 32C132.3 32 32 132.3 32 256s100.3 224 224 224 224-100.3 224-224S379.7 32 256 32m0 416c-106 0-192-86-192-192S150 64 256 64s192 86 192 192-86 192-192 192m-32-154-83-83-45 45 128 128 176-176-45-45z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst checkCircleIcon = {\n    name: 'check-circle',\n    content: '<path d=\"M256 32C132.3 32 32 132.3 32 256s100.3 224 224 224 224-100.3 224-224S379.7 32 256 32m-32 352L96 256l45-45 83 83 147-147 45 45z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst xIcon = {\n    name: 'x',\n    content: '<path d=\"M416 141.3 301.3 256 416 370.7 370.7 416 256 301.3 141.3 416 96 370.7 210.7 256 96 141.3 141.3 96 256 210.7 370.7 96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst xOutlineIcon = {\n    name: 'x-outline',\n    content: '<path d=\"M384 338.7 338.7 384 256 301.3 173.3 384 128 338.7l82.7-82.7-82.7-82.7 45.3-45.3 82.7 82.7 82.7-82.7 45.3 45.3-82.7 82.7zM256 32C132.3 32 32 132.3 32 256s100.3 224 224 224 224-100.3 224-224S379.7 32 256 32m0 416c-106 0-192-86-192-192S150 64 256 64s192 86 192 192-86 192-192 192\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst xCircleIcon = {\n    name: 'x-circle',\n    content: '<path d=\"M256 32C132.3 32 32 132.3 32 256s100.3 224 224 224 224-100.3 224-224S379.7 32 256 32m128 306.7L338.7 384 256 301.3 173.3 384 128 338.7l82.7-82.7-82.7-82.7 45.3-45.3 82.7 82.7 82.7-82.7 45.3 45.3-82.7 82.7z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst plusIcon = {\n    name: 'plus',\n    content: '<path d=\"M288 224V96h-64v128H96v64h128v128h64V288h128v-64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst plusOutlineIcon = {\n    name: 'plus-outline',\n    content: '<path d=\"M288 288v96h-64v-96h-96v-64h96v-96h64v96h96v64zM256 32C132.3 32 32 132.3 32 256s100.3 224 224 224 224-100.3 224-224S379.7 32 256 32m0 416c-106 0-192-86-192-192S150 64 256 64s192 86 192 192-86 192-192 192\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst plusCircleIcon = {\n    name: 'plus-circle',\n    content: '<path d=\"M256 32C132.3 32 32 132.3 32 256s100.3 224 224 224 224-100.3 224-224S379.7 32 256 32m32 256v96h-64v-96h-96v-64h96v-96h64v96h96v64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst minusIcon = {\n    name: 'minus',\n    content: '<path d=\"M96 224v64h320v-64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst minusOutlineIcon = {\n    name: 'minus-outline',\n    content: '<path d=\"M128 224h256v64H128zM256 32C132.3 32 32 132.3 32 256s100.3 224 224 224 224-100.3 224-224S379.7 32 256 32m0 416c-106 0-192-86-192-192S150 64 256 64s192 86 192 192-86 192-192 192\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst minusCircleIcon = {\n    name: 'minus-circle',\n    content: '<path d=\"M256 32C132.3 32 32 132.3 32 256s100.3 224 224 224 224-100.3 224-224S379.7 32 256 32M128 288v-64h256v64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst sortAscIcon = {\n    name: 'sort-asc',\n    content: '<path d=\"M96 352h320v64H96zm0-128h224v64H96zm0-128h128v64H96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst sortDescIcon = {\n    name: 'sort-desc',\n    content: '<path d=\"M96 96h320v64H96zm0 128h224v64H96zm0 128h128v64H96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst sortClearIcon = {\n    name: 'sort-clear',\n    content: '<path d=\"m110.9 224 64 64H96v-64zM96 416h128v-64H96zm214.6-128h9.4v-64h-73.4l-64-64H416V96H118.6l-64-64L32 54.6 457.4 480l22.6-22.6z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst sortAscSmallIcon = {\n    name: 'sort-asc-small',\n    content: '<path d=\"M256 192v224h-32V192h-96L240 64l112 128z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst sortDescSmallIcon = {\n    name: 'sort-desc-small',\n    content: '<path d=\"M352 288 240 416 128 288h96V64h32v224z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst filterIcon = {\n    name: 'filter',\n    content: '<path d=\"M64 64v32l160 160v224l64-64V256L448 96V64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst filterClearIcon = {\n    name: 'filter-clear',\n    content: '<path d=\"m143.5 64 168.2 168.2L288 256v160l-64 64V256L64 96V64zm236.1 100.4L448 96V64H279.3l-64-64L192 22l298 298 22-23.3z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst filterSmallIcon = {\n    name: 'filter-small',\n    content: '<path d=\"M128 128h256v32l-96 96v96l-64 64V256l-96-96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst filterSortAscSmallIcon = {\n    name: 'filter-sort-asc-small',\n    content: '<path d=\"M448 128v32l-96 96v64l-32 64V256l-96-96v-32zM64 224h64v160h32V224h64l-80-96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst filterSortDescSmallIcon = {\n    name: 'filter-sort-desc-small',\n    content: '<path d=\"M448 128v32l-96 96v64l-32 64V256l-96-96v-32zM144 384l80-96h-64V128h-32v160H64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst filterAddExpressionIcon = {\n    name: 'filter-add-expression',\n    content: '<path d=\"M480 64v32H32V64zm-192 96h192v-32H288zm0 128h192v-64H288zm0 96h192v-32H288zm0 64h192v-32H288zM96 352h64v-64h64v-64h-64v-64H96v64H32v64h64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst filterAddGroupIcon = {\n    name: 'filter-add-group',\n    content: '<path d=\"M352 352v32h-32v64h32v32h-64V352zm64 0v32h32v64h-32v32h64V352zM160 160H96v64H32v64h64v64h64v-64h64v-64h-64zm128 0h192v-32H288zM32 64v32h448V64zm256 224h192v-64H288z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst loginIcon = {\n    name: 'login',\n    content: '<path d=\"M384 480h96V32h-96zM32 224v64h128v96l160-128-160-128v96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst logoutIcon = {\n    name: 'logout',\n    content: '<path d=\"M128 32H32v448h96zm64 192v64h128v96l160-128-160-128v96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst downloadIcon = {\n    name: 'download',\n    content: '<path d=\"M32 384v96h448v-96zM288 32h-64v128h-96l128 160 128-160h-96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst uploadIcon = {\n    name: 'upload',\n    content: '<path d=\"M32 384v96h448v-96zm192-64h64V192h96L256 32 128 192h96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst hyperlinkOpenIcon = {\n    name: 'hyperlink-open',\n    content: '<path d=\"M32 480h448V256h-32v192H64V64h192V32H32zM320 32l56.9 56.9.5.5L224 242.7l45.3 45.3 153.3-153.4L480 192V32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst hyperlinkOpenSmIcon = {\n    name: 'hyperlink-open-sm',\n    content: '<path d=\"M96 416h320v-96h-32v64H128V128h64V96H96zM256 96h160v160l-57.4-57.4L237.3 320 192 274.7l121.4-121.4-.5-.5z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst launchIcon = {\n    name: 'launch',\n    content: '<path d=\"M96 96v320h96v-32h-64V128h256v64h32V96zm320 160v160H256l57.4-57.4L192 237.3l45.3-45.3 121.4 121.4.5-.5z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst windowIcon = {\n    name: 'window',\n    content: '<path d=\"M96 96v320h320V96zm288 288H128V192h256z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst windowRestoreIcon = {\n    name: 'window-restore',\n    content: '<path d=\"M448 32v288h-32V128H160V32zM64 192h288v288H64zm32 256h224V288H96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst windowMinimizeIcon = {\n    name: 'window-minimize',\n    content: '<path d=\"M416 288v64H96v-64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst gearIcon = {\n    name: 'gear',\n    content: '<path d=\"m462.7 317.9-41.5-31.4c1.8-9.9 2.8-20.1 2.8-30.5s-1-20.6-2.8-30.5l41.5-31.4c6.4-4.9 8.2-13.8 4.2-20.8L433 114.6c-4-7-12.6-9.9-20.1-6.7l-48 20.2c-15.4-13.2-33.3-23.6-52.8-30.5L305.8 46c-1-8-7.8-14-15.9-14h-67.8c-8.1 0-14.9 6-15.9 14l-6.5 51.6c-19.5 6.9-37.4 17.3-52.8 30.5l-48-20.2c-7.4-3.1-16-.2-20.1 6.7l-33.9 58.7c-4 7-2.2 15.9 4.2 20.8l41.5 31.4C89 235.4 88 245.6 88 256s1 20.6 2.8 30.5l-41.5 31.4c-6.4 4.9-8.2 13.8-4.2 20.8L79 397.4c4 7 12.6 9.9 20.1 6.7l48-20.2c15.4 13.2 33.3 23.6 52.8 30.5l6.5 51.6c1 8 7.8 14 15.9 14h67.8c8.1 0 14.9-6 15.9-14l6.5-51.6c19.5-6.9 37.4-17.3 52.8-30.5l48 20.2c7.4 3.1 16 .2 20.1-6.7l33.9-58.7c3.7-7 1.9-15.9-4.6-20.8M256 340c-46.4 0-84-37.6-84-84s37.6-84 84-84 84 37.6 84 84-37.6 84-84 84\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst gearsIcon = {\n    name: 'gears',\n    content: '<path d=\"m331.9 364.2-29.6-22.4c1.3-7.1 2-14.3 2-21.8 0-7.4-.7-14.7-2-21.8l29.6-22.4c4.6-3.5 5.9-9.8 3-14.8l-24.2-42c-2.9-5-9-7.1-14.3-4.8L262 228.7c-11-9.4-23.8-16.9-37.7-21.8l-4.6-36.9c-.7-5.7-5.6-10-11.3-10H160c-5.8 0-10.6 4.3-11.3 10l-4.6 36.9c-13.9 4.9-26.7 12.4-37.7 21.8l-34.3-14.5c-5.3-2.2-11.5-.2-14.3 4.8l-24.3 42c-2.9 5-1.6 11.3 3 14.8l29.6 22.4c-1.3 7.1-2 14.3-2 21.8 0 7.4.7 14.7 2 21.8l-29.6 22.4c-4.6 3.5-5.9 9.8-3 14.8l24.2 42c2.9 5 9 7.1 14.3 4.8l34.3-14.5c11 9.4 23.8 16.9 37.7 21.8l4.6 36.9c.7 5.7 5.6 10 11.3 10h48.4c5.8 0 10.6-4.3 11.3-10l4.6-36.9c13.9-4.9 26.7-12.4 37.7-21.8l34.3 14.5c5.3 2.2 11.5.2 14.3-4.8l24.2-41.9c3-5 1.8-11.4-2.8-14.9M184.2 380c-33.1 0-60-26.9-60-60s26.9-60 60-60 60 26.9 60 60-26.9 60-60 60m293.1-225.5L459.4 141c.8-4.2 1.2-8.6 1.2-13 0-4.5-.4-8.8-1.2-13l17.8-13.4c2.7-2.1 3.5-5.9 1.8-8.9l-14.5-25.2c-1.8-3-5.4-4.2-8.6-2.8l-20.6 8.7c-6.7-5.7-14.3-10.1-22.7-13.1L409.9 38c-.4-3.4-3.3-6-6.8-6h-29c-3.4 0-6.4 2.5-6.8 6l-2.7 22.2c-8.3 2.9-16 7.5-22.7 13.1l-20.6-8.7c-3.2-1.4-6.9-.1-8.6 2.8l-14.5 25.2c-1.8 3-1 6.9 1.8 8.9l17.8 13.4c-.8 4.2-1.2 8.6-1.2 13 0 4.5.4 8.8 1.2 13L300 154.5c-2.7 2.1-3.5 5.9-1.8 8.9l14.5 25.2c1.8 3 5.4 4.2 8.6 2.8l20.6-8.7c6.7 5.7 14.3 10.1 22.7 13.1l2.7 22.2c.4 3.4 3.3 6 6.8 6h29c3.4 0 6.4-2.5 6.8-6l2.7-22.2c8.3-2.9 16-7.5 22.7-13.1l20.6 8.7c3.2 1.4 6.9.1 8.6-2.8l14.5-25.2c1.8-3 1-6.9-1.7-8.9m-88.7 9.5c-19.9 0-36.1-16.2-36.1-36.1s16.2-36.1 36.1-36.1 36.1 16.2 36.1 36.1c-.1 19.9-16.1 36.1-36.1 36.1\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst wrenchIcon = {\n    name: 'wrench',\n    content: '<path d=\"M470.7 402.7 306 238.1c9-18.8 14-39.8 14-62.1 0-79.5-64.5-144-144-144-22.2 0-43.3 5-62.1 14l76.4 76.4c12.4 12.4 12.4 32.8 0 45.3l-22.6 22.6c-12.4 12.4-32.8 12.4-45.3 0L46 113.9c-9 18.8-14 39.9-14 62.1 0 79.5 64.5 144 144 144 22.3 0 43.4-5.1 62.2-14.1l164.7 164.7c12.3 12.5 32.7 12.5 45.1.1l22.7-22.7c12.4-12.4 12.4-32.8 0-45.3M448 425.5 425.4 448 265.8 288.5c8.3-6.7 15.9-14.3 22.6-22.6z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst eyeIcon = {\n    name: 'eye',\n    content: '<path d=\"M256 128c-94.8 0-179.8 51.5-224 128 44.3 76.5 129.3 128 224 128s179.8-51.5 224-128c-44.2-76.5-129.2-128-224-128m-32 64c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32M69.8 256c18.4-26.4 44.8-48.7 72.6-65.1 12.2-7.2 25.1-13.2 38.4-17.9-22.6 20.5-36.8 50.1-36.8 83s14.2 62.5 36.8 83c-13.3-4.7-26.2-10.7-38.4-17.9-27.8-16.4-54.2-38.7-72.6-65.1m299.8 65.1c-12.2 7.2-25.1 13.2-38.4 17.9 22.6-20.5 36.8-50.1 36.8-83s-14.2-62.5-36.8-83c13.3 4.7 26.2 10.7 38.4 17.9 27.8 16.4 54.2 38.7 72.6 65.1-18.5 26.4-44.8 48.7-72.6 65.1\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst searchIcon = {\n    name: 'search',\n    content: '<path d=\"M365.3 320h-22.7l-26.7-26.7C338.5 265.7 352 230.4 352 192c0-88.4-71.6-160-160-160S32 103.6 32 192s71.6 160 160 160c38.4 0 73.7-13.5 101.3-36.1l26.7 26.7v22.7L434.7 480l45.3-45.3zM64 192c0-70.7 57.3-128 128-128s128 57.3 128 128-57.3 128-128 128S64 262.7 64 192\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst zoomInIcon = {\n    name: 'zoom-in',\n    content: '<path d=\"M288 224h-64v64h-64v-64H96v-64h64V96h64v64h64zm192 210.7L434.7 480 320 365.3v-22.7l-26.7-26.7C265.7 338.5 230.4 352 192 352c-88.4 0-160-71.6-160-160S103.6 32 192 32s160 71.6 160 160c0 38.4-13.5 73.7-36.1 101.3l26.7 26.7h22.7zM192 320c70.7 0 128-57.3 128-128S262.7 64 192 64 64 121.3 64 192s57.3 128 128 128\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst zoomOutIcon = {\n    name: 'zoom-out',\n    content: '<path d=\"M288 224H96v-64h192zm192 210.7L434.7 480 320 365.3v-22.7l-26.7-26.7C265.7 338.5 230.4 352 192 352c-88.4 0-160-71.6-160-160S103.6 32 192 32s160 71.6 160 160c0 38.4-13.5 73.7-36.1 101.3l26.7 26.7h22.7zM192 320c70.7 0 128-57.3 128-128S262.7 64 192 64 64 121.3 64 192s57.3 128 128 128\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst arrowsMoveIcon = {\n    name: 'arrows-move',\n    content: '<path d=\"M384 320v-32h-96v96h32l-64 96-64-96h32v-96h-96v32l-96-64 96-64v32h96v-96h-32l64-96 64 96h-32v96h96v-32l96 64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst calculatorIcon = {\n    name: 'calculator',\n    content: '<path d=\"M64 64v384h384V64zm96 352H96v-64h64zm0-96H96v-64h64zm96 96h-64v-64h64zm0-96h-64v-64h64zm160 96h-96V256h96zm0-224H96V96h320z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst cartIcon = {\n    name: 'cart',\n    content: '<path d=\"M192 368c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48m144-48c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48M128 96V64H32v32h64v192h288v-32H128zm32 128h256v-32H160zm0-96v32h288v-32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst connectorIcon = {\n    name: 'connector',\n    content: '<path d=\"M416 112c0 26.51-21.49 48-48 48-20.898 0-38.667-13.359-45.258-32H256v288h-98.742c-6.591 18.641-24.36 32-45.258 32-26.51 0-48-21.49-48-48s21.49-48 48-48c20.898 0 38.667 13.359 45.258 32H224V96h98.742c6.591-18.641 24.36-32 45.258-32 26.51 0 48 21.49 48 48\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst plusSmIcon = {\n    name: 'plus-sm',\n    content: '<path d=\"M352 224v64h-64v64h-64v-64h-64v-64h64v-64h64v64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst minusSmIcon = {\n    name: 'minus-sm',\n    content: '<path d=\"M352 224v64H160v-64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst kpiStatusDenyIcon = {\n    name: 'kpi-status-deny',\n    content: '<path d=\"M480 256 256 480 32 256 256 32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst kpiStatusHoldIcon = {\n    name: 'kpi-status-hold',\n    content: '<path d=\"M256 64 32 448h448z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst kpiStatusOpenIcon = {\n    name: 'kpi-status-open',\n    content: '<path d=\"M480 256c0 123.7-100.3 224-224 224S32 379.7 32 256 132.3 32 256 32s224 100.3 224 224\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst equalIcon = {\n    name: 'equal',\n    content: '<path d=\"M96 288h320v64H96zm0-128v64h320v-64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst notEqualIcon = {\n    name: 'not-equal',\n    content: '<path d=\"m290.7 224-37.3 64H416v64H216l-56 96h-48l56-96H96v-64h109.3l37.3-64H96v-64h184l56-96h48l-56 96h88v64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst lessOrEqualIcon = {\n    name: 'less-or-equal',\n    content: '<path d=\"m318.1 352-160-160 160-160L352 65.9 225.9 192 352 318.1zM128 416v32h256v-32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst greaterOrEqualIcon = {\n    name: 'greater-or-equal',\n    content: '<path d=\"M160 318.1 286.1 192 160 65.9 193.9 32l160 160-160 160zM128 416v32h256v-32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst divideIcon = {\n    name: 'divide',\n    content: '<path d=\"M416 64 192 448h-64L352 64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst accessibilityIcon = {\n    name: 'accessibility',\n    content: '<path d=\"M208 48c0-26.5 21.5-48 48-48s48 21.5 48 48-21.5 48-48 48-48-21.5-48-48m240 112v-32H64v32l128 16v80l-32 224h48l32-160h32l32 160h48l-32-224v-80z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst barcodeOutlineIcon = {\n    name: 'barcode-outline',\n    content: '<path d=\"M96 384H64V128h32zm96-256h-64v224h64zm64 0h-32v224h32zm64 0h-32v224h32zm64 0h-32v224h32zm64 0h-32v256h32zm64-32v320c0 17.7-14.3 32-32 32H32c-17.7 0-32-14.3-32-32V96c0-17.7 14.3-32 32-32h448c17.7 0 32 14.3 32 32m-32 0H32v320h448z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst barcodeIcon = {\n    name: 'barcode',\n    content: '<path d=\"M480 64H32C14.3 64 0 78.3 0 96v320c0 17.7 14.3 32 32 32h448c17.7 0 32-14.3 32-32V96c0-17.7-14.3-32-32-32M96 384H64V128h32zm96-32h-64V128h64zm64 0h-32V128h32zm64 0h-32V128h32zm64 0h-32V128h32zm64 32h-32V128h32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst barcodeScannerIcon = {\n    name: 'barcode-scanner',\n    content: '<path d=\"M32 96H0V0h96v32H32zm0 288H0v96h96v-32H32zM416 0v32h64v64h32V0zm64 448h-64v32h96v-96h-32zm-192-32h32V288h-32zm32-352h-32v128h32zm-64 0h-32v128h32zM128 416h64V288h-64zm-64 0h32V288H64zM192 64h-64v128h64zm32 352h32V288h-32zM64 64v128h32V64zm384 0h-32v128h32zm0 352V288h-32v128zm-96 0h32V288h-32zm32-352h-32v128h32zm96 160H32v32h448z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst qrCodeOutlineIcon = {\n    name: 'qr-code-outline',\n    content: '<path d=\"M192 224v32h-32v-32zm-64 64h32v-32h-32zm-32-64v32h32v-32zm-32 64h32v-32H64zm128 0h32v-32h-32zm64-64h-32v32h32zm32-32h-32v32h32zm-64-32v32h32v-32zm64-32h-32v32h32zm-64-32v32h32V96zm64-32h-32v32h32zm32 192v-32h-32v32zm-96 32v32h32v-32zm64-32h-32v32h32zm0 64h-32v32h32zm-64 32v32h32v-32zm32 32v32h32v-32zm-32 64h32v-32h-32zm64-96v32h32v-32zm32-32v-32h-32v32zm32-32v-32h-32v32zm32-64h-32v32h32zm32 64v-32h-32v32zm32-64h-32v32h32zm-64 96v-32h-32v32zm-32 32v-32h-32v32zm0 32h32v-32h-32zm32-32h32v-32h-32zm64-32v-32h-32v32zm-128 64v32h32v-32zm-32 64h32v-32h-32zm64 0h32v-32h-32zm32-32h32v-32h-32zm64-32v-32h-32v32zm0 64v-32h-32v32zM512 0v512H0V0zm-32 32H32v448h448zm-32 160H320V64h128zm-32-32-.5-64H352v64zm-224 32H64V64h128zm-32-32-.5-64H96v64zm32 288H64V320h128zm-32-32-.5-64H96v64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst qrCodeIcon = {\n    name: 'qr-code',\n    content: '<path d=\"M320 0v192h192V0zm160 160H352V32h128zm-32-32h-64V64h64zM0 0v192h192V0zm160 160H32V32h128zm-32-32H64V64h64zM0 320v192h192V320zm160 160H32V352h128zm-32-32H64v-64h64zm32-224h32v32h-32zm0 64h-32v-32h32zm-64-64h32v32H96zm-32 32H32v-32h32zm32 32H64v-32h32zm128 0h-32v-32h32zm32-32h-32v-32h32zm0-64h32v32h-32zm0 0h-32v-32h32zm0-64h32v32h-32zm0 0h-32V96h32zm0-64h32v32h-32zm0 0h-32V32h32zm64 192h-32v-32h32zm-96 32h32v32h-32zm64 0h-32v-32h32zm0 64h-32v-32h32zm-32 32h-32v-32h32zm0 0h32v32h-32zm0 64h-32v-32h32zm64-64h-32v-32h32zm0-64h-32v-32h32zm0-64h32v32h-32zm64 0h-32v-32h32zm32 32h-32v-32h32zm32-32h-32v-32h32zm-96 32h32v32h-32zm0 64h-32v-32h32zm0 0h32v32h-32zm32-32h32v32h-32zm32-32h32v32h-32zm-96 96h32v32h-32zm0 64h-32v-32h32zm-32 32h-32v-32h32zm192-192h-32v-32h32zM352 416h32v32h-32zm0 64h-32v-32h32zm64-64h-32v-32h32zm32-96h32v32h-32zm0 64h-32v-32h32zm-32 32h32v32h-32zm0 64h-32v-32h32zm64-64h-32v-32h32zm0 64h-32v-32h32zm32-32h-32v-32h32zm0-64h-32v-32h32zm0-64h-32v-32h32zm0-64h-32v-32h32zM256 512h-32v-32h32zm64 0h-32v-32h32zm32-32h32v32h-32zm64 0h32v32h-32zm96 32h-32v-32h32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst qrCodeScannerIcon = {\n    name: 'qr-code-scanner',\n    content: '<path d=\"M512 0v96h-32V32h-64V0zm-32 448h-64v32h96v-96h-32zM64 64h128v128H64zm32 96h64V96H96zM32 32h64V0H0v96h32zm0 224h448v-32H32zm0 128H0v96h96v-32H32zM288 96h-32v32h32zm-64-32v32h32V64zm224 128H320V64h128zm-32-96h-64v64h64zm-128 96v-32h-32v32zm-32-64h-32v32h32zM64 288h128v128H64zm32 96h64v-64H96zm192-64h-32v32h32zm-64-32v32h32v-32zm32 128h32v-32h-32zm-32-64v32h32v-32zm96-64h-32v32h32zm-32 64v32h32v-32zm64 0v-32h-32v32zm-32 64h32v-32h-32zm64-128h-32v32h32zm-32 64v32h32v-32zm64 0v-32h-32v32zm0 64v-32h-32v32zm32-128h-32v32h32zm0 96v-32h-32v32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst barcodeQrCodeScannerIcon = {\n    name: 'barcode-qr-code-scanner',\n    content: '<path d=\"M256 288h32v128h-32zm64 128h64V288h-64zm128 0V288h-32v128zM32 32h64V0H0v96h32zm0 352H0v96h96v-32H32zM416 0v32h64v64h32V0zm64 448h-64v32h96v-96h-32zm0-224H32v32h448zM288 64h-32v128h32zm96 0h-64v128h64zm64 0h-32v128h32zM64 64h96v96H64zm32 64h32V96H96zm128 32h-32v32h32zm0-96h-32v64h32zM64 320h96v96H64zm32 64h32v-32H96zm96 0v32h32v-64h-32zm0-64h32v-32h-32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst signatureIcon = {\n    name: 'signature',\n    content: '<path d=\"M32 448h448v32H32zM448 32H288v64h160zm-96 340.9L256 224l32-96h160l32 96-96 148.9V416h-32zm0-59.1V256h32v57.8l60.8-94.3-19.9-59.5H311.1l-19.9 59.6zM78.8 377.3c8.7-10.3 23.9-25.6 37.2-17.3 14.9 9.3 25.1 42.1 56.9 43.8 27.2-.6 18.9-34.6 36.7-33.2 16.6 0 19.5 47.8 46.5 47.9 25.7.1 37.4-14.5 37.3-28 .1-29-62.5-87.7-85.4-98-21.4-9.6-34-2.3-39.7 6-5.3 7.9 9.3 34.5-13.7 41.2-17.3 1.5-29.2-33.2-62.1-33.2S77 354.1 32 352c13.1 6 32.8 42 46.8 25.3\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst handIcon = {\n    name: 'hand',\n    content: '<path d=\"M442.5 130.7c-15.5-6.7-33.7-.2-41.4 15.1-8.2 21.3-23.3 79.9-25.8 87.6-2.1 6.5-5 12-11.3 9.7-4.7-1.7-3.5-7.2-2.4-12.6l2.7-17 18.1-112.4c2.8-17.4-9-33.8-26.5-36.6-17.4-2.8-33.8 9-36.6 26.5L304 197.9s-2.1 14.1-3 18.7c-1 5.2-1.4 12.3-7.7 11.9-5-.3-5.3-3.8-5.3-7.3V64c0-17.6-14.2-31.9-31.8-32h.1-.3c-17.7 0-32 14.3-32 32v.4c0 1.1.9 140.6.6 149.7-.2 5.4-.7 9.5-6.8 10.3-7.8 1.1-8.6-8-8.6-8l-3.1-20.9v.7L190 90.8v.1c-2.6-17.5-18.9-29.5-36.2-26.9-17.5 2.6-29.5 18.9-26.9 36.2 0 .1 0 .2.1.3l24.8 165.3 2.4 15.9c.5 3.2-.7 6.6-3.3 8.6l-.1.1c-4.1 3.1-10 2.5-13.5-1.4l-12.2-13.2-37.3-41-.1-.1c-11.9-13-32.1-14-45.3-2.1-13 11.9-14 32.1-2.1 45.2l55.7 61s34.1 49 62.5 88.4c28.3 39.3 72.3 52.4 129.5 52.4s113.9-21.8 126.9-95.4c13.7-78.5 6.5-107.9 23.7-150.4 11.6-28.9 15.1-45.8 21.1-63.2 5.4-15.6-1.9-33.3-17.2-39.9\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst pointerIcon = {\n    name: 'pointer',\n    content: '<path d=\"m285.5 326.1 43.9 124.4-83.5 29.5-43.8-124.2L128 416V32l256 288z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst stickIcon = {\n    name: 'stick',\n    content: '<path d=\"M192 96c0-17.7-14.3-32-32-32H96c-17.7 0-32 14.3-32 32v32h128zm128 160c0 35.3-28.7 64-64 64s-64-28.7-64-64v-96H64v96c0 106 86 192 192 192s192-86 192-192v-96H320zm96-192h-64c-17.7 0-32 14.3-32 32v32h128V96c0-17.7-14.3-32-32-32\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst unstickIcon = {\n    name: 'unstick',\n    content: '<path d=\"M290.6 131.4c12.4-12.4 12.4-32.6 0-45l-45-45c-12.4-12.4-32.6-12.4-45 0L178 63.8l90.1 90zM268.1 334c-24.9 24.9-65.2 24.9-90.1 0s-24.9-65.2 0-90.1l67.5-67.5-90-90.1L88 153.9C13.4 228.5 13.4 349.4 88 424s195.5 74.6 270.1 0l67.5-67.5-90-90.1zm202.6-67.5-45-45c-12.4-12.4-32.6-12.4-45 0L358.2 244l90 90 22.5-22.5c12.4-12.4 12.4-32.6 0-45\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst setColumnPositionIcon = {\n    name: 'set-column-position',\n    content: '<path d=\"M448 32H64c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32M192 416H96V96h96zm224 0H224v-32h192zm0-64H224v-64h192zm0-96H224v-64h192zm0-96H224V96h192z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst clockArrowRotateIcon = {\n    name: 'clock-arrow-rotate',\n    content: '<path d=\"M256 32C132.3 32 32 132.3 32 256h32c0-105.9 86.1-192 192-192s192 86.1 192 192-86.1 192-192 192c-57 0-108.3-25-143.5-64.5L176 320H32v144l57.8-57.8C130.8 451.5 190 480 256 480c123.7 0 224-100.3 224-224S379.7 32 256 32m-32 96v160h160v-32H256V128z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst playIcon = {\n    name: 'play',\n    content: '<path d=\"M0 512V0l512 256z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst pauseIcon = {\n    name: 'pause',\n    content: '<path d=\"M320 0h160v512H320zM32 512h160V0H32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst stopIcon = {\n    name: 'stop',\n    content: '<path d=\"M512 512H0V0h512z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst rewindIcon = {\n    name: 'rewind',\n    content: '<path d=\"M256 256 512 96v320zm0 160V96L0 256z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst forwardIcon = {\n    name: 'forward',\n    content: '<path d=\"M0 416V96l256 160zm512-160L256 96v320z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst volumeDownIcon = {\n    name: 'volume-down',\n    content: '<path d=\"M0 352h96l128 128V32L96 160H0zm288 28V132c55.2 14.2 96 64.3 96 124s-40.8 109.8-96 124\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst volumeUpIcon = {\n    name: 'volume-up',\n    content: '<path d=\"M0 352h96l128 128V32L96 160H0zm288 28V132c55.2 14.2 96 64.3 96 124s-40.8 109.8-96 124m0-380v44.8c45.2 0 88.3 20.8 121.2 58.4C444.6 143.6 464 197.8 464 256s-19.4 112.4-54.8 152.8c-33 37.7-76 58.4-121.2 58.4V512c123.7 0 224-114.6 224-256S411.7 0 288 0\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst volumeMuteIcon = {\n    name: 'volume-mute',\n    content: '<path d=\"M96 160 224 32v448L96 352H0V160zm416 29.3L466.7 144 400 210.7 333.2 144 288 189.3l66.7 66.7-66.7 66.7 45.3 45.3 66.7-66.7 66.7 66.7 45.3-45.3-66.8-66.7z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst hdIcon = {\n    name: 'hd',\n    content: '<path d=\"M480 64H32C14.4 64 0 78.4 0 96v320c0 17.6 14.4 32 32 32h448c17.6 0 32-14.4 32-32V96c0-17.6-14.4-32-32-32M256 384h-64v-96h-64v96H64V128h64v96h64v-96h64zm210.3-68.9c-5.1 16.2-11.8 29.4-19.8 39.1-8.2 9.8-18.2 17.4-29.8 22.4-11.5 4.9-26.3 7.4-43.9 7.4H288V128h82.6c20.3 0 35.4 2.2 46.1 6.8s20.6 12.2 29.5 22.8c8.7 10.5 15.7 24.1 20.6 40.6 4.8 16.2 7.3 36.5 7.3 60.3-.1 21.5-2.7 40.6-7.8 56.6m-54.2-94.2c2.6 8.5 3.9 20.5 3.9 35.6 0 14.5-1.3 26.3-3.9 35.1-2.5 8.4-5.5 14.4-8.9 18-3.3 3.5-7.5 6-12.8 7.7-3.8 1.2-11.8 2.7-28.3 2.7H336V192h12.9c21.4 0 30.6.9 34.5 1.7 6.9 1.4 12.6 4.1 17.5 8.4 4.9 4.5 8.7 10.8 11.2 18.8\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst closedCaptionsIcon = {\n    name: 'closed-captions',\n    content: '<path d=\"M480 64H32S0 64 0 96v320c0 32 32 32 32 32h448c32 0 32-32 32-32V96s0-32-32-32M240 205c-6.1-4.5-13.5-7.8-21.9-10.1-8.5-2.3-17.1-3.5-25.8-3.5q-27 0-42.6 17.4c-10.4 11.6-15.6 27.4-15.6 47.3 0 19.8 5.2 35.4 15.6 46.9s24.3 17.2 41.7 17.2c16.1 0 32.3-4.6 47.6-13.8V373c-17.2 7.4-38.2 11-62.1 11-23.4 0-43.6-5-60.6-15.1s-29.9-24.4-38.9-43-13.4-40-13.4-64.3c0-26.1 5-49.4 15-69.7 10-20.4 24.2-36.1 42.5-47.2s39.4-16.7 63.2-16.7c19 0 37.4 2.6 55.3 7.8zm208 0c-6.1-4.5-13.5-7.8-21.9-10.1-8.5-2.3-17.1-3.5-25.8-3.5q-27 0-42.6 17.4c-10.4 11.6-15.6 27.4-15.6 47.3 0 19.8 5.2 35.4 15.6 46.9s24.3 17.2 41.7 17.2c16.1 0 32.3-4.6 47.6-13.8V373c-17.2 7.4-38.2 11-62.1 11-23.4 0-43.6-5-60.6-15.1s-29.9-24.4-38.9-43-13.4-40-13.4-64.3c0-26.1 5-49.4 15-69.7 10-20.4 24.2-36.1 42.5-47.2s39.4-16.7 63.2-16.7c19 0 37.4 2.6 55.3 7.8z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst playlistIcon = {\n    name: 'playlist',\n    content: '<path d=\"M0 256h320v64H0zM512 64H0V0h512zm-128 64.8V397c-13.4-8-30-12.8-48-12.8-44.2 0-80 28.7-80 64s35.8 64 80 64 80-28.7 80-64V193h96v-65zM0 128v64h320v-64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst musicNotesIcon = {\n    name: 'music-notes',\n    content: '<path d=\"M160 170v-64m0-.2v259c-13.4-8-30-12.8-48-12.8-44.2 0-80 28.7-80 64s35.8 64 80 64 80-28.7 80-64V162.5l256-59.1v165.4c-13.4-8-30-12.8-48-12.8-44.2 0-80 28.7-80 64s35.8 64 80 64 80-28.7 80-64V32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst playSmIcon = {\n    name: 'play-sm',\n    content: '<path d=\"M96 416V96l320 160z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst pauseSmIcon = {\n    name: 'pause-sm',\n    content: '<path d=\"M288 96h96v320h-96zM96 416h96V96H96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst stopSmIcon = {\n    name: 'stop-sm',\n    content: '<path d=\"M416 416H96V96h320z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst heartOutlineIcon = {\n    name: 'heart-outline',\n    content: '<path d=\"M447.2 96.8c-43.7-43.7-114.7-43.7-158.4 0L256 129.6l-32.8-32.8c-43.7-43.7-114.7-43.7-158.4 0s-43.7 116.3 0 160l32.8 32.8L256 448l158.4-158.4 32.8-32.8c43.7-43.7 43.7-116.3 0-160m-22.6 137.4L256 402.7 87.4 234.2C72.3 219.1 64 198.7 64 176.8s8.3-42.3 23.4-57.4S122.6 96 144 96s41.5 8.3 56.6 23.4l55.4 55.4 55.4-55.4C326.5 104.3 346.6 96 368 96s41.5 8.3 56.6 23.4 23.4 35.5 23.4 57.4-8.3 42.3-23.4 57.4\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst heartIcon = {\n    name: 'heart',\n    content: '<path d=\"m447.2 256.8-32.8 32.8L256 448 97.6 289.6l-32.8-32.8c-43.7-43.7-43.7-116.3 0-160s114.7-43.7 158.4 0l32.8 32.8 32.8-32.8c43.7-43.7 114.7-43.7 158.4 0s43.7 116.3 0 160\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst starOutlineIcon = {\n    name: 'star-outline',\n    content: '<path d=\"M480 202.4 319.1 188 256 32l-63.1 156L32 202.4l122 111.7L117.2 480 256 391.5 394.8 480 358 314.1zM256 353.6l-90.8 57.9 24-108.5-82.1-75.2 108.1-9.7L256 117.3l40.8 100.8 108.1 9.7-82.1 75.2 24.1 108.5z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst starIcon = {\n    name: 'star',\n    content: '<path d=\"M256 391.5 117.2 480 154 314.1 32 202.4 192.9 188 256 32l63.1 156L480 202.4 358 314.1 394.8 480z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst checkboxIcon = {\n    name: 'checkbox',\n    content: '<path d=\"M64 64v384h384V64zm352 352H96V96h320z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst checkboxCheckedIcon = {\n    name: 'checkbox-checked',\n    content: '<path d=\"M64 64v384h384V64zm352 352H96V96h320zm-77.3-269.3L384 192 224 352l-96-96 45.3-45.3 50.7 50.7z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst checkboxIndeterminateIcon = {\n    name: 'checkbox-indeterminate',\n    content: '<path d=\"M128 128h256v256H128zM64 64v384h384V64zm352 352H96V96h320z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst checkboxNullIcon = {\n    name: 'checkbox-null',\n    content: '<path d=\"M192 64h128v32H192zm224 0h-64v32h64v64h32V64zm0 256h32V192h-32zm0 96h-64v32h96v-96h-32zm-224 32h128v-32H192zm-96-96H64v96h96v-32H96zm0-160H64v128h32zM64 64v96h32V96h64V64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst circleIcon = {\n    name: 'circle',\n    content: '<path d=\"M384 256c0 70.7-57.3 128-128 128s-128-57.3-128-128 57.3-128 128-128 128 57.3 128 128\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst radiobuttonIcon = {\n    name: 'radiobutton',\n    content: '<path d=\"M256 64C150 64 64 150 64 256s86 192 192 192 192-86 192-192S362 64 256 64m0 352c-88.4 0-160-71.6-160-160S167.6 96 256 96s160 71.6 160 160-71.6 160-160 160\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst radiobuttonCheckedIcon = {\n    name: 'radiobutton-checked',\n    content: '<path d=\"M351.6 255.3c0 53.2-43.1 96.4-96.4 96.4s-96.4-43.1-96.4-96.4 43.1-96.4 96.4-96.4 96.4 43.2 96.4 96.4M256 64C150 64 64 150 64 256s86 192 192 192 192-86 192-192S362 64 256 64m0 352c-88.4 0-160-71.6-160-160S167.6 96 256 96s160 71.6 160 160-71.6 160-160 160\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst bellIcon = {\n    name: 'bell',\n    content: '<path d=\"M192 416h128c0 35.3-28.7 64-64 64s-64-28.7-64-64m160-256c0-42-26.9-77.6-64.4-90.7.3-1.7.4-3.5.4-5.3 0-17.7-14.3-32-32-32s-32 14.3-32 32c0 1.8.2 3.6.4 5.3C186.9 82.4 160 118 160 160c0 88.4-43 160-96 160v64h384v-64c-53 0-96-71.6-96-160\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst infoCircleIcon = {\n    name: 'info-circle',\n    content: '<path d=\"M288 352h32v32H192v-32h32v-96h-32v-32h96zm0-224h-64v64h64zm192 128c0 123.7-100.3 224-224 224S32 379.7 32 256 132.3 32 256 32s224 100.3 224 224m-32 0c0-106-86-192-192-192S64 150 64 256s86 192 192 192 192-86 192-192\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst questionCircleIcon = {\n    name: 'question-circle',\n    content: '<path d=\"M352 192c0 45.2-23.4 65.9-40.6 81-15.1 13.3-23.4 20.7-23.4 47h-64c0-55.2 27.1-79.2 45.1-95 13.8-12.1 18.9-16.7 18.9-33 0-17.6-14.4-32-32-32s-32 14.4-32 32h-64c0-53 43-96 96-96s96 43 96 96M224 416h64v-64h-64zm256-160c0 123.7-100.3 224-224 224S32 379.7 32 256 132.3 32 256 32s224 100.3 224 224m-32 0c0-106-86-192-192-192S64 150 64 256s86 192 192 192 192-86 192-192\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst exclamationCircleIcon = {\n    name: 'exclamation-circle',\n    content: '<path d=\"M224 128h64v160h-64zm0 256h64v-64h-64zm256-128c0 123.7-100.3 224-224 224S32 379.7 32 256 132.3 32 256 32s224 100.3 224 224m-32 0c0-106-86-192-192-192S64 150 64 256s86 192 192 192 192-86 192-192\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst cameraIcon = {\n    name: 'camera',\n    content: '<path d=\"M448 128h-64l-64-64H192l-64 64H64c-17.6 0-32 14.4-32 32v288c0 17.6 14.4 32 32 32h384c17.6 0 32-14.4 32-32V160c0-17.6-14.4-32-32-32M256 416c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112m64-112c0 35.3-28.7 64-64 64s-64-28.7-64-64 28.7-64 64-64 64 28.7 64 64\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst imageIcon = {\n    name: 'image',\n    content: '<path d=\"M304 160c26.5 0 48 21.5 48 48s-21.5 48-48 48-48-21.5-48-48 21.5-48 48-48m144-96H64c-17.6 0-32 14.4-32 32v320c0 17.6 14.4 32 32 32h384c17.6 0 32-14.4 32-32V96c0-17.6-14.4-32-32-32m-.1 272-64-64-80 80L176 224 64 336V96.1l.1-.1h383.8l.1.1z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst imageExportIcon = {\n    name: 'image-export',\n    content: '<path d=\"M384 384v-79.9l-32-32-80 80-128-128-112 112v-240l.1-.1h383.8l.1.1-.1 223.9H448V96c0-17.6-14.4-32-32-32H32C14.4 64 0 78.4 0 96v320c0 17.6 14.4 32 32 32h256v-64zM272 160c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48m48 288h96v64l96-80-96-80v64h-96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst zoomActualSizeIcon = {\n    name: 'zoom-actual-size',\n    content: '<path d=\"M0 32v128L128 32zm384 0 128 128V32zm-260.6 96c-15.1 0-27.4 12.3-27.4 27.4v201.2c0 15.1 12.3 27.4 27.4 27.4h265.2c15.1 0 27.4-12.3 27.4-27.4V155.4c0-15.1-12.3-27.4-27.4-27.4zM384 160v160l-48-64-48 64-80-96-80 96V160zm-96 32c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32M0 352v128h128zm512 0L384 480h128z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst zoomBestFitIcon = {\n    name: 'zoom-best-fit',\n    content: '<path d=\"M388.6 128H123.4c-15.1 0-27.4 12.3-27.4 27.4v201.2c0 15.1 12.3 27.4 27.4 27.4h265.2c15.1 0 27.4-12.3 27.4-27.4V155.4c0-15.1-12.3-27.4-27.4-27.4M384 320l-48-64-48 64-80-96-80 96V160h256zM0 160l96 96-96 96zm160 320 96-96 96 96zM352 32l-96 96-96-96zm160 128v192l-96-96zm-256 64c0-17.7 14.3-32 32-32s32 14.3 32 32-14.3 32-32 32-32-14.3-32-32\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst imageResizeIcon = {\n    name: 'image-resize',\n    content: '<path d=\"M427.3 404.7 352 329.4V32H32v320h297.4l75.3 75.3L352 480h128V352zM64 320V64h256v233.4L203.3 180.7 256 128H128v128l52.7-52.7L297.4 320z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst cropIcon = {\n    name: 'crop',\n    content: '<path d=\"M0 96h64v64H0zm448 256v64h64v-64zm-32-224c0-17.6-14.4-32-32-32H192v64h160v320h64zM96 384c0 17.6 14.4 32 32 32h192v-64H160V32H96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst mirrorIcon = {\n    name: 'mirror',\n    content: '<path d=\"M192 64H32v384h160zm-31 352s0 .1 0 0l-96.9.1-.1-.1V96.1l.1-.1H160v320zm95 64h-32V32h32zm32-416h160v384H288z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst flipHorizontalIcon = {\n    name: 'flip-horizontal',\n    content: '<path d=\"M448 448H288V64zm-384 0L224 64v384zm128-224-80 192h80z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst flipVerticalIcon = {\n    name: 'flip-vertical',\n    content: '<path d=\"M64 288h384L64 448zm0-224v160h384zm32 128v-80l192 80z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst rotateIcon = {\n    name: 'rotate',\n    content: '<path d=\"M256 448q12.3 0 24-1.8v32.3q-11.85 1.5-24 1.5c-12.15 0-16.1-.5-24-1.5v-32.3q11.7 1.8 24 1.8m-116-7c12.7 9.7 26.6 17.8 41.5 24l16.2-28c-15.1-5.9-29.1-14.1-41.5-24.1zm-61-78.5c6.3 14.9 14.4 28.8 24 41.5l28-16.2c-10-12.5-18.1-26.4-24.1-41.5zM256 128v64l128-80-128-80v64q-12.15 0-24 1.5c-17.7 2.2-34.6 6.8-50.5 13.5-14.9 6.3-28.8 14.4-41.5 24-14 10.6-26.4 23-37 37-9.7 12.7-17.8 26.6-24 41.5-6.7 15.9-11.3 32.8-13.5 50.5Q64 275.85 64 288c0 12.15.5 16.1 1.5 24h32.3Q96 300.3 96 288c0-12.3.6-16.2 1.8-24 1.8-11.9 4.9-23.4 9.2-34.3 5.9-15.1 14.1-29.1 24.1-41.5 7.4-9.3 15.8-17.7 25.1-25.1 12.5-10 26.4-18.1 41.5-24.1 10.9-4.3 22.4-7.4 34.3-9.2q11.7-1.8 24-1.8m190.5 136h-32.3q1.8 11.7 1.8 24c0 12.3-.6 16.2-1.8 24h32.3q1.5-11.85 1.5-24c0-12.15-.5-16.1-1.5-24m-65.6 123.8 28 16.2c9.7-12.7 17.8-26.6 24-41.5l-28-16.2c-5.8 15.1-14 29.1-24 41.5M314.3 437l16.2 28c14.9-6.3 28.8-14.4 41.5-24l-16.2-28c-12.4 9.9-26.4 18.1-41.5 24\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst rotateRightIcon = {\n    name: 'rotate-right',\n    content: '<path d=\"M320 448V64l160 384zm-32 0H32l256-160zm-32-102.3L143.6 416H256zM64 160v128h32v-96h96v64l96-80-96-80v64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst rotateLeftIcon = {\n    name: 'rotate-left',\n    content: '<path d=\"M32 448 192 64v384zm192-160 256 160H224zm32 128h112.4L256 345.7zm64-256V96l-96 80 96 80v-64h96v96h32V160z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst brushIcon = {\n    name: 'brush',\n    content: '<path d=\"M32 480s46.4-5.6 96-16c22.3-4.7 46.9-14 70.7-37.7 56.9-56.9.2-112.9.2-112.9s-56.7-56.9-113.3-.2c-23.4 23.4-20.1 57.1-19.7 89.8.8 59.7-33.9 77-33.9 77M470.7 64 448 41.3c-12.4-12.4-32.8-12.4-45.3 0L204.3 239.8c11.5 5.8 20.8 12.2 27.7 17.6 5.3 4.2 9.2 7.7 11.3 9.8l.8.8.8.8c2.1 2.1 5.6 5.9 9.7 11.1 5.4 6.8 11.8 16.2 17.6 27.6l23.5-23.5 174.9-174.9c12.5-12.3 12.5-32.7.1-45.1M448 86.6 277.4 257.3c-4.8-5.8-8.6-9.9-10.6-11.9-2.3-2.3-6.3-6.1-12-10.7L425.4 64h.1z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst paletteIcon = {\n    name: 'palette',\n    content: '<path d=\"m206 256.6 160-160c-2.2-5.7-4.8-11.1-7.9-16.3-24.2-40.8-60.1-66-107.8-75.9-2.3-.5-4.7-1-7.1-1.4C192-5.8 143.1 4.8 96.5 34.6 49.3 64.7 19.2 107.2 6.1 162c-13 54.8-5.2 106.4 23.4 154.6 14.2 23.8 31.3 43.2 51.4 58.4 3.8-25.2 13.4-52 36.4-75 31.3-31.4 64-41.3 88.7-43.4M288 64c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32m-96-32c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32M64 256c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32m0-128c0-17.7 14.3-32 32-32s32 14.3 32 32-14.3 32-32 32-32-14.3-32-32m438.7 12.9L480 118.3c-12.4-12.4-32.8-12.4-45.3 0L281.1 271.9c11.5 5.8 20.8 12.2 27.7 17.6 5.3 4.2 9.2 7.7 11.3 9.8l11.3 12.7c5.4 6.8 11.8 16.2 17.6 27.6l153.5-153.5c12.6-12.4 12.6-32.8.2-45.2M354.3 289.3c-4.8-5.8-8.6-9.9-10.6-11.9-2.3-2.3-6.3-6.1-12-10.7L457.4 141h.1l22.5 22.5zm-78.7 169c-23.8 23.7-48.4 33-70.7 37.7-49.6 10.4-96 16-96 16s34.7-17.3 33.9-77c-.4-32.7-3.7-66.4 19.7-89.8 56.6-56.7 113.3.2 113.3.2s56.7 56-.2 112.9\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst dropletIcon = {\n    name: 'droplet',\n    content: '<path d=\"M256 384v32c-53 0-96-43-96-96h32c0 35.3 28.7 64 64 64m160-72c0 92.8-71.6 168-160 168S96 404.8 96 312C96 181.3 256 32 256 32s160 149.3 160 280m-32 0c0-46.3-25.3-104.7-73-169-20-27-40.3-49.8-55-65.4-14.7 15.6-34.9 38.5-55 65.4-47.8 64.3-73 122.8-73 169 0 75 57.4 136 128 136s128-61 128-136\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst shapeLineIcon = {\n    name: 'shape-line',\n    content: '<path d=\"M480 54.6 54.6 480 32 457.4 457.4 32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst brightnessContrastIcon = {\n    name: 'brightness-contrast',\n    content: '<path d=\"M165.5 346.5c12.4 12.5 12.4 32.9 0 45.3l-22.6 22.6c-12.5 12.4-32.8 12.4-45.3 0-12.4-12.5-12.4-32.9 0-45.3l22.6-22.6c12.5-12.4 32.9-12.4 45.3 0M256 128c17.6 0 32-14.4 32-32V64c0-17.6-14.4-32-32-32s-32 14.4-32 32v32c0 17.6 14.4 32 32 32m135.8 37.5 22.6-22.6c12.4-12.4 12.4-32.8 0-45.3-12.4-12.4-32.8-12.4-45.3 0l-22.6 22.6c-12.4 12.4-12.4 32.8 0 45.3 12.5 12.4 32.8 12.4 45.3 0m-271.6 0c12.4 12.4 32.8 12.4 45.3 0 12.4-12.4 12.4-32.8 0-45.3l-22.6-22.6c-12.4-12.4-32.8-12.4-45.3 0-12.4 12.5-12.4 32.8 0 45.3zM128 256c0-17.6-14.4-32-32-32H64c-17.6 0-32 14.4-32 32s14.4 32 32 32h32c17.6 0 32-14.4 32-32m263.8 90.5c-12.4-12.4-32.8-12.4-45.3 0-12.4 12.5-12.4 32.8 0 45.3l22.6 22.6c12.4 12.4 32.8 12.4 45.3 0 12.4-12.4 12.4-32.8 0-45.3zM448 224h-32c-17.6 0-32 14.4-32 32s14.4 32 32 32h32c17.6 0 32-14.4 32-32s-14.4-32-32-32m-96 32c0 53-43 96-96 96s-96-43-96-96 43-96 96-96 96 43 96 96m-32 0c0-35.3-28.7-64-64-64v128c35.3 0 64-28.7 64-64m-64 128c-17.6 0-32 14.4-32 32v32c0 17.6 14.4 32 32 32s32-14.4 32-32v-32c0-17.6-14.4-32-32-32\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst slidersIcon = {\n    name: 'sliders',\n    content: '<path d=\"M480 96v32H285.3c-6.6 18.6-24.4 32-45.3 32s-38.7-13.4-45.3-32H32V96h162.7c6.6-18.6 24.4-32 45.3-32s38.7 13.4 45.3 32zm-112 96c-20.9 0-38.7 13.4-45.3 32H32v32h290.7c6.6 18.6 24.4 32 45.3 32s38.7-13.4 45.3-32H480v-32h-66.7c-6.6-18.6-24.4-32-45.3-32M176 320c-20.9 0-38.7 13.4-45.3 32H32v32h98.7c6.6 18.6 24.4 32 45.3 32s38.7-13.4 45.3-32H480v-32H221.3c-6.6-18.6-24.4-32-45.3-32\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst invertColorsIcon = {\n    name: 'invert-colors',\n    content: '<path d=\"m320 32-64 48 64 48V96h64v64h-32l48 64 48-64h-32V64h-96zM32 64v192h192V64zm192 192v192h192V256zM64 96h128v128H64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst transparencyIcon = {\n    name: 'transparency',\n    content: '<path d=\"M64 64v352h352V64zm32 32h96v96h96V96h96v96h-96v96h96v96h-96v-96h-96v96H96v-96h96v-96H96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst grayscaleIcon = {\n    name: 'grayscale',\n    content: '<path d=\"M32 64C14.3 64 0 78.3 0 96v320c0 17.7 14.3 32 32 32h416c17.7 0 32-14.3 32-32V96c0-17.7-14.3-32-32-32zm0 32h416v320H32zm48 32c-8.8 0-16 7.2-16 16v224c0 8.8 7.2 16 16 16s16-7.2 16-16V144c0-8.8-7.2-16-16-16m64 0c-8.8 0-16 7.2-16 16v224c0 8.8 7.2 16 16 16s16-7.2 16-16V144c0-8.8-7.2-16-16-16m64 0c-8.8 0-16 7.2-16 16v224c0 8.8 7.2 16 16 16s16-7.2 16-16V144c0-8.8-7.2-16-16-16m64 0c-8.8 0-16 7.2-16 16v224c0 8.8 7.2 16 16 16s16-7.2 16-16V144c0-8.8-7.2-16-16-16m64 0c-8.8 0-16 7.2-16 16v224c0 8.8 7.2 16 16 16s16-7.2 16-16V144c0-8.8-7.2-16-16-16m64 0c-8.8 0-16 7.2-16 16v224c0 8.8 7.2 16 16 16s16-7.2 16-16V144c0-8.8-7.2-16-16-16m0 4c6.6 0 12 5.4 12 12v224c0 6.6-5.4 12-12 12s-12-5.4-12-12V144c0-6.6 5.4-12 12-12m-64 1c6.1 0 11 4.9 11 11v224c0 6.1-4.9 11-11 11s-11-4.9-11-11V144c0-6.1 4.9-11 11-11m-64 2c5 0 9 4 9 9v224c0 5-4 9-9 9s-9-4-9-9V144c0-5 4-9 9-9m-64 1c4.4 0 8 3.6 8 8v224c0 4.4-3.6 8-8 8s-8-3.6-8-8V144c0-4.4 3.6-8 8-8m-64 4c2.2 0 4 1.8 4 4v224c0 2.2-1.8 4-4 4s-4-1.8-4-4V144c0-2.2 1.8-4 4-4\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst blurIcon = {\n    name: 'blur',\n    content: '<path d=\"M384 320c0 64-32 128-128 128-64 0-128-48-128-128 0-96 128-128 128-256 0 0 128 129.1 128 256\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst sharpenIcon = {\n    name: 'sharpen',\n    content: '<path d=\"M256 32 128 480h256zm0 116.5L341.6 448H170.4z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst shapesIcon = {\n    name: 'shapes',\n    content: '<path d=\"M480 32H160v131.204C86.969 178.029 32 242.594 32 320c0 88.365 71.635 160 160 160 77.406 0 141.972-54.969 156.797-128H480zM192 448c-70.692 0-128-57.308-128-128 0-59.643 40.793-109.758 96-123.967 1.173-.302 2.354-.583 3.539-.852.357-.081.717-.156 1.076-.234a125 125 0 0 1 3.764-.762 126 126 0 0 1 2.557-.448c.369-.061.736-.125 1.105-.184q3.635-.569 7.335-.932c.379-.037.759-.067 1.139-.101a132 132 0 0 1 3.913-.29q1.309-.075 2.623-.125c.392-.015.782-.033 1.174-.045 1.254-.036 2.512-.06 3.775-.06 70.692 0 128 57.308 128 128 0 1.264-.023 2.521-.06 3.775-.012.393-.03.782-.045 1.174a127 127 0 0 1-.207 3.922q-.09 1.31-.207 2.613c-.034.38-.064.761-.102 1.14a127 127 0 0 1-.933 7.339c-.057.365-.121.728-.181 1.092a128 128 0 0 1-.683 3.785q-.256 1.29-.535 2.571c-.075.346-.147.692-.226 1.037a135 135 0 0 1-.855 3.552c-14.208 55.207-64.323 96-123.966 96m256-128h-96c0-88.365-71.635-160-160-160V64h256z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst roundCornersIcon = {\n    name: 'round-corners',\n    content: '<path d=\"M448 320c0 70.692-57.308 128-128 128H192c-70.692 0-128-57.308-128-128V192c0-70.692 57.308-128 128-128h128c70.692 0 128 57.308 128 128z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst bringToFrontIcon = {\n    name: 'bring-to-front',\n    content: '<path d=\"M96 128V96h96V64H64v128h32zm224 256h64V128H128v256zm96-64v96h-96v32h128V320z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst bringToBackIcon = {\n    name: 'bring-to-back',\n    content: '<path d=\"M128 192h64V64H64v128zM96 96h64v64H96zm192 192h96V128H224v96h-96v160h160zm128 32h-96v128h128V320zm0 96h-64v-64h64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst bringForwardIcon = {\n    name: 'bring-forward',\n    content: '<path d=\"M448 192v256H192V320H64V64h256v128zm-32 32h-96v96h-96v96h192z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst bringBackwardIcon = {\n    name: 'bring-backward',\n    content: '<path d=\"M192 192v256h256V192zm224 224H224V224h192zM320 64H64v256h96V160h160z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst alignSelfStartIcon = {\n    name: 'align-self-start',\n    content: '<path d=\"M31 32h32v448H31zm288 64H95v128h224zm128 192v128H95V288zm-32 32H127v64h288z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst alignSelfCenterIcon = {\n    name: 'align-self-center',\n    content: '<path d=\"M255 288v-64h96V96h-96V32h-32v64h-96v128h96v64H63v128h160v64h32v-64h160V288zm128 96H95v-64h288z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst alignSelfEndIcon = {\n    name: 'align-self-end',\n    content: '<path d=\"M64 416h352V288H64zm32-96h288v64H96zm96-224h224v128H192zm288-64v448h-32V32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst alignSelfStartAltIcon = {\n    name: 'align-self-start-alt',\n    content: '<path d=\"M95 96h128v224H95zm192 0h128v352H287zm32 320h64V128h-64zM31 32v32h448V32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst alignSelfCenterAltIcon = {\n    name: 'align-self-center-alt',\n    content: '<path d=\"M415 224V64H287v160h-64v-96H95v96H31v32h64v96h128v-96h64v160h128V256h64v-32zm-32 0v160h-64V96h64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst alignSelfEndAltIcon = {\n    name: 'align-self-end-alt',\n    content: '<path d=\"M479 449v32H31v-32zM223 193H95v224h128zm192 224H287V65h128zM383 97h-64v288h64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst thumbnailsUpIcon = {\n    name: 'thumbnails-up',\n    content: '<path d=\"M352 32h96v96h-96zm-160 0h96v96h-96zM32 32h96v96H32zm0 160h416v256H32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst thumbnailsRightIcon = {\n    name: 'thumbnails-right',\n    content: '<path d=\"M352 352h96v96h-96zm0-160h96v96h-96zm0-160h96v96h-96zM32 32h256v416H32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst thumbnailsDownIcon = {\n    name: 'thumbnails-down',\n    content: '<path d=\"M352 352h96v96h-96zm-160 0h96v96h-96zm-160 0h96v96H32zm0-320h416v256H32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst thumbnailsLeftIcon = {\n    name: 'thumbnails-left',\n    content: '<path d=\"M32 32v96h96V32zm160 0v416h256V32zM32 192v96h96v-96zm0 160v96h96v-96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst fullscreenIcon = {\n    name: 'fullscreen',\n    content: '<path d=\"M0 32h160v64H64v96H0zm64 288H0v160h160v-64H64zM352 32v64h96v96h64V32zm96 384h-96v64h160V320h-64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst fullscreenExitIcon = {\n    name: 'fullscreen-exit',\n    content: '<path d=\"M160 32H96v96H0v64h160zM96 480h64V320H0v64h96zm416-288v-64h-96V32h-64v160zm-96 192h96v-64H352v160h64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst dropletSlashIcon = {\n    name: 'droplet-slash',\n    content: '<path d=\"m317.9 431 23.2 23.2C316.5 470.6 287.3 480 256 480c-88.4 0-160-75.2-160-168 0-27.8 7.2-56.4 18.6-84.2l24.8 24.8C131.9 274 128 293.9 128 312c0 75 57.4 136 128 136 22.4 0 43.5-6.2 61.9-17M256 416v-32c-35.3 0-64-28.7-64-64h-32c0 53 43 96 96 96m224 41.4L457.4 480 32 54.6 54.6 32l108.7 108.7C207 77.7 256 32 256 32s160 149.3 160 280c0 24.1-4.9 47.1-13.6 67.8zM384 312c0-46.3-25.3-104.7-73-169-20-27-40.3-49.8-55-65.4-14.7 15.6-34.9 38.5-55 65.4-1.4 1.9-2.7 3.7-4.1 5.6-.8 1.1-1.5 2.1-2.3 3.2l-1.5 2.1-3 4.2c-.2.3-.4.5-.6.8-1 1.5-2.1 3-3.1 4.5-.1.1-.1.2-.2.3l191.2 191.2c.5-1.6 1-3.3 1.4-4.9 0-.2.1-.4.1-.5.4-1.5.8-2.9 1.1-4.4.1-.3.1-.6.2-.9.3-1.4.6-2.7.9-4.1.1-.4.2-.8.2-1.2.2-1.3.5-2.6.7-3.9.1-.5.2-1 .2-1.5.2-1.2.3-2.5.5-3.7.1-.5.1-1.1.2-1.6l.3-3.6c0-.6.1-1.1.1-1.7.1-1.3.2-2.5.2-3.8 0-.5.1-1 .1-1.6.4-1.9.4-3.7.4-5.5\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst photosIcon = {\n    name: 'photos',\n    content: '<path d=\"M256 288c0 17.7-14.3 32-32 32s-32-14.3-32-32 14.3-32 32-32 32 14.3 32 32m96-64v192c0 17.7-14.3 32-32 32H64c-17.7 0-32-14.3-32-32V224c0-17.7 14.3-32 32-32h256c17.7 0 32 14.3 32 32m-31.8 0q-.15-.15 0 0l-256.1-.1-.1.1v149.9l74.6-70 85.3 80 53.3-50 42.7 40zm63.8-96H128c-17.7 0-32 14.3-32 32h288v224c17.7 0 32-14.3 32-32V160c0-17.7-14.3-32-32-32m64-64H192c-17.7 0-32 14.3-32 32h288v224c17.7 0 32-14.3 32-32V96c0-17.7-14.3-32-32-32\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst alignToGridIcon = {\n    name: 'align-to-grid',\n    content: '<path d=\"M320 320H128V128h192zM96 0H64v512h32zm352 0h-32v512h32zm64 64H0v32h512zm0 352H0v32h512z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst sizeToGridIcon = {\n    name: 'size-to-grid',\n    content: '<path d=\"M384 384H128V128h256zM96 0H64v512h32zm352 0h-32v512h32zm64 64H0v32h512zm0 352H0v32h512z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst makeSameSizeIcon = {\n    name: 'make-same-size',\n    content: '<path d=\"M288 192v96h-96v-96zM240.1 0l-48.4 64H224v64h33V64h31.6zM256 416v-64h-32v64h-32l48 64 48-64zm224-175.9-64-48.4V224h-64v33h64v31.6zM64 224v-32L0 240l64 48v-32h64v-32zM128 0H0v128h32V32h96zm320 0h-96v32h96v96h32V0zM32 448v-96H0v128h128v-32zm416-96v96h-96v32h128V352z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst makeSameWidthIcon = {\n    name: 'make-same-width',\n    content: '<path d=\"M480 128H0V32h480zm-192 96h-96v96h96zm192 48.1-64-48.4V256h-64v33h64v31.6zM64 256v-32L0 272l64 48v-32h64v-32zm384 96v96h-96v32h128V352zM32 448v-96H0v128h128v-32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst makeSameHeightIcon = {\n    name: 'make-same-height',\n    content: '<path d=\"M128 0v480H32V0zm96 192v96h96v-96zM272.1 0l-48.4 64H256v64h33V64h31.6zM288 416v-64h-32v64h-32l48 64 48-64zM448 0h-96v32h96v96h32V0zm0 352v96h-96v32h128V352z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst makeHorizontalSpacingEqualIcon = {\n    name: 'make-horizontal-spacing-equal',\n    content: '<path d=\"M480 160v160h-96v-64h-96v160h-96V256H96v96H32V128h64v96h96V64h96v160h96v-64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst increaseHorizontalSpacingIcon = {\n    name: 'increase-horizontal-spacing',\n    content: '<path d=\"M480 96v160h-96v-64h-96v160h-96V192H96v96H32V64h64v96h96V0h96v160h96V96zM335.7 352l-22.6 22.6 57.4 57.4-57.4 57.4 22.6 22.6 80-80zM64 432l80 80 22.6-22.6-57.3-57.4 57.4-57.4L144 352z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst decreaseHorizontalSpacingIcon = {\n    name: 'decrease-horizontal-spacing',\n    content: '<path d=\"M480 96v160h-96v-64h-96v160h-96V192H96v96H32V64h64v96h96V0h96v160h96V96zM111.6 352 89 374.6l57.4 57.4L89 489.4l22.6 22.6 80-80zM288 432l80 80 22.6-22.6-57.3-57.4 57.4-57.4L368 352z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst removeHorizontalSpacingIcon = {\n    name: 'remove-horizontal-spacing',\n    content: '<path d=\"M480 96v160h-96v-64h-96v160h-96V192H96v96H32V64h64v96h96V0h96v160h96V96zm-32.5 278.2-22.6-22.6-57.4 57.4-57.4-57.4-22.6 22.6 57.4 57.4-57.4 57.4 22.6 22.6 57.4-57.4 57.4 57.4 22.6-22.6-57.4-57.4zm-256 0-22.6-22.6-57.4 57.4-57.4-57.4-22.6 22.6 57.4 57.4L31.5 489l22.6 22.6 57.4-57.4 57.4 57.4 22.6-22.6-57.4-57.4z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst makeVerticalSpacingEqualIcon = {\n    name: 'make-vertical-spacing-equal',\n    content: '<path d=\"M256 320v96h96v64H128v-64h96v-96H64v-96h160v-96h-64V32h160v96h-64v96h160v96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst increaseVerticalSpacingIcon = {\n    name: 'increase-vertical-spacing',\n    content: '<path d=\"M192 320v96h96v64H64v-64h96v-96H0v-96h160v-96H96V32h160v96h-64v96h160v96zm320 48.1-22.6-22.6-57.4 57.3-57.4-57.4-22.6 22.7 80 80zM432 96l-80 80 22.6 22.6 57.4-57.4 57.4 57.4L512 176z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst decreaseVerticalSpacingIcon = {\n    name: 'decrease-vertical-spacing',\n    content: '<path d=\"M191 320v96h96v64H63v-64h96v-96H-1v-96h160v-96H95V32h160v96h-64v96h160v96zm160 105.4 22.6 22.6 57.4-57.4 57.4 57.4 22.6-22.6-80-80zm80-226.8 80-80L488.4 96 431 153.4 373.6 96 351 118.6z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst removeVerticalSpacingIcon = {\n    name: 'remove-vertical-spacing',\n    content: '<path d=\"M192 320v96h96v64H64v-64h96v-96H0v-96h160v-96H96V32h160v96h-64v96h160v96zm320 22.6L489.4 320 432 377.4 374.6 320 352 342.6l57.4 57.4-57.4 57.4 22.6 22.6 57.4-57.4 57.4 57.4 22.6-22.6-57.4-57.4zm0-288L489.4 32 432 89.4 374.6 32 352 54.6l57.4 57.4-57.4 57.4 22.6 22.6 57.4-57.4 57.4 57.4 22.6-22.6-57.4-57.4z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst eyedropperIcon = {\n    name: 'eyedropper',\n    content: '<path d=\"m461.1 56.9-6.2-6.2c-25-25-65.5-25-90.5 0l-60.8 60.8-4.3-4.3c-6.2-6.2-16.4-6.2-22.6 0l-9.4 9.4c-6.2 6.2-6.2 16.4 0 22.6l4.3 4.3L70.8 344.4c-8.2 8.2-14 18.5-16.8 29.7l-21.5 85.7c-2.2 8.6 3.1 17.4 11.7 19.5q3.9.9 7.8 0l85.7-21.4c11.3-2.8 21.5-8.6 29.7-16.8l200.8-200.8 4.4 4.4c6.2 6.2 16.4 6.2 22.6 0l9.4-9.4c6.2-6.2 6.2-16.4 0-22.6l-4.4-4.4 60.8-60.8c25-25 24.9-65.5.1-90.6M224 320h-64l144-144 32 32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst snapGridIcon = {\n    name: 'snap-grid',\n    content: '<path d=\"M480 128V96h-96V0h-32v96h-96V0h-32v96h-96V0H96v96H0v32h96v96H0v32h96v96H0v32h96v96h32v-96h96v96h32v-96h96v96h32v-96h96v-32h-96v-96h96v-32h-96v-96zm-352 0h96v96h-96zm0 224v-96h96v96zm224 0h-96v-96h96zm0-128h-96v-96h96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst snapToGridlinesIcon = {\n    name: 'snap-to-gridlines',\n    content: '<path d=\"M160 32H0v416h288V32zm-32 384H32v-96h96zm0-128H32v-96h96zm0-128H32V64h96zm128 256h-96v-96h96zm0-128h-96v-96h96zm0-128h-96V64h96zm256 80c0 44.2-35.8 80-80 80h-32v-32h32c26.5 0 48-21.5 48-48s-21.5-48-48-48h-32v-32h32c44.2 0 80 35.8 80 80m-160-48h32v-32h-32zm0 128h32v-32h-32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst snapToSnaplinesIcon = {\n    name: 'snap-to-snaplines',\n    content: '<path d=\"M224 128h96V96h-96V32h-32v64h-64V32H96v64H32v32h64v256H32v32h64v64h32v-64h64v64h32v-64h256v-32H224zm-32 256h-64V128h64zm208-64h-32v-32h32c26.5 0 48-21.5 48-48s-21.5-48-48-48h-32v-32h32c44.2 0 80 35.8 80 80s-35.8 80-80 80m-48-160h-32v32h32zm-32 160h32v-32h-32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst dimensionsIcon = {\n    name: 'dimensions',\n    content: '<path d=\"M320 0H0v512h128V128h384V0zM32 32h64v64H32zm64 352H64v32h32v64H32V320h64zm0-192H64v32h32v64H32V128h64zm128-96V64h-32v32h-64V32h160v64zm256 0h-64V64h-32v32h-64V32h160z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst alignSelfStretchIcon = {\n    name: 'align-self-stretch',\n    content: '<path d=\"M95 96h320v128H95zM31 480h32V32H31zm64-192h320v128H95zm32 96h256v-64H127zM447 32v448h32V32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst alignSelfStretchAltIcon = {\n    name: 'align-self-stretch-alt',\n    content: '<path d=\"M223 96v320H95V96zM31 480h448v-32H31zM415 96v320H287V96zm-32 32h-64v256h64zM31 32v32h448V32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst alignItemsStartIcon = {\n    name: 'align-items-start',\n    content: '<path d=\"M319 224H95V96h224zM31 480h32V32H31zm64-192v128h352V288z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst alignItemsCenterIcon = {\n    name: 'align-items-center',\n    content: '<path d=\"M415 416H255v64h-32v-64H63V288h160v-64h-96V96h96V32h32v64h96v128h-96v64h160z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst alignItemsEndIcon = {\n    name: 'align-items-end',\n    content: '<path d=\"M192 96h224v128H192zm256-64v448h32V32zM64 416h352V288H64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst alignItemsStretchIcon = {\n    name: 'align-items-stretch',\n    content: '<path d=\"M415 224H95V96h320zM31 480h32V32H31zM447 32v448h32V32zM96 416h320V288H96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst alignItemsBaselineIcon = {\n    name: 'align-items-baseline',\n    content: '<path d=\"M415 224V64H287v160h-64v-96H95v96H31v32h64v96h128v-96h64v160h128V256h64v-32zm-224 96h-64v-64h64zm192 64h-64V256h64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst alignItemsStartAltIcon = {\n    name: 'align-items-start-alt',\n    content: '<path d=\"M96 96h128v224H96zM32 32v32h448V32zm256 416h128V96H288z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst alignItemsCenterAltIcon = {\n    name: 'align-items-center-alt',\n    content: '<path d=\"M479 256h-64v160H287V256h-64v96H95v-96H31v-32h64v-96h128v96h64V64h128v160h64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst alignItemsEndAltIcon = {\n    name: 'align-items-end-alt',\n    content: '<path d=\"M223 417H95V193h128zM31 449v32h448v-32zM415 65H287v352h128z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst alignItemsStretchAltIcon = {\n    name: 'align-items-stretch-alt',\n    content: '<path d=\"M223 96v320H95V96zM31 480h448v-32H31zm0-448v32h448V32zm256 63v320h128V95z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst alignItemsBaselineAltIcon = {\n    name: 'align-items-baseline-alt',\n    content: '<path d=\"M255 288v-64h96V96h-96V32h-32v64h-96v128h96v64H63v128h160v64h32v-64h160V288zm-32 96H95v-64h128zm0-192h-64v-64h64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst justifyContentStartIcon = {\n    name: 'justify-content-start',\n    content: '<path d=\"M95 96h128v320H95zM31 480h32V32H31zM255 95v320h128V95z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst justifyContentCenterIcon = {\n    name: 'justify-content-center',\n    content: '<path d=\"M63 96h128v320H63zm160 384h32V32h-32zm64-385v320h128V95z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst justifyContentEndIcon = {\n    name: 'justify-content-end',\n    content: '<path d=\"M128 96h128v320H128zm320-64v448h32V32zM288 415h128V95H288z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst justifyContentBetweenIcon = {\n    name: 'justify-content-between',\n    content: '<path d=\"M63 96h128v320H63zm416-64v448h32V32zM319 415h128V95H319zM-1 480h32V32H-1z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst justifyContentAroundIcon = {\n    name: 'justify-content-around',\n    content: '<path d=\"M95 96h128v320H95zm384-64v448h32V32zM287 415h128V95H287zM-1 480h32V32H-1z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst justifyContentStartAltIcon = {\n    name: 'justify-content-start-alt',\n    content: '<path d=\"M415 224H95V96h320zM31 32v32h448V32zm65 352h320V256H96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst justifyContentCenterAltIcon = {\n    name: 'justify-content-center-alt',\n    content: '<path d=\"M415 192H95V64h320zM31 224v32h448v-32zm65 192h320V288H96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst justifyContentEndAltIcon = {\n    name: 'justify-content-end-alt',\n    content: '<path d=\"M415 257H95V129h320zM31 449v32h448v-32zm65-32h320V289H96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst justifyContentBetweenAltIcon = {\n    name: 'justify-content-between-alt',\n    content: '<path d=\"M95 64h320v128H95zM31 512h448v-32H31zm65-64h320V320H96zM31 0v32h448V0z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst justifyContentAroundAltIcon = {\n    name: 'justify-content-around-alt',\n    content: '<path d=\"M95 96h320v128H95zM31 512h448v-32H31zm65-96h320V288H96zM31 0v32h448V0z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst fileWrenchIcon = {\n    name: 'file-wrench',\n    content: '<path d=\"M470.7 480 448 502.7c-12.4 12.4-32.8 12.4-45.1-.1l-93.1-93.1c-11.8 4.2-24.5 6.5-37.8 6.5-61.9 0-112-50.1-112-112 0-13.2 2.3-25.9 6.5-37.6l48.9 48.9c12.4 12.4 32.8 12.4 45.3 0l22.6-22.6c12.4-12.4 12.4-32.8 0-45.3l-48.9-48.9c11.8-4.2 24.4-6.5 37.6-6.5 61.9 0 112 50.1 112 112 0 13.2-2.3 25.9-6.5 37.6l93.2 93.1c12.4 12.5 12.4 32.9 0 45.3m-22.8-23-86.3-86.3c-6.4 8.6-14 16.2-22.6 22.6l86.4 86.3 22.6-22.5v-.1zM96 64h224v96h96v128h32V128l-96-96H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h160v-32H96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst boldIcon = {\n    name: 'bold',\n    content: '<path d=\"M128 96h115.8c25.3 0 44.2 1.1 56.6 3.2s23.6 6.5 33.4 13.2q14.7 10.05 24.6 26.7c6.6 11.1 9.8 23.6 9.8 37.4 0 15-4.1 28.7-12.1 41.2-8.1 12.5-19.1 21.9-32.9 28.2 19.5 5.7 34.5 15.4 45 29s15.7 29.8 15.7 48.2c0 14.6-3.4 28.7-10.2 42.4-6.7 13.8-16 24.8-27.7 33s-26.1 13.3-43.3 15.2c-10.8 1.2-36.7 1.9-78 2.2H128zm64 53v74h30.9c25.2 0 40.8-.4 46.9-1.1 11.1-1.3 19.7-5.2 26.1-11.5 6.3-6.3 9.5-14.7 9.5-25 0-9.9-2.7-18-8.2-24.1-5.5-6.2-13.6-10-24.4-11.2-6.4-.7-24.8-1.1-55.2-1.1zm0 127.1V362h48.6c23.4 0 38.1-.7 44.5-2 9.6-1.8 17.5-6 23.6-12.8s9-15.9 9-27.3c0-9.6-2.3-17.9-7-24.6s-11.4-11.6-20.3-14.7c-8.8-3.1-28-4.6-57.5-4.6z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst italicIcon = {\n    name: 'italic',\n    content: '<path d=\"m377.2 128 6.8-32H198.8l-6.8 32h59.2l-54.4 256h-62l-6.8 32h185.2l6.8-32h-59.2l54.4-256z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst underlineIcon = {\n    name: 'underline',\n    content: '<path d=\"M128 416h256v32H128zM320 64v224c0 11.6-3.5 16-10.3 20.3-11.8 7.4-31.3 11.7-53.7 11.7s-41.9-4.3-53.7-11.7c-6.8-4.3-10.3-8.7-10.3-20.3V64h-64v224c0 70.4 64.3 96 128 96s128-25.6 128-96V64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst fontFamilyIcon = {\n    name: 'font-family',\n    content: '<path d=\"M224 416V160h-95l-.8-64H384v64h-96v256z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst foregroundColorIcon = {\n    name: 'foreground-color',\n    content: '<path d=\"M299.5 96h-87.1L96 416h64l23.3-64h145.4l23.3 64h64zm-92.9 192L256 152.2 305.4 288z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst convertLowercaseIcon = {\n    name: 'convert-lowercase',\n    content: '<path d=\"M480.1 416H436v-36h-.7c-13.8 24-34.1 36-60.8 36-19.7 0-35.1-5.3-46.3-16-11.1-10.7-16.7-24.9-16.7-42.5 0-37.8 21.7-59.9 65.3-66.2l59.4-8.4c0-28.6-13.5-42.8-40.7-42.8-23.8 0-45.4 8.2-64.5 24.7V225c21.1-12.5 45.5-18.8 73.1-18.8 50.6 0 75.9 25 75.9 74.8v135zM436 313.1l-42 5.9c-13 1.7-22.8 4.9-29.4 9.5s-9.9 12.7-9.9 24.3c0 8.5 3 15.4 9.1 20.8s14.2 8.1 24.3 8.1c13.8 0 25.2-4.8 34.3-14.5 9-9.7 13.6-21.9 13.6-36.6zM240 416h48L184 96h-48L32 416h48l26-80h108zM121.6 288 160 169.8 198.4 288z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst convertUppercaseIcon = {\n    name: 'convert-uppercase',\n    content: '<path d=\"M200.1 416H156v-36h-.7c-13.8 24-34.1 36-60.8 36-19.7 0-35.1-5.3-46.3-16-11.1-10.7-16.7-24.9-16.7-42.5 0-37.8 21.7-59.9 65.3-66.2l59.4-8.4c0-28.6-13.5-42.8-40.7-42.8-23.8 0-45.4 8.2-64.5 24.7V225c21.1-12.5 45.5-18.8 73.1-18.8 50.6 0 75.9 25 75.9 74.8v135zM157 313.1l-42 5.9c-13 1.7-22.8 4.9-29.4 9.5s-9.9 12.7-9.9 24.3c0 8.5 3 15.4 9.1 20.8s14.2 8.1 24.3 8.1c13.8 0 25.2-4.8 34.3-14.5 9-9.7 13.6-21.9 13.6-36.6zM432 416h48L376 96h-48L224 416h48l26-80h108zM313.6 288 352 169.8 390.4 288z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst strikethroughIcon = {\n    name: 'strikethrough',\n    content: '<path d=\"M393.9 320c.1-23.9 4.5-41.4 13.5-52.5 9.1-11.1 20.8-16.7 35.3-16.7 9.6 0 17.7 3.1 24.5 9.3s11.4 15.4 14.1 27.7l27.9-4.7c-3.3-18.4-10.8-32.7-22.5-42.7s-26.8-15-45.2-15c-14.5 0-28.1 3.6-40.4 11.1-12.4 7.4-21.6 18.5-27.7 33.2-5.9 14.4-8.9 31.2-9.1 50.4h-25.5v-2.2c0-13.2-1.7-25.6-5.1-37.1s-8.1-21.4-14.2-29.6c-6-8.1-13.7-14.5-23-19s-19.2-6.8-29.6-6.8c-18.9 0-34.3 8.2-46.4 24.6v-90H192v160h-45v-25.8c0-13.7-.5-23.3-1.4-28.5-1.7-8.5-4.7-15.5-9-21.1-4.3-5.5-10.9-10.2-19.9-13.8s-20.8-5.5-35.3-5.5c-14.6 0-27.4 2.1-38.5 6.4s-19.5 10.4-25.4 18.4c-5.8 8-10 18.4-12.6 31.4l28.1 4.1c3.1-13 7.8-22 14.3-27.1s16.4-7.7 29.9-7.7q21.75 0 32.7 10.5c5.4 5.1 8.1 14 8.1 26.6 0 1.1 0 3.8-.2 8.1-11 4.1-28 7.7-51.2 10.7-11.4 1.5-19.9 3-25.5 4.7-6.7 2-12.9 4.9-18.5 8.6H0v32h1.2c-.8 3.8-1.2 7.7-1.2 11.8 0 15.2 5 27.8 15 37.6S39.3 416 57.9 416c11.3 0 21.8-1.9 31.6-6s20.1-10.9 30.7-20.6h.1c.8 8.6 2.7 20.3 5.7 26.7h30c-3.6-7-6-18.4-7.3-26.1-1-6-1.6-18.7-1.8-37.9h45v64h26.6V389q17.1 27 47.1 27c20.1 0 37.3-8.5 51.7-25.6 8.6-10.2 14.6-23 18-38.3h31.8c3.3 16 9.4 29.2 18.3 39.5 14.1 16.3 32.7 24.5 55.9 24.5 18.5 0 34.1-6 46.8-17.8 12.1-11.3 19.8-26.7 23.2-46.2h.5v-32H393.9zm-280.7 42.6c-4.1 9-10.4 16.1-19 21.4-8.6 5.2-18.4 7.8-29.5 7.8-11.2 0-19.6-2.8-25.4-8.2-5.8-5.6-8.7-12.4-8.7-20.7 0-3.9.7-7.5 2.1-10.9h83.6c-.7 4.1-1.8 7.7-3.1 10.6m105.1-43.3c0-22.2 4.6-39.2 13.7-50.9 9.1-11.8 20-17.6 32.5-17.6s23.1 5.6 31.8 17c8.8 11.3 13.1 28.7 13.2 52.3h-91.3c.1-.3.1-.6.1-.8m77.6 53.6c-9.1 11.8-20 17.7-32.5 17.7-15.5 0-27.7-8-36.7-23.9-2.2-3.9-4-8.8-5.3-14.7H306c-2.4 8.3-5.7 15.3-10.1 20.9m173.5 6.6c-7.5 7.5-16.9 11.2-28.2 11.2-14 0-25.4-5.6-34.1-16.7q-6.6-8.4-9.9-21.9h85.5c-2.6 11.9-7 21.1-13.3 27.4\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst subscriptIcon = {\n    name: 'subscript',\n    content: '<path d=\"m198.6 304 89.4 89.4-22.6 22.6-89.4-89.4L86.6 416 64 393.4l89.4-89.4L64 214.6 86.6 192l89.4 89.4 89.4-89.4 22.6 22.6zm167.7 144h81.4v32H320v-11.9c0-8 1.7-15.3 5-21.7s7.5-12.1 12.5-17.2 10.5-9.6 16.4-13.5 11.6-7.4 16.9-10.6c5.6-3.3 10.6-6.4 14.8-9.4s7.8-6 10.7-8.9c2.9-3 5.1-6 6.5-9s2.1-6.3 2.1-9.7c0-6.7-2.3-11.8-7-15.3-4.6-3.4-11.7-5.2-21.3-5.2-16.5 0-32.3 5.4-47.4 16.1v-30.5c16.7-8.9 35.5-13.3 56.5-13.3 9.7 0 18.5 1 26.2 3.1s14.3 5.1 19.6 8.9c5.4 3.9 9.4 8.6 12.3 14.1 2.8 5.5 4.2 11.7 4.2 18.5 0 7.2-1.4 13.7-4.1 19.3s-6.3 10.8-10.8 15.4-9.7 8.8-15.6 12.7c-5.9 3.8-12 7.6-18.3 11.1-4.3 2.5-8.4 5-12.4 7.4q-6 3.75-10.5 7.2c-3.1 2.6-7.1 6.6-10 10.4\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst supscriptIcon = {\n    name: 'supscript',\n    content: '<path d=\"m198.6 304 89.4 89.4-22.6 22.6-89.4-89.4L86.6 416 64 393.4l89.4-89.4L64 214.6 86.6 192l89.4 89.4 89.4-89.4 22.6 22.6zm167.7-112h81.4v32H320v-11.9c0-8 1.7-15.3 5-21.7s7.5-12.1 12.5-17.2 10.5-9.6 16.4-13.5 11.6-7.4 16.9-10.6c5.6-3.3 10.6-6.4 14.8-9.4s7.8-6 10.7-8.9c2.9-3 5.1-6 6.5-9s2.1-6.3 2.1-9.7c0-6.7-2.3-11.8-7-15.3-4.6-3.4-11.7-5.2-21.3-5.2-16.5 0-32.3 5.4-47.4 16.1V77.3c16.7-8.9 35.5-13.3 56.5-13.3 9.7 0 18.5 1 26.2 3.1s14.3 5.1 19.6 8.9c5.4 3.9 9.4 8.6 12.3 14.1 2.8 5.5 4.2 11.7 4.2 18.5 0 7.2-1.4 13.7-4.1 19.3s-6.3 10.8-10.8 15.4-9.7 8.8-15.6 12.7c-5.9 3.8-12 7.6-18.3 11.1-4.3 2.5-8.4 5-12.4 7.4q-6 3.75-10.5 7.2c-3.1 2.5-7.1 6.5-10 10.3\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst divIcon = {\n    name: 'div',\n    content: '<path d=\"M0 416v-6h7.1c7.9 0 13.6-3 16.9-9.1 2-3.6 3-11.8 3-24.5V231.6c0-14-1.3-22.8-3.9-26.3-3.6-4.9-9-7.3-16.1-7.3H0v-6h77.6c28.5 0 50.2 3.8 65 11.4 14.9 7.6 26.8 20.3 35.8 38s13.6 38.2 13.6 61.5c0 31.2-8.1 57.2-24.2 78.1-18.1 23.3-45.6 35-82.6 35zm54-16.2c11.9 3.1 21.9 4.6 29.9 4.6 21.7 0 39.8-9 54.1-26.9s21.5-42.3 21.5-73c0-30.9-7.2-55.3-21.5-73.2-14.3-17.8-32.8-26.8-55.2-26.8q-12.6 0-28.8 4.8zM298 410v6h-83v-6h6.7c7.8 0 13.5-2.7 17-8.1q3.3-5.25 3.3-25.5V231.6q0-17.1-1.8-22.5c-.9-2.8-2.8-5.1-5.7-7.1-4.1-2.6-8.4-4-12.8-4H215v-6h83v6h-7q-11.85 0-17.4 8.1-3.6 5.25-3.6 25.5v144.9c0 11.4.6 18.9 1.9 22.5 1 2.8 3 5.1 6 7.1 4.1 2.6 8.5 4 13.1 4h7zm214-218v6c-6.4 1.4-11.3 3.9-14.6 7.4-4.7 5.3-8.9 13.4-12.6 24.2L421.6 416h-4.9l-67.9-188.8c-3.5-9.7-5.9-15.6-7.4-17.8-2.2-3.3-5-5.9-8.2-7.8-3.3-1.9-7.6-3.1-13.2-3.6v-6h74v6c-8.4 1-13.8 2.7-16.3 5.2s-3.7 5.7-3.7 9.5c0 5.4 2 13.8 6.1 25.2l46.1 128.4L469 239.5c4.2-12.5 6.3-21.2 6.3-26q0-4.65-3.9-9c-2.6-2.9-6.9-4.9-13.1-6.1-.4-.1-1.2-.3-2.3-.5v-6h56zm0-96H0v32h512z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst allIcon = {\n    name: 'all',\n    content: '<path d=\"M120.1 343H52l-12 34.4c-2.9 8.5-4.4 14.8-4.4 19 0 3.3 1.3 6.2 3.8 8.8s8.1 4.2 16.5 4.9v5.9H0v-6q11.1-2.4 14.4-6.3c4.4-5.2 9.4-15.7 14.8-31.5L91.4 192H96l61.6 182.2q7.5 21.9 13.5 28.5c4 4.4 9.7 6.8 16.9 7.3v6h-70v-5.9c7-.4 11.7-1.9 14.2-4.3 2.5-2.5 3.7-5.5 3.7-9 0-4.7-1.7-12.2-5.2-22.3zm-3.5-12-30-88.5L55.8 331zm227.7 23.1 4.3 1.2-15.1 60.7H197v-6h6.5c7.4 0 12.6-3.1 15.8-9.3 1.8-3.5 2.7-11.7 2.7-24.5V222.7c0-14-1.2-13.9-3.6-17.5-3.3-4.9-8.3-7.3-14.9-7.3H196v-6h80v6.1s-15.4 1-19.2 3.3-6.4 5.2-7.8 8.8c-1.4 3.5-2.1 3.1-2 16.5v149.6c-.1 9.1.6 15.4 2 18.8 1 2.3 2.7 4 4.8 5.1 2.2 1.1 9 1.7 20.4 1.9h12.9c13.6-.2 23.1-1.5 28.6-4s10.5-7 15-13.5 9.1-16.6 13.6-30.4m163.4 0 4.3 1.2-15.1 60.7H360v-6h6.5c7.4 0 12.6-3.1 15.8-9.3 1.8-3.5 2.7-11.7 2.7-24.5V222.7c0-14-1.2-13.9-3.6-17.5-3.3-4.9-8.3-7.3-14.9-7.3H360v-6h80v6.1s-16.1 1-19.9 3.3-6.4 5.2-7.8 8.8c-1.4 3.5-2.1 3.1-2.4 16.5v149.6c.3 9.1 1 15.4 2.4 18.8 1 2.3 2.7 4 4.8 5.1s9 1.7 20.4 1.9h12.9c13.6-.2 23.1-1.5 28.6-4s10.5-7 15-13.5 9.2-16.6 13.7-30.4M512 96H0v32h512z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst h1Icon = {\n    name: 'h1',\n    content: '<path d=\"M128 288h96v-57q0-16.8-2.1-22.2c-1.1-2.7-3.3-5-6.8-7-4.6-2.6-10.1-3.9-15.3-3.9H192v-6h96v6h-7.7c-5.1 0-10 1.2-14.5 3.7-3.4 1.7-5.7 4.3-7 7.8-1.2 3.5-1.8 10.7-1.8 28.3V384c0 4.3.7 11.6 2.1 15.2 1.1 2.7 3.2 5 6.6 7q7.05 3.9 14.7 3.9h7.7v6h-96v-6h7.7c9 0 16.2-2.6 20.3-7.9 2.7-3.5 4.1-11.8 4.1-24.9V304h-96v73.1c0 11.1.7 18.4 2.1 22 1.1 2.7 3.4 5 6.8 7 4.7 2.6 9.6 3.9 14.8 3.9h8.3v6H64v-6h7.8c9.1 0 16.2-2.6 20.3-7.9 2.6-3.5 3.9-11.8 3.9-18.1V237.9c0-18.1-.7-25.5-2.1-29-1.1-2.7-3.3-5-6.6-7-4.8-2.6-10.3-3.9-15.5-3.9H64v-6h96v6h-8c-5.3 0-10.2 1.2-14.9 3.7-3.4 1.7-5.7 4.3-7.1 7.8-1.3 3.5-2 10.7-2 21.4zm192-69.9 63-26.1h1v185.3c0 12.3.5 20 1.5 23s3.2 5.3 6.4 7 14.1 2.5 24.1 2.8v6h-96v-6c10.4-.2 20.9-1.1 23.9-2.7s5.1-3.7 6.3-6.3q1.8-3.9 1.8-23.7V258.8c0-16-.5-26.2-1.6-30.8-.8-3.5-2.1-6-4.1-7.6q-3-2.4-7.2-2.4c-4 0-9.5 1.7-16.7 5zM512 96H0v32h512z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst h2Icon = {\n    name: 'h2',\n    content: '<path d=\"M128 288h96v-57q0-16.8-2.1-22.2c-1.1-2.7-3.3-5-6.8-7-4.6-2.6-10.1-3.9-15.3-3.9H192v-6h96v6h-7.7c-5.1 0-10 1.2-14.5 3.7-3.4 1.7-5.7 4.3-7 7.8-1.2 3.5-1.8 10.7-1.8 28.3V384c0 4.3.7 11.6 2.1 15.2 1.1 2.7 3.2 5 6.6 7q7.05 3.9 14.7 3.9h7.7v6h-96v-6h7.7c9 0 16.2-2.6 20.3-7.9 2.7-3.5 4.1-11.8 4.1-24.9V304h-96v73.1c0 11.1.7 18.4 2.1 22 1.1 2.7 3.4 5 6.8 7 4.7 2.6 9.6 3.9 14.8 3.9h8.3v6H64v-6h7.8c9.1 0 16.2-2.6 20.3-7.9 2.6-3.5 3.9-11.8 3.9-18.1V237.9c0-18.1-.7-25.5-2.1-29-1.1-2.7-3.3-5-6.6-7-4.8-2.6-10.3-3.9-15.5-3.9H64v-6h96v6h-8c-5.3 0-10.2 1.2-14.9 3.7-3.4 1.7-5.7 4.3-7.1 7.8-1.3 3.5-2 10.7-2 21.4zm336 86-15.3 42H320v-5.5c38.2-34.9 65.1-63.3 80.7-85.4q23.4-33.15 23.4-60.6c0-14-4.3-25.4-12.8-34.4-8.6-9-18.8-13.5-30.7-13.5-10.8 0-20.5 3.2-29.1 9.5s-15 15.6-19.1 27.8h-6c2.7-20 9.7-35.4 20.9-46.1s25.2-16.1 42-16.1c17.9 0 32.8 5.7 44.7 17.2 12 11.5 17.9 25 17.9 40.6 0 11.1-2.6 22.3-7.8 33.4-8 17.5-21 36.1-39 55.7-27 29.4-43.8 47.2-50.5 53.3h56.9c11.8 0 20-.4 24.8-1.3 4.7-.9 9-2.6 12.8-5.3s7.1-6.5 10-11.4zm48-278H0v32h512z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst h3Icon = {\n    name: 'h3',\n    content: '<path d=\"M128 288h96v-57q0-16.8-2.1-22.2c-1.1-2.7-3.3-5-6.8-7-4.6-2.6-10.1-3.9-15.3-3.9H192v-6h96v6h-7.7c-5.1 0-10 1.2-14.5 3.7-3.4 1.7-5.7 4.3-7 7.8-1.2 3.5-1.8 10.7-1.8 28.3V384c0 4.3.7 11.6 2.1 15.2 1.1 2.7 3.2 5 6.6 7q7.05 3.9 14.7 3.9h7.7v6h-96v-6h7.7c9 0 16.2-2.6 20.3-7.9 2.7-3.5 4.1-11.8 4.1-24.9V304h-96v73.1c0 11.1.7 18.4 2.1 22 1.1 2.7 3.4 5 6.8 7 4.7 2.6 9.6 3.9 14.8 3.9h8.3v6H64v-6h7.8c9.1 0 16.2-2.6 20.3-7.9 2.6-3.5 3.9-11.8 3.9-18.1V237.9c0-18.1-.7-25.5-2.1-29-1.1-2.7-3.3-5-6.6-7-4.8-2.6-10.3-3.9-15.5-3.9H64v-6h96v6h-8c-5.3 0-10.2 1.2-14.9 3.7-3.4 1.7-5.7 4.3-7.1 7.8-1.3 3.5-2 10.7-2 21.4zm195.6-50.6q9.6-21.75 24.3-33.6c9.8-7.9 22-11.9 36.6-11.9 18 0 31.9 5.6 41.5 16.9 7.3 8.4 11 17.3 11 26.9 0 15.7-10.3 31.9-30.9 48.7 13.8 5.2 24.3 12.6 31.4 22.3s10.6 21 10.6 34c0 18.7-6.2 34.8-18.6 48.5q-24.3 26.7-70.2 26.7c-15.2 0-25.5-1.8-31-5.4s-8.2-7.5-8.2-11.6q0-4.65 3.9-8.1c2.6-2.3 5.7-3.5 9.4-3.5 2.8 0 5.6.4 8.5 1.3 1.9.5 6.1 2.5 12.8 5.8q9.9 4.95 13.8 6c4.1 1.2 8.5 1.8 13.1 1.8 11.3 0 21.1-4.2 29.5-12.6s12.5-18.3 12.5-29.8c0-8.4-1.9-16.5-5.8-24.5-2.9-5.9-6-10.4-9.5-13.5-4.8-4.2-11.3-8.1-19.6-11.5s-16.8-5.2-25.4-5.2H358v-4.8c8.7-1.1 17.5-4.1 26.3-9.1s15.2-11 19.2-18 6-14.7 6-23.1c0-10.9-3.6-19.8-10.7-26.5s-16-10.1-26.6-10.1c-17.2 0-31.5 8.8-43 26.4zM512 96H0v32h512z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst h4Icon = {\n    name: 'h4',\n    content: '<path d=\"M128 288h96v-57q0-16.8-2.1-22.2c-1.1-2.7-3.3-5-6.8-7-4.6-2.6-10.1-3.9-15.3-3.9H192v-6h96v6h-7.7c-5.1 0-10 1.2-14.5 3.7-3.4 1.7-5.7 4.3-7 7.8-1.2 3.5-1.8 10.7-1.8 28.3V384c0 4.3.7 11.6 2.1 15.2 1.1 2.7 3.2 5 6.6 7q7.05 3.9 14.7 3.9h7.7v6h-96v-6h7.7c9 0 16.2-2.6 20.3-7.9 2.7-3.5 4.1-11.8 4.1-24.9V304h-96v73.1c0 11.1.7 18.4 2.1 22 1.1 2.7 3.4 5 6.8 7 4.7 2.6 9.6 3.9 14.8 3.9h8.3v6H64v-6h7.8c9.1 0 16.2-2.6 20.3-7.9 2.6-3.5 3.9-11.8 3.9-18.1V237.9c0-18.1-.7-25.5-2.1-29-1.1-2.7-3.3-5-6.6-7-4.8-2.6-10.3-3.9-15.5-3.9H64v-6h96v6h-8c-5.3 0-10.2 1.2-14.9 3.7-3.4 1.7-5.7 4.3-7.1 7.8-1.3 3.5-2 10.7-2 21.4zm341 47v23h-29v58h-27v-58h-93v-20.7L422.1 192H440v143zm-56 0V226.1L336 335zm99-239H0v32h512z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst h5Icon = {\n    name: 'h5',\n    content: '<path d=\"M128 288h96v-57q0-16.8-2.1-22.2c-1.1-2.7-3.3-5-6.8-7-4.6-2.6-10.1-3.9-15.3-3.9H192v-6h96v6h-7.7c-5.1 0-10 1.2-14.5 3.7-3.4 1.7-5.7 4.3-7 7.8-1.2 3.5-1.8 10.7-1.8 28.3V384c0 4.3.7 11.6 2.1 15.2 1.1 2.7 3.2 5 6.6 7q7.05 3.9 14.7 3.9h7.7v6h-96v-6h7.7c9 0 16.2-2.6 20.3-7.9 2.7-3.5 4.1-11.8 4.1-24.9V304h-96v73.1c0 11.1.7 18.4 2.1 22 1.1 2.7 3.4 5 6.8 7 4.7 2.6 9.6 3.9 14.8 3.9h8.3v6H64v-6h7.8c9.1 0 16.2-2.6 20.3-7.9 2.6-3.5 3.9-11.8 3.9-18.1V237.9c0-18.1-.7-25.5-2.1-29-1.1-2.7-3.3-5-6.6-7-4.8-2.6-10.3-3.9-15.5-3.9H64v-6h96v6h-8c-5.3 0-10.2 1.2-14.9 3.7-3.4 1.7-5.7 4.3-7.1 7.8-1.3 3.5-2 10.7-2 21.4zm320-96-12.6 28h-66L355 249.1c28.6 4.2 51.2 14.9 68 32 14.3 14.7 21.5 32 21.5 51.9 0 11.6-2.3 22.3-7 32.1s-10.6 18.2-17.7 25.2c-7.1 6.9-15 12.5-23.8 16.7-12.4 6-25.1 8.9-38.2 8.9-13.2 0-22.7-2.2-28.7-6.7s-9-9.4-9-14.9c0-3 1.2-5.7 3.7-8s5.6-3.5 9.4-3.5c2.8 0 5.3.4 7.4 1.3s5.7 3.1 10.8 6.7q12.15 8.4 24.6 8.4 18.9 0 33.3-14.4c14.4-14.4 14.3-21.2 14.3-35 0-13.3-4.3-25.7-12.8-37.3-8.5-11.5-20.3-20.4-35.3-26.7-11.8-4.9-27.8-7.7-48.1-8.4l42.1-85.5H448zm64-96H0v32h512z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst h6Icon = {\n    name: 'h6',\n    content: '<path d=\"M128 288h96v-57q0-16.8-2.1-22.2c-1.1-2.7-3.3-5-6.8-7-4.6-2.6-10.1-3.9-15.3-3.9H192v-6h96v6h-7.7c-5.1 0-10 1.2-14.5 3.7-3.4 1.7-5.7 4.3-7 7.8-1.2 3.5-1.8 10.7-1.8 28.3V384c0 4.3.7 11.6 2.1 15.2 1.1 2.7 3.2 5 6.6 7q7.05 3.9 14.7 3.9h7.7v6h-96v-6h7.7c9 0 16.2-2.6 20.3-7.9 2.7-3.5 4.1-11.8 4.1-24.9V304h-96v73.1c0 11.1.7 18.4 2.1 22 1.1 2.7 3.4 5 6.8 7 4.7 2.6 9.6 3.9 14.8 3.9h8.3v6H64v-6h7.8c9.1 0 16.2-2.6 20.3-7.9 2.6-3.5 3.9-11.8 3.9-18.1V237.9c0-18.1-.7-25.5-2.1-29-1.1-2.7-3.3-5-6.6-7-4.8-2.6-10.3-3.9-15.5-3.9H64v-6h96v6h-8c-5.3 0-10.2 1.2-14.9 3.7-3.4 1.7-5.7 4.3-7.1 7.8-1.3 3.5-2 10.7-2 21.4zm316-96v5.9c-13.1 1.4-23.9 4.2-32.2 8.4s-16.5 10.6-24.6 19.2-14.8 18.2-20.2 28.7c-5.3 10.6-9.8 23.1-13.4 37.6 14.3-10.5 28.7-15.8 43.2-15.8 13.8 0 25.8 5.9 36 17.8S448 321 448 339.6c0 18-5.1 34.5-15.4 49.3-12.3 18-28.7 27-49 27-13.8 0-25.6-4.9-35.2-14.6-18.9-19-28.4-43.6-28.4-73.8 0-19.3 3.6-37.7 10.9-55s17.6-32.8 31.1-46.3 26.4-22.5 38.8-27.2 23.8-7 34.5-7zm-92.9 111.4c-1.8 14.3-2.7 25.9-2.7 34.7 0 10.2 1.8 21.2 5.3 33.2 3.5 11.9 8.8 21.4 15.8 28.4 5.1 5 11.3 7.5 18.5 7.5 8.7 0 16.4-4.3 23.2-13q10.2-13.05 10.2-37.2 0-27.15-10.2-47.1C401 289.95 394.8 290 382.4 290c-3.8 0-7.8.8-12.2 2.5-4.3 1.6-10.7 5.2-19.1 10.9M512 96H0v32h512z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst listOrderedIcon = {\n    name: 'list-ordered',\n    content: '<path d=\"M192 64h288v32H192zm0 160h288v32H192zm0 160h288v32H192zM96 32v128H64V64c-1.5 1.3-14.9 7.8-22.1 10V50.8c7.2-2.1 13.9-4.8 20.3-8 6.3-3.3 12.1-6.8 17.2-10.7zM66.7 297h61.1v23H32v-9.5c0-6.4 1.2-12.2 3.7-17.3q3.75-7.65 9.3-13.8t12.3-10.8c4.5-3.1 8.7-6 12.7-8.5 4.2-2.6 7.9-5.1 11.1-7.6 3.2-2.4 5.9-4.8 8-7.2 2.2-2.4 3.8-4.8 4.9-7.2s1.6-5 1.6-7.8c0-5.4-1.7-9.5-5.2-12.2-3.5-2.8-8.8-4.1-16-4.1-12.4 0-24.2 4.3-35.5 12.9v-24.4c12.5-7.1 26.6-10.6 42.4-10.6 7.3 0 13.8.8 19.6 2.5q8.7 2.55 14.7 7.2c4 3.1 7.1 6.9 9.2 11.3s3.2 9.3 3.2 14.8c0 5.8-1 10.9-3.1 15.5-2 4.5-4.8 8.6-8.1 12.3-3.4 3.7-7.3 7.1-11.7 10.1-4.4 3.1-9 6-13.8 8.9-3.2 2-6.3 4-9.3 5.9-3 2-5.6 3.9-7.9 5.8s-4.1 3.8-5.4 5.6-2 3.6-2 5.2M32 473.8V450c10.1 6 21.8 9.1 35.3 9.1q12.75 0 19.8-4.5c4.7-3 7.1-7.2 7.1-12.5 0-5.5-2.9-9.8-8.8-12.8-5.8-3-13.9-4.5-24.1-4.5h-14V404h12.9c19.6 0 29.4-5.4 29.4-16.1 0-10.1-7.5-15.1-22.6-15.1-10.1 0-19.9 2.7-29.4 8v-22.3c10.6-4.4 22.9-6.6 37-6.6 15.4 0 27.4 2.8 36 8.5s12.9 13.1 12.9 22.2c0 16.2-10 26.3-29.9 30.4v.4c10.6 1.1 19 4.3 25.2 9.5 6.2 5.3 9.2 11.7 9.2 19.4 0 11.6-5.1 20.7-15.4 27.4S88.1 480 69.9 480c-15.5 0-28.2-2.1-37.9-6.2\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst listUnorderedIcon = {\n    name: 'list-unordered',\n    content: '<path d=\"M192 64h288v32H192zm0 160h288v32H192zm0 160h288v32H192zM80 32c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48m0 160c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48m0 160c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst indentIcon = {\n    name: 'indent',\n    content: '<path d=\"M480 64H32V32h448zm0 32H224v32h256zm0 64H224v32h256zm0 64H224v32h256zm0 64H224v32h256zm0 64H224v32h256zm0 64H32v32h448zM160 240 32 128v224z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst outdentIcon = {\n    name: 'outdent',\n    content: '<path d=\"M480 64H32V32h448zm0 32H224v32h256zm0 64H224v32h256zm0 64H224v32h256zm0 64H224v32h256zm0 64H224v32h256zm0 64H32v32h448zm-320-64V128L32 240z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst insertTopIcon = {\n    name: 'insert-top',\n    content: '<path d=\"M192 320h192v32H192zm0-128h288v-32H192zm192 64H192v32h192zM32 64v224l96-112z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst insertMiddleIcon = {\n    name: 'insert-middle',\n    content: '<path d=\"M192 128h192v32H192zm0 128h288v-32H192zm192 64H192v32h192zM32 128v224l96-112z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst insertBottomIcon = {\n    name: 'insert-bottom',\n    content: '<path d=\"M192 224h192v32H192zm0 128h288v-32H192zm192-192H192v32h192zM32 224v224l96-112z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst alignTopIcon = {\n    name: 'align-top',\n    content: '<path d=\"M480 64H32V32h448zm-64 32H96v32h320zm64 64H32v32h448z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst alignMiddleIcon = {\n    name: 'align-middle',\n    content: '<path d=\"M480 192H32v-32h448zm-64 32H96v32h320zm64 64H32v32h448z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst alignBottomIcon = {\n    name: 'align-bottom',\n    content: '<path d=\"M480 352H32v-32h448zm-64 32H96v32h320zm64 64H32v32h448z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst alignLeftIcon = {\n    name: 'align-left',\n    content: '<path d=\"M448 96H64V64h384zm-96 32H64v32h288zm96 64H64v32h384zm-96 64H64v32h288zm96 64H64v32h384zm-96 64H64v32h288z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst alignCenterIcon = {\n    name: 'align-center',\n    content: '<path d=\"M448 96H64V64h384zm-64 64H128v-32h256zm64 64H64v-32h384zm-64 64H128v-32h256zm64 64H64v-32h384zm-64 64H128v-32h256z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst alignRightIcon = {\n    name: 'align-right',\n    content: '<path d=\"M64 192h384v32H64zm384-96V64H64v32zm-288 64h288v-32H160zM64 320v32h384v-32zm96-32h288v-32H160zm0 96v32h288v-32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst alignJustifyIcon = {\n    name: 'align-justify',\n    content: '<path d=\"M448 160H64v-32h384zm0-96H64v32h384zM64 352h384v-32H64zm0-64h384v-32H64zm0-64h384v-32H64zm0 192h384v-32H64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst alignRemoveIcon = {\n    name: 'align-remove',\n    content: '<path d=\"m78.9 192 32 32H64v-32zM64 288h110.9l-32-32H64zm0 64h174.9l-32-32H64zm0 32v32h238.9l-32-32zm393.4 96 22.6-22.6-41.4-41.4h9.4v-32h-41.4l-32-32H448v-32H342.6l-32-32H448v-32H278.6l-32-32H448v-32H214.6l-32-32H448v-32H150.6l-32-32H448V64H86.6l-32-32L32 54.6\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst textWrapIcon = {\n    name: 'text-wrap',\n    content: '<path d=\"M480 96v32H96V96zM352 256v224H32V256zm-32 32H64v160h256zm-32 32H96v32h192zm0 96v-32H96v32zM64 64h288V32H32v160h320v-32H64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst horizontalRuleIcon = {\n    name: 'horizontal-rule',\n    content: '<path d=\"M320 96H32V64h288zm96 32H32v32h384zm64 96H32v64h448zM320 352H32v32h288zm96 64H32v32h384z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tableAlignTopLeftIcon = {\n    name: 'table-align-top-left',\n    content: '<path d=\"M32 480V0h448v480zM64 32v416h384V32zm32 64h192V64H96zm0 64h320v-32H96zm0 64h192v-32H96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tableAlignTopCenterIcon = {\n    name: 'table-align-top-center',\n    content: '<path d=\"M32 480V0h448v480zM64 32v416h384V32zm288 32H160v32h192zm64 64H96v32h320zm-64 64H160v32h192z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tableAlignTopRightIcon = {\n    name: 'table-align-top-right',\n    content: '<path d=\"M32 480V0h448v480zM64 32v416h384V32zm352 32H224v32h192zm0 64H96v32h320zm0 64H224v32h192z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tableAlignMiddleLeftIcon = {\n    name: 'table-align-middle-left',\n    content: '<path d=\"M32 480V0h448v480zM64 32v416h384V32zm32 160h192v-32H96zm0 64h320v-32H96zm0 64h192v-32H96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tableAlignMiddleCenterIcon = {\n    name: 'table-align-middle-center',\n    content: '<path d=\"M32 480V0h448v480zM64 32v416h384V32zm288 128H160v32h192zm64 64H96v32h320zm-64 64H160v32h192z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tableAlignMiddleRightIcon = {\n    name: 'table-align-middle-right',\n    content: '<path d=\"M32 480V0h448v480zM64 32v416h384V32zm352 128H224v32h192zm0 64H96v32h320zm0 64H224v32h192z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tableAlignBottomLeftIcon = {\n    name: 'table-align-bottom-left',\n    content: '<path d=\"M32 480V0h448v480zM64 32v416h384V32zm32 256h192v-32H96zm0 64h320v-32H96zm0 64h192v-32H96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tableAlignBottomCenterIcon = {\n    name: 'table-align-bottom-center',\n    content: '<path d=\"M32 480V0h448v480zM64 32v416h384V32zm288 224H160v32h192zm64 64H96v32h320zm-64 64H160v32h192z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tableAlignBottomRightIcon = {\n    name: 'table-align-bottom-right',\n    content: '<path d=\"M32 480V0h448v480zM64 32v416h384V32zm352 224H224v32h192zm0 64H96v32h320zm0 64H224v32h192z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tableAlignRemoveIcon = {\n    name: 'table-align-remove',\n    content: '<path d=\"M32 0v480h448V0zm416 448H64V32h384zM131.6 224l29.9 32H128v-32zm-3.6 64h63.4l29.9 32H128zm123.1 64 29.9 32H128v-32zM96 92l22.6-22.6L143.5 96H384v32H173.4l29.9 32H384v32H233.1l29.9 32h121v32h-91.2l29.9 32H384v32h-31.4l63.4 68-22.6 22.6z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst bordersAllIcon = {\n    name: 'borders-all',\n    content: '<path d=\"M32 32v416h416V32zm32 32h160v160H64zm0 352V256h160v160zm352 0H256V256h160zm0-192H256V64h160z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst bordersOutsideIcon = {\n    name: 'borders-outside',\n    content: '<path d=\"M128 256H96v-32h32zm64-32h-32v32h32zm64 0h-32v32h32zm0-64h-32v32h32zm0-64h-32v32h32zm0 256h-32v32h32zm0-64h-32v32h32zm64-64h-32v32h32zm64 0h-32v32h32zm64-192v416H32V32zm-32 32H64v352h352z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst bordersInsideIcon = {\n    name: 'borders-inside',\n    content: '<path d=\"M64 64H32V32h32zm0 32H32v32h32zm0 64H32v32h32zm0 128H32v32h32zm0 64H32v32h32zM448 96h-32v32h32zm0 64h-32v32h32zm0 128h-32v32h32zm0 64h-32v32h32zM128 32H96v32h32zm64 0h-32v32h32zM64 416H32v32h32zm64 0H96v32h32zm64 0h-32v32h32zm128 0h-32v32h32zm64 0h-32v32h32zm64 0h-32v32h32zM320 32h-32v32h32zm64 0h-32v32h32zm64 0h-32v32h32zm0 192H256V32h-32v192H32v32h192v192h32V256h192z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst bordersInsideHorizontalIcon = {\n    name: 'borders-inside-horizontal',\n    content: '<path d=\"M448 224v32H32v-32zM64 32H32v32h32zm0 96H32V96h32zm0 64H32v-32h32zm0 128H32v-32h32zm0 64H32v-32h32zm384-256h-32V96h32zm0 64h-32v-32h32zm0 128h-32v-32h32zm0 64h-32v-32h32zM128 64H96V32h32zm64 0h-32V32h32zm64 0h-32V32h32zm0 64h-32V96h32zm0 64h-32v-32h32zm0 128h-32v-32h32zm0 64h-32v-32h32zm0 64h-32v-32h32zM64 416H32v32h32zm64 32H96v-32h32zm64 0h-32v-32h32zm128-32h-32v32h32zm64 32h-32v-32h32zm64 0h-32v-32h32zM320 32h-32v32h32zm64 32h-32V32h32zm64 0h-32V32h32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst bordersInsideVerticalIcon = {\n    name: 'borders-inside-vertical',\n    content: '<path d=\"M256 448h-32V32h32zM448 64V32h-32v32zm-96 0V32h32v32zm-64 0V32h32v32zm-128 0V32h32v32zm-64 0V32h32v32zm256 384v-32h32v32zm-64 0v-32h32v32zm-128 0v-32h32v32zm-64 0v-32h32v32zm320-320V96h32v32zm0 64v-32h32v32zm0 64v-32h32v32zm-64 0v-32h32v32zm-64 0v-32h32v32zm-128 0v-32h32v32zm-64 0v-32h32v32zm-64 0v-32h32v32zM64 64V32H32v32zm-32 64V96h32v32zm0 64v-32h32v32zm32 128v-32H32v32zm-32 64v-32h32v32zm0 64v-32h32v32zm416-128v-32h-32v32zm-32 64v-32h32v32zm0 64v-32h32v32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst borderTopIcon = {\n    name: 'border-top',\n    content: '<path d=\"M448 32v32H32V32zM64 96H32v32h32zm0 96H32v-32h32zm0 64H32v-32h32zm0 64H32v-32h32zm0 64H32v-32h32zm384-192h-32v-32h32zm0 64h-32v-32h32zm0 64h-32v-32h32zm0 64h-32v-32h32zM128 256H96v-32h32zm64 0h-32v-32h32zm64-128h-32V96h32zm0 64h-32v-32h32zm0 64h-32v-32h32zm0 64h-32v-32h32zm0 64h-32v-32h32zm0 64h-32v-32h32zM64 416H32v32h32zm64 32H96v-32h32zm64 0h-32v-32h32zm128-32h-32v32h32zm64 32h-32v-32h32zm64 0h-32v-32h32zM320 224h-32v32h32zm64 32h-32v-32h32zm64-128h-32V96h32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst borderBottomIcon = {\n    name: 'border-bottom',\n    content: '<path d=\"M32 448v-32h416v32zm32-96H32v32h32zm0-32H32v-32h32zm0-64H32v-32h32zm0-64H32v-32h32zm0-64H32V96h32zm384 192h-32v-32h32zm0-64h-32v-32h32zm0-64h-32v-32h32zm0-64h-32V96h32zM128 256H96v-32h32zm64 0h-32v-32h32zm64 128h-32v-32h32zm0-64h-32v-32h32zm0-64h-32v-32h32zm0-64h-32v-32h32zm0-64h-32V96h32zm0-64h-32V32h32zM64 32H32v32h32zm64 32H96V32h32zm64 0h-32V32h32zm128-32h-32v32h32zm64 32h-32V32h32zm64 0h-32V32h32zM320 224h-32v32h32zm64 32h-32v-32h32zm64 128h-32v-32h32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst borderLeftIcon = {\n    name: 'border-left',\n    content: '<path d=\"M32 32h32v416H32zm96 32V32H96v32zm32 0V32h32v32zm64 0V32h32v32zm64 0V32h32v32zm64 0V32h32v32zM160 448v-32h32v32zm64 0v-32h32v32zm64 0v-32h32v32zm64 0v-32h32v32zM224 128V96h32v32zm0 64v-32h32v32zM96 256v-32h32v32zm64 0v-32h32v32zm64 0v-32h32v32zm64 0v-32h32v32zm64 0v-32h32v32zm64 0v-32h32v32zm32-192V32h-32v32zm-32 64V96h32v32zm0 64v-32h32v32zm32 128v-32h-32v32zm-32 64v-32h32v32zm0 64v-32h32v32zM256 320v-32h-32v32zm-32 64v-32h32v32zM96 448v-32h32v32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst borderRightIcon = {\n    name: 'border-right',\n    content: '<path d=\"M448 448h-32V32h32zM384 64V32h-32v32zm-96 0V32h32v32zm-64 0V32h32v32zm-64 0V32h32v32zm-64 0V32h32v32zm192 384v-32h32v32zm-64 0v-32h32v32zm-64 0v-32h32v32zm-64 0v-32h32v32zm128-320V96h32v32zm0 64v-32h32v32zm128 64v-32h32v32zm-64 0v-32h32v32zm-64 0v-32h32v32zm-64 0v-32h32v32zm-64 0v-32h32v32zm-64 0v-32h32v32zM64 64V32H32v32zm-32 64V96h32v32zm0 64v-32h32v32zm32 128v-32H32v32zm-32 64v-32h32v32zm0 64v-32h32v32zm224-128v-32h-32v32zm-32 64v-32h32v32zm128 64v-32h32v32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst bordersNoneIcon = {\n    name: 'borders-none',\n    content: '<path d=\"M384 64V32h-32v32zm-96 0V32h32v32zm-64 0V32h32v32zm-64 0V32h32v32zm-64 0V32h32v32zm192 384v-32h32v32zm-64 0v-32h32v32zm-64 0v-32h32v32zm-64 0v-32h32v32zm128-320V96h32v32zm0 64v-32h32v32zm128 64v-32h32v32zm-64 0v-32h32v32zm-64 0v-32h32v32zm-64 0v-32h32v32zm-64 0v-32h32v32zm-64 0v-32h32v32zM64 64V32H32v32zm-32 64V96h32v32zm0 64v-32h32v32zm32 128v-32H32v32zm-32 64v-32h32v32zm0 64v-32h32v32zm384-192v-32h32v32zm32-192V32h-32v32zm-32 64V96h32v32zm0 64v-32h32v32zm32 128v-32h-32v32zm-32 64v-32h32v32zm0 64v-32h32v32zM256 320v-32h-32v32zm-32 64v-32h32v32zm128 64v-32h32v32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst bordersShowHideIcon = {\n    name: 'borders-show-hide',\n    content: '<path d=\"M64 448h128v32H32V32h448v128h-32V64H64zm384 0h-64v32h96v-96h-32zM160 288v-64H96v64zm64 0h64v-64h-64zm160-32v-32h-32v32zM288 96h-64v64h64zm0 384L160 352l45-45 83 83 147-147 45 45z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst formIcon = {\n    name: 'form',\n    content: '<path d=\"M416 32V0h-32v32h-32V0h-32v32h-32V0h-32v32h-32V0h-32v32h-32V0h-32v32H96V0H64v32H32v32H0v32h32v32H0v32h32v32H0v32h32v32H0v32h32v32H0v32h32v32H0v32h32v32h32v32h32v-32h32v32h32v-32h32v32h32v-32h32v32h32v-32h32v32h32v-32h32v32h32v-32h32v-32h32v-32h-32v-32h32v-32h-32v-32h32v-32h-32v-32h32v-32h-32v-32h32v-32h-32V96h32V64h-32V32zm0 384H64V64h352zm32 64v-32h32v32zm32-448h-32V0h32zM0 448h32v32H0zM32 0v32H0V0z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst formElementIcon = {\n    name: 'form-element',\n    content: '<path d=\"M416 32V0h-32v32h-32V0h-32v32h-32V0h-32v32h-32V0h-32v32h-32V0h-32v32H96V0H64v32H32v32H0v32h32v32H0v32h32v32H0v32h32v32H0v32h32v32H0v32h32v32H0v32h32v32h32v32h32v-32h32v32h32v-32h32v32h32v-32h32v32h32v-32h32v32h32v-32h32v32h32v-32h32v-32h32v-32h-32v-32h32v-32h-32v-32h32v-32h-32v-32h32v-32h-32v-32h32v-32h-32V96h32V64h-32V32zm0 384H64V64h352zm32 64v-32h32v32zm32-448h-32V0h32zM0 448h32v32H0zM32 0v32H0V0zm160 128H96v32h96zm192 0H224v32h160zm0 64H224v32h160zm0 64H224v32h160zm0 64H224v32h160zm-192 0H96v32h96zm0-64H96v32h96zm0-64H96v32h96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst codeSnippetIcon = {\n    name: 'code-snippet',\n    content: '<path d=\"M416 32V0h-32v32h-32V0h-32v32h-32V0h-32v32h-32V0h-32v32h-32V0h-32v32H96V0H64v32H32v32H0v32h32v32H0v32h32v32H0v32h32v32H0v32h32v32H0v32h32v32H0v32h32v32h32v32h32v-32h32v32h32v-32h32v32h32v-32h32v32h32v-32h32v32h32v-32h32v32h32v-32h32v-32h32v-32h-32v-32h32v-32h-32v-32h32v-32h-32v-32h32v-32h-32v-32h32v-32h-32V96h32V64h-32V32zm0 256v128H64V64h352zM32 0v32H0V0zM0 448h32v32H0zm198.6-265.4L141.3 240l57.4 57.4L176 320l-80-80 80-80zM304 160l80 80-80 80-22.6-22.6 57.4-57.4-57.4-57.4zM480 32h-32V0h32zm-32 448v-32h32v32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst selectAllIcon = {\n    name: 'select-all',\n    content: '<path d=\"M448 448h32v32h-32zm0-448h32v32h-32zM0 448h32v32H0zM0 0h32v32H0zm448 384h32v32h-32zm0-64h32v32h-32zm0-64h32v32h-32zm0-64h32v32h-32zm0-64h32v32h-32zm0-64h32v32h-32zM0 384h32v32H0zm0-64h32v32H0zm0-64h32v32H0zm0-64h32v32H0zm0-64h32v32H0zm0-64h32v32H0zm128 384h32v32h-32zm-64 0h32v32H64zm128 0h32v32h-32zm64 0h32v32h-32zm64 0h32v32h-32zm64 0h32v32h-32zM64 0h32v32H64zm64 0h32v32h-32zm64 0h32v32h-32zm64 0h32v32h-32zm64 0h32v32h-32zm64 0h32v32h-32zm-96 64 53.4 53.4L240 218.9 138.6 117.4 192 64H64v128l53.5-53.5L218.9 240 117.5 341.5 64 288v128h128l-53.4-53.4L240 261.1l101.4 101.5L288 416h128V288l-53.5 53.5L261.1 240l101.4-101.5L416 192V64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst buttonIcon = {\n    name: 'button',\n    content: '<path d=\"m130.1 130.1 36.1 93.9H64c-17.6 0-32-14.4-32-32V64c0-17.6 14.4-32 32-32h384c17.6 0 32 14.4 32 32v128c0 17.6-14.4 32-32 32h-73.8zM480 299 185.8 185.8 299 480l22.6-113.1L434.7 480l45.3-45.3-113.1-113.1z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst selectBoxIcon = {\n    name: 'select-box',\n    content: '<path d=\"M384 352H128v-32h256zm0 32H128v32h256zm0-128H128v32h256zm96-192v128c0 17.6-14.4 32-32 32v224c0 17.7-14.3 32-32 32H96c-17.7 0-32-14.3-32-32V224c-17.6 0-32-14.4-32-32V64c0-17.6 14.4-32 32-32h384c17.6 0 32 14.4 32 32M352 96l32 64 32-64zm64 128H96v224h320z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst calendarDateIcon = {\n    name: 'calendar-date',\n    content: '<path d=\"M448 32h-64V0h-64v32H192V0h-64v32H64c-17.6 0-32 14.4-32 32v384c0 17.6 14.4 32 32 32h384c17.6 0 32-14.4 32-32V64c0-17.6-14.4-32-32-32m0 416-383.9.1-.1-.1V192h384zm0-288H64V64.1l.1-.1H128v32h64V64h128v32h64V64h63.9l.1.1zM192 270.6S171.9 288 142 288v-32c29.9 0 58-32 58-32h24v192h-32zM384 416H256v-14.2c0-9.7 1.6-18.4 4.8-26 3.3-7.7 7.3-14.6 12.2-20.7 4.8-6.1 10.2-11.5 15.9-16.2s11.3-8.9 16.4-12.7c5.5-3.9 10.3-7.7 14.4-11.3 4.2-3.6 7.6-7.2 10.4-10.7q4.2-5.25 6.3-10.8 2.1-5.4 2.1-11.7c0-8.1-2.3-14.1-6.8-18.4-4.5-4.1-11.5-6.2-20.7-6.2-16 0-31.5 6.4-46.1 19.4v-37.1c16.5-10.6 35-16.1 55.5-16.1 9.6 0 18.2 1.3 25.7 3.8 7.6 2.5 14.1 6.1 19.3 10.7s9.3 10.3 12.1 17c2.7 6.6 4.1 14.1 4.1 22.3 0 8.7-1.4 16.6-4 23.3-2.7 6.8-6.3 12.9-10.6 18.5-4.5 5.6-9.5 10.6-15.3 15.2s-11.8 9.1-18 13.4c-4.2 3-8.3 5.9-12.2 8.9-3.9 2.9-7.4 5.8-10.4 8.7s-5.3 5.7-7.1 8.4c-1.9 2.7-2.7 7.8-2.7 10.3H384z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst groupBoxIcon = {\n    name: 'group-box',\n    content: '<path d=\"M144 81.6c-10.6-7.5-25.2-11.1-44.1-11.1-40.5 0-61.7 15-63.6 45.2h26.1c.7-16.8 12.8-25 36-25 11 0 19.2 1.6 24.4 4.8 2.6 1.6 4.6 3.3 6.2 5.1 1.5 1.9 2.5 4 3.2 6.6s1.2 5.6 1.4 9.4c.1 3.6.1 8.2.1 13.6h-12.8c-59.4 0-89.1 17.2-89.1 51.4 0 6.4 1.3 12 3.8 17.2 2.5 5.3 6 9.7 10.4 13.4 4.4 3.8 9.7 6.6 16 8.7 6.1 2.2 12.8 3.2 20 3.2 20.9 0 38.2-6.2 51.7-18.6v17.9H160v-97.8c0-22.1-5.4-36.7-16-44m-10.1 100.2c-2.3 3.3-5.1 6.2-8.4 9-3.2 2.6-6.8 4.9-10.7 6.8s-8 3.3-12.2 4.3-8.6 1.4-12.8 1.4c-9.6 0-17-2-22.5-5.9-5.5-4-8.3-9.8-8.3-17.2 0-20.7 18.9-30.9 56.9-30.9h18zM316 115.7c-2.7-9.3-6.6-17.2-11.8-23.8-5-6.4-11.4-11.5-18.7-15-7.5-3.4-16-5.2-25.5-5.2-16.4 0-30.2 6.9-41.7 20.5V32H192v192h26.2v-14.8c10.9 9.7 24.3 14.8 40 14.8 8.8 0 17-1.9 24.5-5.4 7.6-3.7 14.1-8.9 19.7-15.5 5.5-6.7 9.8-14.9 13-24.4 3-9.6 4.6-20.4 4.6-32.1 0-11.5-1.3-21.8-4-30.9m-32.6 73.6c-6.6 9.5-15.6 14.2-26.8 14.2-14.5 0-27.4-5.9-38.4-17.8v-69.1c11.9-16.6 25-24.9 39.4-24.9 11.4 0 20 4.6 26.2 13.9 6.2 9.2 9.3 22.9 9.3 41 .1 18.9-3.2 33.3-9.7 42.7M450 110c1.8 3.2 2.7 6.9 3 11.2h27c-.9-7.3-3.1-13.8-6.4-19.6s-7.6-10.5-12.7-14.2c-5.2-3.9-11.2-6.8-18-8.8-6.9-2-14.2-3-22.2-3-10.3 0-19.5 1.6-28 4.9s-15.7 8.1-21.8 14.4c-6 6.3-10.7 14.1-14 23.3s-4.9 19.7-4.9 31.5c0 11.9 1.6 22.5 4.9 31.7 3.1 9.2 7.8 17 13.9 23.2 6 6.3 13.3 11.1 21.8 14.4 8.3 3.3 17.9 5 28.2 5 8 0 15.3-1 22.2-3 6.8-2 12.8-4.9 18-8.8 5.1-3.9 9.4-8.8 12.7-14.4s5.5-12.1 6.4-19.6h-27c-.3 4.2-1.2 7.9-3 11.2-1.8 3.2-4.2 5.9-7 8.1-3 2.2-6.3 3.9-10.1 4.9-3.9 1.2-7.9 1.7-12.2 1.7-6.3 0-11.9-1.2-17-3.5-5.2-2.3-9.7-5.8-13.4-10.4-3.7-4.5-6.6-10.2-8.5-17-2.1-6.8-3.1-14.7-3.1-23.6 0-9.1 1-17.1 3.1-23.9 2.1-6.9 5.1-12.5 8.8-17.1 3.7-4.5 8-7.8 13.3-10.1 5.1-2.3 10.7-3.5 16.8-3.5 4.3 0 8.3.6 12.2 1.7 3.9 1.2 7.2 2.7 10.1 4.9 2.8 2.4 5.2 5.1 6.9 8.4M128 256h256v32H128zm0 64h256v32H128zm0 64h256v32H128zm256 32H128v-32h256zm0-128H128v-32h256zm0 64H128v-32h256zm32-96h32v192c0 17.7-14.3 32-32 32H96c-17.7 0-32-14.3-32-32V256h32v192h320z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst textareaIcon = {\n    name: 'textarea',\n    content: '<path d=\"M448 448h-32V256h32zM194 334c1.8 3.2 2.7 6.9 3 11.2h27c-.9-7.3-3.1-13.8-6.4-19.6s-7.6-10.5-12.7-14.2c-5.2-3.9-11.2-6.8-18-8.8-6.9-2-14.2-3-22.2-3-10.3 0-19.5 1.6-28 4.9s-15.7 8.1-21.8 14.4c-6 6.3-10.7 14.1-14 23.3S96 361.9 96 373.7c0 11.9 1.6 22.5 4.9 31.7 3.1 9.2 7.8 17 13.9 23.2 6 6.3 13.3 11.1 21.8 14.4 8.3 3.3 17.9 5 28.2 5 8 0 15.3-1 22.2-3 6.8-2 12.8-4.9 18-8.8 5.1-3.9 9.4-8.8 12.7-14.4s5.5-12.1 6.4-19.6h-27c-.3 4.2-1.2 7.9-3 11.2-1.8 3.2-4.2 5.9-7 8.1-3 2.2-6.3 3.9-10.1 4.9-3.9 1.2-7.9 1.7-12.2 1.7-6.3 0-11.9-1.2-17-3.5-5.2-2.3-9.7-5.8-13.4-10.4-3.7-4.5-6.6-10.2-8.5-17-2.1-6.8-3.1-14.7-3.1-23.6 0-9.1 1-17.1 3.1-23.9 2.1-6.9 5.1-12.5 8.8-17.1 3.7-4.5 8-7.8 13.3-10.1 5.1-2.3 10.7-3.5 16.8-3.5 4.3 0 8.3.6 12.2 1.7 3.9 1.2 7.2 2.7 10.1 4.9 2.8 2.4 5.2 5.1 6.9 8.4m14-252.4c-10.6-7.5-25.2-11.1-44.1-11.1-40.5 0-61.7 15-63.6 45.2h26.1c.7-16.8 12.8-25 36-25 11 0 19.2 1.6 24.4 4.8 2.6 1.6 4.6 3.3 6.2 5.1 1.5 1.9 2.5 4 3.2 6.6s1.2 5.6 1.4 9.4c.1 3.6.1 8.2.1 13.6h-12.8c-59.4 0-89.1 17.2-89.1 51.4 0 6.4 1.3 12 3.8 17.2 2.5 5.3 6 9.7 10.4 13.4 4.4 3.8 9.7 6.6 16 8.7 6.1 2.2 12.8 3.2 20 3.2 20.9 0 38.2-6.2 51.7-18.6v17.9H224v-97.8c0-22.1-5.4-36.7-16-44m-10.1 100.2c-2.3 3.3-5.1 6.2-8.4 9-3.2 2.6-6.8 4.9-10.7 6.8s-8 3.3-12.2 4.3-8.6 1.4-12.8 1.4c-9.6 0-17-2-22.5-5.9-5.5-4-8.3-9.8-8.3-17.2 0-20.7 18.9-30.9 56.9-30.9h18zM380 115.7c-2.7-9.3-6.6-17.2-11.8-23.8-5-6.4-11.4-11.5-18.7-15-7.5-3.4-16-5.2-25.5-5.2-16.4 0-30.2 6.9-41.7 20.5V32H256v192h26.2v-14.8c10.9 9.7 24.3 14.8 40 14.8 8.8 0 17-1.9 24.5-5.4 7.6-3.7 14.1-8.9 19.7-15.5 5.5-6.7 9.8-14.9 13-24.4 3-9.6 4.6-20.4 4.6-32.1 0-11.5-1.3-21.8-4-30.9m-32.6 73.6c-6.6 9.5-15.6 14.2-26.8 14.2-14.5 0-27.4-5.9-38.4-17.8v-69.1c11.9-16.6 25-24.9 39.4-24.9 11.4 0 20 4.6 26.2 13.9 6.2 9.2 9.3 22.9 9.3 41 .1 18.9-3.2 33.3-9.7 42.7M256 370.6c0 11.8 1.6 22.5 4.6 32.1 3.2 9.5 7.5 17.6 13 24.4 5.6 6.6 12.1 11.8 19.7 15.5 7.5 3.6 15.7 5.4 24.5 5.4 15.7 0 29.1-5 40-14.8V448H384V256h-26.2v60.1c-11.5-13.6-25.3-20.5-41.7-20.5-9.5 0-18 1.7-25.5 5.2-7.3 3.6-13.7 8.6-18.7 15-5.2 6.6-9.1 14.5-11.8 23.8-2.8 9.2-4.1 19.5-4.1 31m26.8 0c0-18.1 3.2-31.8 9.3-41 6.2-9.3 14.8-13.9 26.2-13.9 14.4 0 27.5 8.3 39.4 24.9v69.1c-11.1 11.9-23.9 17.8-38.4 17.8-11.2 0-20.2-4.7-26.8-14.2-6.4-9.4-9.7-23.8-9.7-42.7\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst textboxIcon = {\n    name: 'textbox',\n    content: '<path d=\"M208 209.6c-10.6-7.5-25.2-11.1-44.1-11.1-40.5 0-61.7 15-63.6 45.2h26.1c.7-16.8 12.8-25 36-25 11 0 19.2 1.6 24.4 4.8 2.6 1.6 4.6 3.3 6.2 5.1 1.5 1.9 2.5 4 3.2 6.6s1.2 5.6 1.4 9.4c.1 3.6.1 8.2.1 13.6h-12.8c-59.4 0-89.1 17.2-89.1 51.4 0 6.4 1.3 12 3.8 17.2 2.5 5.3 6 9.7 10.4 13.4 4.4 3.8 9.7 6.6 16 8.7 6.1 2.2 12.8 3.2 20 3.2 20.9 0 38.2-6.2 51.7-18.6v17.9H224v-97.8c0-22.1-5.4-36.7-16-44m-10.1 100.2c-2.3 3.3-5.1 6.2-8.4 9-3.2 2.6-6.8 4.9-10.7 6.8s-8 3.3-12.2 4.3-8.6 1.4-12.8 1.4c-9.6 0-17-2-22.5-5.9-5.5-4-8.3-9.8-8.3-17.2 0-20.7 18.9-30.9 56.9-30.9h18zm170.3-89.9c-5-6.4-11.4-11.5-18.7-15-7.5-3.4-16-5.2-25.5-5.2-16.4 0-30.2 6.9-41.7 20.5V160H256v192h26.2v-14.8c10.9 9.7 24.3 14.8 40 14.8 8.8 0 17-1.9 24.5-5.4 7.6-3.7 14.1-8.9 19.7-15.5 5.5-6.7 9.8-14.9 13-24.4 3-9.6 4.6-20.4 4.6-32.1 0-11.5-1.3-21.8-4-31-2.8-9.3-6.7-17.1-11.8-23.7m-20.8 97.4c-6.6 9.5-15.6 14.2-26.8 14.2-14.5 0-27.4-5.9-38.4-17.8v-69.1c11.9-16.6 25-24.9 39.4-24.9 11.4 0 20 4.6 26.2 13.9 6.2 9.2 9.3 22.9 9.3 41 .1 18.9-3.2 33.3-9.7 42.7M448 64v384h-32V64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst textboxHiddenIcon = {\n    name: 'textbox-hidden',\n    content: '<path d=\"M0 160h32v64H0zm0-32h32V64H0zm0 288h32v-64H0zm160 96h64v-32h-64zm-96 0h64v-32H64zM352 0h-64v32h64zm-96 0h-64v32h64zM0 512h32v-64H0zM448 0h-64v32h64zM160 0H96v32h64zM64 0H0v32h64zM0 320h32v-64H0zm480 128h32v-64h-32zm0-96h32v-64h-32zm0-96h32v-64h-32zm0-96h32V96h-32zm0-160v64h32V0zm-32 512h64v-32h-64zm-192 0h64v-32h-64zm96 0h64v-32h-64zm-6-165.4c-7.4 3.6-15.6 5.4-24.3 5.4-15.6 0-28.9-5-39.7-14.8V352h-26V160h26v60.1c11.4-13.6 25.1-20.5 41.4-20.5 9.4 0 17.9 1.7 25.3 5.2 7.2 3.6 13.6 8.6 18.6 15 5.2 6.6 9 14.5 11.7 23.8 2.7 9.2 4 19.5 4 31 0 11.8-1.6 22.5-4.6 32.1-3.2 9.5-7.4 17.6-12.9 24.4-5.5 6.6-12 11.7-19.5 15.5m10.9-72c0-18.1-3.2-31.8-9.3-41-6.2-9.3-14.8-13.9-26.2-13.9-14.4 0-27.5 8.3-39.4 24.9v69.1c11.1 11.9 23.9 17.8 38.4 17.8 11.2 0 20.2-4.7 26.8-14.2 6.4-9.4 9.7-23.8 9.7-42.7M224 253.5V351h-26v-17.6S167.1 352 146.2 352c-7.3 0-13.9-1-20-3.2-6.2-2-11.6-4.9-16-8.7-4.5-3.8-8-8.1-10.4-13.4-2.5-5.2-3.8-10.8-3.8-17.2 0-34.2 29.8-51.4 89.1-51.5h12.8c0-5.2 0-9.9-.1-13.5-.3-3.8-.7-6.8-1.4-9.4s-1.7-4.8-3.2-6.6c-1.6-1.7-3.6-3.5-6.2-5.1-5.2-3.2-13.4-4.8-24.4-4.8-23.2 0-35.3 8.2-36 24.4h-26.1c1.9-29.6 23.1-44.6 63.6-44.6 18.9 0 33.5 3.6 44.1 11.1 10.4 7.4 15.8 22 15.8 44M198 277h-18c-38 0-56.9 10.3-56.9 30.9 0 7.4 2.8 13.1 8.3 17.2 5.5 3.9 12.9 5.9 22.5 5.9 4.2 0 8.6-.4 12.8-1.4s8.3-2.5 12.2-4.3c3.9-1.9 7.5-4.2 10.7-6.8 3.3-2.7 6.1-5.6 8.4-9zM448 64h-32v384h32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst passwordIcon = {\n    name: 'password',\n    content: '<path d=\"M480 64v384h-32V64zM174.2 221.1l-11.3-11.3-34.9 34.9V192H96v52.7l-34.9-34.9-11.3 11.3L84.7 256H32v32h52.7l-34.9 34.9 11.3 11.3L96 299.3V352h32v-52.7l34.9 34.9 11.3-11.3-34.9-34.9H192v-32h-52.7zm224 0-11.3-11.3-34.9 34.9V192h-32v52.7l-34.9-34.9-11.3 11.3 34.9 34.9H256v32h52.7l-34.9 34.9 11.3 11.3 34.9-34.9V352h32v-52.7l34.9 34.9 11.3-11.3-34.9-34.9H416v-32h-52.7z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst paragraphAddIcon = {\n    name: 'paragraph-add',\n    content: '<path d=\"M320 96h-64v352h-32V96h-64v352h-32V256c-53 0-96-43-96-96s43-96 96-96h192zm96 256v-64h-32v64h-64v32h64v64h32v-64h64v-32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst editToolsIcon = {\n    name: 'edit-tools',\n    content: '<path d=\"m260.6 288 11.5 31.5 56.2-56.6L244.2 32H139.8L0 416h76.8l28-76.8 18.6-51.2zm-17.5-48H140.9L192 99.5zM224 413.3V480h66.7l169.7-168.5-67.9-67.9zm55.3 34-22.6-22.6 135.8-135.8 22.6 22.6zm223.4-178-22.6 22.6-67.9-67.9 22.5-22.7c12.5-12.4 32.9-12.4 45.3 0l22.7 22.7c12.4 12.4 12.4 32.8 0 45.3\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst templateManagerIcon = {\n    name: 'template-manager',\n    content: '<path d=\"M377.2 292.1c-5.5 5.3-7.2 6.4-7.4 6.6-.2.1-.4.2-.9.2-.1-.2-.3-.7-.5-1.7s-.5-4.2-.5-15.1v-31.7c0-9.9-.7-16.2-2.3-19.7-2.4-5.4-6.1-9.4-11.2-12-6.2-3.1-14-4.7-23.3-4.7-12.3 0-22.1 2.8-29 8.4-7.2 5.7-10.9 12.3-10.9 19.4 0 4.1 1.2 7.5 3.6 10 2.5 2.7 5.7 4 9.6 4s7.2-1.3 9.6-3.8c2.4-2.4 3.6-5.9 3.6-10.2l-.2-5.8c0-1.9.9-3.5 2.7-5.1s4.4-2.4 7.9-2.4c4.7 0 8.1 1.3 10.4 3.9 1.7 1.9 3.6 6.3 3.6 16.8v.9c-15.6 5.6-26.5 10.2-33.4 14.1-7.8 4.4-13.1 9.1-16.3 14.3-2.5 3.9-3.7 8.5-3.7 13.8 0 8.2 2.5 14.9 7.5 20 5 5.2 11.6 7.8 19.4 7.8 4.9 0 9.5-1 13.8-2.9 2.2-1 6.6-3.9 13.5-8.9.7 2.9 1.9 5.2 3.5 6.9 2.8 3.1 6.6 4.7 11.2 4.7 8.5 0 17.1-5.6 25.7-16.8l.8-1v-16.3zm-35.2-.2c-8.9 6.7-14.1 8.1-16.9 8.1h-.1c-2.8 0-5.1-1.1-7.4-3.6-2.3-2.4-3.5-5.6-3.5-9.5 0-3 .9-5.8 2.8-8.4 2.1-2.8 5.7-5.6 10.6-8.2 2.4-1.3 7.2-3.4 14.4-6.2zm-97.9 12.2c-1.3-1.4-4-5.6-7.9-17.9L195.6 160h-7.7l-41 124.9c-4.1 12.7-7 17.9-8.8 20.1-.3.4-1.8 1.8-7.4 3.1l-2.8.6V320h43v-11.7l-3.2-.3c-6.6-.6-8.3-2-8.6-2.3-.9-.9-1.3-1.9-1.3-3 0-1.6.5-4.8 2.6-11.5l5.3-16.2h42.1l4.6 14c2.6 8.1 3.1 12 3.1 13.8 0 1.3-.4 2.2-1.3 3.2-.3.4-1.9 1.6-7 1.9l-3.3.2V320h52v-11.8l-3.2-.3c-3.8-.3-6.6-1.5-8.6-3.8M172.5 254l14.7-44.6 14.4 44.6zM352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128zm64 416H96V64h224v96h96zm-224-32h-64v-64h64zm96 0h-64v-64h64zm96 0h-64v-64h64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst changeManuallyIcon = {\n    name: 'change-manually',\n    content: '<path d=\"m416 353 32-32v159H32V32h416v64h-32V64H64v384h352zm-192-3.7V416h66.7l169.7-168.5-67.9-67.9zm55.3 34-22.6-22.6 135.8-135.8 22.6 22.6zM502.7 160 480 137.3c-12.4-12.4-32.8-12.4-45.3 0L412.2 160l67.9 67.9 22.6-22.6c12.4-12.5 12.4-32.9 0-45.3M191.9 416H167v-22h-.6c-7.9 14.6-19.4 22-34.6 22-11.2 0-20-3.3-26.3-9.8S96 391 96 380.3c0-23.1 12.4-36.5 37.2-40.4l33.9-5.1c0-17.4-7.7-26.1-23.2-26.1-13.6 0-25.8 5-36.8 15v-24.2c12-7.6 25.9-11.5 41.7-11.5 28.8 0 43.3 15.2 43.3 45.6V416zM167 353.1l-23.9 3.6c-7.4 1-13 3-16.8 5.8s-5.6 7.8-5.6 14.9c0 5.2 1.7 9.4 5.2 12.7s8.1 5 13.9 5c7.9 0 14.4-3 19.5-8.9 5.2-5.9 7.7-13.4 7.7-22.4z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst trackChangesIcon = {\n    name: 'track-changes',\n    content: '<path d=\"m412.2 256 22.6-22.6c12.4-12.4 32.8-12.4 45.3 0l22.6 22.6c12.4 12.4 12.4 32.8 0 45.3L480 323.8zm-19.7 19.6L250.9 417.2 224 445.3V512h66.7l28.1-26.9 141.6-141.6zM279.3 479.3 268 468l-11.3-11.3 135.8-135.8 22.6 22.6zM288 160H160v32h128zm64 64H160v32h192zm-64 64H160v32h128zm-64 64h-64v32h64zm188.2-96 22.6-22.6c12.4-12.4 32.8-12.4 45.3 0l22.6 22.6c12.4 12.4 12.4 32.8 0 45.3L480 323.8zm-19.7 19.6L250.9 417.2 224 445.3V512h66.7l28.1-26.9 141.6-141.6zM279.3 479.3 268 468l-11.3-11.3 135.8-135.8 22.6 22.6zM96 416V64h224v96h96v32h32v-64l-96-96H96c-17.7 0-32 14.3-32 32v352c0 17.7 14.3 32 32 32h96v-32zM0 512h192v-32H0z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst trackChangesEnableIcon = {\n    name: 'track-changes-enable',\n    content: '<path d=\"M502.7 173.3 480 195.8 412.2 128l22.6-22.6c12.4-12.4 32.8-12.4 45.3 0l22.6 22.6c12.4 12.4 12.4 32.8 0 45.3m-110.2-25.7 67.9 67.9-141.6 141.6-28.1 26.9H224v-66.7l26.9-28.1zm22.6 67.9-22.6-22.6-135.8 135.8L268 340l11.3 11.3zM160 320h32v-32h-32zm0-64h96v-32h-96zm128-96H160v32h128zM160 384h32v-32h-32zm256 64H96V64h224v96l80.11-79.89L352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V273.155l-32 32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst trackChangesAcceptIcon = {\n    name: 'track-changes-accept',\n    content: '<path d=\"M128 128H96V64c0-17.7 14.3-32 32-32h224l64 64h-96V64H128zm122.9 193.2L224 349.3V416h66.7l28.1-26.9 141.6-141.6-67.9-67.9zm28.4 62.1L268 372l-11.3-11.3 135.8-135.8 22.6 22.6zM416 337.155l32-32V448c0 17.7-14.3 32-32 32H128c-17.7 0-32-14.3-32-32v-96h32v96h288zM502.7 205.3 480 227.8 412.2 160l22.6-22.6c12.4-12.4 32.8-12.4 45.3 0l22.6 22.6c12.4 12.4 12.4 32.8 0 45.3M288 144 112 320 0 208l45-45 67 67L243 99zm-96 272h-32v-32h32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst trackChangesAcceptAllIcon = {\n    name: 'track-changes-accept-all',\n    content: '<path d=\"M128 160H96V96c0-17.7 14.3-32 32-32h224l64 64h-96V96H128zm264.5 51.6 67.9 67.9-141.6 141.6-28.1 26.9H224v-66.7l26.9-28.1zm22.6 67.9-22.6-22.6-135.8 135.8L268 404l11.3 11.3zM416 480H128v-96H96v96c0 17.7 14.3 32 32 32h288c17.7 0 32-14.3 32-32V337.155l-32 32zm86.7-288-22.6-22.6c-12.5-12.4-32.9-12.4-45.3 0L412.2 192l67.8 67.8 22.7-22.5c12.4-12.5 12.4-32.9 0-45.3M160 448h32v-32h-32zM64 32h256L288 0H64C46.3 0 32 14.3 32 32v128h32zm0 352H32v32c0 17.7 14.3 32 32 32zm179-253L112 262l-67-67-45 45 112 112 176-176z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst trackChangesRejectIcon = {\n    name: 'track-changes-reject',\n    content: '<path d=\"M102.627 272 160 329.373 137.373 352 80 294.627 22.627 352 0 329.373 57.373 272 0 214.627 22.627 192 80 249.373 137.373 192 160 214.627zM192 384v-32h-32v32zm310.7-256-22.6-22.6c-12.5-12.4-32.9-12.4-45.3 0L412.2 128l67.8 67.8 22.7-22.5c12.4-12.5 12.4-32.9 0-45.3M96 64h224v96l80.11-79.89L352 32H96c-17.7 0-32 14.3-32 32v96h32zm296.5 83.6 67.9 67.9-141.6 141.6-28.1 26.9H224v-66.7l26.9-28.1zm22.6 67.9-22.6-22.6-135.8 135.8L268 340l11.3 11.3zM416 448H96v-64H64v64c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V273.155l-32 32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst trackChangesRejectAllIcon = {\n    name: 'track-changes-reject-all',\n    content: '<path d=\"M102.627 272 160 329.373 137.373 352 80 294.627 22.627 352 0 329.373 57.373 272 0 214.627 22.627 192 80 249.373 137.373 192 160 214.627zM128 96h192v32h96l-64-64H128c-17.7 0-32 14.3-32 32v64h32zm264.5 115.6 67.9 67.9-141.6 141.6-28.1 26.9H224v-66.7l26.9-28.1zm22.6 67.9-22.6-22.6-135.8 135.8L268 404l11.3 11.3zM416 480H128v-96H96v96c0 17.7 14.3 32 32 32h288c17.7 0 32-14.3 32-32V337.155l-32 32zm86.7-288-22.6-22.6c-12.5-12.4-32.9-12.4-45.3 0L412.2 192l67.8 67.8 22.7-22.5c12.4-12.5 12.4-32.9 0-45.3M160 448h32v-32h-32zM64 32h256L288 0H64C46.3 0 32 14.3 32 32v128h32zm0 352H32v32c0 17.7 14.3 32 32 32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst documentManagerIcon = {\n    name: 'document-manager',\n    content: '<path d=\"M64 416h224v32H64zm224-64H64v32h224zM400 0C288 0 288 96 288 96v160s0 64 80 64 80-64 80-64V96s0-32-48-32-48 32-48 32v128h32V116c0-11 .6-20 16-20s16 9 16 20v140s0 32-48 32-48-32-48-32V96s0-64 80-64 80 64 80 64v128h32V96s0-96-112-96M106.7 288 96 320H64l64-192h32l64 192h-32l-10.7-32zm10.6-32h53.3L144 176zM320 480H32V96h224V64H32C14.3 64 0 78.3 0 96v384c0 17.7 14.3 32 32 32h288c17.7 0 32-14.3 32-32V352h-32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst customIconIcon = {\n    name: 'custom-icon',\n    content: '<path d=\"M352 249H196.6q.9 35.7 19.8 55.2c18.9 19.5 30 18.8 52 19.4 4.9.1-1.1 28.8-12.4 28.8-30.9 0-51.6-9.7-69.3-29.1-17.8-19.4-26.7-46.8-26.7-82 0-33.3 9.7-60.4 29.1-81.4s43.5-31.4 72.4-31.4c28.8 0 51.1 9.1 66.9 27.2S352 199 352 231.1zm-36-29.9c-.1-19.8-5.1-35.2-14.7-46.2-9.7-11-23.1-16.5-40.3-16.5-16.6 0-30.7 5.8-42.4 17.3-11.6 11.6-18.8 26.7-21.5 45.3zM448 384V64c0-17.7-14.3-32-32-32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h256zm-32-32h-96v96H96V64h320z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst bookIcon = {\n    name: 'book',\n    content: '<path d=\"M448 480V96h-32v352H128c-17.6 0-32-14.4-32-32s14.4-32 32-32h256V32H128c-35.2 0-64 28.8-64 64v320c0 23.6 12.9 44.2 32 55.3 9.4 5.5 20.4 8.7 32 8.7zM128 64h224v288H128zm192 64H160V96h160zm0 128H160v-32h160zm-32-64H160v-32h128z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst imageAddIcon = {\n    name: 'image-add',\n    content: '<path d=\"M272 160c26.5 0 48 21.5 48 48s-21.5 48-48 48-48-21.5-48-48 21.5-48 48-48m80 112-16 16-64 64-128-128L32 336V96.1l.1-.1h383.8l.1.1-.1 191.9H448V96c0-17.6-14.4-32-32-32H32C14.4 64 0 78.4 0 96v320c0 17.6 14.4 32 32 32h256v-64h64zm128 144h-32v-64h-32v64h-64v32h64v64h32v-64h64v-32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst imageEditIcon = {\n    name: 'image-edit',\n    content: '<path d=\"M304 160c26.5 0 48 21.5 48 48s-21.5 48-48 48-48-21.5-48-48 21.5-48 48-48m-32.6 159.4L176 224 64 336V96.1l.1-.1h383.8l.1.1V160h32V96c0-17.6-14.4-32-32-32H64c-17.6 0-32 14.4-32 32v320c0 17.6 14.4 32 32 32h128v-47.5zm189-7.9L290.7 480H224v-66.7l168.5-169.7zm-45.3 0-22.6-22.6-135.8 135.8 22.6 22.6zM447.9 448c17.7 0 32.1-14.4 32.1-32v-78.9L369.1 448zm54.8-224L480 201.3c-12.4-12.4-32.8-12.4-45.3 0L412.2 224l67.9 67.9 22.6-22.6c12.4-12.5 12.4-32.9 0-45.3\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst imageMapEditorIcon = {\n    name: 'image-map-editor',\n    content: '<path d=\"M448 64H64c-17.6 0-32 14.4-32 32v320c0 17.6 14.4 32 32 32h384c17.6 0 32-14.4 32-32V96c0-17.6-14.4-32-32-32M96 384H64v-32h32zm96 0h-64v-32h64zm96 0h-64v-32h64zm96 0h-64v-32h64zm64 0h-32v-32h32zm-.1-48-64-64-80 80L176 224 64 336V192h32v-32H64V96.1l.1-.1H128v32h32V96h287.9l.1.1zM352 208c0 26.5-21.5 48-48 48s-48-21.5-48-48 21.5-48 48-48 48 21.5 48 48m-224-48h32v32h-32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst commentIcon = {\n    name: 'comment',\n    content: '<path d=\"M448 32H64c-17.6 0-32 14.4-32 32v416l96-96h320c17.6 0 32-14.4 32-32V64c0-17.6-14.4-32-32-32m0 319.942a1 1 0 0 1-.058.058H114.745L64 402.745V64.057a1 1 0 0 1 .057-.057h383.885q.031.027.058.057z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst commentRemoveIcon = {\n    name: 'comment-remove',\n    content: '<path d=\"M114.745 352 64 402.745V64.057a1 1 0 0 1 .057-.057h383.885q.031.027.058.057V256h32V64c0-17.6-14.4-32-32-32H64c-17.6 0-32 14.4-32 32v416l96-96h128v-32zM480 342.627 457.373 320 400 377.373 342.627 320 320 342.627 377.373 400 320 457.373 342.627 480 400 422.627 457.373 480 480 457.373 422.627 400z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst commentsRemoveIcon = {\n    name: 'comments-remove',\n    content: '<path d=\"M480 64c0-17.6-14.4-32-32-32H160c-17.6 0-32 14.4-32 32v32h32V64.1l.1-.1H448l.1.1V256l-.1.1h32zM377.4 400l22.6 22.6-57.4 57.4-22.6-22.6zm0 0L320 342.6l22.6-22.6 57.4 57.4zm45.2 0 57.4 57.4-22.6 22.6-57.4-57.4-22.6-22.6 22.6-22.6 57.4-57.4 22.6 22.6zm-304.3-16L64 420.2V160.1l.1-.1H352l.1.1V256h32v-96c0-17.6-14.4-32-32-32H64c-17.6 0-32 14.4-32 32v320l96-64h128v-32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst silverlightIcon = {\n    name: 'silverlight',\n    content: '<path d=\"M256 0 0 256l256 256 256-256zm-75.9 324c-21.6 0-40.5-6.3-52.1-13.7v-33.2c14.5 10.8 32.9 17.9 51.4 17.9 16.3 0 28.6-5 28.6-17.6 0-10.6-6.8-14.5-18.9-18.9l-23.6-7.9c-23.9-7.9-39.7-20.3-39.7-47 0-29.9 25.7-46.2 57.3-46.2 19.7 0 35.8 4.7 48.8 12.6v32.9c-13.9-10.2-29.1-16.8-47.8-16.8-14.5 0-25.5 4.9-25.5 16 0 9.9 6.5 13.9 17.9 17.6l25.2 8.6c27.1 9.2 39.4 23.9 39.4 47.8.2 31.9-26.8 47.9-61 47.9m95.9-4V160h32v128h76v32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst mediaManagerIcon = {\n    name: 'media-manager',\n    content: '<path d=\"M192 384V128l192 128zm32-319.3V0C108.2 14.4 14.4 108.2 0 224h64.7c13.5-80.3 79-145.8 159.3-159.3m64 382.6V512c115.8-14.4 209.6-108.2 224-224h-64.7c-13.5 80.3-79 145.8-159.3 159.3M64.7 288H0c14.4 115.8 108.2 209.6 224 224v-64.7c-80.3-13.5-145.8-79-159.3-159.3m382.6-64H512C497.6 108.2 403.8 14.4 288 0v64.7c80.3 13.5 145.8 79 159.3 159.3\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst videoExternalIcon = {\n    name: 'video-external',\n    content: '<path d=\"M256 0C114.6 0 0 114.6 0 256s114.6 256 256 256 256-114.6 256-256S397.4 0 256 0m-64 384V128l192 128z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst flashManagerIcon = {\n    name: 'flash-manager',\n    content: '<path d=\"M255.9 0C114.6 0 0 114.6 0 256.1 0 397.4 114.6 512 255.9 512 397.4 512 512 397.4 512 256.1 512 114.6 397.4 0 255.9 0M384 160c-30.1.3-48.4-4.6-81.2 64H352v64h-64s-53.5 129.4-160 128c-.8-14.2 0-43.9 0-64 70.5-10.7 93.6-88.3 109.9-126.9C286.3 74.5 384 95.1 384 95.1z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst binocularsIcon = {\n    name: 'binoculars',\n    content: '<path d=\"M480 288v96c0 17.7-14.3 32-32 32h-96c-17.7 0-32-14.3-32-32v-64H192v64c0 17.7-14.3 32-32 32H64c-17.7 0-32-14.3-32-32v-96c0-17.7 14.3-32 32-32v-64c0-17.7 14.3-32 32-32v-32c0-17.7 14.3-32 32-32h64s32 0 32 32v128h64V128c0-32 32-32 32-32h64c17.7 0 32 14.3 32 32v32c17.7 0 32 14.3 32 32v64c17.7 0 32 14.3 32 32M208 64h16V32h-96v32zm160 0h16V32h-96v32zM48 448H32v32h160v-32zm272 32h160v-32H320z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst copyIcon = {\n    name: 'copy',\n    content: '<path d=\"M384 96H192c-17.7 0-32 14.3-32 32v320c0 17.7 14.3 32 32 32h256c17.7 0 32-14.3 32-32V192zm64 352H192V128h160v96h96zM64 384h64v32H64c-17.7 0-32-14.3-32-32V64c0-17.7 14.3-32 32-32h192l32 32H64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst cutIcon = {\n    name: 'cut',\n    content: '<path d=\"M480 32h-45.3L256 210.7 210.7 256l-69.5 69.5c-9.1-3.6-18.9-5.5-29.2-5.5-44.2 0-80 35.8-80 80 0 10.3 2 20.2 5.5 29.2 8.1 20.7 24.6 37.1 45.3 45.3 9.1 3.6 18.9 5.5 29.2 5.5 44.2 0 80-35.8 80-80 0-10.3-2-20.2-5.5-29.2l69.5-69.5 69.5 69.5c-3.6 9.1-5.5 18.9-5.5 29.2 0 44.2 35.8 80 80 80 10.3 0 20.2-2 29.2-5.5 20.7-8.1 37.1-24.6 45.3-45.3 3.6-9.1 5.5-18.9 5.5-29.2 0-44.2-35.8-80-80-80-10.3 0-20.2 2-29.2 5.5L301.3 256 480 77.3zM160 400c0 26.5-21.5 48-48 48-.9 0-1.8 0-2.7-.1-24.4-1.3-43.9-20.9-45.3-45.3 0-.9-.1-1.8-.1-2.7 0-26.5 21.5-48 48-48 .9 0 1.8 0 2.7.1 24.4 1.3 43.9 20.9 45.3 45.3.1.9.1 1.8.1 2.7m237.3-47.9c.9 0 1.8-.1 2.7-.1 26.5 0 48 21.5 48 48 0 .9 0 1.8-.1 2.7-1.3 24.4-20.9 43.9-45.3 45.3-.9 0-1.8.1-2.7.1-26.5 0-48-21.5-48-48 0-.9 0-1.8.1-2.7 1.4-24.5 20.9-44 45.3-45.3M240 256c0-8.8 7.2-16 16-16s16 7.2 16 16-7.2 16-16 16-16-7.2-16-16m-74.5-45.3L32 77.3V32h45.3l133.5 133.5z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst clipboardIcon = {\n    name: 'clipboard',\n    content: '<path d=\"M416 32H311.4C300.3 12.9 279.7 0 256 0s-44.3 12.9-55.4 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32m-160 0c17.7 0 32 14.3 32 32h-64c0-17.7 14.3-32 32-32m160 416H96V64h64v64h192V64h64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst clipboardCodeIcon = {\n    name: 'clipboard-code',\n    content: '<path d=\"M214.6 361.4 192 384l-80-80 80-80 22.6 22.6-57.3 57.4zM448 64v384c0 17.7-14.3 32-32 32H96c-17.7 0-32-14.3-32-32V64c0-17.7 14.3-32 32-32h104.6C211.7 12.9 232.3 0 256 0s44.3 12.9 55.4 32H416c17.7 0 32 14.3 32 32m-224 0h64c0-17.7-14.3-32-32-32s-32 14.3-32 32m192 0h-64v64H160V64H96v384h320zM297.4 246.6l57.4 57.4-57.4 57.4L320 384l80-80-80-80z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst clipboardWordIcon = {\n    name: 'clipboard-word',\n    content: '<path d=\"m128 160 48.5 192h46.7L256 238.4 285.3 352h43.1L384 160h-73v35h19.3l-22.2 86-28.8-121h-45.4l-33.1 119.3-25-119.3zM416 32H311.4C300.3 12.9 279.7 0 256 0s-44.3 12.9-55.4 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32m-160 0c17.7 0 32 14.3 32 32h-64c0-17.7 14.3-32 32-32m160 416H96V64h64v64h192V64h64zm-32-32H128v-32h256z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst clipboardWordAltIcon = {\n    name: 'clipboard-word-alt',\n    content: '<path d=\"m128 160 48.5 192h46.7L256 238.4 285.3 352h43.1L384 160h-73v35h19.3l-22.2 86-28.8-121h-45.4l-33.1 119.3-25-119.3zM416 32H311.4C300.3 12.9 279.7 0 256 0s-44.3 12.9-55.4 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32m-160 0c17.7 0 32 14.3 32 32h-64c0-17.7 14.3-32 32-32m160 416H96V64h64v64h192V64h64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst clipboardHtmlIcon = {\n    name: 'clipboard-html',\n    content: '<path d=\"M214.6 361.4 192 384l-80-80 80-80 22.6 22.6-57.3 57.4zM448 64v384c0 17.7-14.3 32-32 32H96c-17.7 0-32-14.3-32-32V64c0-17.7 14.3-32 32-32h104.6C211.7 12.9 232.3 0 256 0s44.3 12.9 55.4 32H416c17.7 0 32 14.3 32 32m-224 0h64c0-17.7-14.3-32-32-32s-32 14.3-32 32m192 0h-64v64H160V64H96v384h320zM271.2 183.9 209.8 416l30.9 8.3L302.2 192zm26.2 62.7 57.4 57.4-57.4 57.4L320 384l80-80-80-80z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst clipboardMarkdownIcon = {\n    name: 'clipboard-markdown',\n    content: '<path d=\"M226 224h30v128h-32v-72.8l-32.2 45.6L160 279v73h-32V224h32l31.8 46.2zm126 64h32l-48 64-48-64h32l.2-64H352zm64-256H311.4C300.3 12.9 279.7 0 256 0s-44.3 12.9-55.4 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32m-160 0c17.7 0 32 14.3 32 32h-64c0-17.7 14.3-32 32-32m160 416H96V64h64v64h192V64h64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst clipboardTextIcon = {\n    name: 'clipboard-text',\n    content: '<path d=\"M416 32H311.4C300.3 12.9 279.7 0 256 0s-44.3 12.9-55.4 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32m-160 0c17.7 0 32 14.3 32 32h-64c0-17.7 14.3-32 32-32m160 416H96V64h64v64h192V64h64zm-32-224H128v-32h256zm0 64H128v-32h256zm0 64H128v-32h256zm0 64H128v-32h256z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst applyFormatIcon = {\n    name: 'apply-format',\n    content: '<path d=\"M380.984 313.69c12.445 12.445 12.445 32.81 0 45.255L266.529 470.658c-12.445 12.445-32.787 12.467-45.255 0L0 248.898c18.584 18.584 40.255-4.835 40.255-4.835L154.71 132.671c12.445-12.445 32.81-12.445 45.255 0zm89.682-227.101-45.255-45.255c-12.445-12.445-32.81-12.445-45.255 0l-67.882 67.882-22.627-22.627c-12.445-12.445-32.81-12.445-45.255 0l-22.627 22.627 181.019 181.019 22.627-22.627c12.445-12.445 12.445-32.81 0-45.255l-22.627-22.627 67.882-67.882c12.445-12.446 12.445-32.81 0-45.255\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst clearCssIcon = {\n    name: 'clear-css',\n    content: '<path d=\"M402.784 290.235 221.765 109.216l22.627-22.627c12.445-12.445 32.81-12.445 45.255 0l22.627 22.627 67.882-67.882c12.445-12.445 32.81-12.445 45.255 0l45.255 45.255c12.445 12.445 12.445 32.81 0 45.255l-67.882 67.882 22.627 22.627c12.445 12.445 12.445 32.81 0 45.255zm-21.8 23.455-181.02-181.019c-12.346-12.346-32.483-12.437-44.953-.287L54.627 32 32 54.627l100.074 100.074-91.819 89.362S18.585 267.482 0 248.898l221.274 221.76c12.467 12.467 32.81 12.445 45.255 0l91.851-89.651L457.373 480 480 457.373l-98.73-98.73c12.151-12.47 12.06-32.607-.286-44.953\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst copyFormatIcon = {\n    name: 'copy-format',\n    content: '<path d=\"M96 480h160v32H64v-64H0V288h32v128h32v-64h32zm32-32h96v-32h-96zm0-96v32h32v-32zm284.2-92.6L253.8 101c-12.4-12.4-32.9-12.4-45.3.1l-69.8 69.8-.2.2c-11.6 11.6-30 12.7-42.5 2.7l200.9 200.9c12.5 12.5 32.8 12.4 45.3 0l69.9-69.9c12.5-12.5 12.5-33 .1-45.4M502.7 32 480 9.3c-12.4-12.4-32.8-12.4-45.3 0l-67.9 67.9-22.6-22.6c-12.4-12.4-32.8-12.4-45.3 0l-22.6 22.6 158.4 158.4 22.6-22.6c12.4-12.4 12.4-32.8 0-45.3l-22.6-22.6 67.9-67.9c12.5-12.4 12.5-32.8.1-45.2\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst stripAllFormattingIcon = {\n    name: 'strip-all-formatting',\n    content: '<path d=\"M32 480h224v32H0v.1V256h32zm32-32h159v-32H64zm97-96H63v32h98zm-65-64H64v32h32zm316.2-28.6L253.8 101c-12.4-12.4-32.9-12.4-45.3.1l-69.8 69.8-.2.2c-11.6 11.6-30 12.7-42.5 2.7l200.9 200.9c12.5 12.5 32.8 12.4 45.3 0l69.9-69.9c12.5-12.5 12.5-33 .1-45.4M502.7 32 480 9.3c-12.4-12.4-32.8-12.4-45.3 0l-67.9 67.9-22.6-22.6c-12.4-12.4-32.8-12.4-45.3 0l-22.6 22.6 158.4 158.4 22.6-22.6c12.4-12.4 12.4-32.8 0-45.3l-22.6-22.6 67.9-67.9c12.5-12.4 12.5-32.8.1-45.2\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst stripCssFormatIcon = {\n    name: 'strip-css-format',\n    content: '<path d=\"M0 288v224h416V288zm145 65.9c-10-6.2-21-9.3-33.4-9.3-13.6 0-24.5 4.6-32.9 13.7-8.3 9.1-12.5 21.5-12.5 37.1 0 15 3.9 26.9 11.8 35.8s18.4 13.3 31.7 13.3c12.7 0 24.3-3.3 34.3-9.9v31.8c-9.9 5.5-23.7 8.2-40.7 8.2-22.2 0-39.6-7-52.3-20.9-12.7-14-19-32.5-19-55.8 0-24.7 7.1-44.8 21.4-60.2s32.8-23.1 55.6-23.1c14.1 0 26 1.9 36 5.7zM260.6 450c-3.1 5.9-7.2 10.6-12.4 14.2s-11.3 6.2-18.2 7.8q-10.5 2.4-21.9 2.4c-7.9 0-15.4-.7-22.5-2.2-7.2-1.4-13.4-3.6-18.5-6.5v-34.4c5.8 5.3 12.2 9.2 18.9 11.8q10.35 3.9 20.7 3.9c4.1 0 7.7-.4 10.7-1.2 3.1-.8 5.6-1.9 7.7-3.3 2-1.4 3.6-3.1 4.6-5s1.5-4 1.5-6.2q0-4.5-2.4-8.1t-6.6-6.6c-4.2-3-6.1-4-9.9-5.8-3.8-1.9-8-3.8-12.4-5.7-11.3-5-19.6-11.2-25.1-18.4-5.5-7.3-8.3-15.9-8.3-26.2q0-12.15 4.5-20.7c4.5-8.55 7.1-10.6 12.3-14.3s11.2-6.5 18-8.3c6.9-1.8 14.1-2.6 21.7-2.6 7.5 0 14.2.5 19.9 1.5 5.8 1 11.2 2.5 16 4.5v32.2c-2.4-1.8-5.1-3.4-7.9-4.7-2.9-1.4-5.8-2.5-8.8-3.4s-6-1.6-9-2-5.8-.6-8.5-.6c-3.7 0-7.1.4-10.1 1.1-3 .8-5.6 1.8-7.7 3.2s-3.7 3-4.8 4.9-1.7 4-1.7 6.4c0 2.6.6 4.9 1.9 7s3.1 4 5.4 5.8 5.2 3.6 8.6 5.4 7.2 3.6 11.4 5.5c5.8 2.6 11 5.3 15.5 8.3 4.6 2.9 8.6 6.2 11.8 9.9 3.3 3.7 5.8 7.9 7.6 12.6 1.7 4.7 2.6 10.2 2.6 16.3 0 8.5-1.6 15.7-4.6 21.5m119 0c-3.1 5.9-7.2 10.6-12.4 14.2s-11.3 6.2-18.2 7.8q-10.5 2.4-21.9 2.4c-7.9 0-15.4-.7-22.5-2.2-7.2-1.4-13.4-3.6-18.5-6.5v-34.4c5.8 5.3 12.2 9.2 18.9 11.8q10.35 3.9 20.7 3.9c4.1 0 7.7-.4 10.7-1.2 3.1-.8 5.6-1.9 7.7-3.3 2-1.4 3.6-3.1 4.6-5s1.5-4 1.5-6.2q0-4.5-2.4-8.1t-6.6-6.6c-4.2-3-6.1-4-9.9-5.8-3.8-1.9-8-3.8-12.4-5.7-11.3-5-19.6-11.2-25.1-18.4-5.5-7.3-8.3-15.9-8.3-26.2q0-12.15 4.5-20.7c3-5.8 7.1-10.6 12.3-14.3s11.2-6.5 18-8.3c6.9-1.8 14.1-2.6 21.7-2.6 7.5 0 14.2.5 19.9 1.5 5.8 1 11.2 2.5 16 4.5v32.2c-2.4-1.8-5.1-3.4-7.9-4.7-2.9-1.4-5.8-2.5-8.8-3.4s-6-1.6-9-2-5.8-.6-8.5-.6c-3.7 0-7.1.4-10.1 1.1-3 .8-5.6 1.8-7.7 3.2s-3.7 3-4.8 4.9-1.7 4-1.7 6.4c0 2.6.6 4.9 1.9 7s3.1 4 5.4 5.8c2.4 1.8 5.2 3.6 8.6 5.4s7.2 3.6 11.4 5.5c5.8 2.6 11 5.3 15.5 8.3 4.6 2.9 8.5 6.2 11.8 9.9s5.8 7.9 7.6 12.6c1.7 4.7 2.6 10.2 2.6 16.3 0 8.5-1.5 15.7-4.6 21.5M502.7 32 480 9.3c-12.4-12.4-32.8-12.4-45.3 0l-67.9 67.9-22.6-22.6c-12.4-12.4-32.8-12.4-45.3 0l-22.6 22.6 158.4 158.4 22.6-22.6c12.4-12.4 12.4-32.8 0-45.3l-22.6-22.6 67.9-67.9c12.5-12.4 12.5-32.8.1-45.2m-246.9 69.9c-12.4-12.4-32.8-12.4-45.3 0l-79.7 79.7c-12.4 12.4-32.8 12.4-45.3 0L160 256h249.9z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst stripFontElementsIcon = {\n    name: 'strip-font-elements',\n    content: '<path d=\"M502.666 31.961 480.039 9.334c-12.445-12.445-32.81-12.445-45.255 0l-67.882 67.882-22.627-22.627c-12.445-12.445-32.81-12.445-45.255 0l-22.627 22.627 158.392 158.392 22.627-22.627c12.445-12.445 12.445-32.81 0-45.255l-22.627-22.627 67.882-67.882c12.444-12.446 12.444-32.811-.001-45.256m-246.848 69.936c-12.445-12.445-32.81-12.445-45.255 0l-79.706 79.706c-12.445 12.445-32.81 12.445-45.255 0L160 256h249.921zM176 348.121 200.706 416h-49.412zM0 288v224h352V288zm224 192-11.647-32h-72.706L128 480H96l58.235-160h43.53L256 480z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst stripSpanElementsIcon = {\n    name: 'strip-span-elements',\n    content: '<path d=\"M96 288 0 400l96 112h256V288zm170.3 167.5c-3.9 5.9-9.3 10.6-16.1 14.2s-14.6 6.2-23.6 7.8-18.4 2.4-28.4 2.4c-10.2 0-20-.7-29.2-2.2-9.2-1.4-17.2-3.6-24-6.5v-34.5c7.5 5.2 15.7 9.2 24.6 11.8 8.8 2.6 17.8 3.9 26.8 3.9 5.3 0 9.9-.4 13.9-1.2q5.85-1.2 9.9-3.3c2.6-1.4 4.6-3.1 5.9-5s2-4 2-6.2c0-3-1-5.7-3.1-8.1s-4.9-4.6-8.5-6.6-7.9-4-12.8-5.8c-4.9-1.9-10.3-3.8-16-5.7-14.6-5-25.4-11.2-32.6-18.4-7.2-7.3-10.7-16-10.7-26.3 0-8.1 2-15 5.9-20.8s9.2-10.5 15.9-14.3c6.7-3.7 14.5-6.5 23.3-8.3s18.2-2.6 28.1-2.6q14.55 0 25.8 1.5c11.25 1.5 14.4 2.5 20.7 4.5v32.3c-3.1-1.8-6.5-3.4-10.2-4.7-3.7-1.4-7.5-2.5-11.4-3.4s-7.8-1.6-11.6-2c-3.9-.4-7.5-.6-11-.6-4.8 0-9.1.4-13 1.1-3.9.8-7.2 1.8-9.9 3.2s-4.8 3-6.2 4.9c-1.5 1.9-2.2 4-2.2 6.4 0 2.6.8 4.9 2.5 7 1.6 2.1 4 4 7 5.8q4.5 2.7 11.1 5.4 6.45 2.7 14.7 5.4c7.5 2.6 14.2 5.3 20.1 8.3q8.85 4.35 15.3 9.9c4.2 3.7 7.5 7.9 9.8 12.6s3.4 10.2 3.4 16.4c-.3 8.6-2.3 15.9-6.2 21.7M502.7 32 480 9.3c-12.4-12.4-32.8-12.4-45.3 0l-67.9 67.9-22.6-22.6c-12.4-12.4-32.8-12.4-45.3 0l-22.6 22.6 158.4 158.4 22.6-22.6c12.4-12.4 12.4-32.8 0-45.3l-22.6-22.6 67.9-67.9c12.5-12.4 12.5-32.8.1-45.2m-246.9 69.9c-12.4-12.4-32.8-12.4-45.3 0l-79.7 79.7c-12.4 12.4-32.8 12.4-45.3 0L160 256h249.9z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst stripWordFormattingIcon = {\n    name: 'strip-word-formatting',\n    content: '<path d=\"M0 288v224h352V288zm239.3 192h-37.7L176 385.4 147.4 480h-40.9L64 320h40.6l21.9 100.4L155.8 320h40.4l25.2 100.4 19.4-71.4H224v-29h64zM502.7 77.2l-67.9 67.9 22.6 22.6c12.4 12.4 12.4 32.8 0 45.3l-22.6 22.6L276.4 77.2 299 54.6c12.4-12.4 32.8-12.4 45.3 0l22.6 22.6 67.9-67.9c12.4-12.4 32.8-12.4 45.3 0L502.7 32c12.4 12.4 12.4 32.8 0 45.2M409.9 256H160l-74.4-74.4c12.4 12.4 32.8 12.4 45.3 0l79.7-79.7c12.4-12.4 32.8-12.4 45.3 0z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst formatCodeBlockIcon = {\n    name: 'format-code-block',\n    content: '<path d=\"M224 352v160h288V352zm102.6 105.4L304 480l-48-48 22.6-22.6L304 384l22.6 22.6-25.3 25.4zM432 480l-22.6-22.6 25.4-25.4-25.4-25.4L432 384l25.4 25.4L480 432zM192 160V32c0-17.6-14.4-32-32-32h-32c-17.6 0-32 14.4-32 32v128L0 256h288zm96 128H0v192h64V320h32v160h32V320h32v160h32V320h96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst buildingBlocksIcon = {\n    name: 'building-blocks',\n    content: '<path d=\"M127.9 289V128H160V80c0-8.8 7.2-16 16-16h32c8.8 0 16 7.2 16 16v48h64V80c0-8.8 7.2-16 16-16h32c8.8 0 16 7.2 16 16v48h32v160zM96 320v-48c0-8.8-7.2-16-16-16H48c-8.8 0-16 7.2-16 16v48H0v128h224V320zm384 0v-48c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H288v128h224V320z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst puzzlePieceIcon = {\n    name: 'puzzle-piece',\n    content: '<path d=\"M480 352c0 1 0 2-.1 2.9v.8c0 .8-.1 1.7-.2 2.5v.5c-.1 1-.2 1.9-.4 2.8-.1.4-.1.9-.2 1.3s-.1.8-.2 1.2-.2.7-.2 1.1l-.6 2.7c-.1.4-.2.7-.3 1.1 0 .2-.1.5-.2.7-.2.5-.4 1.1-.5 1.7-.3.9-.6 1.8-.9 2.6 0 .1-.1.2-.1.3-.3.8-.6 1.6-.9 2.3-.1.2-.2.5-.3.7-.3.8-.7 1.5-1 2.3 0 .1-.1.2-.1.2-.4.8-.8 1.6-1.3 2.4l-.6 1.2c-.2.4-.4.7-.6 1.1-.2.3-.3.6-.5.8-.5.8-1 1.5-1.5 2.3l-.6.9c-.2.4-.5.7-.7 1s-.5.6-.7.9c-.5.7-1.1 1.4-1.7 2.1l-.3.3-1.5 1.8c-.2.2-.3.4-.5.5-.6.7-1.2 1.3-1.9 2-.6.6-1.3 1.3-2 1.9-.4.3-.7.7-1.1 1-.3.3-.7.6-1 .9-.2.1-.3.3-.5.4-.7.6-1.4 1.1-2.1 1.7-.3.3-.7.5-1 .8-.3.2-.6.5-1 .7l-.9.6c-.8.5-1.5 1-2.3 1.5-.2.1-.5.3-.7.4-.4.2-.7.4-1.1.6s-.8.5-1.3.7c-.8.4-1.6.9-2.4 1.3-.1.1-.2.1-.3.2-.3.2-.7.4-1 .5-.6.2-1.2.5-1.9.8-.8.3-1.6.6-2.3.9-.1 0-.2.1-.3.1-.9.3-1.7.6-2.6.9-.6.2-1.2.3-1.7.6-.2.1-.5.1-.7.2-.4.1-.7.2-1.1.3l-2.7.6c-.3.1-.5.1-.8.2-.5.1-1.1.2-1.7.3-.4.1-.8.1-1.2.2-.9.1-1.9.3-2.8.4-.2 0-.5 0-.7.1-.4.1-.9.1-1.3.1-.6 0-1.1.1-1.7.1-1 0-2 .1-2.9.1-1.2 0-2.3 0-3.5-.1-.4 0-.7-.1-1.1-.1-.8-.1-1.6-.1-2.3-.2-.4 0-.9-.1-1.3-.2l-2.1-.3c-.4-.1-.9-.2-1.3-.2-.7-.1-1.4-.3-2-.4-.4-.1-.9-.2-1.3-.3-.7-.2-1.4-.3-2-.5l-1.2-.3c-.7-.2-1.4-.4-2.1-.7-.4-.1-.7-.2-1.1-.4-.8-.3-1.5-.6-2.3-.9-.3-.1-.5-.2-.8-.3-1-.4-1.9-.8-2.8-1.2-.1 0-.1-.1-.2-.1-3.1-1.5-6-3.2-8.8-5.1-.1 0-.1-.1-.2-.2-.8-.6-1.7-1.2-2.5-1.8-.1-.1-.2-.2-.3-.2-.8-.6-1.6-1.2-2.3-1.9-.3-.2-.6-.5-.8-.7-.5-.4-1-.8-1.4-1.3l-.5-.5c-.8-.8-1.6-1.5-2.3-2.3l-1.5-1.5c-.3-.3-.5-.6-.7-.9-.1-.2-.2-.3-.4-.5-4.9-5.7-12-8.9-19.5-8.9h-1.4c-14.3 0-25.9 11.6-25.9 25.9v70H217.9c-14.3 0-25.9-11.6-25.9-25.9v-1.4c0-7.5 3.3-14.6 8.9-19.5 15-12.5 24.2-31.6 23-52.9-1.8-32.5-28.3-58.7-60.9-60.2-36.7-1.7-67 27.6-67 63.9 0 19.6 8.8 37.1 22.6 48.8 5.9 5 9.4 12.2 9.4 19.9v1.4c0 14.3-11.6 25.9-25.9 25.9H32V192h70.1c14.3 0 25.9-11.6 25.9-25.9v-1.4c0-7.5-3.3-14.6-8.9-19.5l-.3-.3c-.7-.5-1.4-1.1-2-1.7l-.6-.6c-.8-.8-1.6-1.5-2.3-2.3l-.2-.2c-.7-.7-1.4-1.5-2.1-2.3-.1-.1-.2-.2-.2-.3-.7-.8-1.3-1.5-1.9-2.3-.1-.1-.2-.2-.2-.3-.6-.8-1.2-1.6-1.8-2.5l-.2-.2c-1.9-2.8-3.6-5.7-5.1-8.8 0-.1-.1-.1-.1-.2-.4-.9-.9-1.9-1.2-2.8-.1-.3-.2-.5-.3-.8-.3-.8-.6-1.5-.9-2.3-.1-.3-.2-.7-.4-1.1-.2-.7-.5-1.4-.7-2.1l-.3-1.2c-.2-.7-.4-1.4-.5-2-.1-.4-.2-.9-.3-1.3-.1-.7-.3-1.4-.4-2-.1-.4-.2-.9-.2-1.3l-.3-2.1c-.1-.4-.1-.9-.2-1.3-.1-.8-.1-1.6-.2-2.3 0-.4-.1-.7-.1-1.1-.1-1.2-.1-2.3-.1-3.5 0-1 0-2 .1-2.9 0-.4 0-.9.1-1.3 0-.7.1-1.4.2-2v-.4c.1-.9.2-1.9.4-2.8 0-.2.1-.4.1-.7.1-.8.3-1.6.4-2.4 0-.2.1-.4.1-.5l.6-2.7c0-.1.1-.3.1-.4.2-.7.4-1.4.6-2.2l.3-.9c.3-.9.6-1.8.9-2.6 0-.1.1-.2.1-.3.3-.8.6-1.6.9-2.3.1-.2.2-.5.3-.7.3-.8.7-1.5 1-2.3 0-.1.1-.2.1-.3.4-.8.8-1.6 1.3-2.4l.3-.6c.4-.7.7-1.3 1.1-1.9.1-.2.2-.3.3-.5.5-.8 1-1.5 1.5-2.3.1-.1.2-.3.3-.4.4-.6.9-1.2 1.3-1.8.1-.2.3-.4.4-.6.5-.7 1.1-1.4 1.7-2.1l.3-.3 1.5-1.8c.2-.2.3-.4.5-.5.6-.7 1.2-1.3 1.9-2 .6-.6 1.3-1.3 2-1.9.2-.2.4-.3.5-.5l1.8-1.5.3-.3c.7-.6 1.4-1.1 2.1-1.7.2-.1.3-.3.5-.4.6-.5 1.3-.9 1.9-1.3.2-.1.3-.2.5-.3.8-.5 1.5-1 2.3-1.5.1-.1.3-.2.4-.2.6-.4 1.3-.8 1.9-1.1.2-.1.5-.3.7-.4.8-.4 1.6-.9 2.4-1.3.1 0 .2-.1.2-.1.8-.4 1.5-.7 2.3-1 .2-.1.5-.2.7-.3.8-.3 1.5-.6 2.3-.9.1 0 .2-.1.3-.1.9-.3 1.7-.6 2.6-.9.3-.1.6-.2.8-.3.7-.2 1.4-.4 2.2-.6.2 0 .3-.1.5-.1l2.7-.6c.2 0 .4-.1.6-.1.8-.2 1.6-.3 2.3-.4.2 0 .5-.1.7-.1.9-.1 1.9-.3 2.8-.4.2 0 .4 0 .5-.1.8-.1 1.6-.1 2.5-.2h.7c1 0 1.9-.1 2.9-.1s2 0 3 .1h.7c.9.1 1.8.1 2.7.2h.2c30 3.1 53.9 26.9 57.1 57 0 .3.1.7.1 1 .1.7.1 1.4.2 2.1 0 .5 0 .9.1 1.4v5c0 .5-.1 1-.1 1.4 0 .6-.1 1.2-.1 1.7s-.1 1-.2 1.5c-.1.6-.1 1.1-.2 1.7-.1.5-.1 1-.2 1.5s-.2 1.1-.3 1.6l-.3 1.5c-.1.5-.2 1-.4 1.5-.1.5-.2 1-.4 1.5-.1.5-.3.9-.4 1.4-.2.5-.3 1-.5 1.5-.1.4-.3.9-.4 1.3-.2.5-.4 1.1-.6 1.6-.1.4-.3.8-.5 1.2-.2.6-.4 1.1-.7 1.7-.1.3-.3.7-.4 1-.3.6-.5 1.2-.8 1.8-.1.2-.2.5-.4.7-.3.7-.7 1.3-1 2 0 .1-.1.2-.1.2-3.8 6.7-8.7 12.7-14.5 17.7h-.1c-5.8 5-9.4 12.2-9.4 19.9v1.4c0 14.3 11.6 25.9 25.9 25.9H320v116.7c0 6.3 5.1 11.3 11.3 11.3H357c5.2 0 9.1-4.1 10-9.2 0-.1.1-.1.1-.2 5-5.8 10.9-10.8 17.7-14.5.1 0 .2-.1.2-.1.7-.4 1.3-.7 2-1 .2-.1.5-.2.7-.4.6-.3 1.2-.6 1.8-.8.3-.1.7-.3 1-.4.6-.2 1.1-.5 1.7-.7.4-.2.8-.3 1.2-.5.5-.2 1.1-.4 1.6-.6.4-.2.9-.3 1.3-.4.5-.2 1-.3 1.5-.5.5-.1.9-.3 1.4-.4s1-.3 1.5-.4 1-.2 1.5-.4l1.5-.3c.5-.1 1.1-.2 1.6-.3s1-.2 1.5-.2c.6-.1 1.1-.1 1.7-.2.5-.1 1-.1 1.5-.2.6-.1 1.1-.1 1.7-.1.5 0 1-.1 1.4-.1h5c.5 0 .9 0 1.4.1.7 0 1.4.1 2.1.2.3 0 .7.1 1 .1 30 3.1 53.9 27 57 57.1v.2c.1.9.2 1.8.2 2.7v.7c.2.4.2 1.4.2 2.4\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst linkAddIcon = {\n    name: 'link-add',\n    content: '<path d=\"M448 416v-64h-32v64h-64v32h64v64h32v-64h64v-32zM96 256c0-17.7 14.3-32 32-32h256c17.7 0 32 14.3 32 32s-14.3 32-32 32H128c-17.7 0-32-14.3-32-32m-32 0c0 35.4 28.6 64 64 64h110.8c-22.1 38.2-63.5 64-110.8 64C57.3 384 0 326.7 0 256s57.3-128 128-128c47.4 0 88.7 25.8 110.8 64H128c-35.4 0-64 28.6-64 64m416 84.7c19.9-22.6 32-52.2 32-84.7 0-70.7-57.3-128-128-128-47.3 0-88.7 25.8-110.8 64H384c35.3 0 64 28.6 64 64s-28.6 64-64 64h96zM384 320H273.2c22.1 38.2 63.4 64 110.8 64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst globeLinkIcon = {\n    name: 'globe-link',\n    content: '<path d=\"M161.7 412.6C69.1 391.2 0 308.1 0 209 0 93.6 93.6 0 209 0s209 93.6 209 209c0 58.2-23.8 110.8-62.2 148.7-20.5-23.1-50.4-37.7-83.8-37.7-3.9 0-7.8.2-11.6.6 12-15.9 26.4-28.8 41.3-33 22.6-18.6 21.6-35.2 18.6-50.2-7-12.6-38.7-23.6-68.8-49.7-18.1-4-40.2 7.5-48.7-3.5-8.5-11.1-48.7-27.1-31.1-44.7s44.2.5 54.8-35.7C236.9 67.6 259 82.6 270 82.6c11.1 0 13.1-26.1-7.5-35.7-20.6-9.5-49.7-19.6-100.5-14.6-50.7 5-86.4 27.6-75.4 47.7 11.1 20.1 44.2 83.9 81.4 94.5s35.7 20.2 41.7 27.1c6 7-11.3 22.2 5.1 50.8 8.9 12 17 5 21 25.1 1.9 9.4-2.7 30.3-6.4 50.8-34.9 14.4-61 46-67.7 84.3M224 432c0-5.1.8-10.1 2.3-14.7C232.5 398 250.6 384 272 384h64c-1.5-1.9-3-3.8-4.6-5.6-14.6-16.2-35.8-26.4-59.4-26.4-12.2 0-23.8 2.7-34.1 7.6-4.4 2.1-8.6 4.6-12.5 7.4-16.4 11.8-28.2 29.7-32 50.4-.9 4.7-1.4 9.6-1.4 14.6 0 44.2 35.8 80 80 80 26.2 0 49.4-12.6 64-32h-64c-26.5 0-48-21.5-48-48m208-80c-26.2 0-49.4 12.6-64 32h64c26.5 0 48 21.5 48 48s-21.5 48-48 48h-64c14.6 19.4 37.8 32 64 32 44.2 0 80-35.8 80-80s-35.8-80-80-80m0 64H272c-8.8 0-16 7.2-16 16s7.2 16 16 16h160c8.8 0 16-7.2 16-16s-7.2-16-16-16\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst globeUnlinkIcon = {\n    name: 'globe-unlink',\n    content: '<path d=\"M161.7 412.6C69.1 391.2 0 308.1 0 209 0 93.6 93.6 0 209 0s209 93.6 209 209c0 58.2-23.8 110.8-62.2 148.7-20.5-23.1-50.4-37.7-83.8-37.7-3.9 0-7.8.2-11.6.6 12-15.9 26.4-28.8 41.3-33 22.6-18.6 21.6-35.2 18.6-50.2-7-12.6-38.7-23.6-68.8-49.7-18.1-4-40.2 7.5-48.7-3.5-8.5-11.1-48.7-27.1-31.1-44.7s44.2.5 54.8-35.7C236.9 67.6 259 82.6 270 82.6s13.1-26.1-7.5-35.7c-20.6-9.5-49.7-19.6-100.5-14.6-50.7 5-86.4 27.6-75.4 47.7 11.1 20.1 44.2 83.9 81.4 94.5s35.7 20.2 41.7 27.1c6 7-11.3 22.2 5.1 50.8 8.9 12 17 5 21 25.1 1.9 9.4-2.7 30.3-6.4 50.8-34.9 14.4-61 46-67.7 84.3M224 432c0-5.1.8-10.1 2.3-14.7C232.5 398 250.6 384 272 384h64c-1.5-1.9-3-3.8-4.6-5.6-14.6-16.2-35.8-26.4-59.4-26.4-12.2 0-23.8 2.7-34.1 7.6-4.4 2.1-8.6 4.6-12.5 7.4-16.4 11.8-28.2 29.7-32 50.4-.9 4.7-1.4 9.6-1.4 14.6 0 44.2 35.8 80 80 80 26.2 0 49.4-12.6 64-32h-64c-26.5 0-48-21.5-48-48m208-80c-26.2 0-49.4 12.6-64 32h64c26.5 0 48 21.5 48 48s-21.5 48-48 48h-64c14.6 19.4 37.8 32 64 32 44.2 0 80-35.8 80-80s-35.8-80-80-80\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst envelopLinkIcon = {\n    name: 'envelop-link',\n    content: '<path d=\"M224 432c0-5.1.8-10.1 2.3-14.7C232.5 398 250.6 384 272 384h64c-1.5-1.9-3-3.8-4.6-5.6-14.6-16.2-35.8-26.4-59.4-26.4-12.2 0-23.8 2.7-34.1 7.6-4.4 2.1-8.6 4.6-12.5 7.4-16.4 11.8-28.2 29.7-32 50.4-.9 4.7-1.4 9.6-1.4 14.6 0 44.2 35.8 80 80 80 26.2 0 49.4-12.6 64-32h-64c-26.5 0-48-21.5-48-48m208-80c-26.2 0-49.4 12.6-64 32h64c26.5 0 48 21.5 48 48s-21.5 48-48 48h-64c14.6 19.4 37.8 32 64 32 44.2 0 80-35.8 80-80s-35.8-80-80-80m0 64H272c-8.8 0-16 7.2-16 16s7.2 16 16 16h160c8.8 0 16-7.2 16-16s-7.2-16-16-16M32 0C14.3 0 0 14.3 0 32v256c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32zm23.7 32L224 200.3 392.3 32c11 2.9 19.7 11.6 22.6 22.6L310.6 158.9l104.3 104.3c-2.9 11-11.6 19.7-22.6 22.6L288 181.5l-64 64-64-64L55.7 285.8c-11-2.9-19.7-11.6-22.6-22.6l104.3-104.3L33.1 54.6C36 43.6 44.7 34.9 55.7 32\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst anchorIcon = {\n    name: 'anchor',\n    content: '<path d=\"m352 288 44.5 44.5c-22.3 40.7-61.7 70.7-108.5 80.3V151.4c19.1-11.1 32-31.8 32-55.4 0-35.3-28.7-64-64-64s-64 28.7-64 64c0 23.6 12.9 44.3 32 55.4v261.4c-46.8-9.5-86.2-39.6-108.5-80.3L160 288H32v128l36.9-36.9C108.9 439.9 177.8 480 256 480s147.1-40.1 187.1-100.9L480 416V288zM256 64c17.6 0 32 14.4 32 32s-14.4 32-32 32-32-14.4-32-32 14.4-32 32-32\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tableAddIcon = {\n    name: 'table-add',\n    content: '<path d=\"M448 320V32H32v416h288V320zm-288 96H64v-96h96zm0-128H64v-96h96zm0-128H64V64h96zm128 256h-96v-96h96zm0-128h-96v-96h96zm0-128h-96V64h96zm32-96h96v96h-96zm0 224v-96h96v96zm192 128v32h-64v64h-32v-64h-64v-32h64v-64h32v64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tableIcon = {\n    name: 'table',\n    content: '<path d=\"M32 32v416h416V32zm256 32v96h-96V64zm0 128v96h-96v-96zM64 64h96v96H64zm0 128h96v96H64zm0 224v-96h96v96zm128 0v-96h96v96zm224 0h-96v-96h96zm0-128h-96v-96h96zm0-128h-96V64h96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tablePropertiesIcon = {\n    name: 'table-properties',\n    content: '<path d=\"m502.666 77.216-22.627 22.627-67.882-67.882 22.627-22.627c12.445-12.445 32.81-12.445 45.255 0l22.627 22.627c12.445 12.445 12.445 32.81 0 45.255M392.483 51.635l67.882 67.882L290.66 288H224v-66.66zm22.627 67.882L392.483 96.89 256.719 232.654l22.627 22.627zM384 256l32-32v288H0V96h288l-32 32h-96v224h224zM128 384H32v96h96zm0-128H32v96h96zm0-128H32v96h96zm128 256h-96v96h96zm128 0h-96v96h96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tableCellIcon = {\n    name: 'table-cell',\n    content: '<path d=\"M32 32v416h416V32zm128 384H64v-96h96zm0-128H64v-96h96zm0-128H64V64h96zm128 256h-96v-96h96zm0-256h-96V64h96zm128 256h-96v-96h96zm0-128h-96v-96h96zm0-128h-96V64h96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tableCellPropertiesIcon = {\n    name: 'table-cell-properties',\n    content: '<path d=\"m502.666 77.216-22.627 22.627-67.882-67.882 22.627-22.627c12.445-12.445 32.81-12.445 45.255 0l22.627 22.627c12.445 12.445 12.445 32.81 0 45.255M384 256l32-32v288H0V96h288l-32 32h-96v96h32v96h96v32h96zM128 384H32v96h96zm0-128H32v96h96zm0-128H32v96h96zm128 256h-96v96h96zm128 0h-96v96h96zm8.483-332.365 67.882 67.882-141.588 141.588L290.66 288H224v-66.66l26.895-28.118zm22.627 67.882L392.483 96.89 256.719 232.654l11.314 11.314 11.314 11.314z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tableColumnInsertLeftIcon = {\n    name: 'table-column-insert-left',\n    content: '<path d=\"M32 480V0h128v480zM480 32v416H192V32zM224 160h96V64h-96zm0 128h96v-96h-96zm0 128h96v-96h-96zm224-96h-96v96h96zm0-32v-96h-96v96zm0-224h-96v96h96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tableColumnInsertRightIcon = {\n    name: 'table-column-insert-right',\n    content: '<path d=\"M352 480V0h128v480zM320 32v416H32V32zm-32 32h-96v96h96zm0 128h-96v96h96zm0 128h-96v96h96zM64 416h96v-96H64zm96-128v-96H64v96zM64 160h96V64H64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tableRowInsertAboveIcon = {\n    name: 'table-row-insert-above',\n    content: '<path d=\"M480 160H0V32h480zM32 192h416v288H32zm32 32v96h96v-96zm128 0v96h96v-96zm128 0v96h96v-96zm96 224v-96h-96v96zm-128-96h-96v96h96zm-128 96v-96H64v96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tableRowInsertBelowIcon = {\n    name: 'table-row-insert-below',\n    content: '<path d=\"M480 480H0V352h480zM32 32h416v288H32zm128 256v-96H64v96zm128 0v-96h-96v96zm128 0v-96h-96v96zM320 64v96h96V64zm-32 0h-96v96h96zM64 64v96h96V64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tableColumnDeleteIcon = {\n    name: 'table-column-delete',\n    content: '<path d=\"M192 288v224h128V288zm0-288v64h128V0zm160 32h128v416H352zm96 288h-64v96h64zm0-128h-64v96h64zm0-128h-64v96h64zM32 32h128v416H32zm96 288H64v96h64zm0-128H64v96h64zm0-128H64v96h64zm128 89.373L313.373 96 336 118.627 278.627 176 336 233.373 313.373 256 256 198.627 198.627 256 176 233.373 233.373 176 176 118.627 198.627 96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tableRowDeleteIcon = {\n    name: 'table-row-delete',\n    content: '<path d=\"M224 192H0v128h224zm288 0h-64v128h64zm-32 160v128H64V352zm-288 96v-64H96v64zm128 0v-64h-96v64zm128 0v-64h-96v64zm32-416v128H64V32zm-288 96V64H96v64zm128 0V64h-96v64zm128 0V64h-96v64zm-89.373 128L416 313.373 393.373 336 336 278.627 278.627 336 256 313.373 313.373 256 256 198.627 278.627 176 336 233.373 393.373 176 416 198.627z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tableCellDeleteIcon = {\n    name: 'table-cell-delete',\n    content: '<path d=\"M96 192h160v128H96zM32 352h160v128H32zm32 32v64h96v-64zm128-224H32V32h160zm-32-96H64v64h96zm262.627 192L480 313.373 457.373 336 400 278.627 342.627 336 320 313.373 377.373 256 320 198.627 342.627 176 400 233.373 457.373 176 480 198.627z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tableDeleteIcon = {\n    name: 'table-delete',\n    content: '<path d=\"M32 32v416h416V32zm384 128h-64v32h64v96h-64v32h64v96h-96v-64h-32v64h-96v-64h-32v64H64v-96h64v-32H64v-96h64v-32H64V64h96v64h32V64h96v64h32V64h96zm-153.4 80 57.4 57.4-22.6 22.6-57.4-57.4-57.4 57.4-22.6-22.6 57.4-57.4-57.4-57.4 22.6-22.6 57.4 57.4 57.4-57.4 22.6 22.6z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst cellsMergeIcon = {\n    name: 'cells-merge',\n    content: '<path d=\"M32 32v448h416V32zm160 32h96v64h-96zM64 64h96v64H64zm96 384H64v-64h96zm128 0h-96v-64h96zm128 0h-96v-64h96zm0-96H64V160h352zm0-224h-96V64h96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst cellsMergeHorizontallyIcon = {\n    name: 'cells-merge-horizontally',\n    content: '<path d=\"M32 32v416h416V32zm160 32h96v96h-96zM64 64h96v96H64zm96 352H64v-96h96zm128 0h-96v-96h96zm128 0h-96v-96h96zm0-128H64v-96h352zm0-128h-96V64h96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst cellsMergeVerticallyIcon = {\n    name: 'cells-merge-vertically',\n    content: '<path d=\"M32 448h416V32H32zm32-160v-96h96v96zm0 128v-96h96v96zm352-96v96h-96v-96zm0-128v96h-96v-96zm0-128v96h-96V64zm-128 0v352h-96V64zm-128 0v96H64V64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst cellSplitHorizontallyIcon = {\n    name: 'cell-split-horizontally',\n    content: '<path d=\"M32 32v416h416V32zm32 32h160v64H64zm160 160h-64v-64h64zM64 160h64v64H64zm0 96h160v64H64zm0 160v-64h160v64zm192-256h64v64h-64zm160 256H256v-64h160zm0-96H256v-64h160zm0-96h-64v-64h64zm0-96H256V64h160z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst cellSplitVerticallyIcon = {\n    name: 'cell-split-vertically',\n    content: '<path d=\"M32 448h416V32H32zm32-32V256h64v160zm160-160v64h-64v-64zm-64 160v-64h64v64zm96 0V256h64v160zm160 0h-64V256h64zM160 224v-64h64v64zM416 64v160h-64V64zm-96 0v160h-64V64zm-96 0v64h-64V64zm-96 0v160H64V64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tableUnmergeIcon = {\n    name: 'table-unmerge',\n    content: '<path d=\"M32 32v416h416V32zm160 32h96v96h-96zm96 128v96h-96v-96zM64 64h96v96H64zm0 128h96v96H64zm96 224H64v-96h96zm128 0h-96v-96h96zm128 0h-96v-96h96zm0-128h-96v-96h96zm0-128h-96V64h96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst paneFreezeIcon = {\n    name: 'pane-freeze',\n    content: '<path d=\"M32 32v416h416V32zm256 32 96 96h-64l-96-96zm-128 0 96 96h-64L96 64zM64 96l96 96v64l-96-96zm0 128 96 96v64l-96-96zm0 192v-64l64 64zm224 0h-96v-96h96zm0-128h-96v-96h96zm128 128h-96v-96h96zm0-128h-96v-96h96zM352 64h64v64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst rowFreezeIcon = {\n    name: 'row-freeze',\n    content: '<path d=\"M32 448h416V32H32zM64 96l64 64H64zm96-32 96 96h-64L96 64zm128 0 96 96h-64l-96-96zm128 64-64-64h64zm-96 160v-96h96v96zm-128 0v-96h96v96zm-32 0H64v-96h96zm160 128v-96h96v96zm-128 0v-96h96v96zm-128 0v-96h96v96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst columnFreezeIcon = {\n    name: 'column-freeze',\n    content: '<path d=\"M32 32v416h416V32zm128 32v64L96 64zM64 96l96 96v64l-96-96zm0 128 96 96v64l-96-96zm0 192v-64l64 64zm224 0h-96v-96h96zm0-128h-96v-96h96zm-96-128V64h96v96zm224 256h-96v-96h96zm0-128h-96v-96h96zm0-128h-96V64h96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst toolbarFloatIcon = {\n    name: 'toolbar-float',\n    content: '<path d=\"M64 352h416v128H64zm96 32H96v64h96v-64zm160 0h-96v64h96zm32 0v64h96v-64zM63.961 131.844l90.51 90.51 45.255-45.255-90.51-90.51zm0 0 90.51 90.51 45.255-45.255-90.51-90.51zm158.392 67.882 67.882-67.882-22.627-22.627-22.627 22.627-90.51-90.51c-12.445-12.445-32.81-12.445-45.255 0l-67.882 67.882c-12.445 12.445-12.445 32.81 0 45.255l90.51 90.51-22.627 22.627 22.627 22.627 67.882-67.882L297.373 320 320 297.373zm-67.882 22.627-90.51-90.51 45.255-45.255 90.51 90.51zM480 256h-64v64h64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst spellCheckerIcon = {\n    name: 'spell-checker',\n    content: '<path d=\"M113.2 206.2q-11.1 9.3-24.6 13.5c-13.5 4.2-19.3 4.2-31 4.2-8.4 0-16.1-1-23.1-2.9s-13.1-4.9-18.2-8.8-9.1-8.8-12-14.6C1.4 192 0 185.2 0 177.5c0-18.9 8.1-32.9 24.4-41.9s40.9-13.5 74-13.5h13.7c0-2.6 0-5.3-.1-8.2s-.3-5.4-.7-7.6c-.8-7.6-3.5-13.2-8-17-4.5-3.7-11.8-5.6-21.7-5.6-10.4 0-18.1 1.9-23.3 5.8s-7.8 9.5-7.8 16.8H7c2.4-32.7 27.8-49 76.3-49 6.6 0 12.6.2 17.9.6s10.2 1.1 14.6 2c4.4 1 8.6 2.2 12.5 3.7s7.6 3.4 11.4 5.7c3.5 2.2 6.4 4.7 9 7.4 2.5 2.8 4.6 6.1 6.4 9.9 1.7 3.9 3 8.3 3.8 13.3s1.2 10.8 1.2 17.4V224h-46.8zm-1-58H96.8c-16.2 0-28.4 2-36.5 5.9s-12.2 10.6-12.2 20.2q0 10.95 7.5 16.2c7.5 5.25 11.5 5.2 19.4 5.2 7.6 0 14.6-1.5 21.2-4.5s11.9-6.9 15.8-11.7v-31.3zm125.2-61.6c5.5-7.2 12.3-12.8 20.2-16.7S274 64 283.1 64c10.2 0 19.2 1.9 26.8 5.7 7.7 3.8 14.1 9.2 19.3 16.3s9.1 15.7 11.7 25.9 4 21.6 4 34.3-1.2 19-4.3 29.4c-3 10.4-7.6 17.9-13.3 25.2q-8.55 10.95-20.7 17.1c-12.15 6.15-17.3 6.1-27.5 6.1-17.5 0-31.9-5.2-43.3-15.6V224H192V0h45.4zm0 91.7c4.4 4.1 9.1 7.2 14.1 9.4 5 2.1 10.5 3.2 16.5 3.2 9.8 0 17.4-4.3 22.7-12.8 5.3-8.6 7.9-14.7 7.9-31.8 0-32.7-9.6-49-28.7-49-6.2 0-12 1.9-17.4 5.6s-10.5 9-15.1 15.8zM442.2 224c-12.4 0-23.4-1.8-33.3-5.4-9.8-3.6-18.1-8.8-25-15.6-6.8-6.8-12-15.2-15.7-25.1s-5.5-21.3-5.5-34 1.8-24 5.5-33.9 8.9-18.2 15.9-25.1q10.35-10.35 25.2-15.6 14.85-5.4 33.6-5.4 30 0 48 14.1c18 14.1 19 23 21 40.9h-41c-1-7-3.9-12.7-8.8-16.9s-11.2-6.3-19.2-6.3c-10.2 0-18.4 3.9-24.5 11.6s-9.2 19.9-9.2 36.6c0 16.5 3.1 28.7 9.2 36.5s14.3 11.7 24.5 11.7c7.9 0 14.4-2.1 19.3-6.3s7.8-9.8 8.7-16.9h41c-2.5 17.7-9.7 31.2-21.5 40.7-11.6 9.6-27.7 14.4-48.2 14.4m69.8 0L224 512 64 352l64-64 96 96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst validationXhtmlIcon = {\n    name: 'validation-xhtml',\n    content: '<path d=\"M192 224h-54l-26.2-96L86 224H32L0 64h42l22 96 22-96h52l22 96 22-96h42zm272.5-121.8c4.7 4.2 7.4 9.8 8.5 16.8h38.9c-2-17.9-8.6-31.3-19.9-40.8-11.5-9.3-26.5-14-45.6-14-11.9 0-22.5 1.7-32 5.3-9.4 3.6-17.4 8.9-23.9 15.7-6.7 6.9-11.6 15.2-15.1 25-3.5 10-5.3 21.2-5.3 33.8 0 12.8 1.8 24 5.3 33.8 3.5 10 8.3 18.4 14.8 25.1s14.5 11.8 23.8 15.4c9.4 3.6 20 5.4 31.6 5.4 19.4 0 34.7-4.8 45.9-14.3q16.8-14.25 20.4-40.5H473c-.9 7-3.7 12.6-8.3 16.8-4.7 4.3-10.7 6.3-18.3 6.3-9.8 0-17.5-3.9-23.5-11.7-5.8-7.8-8.6-19.9-8.6-36.3 0-16.7 2.8-28.7 8.6-36.5 5.9-7.8 13.6-11.5 23.5-11.5 7.5 0 13.6 2 18.1 6.2M316.7 219.8c7.3-2.3 13.6-5.8 18.9-10.2l.1-.1c5.2-4.6 9.1-9.9 11.8-16.1 2.8-6 4.2-12.7 4.2-20.7 0-10-2.7-18.4-8-25.3q-5.25-6.6-13.2-10.5c.3-.3.7-.5 1-.8 3.1-2.4 5.5-5 7.6-8.1 2-3 3.5-6.2 4.5-9.4 1-3.5 1.5-6.9 1.5-10.4 0-6.6-1.3-12.6-3.9-18.1-2.6-5.4-6.4-10.3-11.4-14.2-4.8-4.2-10.5-7.2-17-9.1-6.3-1.8-13.7-2.8-22.1-2.8-7.4 0-14.3 1-20.8 3.1-6.3 2.1-11.7 5.2-16.9 9.3-5 4.1-9 9.2-11.9 15.1-3 5.9-4.9 12.7-5.6 20.3l-.5 5.1h38.2l.5-4.4c1.6-14.6 9.9-16.5 16.9-16.5 4.8 0 8.3 1.1 10.7 3.3l.1.1c2.7 2.5 3.3 7.1 3.3 10.4 0 5.6-1.2 9.4-3.8 11.4l-.1.1c-2.8 2.4-7.2 3.5-13.4 3.5H276v31h13.7c7.4 0 12.8 1.4 16.3 4 3.3 2.7 4.9 6.5 4.9 12.2 0 2.9-.5 5.6-1.4 8-.9 2.3-2.1 4.1-3.9 5.9-1.4 1.5-3.4 2.7-5.9 3.6-2.4.9-5.2 1.4-8.4 1.4-3.4 0-6.3-.4-9-1.3-2.2-.8-4.1-2-5.7-3.5-1.6-1.6-2.8-3.3-3.7-5.2-.8-1.9-1.2-4.1-1.5-6.7l-.4-4.2h-39.1l.3 5c.5 7.4 2.3 14.5 5.3 21 3.1 6.1 7.8 11.8 14.2 16.6 4.9 3.8 10.8 6.6 17.8 8.4h.4c6.4 1.5 13.8 2.3 22.1 2.3 9.5 0 17.5-1.2 24.7-3.5M64 352l64-64 96 96 288-160-288 288z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst validationDataIcon = {\n    name: 'validation-data',\n    content: '<path d=\"m64 352 64-64 96 96 288-160-288 288zm48.6-193.6c0 13-2.5 24.4-7.6 34.4s-12.3 17.7-21.8 23.1Q69.1 224 50.5 224H0V96h49.5c42.1 0 63.1 20.8 63.1 62.4m-38 .3c0-6.3-1.2-12-3.5-17-2.4-5-5.7-8.9-10.1-11.7-4.4-2.7-9.6-4.1-15.6-4.1H36v68h10.1c8.6 0 15.6-3.2 20.7-9.5 5.2-6.4 7.8-14.9 7.8-25.7M216.2 224l-5.5-24h-37.2l-5.9 24H128l42.3-128h45.9L256 224zm-23.6-100h-.9c-.1 1.4-.5 3.8-1.2 7.1s-4.1 17.2-10.4 41.9h23.4l-8.6-34.7c-1.1-5-1.9-9.8-2.3-14.3m127.4 4v96h-32v-96h-32V96h98v32zm120.2 96-5.5-24h-37.2l-5.9 24H352l42.3-128h45.9L480 224zm-23.6-100h-.9c-.1 1.4-.5 3.8-1.2 7.1s-4.1 17.2-10.4 41.9h23.4l-8.6-34.7c-1.1-5-1.9-9.8-2.3-14.3\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst toggleFullScreenModeIcon = {\n    name: 'toggle-full-screen-mode',\n    content: '<path d=\"M448 32H64c-17.6 0-32 14.4-32 32v288c0 17.6 14.4 32 32 32h384c17.6 0 32-14.4 32-32V64c0-17.6-14.4-32-32-32m0 319.942a1 1 0 0 1-.058.058H64.058a.5.5 0 0 1-.058-.058V64.057a1 1 0 0 1 .057-.057h383.885q.031.027.058.057zM384 480H128c35.346 0 64-28.654 64-64h128c0 35.346 28.654 64 64 64m32-160H96c58.263-113.973 183.21-192 320-192z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst formulaFxIcon = {\n    name: 'formula-fx',\n    content: '<path d=\"m214 183.4-24.7 110c-11.5 53.4-22.7 92.1-33.7 116.1s-23.8 41.8-38.4 53.2C102.5 474.3 85.7 480 66.7 480c-12 0-20.7-2.7-26.3-8S32 460.5 32 453.3c0-6.7 2.3-12.5 7-17.4s10.8-7.3 18.3-7.3c6.3 0 11.2 1.9 14.5 5.6 3.4 3.7 5.1 8.5 5.1 14.2 0 5.2-1 9.1-3.2 11.6-2.1 2.5-3.2 4.2-3.2 5l1 1.7q1.2 1.2 3 1.2c4.2 0 7.8-1.5 10.8-4.7 7.4-7.7 13-17 16.6-27.9 2.5-7.5 7.4-27.4 14.5-59.5l43-192.6h-29.3l7-28.7c10.5.2 18.2-1.4 23-4.7s9.8-10.6 15.2-22c15.4-33.1 31.7-60.1 48.9-74.4S260.4 32 281.5 32c13.5 0 23.3 3 29.4 9.1s9.2 13.9 9.2 23.5c0 8.5-2 15.2-6.1 20.2-4.1 5.1-9.2 7.5-15.2 7.5-5.6 0-10.3-2-13.9-6.1s-5.5-9-5.5-14.7c0-4.1 1.1-8.4 3.5-13 2.3-4.6 3.5-7.7 3.5-9.3 0-1.8-.5-3.3-1.6-4.4-1-1.1-2.4-1.7-4.1-1.7-8.3 0-16.8 5.9-25.5 17.9-14.3 19.1-25.9 52.5-34.5 93.8h30.5l-7.4 28.7zm78.7 22.7 68.9-14.1c12.5 23.3 21.3 48.9 26.5 76.9 12.9-22.7 22.7-38.6 29.3-47.6 8.8-12.2 16.1-20.1 21.8-23.8 5.8-3.7 11.9-5.5 18.3-5.5 7.2 0 12.8 2.4 16.7 7 3.9 4.7 5.8 11 5.8 19 0 7.5-2 13.6-5.8 18.4-3.9 4.7-8.7 7.1-14.5 7.1-4.2 0-9-.9-14.5-2.7-5.4-1.8-9.3-2.7-11.3-2.7-5.6 0-10.8 2.4-15.8 7-6.8 6.4-15.2 20.1-25.3 41 11.2 46.9 20.1 75.5 26.9 85.8 3.9 6.1 7.9 9.2 12.1 9.2 3.4 0 6.4-1 8.9-3 3.8-3.3 9.7-11.5 17.6-24.6l7.1 4.9c-11.6 22.2-22.9 37.9-34 46.9-8.4 7-16.7 10.6-24.9 10.6-8.4 0-15.4-2.3-21-6.7-5.6-4.5-10.6-11.7-14.9-21.8-4.4-10-9.5-26.2-15.4-48.4q-23.1 34.95-36.3 51c-8.7 10.7-16 17.7-21.8 21s-12 4.9-18.6 4.9c-6.8 0-12.3-2.4-16.3-7q-6-7.05-6-18.3c0-7.9 2.2-14.5 6.5-19.6 4.3-5.2 9.9-7.7 16.6-7.7 3.6 0 7.6 1.3 12.1 3.7 6.6 3.8 11.3 5.7 14.2 5.7 3.8 0 7.2-.9 10.3-2.8 3.9-2.4 9-7.4 15-15.3 3.7-4.8 10.5-15.1 20.4-31-12.6-55.8-22.5-89.1-29.6-100-4.5-7-10.2-10.6-17-10.6-3.6 0-7.9.6-13 1.9z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst sumIcon = {\n    name: 'sum',\n    content: '<path d=\"M416 64v128l-64-64H160l128 128-128 128h192l64-64v128H96v-64l128-128L96 128V64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst symbolIcon = {\n    name: 'symbol',\n    content: '<path d=\"m448 416 32-32v96H320V375.8c11.4-5.1 22.2-11.5 32-19 38.9-29.7 64-76.9 64-130.1C416 136.8 344.4 64 256 64S96 136.8 96 226.7c0 53.2 25.1 100.5 64 130.1 9.8 7.5 20.6 13.9 32 19V480H32v-96l32 32h96v-18.5C84.3 366.7 32 300.6 32 224 32 118 132.3 32 256 32s224 86 224 192c0 76.6-52.3 142.7-128 173.5V416z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst dollarIcon = {\n    name: 'dollar',\n    content: '<path d=\"M326.6 273c-8.3-7.3-18.4-13.6-30.4-19.1-11.8-5.4-25.2-10.2-40.2-14.5V131.3c6.5.8 13 2.2 17.7 4.2 7.5 3.3 13.7 7.8 18.8 13.7q7.65 8.7 11.4 20.7c2.6 8 3.8 16.7 3.8 26.2H352c0-29.2-7.5-52-22.5-68.8s-36-26.8-62.9-30.1c0 0-5-.4-10.6-.8V32h-32v66.2c-11.9 1.5-22.6 4.3-32.2 8.4-10.6 4.5-19.6 10.3-27.1 17.5s-13.2 15.6-17.2 25.4c-4 9.7-6 20.5-6 32.2 0 12.7 2.2 23.8 6.7 33.4s11 18.2 19.5 25.6 18.8 13.8 30.9 19.3c7.8 3.5 16.3 6.8 25.4 9.7v110.7q-4.05-.6-8.1-1.5c-7.9-1.8-15.2-5.1-21.7-9.8s-11.8-11-15.8-19-6-18-6-30H128c0 16.2 2.6 30 7.9 41.6s12.4 21.2 21.3 28.6c8.9 7.5 19.1 13.3 30.6 17.3s23.4 6.5 35.7 7.5c0 0 .2 0 .5.1V480h32v-64.7c1.9-.2 3.1-.3 3.1-.3 14.1-1.3 26.9-4.1 38.4-8.3q17.25-6.45 29.4-17.1c8.1-7.1 14.3-15.6 18.6-25.4s6.5-20.9 6.5-33.2c0-12.5-2.2-23.5-6.5-33-4.3-9.4-10.6-17.8-18.9-25m-104.7-46.2c-8.8-4.1-15.9-8.4-21.2-12.9s-9.1-9.6-11.3-15c-2.2-5.5-3.4-11.6-3.4-18.5 0-7.4 1.2-14.1 3.6-20.3 2.4-6.1 6-11.3 10.8-15.7 4.8-4.3 10.9-7.7 18.3-10.1 1.7-.6 3.5-1 5.3-1.5v94.9c-.6-.2-1.4-.5-2.1-.9m81 125.2c-3 6.2-7.5 11.4-13.2 15.8-5.8 4.3-12.8 7.7-21.2 10-3.9 1.1-8.1 1.9-12.5 2.5V279.2c5.6 2 10.7 4.1 15.3 6.2 8.6 4 15.6 8.3 20.9 13 5.4 4.7 9.3 9.7 11.7 15.1q3.6 8.1 3.6 17.7c0 7.7-1.5 14.7-4.6 20.8\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst percentIcon = {\n    name: 'percent',\n    content: '<path d=\"M352 64h32L160 448h-32zm16 160c-44.2 0-80 50.1-80 112s35.8 112 80 112 80-50.1 80-112-35.8-112-80-112m0 192c-22.7 0-48-32.9-48-80s25.3-80 48-80 48 32.9 48 80-25.3 80-48 80M144 64c-44.2 0-80 50.1-80 112s35.8 112 80 112 80-50.1 80-112-35.8-112-80-112m0 192c-22.7 0-48-32.9-48-80s25.3-80 48-80 48 32.9 48 80-25.3 80-48 80\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst customFormatIcon = {\n    name: 'custom-format',\n    content: '<path d=\"M128 128v224H80V182.4s-13.1 19.1-48 19.1v-40.6c34.9 0 61.7-32.9 61.7-32.9zm94.4 184H320v40H169v-16.6c.3-11.3 2.2-21.4 6-30.3 3.8-9 8.6-17 14.3-24.1s12-13.4 18.8-18.9 13.3-10.4 19.4-14.8c6.5-4.6 12.1-9 17-13.2s9-8.4 12.3-12.5 5.8-8.3 7.5-12.6c1.6-4.2 2.5-8.8 2.5-13.6 0-9.4-2.7-16.5-8-21.4-5.3-4.8-13.5-7.2-24.4-7.2-18.9 0-37.1 7.5-54.4 22.6v-42.7q28.8-18.6 64.8-18.6c11.2 0 21.2 1.5 30 4.4 8.9 2.9 16.4 7.1 22.5 12.5s10.8 12 14.1 19.7c3.2 7.7 4.8 16.4 4.8 25.9 0 10.1-1.6 19.2-4.7 27-3.1 7.9-7.3 15.1-12.4 21.5-5.2 6.5-11.1 12.4-17.9 17.7q-10.2 8.1-21 15.6c-4.9 3.5-9.7 6.9-14.2 10.4-4.6 3.4-8.6 6.8-12.1 10.1s-6.2 6.6-8.3 9.8c-2.2 3.1-3.2 9.3-3.2 9.3M341 341.2v-41.7s32.1 15.8 51.5 15.8c12.2 0 21.8-2.6 28.6-7.9s10.2-12.5 10.2-21.9c0-9.7-4.2-17.1-12.7-22.3-8.4-5.3-20-7.9-34.8-7.2H364v-37h17.7c28.4 0 42.6-9.4 42.6-28.1q0-26.4-32.7-26.4c-14.7 0-28.8 4.7-42.6 14v-38.9c15.4-7.7 33.1-11.5 53.6-11.5 22.3 0 39.6 5 52.1 14.9 12.4 10 18.7 22.9 18.7 38.8 0 28.3-14.5 46-43.4 53.2v.3c15.5 1.9 27.6 7.5 36.5 16.8 8.9 9.2 13.3 20.6 13.3 34 0 20.3-7.4 36.4-22.4 48.2S421.9 352 395.7 352c-22.3.1-40.6-3.5-54.7-10.8\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst decimalIncreaseIcon = {\n    name: 'decimal-increase',\n    content: '<path d=\"M384 256c-35.3 0-64 28.7-64 64v64c0 35.3 28.7 64 64 64 35.4 0 64-28.7 64-64v-64c0-35.3-28.6-64-64-64m32 118c0 23.6-14.3 42.7-32 42.7-17.6 0-32-19.1-32-42.7v-42.7c0-23.5 14.4-42.6 32-42.6 17.7 0 32 19.1 32 42.6zM384 32c-35.3 0-64 28.7-64 64v64c0 35.3 28.7 64 64 64 35.4 0 64-28.7 64-64V96c0-35.3-28.6-64-64-64m32 118c0 23.6-14.3 42.7-32 42.7-17.6 0-32-19.1-32-42.7v-42.7c0-23.6 14.4-42.7 32-42.7 17.7 0 32 19.1 32 42.7zM224 256c-35.3 0-64 28.7-64 64v64c0 35.3 28.7 64 64 64s64-28.7 64-64v-64c0-35.3-28.6-64-64-64m32 118c0 23.6-14.3 42.7-32 42.7s-32-19.1-32-42.7v-42.7c0-23.5 14.3-42.6 32-42.6s32 19.1 32 42.6zM96 416h32v32H96zm160-224h32v32h-32zM192 32v192L64 128z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst decimalDecreaseIcon = {\n    name: 'decimal-decrease',\n    content: '<path d=\"M384 32c-35.3 0-64 28.7-64 64v64c0 35.3 28.7 64 64 64 35.4 0 64-28.7 64-64V96c0-35.3-28.6-64-64-64m32 116.7c0 23.5-14.3 42.6-32 42.6-17.6 0-32-19.1-32-42.6V106c0-23.6 14.4-42.7 32-42.7 17.7 0 32 19.1 32 42.7zM384 256c-35.3 0-64 28.7-64 64v64c0 35.3 28.7 64 64 64 35.4 0 64-28.7 64-64v-64c0-35.3-28.6-64-64-64m32 116.7c0 23.6-14.3 42.7-32 42.7-17.6 0-32-19.1-32-42.7V330c0-23.6 14.4-42.7 32-42.7 17.7 0 32 19.1 32 42.7zM224 32c-35.3 0-64 28.7-64 64v64c0 35.3 28.7 64 64 64 35.4 0 64-28.7 64-64V96c0-35.3-28.7-64-64-64m32 116.7c0 23.5-14.3 42.6-32 42.6s-32-19.1-32-42.6V106c0-23.6 14.3-42.7 32-42.7s32 19.1 32 42.7zM128 224H96v-32h32zm128 192h32v32h-32zM64 256l128 96-128 96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst fontSizeIcon = {\n    name: 'font-size',\n    content: '<path d=\"M97 224 32 416h29l16.9-50H146l16.9 50h29l-65-192zm-8.9 112 23.9-70.6 23.9 70.6zM376 96h-48L224 416h48l26-80h108l26 80h48zm-62.4 192L352 169.8 390.4 288z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst imageAbsolutePositionIcon = {\n    name: 'image-absolute-position',\n    content: '<path d=\"M416 240c0 26.5-21.5 48-48 48s-48-21.5-48-48 21.5-48 48-48 48 21.5 48 48m96-80v320c0 17.7-14.3 32-32 32H160c-17.7 0-32-14.3-32-32V160c0-17.7 14.3-32 32-32h320c17.7 0 32 14.3 32 32m-32 26.7c0-14.7-11.9-26.7-26.7-26.7H186.7c-14.7 0-26.7 11.9-26.7 26.7V384l96-96 96 96 64-64 64 64zM32 0H0v512h32v-64h32v-32H32v-64h32v-32H32v-64h32v-32H32v-64h32v-32H32V32h96v32h32V32h64v32h32V32h64v32h32V32h64v32h32V32h64V0z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tableWizardIcon = {\n    name: 'table-wizard',\n    content: '<path d=\"M160 384V160h224v96l32 32V0H0v416h288l-32-32zM288 32h96v96h-96zm-128 0h96v96h-96zm-32 352H32v-96h96zm0-128H32v-96h96zm0-128H32V32h96zm376.6 362.1-15.5 15.5c-8.6 8.6-22.4 8.6-31 0l-124-124c-8.6-8.6-8.6-22.4 0-31l15.5-15.5c8.6-8.6 22.4-8.6 31 0l124 124c8.6 8.5 8.6 22.4 0 31m-158.5-209-21-14.8c-3.2-2.3-5.1-6-5.1-10l.3-25.7c.1-6.6-5.2-12.1-11.8-12.2-2.6 0-5.2.8-7.3 2.4l-20.6 15.4c-3.2 2.4-7.3 3-11 1.8l-24.3-8.3c-6.8-2.3-14.3 1.9-15.7 9.3-.4 2.1-.1 4.2.5 6.2l8.2 24.1c1.3 3.7.6 7.8-1.8 11l-15.4 20.6c-4.3 5.8-2.6 14.2 4 17.8 1.9 1 4 1.4 6.1 1.4l25.4-.3c3.9-.1 7.7 1.8 10 5.1l14.8 21c4.2 5.9 12.7 6.9 18.1 1.7 1.5-1.5 2.6-3.3 3.2-5.3l7.5-24.3c1.2-3.8 4.1-6.7 7.9-7.9l24.5-7.6c6.3-2 9.8-8.7 7.9-15-.7-2.7-2.3-4.9-4.4-6.4\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst crosstabIcon = {\n    name: 'crosstab',\n    content: '<path d=\"M192.3 32H32v160h1v288h447V32zm-.3 416H96v-96h96zm0-128H96v-96h96zm0-128H96V96h96zm128 256h-96v-96h96zm0-128h-96v-96h96zm0-128h-96V96h96zm128 256h-96v-96h96zm0-128h-96v-96h96zm0-128h-96V96h96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst crosstabWizardIcon = {\n    name: 'crosstab-wizard',\n    content: '<path d=\"M192 416V192h224v96l32 32V0H0v160h1v288h318.7l-31.9-32zM320 64h96v96h-96zm-128 0h96v96h-96zm-32 352H64v-96h96zm0-128H64v-96h96zm0-128H64V64h96zm344.6 330.1-15.5 15.5c-8.6 8.6-22.4 8.6-31 0l-124-124c-8.6-8.6-8.6-22.4 0-31l15.5-15.5c8.6-8.6 22.4-8.6 31 0l124 124c8.6 8.5 8.6 22.4 0 31M221.2 300.8c-4.3 5.8-2.6 14.2 4 17.8 1.9 1 4 1.4 6.1 1.4l25.4-.3c3.9-.1 7.7 1.8 10 5.1l14.8 21c4.2 5.9 12.7 6.9 18.1 1.7 1.5-1.5 2.6-3.3 3.2-5.3l7.5-24.3c1.2-3.8 4.1-6.7 7.9-7.9l24.5-7.6c6.3-2 9.9-8.7 7.9-15-.8-2.5-2.4-4.7-4.5-6.2l-21-14.8c-3.2-2.3-5.1-6-5.1-10l.3-25.7c.1-6.6-5.2-12.1-11.8-12.2-2.6 0-5.2.8-7.3 2.4l-20.6 15.4c-3.2 2.4-7.3 3-11 1.8l-24.3-8.3c-6.8-2.3-14.3 1.9-15.7 9.3-.4 2.1-.1 4.2.5 6.2l8.2 24.1c1.3 3.7.6 7.8-1.8 11z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tableBodyIcon = {\n    name: 'table-body',\n    content: '<path d=\"M32 32v416h416V32zm256 32v96h-96V64zm128 256v64L224 192h64zM64 64h96v96H64zm0 128h96v96H64zm0 224v-96h96v96zm128 0v-64l64 64zm128 0L192 288v-64l192 192zm96-160-64-64h64zm0-96h-96V64h96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tableColumnGroupsIcon = {\n    name: 'table-column-groups',\n    content: '<path d=\"M32 32v416h416V32zm256 32v64l-64-64zm0 320-96-96v-64l96 96zM192 96l96 96v64l-96-96zM64 64h96v96H64zm0 128h96v96H64zm0 224v-96h96v96zm128 0v-64l64 64zm224 0h-96v-96h96zm0-128h-96v-96h96zm0-128h-96V64h96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tableCornerIcon = {\n    name: 'table-corner',\n    content: '<path d=\"M32 32v416h416V32zm256 32v96h-96V64zm0 128v96h-96v-96zM160 64v64L96 64zM64 96l64 64H64zm0 96h96v96H64zm0 224v-96h96v96zm128 0v-96h96v96zm224 0h-96v-96h96zm0-128h-96v-96h96zm0-128h-96V64h96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tableRowGroupsIcon = {\n    name: 'table-row-groups',\n    content: '<path d=\"M32 32v416h416V32zm256 32v96h-96V64zm-64 128h64l96 96h-64zm32 96h-64l-96-96h64zM64 64h96v96H64zm0 160 64 64H64zm0 192v-96h96v96zm128 0v-96h96v96zm224 0h-96v-96h96zm0-160-64-64h64zm0-96h-96V64h96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst globeOutlineIcon = {\n    name: 'globe-outline',\n    content: '<path d=\"M256 32C132.3 32 32 132.3 32 256s100.3 224 224 224 224-100.3 224-224S379.7 32 256 32M64 256c0-57 24.8-108.2 64.3-143.3.3 1.8 1 3.6 1.9 5.4 11.9 22.1 47.7 92.5 87.8 104.1s38.6 22.2 45 29.9c6.5 7.7-12.2 24.4 5.6 55.9 9.6 13.2 18.3 5.5 22.6 27.6 4.1 21-20.6 95-7.8 110.4-9 1.3-18.1 2-27.4 2-106 0-192-86-192-192m222.4 189.6c10.5-37 41.8-89.2 75.8-98.9 24.4-20.5 23.3-38.8 20.1-55.4-7.6-13.9-41.7-26-74.3-54.8-19.5-4.4-43.4 8.3-52.6-3.9s-52.6-29.9-33.6-49.3 47.7.6 59.1-39.3 35.2-23.2 47.2-23.2S342.2 92 320 81.5c-16.7-7.9-38.6-16.1-71.7-17.4 2.6-.1 5.2-.2 7.8-.2 106 0 192 86 192 192C448 351.7 378 431 286.4 445.6\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst globeIcon = {\n    name: 'globe',\n    content: '<path d=\"M256 32C132.3 32 32 132.3 32 256s100.3 224 224 224 224-100.3 224-224S379.7 32 256 32m106.2 314.7c-34.7 10-66.7 64.2-76.4 101.3-17.9-9.4 9.8-90.2 5.4-112.4-4.3-22.1-13-14.4-22.6-27.6-17.8-31.5.9-48.3-5.6-55.9-6.5-7.7-4.9-18.3-45-29.9s-75.9-81.9-87.8-104.1c-11.9-22.1 26.6-47 81.3-52.6 10.3-1 19.7-1.5 28.4-1.5 37.8.1 61.9 9 80 17.5 22.2 10.5 20.1 39.3 8.1 39.3s-35.8-16.6-47.2 23.2-40.1 19.9-59.1 39.3 24.4 37.1 33.6 49.3 33.1-.6 52.6 3.9c32.6 28.8 66.7 41 74.3 54.8 3.3 16.6 4.4 34.9-20 55.4\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst mapMarkerIcon = {\n    name: 'map-marker',\n    content: '<path d=\"M256 0C158.8 0 80 78.8 80 176s176 336 176 336 176-238.8 176-336S353.2 0 256 0m0 288c-61.9 0-112-50.1-112-112S194.1 64 256 64s112 50.1 112 112-50.1 112-112 112\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst mapMarkerTargetIcon = {\n    name: 'map-marker-target',\n    content: '<path d=\"M256 0C158.8 0 80 78.8 80 176s176 336 176 336 176-238.8 176-336S353.2 0 256 0m0 288c-61.9 0-112-50.1-112-112S194.1 64 256 64s112 50.1 112 112-50.1 112-112 112m48-112c0 26.5-21.5 48-48 48s-48-21.5-48-48 21.5-48 48-48 48 21.5 48 48\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst pinIcon = {\n    name: 'pin',\n    content: '<path d=\"M320 256V96c0-17.6-14.4-32-32-32h-96c-17.6 0-32 14.4-32 32v160H96v32h128v160h32V288h128v-32zm-128 0V96h64v160z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst unpinIcon = {\n    name: 'unpin',\n    content: '<path d=\"M256 320h160c17.6 0 32-14.4 32-32v-96c0-17.6-14.4-32-32-32H256V96h-32v128H64v32h160v128h32zm0-128h160v64H256z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst shareIcon = {\n    name: 'share',\n    content: '<path d=\"M480 432c0 44.2-35.8 80-80 80s-80-35.8-80-80c0-10.6 2.1-20.7 5.8-30l-158.6-88.1C152.9 327.6 133.4 336 112 336c-44.2 0-80-35.8-80-80s35.8-80 80-80c21.4 0 40.9 8.4 55.2 22.1L325.8 110c-3.8-9.3-5.8-19.4-5.8-30 0-44.2 35.8-80 80-80s80 35.8 80 80-35.8 80-80 80c-22 0-41.9-8.9-56.4-23.3l-158 87.8c4.1 9.7 6.4 20.3 6.4 31.5s-2.3 21.8-6.4 31.5l158 87.8C358.1 360.9 378 352 400 352c44.2 0 80 35.8 80 80\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst userIcon = {\n    name: 'user',\n    content: '<path d=\"M352 128c0 53-43 96-96 96s-96-43-96-96 43-96 96-96 96 43 96 96m-96 128c-106 0-192 86-192 192 0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32 0-106-86-192-192-192\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst inboxIcon = {\n    name: 'inbox',\n    content: '<path d=\"M384 32H128L32 288v160c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V288zM150.2 64h211.6l84 224H352l-32 64H192l-32-64H66.2z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst bloggerIcon = {\n    name: 'blogger',\n    content: '<path d=\"M188.9 64C119.9 64 64 119.5 64 188v136.1C64 392.5 119.9 448 188.9 448h134.4c69 0 124.7-55.5 124.7-123.9v-87.9c0-13.7-11-28.2-24.8-28.2h-21.5c-13.2 0-24.7-11.2-25.6-24 0-68.5-55.2-120-124.2-120zm-4.9 96h72c13.2 0 24 10.8 24 24s-10.8 24-24 24h-72c-13.2 0-24-10.8-24-24s10.8-24 24-24m0 144h144c13.2 0 24 10.8 24 24s-10.8 24-24 24H184c-13.2 0-24-10.8-24-24s10.8-24 24-24\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst bloggerBoxIcon = {\n    name: 'blogger-box',\n    content: '<path d=\"M448 32H64c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32m-31 280.7c0 57.1-46.6 103.3-104.2 103.3H200.4C142.7 416 96 369.8 96 312.7V199.3C96 142.2 142.7 96 200.4 96h52.1C310 96 356 138.9 356 196c.7 10.7 10.4 20 21.4 20h18c11.5 0 20.7 12.1 20.6 23.5zM196 216h60c11 0 20-9 20-20s-9-20-20-20h-60c-11 0-20 9-20 20s9 20 20 20m120 80H196c-11 0-20 9-20 20s9 20 20 20h120c11 0 20-9 20-20s-9-20-20-20\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst deliciousIcon = {\n    name: 'delicious',\n    content: '<path d=\"M256 32h224v224H256zM32 256h224v224H32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst deliciousBoxIcon = {\n    name: 'delicious-box',\n    content: '<path d=\"M480 448V64c0-17.7-14.3-32-32-32H64c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32m-224-32V256H96V96h160v160h160v160z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst diggIcon = {\n    name: 'digg',\n    content: '<path d=\"M96 96v64H32v160h96V96zm64 0v32h32V96zm0 64v160h32V160zm64 0v160h64v32h-64v32h96V160zm128 0v160h64v32h-64v32h96V160zM64 192h32v96H64zm192 0h32v96h-32zm128 0h32v96h-32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst diggBoxIcon = {\n    name: 'digg-box',\n    content: '<path d=\"M448 32H64c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32M160 203.5V352H64V192h64v-64h32zM212 352h-32V192h32zm0-192h-32v-32h32zm119 153.7V416h-96v-32h64v-32h-64V192h96zm117 0V416h-96v-32h64v-32h-64V192h96zM96 224h32v96H96zm171 0h32v96h-32zm117 0h32v96h-32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst envelopIcon = {\n    name: 'envelop',\n    content: '<path d=\"M64 96c-17.7 0-32 14.3-32 32v256c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V128c0-17.7-14.3-32-32-32zm23.7 32L256 296.3 424.3 128c11 2.9 19.7 11.6 22.6 22.6L342.6 254.9l104.3 104.3c-2.9 11-11.6 19.7-22.6 22.6L320 277.5l-64 64-64-64L87.7 381.8c-11-2.9-19.7-11.6-22.6-22.6l104.3-104.3L65.1 150.6c2.9-11 11.6-19.7 22.6-22.6\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst envelopBoxIcon = {\n    name: 'envelop-box',\n    content: '<path d=\"m377 182.4-88.8 88.8-31.2 29-33.2-29-88.8-88.8c-7.7 2-13.8 8.1-15.8 15.8l73 73-73 73c2 7.7 8.1 13.8 15.8 15.8l73-73 49 44.8 47-44.8 73 73c7.7-2 13.8-8.1 15.8-15.8l-73-73 73-73c-2-7.7-8.1-13.8-15.8-15.8M448 32H64c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32m-32 329.6c0 12.4-10 22.4-22.4 22.4H118.4C106 384 96 374 96 361.6V182.4c0-12.4 10-22.4 22.4-22.4h275.2c12.4 0 22.4 10 22.4 22.4z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst facebookIcon = {\n    name: 'facebook',\n    content: '<path d=\"M290 32c-59.8 0-96 32-96 96v64h-66v96h66v192h96V288h80l14-96h-94v-32c0-32 32-32 32-32h62V34.9c-7.2-.9-65.4-2.9-94-2.9\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst facebookBoxIcon = {\n    name: 'facebook-box',\n    content: '<path d=\"M57.6 32C43.6 32 32 43.5 32 57.6v396.8c0 14 11.5 25.6 25.6 25.6h396.8c14 0 25.6-11.5 25.6-25.6V57.6c0-14-11.5-25.6-25.6-25.6zm315.8 65.5c24.1 0 42 2.3 42 2.3L414 155s-18.2-.2-38.1-.2c-21.5 0-24.9 9.9-24.9 26.1V224h64.1l-2.8 59H351v165h-63V283h-44v-59h44v-50.5c0-39.6 25.8-76 85.4-76\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst googleIcon = {\n    name: 'google',\n    content: '<path d=\"M268.3 33c-16.1-1-33.4 1-52 4.9s-36.4 12.8-53.2 26.5c-12.6 11-21.9 23.4-28.3 37.3-6.3 13.9-9.4 27.7-9.4 41.5 0 11.4 2.1 22.7 6.5 33.8 4.3 11.1 10.6 21.1 18.8 29.7s18.4 15.6 30.6 20.9 26.1 7.9 41.8 7.9c3.1 0 6.2-.1 9.4-.3s6.3-.5 9.4-.9c-1.6 3.5-2.9 7-4.1 10.3s-1.8 7.6-1.8 12.6c0 9 1.9 16.5 5.6 22.6s7.7 11.9 12 17.4c-6.7.4-14.5 1-23.5 1.8s-18.6 2.1-28.8 4.1-20.5 4.6-30.9 7.9-20.1 7.7-29.1 13.2c-17.2 10.2-29.1 22-35.6 35.6S96 385.4 96 396c0 11 2.6 21.5 7.7 31.5s12.9 18.9 23.5 26.7c10.6 7.9 23.8 14.1 39.7 18.8s34.4 7 55.5 7c25.1 0 47.3-3.2 66.7-9.7s35.6-14.9 48.5-25.3 22.7-22.3 29.4-35.6 10-26.9 10-40.6c0-10.2-1.4-19.3-4.2-27.1-2.7-7.9-6.4-14.9-10.8-21.2q-6.75-9.45-15.9-17.7c-9.15-8.25-12.3-11-18.5-16.5l-21.1-16.5c-3.2-2.8-6.5-6-10-9.7s-5.3-8.9-5.3-15.6 1.8-12.2 5.3-16.5 7.2-8.4 11.2-12.4c6.2-4.7 12.4-9.7 18.2-15 5.9-5.3 11.2-11.2 15.9-17.6 4.7-6.5 8.4-13.8 11.2-22.1 2.7-8.2 4.1-17.9 4.1-28.8s-1.5-20.8-4.7-29.5c-3.1-8.6-6.8-16.2-11.2-22.7q-6.45-9.75-13.5-16.5c-7.05-6.75-12.4-11.4-12.4-11.4H352l31.7-20zm-37.1 17.8c12.2 0 22.8 3.6 32 10.9s17 16.4 23.2 27.5c6.2 11 11 22.8 14.1 35.4s4.7 24.2 4.7 34.8c0 5.5-.8 12.4-2.3 20.7s-5.7 15.7-12.4 22.4c-4.7 4.7-10.7 8.7-18 11.8-7.3 3.2-14.6 4.7-22 4.7-12.5 0-23.4-3.6-32.6-10.9S201 191.8 195 181.3q-9.15-15.9-13.5-34.2c-4.35-18.3-4.4-23.2-4.4-33.1 0-7.9.9-15.5 2.7-23S185 76.6 190 70.3c4.7-5.9 10.8-10.6 18.2-14.1 7.5-3.6 15.1-5.4 23-5.4M260 314h7.3c1.8 0 3.8.2 6.2.6 11 7.8 20.6 14.9 28.8 21.2 8.2 6.2 14.9 12.4 20 18.2 5.1 5.9 8.9 11.8 11.5 18 2.5 6 3.8 12.8 3.8 20.3 0 18.4-7.3 33.6-22 45.6-14.7 11.9-36.2 17.9-64.4 17.9-31.8 0-57-6.7-75.6-20s-27.9-30.6-27.9-51.7c0-10.6 2.1-19.4 6.2-26.5 4.1-7 8.9-12.9 14.4-17.6s11.1-8.3 16.8-10.8c5.7-2.6 10.1-4.4 13.2-5.6 6.3-2 12.7-3.6 19.4-5s12.9-2.4 18.8-3q8.85-.9 15.3-1.2c4.2-.2 7-.3 8.2-.4\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst googleBoxIcon = {\n    name: 'google-box',\n    content: '<path d=\"M212.6 236.1c5.1-5.1 8.2-10.8 9.4-17.1s1.8-11.6 1.8-15.8c0-8.1-1.2-17-3.6-26.6s-6-18.6-10.8-27-10.7-15.4-17.7-21-15.2-8.4-24.4-8.4c-6 0-11.8 1.3-17.5 4.1s-10.3 6.3-13.9 10.8c-3.9 4.8-6.5 10-7.8 15.7s-2 11.6-2 17.6c0 7.5 1.1 15.9 3.4 25.2s5.7 18 10.3 26.1 10.5 14.9 17.5 20.5c7 5.5 15.3 8.3 24.9 8.3q8.55 0 16.8-3.6c8.25-3.6 10-5.2 13.6-8.8M448 32H64c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32M270.9 394.1c-5.1 10.2-12.6 19.3-22.4 27.2s-22.2 14.4-37 19.4c-14.8 4.9-31.8 7.4-50.9 7.4-16.2 0-30.3-1.8-42.4-5.4s-22.2-8.4-30.3-14.4-14.1-12.8-18-20.4-5.9-15.6-5.9-24c0-8.1 2.5-17.2 7.4-27.6s14-19.4 27.2-27.2c6.8-4.2 14.3-7.6 22.2-10.1s15.8-4.6 23.6-6c7.8-1.5 15.1-2.5 22-3.1s12.9-1.1 18-1.3c-3.3-4.2-6.4-8.6-9.2-13.3s-4.3-10.4-4.3-17.3c0-3.9.4-7.1 1.3-9.7s1.9-5.2 3.1-7.9c-2.4.3-4.8.5-7.2.7s-4.8.2-7.2.2c-12 0-22.6-2-31.9-6q-13.95-6-23.4-15.9c-6.3-6.6-11.1-14.1-14.3-22.7s-4.9-17.2-4.9-25.8c0-10.5 2.4-21 7.2-31.6s12-20.1 21.6-28.5c12.8-10.5 26.4-17.2 40.6-20.2s27.5-4.5 39.7-4.6H288l-28.7 16h-27.8c2.7 1.9 5.8 4.7 9.4 8.1 3.6 3.5 7 7.6 10.3 12.6s6.1 10.7 8.5 17.3 3.6 14.1 3.6 22.5-1.1 15.7-3.1 22c-2.1 6.3-4.9 11.9-8.5 16.9s-7.6 9.4-12.1 13.5-9.2 7.9-13.9 11.5c-3 3-5.9 6.1-8.5 9.4s-4 7.5-4 12.6 1.3 9.1 4 11.9 5.2 5.3 7.6 7.4l16.2 12.6q7.2 6.3 14.1 12.6c4.6 4.2 8.7 8.7 12.1 13.5 3.5 4.8 6.2 10.1 8.3 16.2s3.2 12.9 3.2 20.7c-.1 10.2-2.6 20.5-7.8 30.8m-34.1-42.6c-3.9-4.5-9-9.1-15.3-13.9s-13.6-10.2-22-16.2c-1.8-.3-3.4-.4-4.7-.4h-5.6c-.9 0-3 .1-6.3.2s-7.2.4-11.7.9-9.3 1.2-14.3 2.3-10 2.3-14.8 3.8c-2.4.9-5.8 2.3-10.1 4.3s-8.6 4.7-12.8 8.3-7.8 8.1-11 13.5c-3.1 5.4-4.7 12.1-4.7 20.2 0 16.2 7.1 29.3 21.3 39.5s33.4 15.3 57.7 15.3c21.5 0 37.9-4.5 49.2-13.7s16.8-20.7 16.8-34.8c0-5.7-1-10.8-2.9-15.5s-4.9-9.3-8.8-13.8\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst googlePlusIcon = {\n    name: 'google-plus',\n    content: '<path d=\"M204.3 33c-16.1-1-33.4 1-52 4.9s-36.4 12.8-53.2 26.5c-12.6 11-22 23.4-28.3 37.3s-9.4 27.7-9.4 41.5c0 11.4 2.1 22.7 6.5 33.8 4.3 11.1 10.6 21.1 18.8 29.7s18.4 15.6 30.6 20.9 26.1 7.9 41.8 7.9c3.1 0 6.2-.1 9.4-.3s6.3-.5 9.4-.9c-1.6 3.5-2.9 7-4.1 10.3s-1.8 7.6-1.8 12.6c0 9 1.9 16.5 5.6 22.6s7.7 11.9 12 17.4c-6.7.4-14.5 1-23.5 1.8s-18.6 2.1-28.8 4.1-20.5 4.6-30.9 7.9-20.1 7.7-29.1 13.2c-17.2 10.2-29.1 22-35.6 35.6S32 385.4 32 396c0 11 2.6 21.5 7.7 31.5s12.9 18.9 23.5 26.7S87 468.3 102.9 473s34.4 7 55.6 7c25.1 0 47.3-3.2 66.7-9.7s35.6-14.9 48.5-25.3 22.7-22.3 29.4-35.6 10-26.9 10-40.6c0-10.2-1.4-19.3-4.2-27.1-2.7-7.9-6.4-14.9-10.8-21.2q-6.75-9.45-15.9-17.7c-9.15-8.25-12.3-11-18.5-16.5l-21.2-16.5c-3.2-2.8-6.5-6-10-9.7s-5.3-8.9-5.3-15.6 1.8-12.2 5.3-16.5 7.2-8.4 11.2-12.4c6.2-4.7 12.4-9.7 18.2-15 5.9-5.3 11.2-11.2 15.9-17.6 4.7-6.5 8.4-13.8 11.2-22.1 2.7-8.2 4.1-17.9 4.1-28.8s-1.5-20.8-4.7-29.5c-3.1-8.6-6.8-16.2-11.2-22.7q-6.45-9.75-13.5-16.5c-7.05-6.75-12.4-11.4-12.4-11.4H288l31.7-20zm-37 17.8c12.2 0 22.8 3.6 32 10.9s17 16.4 23.2 27.5c6.2 11 11 22.8 14.1 35.4s4.7 24.2 4.7 34.8c0 5.5-.8 12.4-2.3 20.7-1.6 8.3-5.7 15.7-12.4 22.4-4.7 4.7-10.7 8.7-18 11.8-7.3 3.2-14.6 4.7-22 4.7-12.5 0-23.4-3.6-32.6-10.9s-16.9-16.3-22.9-26.8q-9.15-15.9-13.5-34.2c-4.35-18.3-4.4-23.2-4.4-33.1 0-7.9.9-15.5 2.7-23S121 76.6 126 70.3c4.7-5.9 10.8-10.6 18.2-14.1q11.25-5.4 23.1-5.4M196.1 314h7.3c1.8 0 3.8.2 6.2.6 11 7.8 20.6 14.9 28.8 21.2 8.2 6.2 14.9 12.4 20 18.2 5.1 5.9 8.9 11.8 11.5 18 2.5 6 3.8 12.8 3.8 20.3 0 18.4-7.3 33.6-22 45.6-14.7 11.9-36.2 17.9-64.4 17.9-31.8 0-57-6.7-75.6-20s-27.9-30.6-27.9-51.7c0-10.6 2.1-19.4 6.2-26.5s8.9-12.9 14.4-17.6 11.1-8.3 16.8-10.8c5.7-2.6 10.1-4.4 13.2-5.6 6.3-2 12.7-3.6 19.4-5s12.9-2.4 18.8-3q8.85-.9 15.3-1.2c4.2-.2 6.9-.3 8.2-.4M384 32v64h-64v32h64v64h32v-64h64V96h-64V32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst googlePlusBoxIcon = {\n    name: 'google-plus-box',\n    content: '<path d=\"M212.6 236.1c5.1-5.1 8.2-10.8 9.4-17.1s1.8-11.6 1.8-15.8c0-8.1-1.2-17-3.6-26.6s-6-18.6-10.8-27-10.7-15.4-17.7-21-15.2-8.4-24.4-8.4c-6 0-11.8 1.3-17.5 4.1s-10.3 6.3-13.9 10.8c-3.9 4.8-6.5 10-7.8 15.7s-2 11.6-2 17.6c0 7.5 1.1 15.9 3.4 25.2s5.7 18 10.3 26.1 10.5 14.9 17.5 20.5c7 5.5 15.3 8.3 24.9 8.3q8.55 0 16.8-3.6c8.25-3.6 10-5.2 13.6-8.8M448 32H64c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32M270.9 394.1c-5.1 10.2-12.6 19.3-22.4 27.2s-22.2 14.4-37 19.4c-14.8 4.9-31.8 7.4-50.9 7.4-16.2 0-30.3-1.8-42.4-5.4s-22.2-8.4-30.3-14.4-14.1-12.8-18-20.4-5.9-15.6-5.9-24c0-8.1 2.5-17.2 7.4-27.6s14-19.4 27.2-27.2c6.8-4.2 14.3-7.6 22.2-10.1s15.8-4.6 23.6-6c7.8-1.5 15.1-2.5 22-3.1s12.9-1.1 18-1.3c-3.3-4.2-6.4-8.6-9.2-13.3s-4.3-10.4-4.3-17.3c0-3.9.4-7.1 1.3-9.7s1.9-5.2 3.1-7.9c-2.4.3-4.8.5-7.2.7s-4.8.2-7.2.2c-12 0-22.6-2-31.9-6q-13.95-6-23.4-15.9c-6.3-6.6-11.1-14.1-14.3-22.7s-4.9-17.2-4.9-25.8c0-10.5 2.4-21 7.2-31.6s12-20.1 21.6-28.5c12.8-10.5 26.4-17.2 40.6-20.2s27.5-4.5 39.7-4.6H288l-28.7 16h-27.8c2.7 1.9 5.8 4.7 9.4 8.1 3.6 3.5 7 7.6 10.3 12.6s6.1 10.7 8.5 17.3 3.6 14.1 3.6 22.5-1.1 15.7-3.1 22c-2.1 6.3-4.9 11.9-8.5 16.9s-7.6 9.4-12.1 13.5-9.2 7.9-13.9 11.5c-3 3-5.9 6.1-8.5 9.4s-4 7.5-4 12.6 1.3 9.1 4 11.9 5.2 5.3 7.6 7.4l16.2 12.6q7.2 6.3 14.1 12.6c4.6 4.2 8.7 8.7 12.1 13.5 3.5 4.8 6.2 10.1 8.3 16.2s3.2 12.9 3.2 20.7c-.1 10.2-2.6 20.5-7.8 30.8M448 192h-64v64h-32v-64h-64v-32h64V96h32v64h64zM236.8 351.5c-3.9-4.5-9-9.1-15.3-13.9s-13.6-10.2-22-16.2c-1.8-.3-3.4-.4-4.7-.4h-5.6c-.9 0-3 .1-6.3.2s-7.2.4-11.7.9-9.3 1.2-14.3 2.3-10 2.3-14.8 3.8c-2.4.9-5.8 2.3-10.1 4.3s-8.6 4.7-12.8 8.3-7.8 8.1-11 13.5c-3.1 5.4-4.7 12.1-4.7 20.2 0 16.2 7.1 29.3 21.3 39.5s33.4 15.3 57.7 15.3c21.5 0 37.9-4.5 49.2-13.7s16.8-20.7 16.8-34.8c0-5.7-1-10.8-2.9-15.5s-4.9-9.3-8.8-13.8\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst linkedinIcon = {\n    name: 'linkedin',\n    content: '<path d=\"M112 32c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48M64 160v288h96V160zm128 0v288h96V288c0-32 32-32 32-32s32 0 32 32v160h96V290.9c0-66.5-13.6-130.9-96-130.9-36.2 0-62.9 32-64 44.9V160z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst linkedinBoxIcon = {\n    name: 'linkedin-box',\n    content: '<path d=\"M448 32H64c-17.6 0-32 14.4-32 32v384c0 17.6 14.4 32 32 32h384c17.6 0 32-14.4 32-32V64c0-17.6-14.4-32-32-32M160 416H96V192h64zm-32-256c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32m288 256h-64V288c0-17.7-14.3-32-32-32s-32 14.3-32 32v128h-64V192h64v39.7c13.2-18.1 33.4-39.7 56-39.7 39.8 0 72 35.8 72 80z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst myspaceIcon = {\n    name: 'myspace',\n    content: '<path d=\"M400 64c-44.2 0-80 35.8-80 80s35.8 80 80 80 80-35.8 80-80-35.8-80-80-80m-176 64c-35.4 0-64 28.6-64 64s28.6 64 64 64 64-28.6 64-64-28.6-64-64-64M80 192c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48m320 64c-44.2 0-80 36.1-80 80.5V448h160V336.5c0-44.5-35.8-80.5-80-80.5m-176 32c-35.4 0-64 31.5-64 70.3V448h128v-89.7c0-38.8-28.6-70.3-64-70.3M80 320c-26.5 0-48 21.8-48 48.7V448h96v-79.3c0-26.9-21.5-48.7-48-48.7\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst myspaceBoxIcon = {\n    name: 'myspace-box',\n    content: '<path d=\"M448 32H64c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32M128 416H64v-63.5c0-17.9 14.3-32.5 32-32.5s32 14.5 32 32.5zM96 288c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32m160 128h-96v-75.3c0-29.1 21.5-52.7 48-52.7s48 23.6 48 52.7zm-48-160c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48m208 160H288v-92.9c0-37.1 27.2-67.1 64-67.1s64 30 64 67.1zm-64-192c-35.4 0-64-28.6-64-64s28.6-64 64-64 64 28.6 64 64-28.6 64-64 64\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst pinterestIcon = {\n    name: 'pinterest',\n    content: '<path d=\"M250.7 32C126.6 32 64 119.7 64 192.7c0 44.3 17 83.6 53.5 98.3 6 2.4 11.4.1 13.1-6.4 1.2-4.5 4.1-15.9 5.3-20.7 1.8-6.5 1.1-8.7-3.7-14.3-10.5-12.2-17.2-28.1-17.2-50.5 0-65.1 49.4-123.3 128.6-123.3 70.2 0 108.7 42.2 108.7 98.6 0 74.2-33.3 136.8-82.8 136.8-27.3 0-47.8-22.2-41.2-49.6 7.9-32.6 23.1-67.8 23.1-91.3 0-21.1-11.5-38.7-35.2-38.7-27.9 0-50.4 28.5-50.4 66.6 0 24.3 8.3 40.7 8.3 40.7s-28.6 119.3-33.6 140.2c-10 41.6-1.5 92.7-.8 97.8.5 3 4.4 3.7 6.2 1.5 2.6-3.3 35.9-43.8 47.2-84.2 3.2-11.4 18.4-70.8 18.4-70.8 9.1 17.1 35.6 32.1 63.8 32.1 84 0 141-75.4 141-176.4C416 103 350.3 32 250.7 32\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst pinterestBoxIcon = {\n    name: 'pinterest-box',\n    content: '<path d=\"M448 32H64c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32M276.6 327.3c-19.8 0-38.5-10.8-44.9-22.9 0 0-10.7 42.4-12.9 50.5-8 28.9-31.4 57.8-33.2 60.2-1.3 1.6-4.1 1.1-4.4-1.1-.5-3.7-6.5-40.1.5-69.9 3.5-14.9 23.6-100.2 23.6-100.2s-5.9-11.7-5.9-29.1c0-27.2 15.8-47.6 35.5-47.6 16.7 0 24.8 12.5 24.8 27.6 0 16.8-10.7 41.9-16.2 65.2-4.6 19.5 9.8 35.4 29 35.4 34.8 0 58.3-44.7 58.3-97.7 0-40.3-27.1-70.4-76.5-70.4-55.7 0-90.5 41.6-90.5 88 0 16 4.7 27.3 12.1 36.1 3.4 4 3.9 5.6 2.6 10.2-.9 3.4-2.9 11.5-3.7 14.8-1.2 4.6-5 6.3-9.2 4.6-25.6-10.4-37.6-38.5-37.6-70.2C128 158.6 172 96 259.4 96c70.2 0 116.4 50.8 116.4 105.3-.1 72.1-40.2 126-99.2 126\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst redditIcon = {\n    name: 'reddit',\n    content: '<path d=\"M420.3 33c-7 0-14.5 1-22.4 3h-1.7c-12.4 4.8-21.9 12.3-28.8 22.5-17-7-34-10.4-50.7-10.4-6.3 0-12.6.6-19.1 1.9H296c-8.8 2.1-16.5 5.8-23.3 11s-12.4 11.6-16.6 19.1c-5.3 8.7-8.9 31.3-10.5 41.1-1.7 9.8-2.6 25-2.6 34.7-20.9 1.5-41.8 4.5-62.8 9.1s-40.6 11.9-59 21.9c-1.3.4-2.5.9-3.5 1.3s-2 .9-2.9 1.3c-6.2-4.5-13-8-20.5-10.6Q82.6 175 69.4 175h-5.8c-8.7 0-16.7 1.6-24.1 4.8s-14.1 7.7-20.3 13.4c-5.8 5.8-10.3 12.2-13.9 19.4-3.6 7.3-5.3 14.8-5.3 22.7.4 10.8 4.4 21.3 11.8 31.4 5.7 8.3 13.8 15.4 24.3 21.1-.5 2.1-.7 4.4-1 6.8q-.3 3.75-.3 6.9c0 10 1.5 20 4.5 30.1s7.4 19.4 13.1 28.1c10.9 16.6 24.5 30.5 40.9 41.6 16.4 11 33.8 20.2 52.1 27.2 17.5 6.6 35.5 11.6 54 14.8 18.6 3.3 37.4 5 56.6 5 12.5 0 25.1-.8 37.5-2.4 12.5-1.6 25-3.7 37.6-6.3 23.2-5.5 45.5-13.9 66.8-25.1s39.4-26 54.3-44.3c17.1-20.5 25.6-43.4 25.6-68.8 0-2.6-.1-5.1-.4-7.5s-.5-4.7-.9-6.8c10-4.9 18.3-11.9 24.9-21.1 7.1-9.6 10.6-20.3 10.6-32v-3c-1.2-13.4-6.8-25.1-16.3-34.9q-14.7-15-34.2-20.1h-.6c-6-1.3-11.6-1.9-16.9-1.9-14.1-.2-26.6 3.2-37.4 10.2-2.3 1.1-5.2 2.8-8.6 5.4-.8-.9-1.8-1.3-2.6-1.3l-.7-.6c-18.2-9.6-37.5-16.9-57.7-21.8-20.1-4.9-40.6-8-61.6-9.3 0-7.7.7-34.2 1.8-41.9s3.7-14.8 7.5-21.4c4.9-9.6 13.4-15.1 25.6-16.4h5.8c7.4 0 14.7 1.1 21.7 3 7.1 2 14.1 4.3 21.2 6.9v1.9c0 7.5 1.5 14.2 4.5 20.3 2.9 6 6.9 11.6 11.8 16.5 10.3 10.4 22.8 16.3 37.7 17.5h7.3c14.9 0 28.1-4.8 39.8-14.4 5.3-4.4 9.7-9.6 13.1-15.5s5.5-12.5 6.4-20c.4-1.3.6-3.2.6-5.8.2-11-3.3-21.4-10.3-30.9-7.1-9.2-15.8-15.7-26.2-19.5h-.5c-6.5-2.7-14.1-4.1-22.9-4m1.2 27.4c7.2.1 13.2 2.7 18.3 7.7C446 73 449 79.2 449 86.7V88c-.8 6.8-3.9 12.7-9.3 17.6-5.5 4.9-11.9 7.4-19.1 7.4h-1.9c-7.1 0-13.4-2.5-19.4-7.4-5.5-4.7-8.3-10.6-8.3-17.6v-1.3c0-6.6 2.1-12.1 6.5-16.6 3.8-4.7 8.9-7.7 15.1-8.9 2-.4 4.4-.6 7.5-.6.4-.2.9-.2 1.4-.2m-165 125.7c10 0 20.3.5 30.8 1.6 10.6 1.1 20.9 2.7 30.8 4.8l9.9 2.6 10.2 2.6c17.5 4.9 34.1 11.9 49.9 21.1s29 20.8 40 34.9c5.1 7.3 9.2 14.9 12.3 23s4.6 16.5 4.6 25.3v7.6c0 2.3-.4 4.6-1.3 6.7-2.8 12.4-8.5 24-17.3 34.9-7.4 10-17 19.2-28.8 27.5-17.5 11.7-36.4 20.7-56.9 26.9-20.4 6.2-41.3 10.1-62.7 11.8-3.6.5-7.3.6-10.8.6h-10.8c-21.3 0-42.4-2.2-63.1-6.6-20.8-4.4-40.3-11.4-58.6-21l-4.5-2.6-4.8-2.2c-13-8.3-24.4-17.5-34.5-27.5-10.2-11.5-17.2-24-21.1-37.4-1.7-5.2-2.6-11.2-2.6-18.2 0-18.1 5.6-34.2 16.9-48.3 11-14.1 24.4-25.8 40.1-35.2s32.2-16.5 49.7-21.4c26.2-7.7 53.7-11.6 82.6-11.5M65.7 204h3.2c3.2 0 6.1.4 8.8 1.3 2.6.9 5.4 1.7 8.4 2.6-8.7 7-16.5 14.6-23.5 22.7-6.9 8.1-12.8 17-17.7 26.6-2.8-2-5.2-4.8-7.4-8.6-3-3.5-4.5-7.8-4.5-13.1v-2.1c.7-7.7 4-14.4 10.3-20.2 7.1-5.3 14.6-8.3 22.4-9.2m377.6-.4c6.4 0 12.7 1.5 18.9 4.4 6.1 3.5 10.8 7.8 13.7 13.2 2.1 4.5 3.2 8.6 3.2 12.5 0 5.3-1.2 10.1-3.8 14.4-2.4 3.6-5 6.7-8 9.2-4.7-10-10.6-19.1-17.6-27.2s-14.9-15.6-23.6-22.7c5.3-2.6 11-3.8 17.2-3.8m-107.6 43.2c-3.6 0-7.4.7-11.2 1.9-6.2 2.2-11.2 5.9-15 11.2-4 4.7-6.1 10.3-6.1 16.9 0 2.4.2 4.2.6 5.5v.6c1.3 7.5 5.1 13.1 11.2 17 6.2 4.7 13.2 7 21.1 7 2.5 0 5.5-.6 9-1.9h.9c5.6-1.1 11-4.5 16.3-10.2 3.8-5.3 5.8-11.4 5.8-18 0-3-.6-6.2-2-9.6-1.6-6.2-5.6-11.3-11.8-15.3-5.9-3.3-12.2-5.1-18.8-5.1m-158.8-.1c-2.6 0-4.7.2-6.3.7-5.8.9-10.8 3.1-15.2 6.9-4.4 3.7-7.4 8.3-9.1 13.6-.9 1.2-1.3 2.7-1.3 4.1v4.2c0 7 1.9 13.2 5.8 18.6 4.2 5.1 9.6 8.5 16.3 10.2 3 1.2 6.3 1.9 9.9 1.9 8.3 0 15.8-2.8 22.4-8.3 7.1-5.7 10.6-12.8 10.6-21.1v-2q0-11.85-9.9-20.1c-7.2-5.8-14.9-8.7-23.2-8.7m-1.6 94c-1.2 0-3.2.5-5.7 1.3h-.8c-2.6.8-5 2.7-7.3 5.7-1.2 2.1-1.9 4.8-1.9 8 0 2.6.6 5.2 1.9 8 1.3 2.2 3.2 3.9 5.8 5.1q36.75 23.1 80.7 23.1h4.8c14.1 0 27.8-1.3 41-4s26.1-6.9 38.5-12.6c1.7-.9 3.5-1.7 5.4-2.6 1.9-.8 3.9-1.9 6-3.2 2.2-.9 4-2.1 5.5-3.8 2.1-2.1 3.3-4.4 3.8-6.8.4-.8.7-1.9.7-3.2s-.4-3.2-1.3-5.8c-1.3-3.2-3.5-5.4-6.4-6.7-3.3-1.7-6.2-2.6-8.6-2.6-2.5 0-5.3.6-8 2-23.2 13-48.6 19.6-76 19.8-20.4 0-39.5-3.9-57-11.8-2.5-.9-5.7-2.9-9.2-6.1-.9-.4-1.8-.8-2.8-1.3s-2.2-.9-3.3-1.3c-2.7-.8-4.6-1.3-5.8-1.2\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst redditBoxIcon = {\n    name: 'reddit-box',\n    content: '<path d=\"M111.1 244.9c-5.2 6.1-9.6 12.7-13.2 19.9-2.1-1.5-3.9-3.6-5.5-6.5-2.3-2.6-3.4-5.9-3.4-9.8v-1.4c.5-5.8 3-10.8 7.7-15.1 5.3-4 10.9-6.3 16.8-7h2.4c2.4 0 4.6.3 6.6 1 2 .6 4.1 1.3 6.3 1.9a124.3 124.3 0 0 0-17.7 17m252.1-94.3c4.4 3.7 9.1 5.4 14.4 5.4h1.4c5.3 0 10-1.8 14.2-5.4 4-3.7 6.3-8 6.9-13.1v-1q0-8.25-6.9-13.8c-3.8-3.8-8.3-5.6-13.6-5.7h-1.1c-2.2 0-4.1.1-5.5.5-4.6.9-8.4 3.2-11.2 6.6-3.3 3.4-4.8 7.4-4.8 12.4v1c0 5.1 2 9.5 6.2 13.1M394.5 279c2.3 6.1 3.5 12.4 3.5 19v5.7c0 1.8-.3 3.4-1 5-2.1 9.3-6.4 18-13 26.2-5.6 7.5-12.8 14.4-21.6 20.6-13.1 8.8-27.3 15.5-42.7 20.2s-31 7.6-47 8.9c-2.7.4-5.5.5-8.1.5h-8.1c-16 0-31.8-1.6-47.4-4.9s-30.2-8.5-44-15.7l-3.4-1.9-3.6-1.7c-9.8-6.2-18.3-13.1-25.8-20.6-7.7-8.6-12.9-18-15.8-28.1-1.3-3.9-1.9-8.4-1.9-13.7 0-13.6 4.2-25.7 12.7-36.3 8.3-10.6 18.3-19.3 30.1-26.4 11.8-7 24.2-12.4 37.3-16.1 19.6-5.7 40.2-8.7 61.8-8.7h.1q11.25 0 23.1 1.2c11.85 1.2 15.6 2 23.1 3.6l7.4 1.9 7.7 1.9c13.1 3.7 25.6 9 37.4 15.8 11.9 6.9 21.8 15.6 30 26.2 3.8 5.6 6.9 11.4 9.2 17.4m-205.9 21.9c2.3.9 4.7 1.4 7.5 1.4 6.3 0 12-2.1 16.9-6.3 5.3-4.3 8-9.7 8-15.9v-1.5c0-5.9-2.5-11-7.5-15.2-5.3-4.3-11.2-6.6-17.4-6.6-1.9 0-3.5.1-4.7.5-4.3.6-8.2 2.3-11.5 5.2-3.3 2.8-5.5 6.3-6.9 10.3-.7.9-1 2-1 3.1v3.1c0 5.3 1.4 10 4.3 14 3.3 4 7.3 6.7 12.3 7.9m139.5 38.2c0-1-.3-2.4-1-4.3-1-2.4-2.6-4.1-4.7-4.9-2.5-1.3-4.6-1.9-6.4-1.9-1.9 0-4 .5-5.9 1.5-17.2 9.6-36 14.5-56.2 14.7-15.1 0-29.3-3-42.2-8.8-1.9-.6-4.2-2.2-6.8-4.6-.6-.3-1.3-.6-2.1-1s-1.6-.6-2.4-1c-1.9-.6-3.4-1-4.3-1v.1c-.9 0-2.4.4-4.3 1h-.5c-1.9.6-3.7 2-5.4 4.3-.9 1.6-1.4 3.6-1.4 5.9 0 1.9.5 3.9 1.4 5.9 1 1.6 2.4 2.9 4.3 3.8 18.2 11.4 38.1 17.1 59.8 17.1h3.6c10.5 0 20.6-1 30.4-3s19.3-5.1 28.5-9.4c1.2-.6 2.6-1.3 4.1-1.9 1.4-.6 3-1.4 4.5-2.4 1.6-.7 3-1.6 4.1-2.9 1.6-1.6 2.5-3.3 2.9-5-.2-.4 0-1.2 0-2.2m12.2-59.2q0-3.3-1.5-7.2c-1.2-4.6-4.2-8.4-8.8-11.5q-6.75-3.9-14.1-3.9c-2.7 0-5.5.5-8.4 1.4-4.6 1.6-8.4 4.4-11.3 8.4-3 3.5-4.6 7.8-4.6 12.7 0 1.8.2 3.1.4 4.1v.5c1 5.6 3.8 9.8 8.4 12.7 4.6 3.5 9.9 5.3 15.8 5.3 1.9 0 4.1-.5 6.7-1.4h.7c4.2-.8 8.2-3.4 12.2-7.7 3-3.9 4.5-8.4 4.5-13.4M480 64v384c0 17.6-14.4 32-32 32H64c-17.6 0-32-14.4-32-32V64c0-17.6 14.4-32 32-32h384c17.6 0 32 14.4 32 32m-32.3 181c-.9-10.3-5.2-19.1-12.4-26.6-7.4-7.6-16.2-12.7-26-15.4h-.1c-4.5-1-8.7-1.4-12.7-1.4-10.6-.2-19.8 2.4-28 7.7-1.7.8-3.9 2.1-6.5 4.1-.6-.6-1.3-1-1.9-1l-.5-.5c-13.7-7.2-28-12.7-43.1-16.3-15.1-3.7-30.4-6-46.1-7 0-5.8.5-25.5 1.4-31.3s2.8-11.1 5.6-16.1c3.6-7.2 10.1-11.3 19.1-12.3h4.3c5.6 0 11 .8 16.3 2.3s10.6 3.2 15.9 5.2v1.5c0 5.6 1.1 10.8 3.4 15.3 2.2 4.5 5.2 8.7 8.8 12.5 7.7 7.8 17.1 12.3 28.4 13.3h5.5c11.2 0 21.1-3.6 30.1-10.9 4-3.3 7.3-7.2 9.8-11.7 2.6-4.4 4.2-9.4 4.8-15.1.3-1 .5-2.4.5-4.3.2-8.3-2.4-16.2-7.7-23.4-5.3-6.9-11.9-11.9-19.7-14.7h-.5c-4.9-2.3-10.7-3.4-17.3-3.4q-8.1 0-17.1 2.4h-.4c-9.7 3.8-17.1 9.7-22.5 17.6-13.3-5.4-26.5-8-39.5-8-4.9 0-9.9.5-14.9 1.4h.9c-6.6 1.6-12.4 4.4-17.5 8.3s-9.3 8.7-12.5 14.3c-4 6.5-6.6 23.5-7.9 30.9-1.3 7.3-1.9 18.7-1.9 26-15.7 1.1-31.3 3.4-47.2 6.8-15.7 3.5-30.4 8.9-44.2 16.4-1 .3-1.8.7-2.6 1s-1.5.6-2.2 1c-4.7-3.4-9.7-6-15.4-7.9-5.9-1.9-12.1-2.9-18.6-2.9h-4.3c-6.5 0-12.6 1.2-18.1 3.6s-10.6 5.8-15.2 10.1c-4.3 4.3-7.8 9.2-10.4 14.5-2.7 5.4-3.9 11-3.9 16.9.3 8.1 3.3 16 8.9 23.5 4.3 6.2 10.4 11.5 18.2 15.8-.4 1.6-.6 3.3-.7 5.1s-.2 3.6-.2 5.2c0 7.5 1.1 15 3.4 22.6 2.3 7.5 5.5 14.6 9.8 21.1 8.1 12.5 18.4 22.9 30.7 31.2s25.3 15.1 39.1 20.4q19.65 7.5 40.5 11.1c13.9 2.5 28.1 3.7 42.4 3.7 9.4 0 18.8-.6 28.1-1.8 9.4-1.2 18.8-2.8 28.2-4.7 17.4-4.1 34.1-10.4 50.2-18.8s29.5-19.5 40.8-33.2c12.8-15.4 19.2-32.6 19.2-51.7 0-1.9-.1-3.8-.3-5.6s-.4-3.6-.7-5.1c7.5-3.7 13.7-8.9 18.7-15.8 5.3-7.2 7.9-15.2 7.9-24V245zm-37.1-17q-7.05-3.3-14.1-3.3c-4.6 0-8.9.9-12.9 2.9 6.5 5.3 12.5 10.9 17.7 17q7.95 9.15 13.2 20.4 3.3-2.85 6-6.9c1.9-3.2 2.9-6.8 2.9-10.8 0-2.9-.9-6-2.4-9.4-2.3-4-5.8-7.3-10.4-9.9\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst stumbleUponIcon = {\n    name: 'stumble-upon',\n    content: '<path d=\"m288.1 256 26.8 8.4L352 256v64c1.1 18.9 12.8 32 32 32s30.9-13.1 32-32v-64h64v64s0 96-96 96-96-96-96-96zm26.8-23.2L288 224v-32s0-32-32-32-32 32-32 32v128s0 96-96 96-96-96-96-96v-64h64v64c1.1 18.9 12.8 32 32 32 19.1 0 30.9-13.2 32.1-32h-.1V192s0-96 96-96 96 96 96 96v32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst stumbleUponBoxIcon = {\n    name: 'stumble-upon-box',\n    content: '<path d=\"M64 32c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32zm191.5 96.3c82.5 0 82.5 87.3 82.5 87.3v8.4l-31.9 8-23.1-8v-8.6s0-29.2-27.5-29.2-27.5 29.2-27.5 29.2v81.5s0 87-82 87-82-87-82-87V256h55v41h-.9c.9 17.2 11 29.1 27.5 29.1s26.6-12 27.6-29.1h-.2v-81.4s0-87.3 82.5-87.3M283.1 256l23 7.6L338 256v40.7c.9 17.2 11 29.1 27.5 29.1s26.6-11.9 27.5-29.1V256h55v40.7s0 87.3-82.5 87.3-82.5-87.3-82.5-87.3z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tellAFriendIcon = {\n    name: 'tell-a-friend',\n    content: '<path d=\"M383.5 64c-31.7 0-57.5 24-57.5 53.5v2.1c0 14.9-12.2 30.3-28.5 33.3-5.5.5-9.9 4.8-9.9 10.1 0 2.6 1.1 5 2.9 6.8 13.3 10.5 28.3 22.2 92.5 22.2s80.1-11.7 93.3-22.2c1.8-1.8 2.9-4.1 2.9-6.8 0-5.3-4.3-9.6-9.9-10.1-16.3-3-28.5-18.4-28.5-33.3v-2.1c0-29-25-52.7-55.9-53.5h-.5.2zc.2 0 0 0 0 0m.6 0h.9zM128 224c-64.9 0-96 70-96 128v96h192v-96c0-52.7-34-128-96-128m256 0c-96 0-96 224-96 224h192s0-224-96-224m-192-96c0 35.3-28.7 64-64 64s-64-28.7-64-64 28.7-64 64-64 64 28.7 64 64\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tellAFriendBoxIcon = {\n    name: 'tell-a-friend-box',\n    content: '<path d=\"M448 32H64c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32M144 96c26.5 0 48 21.5 48 48s-21.5 48-48 48-48-21.5-48-48 21.5-48 48-48m80 320H64v-96c0-48.3 26-96 80.2-96 51.7 0 79.8 52.1 79.8 96zm223.6 0H288s0-192 80-192 79.6 192 79.6 192m-2-240.7c-11.1 7.9-24.3 16.7-78 16.7s-66.3-8.8-77.3-16.7c-1.5-1.3-2.4-3.1-2.4-5.1 0-4 3.6-7.2 8.2-7.5 13.6-2.3 23.8-13.8 23.8-25v-1.6c0-22.1 21.4-40.1 48-40.1h.9c26.1.4 47.1 18.2 47.1 40.1v1.6c0 11.2 10.2 22.7 23.8 25 4.6.4 8.2 3.6 8.2 7.5.1 2-.8 3.8-2.3 5.1\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tumblrIcon = {\n    name: 'tumblr',\n    content: '<path d=\"M192.6 32c-2.8 23.1-8.1 42.1-15.7 57.1s-17.7 27.8-30.3 38.5-33 18.9-50.6 24.6V224h61v148.7c0 20.5 2.1 36.1 6.4 46.9s12 21 23.1 30.6c11.1 9.5 25 16.9 40.7 22.1s27.8 7.7 48.3 7.7q27 0 50.4-5.4c15.5-3.6 39.1-10.9 58.2-19.9V384c-22.3 14.8-51 22.9-73.7 22.9-12.8 0-24-3-33.9-8.9-7.5-4.4-14.3-12-17-19.2-2.8-7.4-2.4-22.3-2.4-48.2V224h96v-96h-96V32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tumblrBoxIcon = {\n    name: 'tumblr-box',\n    content: '<path d=\"M448 32H64c-17.6 0-32 14.4-32 32v384c0 17.6 14.4 32 32 32h384c17.6 0 32-14.4 32-32V64c0-17.6-14.4-32-32-32m-96.1 366c-12.7 6.4-28.5 11.6-38.9 14.2s-21.6 3.9-33.7 3.9c-13.7 0-21.8-1.9-32.3-5.5-10.5-3.7-19.9-9-27.3-15.8-7.4-6.9-12.6-14.1-15.4-21.8-2.9-7.7-4.3-18.9-4.3-33.5V224h-40v-42.2c11.7-4.1 25.3-9.9 33.6-17.6 8.4-7.6 15.1-16.8 20.2-27.5s8.6-24.3 10.5-40.8H267v64h53v64h-53v85.2c0 18.6-.2 29.3 1.6 34.5s6.4 10.7 11.4 13.8c6.6 4.2 14.2 6.4 22.7 6.4 15.1 0 34.3-5.9 49.3-16.5V398z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst twitterIcon = {\n    name: 'twitter',\n    content: '<path d=\"M342 64c-50.8 0-91.9 41.2-91.9 91.9q0 10.8 2.4 21c-76.4-3.8-144.1-40.4-189.4-96-7.9 13.6-12.4 29.3-12.4 46.2 0 31.9 16.2 60 40.9 76.5-15.1-.5-29.2-4.6-41.6-11.5v1.2c0 44.5 31.7 81.7 73.7 90.1-7.7 2.1-15.8 3.3-24.2 3.3-5.9 0-11.7-.6-17.3-1.6 11.7 36.5 45.6 63.1 85.9 63.8-31.7 24.5-71.3 39.2-114.3 39.2-7.4 0-14.8-.4-22-1.3 40.7 26 89 41.3 140.9 41.3 169.1 0 261.5-140.1 261.5-261.5 0-4-.1-8-.2-11.9 18-12.9 33.5-29.1 45.9-47.6-16.5 7.3-34.2 12.3-52.8 14.5 19-11.4 33.6-29.4 40.4-50.8-17.8 10.5-37.4 18.2-58.4 22.3C392.3 75.1 368.4 64 342 64\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst twitterBoxIcon = {\n    name: 'twitter-box',\n    content: '<path d=\"M448 32H64c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32m-64.7 159.7c.1 2.8.2 5.6.2 8.4 0 85.4-66 183.9-186.8 183.9-37.1 0-71.6-10.7-100.6-29.1 5.1.6 10.4.9 15.7.9 30.8 0 59.1-10.4 81.5-27.7-28.7-.5-53-19.2-61.3-44.9 4 .7 8.1 1.2 12.4 1.2 6 0 11.8-.8 17.3-2.3-30-5.9-52.7-32-52.7-63.3v-.8c8.9 4.8 19 7.7 29.7 8.1-17.6-11.6-29.2-31.4-29.2-53.8 0-11.8 3.2-22.9 8.9-32.5 32.4 39.1 80.8 64.8 135.3 67.5-1.1-4.7-1.7-9.7-1.7-14.7 0-35.7 29.4-64.6 65.6-64.6 18.9 0 36 7.8 47.9 20.4 14.9-2.9 29-8.3 41.7-15.7-4.9 15.1-15.3 27.7-28.9 35.7 13.3-1.6 26-5.1 37.7-10.2-8.9 13.1-19.9 24.5-32.7 33.5\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst yammerIcon = {\n    name: 'yammer',\n    content: '<path d=\"M263.9 32.1c-10.1-.2-19.6 6.8-23.2 18-.1.4-.3 1-.5 1.9 0 .1-.1.3-.1.4-8 25.9-73.6 235.6-73.6 235.6h-1.2l-84-239.2C75.6 35.3 61.6 28.7 48.9 34c-13 5.5-19.7 21.5-15.4 36.2 10.1 29 105.8 290.4 105.8 290.4l-6.3 15.6c-10.6 32.1-31.6 53.8-63.2 53.8-3.1 0-13.7-.7-14.4-.8-10.2-.6-19.7 6.9-22.5 18.4-3.1 13.1 3.7 26.6 15.3 30.4 8.4 1.6 17 2.2 24.7 2.2 58.3 0 86.8-37.7 106-92.8 0 0 101-300.5 105.8-312.9.8-2 1.4-3.7 2-5.4l-.1-.1c.1-.4.3-.7.4-1.1 4.1-14.5-3-29.9-15.8-34.5-2.5-.8-4.9-1.3-7.3-1.3M383.5 96c-6.3.1-13.3 2.5-20.4 9.6-21.5 21.6-43 86.4-43 86.4s64.6-21.6 86.4-43.5-.4-42.8-.4-42.8-9.7-9.8-22.6-9.7m64.6 128c-32 0-96 32-96 32s64 32 96.4 32 31.5-32 31.5-32 .1-32-31.9-32m-128 96s21.5 64.8 43 86.4 43-.1 43-.1 22.1-21 .4-42.8c-21.8-21.9-86.4-43.5-86.4-43.5\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst yammerBoxIcon = {\n    name: 'yammer-box',\n    content: '<path d=\"M448 32H64c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32M332.5 148.6c15.4-15.4 30.7 0 30.7 0s15.8 15 .3 30.6-61.7 31.1-61.7 31.1 15.4-46.3 30.7-61.7m-54.7-26.4c-.1.3-.2.5-.3.8h.1c-.4 1.2-.9 2.4-1.4 3.8-3.5 8.8-75.5 223.1-75.5 223.1-13.7 39.3-34 66.2-75.6 66.2-5.5 0-11.6-.4-17.6-1.6-8.3-2.7-13.2-12.3-10.9-21.7 2-8.2 8.8-13.6 16.1-13.2.5.1 8.1.6 10.3.6 22.6 0 37.5-15.5 45.1-38.3l4.5-11.1s-68.2-186.3-75.5-207c-3-10.5 1.7-22 11-25.9 9.1-3.8 19.1.9 23.2 10.6l.8 2.4L191.3 279h.9s46.7-149.5 52.5-168c0-.1 0-.2.1-.3.2-.6.3-1.1.4-1.3 3.2-9.8 12.7-15.1 21.6-11.9 8.9 3.4 14 14.4 11 24.7m85.4 241.2s-15.3 15.5-30.7 0-30.8-61.7-30.8-61.7 46.1 15.4 61.7 31.1-.2 30.6-.2 30.6m30.3-84.6c-23.2 0-68.9-22.8-68.9-22.8s45.7-22.8 68.6-22.8S416 256 416 256s.7 22.8-22.5 22.8\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst behanceIcon = {\n    name: 'behance',\n    content: '<path d=\"M448 128H304V96h144zM245.335 254.873c7.09 11.573 10.665 25.65 10.665 42.197 0 17.067-4.069 32.379-12.176 45.903-5.178 9.005-11.62 16.58-19.358 22.691-8.723 7.022-18.988 11.833-30.855 14.467C181.744 382.732 168.89 384 155.02 384H32V96h131.927c33.321.504 56.901 10.744 70.803 30.705 8.323 12.24 12.515 26.869 12.515 43.936 0 17.588-4.192 31.729-12.607 42.425-4.716 5.982-11.683 11.443-20.868 16.385 13.963 5.364 24.474 13.817 31.565 25.422m-158.9-45.318H152.8c11.867 0 21.484-2.406 28.913-7.152 7.367-4.763 11.097-13.215 11.097-25.292 0-13.426-4.901-22.285-14.672-26.609q-12.67-4.486-32.273-4.486h-59.43zm111.923 83.452c0-15.019-5.795-25.292-17.385-30.917-6.504-3.121-15.597-4.746-27.31-4.876H86.435v76.787h66.303c11.836 0 21.084-1.69 27.68-5.071 11.96-6.275 17.94-18.238 17.94-35.923M479.932 288H330.824c.813 21.182 7.938 34.778 21.409 43.322 8.157 5.287 18.002 7.931 29.503 7.931 12.189 0 22.096-3.224 29.722-9.704 4.157-3.482 7.813-8.318 11.001-14.541h54.693c-1.438 12.541-8.095 25.276-19.846 38.204C438.959 373.748 413.269 384 380.266 384c-27.253 0-51.286-8.64-72.132-25.985-20.846-17.28-31.222-45.522-31.222-84.532 0-36.624 9.376-64.672 28.19-84.21C323.917 169.785 348.294 160 378.328 160c17.814 0 33.847 3.288 48.129 9.898 14.282 6.593 26.096 17.023 35.378 31.24 8.407 12.573 13.876 27.114 16.346 43.685 1.438 9.704 2.033 24.929 1.751 43.177m-55.567-37.696c-.969-14.669-5.72-25.759-14.283-33.4-8.532-7.576-19.095-11.348-31.753-11.348-13.72 0-24.377 3.998-31.94 12.058-7.563 8.028-12.314 18.957-14.282 32.691z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst behanceBoxIcon = {\n    name: 'behance-box',\n    content: '<path d=\"M167.543 228.938h-56.884v-56.479h50.939q16.803 0 27.663 3.988c8.376 3.844 12.576 11.718 12.576 23.652 0 10.735-3.197 18.249-9.511 22.482-6.368 4.219-14.612 6.357-24.783 6.357m220.527 11.836c-7.313-6.494-16.367-9.727-27.217-9.727-11.76 0-20.895 3.427-27.378 10.335-6.483 6.881-10.555 16.249-12.242 28.021h79.079c-.83-12.573-4.902-22.079-12.242-28.629m-196.379 34.862c-5.575-2.774-13.369-4.219-23.409-4.335h-57.624v68.255h56.831c10.146 0 18.072-1.503 23.726-4.508 10.251-5.577 15.377-16.211 15.377-31.931 0-13.35-4.967-22.482-14.901-27.481M480 64v384c0 17.664-14.336 32-32 32H64c-17.664 0-32-14.336-32-32V64c0-17.664 14.336-32 32-32h384c17.664 0 32 14.336 32 32m-176 96h112v-32H304zm-48 146.729c0-14.709-3.065-27.221-9.142-37.509-6.078-10.316-15.087-17.829-27.056-22.597 7.873-4.392 13.845-9.247 17.887-14.564 7.213-9.507 10.806-22.077 10.806-37.711 0-15.171-3.593-28.175-10.727-39.055-11.916-17.743-32.128-26.846-60.689-27.293H64v256h105.445c11.889 0 22.907-1.127 33.079-3.439 10.172-2.341 18.97-6.618 26.447-12.859 6.632-5.433 12.154-12.166 16.592-20.17C252.512 335.51 256 321.899 256 306.729m190.442-42.024c-2.117-14.204-6.804-26.667-14.01-37.444-7.956-12.187-18.082-21.126-30.324-26.777-12.242-5.665-25.985-8.484-41.254-8.484-25.744 0-46.638 8.387-62.765 25.091-16.127 16.746-24.163 40.788-24.163 72.18 0 33.437 8.894 57.644 26.762 72.456C318.555 376.594 339.155 384 362.514 384c28.288 0 50.308-8.788 66.033-26.391 10.072-11.081 15.778-26.86 17.011-37.609h-46.879c-1.178 6-2.512 10.667-9.429 17.327-6.536 5.555-15.028 8.318-25.476 8.318-9.858 0-18.297-2.266-25.288-6.798-11.546-7.323-17.654-18.977-18.35-37.133h127.807c.24-15.641-.269-28.691-1.501-37.009\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst dribbbleIcon = {\n    name: 'dribbble',\n    content: '<path d=\"M256 32C132.469 32 32 132.469 32 256c0 123.5 100.469 224 224 224 123.5 0 224-100.5 224-224 0-123.531-100.5-224-224-224m148.094 103.281c26.625 32.562 42.781 74.031 43.188 119.188-6.312-1.312-69.562-14.156-133.219-6.156a851 851 0 0 0-4.125-9.875c-3.969-9.312-8.25-18.594-12.688-27.719 70.75-28.875 102.812-69.969 106.844-75.438M256 64.969c48.594 0 93.031 18.219 126.812 48.188-3.438 4.906-32.25 43.625-100.281 69.125-31.344-57.594-66.094-104.938-71.375-112A191 191 0 0 1 256 64.969m-81.344 18.156c5.031 6.938 39.219 54.312 70.938 110.656-89.5 23.781-168.344 23.438-176.906 23.312 12.406-59.374 52.437-108.718 105.968-133.968m-110 173.156c0-1.969.031-3.906.094-5.844 8.375.156 101.094 1.375 196.657-27.219 5.469 10.719 10.688 21.594 15.5 32.469a193 193 0 0 0-7.531 2.281c-98.688 31.875-151.188 118.812-155.531 126.25-30.564-33.937-49.189-78.812-49.189-127.937M256 447.594c-44.25 0-85-15.094-117.438-40.375 3.438-7.031 42.156-81.875 150.094-119.5.406-.125.812-.281 1.25-.406 26.875 69.812 37.969 128.312 40.812 145.094-22.968 9.781-48.218 15.187-74.718 15.187m106.875-32.719c-1.938-11.625-12.125-67.625-37.156-136.406 59.969-9.594 112.625 6.125 119.188 8.188-8.532 53.218-39.095 99.218-82.032 128.218\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst dribbbleBoxIcon = {\n    name: 'dribbble-box',\n    content: '<path d=\"M448 32H64c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32M256 448c-106 0-192-86-192-192S150 64 256 64s192 86 192 192-86 192-192 192m28-164.8c-82.9 28.9-118.1 83.4-126.7 98.7 27.2 21.3 61.5 34.1 98.7 34.1 22.5 0 43.9-4.6 63.3-13-3.3-18.4-13.1-65.2-34.2-120.1-.4 0-.8.2-1.1.3m-95.5-172.3c-44.9 20.9-78.5 62.1-89 111.8 17.1-.1 78.6-1.7 147.6-20-24.3-43.2-50.3-80.1-58.6-91.8m79 146.8c2.1-.7 4.3-1.3 6.5-2-4.1-9.3-8.6-18.6-13.3-27.8-74.1 22.2-146.1 23.4-164.6 23.4 0 1.6-.1 3.1-.1 4.7 0 40.8 15.3 78 40.4 106.3 10.5-16.7 54.6-79.9 131.1-104.6m94.9-121.1C334.2 111.3 296.9 96 256 96c-12.4 0-24.5 1.4-36 4.1 8.7 11.9 34.9 48.8 58.8 92.7 50.7-19 76-46.7 83.6-56.2m-46.6 138.7C335 328 344 371.9 346.9 387.8c35.2-24.3 60.2-62.5 67.2-106.6-13.2-3.7-53.4-13.1-98.3-5.9m-24.4-58.1c3.8 7.8 7.5 15.8 10.9 23.8 1.2 2.8 2.4 5.7 3.5 8.5 48-6 95.7 1.8 110.2 4.5-.5-37.2-13.7-71.4-35.4-98.3-8.4 10-36.1 39.8-89.2 61.5\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst rssIcon = {\n    name: 'rss',\n    content: '<path d=\"M151.4 420c0 32.9-26.7 59.5-59.7 59.5S32 452.9 32 420s26.7-59.5 59.7-59.5 59.7 26.7 59.7 59.5M32 184.3v85.9c56 0 108.5 21.8 148.1 61.3 39.6 39.6 61.4 92.3 61.4 148.5h86.2C327.6 317 195 184.3 32 184.3M32 32v85.9c199.4 0 361.6 162.5 361.6 362.1h86.2C479.8 233 278.9 32 32 32\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst rssBoxIcon = {\n    name: 'rss-box',\n    content: '<path d=\"M448 32H64c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32M115.2 447.6c-28.3 0-51.2-22.8-51.2-51s22.9-51 51.2-51 51.2 22.8 51.2 51-23 51-51.2 51m128.8.4c0-48.1-18.7-93.3-52.8-127.3-34-33.9-79.2-52.6-127.2-52.6v-73.6c140.1 0 254.1 113.7 254.1 253.5zm129.9 0c0-171.2-139-310.4-309.9-310.4V64c211.6 0 383.8 172.3 383.8 384z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst vimeoIcon = {\n    name: 'vimeo',\n    content: '<path d=\"M479.783 152.805c-2 43.26-32.469 102.444-91.344 177.477C327.532 408.792 275.969 448 233.782 448c-26.094 0-48.188-23.873-66.25-71.742-12.063-43.896-24.094-87.854-36.157-131.657-13.407-47.901-27.782-71.835-43.188-71.835-3.344 0-15.032 6.985-35.125 20.955L32 166.744c22.094-19.201 43.844-38.526 65.282-57.773 29.407-25.316 51.5-38.556 66.25-39.938 34.782-3.353 56.219 20.287 64.282 70.78 8.625 54.559 14.719 88.475 18.032 101.777 10.031 45.2 21.093 67.769 33.156 67.769 9.344 0 23.375-14.591 42.157-43.818 18.75-29.29 28.782-51.548 30.125-66.868 2.656-25.27-7.375-37.827-30.125-37.827-10.719 0-21.782 2.251-33.157 6.969C310.126 96.647 352.283 62.08 414.533 64.082c46.156 1.289 67.906 30.935 65.25 88.723\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst vimeoBoxIcon = {\n    name: 'vimeo-box',\n    content: '<path d=\"M448 32H64c-17.664 0-32 14.336-32 32v384c0 17.664 14.336 32 32 32h384c17.664 0 32-14.336 32-32V64c0-17.664-14.336-32-32-32m-.186 140.119c-1.714 37.08-27.831 87.809-78.295 152.123-52.206 67.294-96.402 100.901-132.563 100.901-22.366 0-41.304-20.462-56.786-61.493-10.339-37.625-20.652-75.303-30.991-112.849-11.491-41.058-23.813-61.573-37.018-61.573-2.866 0-12.884 5.987-30.107 17.961L64 184.066c18.938-16.458 37.581-33.022 55.956-49.519 25.206-21.7 44.143-33.048 56.786-34.232 29.813-2.874 48.188 17.389 55.099 60.668 7.393 46.765 12.616 75.835 15.456 87.237 8.598 38.743 18.08 58.087 28.419 58.087 8.009 0 20.036-12.506 36.134-37.559 16.071-25.106 24.67-44.184 25.822-57.315 2.277-21.66-6.321-32.423-25.822-32.423-9.188 0-18.67 1.929-28.42 5.974 18.964-61.001 55.099-90.63 108.456-88.914 39.562 1.105 58.205 26.516 55.928 76.049\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst youtubeIcon = {\n    name: 'youtube',\n    content: '<path d=\"M475.5 165s-4.4-31.4-17.8-45.2c-17-18.1-36.1-18.2-44.9-19.3C350.1 96 256.1 96 256.1 96h-.2s-94 0-156.7 4.6c-8.8 1.1-27.8 1.2-44.9 19.3C40.9 133.7 36.5 165 36.5 165S32 201.9 32 238.7v34.5c0 36.8 4.5 73.6 4.5 73.6s4.4 31.4 17.8 45.2c17 18.1 39.4 17.5 49.4 19.4C139.5 414.9 256 416 256 416s94.1-.1 156.8-4.7c8.8-1.1 27.9-1.2 44.9-19.3 13.4-13.8 17.8-45.2 17.8-45.2s4.5-36.8 4.5-73.6v-34.5c0-36.8-4.5-73.7-4.5-73.7M192 336V176l144 80z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst youtubeBoxIcon = {\n    name: 'youtube-box',\n    content: '<path d=\"M448 32H64c-17.664 0-32 14.336-32 32v384c0 17.664 14.336 32 32 32h384c17.664 0 32-14.336 32-32V64c0-17.664-14.336-32-32-32m0 237.749c0 29.454-3.835 58.909-3.835 58.909s-3.752 25.082-15.265 36.128c-14.602 14.497-30.97 14.569-38.476 15.417C336.689 383.885 256 384 256 384s-99.838-.864-130.559-3.656c-8.546-1.519-27.734-1.061-42.341-15.558-11.513-11.045-15.26-36.128-15.26-36.128S64 299.203 64 269.749v-27.614c0-29.454 3.84-58.909 3.84-58.909s3.747-25.082 15.26-36.128c14.607-14.497 30.969-14.569 38.476-15.417C175.313 128 255.917 128 255.917 128h.167s80.606 0 134.341 3.682c7.506.849 23.873.92 38.476 15.417 11.513 11.045 15.265 36.128 15.265 36.128S448 212.681 448 242.136zM192 176l144 80-144 80z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst folderIcon = {\n    name: 'folder',\n    content: '<path d=\"m242.8 128-32-32H96v288h320V192H128v-32h288c17.7 0 32 14.3 32 32v192c0 17.7-14.3 32-32 32H96c-17.7 0-32-14.3-32-32V96c0-17.7 14.3-32 32-32h128l64 64\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst folderOpenIcon = {\n    name: 'folder-open',\n    content: '<path d=\"M425.6 160h-246c-17.6 0-37.2 14.4-43.6 32L64 384V96h114.8l32 32H256l-64-64H64c-17.7 0-32 14.3-32 32v288c0 17.7 14.3 32 32 32h268.4c17.6 0 37.2-14.4 43.6-32l70-192c6.4-17.6-2.8-32-20.4-32M346 373.1c-2 5.5-10.1 10.9-13.6 10.9H98.1L166 202.9c2-5.5 10.1-10.9 13.6-10.9h232.3z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst folderAddIcon = {\n    name: 'folder-add',\n    content: '<path d=\"M96 160h288c17.7 0 32 14.3 32 32v64h-32v-64H96zm352 224h-32v-64h-32v64h-64v32h64v64h32v-64h64v-32zM64 96h114.8l32 32H256l-64-64H64c-17.7 0-32 14.3-32 32v288c0 17.7 14.3 32 32 32h192v-32H64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst folderUpIcon = {\n    name: 'folder-up',\n    content: '<path d=\"M96 160h288c17.7 0 32 14.3 32 32v64l-32 32v-96H96zM64 96h114.8l32 32H256l-64-64H64c-17.7 0-32 14.3-32 32v288c0 17.7 14.3 32 32 32h192l32-32H64zm336 240-80 80h64v64h32v-64h64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst folderMoreIcon = {\n    name: 'folder-more',\n    content: '<path d=\"M64 384h96v32H64c-17.7 0-32-14.3-32-32V96c0-17.7 14.3-32 32-32h128l64 64h-45.2l-32-32H64zm192-32c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32m160-64v-96c0-17.7-14.3-32-32-32H96v32h288v96zm32 64c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32m-96 0c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst aggregateFieldsIcon = {\n    name: 'aggregate-fields',\n    content: '<path d=\"M128 128c-17.7 0-32 14.3-32 32v160c0 17.7 14.3 32 32 32h256c32 0 32-32 32-32H128zm-64 64c-17.7 0-32 14.3-32 32v160c0 17.7 14.3 32 32 32h256c32 0 32-32 32-32H64zM448 64H192c-17.6 0-32 14.4-32 32v160c0 17.6 14.4 32 32 32h256c17.6 0 32-14.4 32-32V96c0-17.6-14.4-32-32-32m1 192s0 .1 0 0l-256.9.1-.1-.1V96.1l.1-.1H448v160z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst fileIcon = {\n    name: 'file',\n    content: '<path d=\"M352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128zm64 416H96V64h224v96h96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst fileAddIcon = {\n    name: 'file-add',\n    content: '<path d=\"M512 416h-64v64h-32v-64h-64v-32h64v-64h32v64h64zM96 448V64h224v96h96v96h32V128l-96-96H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h224v-32\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst fileTxtIcon = {\n    name: 'file-txt',\n    content: '<path d=\"M352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128zm64 416H96V64h224v96h96zm-32-96v32H128v-32zM256 160v32H128v-32m256 64v32H128v-32zm-256 96v-32h224v32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst fileCsvIcon = {\n    name: 'file-csv',\n    content: '<path d=\"M178.6 224c-10 0-18.9 2.1-26.7 6.2-7.7 4.2-13.7 10.1-17.9 17.7q-6.3 11.4-6.3 26.1c0 9.1 1.9 17.1 5.7 24.1s9.2 12.3 16.4 16.1 15.7 5.7 25.6 5.7c10 0 18.9-1.4 26.6-4.1v-24.9c-6.9 3.5-13.8 5.2-20.5 5.2-7.3 0-13.2-2.1-17.6-6.4s-6.6-10.1-6.6-17.6 2.2-13.4 6.6-17.7 10.4-6.5 18-6.5c3.7 0 7.3.4 10.9 1.3s6.7 2.1 9.2 3.6V227c-7.6-2-15.3-2.9-23.4-3m73.8.1c-11.5 0-20.6 2.7-27.5 8.1-6.8 5.4-10.2 12.5-10.2 21.5 0 12.8 7.5 22.1 22.4 27.8 4.6 1.7 7.8 3.1 9.5 4.1s3 2 3.8 3.2 1.2 2.5 1.2 4c0 2.1-.8 3.7-2.5 4.8s-4.1 1.7-7.1 1.7c-4.1 0-8.4-.9-13.2-2.6-4.7-1.8-9-4-12.9-6.9V315c8.1 3.3 17 4.9 26.7 4.9 8.4 0 15.5-1.1 21.5-3.4 6-2.2 10.6-5.7 13.9-10.2 3.3-4.6 5-9.9 5-16.1 0-6.3-2-11.8-6-16.4s-10.8-8.9-20.4-12.8c-4.9-2-8.1-3.7-9.6-5s-2.3-2.9-2.3-4.8c0-2 1-3.6 2.8-4.8q2.85-1.8 7.5-1.8c7.6 0 15.2 2.1 23 6.4v-23.6c-4-1.1-7.1-1.8-9.3-2.2s-4.7-.7-7.4-1c-2.7-.1-5.8-.1-8.9-.1m39.8-.1 30 96h31.4l30.4-96h-29.1l-13.8 58.9c-1.1 4.4-1.8 8.1-2 11.1h-.6c-.1-2.4-.8-5.9-1.9-10.7L322.4 224zM352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128zm64 416H96V64h224v96h96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst fileExcelIcon = {\n    name: 'file-excel',\n    content: '<path d=\"m288 304 64 112h-48l-48-84.5-31.5 52.5H256v32h-96l64-112-64-112h48l48 84 48-84h48zm64-272H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128zm64 416H96V64h224v96h96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst fileWordIcon = {\n    name: 'file-word',\n    content: '<path d=\"M352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128zm64 416H96V64h224v96h96zm-32.4-256-6.9 32-41.6 192h-46.7l-32.8-132.5L222.9 416h-46.7l-48.6-224h47.8l24.8 139.2L233.3 192h44.5l33.1 139.2L330.1 224H311v-32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst fileMdbIcon = {\n    name: 'file-mdb',\n    content: '<path d=\"M231.1 192 144 416h80v-32h-25.5l14.8-38h85.6l27.2 70h42L281 192zm-1.5 112 26.5-68 26.4 68zM352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128zm64 416H96V64h224v96h96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst filePptIcon = {\n    name: 'file-ppt',\n    content: '<path d=\"m192 192-32 32h32v192h49v-80h25.6c16.4 0 29.1-1.5 38.2-4.4 14.4-4.5 25.9-12.9 34.4-25.4s12.8-26.6 12.8-42.6q0-23.7-12-41.1c-12-17.4-18.8-20.1-32.4-25.4-10.3-3.7-24.4-5.5-42-5.5M241 225h20.1c11.2.3 20.2 2.1 26.9 5.6 12.1 6.4 23.3 17.6 23.3 33.5 0 17.3-11.9 29-25.2 35-6.7 2.9-15.1 4.4-25.2 3.9H241zM352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128zm64 416H96V64h224v96h96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst filePdfIcon = {\n    name: 'file-pdf',\n    content: '<path d=\"M240.9 160c-7.6 0-13.8 4-15.4 9.9-4.9 18.6.2 46.3 9.4 82.3l-2.4 5.9c-6.6 16.4-14.8 33-22.1 47.6l-1 1.9c-7.7 15.3-14.6 28.4-21 39.4l-6.5 3.5c-.5.3-11.6 6.3-14.3 7.9-22.2 13.6-36.9 28.9-39.4 41.2-.8 3.9-.2 8.9 3.7 11.2l6.3 3.2c2.7 1.4 5.6 2.1 8.6 2.1 15.8 0 34.2-20.2 59.5-65.3 29.2-9.7 62.5-17.8 91.6-22.3 22.2 12.8 49.5 21.7 66.8 21.7q4.65 0 7.8-.9c3.3-.9 6.1-2.8 7.8-5.4 3.4-5.2 4-12.2 3.1-19.5-.3-2.1-2-4.8-3.8-6.6-5.1-5.2-16.5-7.9-33.7-8.1-11.7-.1-25.8.9-40.6 3-6.6-3.9-13.5-8.2-18.8-13.3-14.4-13.8-26.5-32.9-34-53.9.5-2 .9-3.7 1.3-5.4 0 0 8.1-47.1 6-63.1-.3-2.2-.5-2.8-1.1-4.5l-.7-1.9c-2.2-5.2-6.5-10.7-13.3-10.4zm2.7 8.4c5.1 0 8 13.1 8.2 25.4.3 12.3-2.6 20.9-6 27.3-2.9-9.4-4.3-24.3-4.3-34-.1-.1-.3-18.7 2.1-18.7m.4 104.1c8.6 16 19.3 29.5 31.9 40.4 1.6 1.3 3.2 2.7 5 4.1-25.6 5.2-47.7 11.5-67.1 19.1 3.6-6.5 7.2-13.3 11-20.6 9.1-17.7 14.9-31.6 19.2-43m102.2 51.6c9.3 0 12 0 21.1 2.3 9.1 2.4 9.2 7.2 7.6 8.2s-6 1.6-8.9 1.6c-9.2 0-20.7-4.3-36.8-11.4 6.3-.4 11.9-.7 17-.7m-165.4 35.8c-17.7 28.8-29.5 40.3-37.3 43.8 2.9-8.1 14.3-24 31.2-38.1 1.1-.9 3.7-3.4 6.1-5.7M352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128zm64 416H96V64h224v96h96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst filePsdIcon = {\n    name: 'file-psd',\n    content: '<path d=\"M128 160v256h45v-91h21.4q36.3 0 57.9-23.4c14.4-15.6 21.6-36.1 21.6-61.3 0-53.4-25.2-80.2-75.5-80.2H128zm45 44h17.5c23.7 0 35.5 12.8 35.5 38.6 0 26.3-11.8 39.4-35.5 39.4H173zm164.6 51.7c-8.1 0-15.9.9-23.4 2.8s-14.2 4.7-20 8.6-10.4 9-14 15.2c-3.5 6.2-5.2 13.6-5.2 22.1 0 6.2.8 11.7 2.3 16.3 1.5 4.5 3.7 8.6 6.7 12.1 2.9 3.5 6.5 6.5 10.8 9.2s9.3 5.1 15 7.4c3.5 1.5 7.2 2.8 11 4s7.3 2.5 10.5 4 5.8 3.2 7.8 5.2 3 4.5 3 7.5c0 4.7-2.2 8.2-6.7 10.4-4.5 2.3-10.6 3.4-18.5 3.4-6.4 0-13.3-1.2-20.5-3.4s-14.5-5.8-21.7-10.4v38.3c13.4 5.2 27.9 7.7 43.7 7.7 8.5 0 16.8-.9 24.7-2.8 7.9-1.8 15-4.8 21.1-8.8s10.9-9.2 14.7-15.7 5.5-14.2 5.5-23.3c0-6.5-.9-12-2.7-16.8-1.8-4.7-4.4-8.7-7.8-12.2s-7.4-6.5-12.2-9.1c-4.7-2.6-10-5-15.9-7.1-3.2-1.2-6.5-2.4-9.8-3.5s-6.3-2.4-9-3.9-4.9-3.1-6.5-5.2-2.5-4.4-2.5-7.1c0-2.1.5-3.9 1.7-5.6 1.1-1.7 2.6-3 4.6-4s4.2-1.8 6.7-2.4 5.2-.8 8.1-.8c6.1 0 12.3.9 18.8 2.6 6.4 1.7 12.3 4.4 18 7.8v-36.4c-6.3-2-12.8-3.5-19.3-4.5s-13-1.6-19.3-1.6zM352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128zm64 416H96V64h224v96h96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst fileFlashIcon = {\n    name: 'file-flash',\n    content: '<path d=\"M352 191.3V237c-21 .2-46.6-3.2-69.6 45H320v45h-47.9s-37.4 91.1-111.9 90.1c-.6-10 0-30.8 0-45 49.3-7.6 65.4-62.1 76.8-89.4 26.5-82.8 73.9-92 93.4-92.1 5.6 0 21.6.7 21.6.7m96-63.3v320c0 17.7-14.3 32-32 32H96c-17.7 0-32-14.3-32-32V64c0-17.7 14.3-32 32-32h256zm-32 32h-96V64H96v384h320z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst fileConfigIcon = {\n    name: 'file-config',\n    content: '<path d=\"M352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128zm64 416H96V64h224v96h96zm-41.8-124.6-23.7-17.9c1-5.7 1.6-11.5 1.6-17.4 0-6-.5-11.8-1.6-17.4l23.7-17.9c3.7-2.8 4.7-7.9 2.4-11.9l-19.4-33.5c-2.3-4-7.2-5.6-11.5-3.9L318.4 215c-8.8-7.5-19-13.5-30.2-17.4l-3.7-29.5c-.6-4.6-4.5-8-9.1-8h-38.7c-4.6 0-8.5 3.4-9.1 8l-3.7 29.5c-11.1 4-21.3 9.9-30.2 17.4l-27.4-11.6c-4.2-1.8-9.2-.1-11.5 3.9l-19.4 33.5c-2.3 4-1.3 9.1 2.4 11.9l23.7 17.9c-1 5.7-1.6 11.5-1.6 17.4 0 6 .5 11.8 1.6 17.4l-23.7 17.9c-3.7 2.8-4.7 7.9-2.4 11.9l19.4 33.5c2.3 4 7.2 5.6 11.5 3.9l27.4-11.6c8.8 7.5 19 13.5 30.2 17.4l3.7 29.5c.6 4.6 4.5 8 9.1 8h38.7c4.6 0 8.5-3.4 9.1-8l3.7-29.5c11.1-4 21.3-9.9 30.2-17.4l27.4 11.6c4.2 1.8 9.2.1 11.5-3.9l19.4-33.5c2.2-4 1.2-9-2.5-11.8M256 336c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst fileAscxIcon = {\n    name: 'file-ascx',\n    content: '<path d=\"M384 224h-96v-32h96zm0 160h-96v-32h96zM256 256H128v-96h128zm0 160H128v-96h128zm96-384H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128zm64 416H96V64h224v96h96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst fileBacIcon = {\n    name: 'file-bac',\n    content: '<path d=\"M352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128zm64 416H289v-96h64l-96.5-96-95.5 96h64v96H96V64h224v96h96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst fileZipIcon = {\n    name: 'file-zip',\n    content: '<path d=\"M352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128zm64 416H96V64h64v32h32v32h-32v32h32v32h-32v32h32v32h-32v32h32v34.7c-18.6 6.6-32 24.4-32 45.3 0 26.5 21.5 48 48 48s48-21.5 48-48c0-20.9-13.4-38.7-32-45.3V256h32v-32h-32v-32h32v-32h-32v-32h32V96h-32V64h96v96h96zm-192-80c0 8.8-7.2 16-16 16s-16-7.2-16-16 7.2-16 16-16 16 7.2 16 16\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst filmIcon = {\n    name: 'film',\n    content: '<path d=\"M416 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32M128 448H96v-32h32zm0-96H96v-64h32zm0-128H96v-64h32zm0-128H96V64h32zm224 352H160v-96h192zm0-128H160V192h192zm0-160H160V64h192zm64 288h-32v-32h32zm0-96h-32v-64h32zm0-128h-32v-64h32zm0-128h-32V64h32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst css3Icon = {\n    name: 'css3',\n    content: '<path d=\"m64 32 30.2 384L256 480l161.8-64L448 32zm65.6 82h250.3l-4.9 48.9L255.4 214h115.9L358 366.1l-102.1 29.7-102.4-30.2-6.6-76.6h50.9l3.3 39.7 54.4 13.8.5-.1v-.1l56.3-15.8 3.9-64.4H143.7l-3.8-47.8 123-51.2H135.7z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst html5Icon = {\n    name: 'html5',\n    content: '<path d=\"m64 32 30.4 384 161.3 64 161.7-64L448 32zm68 83h247.7l-1.2 13.2-2.2 24.8-1 11H186.1l4.5 51h180.1l-1.2 13.3-11.7 129.9-.7 8.4-101.3 37-101.2-37-6.9-77.6h49l3.5 39.7 55.5 24 55.6-24.1 5.8-64.6h-172L133 128.2z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst codeIcon = {\n    name: 'code',\n    content: '<path d=\"M512 256 384 384l-22.6-22.6L466.7 256 361.4 150.6 384 128zM150.6 361.4 45.3 256l105.4-105.4L128 128 0 256l128 128zM321.1 72.3 290.2 64l-99.4 375.7 30.9 8.3z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst cssIcon = {\n    name: 'css',\n    content: '<path d=\"m192 96-32 .1S96 96 96 160v48c0 27.8-21.8 31.4-32 32H48c-2.2 0-4.3.4-6.2 1.2-.5.2-1 .4-1.4.7s-.9.5-1.3.8c-1.3.9-2.4 1.9-3.4 3.1-.2.2-.3.4-.5.6-.9 1.2-1.7 2.6-2.2 4.1-.2.5-.3 1-.5 1.5-.3 1-.4 2.1-.5 3.2v1.6c.1 1.1.2 2.1.5 3.2.1.5.3 1 .5 1.5.5 1.5 1.3 2.8 2.2 4.1.2.2.3.4.5.6 1 1.2 2.1 2.2 3.4 3.1.4.3.9.5 1.3.8s.9.5 1.4.7c1.9.8 4 1.2 6.2 1.2h16c10.2.6 32 4.2 32 32v48c0 64 64 63.9 64 63.9l32 .1v-32l-31.8-.1s-32.2.1-32.2-32v-48.5s0-29-19.6-47.9c19.6-18.8 19.6-47.9 19.6-47.9v-47.9c0-31.9 32.2-31.8 32.2-31.8l31.8-.1zm128-.1V128l31.7.1S384 128 384 160v48s0 29.1 19.5 48C384 274.9 384 304 384 304v48c0 32-32.1 31.9-32.1 31.9l-31.9.1v32l32.1-.1s63.9.1 63.9-63.7V304c0-27.8 21.8-31.4 32-32h16c2.2 0 4.3-.4 6.2-1.2.5-.2 1-.4 1.4-.7s.9-.5 1.3-.8c1.3-.9 2.4-1.9 3.4-3.1.2-.2.3-.4.5-.6.9-1.2 1.7-2.6 2.2-4.1.2-.5.3-1 .5-1.5.3-1 .4-2.1.5-3.2v-1.6c-.1-1.1-.2-2.1-.5-3.2-.1-.5-.3-1-.5-1.5-.5-1.5-1.3-2.8-2.2-4.1-.2-.2-.3-.4-.5-.6-1-1.2-2.1-2.2-3.4-3.1-.4-.3-.9-.5-1.3-.8s-.9-.5-1.4-.7c-1.9-.8-4-1.2-6.2-1.2h-16.1c-10.2-.6-31.9-4.2-31.9-32v-48c0-64-64.1-63.9-64.1-63.9z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst jsIcon = {\n    name: 'js',\n    content: '<path d=\"M478.4 96C471 59.5 438.7 32 400 32H208c-38.7 0-71 27.5-78.4 64-1.1 5.2-1.6 10.5-1.6 16v272H32v16c0 5.5.5 10.8 1.6 16 7.4 36.5 39.7 64 78.4 64h192c38.7 0 71-27.5 78.4-64 1.1-5.2 1.6-10.5 1.6-16V128h96v-16c0-5.5-.5-10.8-1.6-16m-124.8 0c-1.1 5.2-1.6 10.5-1.6 16v288c0 5.6-1 11-2.8 16-6.6 18.6-24.4 32-45.2 32-20.9 0-38.7-13.4-45.2-32-1.8-5-2.8-10.4-2.8-16v-16h-96V112c0-5.6 1-11 2.8-16 6.6-18.6 24.4-32 45.2-32h160c-7 9.3-12 20.2-14.4 32M320 192H192v-32h128zm0 64H192v-32h128zm0 64H192v-32h128z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst exeIcon = {\n    name: 'exe',\n    content: '<path d=\"M64 32c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32zm160 32c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32m96 0c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32m96 0c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32M64 160h384v288H64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst csprojIcon = {\n    name: 'csproj',\n    content: '<path d=\"M64 32c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32zm157.9 32.1c19.3-1.2 35.2 14.7 34 34-1 15.9-13.9 28.8-29.9 29.9-19.3 1.2-35.2-14.7-34-34 1.1-16 14-28.9 29.9-29.9m96 0c19.3-1.2 35.2 14.7 34 34-1 15.9-13.9 28.8-29.9 29.9-19.3 1.2-35.2-14.7-34-34 1.1-16 14-28.9 29.9-29.9m96 0c19.3-1.2 35.2 14.7 34 34-1 15.9-13.9 28.8-29.9 29.9-19.3 1.2-35.2-14.7-34-34 1.1-16 14-28.9 29.9-29.9M64 160h384v288H64zm119.7 64c-17.3 0-32.7 3.5-46 10.4s-23.6 16.8-30.9 29.5c-7.3 12.8-10.9 27.3-10.9 43.6 0 15.2 3.3 28.6 9.8 40.2s15.9 20.6 28.3 26.8c12.4 6.3 27 9.4 44.1 9.4q25.95 0 45.9-6.9v-41.5c-11.9 5.8-23.7 8.6-35.4 8.6-12.6 0-22.8-3.6-30.3-10.7s-11.4-16.9-11.4-29.2c0-12.4 3.8-22.3 11.3-29.6s17.9-10.9 31-10.9c6.3 0 12.6.7 18.8 2.1s11.5 3.5 16 6v-43c-13.1-3.2-26.4-4.8-40.3-4.8m114.2 0-8.3 39h-17.4l-5.7 29H284l-6.1 26H262l-6.1 29h15.4l-7.7 37h30.9l7.9-37h26.8l-7.7 37h30.4l8.2-37h16.3l7.2-29h-17.2l6.1-26h15l6.3-29h-14.7l8.3-39H356l-8.3 39h-26.4l8.3-39zm16.8 68h26.8l-6.3 27h-26.7z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst vbprojIcon = {\n    name: 'vbproj',\n    content: '<path d=\"M64 32c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32zm160 32c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32m96 0c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32m96 0c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32M64 160h384v288H64zm32 64 51.6 160h54.1L254 224h-50.2L180 321.9c-1.9 7.4-3 13.5-3.5 18.5h-1.1c-.2-3.9-1.3-9.9-3.2-17.9L147.8 224zm183.3 0v160h73c20.4 0 36.2-4.3 47.2-12.8s16.5-20.6 16.5-36.3c0-5.8-1.6-11.4-4.9-16.8s-7.9-9.9-14-13.5-12.8-5.9-20.4-6.8v-.4c6.5-1.3 12.5-3.6 18-7.1s9.5-7.6 12.2-12.2 4-9.8 4-15.3c0-25.8-21.2-38.7-63.7-38.7h-67.9zm48.2 32.3h8.9c15.6 0 23.3 5 23.3 14.8 0 4.5-1.7 8.3-5.1 11.1s-7.8 4.3-13.2 4.3h-14zm0 62.5h19c5.5 0 9.9 1.5 13.3 4.4s5 6.8 5 11.4q0 7.8-5.7 12.3c-5.7 4.5-9 4.5-15.5 4.5h-16.1z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst csIcon = {\n    name: 'cs',\n    content: '<path d=\"M165.9 128c-26.4 0-49.8 5.6-70.1 16.7s-36 26.8-47.1 47.2S32 235.5 32 261.6c0 24.3 5 45.7 14.9 64.3s24.3 32.9 43.1 43 41.2 15.1 67.2 15.1c26.4 0 46.6-3.7 65.8-11v-66.5c-17.1 9.2-32 13.8-49.8 13.8-19.3 0-34.7-5.7-46.2-17.2s-17.3-27.1-17.3-46.9c0-19.9 5.8-35.7 17.3-47.3s27.3-17.4 47.2-17.4c9.6 0 16 1.2 25.4 3.5s17.5 5.5 24.4 9.7v-68.9c-19.7-5.2-37-7.8-58.1-7.8m158.8 0-13.3 62h-29l-9.3 46h28.6l-10.3 43h-25.6l-9.8 46h25.2l-12.5 59h50l12.9-59h43.5l-12.5 59h49.2l13.3-59h26.8l11.5-46h-28.2l10.3-43h24.2l10.3-46h-23.7l13.5-63h-51.7l-13.5 63h-43.5l13.5-63h-50zm26.9 108H395l-10.3 43h-43.3z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst vbIcon = {\n    name: 'vb',\n    content: '<path d=\"m32 160 73.2 224h76.7L256 160h-71.1l-33.7 137c-2.6 10.3-4.3 19-4.9 25.9h-1.6c-.3-5.5-1.8-13.9-4.6-25L105.5 160zm252 0v224h104.6c29.3 0 51.9-6 67.7-17.9s23.7-28.9 23.7-50.8c0-8.1-2.4-16-7-23.5-4.7-7.6-11.4-13.9-20-18.9-8.7-5-18.4-8.2-29.3-9.5v-.6c9.4-1.8 18-5.1 25.8-10s13.7-10.6 17.5-17.1 5.8-13.7 5.8-21.5c0-36.1-30.5-54.2-91.4-54.2zm69.1 45.2h12.8c22.3 0 33.4 6.9 33.4 20.8 0 6.4-2.5 11.5-7.4 15.5s-11.2 6-18.9 6h-20zm0 87.6h27.2c7.9 0 14.3 2.1 19 6.2s7.2 9.5 7.2 15.9c0 7.3-2.7 13-8.1 17.2s-12.9 6.3-22.2 6.3h-23v-45.6z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst slnIcon = {\n    name: 'sln',\n    content: '<path d=\"M352 32 172.5 211.5 64 128l-32 32v192l32 32 108.5-83.5L352 480l128-32V64zM64 320V192l64 64zm166.4-64L352 162.5v187.1z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst cloudIcon = {\n    name: 'cloud',\n    content: '<path d=\"M442.2 243.6c3.7-11.2 5.8-23.2 5.8-35.6 0-61.9-50.1-112-112-112-37.8 0-71.3 18.8-91.6 47.5-15-9.8-33-15.5-52.3-15.5-52.9 0-95.8 42.9-95.8 95.8 0 1.8.1 3.6.2 5.5C58.9 242.3 32 278 32 320c0 53 43 96 96 96h256c53 0 96-43 96-96 0-31.1-14.8-58.8-37.8-76.4\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst fileHorizontalIcon = {\n    name: 'file-horizontal',\n    content: '<path d=\"M384 64H64c-17.7 0-32 14.3-32 32v320c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V160zm64 352H64V96h288v96h96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst subreportIcon = {\n    name: 'subreport',\n    content: '<path d=\"M448 480c0 17.7-14.3 32-32 32H128c-17.7 0-32-14.3-32-32v-96h32v96h288V96H128v64H96V96c0-17.7 14.3-32 32-32h288c17.7 0 32 14.3 32 32zM63.9 32l254.3-.2L286.4 0 63.8.2C46.2.2 32 14.4 32 32l.1 128H64zm.1 351H32v32c0 17.7 14.3 32 32 32zm-32-62.9S64 288 95 288v32l65-48.1L96 224v32c-32.1 0-64 32.1-64 64.1M352 384l-160 .1V416l160-.1zm-96-192c-35.3 0-64 28.7-64 64s28.7 64 64 64 64-28.7 64-64h-64zm32-32v64h64c0-35.3-28.7-64-64-64\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst dataIcon = {\n    name: 'data',\n    content: '<path d=\"M448 125.6v.3c-.5 33.9-86.3 61.3-192 61.3S64.5 159.8 64 125.9v-.3c0-34 86-61.6 192-61.6s192 27.6 192 61.6m0 46.4v.3c-.5 33.9-86.3 61.3-192 61.3S64.5 206.2 64 172.3v-.3l1 86.8v.5c.5 33.7 85.8 61 191 61s190.5-27.3 191-61v-.5zm0 128v.3c-.5 33.9-86.3 61.3-192 61.3S64.5 334.2 64 300.3v-.3l1 86.8v.5c.5 33.7 85.8 61 191 61s190.5-27.3 191-61v-.5z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst fileHeaderIcon = {\n    name: 'file-header',\n    content: '<path d=\"M416 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32m0 416H96V64h320zm-32-64H128v-32h256zm0-96H128v32h256zm0-160H128v96h256z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst fileFooterIcon = {\n    name: 'file-footer',\n    content: '<path d=\"M416 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32m0 416H96V64h320zm-32-224H128v-32h256zm0-96H128v32h256zm0 160H128v96h256z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst groupHeaderSectionIcon = {\n    name: 'group-header-section',\n    content: '<path d=\"m128 448 32 32H32V32h128l-32 32H64v384zm320-320H128v96h320zm0 160H128v32h320zm0 64H128v32h320z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst groupFooterSectionIcon = {\n    name: 'group-footer-section',\n    content: '<path d=\"m128 448 32 32H32V32h128l-32 32H64v384zm320-160H128v96h320zm0-160H128v32h320zm0 64H128v32h320z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst pageHeaderSectionIcon = {\n    name: 'page-header-section',\n    content: '<path d=\"M352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128zm64 416H96V64h224v96h96zm-32-160H128v-96h256zm0 96H128v32h256zm0-64H128v32h256z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst pageFooterSectionIcon = {\n    name: 'page-footer-section',\n    content: '<path d=\"M352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128zm64 416H96V64h224v96h96zm-31-32H129v-96h256zm0-160H129v32h256zm0-64H129v32h256z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst detailSectionIcon = {\n    name: 'detail-section',\n    content: '<path d=\"M96 32c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32zm320 416H96V64h320zm-33-224h-63v-32h63zm-96-32h-63v32h63zm-96 0h-63v32h63zm192 96h-63v32h63zm-96 0h-63v32h63zm-96 0h-63v32h63z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tocSectionIcon = {\n    name: 'toc-section',\n    content: '<path d=\"M96 32c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32zm320 416H96V64h320zm-32-288H224v-32h160zm-64 64h-96v-32h96zm0 64h-96v-32h96zm64 64H224v-32h160z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst groupSectionIcon = {\n    name: 'group-section',\n    content: '<path d=\"m128 416 32 32H32V32h128l-32 32H64v352zm320-288H128v32h320zm0 192H128v32h320zm0-96H128v32h320z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst parametersIcon = {\n    name: 'parameters',\n    content: '<path d=\"M96 32c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32zm320 416H96V64h320zM285.3 160c-8.9-25-36.3-38.1-61.4-29.2-13.7 4.8-24.4 15.6-29.2 29.2H128v32h66.7c8.9 25 36.3 38.1 61.4 29.2 13.7-4.8 24.4-15.6 29.2-29.2H384v-32zM240 192c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16m109.3 96c-8.9-25-36.3-38.1-61.4-29.2-13.7 4.8-24.4 15.6-29.2 29.2H128v32h130.7c8.9 25 36.3 38.1 61.4 29.2 13.7-4.8 24.4-15.6 29.2-29.2H384v-32zM304 320c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst dataCsvIcon = {\n    name: 'data-csv',\n    content: '<path d=\"M415.9 93.6v.3c-.5 33.9-86.3 61.3-191.9 61.3S32.6 127.8 32.1 93.9v-.3C32.1 59.6 118 32 224 32s191.9 27.6 191.9 61.6m0 46.4v.3c-.5 33.9-86.3 61.3-191.9 61.3S32.5 174.2 32 140.3v-.3l.1 86.8v.3c.5 33.9 86.3 61.3 191.9 61.3s191.4-27.4 192-61.3v-.3zm.1 180-.1-52v.3c-.3 21.7-35.7 40.8-88.9 51.7zM271 420.8c-7.7 4.5-16.4 6.8-25.4 6.7q-14.55 0-23.1-9c-8.55-9-8.6-14.1-8.6-24.3 0-10.6 3-19 9.1-25.2s14-9.3 23.9-9.3c8.4-.1 16.7 2 24 6.3v-22.8c-7-2.6-15.7-3.9-25.9-3.9-16.6 0-30 5.2-40.4 15.7S189 379.1 189 395.9c0 15.8 4.6 28.4 13.8 37.9s21.9 14.2 38 14.2c12.3 0 22.3-1.9 30-5.6zm36.6 25.7c5.4 1 10.9 1.5 16.4 1.5 5.4 0 10.7-.5 16-1.6 4.7-.9 9.2-2.7 13.3-5.3 3.8-2.4 6.8-5.8 9-9.7 2.2-4 3.3-8.9 3.3-14.8.1-3.8-.6-7.6-1.9-11.2-1.3-3.2-3.1-6.1-5.5-8.5-2.6-2.6-5.5-4.9-8.6-6.7-3.6-2.1-7.4-4-11.3-5.6-3.1-1.3-5.8-2.5-8.3-3.7-2.2-1-4.3-2.3-6.2-3.7-1.5-1.1-2.9-2.4-4-4-.9-1.4-1.4-3-1.4-4.7 0-1.5.4-3.1 1.2-4.4.9-1.4 2.1-2.5 3.5-3.3 1.7-1 3.6-1.7 5.6-2.2 2.4-.5 4.9-.8 7.3-.8 2.1 0 4.1.2 6.2.4 2.2.3 4.4.8 6.5 1.4 2.2.6 4.3 1.4 6.4 2.3 2 .9 3.9 2 5.8 3.2v-21.9q-5.7-2.1-11.7-3c-4.8-.7-9.7-1-14.5-1-5.3 0-10.6.6-15.8 1.8-4.7 1.1-9.1 3-13.1 5.6-3.7 2.5-6.8 5.8-9 9.7-2.3 4.3-3.4 9.2-3.3 14.1-.2 6.5 2 12.8 6 17.9 4 4.9 10.1 9.1 18.3 12.5q4.8 1.95 9 3.9c2.5 1.1 4.9 2.5 7.2 4 1.8 1.2 3.5 2.7 4.8 4.5 1.2 1.6 1.8 3.5 1.8 5.5 0 1.5-.4 2.9-1.1 4.2-.8 1.4-2 2.5-3.3 3.4-1.7 1-3.6 1.8-5.6 2.2-2.6.6-5.2.8-7.8.8-5.1 0-10.2-.9-15.1-2.7-5.1-1.8-9.8-4.5-13.9-8V442c4.5 2.3 9 3.8 13.8 4.5m147.7-105.4-21.8 72.8c-1.1 3.5-1.8 7.1-2.3 10.8h-.4c-.3-3.6-1.1-7.1-2.1-10.5l-21.9-73.1h-25.5l35.7 105h26.8l36.2-105zm-295.3-15C85.7 317.7 32.4 295 32 268.3v-.3l.1 86.8v.3c.4 26.7 53.7 49.3 127.9 57.8z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst dataJsonIcon = {\n    name: 'data-json',\n    content: '<path d=\"M415.9 93.6v.3c-.5 33.9-86.3 61.3-191.9 61.3S32.6 127.8 32.1 93.9v-.3C32.1 59.6 118 32 224 32s191.9 27.6 191.9 61.6m0 46.4v.3c-.5 33.9-86.3 61.3-191.9 61.3S32.5 174.2 32 140.3v-.3l.1 86.8v.3c.5 33.9 86.3 61.3 191.9 61.3s191.4-27.4 192-61.3v-.3zm.1 180-.1-52v.3c-.3 21.7-35.7 40.8-88.9 51.7zm-251.3 21.1h-23.6v62.4q0 24-16.2 24c-4.9.1-9.7-1.5-13.6-4.5v22.2c4.9 1.9 10.1 2.9 15.3 2.8 12.4 0 21.8-3.7 28.3-11.2s9.8-18.2 9.8-32.3zm31.7 105.4c5.4 1 10.9 1.5 16.4 1.5 5.4 0 10.7-.5 16-1.6 4.7-.9 9.2-2.7 13.3-5.3 3.8-2.4 6.8-5.8 9-9.7 2.2-4 3.3-8.9 3.3-14.8.1-3.8-.6-7.6-1.9-11.2-1.3-3.2-3.1-6.1-5.5-8.5-2.6-2.6-5.4-4.9-8.6-6.7-3.6-2.1-7.4-4-11.3-5.6-3.1-1.3-5.8-2.5-8.3-3.7-2.2-1-4.3-2.3-6.2-3.7-1.6-1.1-2.9-2.4-4-4-.9-1.4-1.4-3-1.4-4.7 0-1.5.4-3.1 1.2-4.4.9-1.4 2.1-2.5 3.5-3.3 1.7-1 3.6-1.7 5.6-2.2 2.4-.5 4.9-.8 7.4-.7 2.1 0 4.1.1 6.2.4 2.2.3 4.4.8 6.6 1.4s4.3 1.4 6.4 2.3c2 .9 3.9 2 5.8 3.2v-21.9q-5.7-2.1-11.7-3c-4.8-.7-9.7-1-14.5-1-5.3 0-10.6.6-15.8 1.8-4.7 1.1-9.1 3-13.1 5.6-3.7 2.5-6.8 5.8-9 9.7-2.3 4.3-3.4 9.2-3.3 14.1-.2 6.5 1.9 12.8 6 17.9 4 4.9 10.1 9.1 18.4 12.5q4.8 1.95 9 3.9c2.5 1.1 4.9 2.5 7.2 4 1.8 1.2 3.5 2.7 4.8 4.5 1.2 1.6 1.8 3.5 1.8 5.5 0 1.5-.4 2.9-1.1 4.2-.8 1.4-2 2.5-3.3 3.4-1.7 1-3.6 1.8-5.6 2.2-2.6.6-5.2.8-7.8.8-5.1 0-10.3-.9-15.1-2.7-5.1-1.8-9.7-4.5-13.8-8v23.4c4.1 2.2 8.7 3.7 13.4 4.4m157.3-13.7q14.4-15.15 14.4-39.9c0-16.1-4.6-29-13.9-38.8s-21.4-14.7-36.4-14.7c-15.9 0-28.6 5.1-38.2 15.4s-14.4 23.7-14.4 40.3c0 15.7 4.7 28.5 14.2 38.3s21.7 14.7 36.8 14.7q23.1-.15 37.5-15.3m-17.5-64c4.6 6 6.9 14.5 7 25.4 0 10.4-2.4 18.6-7.2 24.5s-11.3 8.8-19.4 8.8c-7.5.2-14.6-3.2-19.2-9.1-4.9-6.1-7.3-14.3-7.3-24.7 0-10.2 2.4-18.5 7.3-24.7s11.5-9.3 19.8-9.3c8 0 14.4 3.1 19 9.1M480 341.1h-22.3v58.1q-.15 7.2.6 14.4h-.3c-1.6-2.8-3.4-5.7-5.3-8.6L411 341.1h-25.5v105h22.3v-57.7c0-7.6-.2-13.3-.6-17h.3c1.6 3 3.4 5.9 5.3 8.7l43.3 66H480zM96 313.9c-39-11.2-63.7-27.5-64-45.6v-.3l.1 86.8v.3c.3 18.1 24.9 34.3 63.9 45.6z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst dataSqlIcon = {\n    name: 'data-sql',\n    content: '<path d=\"M415.9 93.6v.3c-.5 33.9-86.3 61.3-191.9 61.3S32.6 127.8 32.1 93.9v-.3C32.1 59.6 118 32 224 32s191.9 27.6 191.9 61.6m0 46.4v.3c-.5 33.9-86.3 61.3-191.9 61.3S32.5 174.2 32 140.3v-.3l.1 86.8v.3c.5 33.9 86.3 61.3 191.9 61.3s191.4-27.4 192-61.3v-.3zm.1 180-.1-52v.3c-.3 21.7-35.7 40.8-88.9 51.7zM209.1 448.6c5.4 1 10.9 1.5 16.4 1.5 5.4 0 10.7-.5 16-1.6 4.7-.9 9.2-2.7 13.3-5.3 3.8-2.4 6.8-5.8 9-9.7 2.2-4 3.3-8.9 3.3-14.8.1-3.8-.6-7.6-1.9-11.2-1.3-3.2-3.1-6.1-5.5-8.5-2.5-2.6-5.4-4.9-8.6-6.7-3.6-2.1-7.4-4-11.3-5.6-3.1-1.3-5.8-2.5-8.3-3.7-2.2-1-4.3-2.3-6.2-3.7-1.6-1.1-2.9-2.4-4-4-.9-1.4-1.4-3-1.4-4.7 0-1.5.4-3.1 1.3-4.4.9-1.4 2.1-2.5 3.5-3.3 1.7-1 3.6-1.7 5.6-2.2 2.4-.5 4.9-.8 7.3-.8 2.1 0 4.1.2 6.2.4 2.2.3 4.4.8 6.6 1.4s4.3 1.4 6.4 2.3c2 .9 3.9 2 5.8 3.2v-21.9q-5.7-2.1-11.7-3c-4.8-.7-9.7-1-14.5-1-5.3 0-10.6.6-15.8 1.8-4.7 1.1-9.1 3-13.1 5.6-3.7 2.5-6.8 5.8-9 9.7-2.3 4.3-3.4 9.2-3.3 14.1-.2 6.5 1.9 12.8 6 17.9 4 4.9 10.1 9.1 18.4 12.5q4.8 1.95 9 3.9c2.5 1.1 4.9 2.4 7.2 4 1.8 1.2 3.5 2.7 4.8 4.5 1.2 1.6 1.8 3.5 1.8 5.5 0 1.5-.4 2.9-1.1 4.2-.8 1.4-2 2.5-3.3 3.4-1.7 1-3.6 1.8-5.6 2.2-2.6.6-5.2.8-7.8.8-5.1 0-10.3-.9-15.1-2.7-5.1-1.8-9.7-4.5-13.8-8v23.4c4 2.3 8.6 3.8 13.4 4.5m172.8-21.2c5.7-9 8.5-19.8 8.5-32.4 0-16.1-4.6-29-13.9-38.8s-21.3-14.7-36.2-14.8c-16 0-28.8 5.1-38.5 15.4s-14.4 23.7-14.4 40.3c-.1 7 1.1 13.9 3.4 20.4 2.1 6.1 5.4 11.7 9.6 16.6 4.2 4.7 9.3 8.6 15 11.2 6.1 2.8 12.8 4.4 19.5 4.5 3.8 4.2 7.4 8.1 10.9 11.8q4.95 5.25 10.8 9.6c3.6 2.6 7.4 4.8 11.6 6.4s8.7 2.4 13.2 2.3c3.4 0 6.7-.2 10.1-.7 2.2-.3 4.3-.8 6.5-1.3V458c-.8.3-1.6.6-2.4.8l-2.7.6c-.9.2-1.9.3-2.8.4s-1.8.1-2.6.1c-2.7 0-5.4-.2-8-.6-2.5-.4-4.9-1.1-7.1-2.1q-3.75-1.65-6.9-4.2c-2.6-2-5-4.3-7.3-6.7 9.9-3.4 18.2-10.1 23.7-18.9m-23.3-56.3c4.6 6 6.9 14.5 6.9 25.3 0 10.4-2.4 18.6-7.2 24.5-4.8 6-11.3 8.9-19.4 8.8-7.5.2-14.7-3.2-19.3-9.1-4.8-6.1-7.3-14.3-7.3-24.7s2.4-18.6 7.3-24.7c4.9-6.2 11.5-9.4 19.8-9.4 8.3.1 14.6 3.1 19.2 9.3m121.4 58h-38.9v-85.8h-23.7v105H480zm-320-103C85.7 317.7 32.4 295 32 268.3v-.3l.1 86.8v.3c.4 26.7 53.7 49.3 127.9 57.8z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst dataWebIcon = {\n    name: 'data-web',\n    content: '<path d=\"M415.9 93.6v.3c-.5 33.9-86.3 61.3-191.9 61.3S32.6 127.8 32.1 93.9v-.3C32.1 59.6 118 32 224 32s191.9 27.6 191.9 61.6m0 46.4v.3c-.5 33.9-86.3 61.3-191.9 61.3S32.5 174.2 32 140.3v-.3l.1 86.8v.3c.5 33.9 86.3 61.3 191.9 61.3s191.4-27.4 192-61.3v-.3zm.1 180-.1-52v.3c-.3 21.7-35.7 40.8-88.9 51.7zm-151.1 23-14.5 70.1q-1.2 5.85-1.5 11.7h-.3c-.3-3.8-.9-7.6-1.7-11.3L229.6 343h-25.3l-19.1 69.6c-1.1 4-1.9 8.1-2.1 12.3h-.4c-.2-4-.6-8-1.4-12l-14.8-70h-25.8l27.6 105h27.3l17.9-67.4c1-3.9 1.6-7.8 1.9-11.8h.3c.1 4 .7 7.9 1.7 11.8l17.4 67.4H261l27.8-105h-23.9zm109.8 85.8h-39.3v-24h34.4v-19.2h-34.4v-23.4h36.9V343h-60.6v105h63zm66.8 19.2c11.9 0 21.3-2.8 28.2-8.5 6.9-5.6 10.3-13.3 10.3-22.9.1-6.3-2.3-12.3-6.7-16.8-4.5-4.6-10.4-7.3-17.9-8.3v-.3c5.6-1.5 10.8-4.5 14.7-8.9 3.8-4 5.8-9.4 5.8-14.9 0-7.8-3.2-13.9-9.5-18.2s-15.3-6.5-27-6.5h-38.3v105h40.4zm-7.9-87.6c11.5 0 17.3 3.9 17.3 11.6.2 3.7-1.4 7.3-4.2 9.8-2.8 2.4-6.6 3.6-11.5 3.5h-10.4v-24.9zm4.1 42.5c5.5 0 9.7 1.2 12.8 3.6 3 2.4 4.7 6 4.6 9.9.2 4-1.5 7.9-4.6 10.4s-7.4 3.8-12.9 3.8h-12.8v-27.7zM96 313.9c-39-11.2-63.7-27.5-64-45.6v-.3l.1 86.8v.3c.3 18.1 24.9 34.3 63.9 45.6z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst groupCollectionIcon = {\n    name: 'group-collection',\n    content: '<path d=\"M448 352H160v-32h288zm0 32H160v32h288zm0-288H160v32h288zm0 64H160v32h288zM64 192V96h64l32-32H32v160h128l-32-32zm0 224v-96h64l32-32H32v160h128l-32-32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst parameterBooleanIcon = {\n    name: 'parameter-boolean',\n    content: '<path d=\"M64 96c-17.7 0-32 14.3-32 32v256c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V128c0-17.7-14.3-32-32-32zm384 288H64V128h384zM207 212h-39v114h-32V212H96v-26h111zm96.8-37-68.1 163h-27.5l67.9-163zM416 212h-49v34h45v26h-45v54h-32V186h81z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst parameterDateTimeIcon = {\n    name: 'parameter-date-time',\n    content: '<path d=\"M416 202.8V128c0-17.7-14.3-32-32-32H64c-17.7 0-32 14.3-32 32v256c0 17.7 14.3 32 32 32h304c61.9 0 112-50.1 112.1-111.9 0-43.3-25-82.8-64.1-101.3M64.1 384 64 192h304c-61.9 0-112 50.2-112 112 0 30.1 12.1 58.9 33.6 80zm303.9 0c-44.2 0-80-35.8-80-80s35.8-80 80-80 80 35.8 80 80-35.8 80-80 80m48-96v32h-64v-64h32v32zm-224 32H96v-96h96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst parameterFloatIcon = {\n    name: 'parameter-float',\n    content: '<path d=\"M64 96c-17.7 0-32 14.3-32 32v256c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V128c0-17.7-14.3-32-32-32zm384 288H64V128h384zm-276-55.6c-33.3 0-50-23.4-50-70.2q0-36.45 13.5-55.5c13.5-19.05 22.1-19.1 39.2-19.1 32.6 0 48.8 23.8 48.8 71.4 0 23.7-4.4 41.9-13.3 54.5s-21.6 18.9-38.2 18.9m1.4-121.3c-13.3 0-20 16.8-20 50.3 0 31.6 6.5 47.4 19.6 47.4 12.8 0 19.1-16.3 19.1-48.8s-6.2-48.9-18.7-48.9m83.8 121.3c-4.7.1-9.2-1.5-12.7-4.7-3.3-2.9-5.2-7.1-5.1-11.5-.1-4.4 1.8-8.7 5.2-11.5 3.6-3 8.3-4.6 13-4.5q7.95 0 12.9 4.5c6.4 5.9 6.7 15.9.8 22.2l-.9.9c-3.3 3.1-7.8 4.6-13.2 4.6M390 326h-88v-24h29v-87.2l-30 6.4v-25.5l60-12.1V302h29z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst parameterIntegerIcon = {\n    name: 'parameter-integer',\n    content: '<path d=\"M64 96c-17.7 0-32 14.3-32 32v256c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V128c0-17.7-14.3-32-32-32zm384 288H64V128h384zm-262.6-58H96.8v-24.4h29v-87.2L96 220.8v-25l60.6-12.2v118h28.8zm59.2-26.2v.6h56.8V326h-92.2v-24l40.1-38.4c8.1-7.7 13.7-14.2 17-19.5 3.2-4.9 4.9-10.7 4.9-16.6 0-12.9-6.9-19.3-20.8-19.3-12 0-23.6 4.8-34.6 14.4v-27.2c12.2-7.9 25.9-11.8 41.2-11.8 14.3 0 25.5 3.6 33.5 10.8s12.1 16.9 12.1 29.1q0 24.45-29.4 50.7zm82.1 21.6v-26.9c9.4 6.8 20.3 10.3 32.8 10.3 7.9 0 14-1.7 18.4-5.1s6.6-8.1 6.6-14.2c0-6.2-2.7-11.1-8.1-14.5s-12.9-5.1-22.4-5.1h-12.6v-23.6H353c18.2 0 27.4-6.1 27.4-18.2q0-17.1-21-17.1c-9.4 0-18.5 3-27.3 9.1V191c9.8-4.9 21.3-7.4 34.4-7.4 14.3 0 25.5 3.2 33.5 9.7 7.8 6 12.2 15.3 12 25.1 0 18.3-9.3 29.8-27.8 34.4v.5q14.85 1.8 23.4 10.8c5.7 5.9 8.8 13.8 8.6 21.9 0 13.1-4.8 23.4-14.4 31.1s-22.8 11.4-39.6 11.4c-14.7-.1-26.4-2.4-35.5-7.1\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst parameterStringIcon = {\n    name: 'parameter-string',\n    content: '<path d=\"M127.3 328.9c13.2 0 23.1-5.6 29.8-16.8h.4v14.4h29.2v-59.8c0-28.5-14.3-42.7-42.8-42.7-6.9.1-13.7.9-20.4 2.5-7.4 1.7-13.3 3.6-17.6 5.9v23.2c10.8-7.1 22.1-10.6 34-10.6s17.8 5.5 17.8 16.4l-27.2 3.6Q96 269.5 96 298.6c0 9.2 2.8 16.5 8.3 22s13.2 8.3 23 8.3m12.2-47.5 18.2-2.3v6.7c0 6.1-1.8 11.2-5.5 15.2-3.6 4-8.8 6.2-14.2 6-4.2 0-7.5-1.1-9.9-3.4-2.4-2.2-3.8-5.4-3.7-8.6 0-7.7 5-12.3 15.1-13.6m209 33.5c-9.5-9.3-14.3-21.3-14.3-36q0-25.5 15.3-40.2c10.2-9.8 23.8-14.7 40.9-14.7 11.8 0 20.3 1.6 25.6 4.7v26.2c-6.2-4.7-13.8-7.3-21.6-7.2q-13.35 0-21 7.8c-5.2 5.2-7.8 12.3-7.8 21.4 0 8.9 2.5 15.8 7.4 20.9 4.9 5 11.8 7.6 20.4 7.6 7.7 0 15.2-2.4 22.6-7.3v24.8c-7 4-17 6-30.2 6-15.3 0-27.8-4.7-37.3-14m-104 .5h.4q9.45 14.1 27.9 14.1c13.6 0 24.5-5 32.6-15.1s12.2-23.5 12.2-40.1q0-22.95-10.5-36.3c-10.5-13.35-16.9-13.3-29.8-13.3-14.1 0-24.9 5.8-32.5 17.5h-.4V179h-30.9v148h30.9zm-.5-42.2c0-7.4 2-13.4 6.1-18.1 3.8-4.5 9.5-7.1 15.4-6.9 6.6 0 11.6 2.3 15.2 7 3.5 4.7 5.3 11.1 5.3 19.4 0 10-1.9 17.7-5.8 23.1s-9.3 8.2-16.4 8.2c-5.5.1-10.7-2.2-14.3-6.4-3.7-4.2-5.6-9.6-5.6-16zM448 96H64c-17.7 0-32 14.3-32 32v256c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V128c0-17.7-14.3-32-32-32m0 288H64V128h384z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tocSectionLevelIcon = {\n    name: 'toc-section-level',\n    content: '<path d=\"M96 32c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32zm320 416H96V64h320zm-32-288H192v-32h192zm0 64h-96v-32h96zm0 64h-96v-32h96zm0 64h-96v-32h96zm-192-32v-96l64 48z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst inheritedIcon = {\n    name: 'inherited',\n    content: '<path d=\"M448 320v128H320V320h30.4L256 244.5 161.6 320H192v128H64V320h46.4l120-96H176V64h160v160h-54.4l120 96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst fileVideoIcon = {\n    name: 'file-video',\n    content: '<path d=\"M352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128zm64 416H96V64h224v96h96zM304 304.8v-.8c0-8.8-7.2-16-16-16h-10.1c24.2-3.1 42.8-24.3 41.8-49.6-1-24.8-21.2-45-46-46-27.4-1.1-49.9 20.8-49.9 48 0 24.4 18.2 44.6 41.8 47.6h-70.4c17.2-1.7 30.3-16.9 28.7-34.8-1.4-15.5-14.1-27.9-29.6-28.9-18.7-1.3-34.2 13.5-34.2 31.9 0 16.6 12.7 30.2 28.8 31.8H176c-8.8 0-16 7.2-16 16v64c0 8.8 7.2 16 16 16h111.7c8.4 0 15.6-6.3 16.3-14.6.2-3.1-.3-6.1-1.7-8.7l1.8 1.1 44.9 27.1c1.3.8 2.7 1.2 4.1 1.2 1.3 0 2.7-.3 3.9-1 2.5-1.4 4.1-4.1 4.1-7v-95.8c0-2.9-1.5-5.5-4-6.9s-5.5-1.5-8 0zM193.5 272c-.5.1-1 .1-1.5.1s-1 0-1.5-.1h-.2c-8.6-.8-15.1-8.5-14.3-17.2.6-7.9 7.2-14.2 15.1-14.6 9.2-.5 16.8 6.9 16.8 16 .1 8.1-6.1 15-14.4 15.8m82.3-.3c-.3 0-.6.1-.9.1-1 .1-2.1.2-3.1.2s-2.1 0-3.1-.2c-.3 0-.6-.1-.9-.1-15.9-2-27.9-15.7-27.9-31.7 0-17.6 14.4-32 32-32s32 14.4 32 32c-.1 16.1-12.1 29.7-28.1 31.7\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst fileAudioIcon = {\n    name: 'file-audio',\n    content: '<path d=\"M218 353.8c-5.5-2.9-12.1-4.5-19-4.5-21 0-38 14.8-38 33.2s17 33.2 38 33.2 38-14.8 38-33.2V256.6l96-22.6v87.8c-5.5-2.9-12.1-4.5-19-4.5-21 0-38 14.8-38 33.2s17 33.2 38 33.2 38-14.8 38-33.2V192.2l-134 31.5zM352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128zm64 416H96V64h224v96h96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst fileImageIcon = {\n    name: 'file-image',\n    content: '<path d=\"M298.7 385.2S272.2 288 213.1 288s-85 128-85 128h256s-11.9-78.7-42.7-78.7-42.7 47.9-42.7 47.9M352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128zm64 416H96V64h224v96h96zM288 256c0 17.7 14.3 32 32 32s32-14.3 32-32-14.3-32-32-32-32 14.3-32 32\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst filePresentationIcon = {\n    name: 'file-presentation',\n    content: '<path d=\"M127.5 214.4c0 9.9 6.1 18.2 14.5 21.2v113.1c0 12.4 9.6 22.4 21.3 22.4H246v11.8l-13.6 14.6c-1.9 2-3 4.8-3 8 0 6.3 4.7 11.3 10.5 11.3 2.8 0 5.5-1.3 7.4-3.3.1-.1.2-.3.4-.4l8.9-9.6 8.9 9.6c.1.1.2.3.4.4 1.9 2 4.5 3.3 7.4 3.3 5.8 0 10.5-5 10.5-11.3 0-3.1-1.2-6-3-8L267 382.8V371h78.8c11.1 0 20.1-9.3 20.9-21h1.3V235.9c9-2.6 15.7-11.3 15.7-21.6 0-12.4-9.5-22.4-21.3-22.4H148.8c-11.8.1-21.3 10.1-21.3 22.5M299 237h43v89h-43zm-64 26h43v63h-43zm-64 18h43v45h-43zM352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128zm64 416H96V64h224v96h96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst fileDataIcon = {\n    name: 'file-data',\n    content: '<path d=\"M352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128zm64 416H96V64h224v96h96zM128 229.3v149.4c0 20.6 19.1 37.3 42.7 37.3h170.6c23.6 0 42.7-16.7 42.7-37.3V229.3c0-20.6-19.1-37.3-42.7-37.3H170.7c-23.6 0-42.7 16.7-42.7 37.3M247 379h-76v-47h76zm18-112h76v47h-76zm0 65h76v47h-76zm-18-19h-76v-47h76z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst fileDiscImageIcon = {\n    name: 'file-disc-image',\n    content: '<path d=\"M256.1 322.7c3.7 0 7.2-1.1 10.1-3s5.2-4.5 6.7-7.6c1.2-2.5 1.9-5.2 1.9-8.1 0-10.3-8.4-18.7-18.7-18.7-2.8 0-5.4.6-7.7 1.7-3.4 1.6-6.3 4.1-8.3 7.3-1.7 2.8-2.7 6.1-2.7 9.7 0 10.4 8.3 18.7 18.7 18.7m-52.5-117.8c-19.1 10.1-34.9 25.5-45.4 44.4-9 16.1-14.1 34.7-14.1 54.4 0 61.7 50 111.7 111.7 111.7 20 0 38.8-5.3 55.1-14.5 18.6-10.6 33.9-26.4 43.9-45.4 8.1-15.5 12.7-33.1 12.7-51.8 0-61.7-50-111.7-111.7-111.7-18.9 0-36.7 4.7-52.2 12.9m89.8 99.2c0 6.1-1.4 11.8-4 16.9l48.7 25.8c-8.3 15.8-20.9 28.9-36.3 37.7l-26.6-48.3c-5.6 3.3-12.1 5.3-19.1 5.3-20.6 0-37.4-16.7-37.4-37.4 0-6.8 1.8-13.2 5-18.7l-49.2-27.1c8.8-15.7 22-28.6 38-37l26.8 49.3c5-2.5 10.7-3.9 16.7-3.9 20.7 0 37.4 16.7 37.4 37.4M352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128zm64 416H96V64h224v96h96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst fileProgrammingIcon = {\n    name: 'file-programming',\n    content: '<path d=\"m236 256-52.6-.2-48.6 48.6.1.1c-4.1 3.9-6.7 9.4-6.7 15.5 0 5.8 2.3 11 6 14.8l49.1 49.1 46.8-.2-59.7-59.7c.2-.9.3-1.8.3-2.8zm105.2 65.5c.1.9.2 1.9.3 2.8L281.9 384l46.8.2 49.1-49.1c3.7-3.8 6-9.1 6-14.8 0-6.1-2.6-11.6-6.7-15.5l.1-.1-48.6-48.7-52.6.2zM352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128zm64 416H96V64h224v96h96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst parametersByteArrayIcon = {\n    name: 'parameters-byte-array',\n    content: '<path d=\"M64 96c-17.7 0-32 14.3-32 32v256c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V128c0-17.7-14.3-32-32-32zm384 288H64V128h384zm-306.2-55.6c-33.3 0-50-23.4-50-70.2q0-36.45 13.5-55.5c13.5-19.05 22.1-19.1 39.2-19.1 32.6 0 48.8 23.8 48.8 71.4 0 23.7-4.4 41.9-13.3 54.5s-21.6 18.9-38.2 18.9m1.4-121.3c-13.3 0-20 16.8-20 50.3 0 31.6 6.5 47.4 19.6 47.4 12.8 0 19.1-16.3 19.1-48.8s-6.2-48.9-18.7-48.9m113.6 121.3c-33.3 0-50-23.4-50-70.2q0-36.45 13.5-55.5c13.5-19.05 22.1-19.1 39.2-19.1 32.6 0 48.8 23.8 48.8 71.4 0 23.7-4.4 41.9-13.3 54.5-8.8 12.6-21.6 18.9-38.2 18.9m1.4-121.3c-13.3 0-20 16.8-20 50.3 0 31.6 6.5 47.4 19.6 47.4 12.8 0 19.2-16.3 19.2-48.8s-6.3-48.8-18.8-48.9M420 326h-88v-24h29v-87.2l-30 6.4v-25.4l61-12.3V302h28z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst parametersUnknownIcon = {\n    name: 'parameters-unknown',\n    content: '<path d=\"M64 96c-17.7 0-32 14.3-32 32v256c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V128c0-17.7-14.3-32-32-32zm384 288H64V128h384zm-64-64h-64v-32h64zm-96 0h-64v-32h64zm-96 0h-64v-32h64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst fileErrorIcon = {\n    name: 'file-error',\n    content: '<path d=\"M160 320h32V160h-32zm16 32c-8.8 0-16 7.2-16 16s7.2 16 16 16 16-7.2 16-16-7.2-16-16-16M352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128zm64 416H96V64h224v96h96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst filesErrorIcon = {\n    name: 'files-error',\n    content: '<path d=\"M64 64h224l-32-32H64c-17.7 0-32 14.3-32 32v320c0 17.7 14.3 32 32 32h64v-32H64zm208 320c-8.8 0-16 7.2-16 16s7.2 16 16 16 16-7.2 16-16-7.2-16-16-16M384 96H192c-17.7 0-32 14.3-32 32v320c0 17.7 14.3 32 32 32h256c17.7 0 32-14.3 32-32V192zm64 352H192V128h160v96h96zm-192-96h32V192h-32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst dataRestIcon = {\n    name: 'data-rest',\n    content: '<path d=\"M32 268v.33zm0 .33.12 86.48v.32c.29 18.1 24.9 34.34 63.87 45.56l.01-86.77c-38.99-11.22-63.7-27.48-64-45.59m192.01-113.1c105.67 0 191.4-27.41 191.93-61.29v-.33C415.94 59.59 330 32 224 32S32.06 59.59 32.07 93.61v.33c.53 33.88 86.27 61.29 191.94 61.29M32 140.32s0 .01 0 0V140zm384 86.81v-.32l-.12-86.81v.32c-.53 33.88-86.26 61.29-191.93 61.29-105.66 0-191.4-27.41-191.95-61.28l.12 86.48v.32c.53 33.88 86.26 61.29 191.93 61.29S415.46 261 416 227.13M327 320h89l-.07-52v.32c-.34 21.73-35.73 40.8-88.93 51.68m-130.74 96.93 19.85 31.05h-27.17l-16.33-27.03c-1.22-2.05-2.39-3.88-3.52-5.49-1.12-1.61-2.26-2.99-3.41-4.14s-2.34-2.03-3.59-2.64-2.6-.92-4.06-.92h-6.37v40.21H128V342.95h37.5c25.49 0 38.23 9.52 38.23 28.56q0 5.49-1.68 10.14c-1.12 3.1-2.71 5.9-4.76 8.39s-4.53 4.64-7.43 6.45c-2.91 1.81-6.14 3.22-9.7 4.25v.29c1.56.49 3.08 1.28 4.54 2.38s2.88 2.38 4.25 3.85c1.37 1.46 2.67 3.04 3.92 4.72 1.23 1.69 2.37 3.34 3.39 4.95m-17.43-42.48c0-9.18-5.49-13.77-16.48-13.77h-10.69v29.22h10.25c5.08 0 9.16-1.46 12.23-4.39 3.13-2.98 4.69-6.67 4.69-11.06m70.75 30.32h34.35v-19.19h-34.35v-23.36h36.91v-19.26h-60.57v105.03h62.99V428.8h-39.33zm115.58-6.01c-2.39-2.49-5.26-4.72-8.61-6.7-3.34-1.98-7.12-3.85-11.32-5.6-3.08-1.27-5.84-2.5-8.28-3.7s-4.52-2.42-6.23-3.66q-2.565-1.86-3.96-3.96c-.93-1.39-1.39-2.97-1.39-4.72 0-1.61.41-3.06 1.25-4.36.83-1.29 2-2.4 3.52-3.33 1.51-.93 3.37-1.65 5.57-2.16s4.64-.77 7.32-.77c1.95 0 4.02.15 6.19.44s4.36.75 6.56 1.36 4.33 1.38 6.41 2.31c2.07.93 3.99 2 5.75 3.22v-21.9c-3.56-1.37-7.46-2.38-11.68-3.04s-9.07-.99-14.54-.99c-5.57 0-10.84.6-15.82 1.79s-9.36 3.06-13.15 5.6c-3.78 2.54-6.77 5.77-8.97 9.7q-3.3 5.895-3.3 14.1c0 6.98 2.01 12.94 6.04 17.87s10.14 9.11 18.35 12.52c3.22 1.32 6.23 2.61 9.01 3.88s5.19 2.59 7.21 3.96q3.045 2.055 4.8 4.47c1.755 2.415 1.76 3.44 1.76 5.49 0 1.51-.37 2.92-1.1 4.21s-1.84 2.42-3.33 3.37-3.34 1.7-5.57 2.23q-3.33.81-7.8.81-7.62 0-15.09-2.67c-7.47-2.67-9.59-4.46-13.84-8.02v23.44c3.81 1.95 8.31 3.42 13.51 4.39s10.68 1.46 16.44 1.46c5.61 0 10.95-.54 16-1.61s9.49-2.84 13.29-5.31 6.82-5.69 9.05-9.67q3.33-5.97 3.33-14.76c0-4.25-.63-7.97-1.9-11.17a26.1 26.1 0 0 0-5.48-8.52m14.94-55.81v19.26h29.81v85.77h23.73v-85.77h29.96v-19.26z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst fileTypescriptIcon = {\n    name: 'file-typescript',\n    content: '<path d=\"M64 128h192v48h-72v208h-48V176H64zm316.6 107.6c-35-12.6-50.1-21.6-50.1-40.6 0-14.6 12.9-29.9 43.3-29.9 24.6 0 42.9 7.1 52.3 11.8l11.5-36.6c-13.6-6.5-34.4-12.3-62.8-12.3-56.8 0-92.7 30.6-92.7 71.3 0 35.6 27.6 57.6 70.9 72.1 33.1 11.4 46.4 22.4 46.4 41.2 0 20.3-17.1 33.9-47.6 33.9-24.4 0-47.9-7.4-63.3-15.8l-10.6 37.6c14.3 8.3 43.1 15.8 70.8 15.8 67.6 0 99.3-34.6 99.3-74.6 0-35.8-21.9-57.4-67.4-73.9\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tablePositionStartIcon = {\n    name: 'table-position-start',\n    content: '<path d=\"M480 320v32H32v-32zM32 416h448v-32H32zm192-160H32V32h224v224zm-64-128h64V64h-64zm-32 32H64v64h64zm0-96H64v64h64zm32 160h64v-64h-64zM32 480h320v-32H32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tablePositionCenterIcon = {\n    name: 'table-position-center',\n    content: '<path d=\"M352 256V32H128v224zM256 64h64v64h-64zm-32 160h-64v-64h64zm0-96h-64V64h64zm32 32h64v64h-64zM32 448h320v32H32zm448-128v32H32v-32zM32 384h448v32H32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst tablePositionEndIcon = {\n    name: 'table-position-end',\n    content: '<path d=\"M32 384h448v32H32zm0 96h320v-32H32zM480 32v224H256V32zM352 160h-64v64h64zm0-96h-64v64h64zm96 96h-64v64h64zm0-96h-64v64h64zM32 352h448v-32H32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst listRomanUpperIcon = {\n    name: 'list-roman-upper',\n    content: '<path d=\"M32 32h32v128H32zm0 288h32V192H32zm64 0h32V192H96zM32 480h32V352H32zm64 0h32V352H96zm64 0h32V352h-32zM128 96h352v32H128zm64 160h288v32H192zm64 160h224v32H256zM96 152c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8m64 160c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8m64 160c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst listRomanLowerIcon = {\n    name: 'list-roman-lower',\n    content: '<path d=\"M32 64h16v96H32zm0 256h16v-96H32zm32 0h16v-96H64zM32 480h16v-96H32zm32 0h16v-96H64zm32 0h16v-96H96zM48 40c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8m32 112c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8m32 160c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8M48 200c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8m32 0c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8M48 360c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8m32 0c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8m32 0c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8m32 112c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8M128 96h352v32H128zm32 160h320v32H160zm32 160h288v32H192z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst importIcon = {\n    name: 'import',\n    content: '<path d=\"M96 480c-17.7 0-32-14.3-32-31.9V192c0-17.7 14.3-32 32-32h96.3v30.9H96.4V448h319.1V190.9h-95.9V160H416c17.7 0 32 14.3 32 31.9V448c0 17.7-14.3 32-31.9 32zm159.5-162 96.5-94h-64.5V32h-64v192H159z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst exportIcon = {\n    name: 'export',\n    content: '<path d=\"M96 480c-4.3 0-8.5-.8-12.5-2.5-3.8-1.6-7.3-3.9-10.2-6.9-2.9-2.9-5.3-6.4-6.9-10.2-1.7-3.9-2.5-8.2-2.5-12.5V192c0-4.3.8-8.5 2.5-12.5 1.6-3.8 3.9-7.3 6.9-10.2 2.9-2.9 6.4-5.3 10.2-6.9 3.9-1.7 8.2-2.5 12.5-2.5h96.3v31.9H96.4v256.3h319.1V191.9h-95.9V160H416c17.7 0 32 14.3 32 31.9V448c0 17.7-14.3 32-31.9 32zm192-160V126h64.5L256 32l-96.5 94H224v194z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst graphIcon = {\n    name: 'graph',\n    content: '<path d=\"M64 448h416v32H32V32h32zm128-192-96 96v64h384V160L288 320zM416 64l14.2 14.2L288 192l-96-64-96 96v64l96-96 96 64 174.5-145.4L480 128V64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chartColumnClusteredIcon = {\n    name: 'chart-column-clustered',\n    content: '<path d=\"M320 96v352h-32V288H128v160H64V32H32v448h448V96zm-64 352h-96V320h96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chartColumnStackedIcon = {\n    name: 'chart-column-stacked',\n    content: '<path d=\"M320 192v256h-32V96H128v352H64V32H32v448h448V192zM160 448V256h96v192zm192 0v-96h96v96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chartColumnStacked100Icon = {\n    name: 'chart-column-stacked100',\n    content: '<path d=\"M320 32v416h-32V32H128v416H64V32H32v448h448V32zM160 448V192h96v256zm192 0V288h96v160z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chartColumnRangeIcon = {\n    name: 'chart-column-range',\n    content: '<path d=\"M480 448v32H32V32h32v416zM256 128h-96v224h96zm32-32v288H128V96zm192-64H320v224h160z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chartBarClusteredIcon = {\n    name: 'chart-bar-clustered',\n    content: '<path d=\"M64 448v-64h160V224H64v-32h352V32H32v448h448v-32zm128-192v96H64v-96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chartBarStackedIcon = {\n    name: 'chart-bar-stacked',\n    content: '<path d=\"M64 448v-64h352V224H64v-32h256V32H32v448h448v-32zm0-384h96v96H64zm192 192v96H64v-96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chartBarStacked100Icon = {\n    name: 'chart-bar-stacked100',\n    content: '<path d=\"M480 192V32H32v448h448v-32H64v-64h416V224H64v-32zm-160 64v96H64v-96zM64 64h160v96H64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chartBarRangeIcon = {\n    name: 'chart-bar-range',\n    content: '<path d=\"M480 448v32H32V32h32v416zm-96-192H160v96h224zm32-32v160H128V224zm64-192H256v160h224z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chartAreaClusteredIcon = {\n    name: 'chart-area-clustered',\n    content: '<path d=\"m405.5 200.3-88.2-88.2-91.2 114L192 192l-37.6 45.1L64 146.8V32H32v448h448V96zM320 160l66.7 66.7L320 320l-71.1-71.1zM64 192l69.8 69.8L64 345.6z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chartAreaStackedIcon = {\n    name: 'chart-area-stacked',\n    content: '<path d=\"m320 165.3-128-64-128 128V32H32v448h448V32zm128 7.5L320 352 192 224 64 377.6v-103l134.3-134.3 126.1 63 123.6-103z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chartAreaStacked100Icon = {\n    name: 'chart-area-stacked100',\n    content: '<path d=\"M32 32v448h448V32zm416 108.8L320 320 192 192 64 345.6V64h384z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chartAreaRangeIcon = {\n    name: 'chart-area-range',\n    content: '<path d=\"M64 416v32h416v32H32V32h32v224l128-128 128 64L480 32v192L320 384l-127-64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chartLineIcon = {\n    name: 'chart-line',\n    content: '<path d=\"M64 448h416v32H32V32h32zm152.4-190.4L96 416v-51.2l97.2-129.6 41.2-33-27.3-34.1L96 224v-38l119.9-58.1 43.5 54.3 109-87.2 55.9 85.7L480 114v47l-38 46.7 38 58.3.5 53.3-58.5-87-82.5 101.3-85.1-106.4zm63-50.4 60.1 75.2 64.3-77.1-42.7-63.5z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chartLineStackedIcon = {\n    name: 'chart-line-stacked',\n    content: '<path d=\"M480 448v32H32V32h32v416zM224 292l128 64 128-96v-36l-128 96-128-64-128 96v36zm0-160 128 92 128-60v-36l-128 60-128-92-128 64v36z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chartLineStacked100Icon = {\n    name: 'chart-line-stacked100',\n    content: '<path d=\"M480 448v32H32V32h32v416zM224 228l128 64 128-96v-36l-128 96-128-64-128 96v36zM480 32H96v32h384z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chartLineMarkersIcon = {\n    name: 'chart-line-markers',\n    content: '<path d=\"M480 448v32H0V32h32v416zm0-96c.1 17.7-14.2 32-31.9 32.1s-32-14.2-32.1-31.9c0-1.3.1-2.7.2-4l-83.7-62.8c-8 3.4-17.1 3.4-25.2 0l-83.7 62.8c2.1 17.5-10.4 33.5-27.9 35.6s-33.5-10.4-35.6-27.9c-.7-6.2.3-12.4 3.1-18l-49-73.6-22.7 39.6c8.9 15.3 3.7 34.9-11.5 43.8s-34.9 3.7-43.8-11.5-3.7-34.9 11.5-43.8c4.9-2.8 10.4-4.3 16-4.4l30.6-53.5-28.4-42.6c-.7 0-1.4.1-2.1.1-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32c0 4.9-1.1 9.8-3.3 14.2l19.5 29.3 52.2-91.3c-8.9-15.3-3.8-34.9 11.5-43.8s34.9-3.8 43.8 11.5c2.5 4.4 4 9.2 4.3 14.3l78.4 39.2c14.7-9.7 34.6-5.7 44.3 9 .3.5.7 1.1 1 1.6h72.6c8.8-15.3 28.4-20.5 43.7-11.7s20.5 28.4 11.7 43.7-28.4 20.5-43.7 11.7c-4.9-2.8-8.9-6.8-11.7-11.7h-72.6c-8.8 15.3-28.4 20.5-43.7 11.7-9.3-5.4-15.3-15.1-15.9-25.8l-78.4-39.2c-5.2 3.4-11.3 5.3-17.5 5.3l-60 105.2 57.9 86.9c.7 0 1.4-.1 2.1-.1 4.3 0 8.6.9 12.6 2.6l83.7-62.8c-2.2-17.5 10.3-33.5 27.8-35.7s33.5 10.3 35.7 27.8q.45 3.9 0 7.8l83.7 62.8c16.2-7 35.1.6 42 16.8 1.6 4.1 2.5 8.4 2.5 12.7m-48-192c0 8.8 7.2 16 16 16s16-7.2 16-16-7.2-16-16-16-16 7.2-16 16m-128 0c0 8.8 7.2 16 16 16s16-7.2 16-16-7.2-16-16-16-16 7.2-16 16M176 96c0 8.8 7.2 16 16 16s16-7.2 16-16-7.2-16-16-16-16 7.2-16 16m-96 64c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16m0 160c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16m128 32c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16m128-96c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16m128 96c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chartLineStackedMarkersIcon = {\n    name: 'chart-line-stacked-markers',\n    content: '<path d=\"M480 448v32H0V32h32v416zm0-320c0 17.7-14.3 32-32 32-6.9 0-13.7-2.2-19.2-6.4L352 192c0 17.7-14.3 32-32 32s-32-14.3-32-32c0-2.5.3-5 .9-7.4l-81.1-60.8c-11.1 6.3-24.8 5.4-35-2.2L96 160c0 17.7-14.3 32-32 32s-32-14.3-32-32 14.3-32 32-32c6.9 0 13.7 2.2 19.2 6.4L160 96c0-17.7 14.3-32 32-32s32 14.3 32 32c0 2.5-.3 5-.9 7.4l81.1 60.8c11.1-6.3 24.8-5.4 35 2.2L416 128c0-17.7 14.3-32 32-32s32 14.3 32 32M80 160c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16m128-64c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16m128 96c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16m128-64c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16m16 128c0 17.7-14.3 32-32 32-5.5 0-11-1.4-15.8-4.2l-81.1 60.8c4.1 17.2-6.6 34.4-23.8 38.5s-34.4-6.6-38.5-23.8c-.6-2.4-.9-4.9-.9-7.4l-76.8-38.4c-10.2 7.6-23.9 8.5-35 2.2L95 376.5c4.1 17.2-6.6 34.4-23.8 38.5s-34.4-6.6-38.5-23.8 6.6-34.4 23.8-38.5c7.9-1.9 16.1-.7 23.1 3.3l81.1-60.8c-4.1-17.2 6.6-34.4 23.8-38.5s34.4 6.6 38.5 23.8c.6 2.4.9 4.9.9 7.4l76.8 38.4c10.2-7.6 23.9-8.5 35-2.2l81.1-60.8c-4.1-17.2 6.5-34.5 23.7-38.6s34.5 6.5 38.6 23.7c.6 2.5.9 5.1.9 7.6M80 384c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16m128-96c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16m128 64c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16m128-96c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chartLineStacked100MarkersIcon = {\n    name: 'chart-line-stacked100-markers',\n    content: '<path d=\"M480 448v32H0V32h32v416zm0-192c0 17.7-14.3 32-32 32-5.5 0-11-1.4-15.8-4.2l-81.1 60.8c4.1 17.2-6.6 34.4-23.8 38.5s-34.4-6.6-38.5-23.8c-.6-2.4-.9-4.9-.9-7.4l-76.8-38.4c-10.2 7.6-23.9 8.5-35 2.2L95 376.5c4.1 17.2-6.6 34.4-23.8 38.5s-34.4-6.6-38.5-23.8 6.6-34.4 23.8-38.5c7.9-1.9 16.1-.7 23.1 3.3l81.1-60.8c-4.1-17.2 6.6-34.4 23.8-38.5s34.4 6.6 38.5 23.8c.6 2.4.9 4.9.9 7.4l76.8 38.4c10.2-7.6 23.9-8.5 35-2.2l81.1-60.8c-4.1-17.2 6.5-34.5 23.7-38.6s34.5 6.5 38.6 23.7c.6 2.5.9 5.1.9 7.6M80 384c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16m128-96c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16m128 64c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16m128-96c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16m16-192c0 17.7-14.3 32-32 32-11.4 0-22-6.1-27.7-16h-72.6c-8.8 15.3-28.4 20.5-43.7 11.7-4.9-2.8-8.9-6.8-11.7-11.7h-72.6c-8.8 15.3-28.4 20.5-43.7 11.7-4.9-2.8-8.9-6.8-11.7-11.7H91.7C82.9 95.3 63.3 100.5 48 91.7S27.4 63.3 36.3 48 64.7 27.5 80 36.3c4.9 2.8 8.9 6.8 11.7 11.7h72.6c8.8-15.3 28.4-20.5 43.7-11.7 4.9 2.8 8.9 6.8 11.7 11.7h72.6c8.8-15.3 28.4-20.5 43.7-11.7 4.9 2.8 8.9 6.8 11.7 11.7h72.6c8.8-15.3 28.4-20.5 43.7-11.7 9.9 5.7 16 16.3 16 27.7M80 64c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16m128 0c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16m128 0c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16m128 0c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chartPieIcon = {\n    name: 'chart-pie',\n    content: '<path d=\"M473 310.3c.9-2.1 1.4-4.2 1.8-6.3l.1-.5c.5-2.1.9-4.1 1.3-6.2v-.2c.8-4.4 1.5-8.8 1.8-13.3v-.4c.5-2 .7-3.9.9-5.9l.1-1.7c.1-1.6.3-3.1.4-4.7 0-.7.1-1.4.1-2 .1-1.5.2-3.1.2-4.6 0-.6 0-1.3.1-1.9.1-2.2.1-4.3.1-6.5 0-31.8-6.7-63.2-19.8-92.2-1.5-3.3-3.1-6.6-4.7-9.8-4.1-8-8.7-15.8-13.8-23.3-5-7.4-10.5-14.6-16.4-21.3-1.2-1.3-2.4-2.7-3.6-4-2.4-2.7-4.9-5.3-7.4-7.8s-5.1-5-7.8-7.4-5.4-4.7-8.1-7c-4.1-3.4-8.4-6.7-12.8-9.8-20.7-14.8-43.8-25.9-68.3-32.9-5.3-1.5-10.7-2.8-16.2-4-3.6-.7-7.3-1.4-11-2s-7.4-1-11.2-1.3c-5.6-.6-11.3-.9-17.1-1.1-1.9 0-3.9-.1-5.8-.1C132.3 32 32 132.3 32 256s100.3 224 224 224c105 0 193.1-72.2 217-169.7m-81.2 81.5c-74.4 75.6-195.9 76.6-271.5 2.2S43.7 198 118 122.5l2.2-2.2c36-36.2 84.9-56.4 135.8-56.3v192l186.3 46.6c-8.4 33.8-25.9 64.6-50.5 89.2\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chartDoughnutIcon = {\n    name: 'chart-doughnut',\n    content: '<path d=\"M473 310.3c.9-2.1 1.4-4.2 1.8-6.3l.1-.5c.5-2.1.9-4.1 1.3-6.2v-.3c.8-4.4 1.5-8.8 1.8-13.3v-.4c.5-2 .7-3.9.9-5.9l.1-1.7c.1-1.6.3-3.1.4-4.7 0-.7.1-1.4.1-2 .1-1.5.2-3.1.2-4.6 0-.6 0-1.3.1-1.9.1-2.2.1-4.3.1-6.5 0-31.8-6.7-63.2-19.8-92.2-1.5-3.3-3.1-6.6-4.7-9.8-4.1-8-8.7-15.8-13.8-23.3-5-7.4-10.5-14.6-16.4-21.3-1.2-1.3-2.4-2.7-3.6-4-2.4-2.7-4.9-5.3-7.4-7.8s-5.1-5-7.8-7.4-5.4-4.7-8.1-7c-4.1-3.4-8.4-6.7-12.8-9.8-20.7-14.8-43.8-25.9-68.3-32.9-5.3-1.5-10.7-2.8-16.2-4-3.6-.7-7.3-1.4-11-2s-7.4-1-11.2-1.3c-5.6-.6-11.3-.9-17.1-1.1-1.9 0-3.9-.1-5.8-.1C132.3 32 32 132.3 32 256s100.3 224 224 224c105 0 193.1-72.2 217-169.7M320 256c0 35.3-28.7 64-64 64s-64-28.7-64-64 28.7-64 64-64 64 28.7 64 64m71.8 135.8c-74.4 75.6-195.9 76.6-271.5 2.2S43.7 198 118 122.4l2.2-2.2c36-36.1 84.9-56.3 135.8-56.2v96c-53 0-96 43-96 96s43 96 96 96c44 0 82.4-30 93.1-72.7l93.2 23.3c-8.4 33.8-25.9 64.6-50.5 89.2m-39.8-133v.8zm0 2.8v.9zm-.4 2.9-.1.7zm-.6 3.2v.2zm-1 5.9v.1zm0 2.8v.2z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chartScatterIcon = {\n    name: 'chart-scatter',\n    content: '<path d=\"M480 448v32H32V32h32v416zM160 96c0 17.7-14.3 32-32 32s-32-14.3-32-32 14.3-32 32-32 32 14.3 32 32m-16 0c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16m112 192c0 17.7-14.3 32-32 32s-32-14.3-32-32 14.3-32 32-32 32 14.3 32 32m-16 0c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16m112-128c0 17.7-14.3 32-32 32s-32-14.3-32-32 14.3-32 32-32 32 14.3 32 32m-16 0c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16m112 192c0 17.7-14.3 32-32 32s-32-14.3-32-32 14.3-32 32-32 32 14.3 32 32m-16 0c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chartScatterSmoothLinesMarkersIcon = {\n    name: 'chart-scatter-smooth-lines-markers',\n    content: '<path d=\"M480 448v32H32V32h32v416zm0-384c0 17.7-14.3 32-32 32-15.6 0-28.9-11.2-31.5-26.5-9.2-1.3-22-1.8-39-.8C342.5 71 305.1 79.4 275 92c-19.1 7.9-47.9 23-60.7 45.1 12.7 12.3 13 32.6.6 45.3l-1.1 1.1c9.1 13.1 28.9 18.6 61.1 25.1 21 4.2 42.8 8.5 60.2 18.9 12.7 7.6 21.7 17.8 27 30.3 16.8 5.6 25.8 23.7 20.2 40.5-3.2 9.5-10.6 17-20.1 20.2-11.2 29.5-39.2 54.6-81.6 72.2-29.7 12.1-61.2 19.2-93.2 21.1q-6 .3-11.4.3c-9.6.1-19.3-.7-28.8-2.5-14.1 10.6-34.2 7.7-44.8-6.4s-7.7-34.2 6.4-44.8 34.2-7.7 44.8 6.4c3.2 4.2 5.2 9.1 6 14.3 8.7 1 17.5 1.2 26.2.7 28.3-1.6 56.2-7.9 82.5-18.6 19.7-8.2 49.8-24.3 62-49.6-13-12-13.8-32.2-1.8-45.2.4-.5.8-.9 1.3-1.3-9.1-13.2-28.8-18.7-61.1-25.2-21-4.2-42.8-8.5-60.2-18.9-12.8-7.7-21.9-18-27.2-30.7-16.7-5.9-25.4-24.2-19.5-40.9 3.3-9.4 10.9-16.7 20.4-19.8 5-11 12-21 20.6-29.5 14.6-14.5 34.7-27.2 59.8-37.6C296 48.6 337 39.2 375.4 36.8c22.9-1.5 40-.4 52.8 2.1 13.9-11 34-8.6 44.9 5.3 4.5 5.6 6.9 12.6 6.9 19.8m-272 96c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16m-64 224c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16m192-96c0 8.8 7.2 16 16 16s16-7.2 16-16-7.2-16-16-16-16 7.2-16 16M464 64c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chartScatterSmoothLinesIcon = {\n    name: 'chart-scatter-smooth-lines',\n    content: '<path d=\"M480 448v32H32V32h32v416zm-144-87.8c21.1-19.9 31.8-44.5 31.8-73.1 0-27.3-11-47.6-32.6-60.6-17.3-10.3-38.8-14.5-59.6-18.6-46.2-9-66.5-16.3-66.8-47.9-.4-41.2 71.8-65.5 114.8-76.4C385.4 68.1 448.4 64 449 64l-2-32c-2.7.2-66.2 4.3-130.8 20.5-38.7 9.7-69.8 21.8-92.4 36-31.4 19.8-47.3 43.9-47 71.7.2 27.2 11.3 47.6 32.9 60.5 17.3 10.3 38.9 14.5 59.7 18.6 19 3.7 36.9 7.2 49.3 14.6 11.9 7.1 17 17.1 17 33.2 0 19.7-7.1 36-21.7 49.7-24.1 22.8-68.9 38.2-129.3 44.6-29.2 3-58.5 3.9-87.8 2.6l-2 32c1.7.1 12.1.7 28 .7 51.4 0 159.8-6.4 213.1-56.5\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chartScatterStraightLinesMarkersIcon = {\n    name: 'chart-scatter-straight-lines-markers',\n    content: '<path d=\"M480 448v32H32V32h32v416zm0-384c0 17.7-14.3 32-32 32-7.4 0-14.6-2.6-20.3-7.3L224 165.1l116.4 93.1c16.5-6.4 35 1.7 41.4 18.2s-1.7 35-18.2 41.4c-10.3 4-22 2.4-30.8-4.2l-173.1 74.2c-2.1 17.5-18 30.1-35.6 28s-30.1-18-28-35.6c2.1-17.5 18-30.1 35.6-28 5.6.7 10.9 2.8 15.4 6.2l173.1-74.2c0-.4.1-.7.1-1l-116.7-93.4c-16.5 6.4-35-1.7-41.4-18.2s1.7-35 18.2-41.4c10.8-4.2 23-2.3 32 5.1l204.1-76.5c2.9-17.4 19.4-29.2 36.8-26.3C468.7 35.1 480 48.4 480 64m-272 96c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16m-64 224c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16m192-96c0 8.8 7.2 16 16 16s16-7.2 16-16-7.2-16-16-16-16 7.2-16 16M464 64c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chartScatterStraightLinesIcon = {\n    name: 'chart-scatter-straight-lines',\n    content: '<path d=\"M480 448v32H32V32h32v416zm-98.5-156.9-158.8-127L448 64V32L161.3 156l161.2 128.9L128 384v32z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chartBubbleIcon = {\n    name: 'chart-bubble',\n    content: '<path d=\"M480 448v32H32V32h32v416zM192 256c-35.3 0-64 28.7-64 64s28.7 64 64 64 64-28.7 64-64-28.7-64-64-64m0-32c53 0 96 43 96 96s-43 96-96 96-96-43-96-96 43-96 96-96m224 96c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32m0-32c35.3 0 64 28.7 64 64s-28.7 64-64 64-64-28.7-64-64 28.7-64 64-64M368 96c-44.2 0-80 35.8-80 80s35.8 80 80 80 80-35.8 80-80-35.8-80-80-80M176 64c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chartCandlestickIcon = {\n    name: 'chart-candlestick',\n    content: '<path d=\"M480 448v32H32V32h32v416zm-192-96h-64v64h-32v-64h-64V96h64V32h32v64h64zm-32-224h-96v192h96zm224 64h-64V64h-32v128h-64v128h64v64h32v-64h64z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chartOhlcIcon = {\n    name: 'chart-ohlc',\n    content: '<path d=\"M480 448v32H32V32h32v416zM224 320V96h-32v32h-64v32h64v256h32v-64h64v-32zM416 96V32h-32v160h-64v32h64v96h32V128h64V96z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chartRadarIcon = {\n    name: 'chart-radar',\n    content: '<path d=\"M272 32h-32v44L80.7 195.5l-41.1-10-7.6 31.1 42.3 10.3 81 148.5-62.7 86.3 25.9 18.8 67.2-92.5L344 412.3l49.5 68.2 25.9-18.8-46.8-64.4 40.8-163.1 65.8-15.3-7.3-31.2-74.9 17.4L272 80zm-32 202.2-119-28.9L240 116zm32 0v-109l88.4 88.4zm-95.9 112.5-59.8-109.6 118.5 28.8zm172 17.3-71-97.7 101.3-23.6zm-30.6 12-110.6-17 49.1-67.6z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chartRadarMarkersIcon = {\n    name: 'chart-radar-markers',\n    content: '<path d=\"m472 187.7-51.2 11.9c-9.4-8-22.5-9.9-33.8-4.8L288.1 96c0-11.5-6.2-22.1-16.1-27.8V32h-32v36.4c-7.1 4.1-12.3 10.8-14.6 18.6L96.1 184c-8.6 0-16.7 3.4-22.8 9.5l-32.8-8-7.5 31.1 32.3 7.8c2.7 9.9 10 17.8 19.6 21.5l61 111.8c-3 8.9-2 18.7 2.9 26.7l-56.1 77.3 25.9 18.8L177 400c8.5-.2 16.5-3.8 22.3-10l122 18.8c3.9 13.8 16.5 23.2 30.8 23.2 1.9 0 3.9-.2 5.8-.5l35.6 49 25.9-18.8-37.1-51.1c3.7-10.4 1.7-22-5.2-30.6l31.4-125.2c11.8-3.2 20.8-12.9 23.1-24.9l47.7-11.1zm-111.4 25.9L272 234.2V125.1zM256 80c8.8 0 16 7.2 16 16s-7.2 16-16 16-16-7.2-16-16 7.2-16 16-16m-21.1 39.9c1.6 1.4 3.3 2.6 5.1 3.7V234l-113.3-27.6c-.4-1.4-1-2.8-1.6-4.1zM96 232c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16m80 152c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16m7.2-47.2c-2.4-.5-4.8-.8-7.2-.8-1.8 0-3.7.2-5.5.5l-52.9-96.9c.7-.6 1.3-1.2 1.9-1.9l115.3 28zm23.6 22 49.1-67.6 61.5 84.6zM352 416c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16m-3.9-52.3L277 265.9l97.4-22.6c.9 1.2 1.9 2.4 3 3.5zM400 240c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chartRadarFilledIcon = {\n    name: 'chart-radar-filled',\n    content: '<path d=\"m354.4 372.1 65.1 89.6-25.9 18.8-75-103.2-109.2-21.8-90.8 125-25.9-18.8 90-123.8-67.3-101L32 216.6l7.5-31.1 65.8 16L240 107.2V32h32v80l99.2 99.2L472 187.7l7.3 31.2-98.8 23z\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chartRoseIcon = {\n    name: 'chart-rose',\n    content: '<path d=\"M226 251.4 44.3 329.3c-23.8-68.9-12.6-145.1 30-204.3zm-82.1-109.5L240 222V96.8c-36.2 3.6-70.1 19.6-96.1 45.1m231.5 160.2L279 278l27.3 95.7c31.8-13.6 56.7-39.4 69.1-71.6M96 353.4c37.3 69.1 115 106.1 192.2 91.4L244 290zM272 32v211.4l204.6 51.1c2.3-12.9 3.4-26 3.4-39.1C480 137.1 388.2 40.2 272 32\" />',\n    viewBox: '0 0 512 512'\n};\n\nconst chartChoroplethIcon = {\n    name: 'chart-choropleth',\n    content: '<path d=\"M448 64v384H64V64zm32-32H32v448h448zm-96 256v13.3l-64 64v37.5l13.3 13.3H416V264.6zm-50.7-160 64 64-32 32 18.8 23.4 32-21.3V96H288v18.8l13.3 13.3h32zM224 192l32 32-23.7 23.7L352 276v-20l-32-32 32-32-32-32h-32l-32-32V96h-32l-64 64 32 32zm0 86-32 10-32 32 32 32v32l-32 32h128v-64l50.4-50.4zm-29.4-37.8 16.2-16.2h-32l-64-64 64-64H96v167.5zM114.8 320l37.6-37.6L96 296.5V416h32v-13.3l32-32v-5.5z\" />',\n    viewBox: '0 0 512 512'\n};\n\nvar svgIcons = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    accessibilityIcon: accessibilityIcon,\n    aggregateFieldsIcon: aggregateFieldsIcon,\n    alignBottomIcon: alignBottomIcon,\n    alignCenterIcon: alignCenterIcon,\n    alignItemsBaselineAltIcon: alignItemsBaselineAltIcon,\n    alignItemsBaselineIcon: alignItemsBaselineIcon,\n    alignItemsCenterAltIcon: alignItemsCenterAltIcon,\n    alignItemsCenterIcon: alignItemsCenterIcon,\n    alignItemsEndAltIcon: alignItemsEndAltIcon,\n    alignItemsEndIcon: alignItemsEndIcon,\n    alignItemsStartAltIcon: alignItemsStartAltIcon,\n    alignItemsStartIcon: alignItemsStartIcon,\n    alignItemsStretchAltIcon: alignItemsStretchAltIcon,\n    alignItemsStretchIcon: alignItemsStretchIcon,\n    alignJustifyIcon: alignJustifyIcon,\n    alignLeftIcon: alignLeftIcon,\n    alignMiddleIcon: alignMiddleIcon,\n    alignRemoveIcon: alignRemoveIcon,\n    alignRightIcon: alignRightIcon,\n    alignSelfCenterAltIcon: alignSelfCenterAltIcon,\n    alignSelfCenterIcon: alignSelfCenterIcon,\n    alignSelfEndAltIcon: alignSelfEndAltIcon,\n    alignSelfEndIcon: alignSelfEndIcon,\n    alignSelfStartAltIcon: alignSelfStartAltIcon,\n    alignSelfStartIcon: alignSelfStartIcon,\n    alignSelfStretchAltIcon: alignSelfStretchAltIcon,\n    alignSelfStretchIcon: alignSelfStretchIcon,\n    alignToGridIcon: alignToGridIcon,\n    alignTopIcon: alignTopIcon,\n    allIcon: allIcon,\n    anchorIcon: anchorIcon,\n    applyFormatIcon: applyFormatIcon,\n    arrowDownIcon: arrowDownIcon,\n    arrowLeftIcon: arrowLeftIcon,\n    arrowOverflowDownIcon: arrowOverflowDownIcon,\n    arrowRightIcon: arrowRightIcon,\n    arrowRotateCcwIcon: arrowRotateCcwIcon,\n    arrowRotateCcwSmallIcon: arrowRotateCcwSmallIcon,\n    arrowRotateCwIcon: arrowRotateCwIcon,\n    arrowRotateCwSmallIcon: arrowRotateCwSmallIcon,\n    arrowUpIcon: arrowUpIcon,\n    arrowsAxesIcon: arrowsAxesIcon,\n    arrowsLeftRightIcon: arrowsLeftRightIcon,\n    arrowsMoveIcon: arrowsMoveIcon,\n    arrowsNoChangeIcon: arrowsNoChangeIcon,\n    arrowsNoRepeatIcon: arrowsNoRepeatIcon,\n    arrowsSwapIcon: arrowsSwapIcon,\n    arrowsTopBottomIcon: arrowsTopBottomIcon,\n    barcodeIcon: barcodeIcon,\n    barcodeOutlineIcon: barcodeOutlineIcon,\n    barcodeQrCodeScannerIcon: barcodeQrCodeScannerIcon,\n    barcodeScannerIcon: barcodeScannerIcon,\n    behanceBoxIcon: behanceBoxIcon,\n    behanceIcon: behanceIcon,\n    bellIcon: bellIcon,\n    binocularsIcon: binocularsIcon,\n    bloggerBoxIcon: bloggerBoxIcon,\n    bloggerIcon: bloggerIcon,\n    blurIcon: blurIcon,\n    boldIcon: boldIcon,\n    bookIcon: bookIcon,\n    borderBottomIcon: borderBottomIcon,\n    borderColorIcon: borderColorIcon,\n    borderLeftIcon: borderLeftIcon,\n    borderRadiusBottomLeftIcon: borderRadiusBottomLeftIcon,\n    borderRadiusBottomRightIcon: borderRadiusBottomRightIcon,\n    borderRadiusIcon: borderRadiusIcon,\n    borderRadiusTopLeftIcon: borderRadiusTopLeftIcon,\n    borderRadiusTopRightIcon: borderRadiusTopRightIcon,\n    borderRightIcon: borderRightIcon,\n    borderStyleBottomIcon: borderStyleBottomIcon,\n    borderStyleIcon: borderStyleIcon,\n    borderStyleLeftIcon: borderStyleLeftIcon,\n    borderStyleRightIcon: borderStyleRightIcon,\n    borderStyleTopIcon: borderStyleTopIcon,\n    borderTopIcon: borderTopIcon,\n    borderTypeIcon: borderTypeIcon,\n    bordersAllIcon: bordersAllIcon,\n    bordersInsideHorizontalIcon: bordersInsideHorizontalIcon,\n    bordersInsideIcon: bordersInsideIcon,\n    bordersInsideVerticalIcon: bordersInsideVerticalIcon,\n    bordersNoneIcon: bordersNoneIcon,\n    bordersOutsideIcon: bordersOutsideIcon,\n    bordersShowHideIcon: bordersShowHideIcon,\n    boxSizingIcon: boxSizingIcon,\n    brightnessContrastIcon: brightnessContrastIcon,\n    bringBackwardIcon: bringBackwardIcon,\n    bringForwardIcon: bringForwardIcon,\n    bringToBackIcon: bringToBackIcon,\n    bringToFrontIcon: bringToFrontIcon,\n    brushIcon: brushIcon,\n    buildingBlocksIcon: buildingBlocksIcon,\n    buttonIcon: buttonIcon,\n    calculatorIcon: calculatorIcon,\n    calendarDateIcon: calendarDateIcon,\n    calendarIcon: calendarIcon,\n    cameraIcon: cameraIcon,\n    cancelCircleIcon: cancelCircleIcon,\n    cancelIcon: cancelIcon,\n    cancelOutlineIcon: cancelOutlineIcon,\n    caretAltDownIcon: caretAltDownIcon,\n    caretAltExpandIcon: caretAltExpandIcon,\n    caretAltLeftIcon: caretAltLeftIcon,\n    caretAltRightIcon: caretAltRightIcon,\n    caretAltToBottomIcon: caretAltToBottomIcon,\n    caretAltToLeftIcon: caretAltToLeftIcon,\n    caretAltToRightIcon: caretAltToRightIcon,\n    caretAltToTopIcon: caretAltToTopIcon,\n    caretAltUpIcon: caretAltUpIcon,\n    caretBlIcon: caretBlIcon,\n    caretBrIcon: caretBrIcon,\n    caretDoubleAltDownIcon: caretDoubleAltDownIcon,\n    caretDoubleAltLeftIcon: caretDoubleAltLeftIcon,\n    caretDoubleAltRightIcon: caretDoubleAltRightIcon,\n    caretDoubleAltUpIcon: caretDoubleAltUpIcon,\n    caretTlIcon: caretTlIcon,\n    caretTrIcon: caretTrIcon,\n    cartIcon: cartIcon,\n    categorizeIcon: categorizeIcon,\n    cellSplitHorizontallyIcon: cellSplitHorizontallyIcon,\n    cellSplitVerticallyIcon: cellSplitVerticallyIcon,\n    cellsMergeHorizontallyIcon: cellsMergeHorizontallyIcon,\n    cellsMergeIcon: cellsMergeIcon,\n    cellsMergeVerticallyIcon: cellsMergeVerticallyIcon,\n    changeManuallyIcon: changeManuallyIcon,\n    chartAreaClusteredIcon: chartAreaClusteredIcon,\n    chartAreaRangeIcon: chartAreaRangeIcon,\n    chartAreaStacked100Icon: chartAreaStacked100Icon,\n    chartAreaStackedIcon: chartAreaStackedIcon,\n    chartBarClusteredIcon: chartBarClusteredIcon,\n    chartBarRangeIcon: chartBarRangeIcon,\n    chartBarStacked100Icon: chartBarStacked100Icon,\n    chartBarStackedIcon: chartBarStackedIcon,\n    chartBubbleIcon: chartBubbleIcon,\n    chartCandlestickIcon: chartCandlestickIcon,\n    chartChoroplethIcon: chartChoroplethIcon,\n    chartColumnClusteredIcon: chartColumnClusteredIcon,\n    chartColumnRangeIcon: chartColumnRangeIcon,\n    chartColumnStacked100Icon: chartColumnStacked100Icon,\n    chartColumnStackedIcon: chartColumnStackedIcon,\n    chartDoughnutIcon: chartDoughnutIcon,\n    chartLineIcon: chartLineIcon,\n    chartLineMarkersIcon: chartLineMarkersIcon,\n    chartLineStacked100Icon: chartLineStacked100Icon,\n    chartLineStacked100MarkersIcon: chartLineStacked100MarkersIcon,\n    chartLineStackedIcon: chartLineStackedIcon,\n    chartLineStackedMarkersIcon: chartLineStackedMarkersIcon,\n    chartOhlcIcon: chartOhlcIcon,\n    chartPieIcon: chartPieIcon,\n    chartRadarFilledIcon: chartRadarFilledIcon,\n    chartRadarIcon: chartRadarIcon,\n    chartRadarMarkersIcon: chartRadarMarkersIcon,\n    chartRoseIcon: chartRoseIcon,\n    chartScatterIcon: chartScatterIcon,\n    chartScatterSmoothLinesIcon: chartScatterSmoothLinesIcon,\n    chartScatterSmoothLinesMarkersIcon: chartScatterSmoothLinesMarkersIcon,\n    chartScatterStraightLinesIcon: chartScatterStraightLinesIcon,\n    chartScatterStraightLinesMarkersIcon: chartScatterStraightLinesMarkersIcon,\n    checkCircleIcon: checkCircleIcon,\n    checkIcon: checkIcon,\n    checkOutlineIcon: checkOutlineIcon,\n    checkboxCheckedIcon: checkboxCheckedIcon,\n    checkboxIcon: checkboxIcon,\n    checkboxIndeterminateIcon: checkboxIndeterminateIcon,\n    checkboxNullIcon: checkboxNullIcon,\n    chevronDoubleDownIcon: chevronDoubleDownIcon,\n    chevronDoubleLeftIcon: chevronDoubleLeftIcon,\n    chevronDoubleRightIcon: chevronDoubleRightIcon,\n    chevronDoubleUpIcon: chevronDoubleUpIcon,\n    chevronDownIcon: chevronDownIcon,\n    chevronLeftIcon: chevronLeftIcon,\n    chevronRightIcon: chevronRightIcon,\n    chevronUpIcon: chevronUpIcon,\n    circleIcon: circleIcon,\n    clearCssIcon: clearCssIcon,\n    clipboardCodeIcon: clipboardCodeIcon,\n    clipboardHtmlIcon: clipboardHtmlIcon,\n    clipboardIcon: clipboardIcon,\n    clipboardMarkdownIcon: clipboardMarkdownIcon,\n    clipboardTextIcon: clipboardTextIcon,\n    clipboardWordAltIcon: clipboardWordAltIcon,\n    clipboardWordIcon: clipboardWordIcon,\n    clockArrowRotateIcon: clockArrowRotateIcon,\n    clockIcon: clockIcon,\n    closedCaptionsIcon: closedCaptionsIcon,\n    cloudIcon: cloudIcon,\n    codeIcon: codeIcon,\n    codeSnippetIcon: codeSnippetIcon,\n    colResizeIcon: colResizeIcon,\n    columnFreezeIcon: columnFreezeIcon,\n    columnsIcon: columnsIcon,\n    commentIcon: commentIcon,\n    commentRemoveIcon: commentRemoveIcon,\n    commentsRemoveIcon: commentsRemoveIcon,\n    connectorIcon: connectorIcon,\n    convertLowercaseIcon: convertLowercaseIcon,\n    convertUppercaseIcon: convertUppercaseIcon,\n    copyFormatIcon: copyFormatIcon,\n    copyIcon: copyIcon,\n    cropIcon: cropIcon,\n    crosstabIcon: crosstabIcon,\n    crosstabWizardIcon: crosstabWizardIcon,\n    csIcon: csIcon,\n    csprojIcon: csprojIcon,\n    css3Icon: css3Icon,\n    cssIcon: cssIcon,\n    customFormatIcon: customFormatIcon,\n    customIconIcon: customIconIcon,\n    cutIcon: cutIcon,\n    dataCsvIcon: dataCsvIcon,\n    dataIcon: dataIcon,\n    dataJsonIcon: dataJsonIcon,\n    dataOdsIcon: dataOdsIcon,\n    dataRestIcon: dataRestIcon,\n    dataSdsIcon: dataSdsIcon,\n    dataSqlIcon: dataSqlIcon,\n    dataWebIcon: dataWebIcon,\n    decimalDecreaseIcon: decimalDecreaseIcon,\n    decimalIncreaseIcon: decimalIncreaseIcon,\n    decreaseHorizontalSpacingIcon: decreaseHorizontalSpacingIcon,\n    decreaseVerticalSpacingIcon: decreaseVerticalSpacingIcon,\n    deliciousBoxIcon: deliciousBoxIcon,\n    deliciousIcon: deliciousIcon,\n    detailSectionIcon: detailSectionIcon,\n    diggBoxIcon: diggBoxIcon,\n    diggIcon: diggIcon,\n    dimensionsIcon: dimensionsIcon,\n    displayBlockIcon: displayBlockIcon,\n    displayFlexIcon: displayFlexIcon,\n    displayInlineBlockIcon: displayInlineBlockIcon,\n    displayInlineFlexIcon: displayInlineFlexIcon,\n    divIcon: divIcon,\n    divideIcon: divideIcon,\n    documentManagerIcon: documentManagerIcon,\n    dollarIcon: dollarIcon,\n    downloadIcon: downloadIcon,\n    downloadLightIcon: downloadLightIcon,\n    dragAndDropIcon: dragAndDropIcon,\n    dribbbleBoxIcon: dribbbleBoxIcon,\n    dribbbleIcon: dribbbleIcon,\n    dropletIcon: dropletIcon,\n    dropletSlashIcon: dropletSlashIcon,\n    dropletSliderIcon: dropletSliderIcon,\n    editToolsIcon: editToolsIcon,\n    envelopBoxIcon: envelopBoxIcon,\n    envelopIcon: envelopIcon,\n    envelopLinkIcon: envelopLinkIcon,\n    envelopeBoxIcon: envelopeBoxIcon,\n    envelopeIcon: envelopeIcon,\n    envelopeLinkIcon: envelopeLinkIcon,\n    equalIcon: equalIcon,\n    exclamationCircleIcon: exclamationCircleIcon,\n    exeIcon: exeIcon,\n    exportIcon: exportIcon,\n    eyeIcon: eyeIcon,\n    eyeSlashIcon: eyeSlashIcon,\n    eyedropperIcon: eyedropperIcon,\n    facebookBoxIcon: facebookBoxIcon,\n    facebookIcon: facebookIcon,\n    fileAddIcon: fileAddIcon,\n    fileAscxIcon: fileAscxIcon,\n    fileAudioIcon: fileAudioIcon,\n    fileBacIcon: fileBacIcon,\n    fileConfigIcon: fileConfigIcon,\n    fileCsvIcon: fileCsvIcon,\n    fileDataIcon: fileDataIcon,\n    fileDiscImageIcon: fileDiscImageIcon,\n    fileErrorIcon: fileErrorIcon,\n    fileExcelIcon: fileExcelIcon,\n    fileFlashIcon: fileFlashIcon,\n    fileFooterIcon: fileFooterIcon,\n    fileHeaderIcon: fileHeaderIcon,\n    fileHorizontalIcon: fileHorizontalIcon,\n    fileIcon: fileIcon,\n    fileImageIcon: fileImageIcon,\n    fileMdbIcon: fileMdbIcon,\n    filePdfIcon: filePdfIcon,\n    filePptIcon: filePptIcon,\n    filePresentationIcon: filePresentationIcon,\n    fileProgrammingIcon: fileProgrammingIcon,\n    filePsdIcon: filePsdIcon,\n    fileReportIcon: fileReportIcon,\n    fileTxtIcon: fileTxtIcon,\n    fileTypescriptIcon: fileTypescriptIcon,\n    fileVideoIcon: fileVideoIcon,\n    fileWordIcon: fileWordIcon,\n    fileWrenchIcon: fileWrenchIcon,\n    fileZipIcon: fileZipIcon,\n    filesErrorIcon: filesErrorIcon,\n    filmIcon: filmIcon,\n    filterAddExpressionIcon: filterAddExpressionIcon,\n    filterAddGroupIcon: filterAddGroupIcon,\n    filterClearIcon: filterClearIcon,\n    filterIcon: filterIcon,\n    filterSmallIcon: filterSmallIcon,\n    filterSortAscSmallIcon: filterSortAscSmallIcon,\n    filterSortDescSmallIcon: filterSortDescSmallIcon,\n    flashManagerIcon: flashManagerIcon,\n    flipHorizontalIcon: flipHorizontalIcon,\n    flipVerticalIcon: flipVerticalIcon,\n    folderAddIcon: folderAddIcon,\n    folderIcon: folderIcon,\n    folderMoreIcon: folderMoreIcon,\n    folderOpenIcon: folderOpenIcon,\n    folderUpIcon: folderUpIcon,\n    fontFamilyIcon: fontFamilyIcon,\n    fontGrowIcon: fontGrowIcon,\n    fontShrinkIcon: fontShrinkIcon,\n    fontSizeIcon: fontSizeIcon,\n    foregroundColorIcon: foregroundColorIcon,\n    formElementIcon: formElementIcon,\n    formIcon: formIcon,\n    formatCodeBlockIcon: formatCodeBlockIcon,\n    formulaFxIcon: formulaFxIcon,\n    forwardIcon: forwardIcon,\n    fullscreenExitIcon: fullscreenExitIcon,\n    fullscreenIcon: fullscreenIcon,\n    gapColumnIcon: gapColumnIcon,\n    gapRowIcon: gapRowIcon,\n    gaugeLinearIcon: gaugeLinearIcon,\n    gaugeRadialIcon: gaugeRadialIcon,\n    gearIcon: gearIcon,\n    gearsIcon: gearsIcon,\n    globeIcon: globeIcon,\n    globeLinkIcon: globeLinkIcon,\n    globeOutlineIcon: globeOutlineIcon,\n    globeUnlinkIcon: globeUnlinkIcon,\n    googleBoxIcon: googleBoxIcon,\n    googleIcon: googleIcon,\n    googlePlusBoxIcon: googlePlusBoxIcon,\n    googlePlusIcon: googlePlusIcon,\n    graphIcon: graphIcon,\n    grayscaleIcon: grayscaleIcon,\n    greaterOrEqualIcon: greaterOrEqualIcon,\n    gridIcon: gridIcon,\n    gridLayoutIcon: gridLayoutIcon,\n    groupBoxIcon: groupBoxIcon,\n    groupCollectionIcon: groupCollectionIcon,\n    groupFooterSectionIcon: groupFooterSectionIcon,\n    groupHeaderSectionIcon: groupHeaderSectionIcon,\n    groupIcon: groupIcon,\n    groupSectionIcon: groupSectionIcon,\n    h1Icon: h1Icon,\n    h2Icon: h2Icon,\n    h3Icon: h3Icon,\n    h4Icon: h4Icon,\n    h5Icon: h5Icon,\n    h6Icon: h6Icon,\n    handIcon: handIcon,\n    handleDragIcon: handleDragIcon,\n    handleResizeAltIcon: handleResizeAltIcon,\n    handleResizeIcon: handleResizeIcon,\n    hdIcon: hdIcon,\n    heartIcon: heartIcon,\n    heartOutlineIcon: heartOutlineIcon,\n    homeIcon: homeIcon,\n    horizontalRuleIcon: horizontalRuleIcon,\n    html5Icon: html5Icon,\n    hyperlinkOpenIcon: hyperlinkOpenIcon,\n    hyperlinkOpenSmIcon: hyperlinkOpenSmIcon,\n    imageAbsolutePositionIcon: imageAbsolutePositionIcon,\n    imageAddIcon: imageAddIcon,\n    imageEditIcon: imageEditIcon,\n    imageExportIcon: imageExportIcon,\n    imageIcon: imageIcon,\n    imageMapEditorIcon: imageMapEditorIcon,\n    imageResizeIcon: imageResizeIcon,\n    imagesIcon: imagesIcon,\n    importIcon: importIcon,\n    inboxIcon: inboxIcon,\n    increaseHorizontalSpacingIcon: increaseHorizontalSpacingIcon,\n    increaseVerticalSpacingIcon: increaseVerticalSpacingIcon,\n    indentIcon: indentIcon,\n    infoCircleIcon: infoCircleIcon,\n    infoSolidIcon: infoSolidIcon,\n    inheritedIcon: inheritedIcon,\n    insertBottomIcon: insertBottomIcon,\n    insertMiddleIcon: insertMiddleIcon,\n    insertTopIcon: insertTopIcon,\n    invertColorsIcon: invertColorsIcon,\n    italicIcon: italicIcon,\n    jsIcon: jsIcon,\n    justifyContentAroundAltIcon: justifyContentAroundAltIcon,\n    justifyContentAroundIcon: justifyContentAroundIcon,\n    justifyContentBetweenAltIcon: justifyContentBetweenAltIcon,\n    justifyContentBetweenIcon: justifyContentBetweenIcon,\n    justifyContentCenterAltIcon: justifyContentCenterAltIcon,\n    justifyContentCenterIcon: justifyContentCenterIcon,\n    justifyContentEndAltIcon: justifyContentEndAltIcon,\n    justifyContentEndIcon: justifyContentEndIcon,\n    justifyContentStartAltIcon: justifyContentStartAltIcon,\n    justifyContentStartIcon: justifyContentStartIcon,\n    kpiStatusDenyIcon: kpiStatusDenyIcon,\n    kpiStatusHoldIcon: kpiStatusHoldIcon,\n    kpiStatusOpenIcon: kpiStatusOpenIcon,\n    launchIcon: launchIcon,\n    layout1By4Icon: layout1By4Icon,\n    layout2By2Icon: layout2By2Icon,\n    layoutIcon: layoutIcon,\n    layoutSideBySideIcon: layoutSideBySideIcon,\n    layoutStackedIcon: layoutStackedIcon,\n    lessOrEqualIcon: lessOrEqualIcon,\n    letterSpaceIcon: letterSpaceIcon,\n    levelDownIcon: levelDownIcon,\n    levelToTopIcon: levelToTopIcon,\n    levelUpIcon: levelUpIcon,\n    lineHeightIcon: lineHeightIcon,\n    linkAddIcon: linkAddIcon,\n    linkIcon: linkIcon,\n    linkVerticalIcon: linkVerticalIcon,\n    linkedinBoxIcon: linkedinBoxIcon,\n    linkedinIcon: linkedinIcon,\n    listLatinBigIcon: listLatinBigIcon,\n    listLatinSmallIcon: listLatinSmallIcon,\n    listOrderedIcon: listOrderedIcon,\n    listRomanBigIcon: listRomanBigIcon,\n    listRomanLowerIcon: listRomanLowerIcon,\n    listRomanSmallIcon: listRomanSmallIcon,\n    listRomanUpperIcon: listRomanUpperIcon,\n    listUnorderedIcon: listUnorderedIcon,\n    listUnorderedOutlineIcon: listUnorderedOutlineIcon,\n    listUnorderedSquareIcon: listUnorderedSquareIcon,\n    lockIcon: lockIcon,\n    loginIcon: loginIcon,\n    logoutIcon: logoutIcon,\n    makeHorizontalSpacingEqualIcon: makeHorizontalSpacingEqualIcon,\n    makeSameHeightIcon: makeSameHeightIcon,\n    makeSameSizeIcon: makeSameSizeIcon,\n    makeSameWidthIcon: makeSameWidthIcon,\n    makeVerticalSpacingEqualIcon: makeVerticalSpacingEqualIcon,\n    mapMarkerIcon: mapMarkerIcon,\n    mapMarkerTargetIcon: mapMarkerTargetIcon,\n    maxHeightIcon: maxHeightIcon,\n    maxWidthIcon: maxWidthIcon,\n    mediaManagerIcon: mediaManagerIcon,\n    menuIcon: menuIcon,\n    minHeightIcon: minHeightIcon,\n    minWidthIcon: minWidthIcon,\n    minusCircleIcon: minusCircleIcon,\n    minusIcon: minusIcon,\n    minusOutlineIcon: minusOutlineIcon,\n    minusSmIcon: minusSmIcon,\n    mirrorIcon: mirrorIcon,\n    moreHorizontalIcon: moreHorizontalIcon,\n    moreVerticalIcon: moreVerticalIcon,\n    musicNotesIcon: musicNotesIcon,\n    myspaceBoxIcon: myspaceBoxIcon,\n    myspaceIcon: myspaceIcon,\n    nonRecurrenceIcon: nonRecurrenceIcon,\n    notEqualIcon: notEqualIcon,\n    outdentIcon: outdentIcon,\n    outlineOffsetIcon: outlineOffsetIcon,\n    outlineWidthIcon: outlineWidthIcon,\n    overlapIcon: overlapIcon,\n    paddingBottomIcon: paddingBottomIcon,\n    paddingIcon: paddingIcon,\n    paddingLeftIcon: paddingLeftIcon,\n    paddingRightIcon: paddingRightIcon,\n    paddingTopIcon: paddingTopIcon,\n    pageFooterSectionIcon: pageFooterSectionIcon,\n    pageHeaderSectionIcon: pageHeaderSectionIcon,\n    paletteIcon: paletteIcon,\n    paneFreezeIcon: paneFreezeIcon,\n    paperPlaneIcon: paperPlaneIcon,\n    paperclipAltIcon: paperclipAltIcon,\n    paperclipIcon: paperclipIcon,\n    paragraphAddIcon: paragraphAddIcon,\n    paragraphHeightIcon: paragraphHeightIcon,\n    paragraphMarkIcon: paragraphMarkIcon,\n    parameterBooleanIcon: parameterBooleanIcon,\n    parameterDateTimeIcon: parameterDateTimeIcon,\n    parameterFloatIcon: parameterFloatIcon,\n    parameterIntegerIcon: parameterIntegerIcon,\n    parameterStringIcon: parameterStringIcon,\n    parametersByteArrayIcon: parametersByteArrayIcon,\n    parametersIcon: parametersIcon,\n    parametersUnknownIcon: parametersUnknownIcon,\n    passwordIcon: passwordIcon,\n    pauseIcon: pauseIcon,\n    pauseSmIcon: pauseSmIcon,\n    pencilIcon: pencilIcon,\n    percentIcon: percentIcon,\n    photosIcon: photosIcon,\n    pinIcon: pinIcon,\n    pinterestBoxIcon: pinterestBoxIcon,\n    pinterestIcon: pinterestIcon,\n    playIcon: playIcon,\n    playSmIcon: playSmIcon,\n    playlistIcon: playlistIcon,\n    plusCircleIcon: plusCircleIcon,\n    plusIcon: plusIcon,\n    plusOutlineIcon: plusOutlineIcon,\n    plusSmIcon: plusSmIcon,\n    pointerIcon: pointerIcon,\n    positionBottomIcon: positionBottomIcon,\n    positionLeftIcon: positionLeftIcon,\n    positionRightIcon: positionRightIcon,\n    positionTopIcon: positionTopIcon,\n    printIcon: printIcon,\n    puzzlePieceIcon: puzzlePieceIcon,\n    qrCodeIcon: qrCodeIcon,\n    qrCodeOutlineIcon: qrCodeOutlineIcon,\n    qrCodeScannerIcon: qrCodeScannerIcon,\n    questionCircleIcon: questionCircleIcon,\n    radiobuttonCheckedIcon: radiobuttonCheckedIcon,\n    radiobuttonIcon: radiobuttonIcon,\n    redditBoxIcon: redditBoxIcon,\n    redditIcon: redditIcon,\n    redoIcon: redoIcon,\n    regularExpressionIcon: regularExpressionIcon,\n    removeHorizontalSpacingIcon: removeHorizontalSpacingIcon,\n    removeVerticalSpacingIcon: removeVerticalSpacingIcon,\n    reorderIcon: reorderIcon,\n    replaceAllIcon: replaceAllIcon,\n    replaceSingleIcon: replaceSingleIcon,\n    reportElementIcon: reportElementIcon,\n    rewindIcon: rewindIcon,\n    rightDoubleQuotesIcon: rightDoubleQuotesIcon,\n    rotateIcon: rotateIcon,\n    rotateLeftIcon: rotateLeftIcon,\n    rotateRightIcon: rotateRightIcon,\n    roundCornersIcon: roundCornersIcon,\n    rowFreezeIcon: rowFreezeIcon,\n    rowsIcon: rowsIcon,\n    rssBoxIcon: rssBoxIcon,\n    rssIcon: rssIcon,\n    saveIcon: saveIcon,\n    searchIcon: searchIcon,\n    selectAllIcon: selectAllIcon,\n    selectBoxIcon: selectBoxIcon,\n    setColumnPositionIcon: setColumnPositionIcon,\n    shapeLineIcon: shapeLineIcon,\n    shapesIcon: shapesIcon,\n    shareIcon: shareIcon,\n    sharpenIcon: sharpenIcon,\n    signatureIcon: signatureIcon,\n    silverlightIcon: silverlightIcon,\n    sizeToGridIcon: sizeToGridIcon,\n    slidersIcon: slidersIcon,\n    slnIcon: slnIcon,\n    snapGridIcon: snapGridIcon,\n    snapToGridlinesIcon: snapToGridlinesIcon,\n    snapToSnaplinesIcon: snapToSnaplinesIcon,\n    sortAscIcon: sortAscIcon,\n    sortAscSmallIcon: sortAscSmallIcon,\n    sortClearIcon: sortClearIcon,\n    sortDescIcon: sortDescIcon,\n    sortDescSmallIcon: sortDescSmallIcon,\n    sparklesIcon: sparklesIcon,\n    spellCheckerIcon: spellCheckerIcon,\n    starIcon: starIcon,\n    starOutlineIcon: starOutlineIcon,\n    stickIcon: stickIcon,\n    stopIcon: stopIcon,\n    stopSmIcon: stopSmIcon,\n    strikethroughIcon: strikethroughIcon,\n    stripAllFormattingIcon: stripAllFormattingIcon,\n    stripCssFormatIcon: stripCssFormatIcon,\n    stripFontElementsIcon: stripFontElementsIcon,\n    stripSpanElementsIcon: stripSpanElementsIcon,\n    stripWordFormattingIcon: stripWordFormattingIcon,\n    stumbleUponBoxIcon: stumbleUponBoxIcon,\n    stumbleUponIcon: stumbleUponIcon,\n    subreportIcon: subreportIcon,\n    subscriptIcon: subscriptIcon,\n    sumIcon: sumIcon,\n    supscriptIcon: supscriptIcon,\n    symbolIcon: symbolIcon,\n    tableAddIcon: tableAddIcon,\n    tableAlignBottomCenterIcon: tableAlignBottomCenterIcon,\n    tableAlignBottomLeftIcon: tableAlignBottomLeftIcon,\n    tableAlignBottomRightIcon: tableAlignBottomRightIcon,\n    tableAlignMiddleCenterIcon: tableAlignMiddleCenterIcon,\n    tableAlignMiddleLeftIcon: tableAlignMiddleLeftIcon,\n    tableAlignMiddleRightIcon: tableAlignMiddleRightIcon,\n    tableAlignRemoveIcon: tableAlignRemoveIcon,\n    tableAlignTopCenterIcon: tableAlignTopCenterIcon,\n    tableAlignTopLeftIcon: tableAlignTopLeftIcon,\n    tableAlignTopRightIcon: tableAlignTopRightIcon,\n    tableBodyIcon: tableBodyIcon,\n    tableCellDeleteIcon: tableCellDeleteIcon,\n    tableCellIcon: tableCellIcon,\n    tableCellPropertiesIcon: tableCellPropertiesIcon,\n    tableColumnDeleteIcon: tableColumnDeleteIcon,\n    tableColumnGroupsIcon: tableColumnGroupsIcon,\n    tableColumnInsertLeftIcon: tableColumnInsertLeftIcon,\n    tableColumnInsertRightIcon: tableColumnInsertRightIcon,\n    tableCornerIcon: tableCornerIcon,\n    tableDeleteIcon: tableDeleteIcon,\n    tableIcon: tableIcon,\n    tablePositionCenterIcon: tablePositionCenterIcon,\n    tablePositionEndIcon: tablePositionEndIcon,\n    tablePositionStartIcon: tablePositionStartIcon,\n    tablePropertiesIcon: tablePropertiesIcon,\n    tableRowDeleteIcon: tableRowDeleteIcon,\n    tableRowGroupsIcon: tableRowGroupsIcon,\n    tableRowInsertAboveIcon: tableRowInsertAboveIcon,\n    tableRowInsertBelowIcon: tableRowInsertBelowIcon,\n    tableUnmergeIcon: tableUnmergeIcon,\n    tableWizardIcon: tableWizardIcon,\n    tellAFriendBoxIcon: tellAFriendBoxIcon,\n    tellAFriendIcon: tellAFriendIcon,\n    templateManagerIcon: templateManagerIcon,\n    textClipIcon: textClipIcon,\n    textOverflowIcon: textOverflowIcon,\n    textTruncateIcon: textTruncateIcon,\n    textWrapArrowIcon: textWrapArrowIcon,\n    textWrapIcon: textWrapIcon,\n    textareaIcon: textareaIcon,\n    textboxHiddenIcon: textboxHiddenIcon,\n    textboxIcon: textboxIcon,\n    thumbDownIcon: thumbDownIcon,\n    thumbDownOutlineIcon: thumbDownOutlineIcon,\n    thumbUpIcon: thumbUpIcon,\n    thumbUpOutlineIcon: thumbUpOutlineIcon,\n    thumbnailsDownIcon: thumbnailsDownIcon,\n    thumbnailsLeftIcon: thumbnailsLeftIcon,\n    thumbnailsRightIcon: thumbnailsRightIcon,\n    thumbnailsUpIcon: thumbnailsUpIcon,\n    tocSectionIcon: tocSectionIcon,\n    tocSectionLevelIcon: tocSectionLevelIcon,\n    toggleFullScreenModeIcon: toggleFullScreenModeIcon,\n    toolbarFloatIcon: toolbarFloatIcon,\n    trackChangesAcceptAllIcon: trackChangesAcceptAllIcon,\n    trackChangesAcceptIcon: trackChangesAcceptIcon,\n    trackChangesEnableIcon: trackChangesEnableIcon,\n    trackChangesIcon: trackChangesIcon,\n    trackChangesRejectAllIcon: trackChangesRejectAllIcon,\n    trackChangesRejectIcon: trackChangesRejectIcon,\n    transparencyIcon: transparencyIcon,\n    trashIcon: trashIcon,\n    tumblrBoxIcon: tumblrBoxIcon,\n    tumblrIcon: tumblrIcon,\n    twitterBoxIcon: twitterBoxIcon,\n    twitterIcon: twitterIcon,\n    underlineIcon: underlineIcon,\n    undoIcon: undoIcon,\n    ungroupIcon: ungroupIcon,\n    unlinkIcon: unlinkIcon,\n    unlinkVerticalIcon: unlinkVerticalIcon,\n    unlockIcon: unlockIcon,\n    unpinIcon: unpinIcon,\n    unstickIcon: unstickIcon,\n    uploadIcon: uploadIcon,\n    userIcon: userIcon,\n    userOutlineIcon: userOutlineIcon,\n    validationDataIcon: validationDataIcon,\n    validationXhtmlIcon: validationXhtmlIcon,\n    vbIcon: vbIcon,\n    vbprojIcon: vbprojIcon,\n    videoExternalIcon: videoExternalIcon,\n    vimeoBoxIcon: vimeoBoxIcon,\n    vimeoIcon: vimeoIcon,\n    volumeDownIcon: volumeDownIcon,\n    volumeMuteIcon: volumeMuteIcon,\n    volumeUpIcon: volumeUpIcon,\n    warningCircleIcon: warningCircleIcon,\n    warningTriangleIcon: warningTriangleIcon,\n    wholeWordIcon: wholeWordIcon,\n    windowIcon: windowIcon,\n    windowMinimizeIcon: windowMinimizeIcon,\n    windowRestoreIcon: windowRestoreIcon,\n    wrenchIcon: wrenchIcon,\n    xCircleIcon: xCircleIcon,\n    xIcon: xIcon,\n    xOutlineIcon: xOutlineIcon,\n    yammerBoxIcon: yammerBoxIcon,\n    yammerIcon: yammerIcon,\n    youtubeBoxIcon: youtubeBoxIcon,\n    youtubeIcon: youtubeIcon,\n    zoomActualSizeIcon: zoomActualSizeIcon,\n    zoomBestFitIcon: zoomBestFitIcon,\n    zoomInIcon: zoomInIcon,\n    zoomOutIcon: zoomOutIcon\n});\n\nvar __meta__ = {\n    id: \"icons\",\n    name: \"Icons\",\n    category: \"web\",\n    description: \"The Icons set provides both FontIcon and SvgIcon components along with the SVG icons collection from @progress/kendo-svg-icons\",\n    depends: [\"core\", \"html.icon\"]\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        html = kendo.html,\n        ui = kendo.ui,\n        Widget = ui.Widget,\n        extend = $.extend;\n\n    var FontIcon = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n            Widget.fn.init.call(that, element, options);\n\n            delete options.name;\n            that._icon = new html.HTMLFontIcon(element, $.extend({}, options));\n            that.element = that.wrapper = that._icon.element;\n\n            kendo.notify(that);\n        },\n        options: extend({}, html.HTMLFontIcon.fn.options, {\n            name: 'FontIcon'\n        }),\n        setOptions: function(options) {\n            var that = this;\n\n            Widget.fn.setOptions.call(that, options);\n\n            that._icon = new html.HTMLFontIcon(that.element, $.extend({}, that.options));\n        }\n    });\n\n    var SvgIcon = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n            Widget.fn.init.call(that, element, options);\n\n            delete options.name;\n            that._icon = new html.HTMLSvgIcon(element, $.extend({}, options));\n            that.element = that.wrapper = that._icon.element;\n\n            kendo.notify(that);\n        },\n        options: extend({}, html.HTMLSvgIcon.fn.options, {\n            name: 'SvgIcon'\n        }),\n        setOptions: function(options) {\n            var that = this;\n\n            Widget.fn.setOptions.call(that, options);\n\n            if (options.icon) {\n                this.element.html('');\n            }\n\n            that._icon = new html.HTMLSvgIcon(that.element, $.extend({}, that.options));\n        }\n    });\n\n    kendo.ui.plugin(FontIcon);\n    kendo.ui.plugin(SvgIcon);\n\n    kendo.setDefaults('iconType', 'svg');\n    kendo.ui.svgIcons = svgIcons;\n    kendo.ui.icon = html.renderIcon;\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.icons.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.label.js":
/*!*******************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.label.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* harmony import */ var _kendo_floatinglabel_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.floatinglabel.js */ \"./node_modules/kendo-ui-core/esm/kendo.floatinglabel.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\nvar __meta__ = {\n    id: 'label',\n    name: 'Label',\n    category: 'framework',\n    description: 'Abstraction of label rendering for inputs',\n    depends: ['core', 'floatinglabel'],\n    hidden: true\n};\n\nconst kendo = __webpack_provided_window_dot_kendo;\nconst $ = kendo.jQuery;\nconst ui = kendo.ui;\nconst Widget = ui.Widget;\nconst isFunction = kendo.isFunction;\n\nconst LABELCLASSES = \"k-label k-input-label\";\nconst FLOATINGLABELCLASS = \"k-floating-label\";\n\nvar Label = Widget.extend({\n    options: {\n        name: \"Label\",\n        widget: null\n    },\n\n    init: function(element, options) {\n        var that = this;\n\n        element = element || $(\"<label></label>\");\n\n        Widget.fn.init.call(that, element, options);\n        options = $.extend(true, {}, options);\n\n        that.widget = options.widget;\n\n        if (options.floating) {\n            that._floatingLabel();\n        }\n\n        that._label();\n    },\n\n    destroy: function() {\n        if (this.floatingLabel) {\n            this.floatingLabel.destroy();\n        }\n        Widget.fn.destroy.call(this);\n    },\n\n    _unwrapFloating: function() {\n        var that = this;\n\n        if (that.floatingLabel) {\n            that.floatingLabel.destroy();\n            that.widget.wrapper.unwrap(that._floatingLabelContainer);\n        }\n    },\n\n    setOptions: function(options) {\n        var that = this;\n        var removeFloating = false;\n\n        if (typeof(options) === 'string' || ($.isPlainObject(options) && options.floating === false )) {\n            removeFloating = true;\n        }\n\n        options = $.isPlainObject(options) ? options : { content: options };\n\n        Widget.fn.setOptions.call(that, options);\n\n        if (removeFloating && that.floatingLabel) {\n            that._unwrapFloating();\n            that.floatingLabel.destroy();\n            delete that.floatingLabel;\n        } else if (options.floating === true && !that.floatingLabel) {\n            that.element.remove();\n            that._floatingLabel();\n        }\n\n        that._label();\n    },\n\n    _label: function() {\n        var that = this;\n        var element = that.widget.element;\n        var options = that.options;\n        var id = element.attr(\"id\");\n        var labelText = options.content;\n        var floating = options.floating || false;\n\n        if (isFunction(labelText)) {\n            labelText = labelText.call(that);\n        }\n\n        if (!labelText) {\n            labelText = \"\";\n        }\n\n        if (!id) {\n            id = options.name + \"_\" + kendo.guid();\n            element.attr(\"id\", id);\n        }\n\n        that.element.addClass(floating ? FLOATINGLABELCLASS : LABELCLASSES)\n            .attr(\"for\", id)\n            .text(labelText)\n            [floating ? \"insertAfter\" : \"insertBefore\"](that.options.beforeElm || that.widget.wrapper);\n\n        if (that.floatingLabel) {\n            that.floatingLabel.refresh();\n        }\n    },\n\n    _floatingLabel: function() {\n        var that = this;\n        var options = $.extend({}, that.options);\n        var floating;\n\n        delete options.name;\n\n        floating = options.floating || false;\n\n        if (floating) {\n            that._floatingLabelContainer = that.widget.wrapper.wrap(\"<span></span>\").parent();\n            that.floatingLabel = new kendo.ui.FloatingLabel(that._floatingLabelContainer, $.extend({}, options));\n        }\n    }\n});\n\nkendo.ui.plugin(Label);\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.label.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.list.js":
/*!******************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.list.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.data.js */ \"./node_modules/kendo-ui-core/esm/kendo.data.js\");\n/* harmony import */ var _kendo_popup_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.popup.js */ \"./node_modules/kendo-ui-core/esm/kendo.popup.js\");\n/* harmony import */ var _kendo_label_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kendo.label.js */ \"./node_modules/kendo-ui-core/esm/kendo.label.js\");\n/* harmony import */ var _kendo_icons_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./kendo.icons.js */ \"./node_modules/kendo-ui-core/esm/kendo.icons.js\");\n/* harmony import */ var _kendo_actionsheet_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./kendo.actionsheet.js */ \"./node_modules/kendo-ui-core/esm/kendo.actionsheet.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\n\n\n\nvar __meta__ = {\n    id: \"list\",\n    name: \"List\",\n    category: \"framework\",\n    depends: [ \"data\", \"popup\", \"label\", \"icons\", \"actionsheet\" ],\n    hidden: true\n};\n\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        ui = kendo.ui,\n        outerHeight = kendo._outerHeight,\n        percentageUnitsRegex = /^\\d+(\\.\\d+)?%$/i,\n        Widget = ui.Widget,\n        keys = kendo.keys,\n        support = kendo.support,\n        htmlEncode = kendo.htmlEncode,\n        activeElement = kendo._activeElement,\n        outerWidth = kendo._outerWidth,\n        ObservableArray = kendo.data.ObservableArray,\n        ID = \"id\",\n        CHANGE = \"change\",\n        FOCUSED = \"k-focus\",\n        HOVER = \"k-hover\",\n        KSELECTED = \"k-selected\",\n        LOADING = \"k-i-loading k-input-loading-icon\",\n        LIST = \"k-list\",\n        TABLE = \"k-table\",\n        DATA_TABLE = \"k-data-table\",\n        TABLE_MD = \"k-table-md\",\n        LIST_UL = \"k-list-ul\",\n        TABLE_LIST = \"k-table-list\",\n        FIXED_GROUP_HEADER = \".k-list-group-sticky-header\",\n        GROUP_LABEL = \".k-list-item-group-label\",\n        ITEMSELECTOR = \".k-list-item\",\n        ITEMSELECTORTABLE = \".k-table-row\",\n        OPEN = \"open\",\n        CLOSE = \"close\",\n        CASCADE = \"cascade\",\n        SELECT = \"select\",\n        CLICK = \"click\",\n        MOUSELEAVE = \"mouseleave\",\n        MOUSEENTER = \"mouseenter\",\n        ACTIVATE = \"activate\",\n        DEACTIVATE = \"deactivate\",\n        DATA_BINDING = \"dataBinding\",\n        DATA_BOUND = \"dataBound\",\n        SELECTED_ITEM_CHANGE = \"selectedItemChange\",\n        SELECTED = \"selected\",\n        REQUESTSTART = \"requestStart\",\n        REQUESTEND = \"requestEnd\",\n        BLUR = \"blur\",\n        FOCUS = \"focus\",\n        FOCUSOUT = \"focusout\",\n        extend = $.extend,\n        isArray = Array.isArray,\n        browser = support.browser,\n        HIDDENCLASS = \"k-hidden\",\n        WIDTH = \"width\",\n        TEXT = \"text\",\n        VALUE = \"value\",\n        isIE = browser.msie,\n        quotRegExp = /\"/g,\n        alternativeNames = {\n            \"ComboBox\": [ \"DropDownList\", \"MultiColumnComboBox\" ],\n            \"DropDownList\": [ \"ComboBox\", \"MultiColumnComboBox\" ],\n            \"MultiColumnComboBox\": [ \"ComboBox\", \"DropDownList\" ]\n        },\n\n        UL_EL = '<ul unselectable=\"on\"/>',\n        LIST_EL = \"<div class='k-list'/>\",\n        NO_DATA_EL = '<div class=\"k-no-data\"></div>',\n        LIST_FOOTER_EL = '<div class=\"k-list-footer\"></div>',\n        TABLE_FOOTER_EL = '<div class=\"k-table-footer\">' +\n                '<span class=\"k-table-td\"></span>' +\n            '</div>',\n        MOUSEDOWN = \"mousedown\",\n        LIST_SUFFIX = \"-list\",\n        LISTBOX_SUFFIX = \"_listbox\",\n        ARIA_LABELLEDBY = \"aria-labelledby\",\n        ARIA_LABEL = \"aria-label\",\n        ARIA_ACTIVEDESCENDANT = \"aria-activedescendant\",\n        ARIA_AUTOCOMPLETE = \"aria-autocomplete\",\n        ARIA_CONTROLS = \"aria-controls\",\n        ARIA_LIVE = \"aria-live\",\n        ARIA_EXPANDED = \"aria-expanded\",\n        ARIA_HIDDEN = \"aria-hidden\",\n        ARIA_BUSY = \"aria-busy\",\n        ARIA_MULTISELECTABLE = \"aria-multiselectable\",\n        ARIA_SELECTED = \"aria-selected\",\n        GROUP_ROW_SEL = \".k-table-group-row\",\n        ACTIONSHEET_TITLEBAR = \".k-actionsheet-titlebar\";\n\n    var List = kendo.ui.DataBoundWidget.extend({\n        init: function(element, options) {\n            var that = this,\n                id;\n\n            Widget.fn.init.call(that, element, options);\n            element = that.element;\n            options = that.options;\n\n            that._isSelect = element.is(SELECT);\n\n            if (that._isSelect && that.element[0].length) {\n                if (!options.dataSource) {\n                    options.dataTextField = options.dataTextField || TEXT;\n                    options.dataValueField = options.dataValueField || VALUE;\n                }\n            }\n\n            if (options.adaptiveMode === \"auto\") {\n                that.largeMQL = kendo.mediaQuery(\"large\");\n                that.mediumMQL = kendo.mediaQuery(\"medium\");\n                that.smallMQL = kendo.mediaQuery(\"small\");\n            }\n\n            that._listSize = kendo.cssProperties.getValidClass({\n                widget: \"List\",\n                propName: \"size\",\n                value: options.size\n            });\n\n            that._filterHeader();\n\n            that.ul = $(UL_EL).attr({\n                tabIndex: -1,\n                \"aria-hidden\": true\n            });\n\n            that.list = $(LIST_EL)\n                .addClass(that._listSize)\n                .append(that.ul);\n\n            id = element.attr(ID);\n\n            if (!id) {\n                id = kendo.guid();\n            }\n\n            that.list.attr(ID, id + LIST_SUFFIX);\n            that.ul.attr(ID, id + LISTBOX_SUFFIX);\n\n            if (options.columns && options.columns.length) {\n                that.list.removeClass(LIST).addClass(DATA_TABLE);\n                that.list.removeClass(that._listSize).addClass(TABLE_MD);\n\n                that.ul.removeClass(LIST_UL).addClass(TABLE);\n\n                that._columnsHeader();\n            }\n\n            that._header();\n            that._noData();\n            that._footer();\n            that._accessors();\n            that._initValue();\n        },\n\n        options: {\n            valuePrimitive: false,\n            footerTemplate: \"\",\n            headerTemplate: \"\",\n            noDataTemplate: true,\n            size: \"medium\",\n            messages: {\n                \"noData\": \"No data found.\",\n                \"clear\": \"clear\"\n            },\n            adaptiveMode: \"none\"\n        },\n\n        setOptions: function(options) {\n            Widget.fn.setOptions.call(this, options);\n\n            if (options && options.enable !== undefined$1) {\n                options.enabled = options.enable;\n            }\n\n            if (options.columns && options.columns.length) {\n                this._columnsHeader();\n            }\n\n            this._header();\n            this._noData();\n            this._footer();\n\n            this._renderFooter();\n            this._renderNoData();\n\n            if (options.label && this._inputLabel) {\n                this.label.setOptions(options.label);\n            } else if (options.label === false) {\n                this.label._unwrapFloating();\n                this._inputLabel.remove();\n                delete this._inputLabel;\n            } else if (options.label) {\n                this._label();\n            }\n        },\n\n        focus: function() {\n            this._focused.trigger(FOCUS);\n        },\n\n        readonly: function(readonly) {\n            this._editable({\n                readonly: readonly === undefined$1 ? true : readonly,\n                disable: false\n            });\n\n            if (this.label && this.label.floatingLabel) {\n                this.label.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n            }\n        },\n\n        enable: function(enable) {\n            this._editable({\n                readonly: false,\n                disable: !(enable = enable === undefined$1 ? true : enable)\n            });\n\n            if (this.label && this.label.floatingLabel) {\n                this.label.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n            }\n        },\n\n        _label: function() {\n            var that = this;\n            var options = that.options;\n            var labelOptions = $.isPlainObject(options.label) ? options.label : {\n                content: options.label\n            };\n\n            that.label = new kendo.ui.Label(null, $.extend({}, labelOptions, {\n                widget: that,\n                floatCheck: that._floatCheck.bind(that)\n            }));\n\n            that._inputLabel = that.label.element;\n            that._refreshFloatingLabel();\n        },\n\n        _floatCheck: function() {\n            if (this.listView) {\n                var hasValue = this.value() || (this.text ? this.text() : false);\n                return !hasValue && !this.popup.visible();\n            }\n\n            return true;\n        },\n\n        _refreshFloatingLabel: function() {\n            var that = this;\n\n            if (that.label && that.label.floatingLabel) {\n                that.label.floatingLabel.refresh();\n            }\n        },\n\n        _header: function() {\n            var list = this;\n            var header = $(list.header);\n            var template = list.options.headerTemplate;\n\n            kendo.destroy(header);\n            header.remove();\n\n            if (!template) {\n                list.header = null;\n                return;\n            }\n\n            var headerTemplate = typeof template !== \"function\" ? kendo.template(template) : template;\n            header = $(headerTemplate({}));\n\n            list.header = header[0] ? header : null;\n\n            if (list.list.parent.length > 0) {\n                list.list.before(header);\n            }\n        },\n\n        _filterHeader: function() {\n            this.filterTemplate = '<div class=\"k-list-filter\">' +\n                '<span class=\"k-searchbox k-input k-input-md k-rounded-md k-input-solid\" type=\"text\" autocomplete=\"off\">' +\n                    kendo.ui.icon({ icon: \"search\", iconClass: \"k-input-icon\" }) +\n                '</span>' +\n            '</div>';\n\n            this.actionSheetFilterTemplate = `<div class=\"k-actionsheet-titlebar-group k-actionsheet-filter\">${this.filterTemplate}</div>`;\n\n            if (this._isFilterEnabled()) {\n                this.filterInput = $('<input class=\"k-input-inner\" type=\"text\" />')\n                    .attr({\n                        placeholder: this.element.attr(\"placeholder\"),\n                        title: this.options.filterTitle || this.element.attr(\"title\"),\n                        role: \"searchbox\",\n                        \"aria-label\": this.options.filterTitle,\n                        \"aria-haspopup\": \"listbox\",\n                        \"aria-autocomplete\": \"list\"\n                    });\n            }\n        },\n\n        _columnsHeader: function() {\n            var list = this;\n            var $header;\n            var columnsHeader = $(list.columnsHeader);\n\n            kendo.destroy(columnsHeader);\n            columnsHeader.remove();\n\n            var header = \"<div class='k-table-header'><div class='k-table-header-wrap'><table class='k-table' role='presentation'>\";\n            var colGroup = \"<colgroup>\";\n            var row = \"<tr class='k-table-row'>\";\n\n            for (var idx = 0; idx < this.options.columns.length; idx++) {\n                var currentColumn = this.options.columns[idx];\n                var title = currentColumn.title || currentColumn.field || \"\";\n                var titleFunc = () => title;\n                var template = currentColumn.headerTemplate || titleFunc;\n                var columnsHeaderTemplate = typeof template !== \"function\" ? kendo.template(template) : template;\n                var currentWidth = currentColumn.width;\n                var currentWidthInt = parseInt(currentWidth, 10);\n                var widthStyle = '';\n\n                if (currentWidth && !isNaN(currentWidthInt)) {\n                    widthStyle += `${kendo.attr('style-width')}=\"${currentWidthInt}${percentageUnitsRegex.test(currentWidth) ? \"%\" : \"px\"}\"`;\n                }\n\n                colGroup += \"<col \" + widthStyle + \"/>\";\n\n                row += \"<th class='k-table-th'>\";\n                row += columnsHeaderTemplate(currentColumn);\n                row += \"</th>\";\n            }\n\n            colGroup += \"</colgroup>\";\n            row += \"</tr>\";\n            header += colGroup;\n            header += \"<thead class='k-table-thead'>\";\n            header += row;\n            header += \"</thead></table></div></div>\";\n\n            $header = $(header);\n            kendo.applyStylesFromKendoAttributes($header, [\"width\"]);\n\n            list.columnsHeader = columnsHeader = $header;\n            list.list.prepend(columnsHeader);\n        },\n\n        _noData: function() {\n            var list = this;\n            var noData = $(list.noData);\n            var template = list.options.noDataTemplate === true ? () => htmlEncode(list.options.messages.noData) : list.options.noDataTemplate;\n\n            kendo.destroy(noData);\n            noData.remove();\n\n            if (!template) {\n                list.noData = null;\n                return;\n            }\n\n            list.noData = $(NO_DATA_EL).hide().appendTo(list.list);\n            list.noDataTemplate = typeof template !== \"function\" ? kendo.template(template) : template;\n        },\n\n        _footer: function() {\n            var list = this;\n            var footer = $(list.footer);\n            var template = list.options.footerTemplate;\n            var footerEl = this.options.columns && this.options.columns.length ? TABLE_FOOTER_EL : LIST_FOOTER_EL;\n\n            kendo.destroy(footer);\n            footer.remove();\n\n            if (!template) {\n                list.footer = null;\n                return;\n            }\n\n            list.footer = $(footerEl).appendTo(list.list);\n            list.footerTemplate = typeof template !== \"function\" ? kendo.template(template) : template;\n        },\n\n        _listOptions: function(options) {\n            var that = this;\n            var currentOptions = that.options;\n            var virtual = currentOptions.virtual;\n            var changeEventOption = { change: that._listChange.bind(that) };\n            var listBoundHandler = that._listBound.bind(that);\n            var focusedElm = that._focused;\n            var inputId = that.element.attr(\"id\");\n            var labelElm = $(\"label[for=\\\"\" + that.element.attr(\"id\") + \"\\\"]\");\n            var labelledBy = focusedElm.attr(ARIA_LABELLEDBY);\n\n            if (!labelledBy && labelElm.length) {\n                labelledBy = labelElm.attr(\"id\") || that._generateLabelId(labelElm, inputId || kendo.guid());\n            }\n\n            virtual = typeof virtual === \"object\" ? virtual : {};\n\n            options = $.extend({\n                autoBind: false,\n                selectable: true,\n                dataSource: that.dataSource,\n                click: that._click.bind(that),\n                activate: that._activateItem.bind(that),\n                columns: currentOptions.columns,\n                deactivate: that._deactivateItem.bind(that),\n                dataBinding: function() {\n                    that.trigger(DATA_BINDING);\n                },\n                dataBound: listBoundHandler,\n                height: currentOptions.height,\n                dataValueField: currentOptions.dataValueField,\n                dataTextField: currentOptions.dataTextField,\n                groupTemplate: currentOptions.groupTemplate,\n                fixedGroupTemplate: currentOptions.fixedGroupTemplate,\n                template: currentOptions.template,\n                ariaLabel: focusedElm.attr(ARIA_LABEL),\n                ariaLabelledBy: labelledBy,\n                listSize: that._listSize\n            }, options, virtual, changeEventOption);\n\n            if (!options.template) {\n                options.template = (data) => htmlEncode(kendo.getter(options.dataTextField)(data));\n            }\n\n            return options;\n        },\n\n        _initList: function(opts) {\n            var that = this;\n            var skipValueUpdate = opts && opts.skipValueUpdate;\n            var listOptions = that._listOptions({\n                selectedItemChange: that._listChange.bind(that)\n            });\n\n            if (!that.options.virtual) {\n                that.listView = new kendo.ui.StaticList(that.ul, listOptions);\n            } else {\n                that.listView = new kendo.ui.VirtualList(that.ul, Object.assign(listOptions, {\n                    height: that._hasActionSheet() ? 362 : that.options.height, // Hardcoded virtual list height for action sheet untill better solution is found\n                }));\n                that.list.addClass(\"k-virtual-list\");\n            }\n\n            that.listView.bind(\"listBound\", that._listBound.bind(that));\n\n            if (!skipValueUpdate) {\n                that._setListValue();\n            }\n        },\n\n        _setListValue: function(value) {\n            value = value || this.options.value;\n\n            if (value !== undefined$1) {\n                this.listView.value(value)\n                    .done(this._updateSelectionState.bind(this));\n            }\n        },\n\n        _updateSelectionState: $.noop,\n\n        _listMousedown: function(e) {\n            if (!this.filterInput || this.filterInput[0] !== e.target) {\n                e.preventDefault();\n            }\n        },\n\n        _isFilterEnabled: function() {\n            var filter = this.options.filter;\n            return filter && filter !== \"none\";\n        },\n\n        _hideClear: function() {\n            var list = this;\n\n            if (list._clear) {\n                list._clear.addClass(HIDDENCLASS);\n            }\n        },\n\n        _showClear: function() {\n            if (this._clear) {\n                this._clear.removeClass(HIDDENCLASS);\n            }\n        },\n\n        _clearValue: function() {\n            this._clearText();\n            this._accessor(\"\");\n            this.listView.value([]);\n\n            if (this._isSelect) {\n                this._customOption = undefined$1;\n            }\n\n            if (this._isFilterEnabled() && !this.options.enforceMinLength) {\n                this._filter({ word: \"\", open: false });\n\n                if (this.options.highlightFirst) {\n                    this.listView.focus(0);\n                }\n            }\n            this._change();\n        },\n\n        _clearText: function() {\n            this.text(\"\");\n        },\n\n        _clearFilter: function() {\n            if (!this.options.virtual) {\n                this.listView.bound(false);\n            }\n\n            this._filterSource();\n        },\n\n        _filterSource: function(filter, force) {\n            var that = this;\n            var options = that.options;\n            var isMultiColumnFiltering = options.filterFields && filter && filter.logic && filter.filters && filter.filters.length;\n            var dataSource = that.dataSource;\n            var expression = extend({}, dataSource.filter() || {});\n            var resetPageSettings = filter || (expression.filters && expression.filters.length && !filter);\n\n            var removed = removeFiltersForField(expression, options.dataTextField);\n\n            this._clearFilterExpressions(expression);\n\n            if ((filter || removed) && that.trigger(\"filtering\", { filter: filter })) {\n                return $.Deferred().reject().promise();\n            }\n\n            var newExpression = {\n                filters: [],\n                logic: \"and\"\n            };\n\n            if (isMultiColumnFiltering) {\n                newExpression.filters.push(filter);\n            } else {\n                this._pushFilterExpression(newExpression, filter);\n            }\n\n            if (isValidFilterExpr(expression)) {\n                if (newExpression.logic === expression.logic) {\n                    newExpression.filters = newExpression.filters.concat(expression.filters);\n                } else {\n                    newExpression.filters.push(expression);\n                }\n            }\n\n            if (that._cascading) {\n                this.listView.setDSFilter(newExpression);\n            }\n\n            var dataSourceState = extend({}, {\n                page: resetPageSettings ? 1 : dataSource.page(),\n                pageSize: resetPageSettings ? dataSource.options.pageSize : dataSource.pageSize(),\n                sort: dataSource.sort(),\n                filter: dataSource.filter(),\n                group: dataSource.group(),\n                aggregate: dataSource.aggregate()\n            }, { filter: newExpression });\n\n            return dataSource[force ? \"read\" : \"query\"](dataSource._mergeState(dataSourceState));\n        },\n\n        _pushFilterExpression: function(newExpression, filter) {\n            if (isValidFilterExpr(filter) && filter.value !== \"\") {\n                newExpression.filters.push(filter);\n            }\n        },\n\n        _clearFilterExpressions: function(expression) {\n            if (!expression.filters) {\n                return;\n            }\n\n            var filtersToRemove;\n\n            for (var i = 0; i < expression.filters.length; i++) {\n                if (\"fromFilter\" in expression.filters[i]) {\n                    filtersToRemove = i;\n                }\n            }\n\n            if (!isNaN(filtersToRemove)) {\n                expression.filters.splice(filtersToRemove, 1);\n            }\n        },\n\n        _renderNoData: function() {\n            var list = this;\n            var noData = list.noData;\n\n            if (!noData) {\n                return;\n            }\n\n            noData.html(list.noDataTemplate({ instance: list }));\n        },\n\n        _toggleNoData: function(show) {\n            $(this.noData).toggle(show);\n        },\n\n        _toggleHeader: function(show) {\n            var groupHeader = this.listView.content.prev(FIXED_GROUP_HEADER);\n            groupHeader.toggle(show);\n        },\n\n        _renderFooter: function() {\n            var list = this,\n                footer = list.footer ? this.options.columns && this.options.columns.length ? list.footer.children().first() : list.footer : null;\n\n            if (!footer) {\n                return;\n            }\n\n            footer.html(list.footerTemplate({ instance: list }));\n        },\n\n        _allowOpening: function() {\n            return this.options.noDataTemplate || this.dataSource.flatView().length;\n        },\n\n        _initValue: function() {\n            var that = this,\n                value = that.options.value;\n\n            if (value !== null) {\n                that.element.val(value);\n            } else {\n                value = that._accessor();\n                that.options.value = value;\n            }\n\n            that._old = value;\n        },\n\n        _ignoreCase: function() {\n            var that = this,\n                model = that.dataSource.reader.model,\n                field;\n\n            if (model && model.fields) {\n                field = model.fields[that.options.dataTextField];\n\n                if (field && field.type && field.type !== \"string\") {\n                    that.options.ignoreCase = false;\n                }\n            }\n        },\n\n        _focus: function(candidate) {\n            return this.listView.focus(candidate);\n        },\n\n        _filter: function(options) {\n            var that = this;\n            var widgetOptions = that.options;\n            var word = options.word;\n            var filterFields = widgetOptions.filterFields;\n            var field = widgetOptions.dataTextField;\n            var expression;\n\n            if (filterFields && filterFields.length) {\n                expression = {\n                    logic: \"or\",\n                    filters: [],\n                    fromFilter: true\n                };\n                for (var i = 0; i < filterFields.length; i++) {\n                    this._pushFilterExpression(expression, that._buildExpression(word, filterFields[i]));\n                }\n            } else {\n                expression = that._buildExpression(word, field);\n            }\n\n            that._open = options.open;\n            that._filterSource(expression);\n        },\n\n        _buildExpression: function(value, field) {\n            var that = this;\n            var widgetOptions = that.options;\n            var ignoreCase = widgetOptions.ignoreCase;\n            var accentFoldingFiltering = that.dataSource.options.accentFoldingFiltering;\n\n            return {\n                value: ignoreCase ? (accentFoldingFiltering ? value.toLocaleLowerCase(accentFoldingFiltering) : value.toLowerCase()) : value,\n                field: field,\n                operator: widgetOptions.filter,\n                ignoreCase: ignoreCase\n            };\n        },\n\n        _clearButton: function() {\n            var list = this;\n            var clearTitle = list.options.messages.clear;\n\n            if (!list._clear) {\n                list._clear = $(`<span unselectable=\"on\" class=\"k-clear-value\" title=\"${clearTitle}\">${kendo.ui.icon(\"x\")}</span>`).attr({\n                    \"role\": \"button\",\n                    \"tabIndex\": -1\n                });\n            }\n\n            if (!list.options.clearButton) {\n                list._clear.remove();\n            }\n            this._hideClear();\n        },\n\n        search: function(word) {\n            var options = this.options;\n\n            word = typeof word === \"string\" ? word : this._inputValue();\n\n            clearTimeout(this._typingTimeout);\n\n            if ((!options.enforceMinLength && !word.length) || word.length >= options.minLength) {\n                this._state = \"filter\";\n                if (this.listView) {\n                    this.listView._emptySearch = !kendo.trim(word).length;\n                }\n\n                if (!this._isFilterEnabled()) {\n                    this._searchByWord(word);\n                } else {\n                    this._filter({ word: word, open: true });\n                }\n            }\n        },\n\n        current: function(candidate) {\n            return this._focus(candidate);\n        },\n\n        items: function() {\n            return this.ul[0].children;\n        },\n\n        destroy: function() {\n            var that = this;\n            var ns = that.ns;\n\n            Widget.fn.destroy.call(that);\n\n            that._unbindDataSource();\n\n            if (that.largeMQL || that.mediumMQL || that.smallMQL) {\n                that.largeMQL.destroy();\n                that.mediumMQL.destroy();\n                that.smallMQL.destroy();\n            }\n\n            that.listView.destroy();\n            that.list.off(ns);\n\n            that.popup.destroy();\n\n            if (that._form) {\n                that._form.off(\"reset\", that._resetHandler);\n            }\n\n            if (that.label) {\n                that.label.destroy();\n            }\n        },\n\n        dataItem: function(index) {\n            var that = this;\n\n            if (index === undefined$1) {\n                return that.listView.selectedDataItems()[0];\n            }\n\n            if (typeof index !== \"number\") {\n                if (that.options.virtual) {\n                    return that.dataSource.getByUid($(index).data(\"uid\"));\n                }\n\n                index = $(that.items()).index(index);\n            }\n\n            return that.dataSource.flatView()[index];\n        },\n\n        _activateItem: function() {\n            var current = this.listView.focus();\n            if (current && this.popup.visible()) {\n                this._focused.add(this.filterInput).attr(ARIA_ACTIVEDESCENDANT, current.attr(\"id\"));\n            }\n        },\n\n        _deactivateItem: function() {\n            this._focused.add(this.filterInput).removeAttr(ARIA_ACTIVEDESCENDANT);\n        },\n\n        _accessors: function() {\n            var that = this;\n            var element = that.element;\n            var options = that.options;\n            var getter = kendo.getter;\n            var textField = element.attr(kendo.attr(\"text-field\"));\n            var valueField = element.attr(kendo.attr(\"value-field\"));\n\n            if (!options.dataTextField && textField) {\n                options.dataTextField = textField;\n            }\n\n            if (!options.dataValueField && valueField) {\n                options.dataValueField = valueField;\n            }\n\n            that._text = getter(options.dataTextField);\n            that._value = getter(options.dataValueField);\n        },\n\n        _aria: function(id) {\n            var that = this,\n                options = that.options,\n                element = that._focused,\n                autocomplete;\n\n            if (options.suggest !== undefined$1) {\n                if (options.filter === \"none\") {\n                    if (options.suggest === true) {\n                        autocomplete = \"inline\";\n                    } else {\n                        autocomplete = \"none\";\n                    }\n                } else {\n                    if (options.suggest === true) {\n                        autocomplete = \"both\";\n                    } else {\n                        autocomplete = \"list\";\n                    }\n                }\n\n                element.attr(ARIA_AUTOCOMPLETE, autocomplete);\n            }\n\n            id = id ? id + \" \" + that.ul[0].id : that.ul[0].id;\n\n            element.attr({\n                \"aria-controls\": id\n            });\n\n            if (that.filterInput && that.filterInput.length > 0) {\n                that.filterInput.attr(ARIA_CONTROLS, id);\n            }\n\n            that.ul.attr(ARIA_LIVE, !that._isFilterEnabled() ? \"off\" : \"polite\");\n\n            that._ariaLabel(that._focused);\n        },\n\n        _blur: function() {\n            var that = this;\n\n            that._change();\n            that.close();\n            that._userTriggered = false;\n        },\n\n        _isValueChanged: function(value) {\n            return value !== unifyType(this._old, typeof value);\n        },\n\n        _change: function() {\n            var that = this;\n            var index = that.selectedIndex;\n            var optionValue = that.options.value;\n            var value = that.value();\n            var trigger;\n\n            if (that._isSelect && !that.listView.bound() && optionValue) {\n                value = optionValue;\n            }\n\n            if (that._isValueChanged(value)) {\n                trigger = true;\n            } else if (that._valueBeforeCascade !== undefined$1 && that._isValueChanged(that._valueBeforeCascade) && that._userTriggered) {\n                trigger = true;\n            } else if (index !== undefined$1 && index !== that._oldIndex && !that.listView.isFiltered() && !that.options.virtual) {\n                trigger = true;\n            }\n\n            if (trigger) {\n\n                if (that._old === null || that._old === \"\" || value === \"\") {\n                    that._valueBeforeCascade = that._old = value;\n                } else {\n                    if (that.dataItem()) {\n                        that._valueBeforeCascade = that._old = that.options.dataValueField ? that.dataItem()[that.options.dataValueField] : that.dataItem();\n                    } else {\n                        that._valueBeforeCascade = that._old = null;\n                    }\n                }\n                that._oldIndex = index;\n\n                if (!that._typing) {\n                    // trigger the DOM change event so any subscriber gets notified\n                    that.element.trigger(CHANGE);\n                }\n\n                that.trigger(CHANGE);\n            }\n\n            that.typing = false;\n        },\n\n        _data: function() {\n            return this.dataSource.view();\n        },\n\n        _enable: function() {\n            var that = this,\n                options = that.options,\n                disabled = that.element.is(\"[disabled]\");\n\n            if (options.enable !== undefined$1) {\n                options.enabled = options.enable;\n            }\n\n            if (!options.enabled || disabled) {\n                that.enable(false);\n            } else {\n                that.readonly(that.element.is(\"[readonly]\"));\n            }\n        },\n\n        _dataValue: function(dataItem) {\n            var value = this._value(dataItem);\n\n            if (value === undefined$1) {\n                value = this._text(dataItem);\n            }\n\n            return value;\n        },\n\n        _offsetHeight: function() {\n            var offsetHeight = 0;\n            var siblings = this.listView.content.parent().prevAll(\":visible\");\n\n            siblings.each(function() {\n                var element = $(this);\n\n                offsetHeight += outerHeight(element, true);\n            });\n\n            return offsetHeight;\n        },\n\n        _height: function(length) {\n            var that = this;\n            var list = that.list;\n            var height = that.options.height;\n            var visible = that.popup.visible();\n            var isMccb = this.options.columns && this.options.columns.length;\n            var offsetTop, popups;\n\n            if (length || that.options.noDataTemplate) {\n                // Check where animation container stays\n                popups = list.parent().add(list.closest(\".k-animation-container\").add(list.closest(\".k-child-animation-container\"))).show();\n\n                if (!list.parent().is(\":visible\")) {\n                    popups.hide();\n                    return;\n                }\n\n                height = that.listView.content[0].scrollHeight > height ? height : \"auto\";\n\n                popups.height(height);\n\n                if (height !== \"auto\") {\n                    offsetTop = that._offsetHeight();\n\n                    height = height - offsetTop;\n\n                    if (isMccb) {\n                        height = height - (outerHeight($(that.footer)) || 0) - (outerHeight($(that.columnsHeader)) || 0);\n                    }\n                }\n\n                if (isMccb) {\n                    that.listView.content.outerHeight(height);\n                } else {\n                    that.listView.content.parent().outerHeight(height);\n                }\n\n                if (!visible) {\n                    list.parent().hide();\n                }\n            }\n\n            return height;\n        },\n\n        _openHandler: function(e) {\n            var current;\n\n            this._adjustListWidth();\n\n            if (this.trigger(OPEN)) {\n                e.preventDefault();\n            } else {\n                this._focused.attr(ARIA_EXPANDED, true);\n                this.ul.attr(ARIA_HIDDEN, false);\n\n                current = this.listView.focus();\n                if (current) {\n                    this._focused.add(this.filterInput).attr(ARIA_ACTIVEDESCENDANT, current.attr(\"id\"));\n                }\n            }\n        },\n\n        _adjustListWidth: function() {\n            var that = this,\n                list = that.list.parent(),\n                width = list[0].style.width,\n                wrapper = that.wrapper,\n                computedStyle, computedWidth;\n\n            if ((!list.data(WIDTH) && width) || that._hasActionSheet()) {\n                return;\n            }\n\n            computedStyle = window.getComputedStyle ? window.getComputedStyle(wrapper[0], null) : 0;\n            computedWidth = parseFloat(computedStyle && computedStyle.width) || outerWidth(wrapper);\n\n            if (computedStyle && browser.msie) { // getComputedStyle returns different box in IE.\n                computedWidth += parseFloat(computedStyle.paddingLeft) + parseFloat(computedStyle.paddingRight) + parseFloat(computedStyle.borderLeftWidth) + parseFloat(computedStyle.borderRightWidth);\n            }\n\n            if (list.css(\"box-sizing\") !== \"border-box\") {\n                width = computedWidth - (outerWidth(list) - list.width());\n            } else {\n                width = computedWidth;\n            }\n\n            list.css({\n                fontFamily: wrapper.css(\"font-family\"),\n                width: that.options.autoWidth ? \"auto\" : width,\n                minWidth: width,\n                whiteSpace: that.options.autoWidth ? \"nowrap\" : \"normal\"\n            })\n            .data(WIDTH, width);\n\n            return true;\n        },\n\n        _closeHandler: function(e) {\n            if (e.closeButton) {\n                this._onCloseButtonPressed();\n            }\n\n\n            if (this.trigger(CLOSE)) {\n                e.preventDefault();\n            } else {\n                this._focused.attr(ARIA_EXPANDED, false);\n                this.ul.attr(ARIA_HIDDEN, true);\n                this._focused.add(this.filterInput).removeAttr(ARIA_ACTIVEDESCENDANT);\n            }\n        },\n\n        _focusItem: function() {\n            var listView = this.listView;\n            var noFocusedItem = !listView.focus();\n            var index = last(listView.select());\n\n            if (index === undefined$1 && this.options.highlightFirst && noFocusedItem) {\n                index = 0;\n            }\n\n            if (index !== undefined$1) {\n                listView.focus(index);\n            } else if (noFocusedItem) {\n                listView.scrollToIndex(0);\n            }\n        },\n\n        _calculateGroupPadding: function(height) {\n            var li = this.ul.children(\".k-first\").first();\n            var groupHeader = this.listView.content.prev(FIXED_GROUP_HEADER);\n            var padding = 0;\n            var direction = 'right';\n\n            if (groupHeader[0] && groupHeader[0].style.display !== \"none\") {\n                if (height !== \"auto\") {\n                    padding = kendo.support.scrollbar();\n                }\n\n                if (this.element.parents('.k-rtl').length) {\n                    direction = 'left';\n                }\n\n                padding += parseFloat(li.css(\"border-\" + direction + \"-width\"), 10) + parseFloat(li.children(GROUP_LABEL).css(\"padding-\" + direction), 10);\n                groupHeader.css(\"padding-\" + direction, padding);\n            }\n        },\n\n        _calculatePopupHeight: function(force) {\n            var height = this._height(this.dataSource.flatView().length || force);\n            this._calculateGroupPadding(height);\n            this._calculateColumnsHeaderPadding(height);\n        },\n\n        _calculateColumnsHeaderPadding: function(height) {\n            if (this.options.columns && this.options.columns.length) {\n                var list = this;\n                var isRtl = support.isRtl(list.wrapper);\n                var scrollbar = kendo.support.scrollbar();\n\n                list.columnsHeader.css((isRtl ? \"padding-left\" : \"padding-right\"), height !== \"auto\" ? scrollbar : 0);\n            }\n        },\n\n        _refreshScroll: function() {\n            var listView = this.listView;\n            var enableYScroll = listView.element.height() > listView.content.height();\n\n            if (this.options.autoWidth) {\n                listView.content.css({\n                    overflowX: \"hidden\",\n                    overflowY: enableYScroll ? \"scroll\" : \"auto\"\n                });\n            }\n        },\n\n        _hasActionSheet: function() {\n            return this.options.adaptiveMode === \"auto\" && (this.mediumMQL.mediaQueryList.matches\n                    || this.smallMQL.mediaQueryList.matches);\n        },\n\n        _resizePopup: function(force) {\n            if (this.options.virtual\n                    || this._hasActionSheet()) {\n                return;\n            }\n\n            if (!this.popup.element.is(\":visible\")) {\n                this.popup.one(\"open\", (function(force) {\n                    return (function(e) {\n                        if (!e.isDefaultPrevented()) {\n                            this._calculatePopupHeight(force);\n                        }\n                    }).bind(this);\n                }).call(this, force));\n\n                this.popup.one(ACTIVATE, this._refreshScroll.bind(this));\n            } else {\n                this._calculatePopupHeight(force);\n            }\n        },\n\n        _popup: function() {\n            var list = this;\n\n            list.list.wrap(\"<div>\");\n\n            if (list.options.adaptiveMode === \"auto\") {\n                list.largeMQL.onEnter(list._createPopup.bind(list));\n                list.mediumMQL.onEnter(list._createActionSheet.bind(list));\n                list.smallMQL\n                    .onEnter(() => {\n                        if (!list.popup || !list.popup.fullscreen) {\n                            list._createActionSheet();\n                        }\n\n                        list.popup.fullscreen(true);\n                    });\n            } else {\n                list._createPopup();\n            }\n        },\n\n        _addFilterHeader: function() {\n            var list = this;\n\n            if (list._isFilterEnabled()) {\n                list._filterHeader();\n\n                if (list.options.adaptiveMode === \"auto\" && (list.mediumMQL.mediaQueryList.matches || list.smallMQL.mediaQueryList.matches)) {\n                    list.popup.element\n                        .find(ACTIONSHEET_TITLEBAR)\n                        .append($(list.actionSheetFilterTemplate))\n                        .find(\".k-searchbox\")\n                        .append(list.filterInput);\n                    list._enable();\n                } else if (list.options.popupFilter) {\n                    list.list\n                        .parent()\n                        .prepend($(list.filterTemplate))\n                        .find(\".k-searchbox\")\n                        .append(list.filterInput);\n                }\n\n                list._enable();\n            }\n        },\n\n        _createPopup: function() {\n            var list = this;\n\n            if (list.popup) {\n                list._cachedFilterValue = list.filterInput ? list.filterInput.val() : null;\n                list.popup.destroy();\n                list._removeFilterHeader();\n                list._removeStaticHeader();\n            }\n\n            list.popup = new ui.Popup(list.list.parent().addClass(\"k-list-container\"), extend({}, list.options.popup, {\n                anchor: list.wrapper,\n                open: list._openHandler.bind(list),\n                close: list._closeHandler.bind(list),\n                animation: list.options.animation,\n                isRtl: support.isRtl(list.wrapper),\n                autosize: list.options.autoWidth,\n                autowidth: list.options.autoWidth,\n                activate: () => {\n                    this._refreshFloatingLabel();\n                },\n                deactivate: () => {\n                    this._refreshFloatingLabel();\n                }\n            }));\n\n            list._postCreatePopup();\n        },\n\n        _onActionSheetCreate: $.noop,\n        _onCloseButtonPressed: $.noop,\n\n        _createActionSheet: function() {\n            var list = this;\n\n            if (list.popup) {\n                list._cachedFilterValue = list.filterInput ? list.filterInput.val() : null;\n                list.popup.destroy();\n                list._removeFilterHeader();\n                list._removeStaticHeader();\n                list.list.parent().css({\n                    width: \"\",\n                    height: \"\",\n                    minWidth: \"\"\n                });\n            }\n\n            list.popup = new ui.ActionSheet(list.list.parent(), {\n                headerTemplate: (options) =>\n                `<div class=\"k-text-center k-actionsheet-titlebar\" >` +\n                        '<div class=\"k-actionsheet-titlebar-group k-hbox\">' +\n                            `<div  class=\"k-actionsheet-title\">` +\n                                (list.options.label ? `<div class=\"k-text-center\">${list.options.label}</div>` : '') +\n                                (list.options.placeholder ? `<div class=\"k-actionsheet-subtitle k-text-center\">${list.options.placeholder || \"\"}</div>` : \"\") +\n                            '</div>' +\n                            (options.closeButton ?\n                            '<div class=\"k-actionsheet-actions\">' +\n                                kendo.html.renderButton(`<button tabindex=\"-1\" ${kendo.attr(\"ref-actionsheet-close-button\")}></button>`, { icon: \"x\", fillMode: \"flat\", size: \"large\" }) +\n                            '</div>'\n                            : \"\") +\n                        '</div>' +\n                '</div>',\n                open: list._openHandler.bind(list),\n                close: list._closeHandler.bind(list),\n                focusOnActivate: false,\n                adaptive: true,\n                appendTo: (list.options.popup && list.options.popup.appendTo) || document.body,\n                closeButton: true,\n                fullscreen: list.smallMQL.mediaQueryList.matches,\n                activate: () => {\n                    this._refreshFloatingLabel();\n                },\n                deactivate: () => {\n                    this._refreshFloatingLabel();\n                },\n                popup: extend({}, list.options.popup, {\n                    autosize: list.options.autoWidth\n                })\n            });\n\n            list._postCreatePopup();\n            list._onActionSheetCreate();\n        },\n\n        _removeFilterHeader: function() {\n            if (this.filterInput) {\n                this.filterInput\n                    .off(this.ns)\n                    .closest(\".k-list-filter\")\n                    .remove();\n\n                this.filterInput = null;\n            }\n        },\n\n        _removeStaticHeader: function() {\n            this.listView.header.remove();\n        },\n\n        _postCreatePopup: function() {\n            var list = this;\n            var listViewValue;\n\n            list._addFilterHeader();\n\n            if (list.filterInput && list._cachedFilterValue) {\n                list.filterInput.val(list._cachedFilterValue);\n            }\n\n            list.popup.element.prepend(list.header)\n                .on(MOUSEDOWN + this.ns, this._listMousedown.bind(this));\n\n            if (list.listView) {\n                listViewValue = list.listView.value();\n\n                if (list.listView._clean) {\n                    list.listView._clean();\n                }\n\n                // Dirty hack to clean MultiSelect taglist\n                if (list.tagList && list.options.virtual) {\n                    list.tagList.empty();\n                }\n\n                list.listView.destroy();\n                list._initList({ skipValueUpdate: true });\n                list.listView.value(listViewValue);\n            }\n        },\n\n        _toggleHover: function(e) {\n            $(e.currentTarget).toggleClass(HOVER, e.type === MOUSEENTER);\n        },\n\n        _toggle: function(open, preventFocus) {\n            var that = this;\n            var touchEnabled = support.mobileOS && (support.touch || support.MSPointers || support.pointers);\n\n            open = open !== undefined$1 ? open : !that.popup.visible();\n\n            if (!preventFocus && !touchEnabled && that._focused[0] !== activeElement()) {\n                that._prevent = true;\n                that._focused.trigger(FOCUS);\n                that._prevent = false;\n            }\n\n            that[open ? OPEN : CLOSE]();\n        },\n\n        _triggerCascade: function() {\n            var that = this;\n\n            if (!that._cascadeTriggered || that.value() !== unifyType(that._cascadedValue, typeof that.value())) {\n                that._cascadedValue = that.value();\n                that._cascadeTriggered = true;\n                that.trigger(CASCADE, { userTriggered: that._userTriggered });\n            }\n        },\n\n        _triggerChange: function() {\n            if (this._valueBeforeCascade !== this.value()) {\n                this.trigger(CHANGE);\n            }\n        },\n\n        _unbindDataSource: function() {\n            var that = this;\n\n            that.dataSource.unbind(REQUESTSTART, that._requestStartHandler)\n                           .unbind(REQUESTEND, that._requestEndHandler)\n                           .unbind(\"error\", that._errorHandler);\n        },\n\n        requireValueMapper: function(options, value) {\n            var hasValue = (options.value instanceof Array ? options.value.length : options.value) || (value instanceof Array ? value.length : value);\n            if (hasValue && options.virtual && typeof options.virtual.valueMapper !== \"function\") {\n                throw new Error(\"ValueMapper is not provided while the value is being set. See http://docs.telerik.com/kendo-ui/controls/editors/combobox/virtualization#the-valuemapper-function\");\n            }\n        }\n    });\n\n    function unifyType(value, type) {\n        if (value !== undefined$1 && value !== \"\" && value !== null) {\n            if (type === \"boolean\") {\n                if (typeof value !== \"boolean\") {\n                    value = value.toString().toLowerCase() === \"true\";\n                }\n                value = Boolean(value);\n            } else if (type === \"number\") {\n                value = Number(value);\n            } else if (type === \"string\") {\n                value = value.toString();\n            }\n        }\n\n        return value;\n    }\n\n    extend(List, {\n        inArray: function(node, parentNode) {\n            var idx, length, siblings = parentNode.children;\n\n            if (!node || node.parentNode !== parentNode) {\n                return -1;\n            }\n\n            for (idx = 0, length = siblings.length; idx < length; idx++) {\n                if (node === siblings[idx]) {\n                    return idx;\n                }\n            }\n\n            return -1;\n        },\n        unifyType: unifyType\n    });\n\n    kendo.ui.List = List;\n\n    ui.Select = List.extend({\n        init: function(element, options) {\n            List.fn.init.call(this, element, options);\n            this._initial = this.element.val();\n        },\n\n        setDataSource: function(dataSource) {\n            var that = this;\n            var parent;\n\n            that.options.dataSource = dataSource;\n\n            that._dataSource();\n\n            if (that.listView.bound()) {\n                that._initialIndex = null;\n                that.listView._current = null;\n            }\n\n            that.listView.setDataSource(that.dataSource);\n\n            if (that.options.autoBind) {\n                that.dataSource.fetch();\n            }\n\n            parent = that._parentWidget();\n\n            if (parent) {\n                that._cascadeSelect(parent);\n            }\n        },\n\n        close: function() {\n            this.popup.close();\n        },\n\n        select: function(candidate) {\n            var that = this;\n\n            if (candidate === undefined$1) {\n                return that.selectedIndex;\n            } else {\n                return that._select(candidate).done(function() {\n                    that._cascadeValue = that._old = that._accessor();\n                    that._oldIndex = that.selectedIndex;\n\n                    that._refreshFloatingLabel();\n                });\n            }\n        },\n\n        _accessor: function(value, idx) {\n            return this[this._isSelect ? \"_accessorSelect\" : \"_accessorInput\"](value, idx);\n        },\n\n        _accessorInput: function(value) {\n            var element = this.element[0];\n\n            if (value === undefined$1) {\n                return element.value;\n            } else {\n                if (value === null) {\n                    value = \"\";\n                }\n                element.value = value;\n            }\n        },\n\n        _accessorSelect: function(value, idx) {\n            var element = this.element[0];\n            var hasValue;\n\n            if (value === undefined$1) {\n                return getSelectedOption(element).value || \"\";\n            }\n\n            getSelectedOption(element).selected = false;\n\n            if (idx === undefined$1) {\n                idx = -1;\n            }\n\n            hasValue = (value !== null && value !== \"\");\n\n            if (hasValue && idx == -1) {\n                this._custom(value);\n            } else {\n                if (value) {\n                    element.value = value;\n                } else {\n                    element.selectedIndex = idx;\n                }\n            }\n        },\n\n        _syncValueAndText: function() {\n            return true;\n        },\n\n        _custom: function(value) {\n            var that = this;\n            var element = that.element;\n            var custom = that._customOption;\n\n            if (!custom) {\n                custom = $(\"<option/>\");\n                that._customOption = custom;\n\n                element.append(custom);\n            }\n\n            custom.text(value);\n            custom[0].selected = true;\n        },\n\n        _hideBusy: function() {\n            var that = this;\n            clearTimeout(that._busy);\n            that._arrowIcon.removeClass(LOADING);\n            that._arrowIcon.find(\"svg\").show();\n            that._focused.attr(ARIA_BUSY, false);\n            that._busy = null;\n            that._showClear();\n        },\n\n        _showBusy: function(e) {\n            var that = this;\n\n            if (e.isDefaultPrevented()) {\n                return;\n            }\n\n            that._request = true;\n\n            if (that._busy) {\n                return;\n            }\n\n            that._busy = setTimeout(function() {\n                if (that._arrowIcon) { //destroyed after request start\n                    that._focused.attr(ARIA_BUSY, true);\n                    that._arrowIcon.addClass(LOADING);\n                    that._arrowIcon.find(\"svg\").hide();\n                    that._hideClear();\n                }\n            }, 100);\n        },\n\n        _requestEnd: function() {\n            this._request = false;\n            this._hideBusy();\n        },\n\n        _dataSource: function() {\n            var that = this,\n                element = that.element,\n                options = that.options,\n                dataSource = options.dataSource || {},\n                idx;\n\n            dataSource = Array.isArray(dataSource) ? { data: dataSource } : dataSource;\n\n            if (that._isSelect) {\n                idx = element[0].selectedIndex;\n                if (idx > -1) {\n                    options.index = idx;\n                }\n\n                dataSource.select = element;\n                dataSource.fields = [{ field: options.dataTextField },\n                                     { field: options.dataValueField }];\n            }\n\n            if (that.dataSource) {\n                that._unbindDataSource();\n            } else {\n                that._requestStartHandler = that._showBusy.bind(that);\n                that._requestEndHandler = that._requestEnd.bind(that);\n                that._errorHandler = that._hideBusy.bind(that);\n            }\n\n            that.dataSource = kendo.data.DataSource.create(dataSource)\n                                   .bind(REQUESTSTART, that._requestStartHandler)\n                                   .bind(REQUESTEND, that._requestEndHandler)\n                                   .bind(\"error\", that._errorHandler);\n        },\n\n        _firstItem: function() {\n            this.listView.focusFirst();\n        },\n\n        _lastItem: function() {\n            this.listView.focusLast();\n        },\n\n        _nextItem: function() {\n            return this.listView.focusNext();\n        },\n\n        _prevItem: function() {\n            return this.listView.focusPrev();\n        },\n\n        _getNormalizedDataItem: function(candidate) {\n            var that = this,\n                listView = that.listView,\n                isIndex = typeof candidate === \"number\",\n                hasOptionLabel = that.optionLabel && that.optionLabel.length,\n                index;\n\n            if (isIndex) {\n                index = hasOptionLabel ? --candidate : candidate;\n            } else {\n                index = listView.getElementIndex(candidate);\n            }\n\n            return listView.dataItemByIndex(index);\n        },\n\n        _getNormalizedSelectCandidate: function(candidate) {\n            var that = this,\n                hasOptionLabel = that.optionLabel && that.optionLabel.length,\n                isIndex = typeof candidate === \"number\",\n                normalizedCandidate = candidate;\n\n            if (hasOptionLabel && isIndex) {\n                normalizedCandidate++;\n            }\n\n            return normalizedCandidate;\n        },\n\n        _move: function(e) {\n            var that = this;\n            var listView = that.listView;\n            var key = e.keyCode;\n            var down = key === keys.DOWN;\n            var isVirtual = that.options.virtual;\n            var dataItem;\n            var pressed;\n            var current;\n            var moveIndex;\n            var selectCandidate;\n\n            if (key === keys.UP || down) {\n                if (e.altKey) {\n                    that.toggle(down);\n                } else {\n                    if (!listView.bound() && !that.ul[0].firstChild) {\n                        if (!that._fetch) {\n                            that.dataSource.one(CHANGE, function() {\n                                that._fetch = false;\n                                that._move(e);\n                            });\n\n                            that._fetch = true;\n                            that._filterSource();\n                        }\n\n                        e.preventDefault();\n\n                        return true; //pressed\n                    }\n\n                    current = that._focus();\n\n                    if (!that._fetch && (!current || current.hasClass(KSELECTED))) {\n                        if (down) {\n                            moveIndex = that._nextItem();\n\n                            if ((isVirtual && moveIndex <= 0) || (!that._focus() && !moveIndex) ) {\n                                that._lastItem();\n                            }\n                        } else {\n                            moveIndex = that._prevItem();\n\n                            if ((isVirtual && moveIndex >= listView.dataSource.total() - 1) || (!that._focus() && !moveIndex)) {\n                                that._firstItem();\n                            }\n                        }\n                    }\n\n                    selectCandidate = that._getNormalizedSelectCandidate(that._get(that._focus()) || moveIndex || 0);\n\n                    that._select(selectCandidate, true).done(function() {\n                        var done = function() {\n                            if (!that.popup.visible()) {\n                                that._blur();\n                            }\n\n                            if (that._cascadedValue === null) {\n                                that._cascadedValue = that.value();\n                            } else {\n                                that._cascadedValue = that.dataItem() ? that.dataItem()[that.options.dataValueField] || that.dataItem() : null;\n                            }\n                        };\n\n                        if (that.trigger(SELECT, { dataItem: that._getNormalizedDataItem(selectCandidate), item: that._focus() })) {\n                            that._select(current).done(done);\n                        } else {\n                            done();\n                        }\n                    });\n                }\n\n                e.preventDefault();\n                pressed = true;\n            } else if (key === keys.ENTER || key === keys.TAB) {\n                if (that.popup.visible()) {\n                    e.preventDefault();\n                }\n\n                current = that._focus();\n                dataItem = that.dataItem();\n\n                if (!that.popup.visible() && (!dataItem || that.text() !== that._text(dataItem))) {\n                    current = null;\n                }\n\n                var activeFilter = that.filterInput && that.filterInput[0] === activeElement();\n                var selection;\n\n                if (current) {\n                    dataItem = listView.dataItemByIndex(listView.getElementIndex(current));\n                    var shouldTrigger = true;\n\n                    if (dataItem) {\n                        shouldTrigger = that._value(dataItem) !== List.unifyType(that.value(), typeof that._value(dataItem));\n                    }\n\n                    if (shouldTrigger && that.trigger(SELECT, { dataItem: dataItem, item: current })) {\n                        return;\n                    }\n\n                    selection = that._select(current);\n                } else if (that.input) {\n                    if (that._syncValueAndText() || that._isSelect) {\n                        that._accessor(that.input.val());\n                    }\n                    that.listView.value(that.input.val());\n                }\n\n                if (that._focusElement) {\n                    that._focusElement(that.wrapper);\n                }\n\n                if (activeFilter && key === keys.TAB) {\n                    that.wrapper.focusout();\n                } else {\n                    if (selection && typeof selection.done === \"function\") {\n                        selection.done(function() {\n                            that._blur();\n                        });\n                    } else {\n                        that._blur();\n                    }\n                }\n\n                that.close();\n                pressed = true;\n            } else if (key === keys.ESC) {\n                if (that.popup.visible()) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n                that.close();\n                pressed = true;\n            } else if (that.popup.visible() && (key === keys.PAGEDOWN || key === keys.PAGEUP)) {\n                e.preventDefault();\n\n                var direction = key === keys.PAGEDOWN ? 1 : -1;\n                listView.scrollWith(direction * listView.screenHeight());\n\n                pressed = true;\n            }\n\n            return pressed;\n        },\n\n        _fetchData: function() {\n            var that = this;\n            var hasItems = !!that.dataSource.view().length;\n\n            if (that._request || that.options.cascadeFrom) {\n                return;\n            }\n\n            if (!that.listView.bound() && !that._fetch && !hasItems) {\n                that._fetch = true;\n                that.dataSource.fetch().done(function() {\n                    that._fetch = false;\n                });\n            }\n        },\n\n        _options: function(data, optionLabel, value) {\n            var that = this,\n                element = that.element,\n                htmlElement = element[0],\n                length = data.length,\n                options = \"\",\n                option,\n                dataItem,\n                dataText,\n                dataValue,\n                idx = 0;\n\n            if (optionLabel) {\n                options = optionLabel;\n            }\n\n            for (; idx < length; idx++) {\n                option = \"<option\";\n                dataItem = data[idx];\n                dataText = that._text(dataItem);\n                dataValue = that._value(dataItem);\n\n                if (dataValue !== undefined$1) {\n                    dataValue += \"\";\n\n                    if (dataValue.indexOf('\"') !== -1) {\n                        dataValue = dataValue.replace(quotRegExp, \"&quot;\");\n                    }\n\n                    option += ' value=\"' + dataValue + '\"';\n                }\n\n                option += \">\";\n\n                if (dataText !== undefined$1) {\n                    option += htmlEncode(dataText);\n                }\n\n                option += \"</option>\";\n                options += option;\n            }\n\n            element.html(options);\n\n            if (value !== undefined$1) {\n                htmlElement.value = value;\n                if (htmlElement.value && !value) {\n                    htmlElement.selectedIndex = -1;\n                }\n            }\n\n            if (htmlElement.selectedIndex !== -1) {\n                option = getSelectedOption(htmlElement);\n\n                if (option) {\n                    option.setAttribute(SELECTED, SELECTED);\n                }\n            }\n        },\n\n        _reset: function() {\n            var that = this,\n                element = that.element,\n                formId = element.attr(\"form\"),\n                form = formId ? $(\"#\" + formId) : element.closest(\"form\");\n\n            if (form[0]) {\n                that._resetHandler = function() {\n                    setTimeout(function() {\n                        if (that.options._removeDataItems) {\n                            that.listView._dataItems = [];\n                        }\n\n                        that.value(that._initial);\n\n                    if (that.options._shouldRefresh) {\n                        that.text(that._initial);\n                        that.refresh();\n                    }\n                    });\n                };\n\n                that._form = form.on(\"reset\", that._resetHandler);\n            }\n        },\n\n        _parentWidget: function() {\n            var name = this.options.name;\n\n            if (!this.options.cascadeFrom) {\n                return;\n            }\n\n            var parentElement = $(\"#\" + this.options.cascadeFrom);\n            var parent = parentElement.data(\"kendo\" + name);\n\n            if (!parent) {\n                for (var i = 0; i < alternativeNames[name].length; i += 1) {\n                    parent = parentElement.data(\"kendo\" + alternativeNames[name][i]);\n\n                    if (!!parent) {\n                        break;\n                    }\n                }\n            }\n\n            return parent;\n        },\n\n        _cascade: function() {\n            var that = this;\n            var options = that.options;\n            var cascade = options.cascadeFrom;\n            var parent;\n\n            if (cascade) {\n                parent = that._parentWidget();\n\n                if (!parent) {\n                    return;\n                }\n\n                that._cascadeHandlerProxy = that._cascadeHandler.bind(that);\n                that._cascadeFilterRequests = [];\n\n                options.autoBind = false;\n\n                parent.bind(\"set\", function() { //will cascade\n                    that.one(\"set\", function(e) { //get your value\n                        that._selectedValue = e.value || that._accessor();\n                    });\n                });\n\n                parent.first(CASCADE, that._cascadeHandlerProxy);\n\n                //refresh was called\n                if (parent.listView.bound()) {\n                    that._toggleCascadeOnFocus();\n                    that._cascadeSelect(parent);\n                } else {\n                    parent.one(DATA_BOUND, function() {\n                        that._toggleCascadeOnFocus();\n                        if (parent.popup.visible()) {\n                            parent._focused.trigger(FOCUS);\n                        }\n                    });\n\n                    if (!parent.value()) {\n                        that.enable(false);\n                    }\n                }\n            }\n        },\n\n        _toggleCascadeOnFocus: function() {\n            var that = this;\n            var parent = that._parentWidget();\n            var focusout = isIE && parent instanceof ui.DropDownList ? BLUR : FOCUSOUT;\n\n            parent._focused.add(parent.filterInput).on(FOCUS, function() {\n                parent.unbind(CASCADE, that._cascadeHandlerProxy);\n                parent.unbind(CHANGE, that._cascadeHandlerProxy);\n                parent.first(CHANGE, that._cascadeHandlerProxy);\n            });\n\n            parent._focused.add(parent.filterInput).on(focusout, function() {\n                parent.unbind(CHANGE, that._cascadeHandlerProxy);\n                parent.unbind(CASCADE, that._cascadeHandlerProxy);\n                parent.first(CASCADE, that._cascadeHandlerProxy);\n            });\n        },\n\n        _cascadeHandler: function(e) {\n            var parent = this._parentWidget();\n            var valueBeforeCascade = this.value();\n\n            this._userTriggered = e.userTriggered || parent._userTriggered;\n\n            if (this.listView.bound()) {\n                this._clearSelection(parent, true);\n            }\n\n            this._cascadeSelect(parent, valueBeforeCascade);\n        },\n\n        _cascadeChange: function(parent) {\n            var that = this;\n            var value = that._accessor() || that._selectedValue;\n\n            if (!that._cascadeFilterRequests.length) {\n                that._selectedValue = null;\n            }\n\n            if (that._userTriggered) {\n                that._clearSelection(parent, true);\n            } else if (value) {\n                if (value !== unifyType(that.listView.value()[0], typeof value)) {\n                    that.value(value);\n                }\n\n                if (!that.dataSource.view()[0] || that.selectedIndex === -1) {\n                    that._clearSelection(parent, true);\n                }\n            } else if (that.dataSource.flatView().length) {\n                that.select(that.options.index);\n            }\n\n            that.enable();\n            that._triggerCascade();\n            that._triggerChange();\n            that._userTriggered = false;\n        },\n\n        _cascadeSelect: function(parent, valueBeforeCascade) {\n            var that = this;\n            var dataItem = parent.dataItem();\n            var filterValue = dataItem ? dataItem[that.options.cascadeFromParentField] || parent._value(dataItem) : null;\n            var valueField = that.options.cascadeFromField || parent.options.dataValueField;\n            var expressions;\n\n            // Applicable only when parent is ComboBox or MultiColumnComboBox\n            if (parent.options.cascadeOnCustomValue &&\n                filterValue === null &&\n                (!that.options.cascadeFromParentField || that.options.cascadeFromParentField === parent.options.dataValueField)) {\n                    filterValue = parent.value();\n            }\n\n            that._valueBeforeCascade = valueBeforeCascade !== undefined$1 ? valueBeforeCascade : that.value();\n\n            if (filterValue || filterValue === 0) {\n                expressions = that.dataSource.filter() || {};\n                removeFiltersForField(expressions, valueField);\n\n                var handler = function() {\n                    var currentHandler = that._cascadeFilterRequests.shift();\n                    if (currentHandler) {\n                        that.unbind('dataBound', currentHandler);\n                    }\n\n                    currentHandler = that._cascadeFilterRequests[0];\n                    if (currentHandler) {\n                        that.first('dataBound', currentHandler);\n                    }\n\n                    that._cascadeChange(parent);\n                };\n\n                that._cascadeFilterRequests.push(handler);\n\n                if (that._cascadeFilterRequests.length === 1) {\n                    that.first('dataBound', handler);\n                }\n\n                that._cascading = true;\n                that._filterSource({\n                    field: valueField,\n                    operator: \"eq\",\n                    value: filterValue\n                });\n                that._cascading = false;\n            } else {\n                that.enable(false);\n                that._clearSelection(parent);\n                that._triggerCascade();\n                that._triggerChange();\n                that._userTriggered = false;\n            }\n\n            that._refreshFloatingLabel();\n        }\n    });\n\n    var STATIC_LIST_NS = \".StaticList\";\n\n    var StaticList = kendo.ui.DataBoundWidget.extend({\n        init: function(element, options) {\n            Widget.fn.init.call(this, element, options);\n\n            this.element.attr(\"role\", (options.aria && options.aria.role) || 'listbox')\n                        .on(CLICK + STATIC_LIST_NS, \"li\", this._click.bind(this))\n                        .on(MOUSEENTER + STATIC_LIST_NS, \"li\", function() { $(this).addClass(HOVER); })\n                        .on(MOUSELEAVE + STATIC_LIST_NS, \"li\", function() { $(this).removeClass(HOVER); });\n\n            if (options && options.ariaLabel) {\n                this.element.attr(ARIA_LABEL, options.ariaLabel);\n            } else if (options && options.ariaLabelledBy) {\n                this.element.attr(ARIA_LABELLEDBY, options.ariaLabelledBy);\n            }\n\n            if (support.touch) {\n                this._touchHandlers();\n            }\n\n            if (this.options.selectable === \"multiple\") {\n                this.element.attr(ARIA_MULTISELECTABLE, true);\n            }\n\n            if (this.options.columns && this.options.columns.length) {\n                var thead = this.element.parent().find('.k-table-thead');\n                var row = $('<tr class=\"k-table-group-row\">' +\n                    '<th class=\"k-table-th\" colspan=\"' + this.options.columns.length + '\"></th>' +\n                '</tr>');\n\n                thead.append(row);\n\n                this.header = row.find(\".k-table-th\");\n\n                this.content = this.element.wrap(\"<div class='k-table-body k-table-scroller' unselectable='on'></div>\").parent();\n\n                this.element.addClass(TABLE_LIST);\n            } else {\n                this.content = this.element.wrap(\"<div class='k-list-content k-list-scroller' unselectable='on'></div>\").parent();\n                this.header = this.content.before($('<div class=\"k-list-group-sticky-header\"></div>').hide()).prev();\n                this.element.addClass(LIST_UL);\n            }\n\n            this.bound(false);\n\n            this._optionID = kendo.guid();\n\n            this._selectedIndices = [];\n\n            this._view = [];\n            this._dataItems = [];\n            this._values = [];\n\n            var value = this.options.value;\n\n            if (value) {\n                this._values = Array.isArray(value) ? value.slice(0) : [value];\n            }\n\n            this._getter();\n            this._templates();\n\n            this.setDataSource(this.options.dataSource);\n\n            this._createOnScrollProxy();\n        },\n\n        options: {\n            name: \"StaticList\",\n            dataValueField: null,\n            valuePrimitive: false,\n            selectable: true,\n            template: null,\n            groupTemplate: null,\n            fixedGroupTemplate: null,\n            ariaLabel: null,\n            ariaLabelledBy: null\n        },\n\n        events: [\n           CLICK,\n            CHANGE,\n           ACTIVATE,\n           DEACTIVATE,\n           DATA_BINDING,\n           DATA_BOUND,\n           SELECTED_ITEM_CHANGE\n        ],\n\n        setDataSource: function(source) {\n            var that = this;\n            var dataSource = source || {};\n            var value;\n\n            dataSource = Array.isArray(dataSource) ? { data: dataSource } : dataSource;\n            dataSource = kendo.data.DataSource.create(dataSource);\n\n            if (that.dataSource) {\n                that.dataSource.unbind(CHANGE, that._refreshHandler);\n\n                value = that.value();\n\n                that.value([]);\n                that.bound(false);\n\n                that.value(value);\n            } else {\n                that._refreshHandler = that.refresh.bind(that);\n            }\n\n            that.setDSFilter(dataSource.filter());\n\n            that.dataSource = dataSource.bind(CHANGE, that._refreshHandler);\n            that._fixedHeader();\n        },\n\n        _touchHandlers: function() {\n            var that = this,\n                itemSelector = this.options.columns && this.options.columns.length ? ITEMSELECTORTABLE : ITEMSELECTOR,\n                startY, endY,\n                tapPosition = function(event) {\n                    return (event.originalEvent || event).changedTouches[0].pageY;\n                };\n\n            that.element.on(\"touchstart\" + STATIC_LIST_NS, function(e) {\n                startY = tapPosition(e);\n            });\n\n            that.element.on(\"touchend\" + STATIC_LIST_NS, function(e) {\n                if (e.isDefaultPrevented()) {\n                    return;\n                }\n\n                endY = tapPosition(e);\n\n                if (Math.abs(endY - startY) < 10) {\n                    that._touchTriggered = true;\n                    that._triggerClick($(e.target).closest(itemSelector).get(0));\n                }\n            });\n        },\n\n        skip: function() {\n            return this.dataSource.skip();\n        },\n\n        setOptions: function(options) {\n            Widget.fn.setOptions.call(this, options);\n\n            this._getter();\n            this._templates();\n            this._render();\n\n            if (this.label && options.label) {\n                this.label.setOptions(options.label);\n            } else if (this.label && options.label === false) {\n                this.label._unwrapFloating();\n                this._inputLabel.remove();\n                delete this._inputLabel;\n            }\n        },\n\n        destroy: function() {\n            this.element.off(STATIC_LIST_NS);\n\n            if (this._refreshHandler) {\n                this.dataSource.unbind(CHANGE, this._refreshHandler);\n            }\n\n            clearTimeout(this._scrollId);\n\n            Widget.fn.destroy.call(this);\n        },\n\n        dataItemByIndex: function(index) {\n            return this.dataSource.flatView()[index];\n        },\n\n        screenHeight: function() {\n            return this.content[0].clientHeight;\n        },\n\n        scrollToIndex: function(index) {\n            var item = this.element[0].children[index];\n\n            if (item) {\n                this.scroll(item);\n            }\n        },\n\n        scrollWith: function(value) {\n            this.content.scrollTop(this.content.scrollTop() + value);\n        },\n\n        scroll: function(item) {\n            if (!item) {\n                return;\n            }\n\n            if (item[0]) {\n                item = item[0];\n            }\n\n            var content = this.content[0],\n                itemOffsetTop = item.offsetTop,\n                itemOffsetHeight = item.offsetHeight,\n                contentScrollTop = content.scrollTop,\n                contentOffsetHeight = content.clientHeight,\n                bottomDistance = itemOffsetTop + itemOffsetHeight;\n\n                if (contentScrollTop > itemOffsetTop) {\n                    contentScrollTop = itemOffsetTop;\n                } else if (bottomDistance > (contentScrollTop + contentOffsetHeight)) {\n                    contentScrollTop = (bottomDistance - contentOffsetHeight);\n                }\n\n                content.scrollTop = contentScrollTop;\n        },\n\n        selectedDataItems: function(dataItems) {\n            if (dataItems === undefined$1) {\n                return this._dataItems.slice();\n            }\n\n            this._dataItems = dataItems;\n            this._values = this._getValues(dataItems);\n        },\n\n        _getValues: function(dataItems) {\n            var getter = this._valueGetter;\n\n            return $.map(dataItems, function(dataItem) {\n                return getter(dataItem);\n            });\n        },\n\n        focusNext: function() {\n            var current = this.focus();\n\n            if (!current) {\n                current = 0;\n            } else {\n                current = current.next();\n            }\n\n            this.focus(current);\n        },\n\n        focusPrev: function() {\n            var current = this.focus();\n\n            if (!current) {\n                current = this.element[0].children.length - 1;\n            } else {\n                current = current.prev();\n            }\n\n            this.focus(current);\n        },\n\n        focusFirst: function() {\n            this.focus(this.element[0].children[0]);\n        },\n\n        focusLast: function() {\n            this.focus(last(this.element[0].children));\n        },\n\n        focus: function(candidate) {\n            var that = this;\n            var id = that._optionID;\n            var hasCandidate;\n\n            if (candidate === undefined$1) {\n                return that._current;\n            }\n\n            candidate = last(that._get(candidate));\n            candidate = $(this.element[0].children[candidate]);\n\n            if (that._current) {\n                that._current\n                    .removeClass(FOCUSED)\n                    .removeAttr(ID);\n\n                that.trigger(DEACTIVATE);\n            }\n\n            hasCandidate = !!candidate[0];\n\n            if (hasCandidate) {\n                candidate.addClass(FOCUSED);\n                that.scroll(candidate);\n\n                candidate.attr(\"id\", id);\n            }\n\n            that._current = hasCandidate ? candidate : null;\n            that.trigger(ACTIVATE);\n        },\n\n        focusIndex: function() {\n            return this.focus() ? this.focus().index() : undefined$1;\n        },\n\n        skipUpdate: function(skipUpdate) {\n            this._skipUpdate = skipUpdate;\n        },\n\n        select: function(indices) {\n            var that = this;\n            var selectable = that.options.selectable;\n            var singleSelection = selectable !== \"multiple\" && selectable !== false;\n            var selectedIndices = that._selectedIndices;\n            var uiSelectedIndices = [this.element.find(\".k-selected\").index()];\n\n            var added = [];\n            var removed = [];\n            var result;\n\n            if (indices === undefined$1) {\n                return selectedIndices.slice();\n            }\n\n            indices = that._get(indices);\n\n            if (indices.length === 1 && indices[0] === -1) {\n                indices = [];\n            }\n\n            var deferred = $.Deferred().resolve();\n            var filtered = that.isFiltered();\n\n            if (filtered && !singleSelection && that._deselectFiltered(indices)) {\n                return deferred;\n            }\n\n            if (singleSelection && !filtered &&\n                $.inArray(last(indices), selectedIndices) !== -1 && $.inArray(last(indices), uiSelectedIndices) !== -1) {\n\n                if (that._dataItems.length && that._view.length) {\n                    that._dataItems = [that._view[selectedIndices[0]].item];\n                }\n\n                return deferred;\n            }\n\n            result = that._deselect(indices);\n\n            removed = result.removed;\n            indices = result.indices;\n\n            if (indices.length) {\n                if (singleSelection) {\n                    indices = [last(indices)];\n                }\n\n                added = that._select(indices);\n\n            }\n\n            if (added.length || removed.length) {\n                that._valueComparer = null;\n                that.trigger(CHANGE, {\n                    added: added,\n                    removed: removed\n                });\n\n            }\n\n            return deferred;\n        },\n\n        removeAt: function(position) {\n            this._selectedIndices.splice(position, 1);\n            this._values.splice(position, 1);\n            this._valueComparer = null;\n\n            return {\n                position: position,\n                dataItem: this._dataItems.splice(position, 1)[0]\n            };\n        },\n\n        setValue: function(value) {\n            value = Array.isArray(value) || value instanceof ObservableArray ? value.slice(0) : [value];\n\n            this._values = value;\n\n            this._valueComparer = null;\n        },\n\n        value: function(value) {\n            var that = this;\n            var deferred = that._valueDeferred;\n            var indices;\n\n            if (value === undefined$1) {\n                return that._values.slice();\n            }\n\n            that.setValue(value);\n\n            if (!deferred || deferred.state() === \"resolved\") {\n                that._valueDeferred = deferred = $.Deferred();\n            }\n\n            if (that.bound()) {\n                indices = that._valueIndices(that._values);\n\n                if (that.options.selectable === \"multiple\") {\n                    that.select(-1);\n                }\n\n                that.select(indices);\n\n                deferred.resolve();\n            }\n\n            that._skipUpdate = false;\n\n            return deferred;\n        },\n\n        items: function() {\n            return this.element.children(ITEMSELECTOR);\n        },\n\n        _click: function(e) {\n            if (this._touchTriggered)\n            {\n                this._touchTriggered = false;\n                return;\n            }\n\n            if (!e.isDefaultPrevented()) {\n                this._triggerClick(e.currentTarget);\n            }\n        },\n\n        _createOnScrollProxy: function() {\n            var onScrollProxy = function() {\n                var that = this;\n                clearTimeout(that._scrollId);\n\n                that._scrollId = setTimeout(function() {\n                    that._renderHeader();\n                }, 50);\n            };\n\n            this._onScroll = onScrollProxy.bind(this);\n        },\n\n        _triggerClick: function(item) {\n            if (!this.trigger(CLICK, { item: $(item) })) {\n                this.select(item);\n            }\n        },\n\n        _valueExpr: function(type, values) {\n            var that = this;\n            var idx = 0;\n            var comparer;\n            var normalized = [];\n\n            if (!that._valueComparer || that._valueType !== type) {\n                that._valueType = type;\n\n                for (; idx < values.length; idx++) {\n                    normalized.push(unifyType(values[idx], type));\n                }\n\n                comparer = (current, values) => {\n                    for (var idx = 0; idx < normalized.length; idx++) {\n                        if (current === values[idx]) {\n                            return idx;\n                        }\n                    }\n                    return -1;\n                };\n\n                that._valueComparer = function(current) {\n                    return comparer(current, normalized);\n                };\n            }\n\n            return that._valueComparer;\n        },\n\n        _dataItemPosition: function(dataItem, values) {\n            var value = this._valueGetter(dataItem);\n\n            var valueExpr = this._valueExpr(typeof value, values);\n\n            return valueExpr(value);\n        },\n\n        _getter: function() {\n            this._valueGetter = kendo.getter(this.options.dataValueField);\n        },\n\n        _deselect: function(indices) {\n            var that = this;\n            var children = that.element[0].children;\n            var selectable = that.options.selectable;\n            var selectedIndices = that._selectedIndices;\n            var dataItems = that._dataItems;\n            var values = that._values;\n            var removed = [];\n            var i = 0;\n            var j;\n\n            var index, selectedIndex;\n            var removedIndices = 0;\n\n            indices = indices.slice();\n\n            if (selectable === true || !indices.length) {\n                for (; i < selectedIndices.length; i++) {\n                    $(children[selectedIndices[i]]).removeClass(KSELECTED).attr(ARIA_SELECTED, false);\n\n                    removed.push({\n                        position: i,\n                        dataItem: dataItems[i]\n                    });\n                }\n\n                that._values = [];\n                that._dataItems = [];\n                that._selectedIndices = [];\n            } else if (selectable === \"multiple\") {\n                for (; i < indices.length; i++) {\n                    index = indices[i];\n\n                    if (!$(children[index]).hasClass(KSELECTED)) {\n                        continue;\n                    }\n\n                    for (j = 0; j < selectedIndices.length; j++) {\n                        selectedIndex = selectedIndices[j];\n\n                        if (selectedIndex === index) {\n                            $(children[selectedIndex]).removeClass(KSELECTED).attr(ARIA_SELECTED, false);\n                            var dataItem = this._view[index].item;\n                            var position = this._dataItemPosition(dataItem, this._values);\n\n                            removed.push({\n                                position: position,\n                                dataItem: dataItem\n                            });\n\n                            dataItems.splice(j, 1);\n                            selectedIndices.splice(j, 1);\n                            indices.splice(i, 1);\n                            values.splice(j, 1);\n\n                            removedIndices += 1;\n                            i -= 1;\n                            j -= 1;\n                            break;\n                        }\n                    }\n                }\n            }\n\n            return {\n                indices: indices,\n                removed: removed\n            };\n        },\n\n        _deselectFiltered: function(indices) {\n            var children = this.element[0].children;\n            var dataItem, index, position;\n            var removed = [];\n            var idx = 0;\n\n            for (; idx < indices.length; idx++) {\n                index = indices[idx];\n\n                dataItem = this._view[index].item;\n                position = this._dataItemPosition(dataItem, this._values);\n\n                if (position > -1) {\n                    removed.push(this.removeAt(position));\n                    $(children[index]).removeClass(KSELECTED);\n                }\n            }\n\n            if (removed.length) {\n                this.trigger(CHANGE, {\n                    added: [],\n                    removed: removed\n                });\n\n                return true;\n            }\n\n            return false;\n        },\n\n        _select: function(indices) {\n            var that = this;\n            var children = that.element[0].children;\n            var data = that._view;\n            var dataItem, index;\n            var added = [];\n            var idx = 0;\n\n            if (last(indices) !== -1) {\n                that.focus(indices);\n            }\n\n            for (; idx < indices.length; idx++) {\n\n                index = indices[idx];\n                dataItem = data[index];\n\n                if (index === -1 || !dataItem) {\n                    continue;\n                }\n\n                dataItem = dataItem.item;\n\n                that._selectedIndices.push(index);\n                that._dataItems.push(dataItem);\n                that._values.push(that._valueGetter(dataItem));\n\n                $(children[index]).addClass(KSELECTED).attr(ARIA_SELECTED, true);\n\n                added.push({\n                    dataItem: dataItem\n                });\n            }\n            return added;\n        },\n\n        getElementIndex: function(element) {\n            return $(element).data(\"offset-index\");\n        },\n\n        _get: function(candidate) {\n            if (typeof candidate === \"number\") {\n                candidate = [candidate];\n            } else if (!isArray(candidate)) {\n                candidate = this.getElementIndex(candidate);\n                candidate = [candidate !== undefined$1 ? candidate : -1];\n            }\n\n            return candidate;\n        },\n\n        _templates: function() {\n            var template;\n            var options = this.options;\n            var templates = {\n                template: options.template,\n                groupTemplate: options.groupTemplate,\n                fixedGroupTemplate: options.fixedGroupTemplate\n            };\n\n            if (options.columns) {\n                options.columns.forEach((column, i) => {\n                    var templateText = column.field ? column.field.toString() : TEXT;\n                    var templateFunc = data => htmlEncode(kendo.getter(templateText)(data));\n\n                    templates[\"column\" + i] = column.template || templateFunc;\n                });\n            }\n\n            for (var key in templates) {\n                template = templates[key];\n                if (template && typeof template !== \"function\") {\n                    templates[key] = kendo.template(template);\n                }\n            }\n\n            this.templates = templates;\n        },\n\n        _normalizeIndices: function(indices) {\n            var newIndices = [];\n            var idx = 0;\n\n            for (; idx < indices.length; idx++) {\n                if (indices[idx] !== undefined$1) {\n                    newIndices.push(indices[idx]);\n                }\n            }\n\n            return newIndices;\n        },\n\n        _valueIndices: function(values, indices) {\n            var data = this._view;\n            var idx = 0;\n            var index;\n\n            indices = indices ? indices.slice() : [];\n\n            if (!values.length) {\n                return [];\n            }\n\n            for (; idx < data.length; idx++) {\n                index = this._dataItemPosition(data[idx].item, values);\n\n                if (index !== -1) {\n                    indices[index] = idx;\n                }\n            }\n\n            return this._normalizeIndices(indices);\n        },\n\n        _firstVisibleItem: function() {\n            var element = this.element[0];\n            var content = this.content[0];\n            var scrollTop = content.scrollTop;\n            var itemHeight = $(element.children[0]).height();\n            var itemIndex = Math.floor(scrollTop / itemHeight) || 0;\n\n            if (element.childElementCount == 0) {\n                return null;\n            }\n\n            var item = element.children[itemIndex] || element.lastChild;\n            var forward = item.offsetTop < scrollTop;\n\n            while (item) {\n                if (forward) {\n                    if ((item.offsetTop + itemHeight) > scrollTop || !item.nextSibling) {\n                        break;\n                    }\n\n                    item = item.nextSibling;\n                } else {\n                    if (item.offsetTop <= scrollTop || !item.previousSibling) {\n                        break;\n                    }\n\n                    item = item.previousSibling;\n                }\n            }\n\n            return this._view[$(item).data(\"offset-index\")];\n        },\n\n        _fixedHeader: function() {\n            if (this.isGrouped() && this.templates.fixedGroupTemplate) {\n                if (this.header.closest(GROUP_ROW_SEL).length) {\n                    this.header.closest(GROUP_ROW_SEL).show();\n                } else {\n                    this.header.show();\n                }\n\n                this.content.scroll(this._onScroll);\n            } else {\n                if (this.header.closest(GROUP_ROW_SEL).length) {\n                    this.header.closest(GROUP_ROW_SEL).hide();\n                } else {\n                    this.header.hide();\n                }\n\n                this.content.off(\"scroll\", this._onScroll);\n            }\n        },\n\n        _renderHeader: function() {\n            var template = this.templates.fixedGroupTemplate;\n            if (!template) {\n                return;\n            }\n\n            var visibleItem = this._firstVisibleItem();\n\n            if (visibleItem && visibleItem.group.toString().length) {\n                this.header.html(template(visibleItem.group));\n            }\n        },\n\n        _renderItem: function(context) {\n            var item = `<li tabindex=\"-1\" role=\"${(this.options.aria && this.options.aria.itemRole) || 'option'}\" unselectable=\"on\" `;\n\n            var dataItem = context.item;\n            var notFirstItem = context.index !== 0;\n            var selected = context.selected;\n            var isGrouped = this.isGrouped();\n            var hasColumns = this.options.columns && this.options.columns.length;\n            var altRow = context.index % 2 === 1 ? \" k-table-alt-row\" : \"\";\n\n            if (hasColumns) {\n                item += ('class=\"k-table-row' + altRow);\n            } else {\n                item += 'class=\"k-list-item';\n            }\n\n            if (notFirstItem && context.newGroup) {\n                item += ' k-first';\n            }\n\n            if (context.isLastGroupedItem && hasColumns) {\n                item += ' k-last';\n            }\n\n            if (selected) {\n                item += ' k-selected';\n            }\n\n            item += '\" aria-selected=\"' + (selected ? \"true\" : \"false\") + '\" data-offset-index=\"' + context.index + '\">';\n            if (hasColumns) {\n                item += this._renderColumns(dataItem);\n            } else {\n                item += '<span class=\"k-list-item-text\">';\n                item += this.templates.template(dataItem);\n                item += '</span>';\n            }\n\n            if (notFirstItem && context.newGroup) {\n                if (hasColumns) {\n                    item += '<span class=\"k-table-td k-table-group-td\"><span>' + this.templates.groupTemplate(context.group) + '</span></span>';\n                } else {\n                    item += '<div class=\"k-list-item-group-label\">' + this.templates.groupTemplate(context.group) + '</div>';\n                }\n            } else if (isGrouped && hasColumns) {\n                item += '<span class=\"k-table-td k-table-spacer-td\"></span>';\n            }\n\n            return item + \"</li>\";\n        },\n\n        _renderColumns: function(dataItem) {\n            var item = \"\";\n\n            for (var i = 0; i < this.options.columns.length; i++) {\n                var currentWidth = this.options.columns[i].width;\n                var currentWidthInt = parseInt(currentWidth, 10);\n                var widthStyle = '';\n\n                if (currentWidth && !isNaN(currentWidthInt)) {\n                    widthStyle += `${kendo.attr('style-width')}=\"${currentWidthInt}${percentageUnitsRegex.test(currentWidth) ? \"%\" : \"px\"}\"`;\n                }\n\n                item += \"<span class='k-table-td' \" + widthStyle + \">\";\n                item += this.templates[\"column\" + i](dataItem);\n                item += \"</span>\";\n            }\n\n            return item;\n        },\n\n        _render: function() {\n            var html = \"\";\n            var cspCompliantHtml;\n            var i = 0;\n            var idx = 0;\n            var context;\n            var dataContext = [];\n            var view = this.dataSource.view();\n            var values = this.value();\n\n            var group, newGroup, j;\n            var isGrouped = this.isGrouped();\n\n            if (isGrouped) {\n                for (i = 0; i < view.length; i++) {\n                    group = view[i];\n                    newGroup = true;\n\n                    for (j = 0; j < group.items.length; j++) {\n                        context = {\n                            selected: this._selected(group.items[j], values),\n                            item: group.items[j],\n                            group: group.value,\n                            newGroup: newGroup,\n                            isLastGroupedItem: j === group.items.length - 1,\n                            index: idx };\n                        dataContext[idx] = context;\n                        idx += 1;\n\n                        html += this._renderItem(context);\n                        newGroup = false;\n                    }\n                }\n            } else {\n                for (i = 0; i < view.length; i++) {\n                    context = { selected: this._selected(view[i], values), item: view[i], index: i };\n\n                    dataContext[i] = context;\n\n                    html += this._renderItem(context);\n                }\n            }\n\n            this._view = dataContext;\n\n            cspCompliantHtml = $(html);\n            kendo.applyStylesFromKendoAttributes(cspCompliantHtml, [\"width\", \"background-color\"]);\n\n            this.element.empty().append(cspCompliantHtml);\n\n            if (isGrouped && dataContext.length) {\n                this._renderHeader();\n            }\n        },\n\n        _selected: function(dataItem, values) {\n            var select = !this.isFiltered() || this.options.selectable === \"multiple\";\n            return select && this._dataItemPosition(dataItem, values) !== -1;\n        },\n\n        setDSFilter: function(filter) {\n            this._lastDSFilter = extend({}, filter);\n        },\n\n        isFiltered: function() {\n            if (!this._lastDSFilter) {\n                this.setDSFilter(this.dataSource.filter());\n            }\n\n            return !kendo.data.Query.compareFilters(this.dataSource.filter(), this._lastDSFilter);\n        },\n\n        refresh: function(e) {\n            var that = this;\n            var action = e && e.action;\n            var skipUpdateOnBind = that.options.skipUpdateOnBind;\n            var isItemChange = action === \"itemchange\";\n            var result;\n\n            that.trigger(DATA_BINDING);\n\n            that._fixedHeader();\n\n            that._render();\n\n            that.bound(true);\n\n            if (isItemChange || action === \"remove\") {\n                result = mapChangedItems(that._dataItems, e.items);\n\n                if (result.changed.length) {\n                    if (isItemChange) {\n                        that.trigger(SELECTED_ITEM_CHANGE, {\n                            items: result.changed\n                        });\n                    } else {\n                        that.value(that._getValues(result.unchanged));\n                    }\n                }\n            } else if (that.isFiltered() || that._skipUpdate || that._emptySearch) {\n                that.focus(0);\n                if (that._skipUpdate) {\n                    that._skipUpdate = false;\n                    that._selectedIndices = that._valueIndices(that._values, that._selectedIndices);\n                }\n            } else if (!skipUpdateOnBind && (!action || action === \"add\")) {\n                that.value(that._values);\n            }\n\n            if (that._valueDeferred) {\n                that._valueDeferred.resolve();\n            }\n\n            that.trigger(DATA_BOUND);\n        },\n\n        bound: function(bound) {\n            if (bound === undefined$1) {\n                return this._bound;\n            }\n\n            this._bound = bound;\n        },\n\n        isGrouped: function() {\n            return (this.dataSource.group() || []).length;\n        }\n    });\n\n    ui.plugin(StaticList);\n\n    function last(list) {\n        return list[list.length - 1];\n    }\n\n    function getSelectedOption(select) {\n        var index = select.selectedIndex;\n        return index > -1 ? select.options[index] : {};\n    }\n\n    function mapChangedItems(selected, itemsToMatch) {\n        var itemsLength = itemsToMatch.length;\n        var selectedLength = selected.length;\n        var dataItem;\n        var found;\n        var i, j;\n\n        var changed = [];\n        var unchanged = [];\n\n        if (selectedLength) {\n            for (i = 0; i < selectedLength; i++) {\n                dataItem = selected[i];\n                found = false;\n\n                for (j = 0; j < itemsLength; j++) {\n                    if (dataItem === itemsToMatch[j]) {\n                        found = true;\n                        changed.push({ index: i, item: dataItem });\n                        break;\n                    }\n                }\n\n                if (!found) {\n                    unchanged.push(dataItem);\n                }\n            }\n        }\n\n        return {\n            changed: changed,\n            unchanged: unchanged\n        };\n    }\n\n    function isValidFilterExpr(expression) {\n        if (!expression || $.isEmptyObject(expression)) {\n            return false;\n        }\n\n        if (expression.filters && !expression.filters.length) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function removeFiltersForField(expression, field) {\n        var filters;\n        var found = false;\n\n        if (expression.filters) {\n            filters = $.grep(expression.filters, function(filter) {\n                found = removeFiltersForField(filter, field);\n                if (filter.filters) {\n                    return filter.filters.length;\n                } else {\n                    return filter.field != field;\n                }\n            });\n\n            if (!found && expression.filters.length !== filters.length) {\n                found = true;\n            }\n\n            expression.filters = filters;\n        }\n\n        return found;\n    }\n\n    kendo.cssProperties.registerPrefix(\"List\", \"k-list-\");\n\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.list.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.listbox.js":
/*!*********************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.listbox.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_draganddrop_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.draganddrop.js */ \"./node_modules/kendo-ui-core/esm/kendo.draganddrop.js\");\n/* harmony import */ var _kendo_data_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.data.js */ \"./node_modules/kendo-ui-core/esm/kendo.data.js\");\n/* harmony import */ var _kendo_selectable_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kendo.selectable.js */ \"./node_modules/kendo-ui-core/esm/kendo.selectable.js\");\n/* harmony import */ var _kendo_html_button_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./kendo.html.button.js */ \"./node_modules/kendo-ui-core/esm/kendo.html.button.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\n\n\nvar __meta__ = {\n    id: \"listbox\",\n    name: \"ListBox\",\n    category: \"web\",\n    depends: [\"draganddrop\", \"data\", \"selectable\", 'html.button']\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo;\n    var kendoAttr = kendo.attr;\n    var data = kendo.data;\n    var keys = kendo.keys;\n    var kendoTemplate = kendo.template;\n    var Widget = kendo.ui.Widget;\n    var DataSource = data.DataSource;\n    var Selectable = kendo.ui.Selectable;\n    var DataBoundWidget = kendo.ui.DataBoundWidget;\n    var Class = kendo.Class;\n\n    var extend = $.extend;\n    var noop = $.noop;\n\n    var DASH = \"-\";\n    var DOT = \".\";\n    var SPACE = \" \";\n    var HASH = \"#\";\n\n    var KENDO_LISTBOX = \"kendoListBox\";\n    var NS = DOT + KENDO_LISTBOX;\n    var DISABLED_STATE_CLASS = \"k-disabled\";\n    var SELECTED_STATE_CLASS = \"k-selected\";\n    var ENABLED_ITEM_SELECTOR = \".k-list-item:not(.k-disabled)\";\n    var ENABLED_ITEMS_SELECTOR = \".k-list-ul:not(.k-disabled) >\" + ENABLED_ITEM_SELECTOR;\n    var TOOLBAR_CLASS = \"k-listbox-actions\";\n    var TOOL_SELECTOR = \".k-button\";\n    var ENABLED_TOOL_SELECTOR = \"button.k-button:not(.k-disabled)\";\n    var FOCUSED_CLASS = \"k-focus\";\n    var DRAG_CLUE_CLASS = \"k-drag-clue\";\n    var DROP_HINT_CLASS = \"k-drop-hint\";\n    var LIST_CLASS = \"k-list-ul\";\n    var LIST_SELECTOR = \".k-list-ul\";\n\n    var CLICK = \"click\" + NS;\n    var KEYDOWN = \"keydown\" + NS;\n    var BLUR = \"blur\" + NS;\n    var outerWidth = kendo._outerWidth;\n    var outerHeight = kendo._outerHeight;\n    var CHANGE = \"change\";\n    var DATABOUND = \"dataBound\";\n    var ADD = \"add\";\n    var REMOVE = \"remove\";\n    var REORDER = \"reorder\";\n    var MOVE_UP = \"moveUp\";\n    var MOVE_DOWN = \"moveDown\";\n    var TRANSFER_TO = \"transferTo\";\n    var TRANSFER_FROM = \"transferFrom\";\n    var TRANSFER_ALL_TO = \"transferAllTo\";\n    var TRANSFER_ALL_FROM = \"transferAllFrom\";\n    var CARET_ALT_RIGHT = \"caret-alt-right\";\n    var CARET_ALT_LEFT = \"caret-alt-left\";\n    var CARET_ALT_DOUBLE_RIGHT = \"caret-double-alt-right\";\n    var CARET_ALT_DOUBLE_LEFT = \"caret-double-alt-left\";\n    var DRAGGEDCLASS = \"k-ghost\";\n    var UNIQUE_ID = \"uid\";\n    var ID = \"id\";\n    var TABINDEX = \"tabindex\";\n    var COMMAND = \"command\";\n\n    var MOVE_UP_OFFSET = -1;\n    var MOVE_DOWN_OFFSET = 1;\n    var DRAGSTART = \"dragstart\";\n    var DRAG = \"drag\";\n    var DROP = \"drop\";\n    var DRAGEND = \"dragend\";\n    var DEFAULT_FILTER = \"ul.k-list-ul>li.k-list-item\";\n\n    var RIGHT = \"right\";\n    var BOTTOM = \"bottom\";\n\n    var ARIA_ACTIVEDESCENDENT = \"aria-activedescendant\";\n    var ARIA_BUSY = \"aria-busy\";\n    var ARIA_CONTROLS = \"aria-controls\";\n    var ARIA_LABEL = \"aria-label\";\n    var ARIA_LABELLEDBY = \"aria-labelledby\";\n    var ARIA_MULTISELECTABLE = \"aria-multiselectable\";\n\n    var TOOLBAR_POSITION_CLASS_NAMES = [\n        TOOLBAR_CLASS + DASH + \"left\",\n        TOOLBAR_CLASS + DASH + RIGHT,\n        TOOLBAR_CLASS + DASH + \"top\",\n        TOOLBAR_CLASS + DASH + BOTTOM\n    ];\n\n    function getSortedDomIndices(items) {\n        var indices = $.map(items, function(item) {\n            return $(item).index();\n        });\n\n        return indices;\n    }\n\n    function isUndefined(value) {\n        return (typeof value === \"undefined\");\n    }\n\n    function defaultHint(element) {\n        return element.clone()\n            .attr('class', '')\n            .addClass(DRAG_CLUE_CLASS);\n    }\n\n    function defaultPlaceholder() {\n        return $('<li>').addClass(DROP_HINT_CLASS);\n    }\n\n    var ListBox = DataBoundWidget.extend({\n        init: function(element, options) {\n            var that = this;\n            Widget.fn.init.call(that, element, options);\n\n            that._wrapper();\n            that._list();\n            that._ariaLabel(that._getList());\n            element = that.element.attr(\"multiple\", \"multiple\").hide();\n\n            if (element[0] && !that.options.dataSource) {\n                that.options.dataTextField = that.options.dataTextField || \"text\";\n                that.options.dataValueField = that.options.dataValueField || \"value\";\n            }\n            that._templates();\n            that._selectable();\n            that._dataSource();\n            that._createToolbar();\n            that._createDraggable();\n            that._createNavigatable();\n        },\n\n        destroy: function() {\n            var that = this;\n\n            DataBoundWidget.fn.destroy.call(that);\n            if (!isNaN(that._listTabIndex)) {\n                that._getList().off();\n                that._listTabIndex = null;\n            }\n            that._unbindDataSource();\n            that._destroySelectable();\n            that._destroyToolbar();\n            that.wrapper.off(NS);\n            if (that._target) {\n                that._target = null;\n            }\n            if (that._draggable) {\n                that._draggable.destroy();\n                that.placeholder = null;\n            }\n\n            kendo.destroy(that.element);\n        },\n\n        setOptions: function(options) {\n            Widget.fn.setOptions.call(this, options);\n            this._templates();\n            this._dataSource();\n        },\n\n        events: [\n            CHANGE,\n            DATABOUND,\n            ADD,\n            REMOVE,\n            REORDER,\n            DRAGSTART,\n            DRAG,\n            DROP,\n            DRAGEND\n        ],\n\n        options: {\n            name: \"ListBox\",\n            autoBind: true,\n            template: \"\",\n            dataTextField: \"\",\n            dataValueField: \"\",\n            selectable: \"single\",\n            draggable: null,\n            dropSources: [],\n            connectWith: \"\",\n            navigatable: true,\n            toolbar: {\n                position: RIGHT,\n                tools: []\n            },\n            messages: {\n                tools: {\n                    remove: \"Delete\",\n                    moveUp: \"Move Up\",\n                    moveDown: \"Move Down\",\n                    transferTo: \"Transfer To\",\n                    transferFrom: \"Transfer From\",\n                    transferAllTo: \"Transfer All To\",\n                    transferAllFrom: \"Transfer All From\"\n                }\n            }\n        },\n\n        add: function(dataItems) {\n            var that = this;\n            var items = dataItems && dataItems.length ? dataItems : [dataItems];\n            var itemsLength = items.length;\n            var list = that._getList();\n            var i;\n\n            that._unbindDataSource();\n            that._unbindDataChange();\n            for (i = 0; i < itemsLength; i++) {\n                that._addItem(items[i], list);\n            }\n            that._bindDataChange();\n            that._bindDataSource();\n            that._syncElement();\n        },\n\n        _addItem: function(dataItem, list) {\n            var that = this;\n            var item = $(that.templates.itemTemplate({ item: dataItem, r: that.templates.itemContent }));\n\n            that._setItemId(item, dataItem.uid);\n\n            item.appendTo(list);\n\n            if (typeof dataItem === typeof \"\") {\n                that.dataSource._data.push(dataItem);\n            } else {\n                that.dataSource.add(dataItem);\n            }\n        },\n\n        _addItemAt: function(dataItem, index) {\n            var that = this;\n            var item = $(that.templates.itemTemplate({ item: dataItem, r: that.templates.itemContent }));\n            that._unbindDataSource();\n            if (typeof dataItem === typeof \"\") {\n                that._insertElementAt(item, index);\n                that.dataSource._data.push(dataItem);\n            } else {\n                that._setItemId(item, dataItem.uid);\n                that._insertElementAt(item, index);\n                that.dataSource.add(dataItem);\n            }\n            that._bindDataSource();\n            that._syncElement();\n        },\n\n        _insertElementAt: function(item, index) {\n            var that = this;\n            var list = that._getList();\n\n            if (index > 0) {\n                $(item).insertAfter(list.children().eq(index - 1));\n            } else {\n                $(list).prepend(item);\n            }\n        },\n\n        _createNavigatable: function() {\n            var that = this;\n            var options = that.options;\n\n            if (options.navigatable) {\n                that._getList().on(CLICK, ENABLED_ITEM_SELECTOR, that._click.bind(that))\n                            .on(KEYDOWN, that._keyDown.bind(that))\n                            .on(BLUR, that._blur.bind(that));\n            }\n        },\n\n        _getTabIndex: function() {\n            var that = this;\n            var tabindex;\n\n            if (!isNaN(that._listTabIndex))\n            {\n                return that._listTabIndex;\n            }\n\n            tabindex = that.element.attr(TABINDEX);\n            that._listTabIndex = !isNaN(tabindex) ? tabindex : 0;\n\n            that.element.removeAttr(TABINDEX);\n\n            return that._listTabIndex;\n        },\n\n        _blur: function() {\n            if (this._target) {\n                this._target.removeClass(FOCUSED_CLASS);\n                this._getList().removeAttr(ARIA_ACTIVEDESCENDENT);\n            }\n            this._target = null;\n        },\n\n        _click: function(e) {\n            var that = this;\n            var target = $(e.currentTarget);\n            var oldTarget = that._target;\n            var list = that._getList();\n            var activeEl = kendo._activeElement();\n            var isContained = $.contains(list, activeEl);\n\n            if (oldTarget) {\n                oldTarget.removeClass(FOCUSED_CLASS);\n            }\n\n            that._target = target;\n            target.addClass(FOCUSED_CLASS);\n            list.attr(ARIA_ACTIVEDESCENDENT, target.attr(ID));\n\n            if (list[0] !== activeEl && (!isContained || !isInputElement(activeEl))) {\n                that.focus();\n            }\n        },\n\n        _getNavigatableItem: function(key) {\n            var that = this;\n            var current;\n\n            if (!that._target) {\n                current = that.items().filter(ENABLED_ITEM_SELECTOR).first();\n            } else {\n                current = that._target;\n            }\n\n            if (key === keys.UP && that._target) {\n                current = that._target.prevAll(ENABLED_ITEM_SELECTOR).first();\n            }\n\n            if (key === keys.DOWN && that._target) {\n                current = that._target.nextAll(ENABLED_ITEM_SELECTOR).first();\n            }\n\n            return current.length ? current : null;\n        },\n\n        _scrollIntoView: function(item) {\n            if (!item) {\n                return;\n            }\n\n            if (item[0]) {\n                item = item[0];\n            }\n\n            var list = this._getList().parent()[0];\n            var itemOffsetTop = item.offsetTop;\n            var contentScrollTop = list.scrollTop;\n            var contentOffsetHeight = list.clientHeight;\n            var bottomDistance = itemOffsetTop + item.offsetHeight;\n\n            if (contentScrollTop > itemOffsetTop) {\n                contentScrollTop = itemOffsetTop;\n            } else if (bottomDistance > (contentScrollTop + contentOffsetHeight)) {\n                contentScrollTop = (bottomDistance - contentOffsetHeight);\n            }\n\n            list.scrollTop = contentScrollTop;\n        },\n\n        _keyDown: function(e) {\n            var that = this;\n            var key = e.keyCode;\n            var current = that._getNavigatableItem(key);\n            var shouldPreventDefault;\n\n            if (!(e.shiftKey && !e.ctrlKey && (key === keys.DOWN || key === keys.UP))) {\n                that._shiftSelecting = false;\n            }\n\n            if (key == keys.DELETE) {\n                that._executeCommand(REMOVE);\n                if (that._target) {\n                    that._target.removeClass(FOCUSED_CLASS);\n                    that._getList().removeAttr(ARIA_ACTIVEDESCENDENT);\n                    that._target = null;\n                }\n                shouldPreventDefault = true;\n            } else if (key === keys.DOWN || key === keys.UP) {\n                if (!current) {\n                    e.preventDefault();\n                    return;\n                }\n\n                if (e.shiftKey && !e.ctrlKey) {\n                    if (that._target) {\n                        that._target.removeClass(FOCUSED_CLASS);\n                    }\n\n                    if (!that._shiftSelecting) {\n                        that.clearSelection();\n                        that._shiftSelecting = true;\n                    }\n                    if (that._target && current.hasClass(\"k-selected\")) {\n                        that._target.removeClass(SELECTED_STATE_CLASS);\n                    } else if (that.options.selectable == \"single\") {\n                        that.select(current);\n                    } else {\n                        that.select(current.add(that._target));\n                    }\n\n                    that._updateToolbar();\n                    that._updateAllToolbars();\n                    that.trigger(CHANGE);\n                } else if (e.shiftKey && e.ctrlKey) {\n                    that._executeCommand(key === keys.DOWN ? MOVE_DOWN : MOVE_UP);\n                    that._scrollIntoView(that._target);\n                    e.preventDefault();\n                    return;\n                } else if (!e.shiftKey && !e.ctrlKey) {\n                    if (that._target) {\n                        that._target.removeClass(FOCUSED_CLASS);\n                    }\n\n                    if (that.options.selectable === \"multiple\") {\n                        that.clearSelection();\n                    }\n\n                    that.select(current);\n                    that._updateToolbar();\n                    that._updateAllToolbars();\n                    that.trigger(CHANGE);\n                }\n\n                if (current && that._target && that._target[0] !== current[0]) {\n                    that._target.removeClass(FOCUSED_CLASS);\n                }\n\n                that._target = current;\n\n                if (that._target) {\n                    that._target.addClass(FOCUSED_CLASS);\n                    that._scrollIntoView(that._target);\n                    that._getList().attr(ARIA_ACTIVEDESCENDENT, that._target.attr(ID));\n                } else {\n                    that._getList().removeAttr(ARIA_ACTIVEDESCENDENT);\n                }\n                shouldPreventDefault = true;\n            } else if (key == keys.SPACEBAR) {\n                if (e.ctrlKey && that._target) {\n                    if (that._target.hasClass(SELECTED_STATE_CLASS)) {\n                        that._target.removeClass(SELECTED_STATE_CLASS);\n                    } else {\n                        that.select(that._target);\n                    }\n\n                    that.trigger(CHANGE);\n                } else {\n                   that.clearSelection();\n                   that.select(that._target);\n                   that.trigger(CHANGE);\n                }\n\n                that._updateToolbar();\n                that._updateAllToolbars();\n                shouldPreventDefault = true;\n            } else if (e.ctrlKey && key == keys.RIGHT) {\n                if (e.shiftKey) {\n                   that._executeCommand(TRANSFER_ALL_TO);\n                } else {\n                   that._executeCommand(TRANSFER_TO);\n                }\n\n                that._target = that.select().length ? that.select() : null;\n                shouldPreventDefault = true;\n            } else if (e.ctrlKey && key == keys.LEFT) {\n                if (e.shiftKey) {\n                   that._executeCommand(TRANSFER_ALL_FROM);\n                } else {\n                   that._executeCommand(TRANSFER_FROM);\n                }\n                shouldPreventDefault = true;\n            } else if (key === keys.F10) {\n                if (that.toolbar) {\n                    that.toolbar.element.find(TOOL_SELECTOR).not(\"[tabindex=-1]\").trigger(\"focus\");\n\n                    shouldPreventDefault = true;\n                }\n            }\n\n            if (shouldPreventDefault) {\n                e.preventDefault();\n            }\n        },\n\n        focus: function() {\n            kendo.focusElement(this._getList());\n        },\n\n        _createDraggable: function() {\n            var that = this;\n            var draggable = that.options.draggable;\n            var hint;\n\n            if (draggable) {\n                hint = draggable.hint;\n                if (!that.options.selectable) {\n                    throw new Error(\"Dragging requires selection to be enabled\");\n                }\n\n                if (!hint) {\n                    hint = defaultHint;\n                }\n\n                that._draggable = new kendo.ui.Draggable(that.wrapper, {\n                    filter: draggable.filter ? draggable.filter : DEFAULT_FILTER,\n                    hint: kendo.isFunction(hint) ? hint : $(hint),\n                    dragstart: that._dragstart.bind(that),\n                    dragcancel: that._clear.bind(that),\n                    drag: that._drag.bind(that),\n                    dragend: that._dragend.bind(that)\n                });\n            }\n        },\n\n        _dragstart: function(e) {\n            var that = this;\n            var draggedElement = that.draggedElement = e.currentTarget;\n            var placeholder = that.options.draggable.placeholder;\n            var dataItem = that.dataItem(draggedElement);\n            var eventData = { dataItems: dataItem, items: $(draggedElement), draggableEvent: e };\n\n            if (that.options.draggable.enabled === false) {\n                e.preventDefault();\n                return;\n            }\n\n            if (!placeholder) {\n                placeholder = defaultPlaceholder;\n            }\n\n            that.placeholder = kendo.isFunction(placeholder) ? $(placeholder.call(that, draggedElement)) : $(placeholder);\n\n            if (draggedElement.is(DOT + DISABLED_STATE_CLASS)) {\n                e.preventDefault();\n            } else {\n                if (that.trigger(DRAGSTART, eventData)) {\n                    e.preventDefault();\n                } else {\n                    that.clearSelection();\n                    that.select(draggedElement);\n                    draggedElement.addClass(DRAGGEDCLASS);\n                }\n            }\n        },\n\n        _clear: function() {\n            this.draggedElement.removeClass(DRAGGEDCLASS);\n            this.placeholder.remove();\n        },\n\n        _findElementUnderCursor: function(e) {\n            var elementUnderCursor = kendo.elementUnderCursor(e);\n            var draggable = e.sender;\n\n            if ($.contains(draggable.hint[0], elementUnderCursor) || draggable.hint[0] === elementUnderCursor) {\n                draggable.hint.hide();\n                elementUnderCursor = kendo.elementUnderCursor(e);\n                draggable.hint.show();\n            }\n\n            return elementUnderCursor;\n        },\n\n        _findTarget: function(e) {\n            var that = this;\n            var element = that._findElementUnderCursor(e);\n            var elementNode = $(element);\n            var list = that._getList();\n            var items;\n            var node;\n\n            if ($.contains(list[0], element)) {\n                items = that.items();\n                element = elementNode.is(\"li\") ? element : elementNode.closest(\"li\")[0];\n                node = items.filter(element)[0] || items.has(element)[0];\n                if (node) {\n                    node = $(node);\n                    return !node.hasClass(DISABLED_STATE_CLASS) ? { element: node, listBox: that } : null;\n                } else {\n                    return null;\n                }\n            } else if (list[0] == element || list.parent()[0] == element) {\n                return { element: $(list), appendToBottom: true, listBox: that };\n            } else {\n                return that._searchConnectedListBox(elementNode);\n            }\n        },\n\n        _getElementCenter: function(element) {\n            var center = element.length ? kendo.getOffset(element) : null;\n            if (center) {\n                center.top += outerHeight(element) / 2;\n                center.left += outerWidth(element) / 2;\n            }\n\n            return center;\n        },\n\n        _searchConnectedListBox: function(element) {\n            var connectedListBox;\n            var items;\n            var node;\n            var originalElement = element;\n            var closestContainer;\n\n            if (element.hasClass(\"k-list-scroller k-selectable\")) {\n                closestContainer = element;\n            } else {\n                closestContainer = element.closest(\".k-list-scroller.k-selectable\");\n            }\n\n            if (closestContainer.length) {\n                connectedListBox = closestContainer.parent().find(\"[data-role='listbox']\").getKendoListBox();\n            } else {\n                return null;\n            }\n\n            if (connectedListBox && $.inArray(this.element[0].id, connectedListBox.options.dropSources) !== -1) {\n                items = connectedListBox.items();\n                element = element.is(\"li\") ? element[0] : element.closest(\"li\")[0];\n                node = items.filter(element)[0] || items.has(element)[0];\n                if (node) {\n                    node = $(node);\n                    return !node.hasClass(DISABLED_STATE_CLASS) ? { element: node, listBox: connectedListBox } : null;\n                } else if (!items.length ||\n                            originalElement.hasClass(\"k-list-scroller k-selectable\") ||\n                            originalElement.hasClass(\"k-list-content\")) {\n                    return { element: connectedListBox._getList(), listBox: connectedListBox, appendToBottom: true };\n                } else {\n                    return null;\n                }\n            }\n            return null;\n        },\n\n        _drag: function(e) {\n            var that = this;\n            var draggedElement = that.draggedElement;\n            var target = that._findTarget(e);\n            var cursorOffset = { left: e.x.location, top: e.y.location };\n            var dataItem = that.dataItem(draggedElement);\n            var eventData = { dataItems: [dataItem], items: $(draggedElement), draggableEvent: e };\n            var targetCenter;\n            var offsetDelta;\n            var direction;\n\n            if (that.trigger(DRAG, eventData)) {\n                e.preventDefault();\n                return;\n            }\n\n            if (target) {\n                targetCenter = this._getElementCenter(target.element);\n\n                offsetDelta = {\n                    left: Math.round(cursorOffset.left - targetCenter.left),\n                    top: Math.round(cursorOffset.top - targetCenter.top)\n                };\n\n                if (target.appendToBottom) {\n                    that._movePlaceholder(target, null , draggedElement);\n                    return;\n                }\n\n                if (offsetDelta.top < 0) {\n                    direction = \"prev\";\n                } else if (offsetDelta.top > 0) {\n                    direction = \"next\";\n                }\n\n                if (direction) {\n                    if (target.element[0] != that.placeholder[0]) {\n                        that._movePlaceholder(target, direction, draggedElement);\n                    }\n                }\n             }\n             else if (that.placeholder.parent().length) {\n                that.placeholder.remove();\n             }\n        },\n\n        _movePlaceholder: function(target, direction, draggedElement) {\n            var that = this;\n            var placeholder = that.placeholder;\n            var draggableOptions = target.listBox.options.draggable;\n\n            if (placeholder.parent().length) {\n                that.placeholder.remove();\n                if (draggableOptions && draggableOptions.placeholder) {\n                    that.placeholder = kendo.isFunction(draggableOptions.placeholder) ? $(draggableOptions.placeholder.call(that, draggedElement)) : $(draggableOptions.placeholder);\n                } else {\n                    that.placeholder = $(defaultPlaceholder.call(that, draggedElement));\n                }\n            }\n\n            if (!direction) {\n                target.element.append(that.placeholder);\n            } else if (direction === \"prev\") {\n                target.element.before(that.placeholder);\n            } else if (direction === \"next\") {\n                target.element.after(that.placeholder);\n            }\n        },\n\n        _dragend: function(e) {\n            var that = this;\n            var draggedItem = that.draggedElement;\n            var items = that.items();\n            var placeholderIndex = items.not(that.draggedElement).index(that.placeholder);\n            var draggedIndex = items.not(that.placeholder).index(that.draggedElement);\n            var dataItem = that.dataItem(draggedItem);\n            var eventData = { dataItems: [dataItem], items: $(draggedItem) };\n            var connectedListBox = that.placeholder.closest(\".k-listbox\").find(\"[data-role='listbox']\").getKendoListBox();\n\n            if (that.trigger(DROP, extend({}, eventData, { draggableEvent: e }))) {\n                e.preventDefault();\n                this._clear();\n                return;\n            }\n\n            if (placeholderIndex >= 0) {\n                if (placeholderIndex !== draggedIndex && !that.trigger(REORDER, extend({}, eventData, { offset: placeholderIndex - draggedIndex }))) {\n                    draggedItem.removeClass(DRAGGEDCLASS);\n                    that.reorder(draggedItem, placeholderIndex);\n                }\n            } else if (connectedListBox) {\n                if (!that.trigger(REMOVE, eventData)) {\n                    that.remove($(draggedItem));\n                }\n\n                if (!connectedListBox.trigger(ADD, eventData)) {\n                    connectedListBox._addItemAt(dataItem, connectedListBox.items().index(that.placeholder));\n                }\n            }\n\n            that._clear();\n            that._draggable.dropped = true;\n\n            that.trigger(DRAGEND, extend({}, eventData, { draggableEvent: e }));\n\n            that._updateToolbar();\n            that._updateAllToolbars();\n        },\n\n        reorder: function(item, index) {\n            var that = this;\n            var dataSource = that.dataSource;\n            var dataItem = that.dataItem(item);\n            var dataItemAtIndex = dataSource.at(index);\n            var itemAtIndex = that.items()[index];\n            var listItem = $(item);\n\n            if (dataItem && itemAtIndex && dataItemAtIndex) {\n                that._removeElement(listItem);\n                that._insertElementAt(listItem, index);\n                that._updateToolbar();\n            }\n        },\n\n        remove: function(items) {\n            var that = this;\n            var listItems = that._getItems(items);\n            var itemsLength = listItems.length;\n            var i;\n\n            that._unbindDataSource();\n            that._unbindDataChange();\n            for (i = 0; i < itemsLength; i++) {\n                that._removeItem($(listItems[i]));\n            }\n            that._bindDataChange();\n            that._bindDataSource();\n            that._syncElement();\n            that._updateToolbar();\n            that._updateAllToolbars();\n        },\n\n        _removeItem: function(item) {\n            var that = this;\n            var dataSource = that.dataSource;\n            var dataItem = that.dataItem(item);\n            var transport = dataSource.transport;\n\n            if (!dataItem || !dataSource) {\n                return;\n            }\n            if (typeof dataItem === typeof \"\") {\n                var data = dataSource._data;\n                for (var i = 0; i < data.length; i++) {\n                    if (dataItem === data[i]) {\n                        data[i] = data[data.length - 1];\n                        data.pop();\n                        break;\n                    }\n                }\n            } else {\n                dataSource.remove(dataItem);\n                if (transport && (transport.destroy || (transport.options || {}).destroy) &&\n                    (!dataItem.isNew || !dataItem.isNew())) {\n                    dataSource._destroyed.push(dataItem);\n                }\n            }\n            that._removeElement(item);\n        },\n\n        _removeElement: function(item) {\n            kendo.destroy(item);\n            $(item).off().remove();\n        },\n\n        dataItem: function(element) {\n            var uniqueIdAttr = kendoAttr(UNIQUE_ID);\n            var uid = $(element).attr(uniqueIdAttr) || $(element).closest(\"[\" + uniqueIdAttr + \"]\").attr(uniqueIdAttr);\n            if (uid) {\n                return this.dataSource.getByUid(uid);\n            }\n            else {\n                return $(element).find(\".k-list-item-text\").html();\n            }\n        },\n\n        _dataItems: function(items) {\n            var dataItems = [];\n            var listItems = $(items);\n            var itemsLength = listItems.length;\n            var i;\n\n            for (i = 0; i < itemsLength; i++) {\n                dataItems.push(this.dataItem(listItems.eq(i)));\n            }\n\n            return dataItems;\n        },\n\n        items: function() {\n            var list = this._getList();\n            return list.children();\n        },\n\n        select: function(items) {\n            var that = this;\n            var selectable = that.selectable;\n            var enabledItems;\n\n            if (isUndefined(items)) {\n                return selectable.value();\n            }\n\n            enabledItems = that.items().filter(items).filter(ENABLED_ITEMS_SELECTOR);\n\n            if (!selectable.options.multiple) {\n                selectable.clear();\n                enabledItems = enabledItems.first();\n            }\n\n            return selectable.value(enabledItems);\n        },\n\n        clearSelection: function() {\n            var that = this;\n            var selectable = that.selectable;\n\n            if (selectable) {\n                selectable.clear();\n            }\n        },\n\n        enable: function(items, enable) {\n            var that = this;\n            var enabled = isUndefined(enable) ? true : !!enable;\n            var listItems = that._getItems(items);\n            var itemsLength = listItems.length;\n            var i;\n\n            for (i = 0; i < itemsLength; i++) {\n                that._enableItem($(listItems[i]), enabled);\n            }\n\n            that._updateAllToolbars();\n        },\n\n        _enableItem: function(item, enable) {\n            var that = this;\n            var dataItem = that.dataItem(item);\n\n            if (dataItem) {\n                if (enable) {\n                    $(item).removeClass(DISABLED_STATE_CLASS);\n                } else {\n                    $(item)\n                        .addClass(DISABLED_STATE_CLASS)\n                        .removeClass(SELECTED_STATE_CLASS);\n                }\n            }\n        },\n\n        setDataSource: function(dataSource) {\n            var that = this;\n\n            that.options.dataSource = dataSource;\n\n            that._dataSource();\n        },\n\n        _dataSource: function() {\n            var that = this;\n            var options = that.options;\n            var dataSource = options.dataSource || {};\n\n            dataSource = Array.isArray(dataSource) ? { data: dataSource } : dataSource;\n            dataSource.select = that.element;\n            dataSource.fields = [\n                { field: options.dataTextField },\n                { field: options.dataValueField }];\n\n            that._unbindDataSource();\n            that.dataSource = DataSource.create(dataSource);\n            that._bindDataSource();\n\n            if (that.options.autoBind) {\n                that.wrapper.attr(ARIA_BUSY, true);\n                that.dataSource.fetch();\n            }\n        },\n\n        _bindDataChange: function() {\n            var dataSource = this.dataSource;\n            if (dataSource._data && dataSource._changeHandler) {\n                dataSource._data.bind(CHANGE, dataSource._changeHandler);\n                dataSource._data.trigger(CHANGE);\n            }\n        },\n\n        _unbindDataChange: function() {\n            var dataSource = this.dataSource;\n            if (dataSource._data && dataSource._changeHandler) {\n                dataSource._data.unbind(CHANGE, dataSource._changeHandler);\n            }\n        },\n\n        _bindDataSource: function() {\n            var that = this;\n            var dataSource = that.dataSource;\n\n            that._dataChangeHandler = that.refresh.bind(that);\n\n            if (dataSource) {\n                dataSource.bind(CHANGE, that._dataChangeHandler);\n            }\n        },\n\n        _unbindDataSource: function() {\n            var that = this;\n            var dataSource = that.dataSource;\n\n            if (dataSource) {\n                dataSource.unbind(CHANGE, that._dataChangeHandler);\n            }\n        },\n\n        _wrapper: function() {\n            var that = this,\n                element = that.element,\n                wrapper = element.parent(\"div.k-listbox\");\n\n            if (!wrapper[0]) {\n                wrapper = element.wrap('<div class=\"k-listbox\" unselectable=\"on\" />').parent();\n                wrapper[0].style.cssText = element[0].style.cssText;\n                wrapper[0].title = element[0].title;\n                $('<div class=\"k-list-scroller\"><div class=\"k-list k-list-md\"><div class=\"k-list-content\"></div></div></div>').insertBefore(element);\n            }\n\n            that.wrapper = wrapper.addClass(element[0].className).css(\"display\", \"\");\n            that._innerWrapper = $(wrapper[0].firstChild);\n        },\n\n        _list: function() {\n            var that = this,\n                list = $(\"<ul class='\" + LIST_CLASS + \"' role='listbox'></ul>\"),\n                selectable = that.options.selectable,\n                selectableOptions = Selectable.parseOptions(selectable);\n\n            if (selectableOptions.multiple) {\n                list.attr(ARIA_MULTISELECTABLE, \"true\");\n            }\n\n            list.appendTo(that.wrapper.find(\".k-list-content\"));\n\n            if (that.options.navigatable) {\n                that._getList().attr(TABINDEX, that._getTabIndex());\n            }\n        },\n\n        _templates: function() {\n            var that = this;\n            var options = this.options;\n            var template;\n\n            if (options.template && typeof options.template == \"string\") {\n                template = kendo.template(options.template);\n            } else if (!options.template) {\n                template = kendo.template((data) => `${kendo.getter(options.dataTextField)(data)}`);\n            } else {\n                template = options.template;\n            }\n\n            that.templates = {\n                itemTemplate: kendo.template(({ item, r }) =>\n                    `<li class='k-list-item' role='option' aria-selected='false'><span class='k-list-item-text'>${r(item)}</span></li>`\n                ),\n                itemContent: template,\n                toolbar: `<div role='toolbar' class='${TOOLBAR_CLASS}'></div>`\n            };\n        },\n\n        refresh: function() {\n            var that = this;\n            var view = that.dataSource.view();\n            var template = that.templates.itemTemplate;\n            var html = \"\";\n\n            for (var idx = 0; idx < view.length; idx++) {\n                html += template({ item: view[idx], r: that.templates.itemContent });\n            }\n            that._getList().html(html);\n            that._setItemIds();\n            if (!that.toolbar) {\n                that._createToolbar();\n            }\n            that._syncElement();\n            that._updateToolbar();\n            that._updateAllToolbars();\n            that.trigger(DATABOUND);\n\n            that.wrapper.attr(ARIA_BUSY, false);\n        },\n\n        _syncElement: function() {\n            var options = \"\";\n            var view = this.dataSource.view();\n            for (var idx = 0; idx < view.length; idx++) {\n                options += this._option(view[idx][this.options.dataValueField] || view[idx], view[idx][this.options.dataTextField] || view[idx], true);\n            }\n            this.element.html(options);\n        },\n\n        _option: function(dataValue, dataText) {\n            var option = \"<option\";\n\n            if (dataValue !== undefined$1) {\n                dataValue += \"\";\n\n                if (dataValue.indexOf('\"') !== -1) {\n                    dataValue = dataValue.replace(/\"/g, \"&quot;\");\n                }\n\n                option += ' value=\"' + dataValue + '\"';\n            }\n            option += \" selected>\";\n\n            if (dataText !== undefined$1) {\n                option += kendo.htmlEncode(dataText);\n            }\n\n            return option += \"</option>\";\n        },\n\n        _setItemId: function(item, id) {\n            if (!item.length) {\n                return;\n            }\n\n            item.attr(kendoAttr(UNIQUE_ID), id).attr(ID, id);\n        },\n\n        _setItemIds: function() {\n            var that = this;\n            var items = that.items();\n            var view = that.dataSource.view();\n            var viewLength = view.length;\n            var i;\n\n            for (i = 0; i < viewLength; i++) {\n                that._setItemId(items.eq(i), view[i].uid);\n            }\n        },\n\n        _selectable: function() {\n            var that = this;\n            var selectable = that.options.selectable;\n            var selectableOptions = Selectable.parseOptions(selectable);\n\n            that.selectable = new Selectable(that._innerWrapper, {\n                aria: true,\n                selectedClass: \"k-selected\",\n                multiple: selectableOptions.multiple,\n                filter: ENABLED_ITEM_SELECTOR,\n                change: that._onSelect.bind(that)\n            });\n        },\n\n        _onSelect: function() {\n            var that = this;\n\n            that._updateToolbar();\n            that._updateAllToolbars();\n            that.trigger(CHANGE);\n        },\n\n        _destroySelectable: function() {\n            var that = this;\n\n            if (that.selectable && that.selectable.element) {\n                that.selectable.destroy();\n                that.selectable = null;\n            }\n        },\n\n        _getList: function() {\n            return this.wrapper.find(LIST_SELECTOR);\n        },\n\n        _getItems: function(items) {\n            return this.items().filter(items);\n        },\n\n        _createToolbar: function() {\n            var that = this;\n            var toolbarOptions = that.options.toolbar;\n            var position = toolbarOptions.position || RIGHT;\n            var tools = toolbarOptions.tools || [];\n            var messages = that.options.messages;\n\n            that._destroyToolbar();\n            that.wrapper.removeClass(TOOLBAR_POSITION_CLASS_NAMES.join(SPACE));\n\n            if (tools.length && tools.length > 0) {\n                var toolbarElement = $(that.templates.toolbar).insertBefore(that._innerWrapper);\n                that.toolbar = new ToolBar(toolbarElement, extend({}, toolbarOptions, { listBox: that, messages: messages }));\n                that.wrapper.addClass(TOOLBAR_CLASS + DASH + position);\n            }\n        },\n\n        _destroyToolbar: function() {\n            var that = this;\n\n            if (that.toolbar) {\n                that.toolbar.destroy();\n                that.toolbar = null;\n            }\n        },\n\n        _executeCommand: function(commandName) {\n            var that = this;\n            var command = CommandFactory.current.create(commandName, { listBox: that });\n\n            if (command) {\n                command.execute();\n                that._updateToolbar();\n                that._updateAllToolbars();\n            }\n        },\n\n        _updateToolbar: function() {\n            var toolbar = this.toolbar;\n\n            if (toolbar) {\n                toolbar._updateToolStates();\n            }\n        },\n\n        _updateAllToolbars: function() {\n            var listBoxElements = $(\"select[data-role='listbox']\");\n            var elementsLength = listBoxElements.length;\n            var listBox;\n            var i;\n\n            for (i = 0; i < elementsLength; i++) {\n                listBox = $(listBoxElements[i]).data(KENDO_LISTBOX);\n\n                if (listBox) {\n                    listBox._updateToolbar();\n                }\n            }\n        }\n    });\n\n    kendo.ui.plugin(ListBox);\n\n    var CommandFactory = Class.extend({\n        init: function() {\n            this._commands = [];\n        },\n\n        register: function(commandName, commandType) {\n            this._commands.push({\n                commandName: commandName,\n                commandType: commandType\n            });\n        },\n\n        create: function(commandName, options) {\n            var commands = this._commands;\n            var itemsLength = commands.length;\n            var name = commandName ? commandName.toLowerCase() : \"\";\n            var match;\n            var command;\n            var i;\n\n            for (i = 0; i < itemsLength; i++) {\n                command = commands[i];\n\n                if (command.commandName.toLowerCase() === name) {\n                    match = command;\n                    break;\n                }\n            }\n\n            if (match) {\n                return new match.commandType(options);\n            }\n        }\n    });\n    CommandFactory.current = new CommandFactory();\n\n    var ListBoxCommand = Class.extend({\n        init: function(options) {\n            var that = this;\n\n            that.options = extend({}, that.options, options);\n            that.listBox = that.options.listBox;\n        },\n\n        options: {\n            listBox: null\n        },\n\n        getItems: function() {\n            return $(this.listBox.select());\n        },\n\n        execute: noop,\n        canExecute: noop\n    });\n\n    var RemoveItemsCommand = ListBoxCommand.extend({\n        execute: function() {\n            var that = this;\n            var listBox = that.listBox;\n            var items = that.getItems();\n\n            if (!listBox.trigger(REMOVE, { dataItems: listBox._dataItems(items), items: items })) {\n                listBox.remove(items);\n            }\n        },\n\n        canExecute: function() {\n            return this.listBox.select().length > 0;\n        }\n    });\n    CommandFactory.current.register(REMOVE, RemoveItemsCommand);\n\n    var MoveItemsCommand = ListBoxCommand.extend({\n        execute: function() {\n            var that = this;\n\n            if (that.canExecute()) {\n                that.moveItems();\n            }\n        },\n\n        canExecute: noop,\n\n        moveItems: function() {\n            var that = this;\n            var listBox = that.listBox;\n            var options = that.options;\n            var items = that.getItems();\n            var offset = options.offset;\n            var indecesInDom = getSortedDomIndices(items);\n            var movedItems = $.makeArray([].sort.call(items,that.itemComparer));\n            var moveAction = options.moveAction;\n            var movedItem;\n\n            if (!listBox.trigger(REORDER, { dataItems: listBox._dataItems(movedItems), items: $(movedItems), offset: offset })) {\n                while (movedItems.length > 0 && indecesInDom.length > 0) {\n                    movedItem = movedItems[moveAction]();\n\n                    listBox.reorder(movedItem, indecesInDom[moveAction]() + offset);\n                }\n            }\n        },\n\n        options: {\n            offset: 0,\n            moveAction: \"pop\"\n        },\n\n        itemComparer: function(item1, item2) {\n            var indexItem1 = $(item1).index();\n            var indexItem2 = $(item2).index();\n\n            if (indexItem1 === indexItem2) {\n                return 0;\n            } else {\n                return (indexItem1 > indexItem2 ? 1 : (-1));\n            }\n        }\n    });\n\n    var MoveUpItemsCommand = MoveItemsCommand.extend({\n        options: {\n            offset: MOVE_UP_OFFSET,\n            moveAction: \"shift\"\n        },\n\n        canExecute: function() {\n            var items = this.getItems();\n            var domIndices = getSortedDomIndices(items);\n\n            return (domIndices.length > 0 && domIndices[0] > 0);\n        }\n    });\n    CommandFactory.current.register(MOVE_UP, MoveUpItemsCommand);\n\n    var MoveDownItemsCommand = MoveItemsCommand.extend({\n        options: {\n            offset: MOVE_DOWN_OFFSET,\n            moveAction: \"pop\"\n        },\n\n        canExecute: function() {\n            var that = this;\n            var items = that.getItems();\n            var domIndices = getSortedDomIndices(items);\n\n            return (domIndices.length > 0 && $(domIndices).last()[0] < (that.listBox.items().length - 1));\n        }\n    });\n    CommandFactory.current.register(MOVE_DOWN, MoveDownItemsCommand);\n\n    var TransferItemsCommand = ListBoxCommand.extend({\n        options: {\n            filter: ENABLED_ITEM_SELECTOR\n        },\n\n        execute: function() {\n            var that = this;\n            var sourceListBox = that.getSourceListBox();\n            var items = that.getItems().filter(that.options.filter);\n            var dataItems = sourceListBox ? sourceListBox._dataItems(items) : [];\n            var destinationListBox = that.getDestinationListBox();\n            var updatedSelection = that.getUpdatedSelection(items);\n\n            if (destinationListBox && items.length > 0) {\n                if (!destinationListBox.trigger(ADD, { dataItems: dataItems, items: items })) {\n                    destinationListBox.add(dataItems);\n                }\n\n                if (!sourceListBox.trigger(REMOVE, { dataItems: dataItems, items: items })) {\n                    sourceListBox.remove(items);\n                    that.updateSelection(updatedSelection);\n                }\n            }\n        },\n\n        getUpdatedSelection: function(items) {\n\n            if (items.length !== 1) {\n                return null;\n            }\n            var that = this;\n            var itemFilter = that.options.filter;\n            var sourceListBox = that.getSourceListBox();\n            var lastEnabledItem = sourceListBox ? sourceListBox.items().filter(itemFilter).last() : null;\n            var containsLastItem = $(items).filter(lastEnabledItem).length > 0;\n            var itemToSelect = containsLastItem ? $(items).prevAll(itemFilter)[0] : $(items).nextAll(itemFilter)[0];\n\n            if (itemToSelect) {\n                return itemToSelect;\n            } else {\n                return null;\n            }\n        },\n\n        updateSelection: function(item) {\n            var sourceListBox = this.getSourceListBox();\n\n            if (sourceListBox && item) {\n                sourceListBox.select($(item));\n                sourceListBox.selectable.trigger(CHANGE);\n                sourceListBox._scrollIntoView(item);\n            }\n        },\n\n        getSourceListBox: noop,\n        getDestinationListBox: noop\n    });\n\n    var TransferItemsToCommand = TransferItemsCommand.extend({\n        canExecute: function() {\n            var sourceListBox = this.getSourceListBox();\n\n            return (sourceListBox ? sourceListBox.select().length > 0 : false);\n        },\n\n        getSourceListBox: function() {\n            return this.listBox;\n        },\n\n        getDestinationListBox: function() {\n            var sourceListBox = this.getSourceListBox();\n            return sourceListBox && sourceListBox.options.connectWith ? $(HASH + sourceListBox.options.connectWith).data(KENDO_LISTBOX) : null;\n        },\n\n        getItems: function() {\n            var sourceListBox = this.getSourceListBox();\n            return sourceListBox ? $(sourceListBox.select()) : $();\n        }\n    });\n    CommandFactory.current.register(TRANSFER_TO, TransferItemsToCommand);\n\n    var TransferItemsFromCommand = TransferItemsCommand.extend({\n        canExecute: function() {\n            var sourceListBox = this.getSourceListBox();\n\n            return (sourceListBox ? sourceListBox.select().length > 0 : false);\n        },\n\n        getSourceListBox: function() {\n            var destinationListBox = this.getDestinationListBox();\n            return (destinationListBox && destinationListBox.options.connectWith) ? $(HASH + destinationListBox.options.connectWith).data(KENDO_LISTBOX) : null;\n        },\n\n        getDestinationListBox: function() {\n            return this.listBox;\n        },\n\n        getItems: function() {\n            var sourceListBox = this.getSourceListBox();\n            return sourceListBox ? $(sourceListBox.select()) : $();\n        }\n    });\n    CommandFactory.current.register(TRANSFER_FROM, TransferItemsFromCommand);\n\n    var TransferAllItemsToCommand = TransferItemsToCommand.extend({\n        canExecute: function() {\n            var sourceListBox = this.getSourceListBox();\n\n            return (sourceListBox ? sourceListBox.wrapper.find(ENABLED_ITEMS_SELECTOR).length > 0 : false);\n        },\n\n        getItems: function() {\n            var sourceListBox = this.getSourceListBox();\n            return sourceListBox ? sourceListBox.items() : $();\n        },\n\n        getUpdatedSelection: noop,\n        updateSelection: noop\n    });\n    CommandFactory.current.register(TRANSFER_ALL_TO, TransferAllItemsToCommand);\n\n    var TransferAllItemsFromCommand = TransferItemsFromCommand.extend({\n        canExecute: function() {\n            var sourceListBox = this.getSourceListBox();\n\n            return (sourceListBox ? sourceListBox.wrapper.find(ENABLED_ITEMS_SELECTOR).length > 0 : false);\n        },\n\n        getItems: function() {\n            var sourceListBox = this.getSourceListBox();\n            return sourceListBox ? sourceListBox.items() : $();\n        },\n\n        getUpdatedSelection: noop,\n        updateSelection: noop\n    });\n    CommandFactory.current.register(TRANSFER_ALL_FROM, TransferAllItemsFromCommand);\n\n    var ToolBar = Class.extend({\n        init: function(element, options) {\n            var that = this;\n\n            that.element = $(element).addClass(TOOLBAR_CLASS);\n            that.options = extend({}, that.options, options);\n            that.listBox = that.options.listBox;\n\n            that._initTemplates();\n            that._createTools();\n            that._updateToolStates();\n            that._attachEventHandlers();\n            that._aria();\n            that._tabindex();\n        },\n\n        destroy: function() {\n            var that = this;\n\n            that._detachEventHandlers();\n            kendo.destroy(that.element);\n            that.element.remove();\n            that.element = null;\n        },\n\n        options: {\n            position: RIGHT,\n            tools: []\n        },\n\n        _aria: function() {\n            var listEl = this.listBox._getList(),\n                listBoxLabelledby = listEl.attr(ARIA_LABELLEDBY),\n                listBoxLabel = listBoxLabelledby ? $(\"#\" + listBoxLabelledby).text() : listEl.attr(ARIA_LABEL),\n                listElId = listEl.attr(\"id\") || kendo.guid();\n\n            listEl.attr(\"id\", listElId);\n            this.element.attr(ARIA_CONTROLS, listElId);\n\n            if (listBoxLabel) {\n                this.element.attr(ARIA_LABEL, listBoxLabel + \" toolbar.\");\n            }\n        },\n\n        _attachEventHandlers: function() {\n            var that = this;\n\n            that.element\n                .on(CLICK, ENABLED_TOOL_SELECTOR, that._onToolClick.bind(that))\n                .on(KEYDOWN, that._keyDown.bind(that));\n        },\n        _createTools: function() {\n            var that = this;\n            var isRtl = kendo.support.isRtl(that.element);\n            var tools = that.options.tools;\n            var toolsLength = tools.length;\n            var toolsMessages = that.options.messages.tools;\n            var toolList = that.element;\n            var tool;\n            var i;\n\n            ToolBar.defaultTools = kendo.deepExtend({}, ToolBar.defaultTools, {\n                transferTo: {\n                    icon: isRtl ? CARET_ALT_LEFT : CARET_ALT_RIGHT\n                },\n                transferFrom: {\n                    icon: isRtl ? CARET_ALT_RIGHT : CARET_ALT_LEFT\n                },\n                transferAllTo: {\n                    icon: isRtl ? CARET_ALT_DOUBLE_LEFT : CARET_ALT_DOUBLE_RIGHT\n                },\n                transferAllFrom: {\n                    icon: isRtl ? CARET_ALT_DOUBLE_RIGHT : CARET_ALT_DOUBLE_LEFT\n                }\n            });\n\n            for (i = 0; i < toolsLength; i++) {\n                tool = extend({}, ToolBar.defaultTools[tools[i]], { text: toolsMessages[tools[i]] });\n\n                if (tool) {\n                    toolList.append($(that.templates.tool(tool)));\n                }\n            }\n\n            that.element.append(toolList);\n        },\n\n        _detachEventHandlers: function() {\n            this.element.off(NS).find(\"*\").off(NS);\n        },\n\n        _executeToolCommand: function(command) {\n            var that = this;\n            var listBox = that.listBox;\n\n            if (listBox) {\n                listBox._executeCommand(command);\n            }\n        },\n\n        _focusTool: function() {\n            this.element.find(TOOL_SELECTOR).not(\"[tabindex=-1]\").trigger(\"focus\");\n        },\n\n        _initTemplates: function() {\n            this.templates = {\n                tool: kendoTemplate( ({ icon, iconClass, command, text }) =>\n                    kendo.html.renderButton(`<button data-command='${command}' title='${text}' aria-label='${text}'></button>`, { icon, iconClass }))\n            };\n        },\n\n        _keyDown: function(e) {\n            var key = e.keyCode,\n                target = $(e.target),\n                targetTool = target.is(TOOL_SELECTOR) ? target : target.closest(\"li\");\n\n            if (key === kendo.keys.UP || key === kendo.keys.LEFT) {\n                e.preventDefault();\n                if (targetTool.prev().length) {\n                    this._tabindex(targetTool.prev());\n                }\n                this._focusTool();\n            } else if (key === kendo.keys.DOWN || key === kendo.keys.RIGHT) {\n                e.preventDefault();\n                if (targetTool.next()) {\n                    this._tabindex(targetTool.next());\n                }\n                this._focusTool();\n            }\n        },\n\n        _onToolClick: function(e) {\n            e.preventDefault();\n\n            var tool = $(e.currentTarget);\n            this._tabindex(tool);\n            this._executeToolCommand(tool.data(COMMAND));\n            this._focusTool();\n        },\n\n        _tabindex: function(candidate) {\n            var buttons = this.element.find(TOOL_SELECTOR),\n                focusable;\n\n            if (candidate && candidate.length) {\n                focusable = candidate;\n            } else {\n                focusable = buttons.first();\n            }\n\n            buttons.attr(TABINDEX, -1);\n            focusable.removeAttr(TABINDEX);\n        },\n\n        _updateToolStates: function() {\n            var that = this;\n            var tools = that.options.tools;\n            var toolsLength = tools.length;\n            var i;\n            var focusable = that.element.find(TOOL_SELECTOR).not(\"[tabindex=-1]\");\n\n            for (i = 0; i < toolsLength; i++) {\n                that._updateToolState(tools[i]);\n            }\n\n            that._tabindex(focusable);\n        },\n\n        _updateToolState: function(toolName) {\n            var that = this;\n            var command = CommandFactory.current.create(toolName, { listBox: that.listBox });\n            var tool = that.element.find(\"[data-command='\" + toolName + \"']\");\n            var toolElement = tool[0];\n\n            if (toolElement && command && command.canExecute) {\n                if (command.canExecute()) {\n                    tool.removeClass(DISABLED_STATE_CLASS).removeAttr(TABINDEX);\n                } else {\n                    tool.addClass(DISABLED_STATE_CLASS).attr(TABINDEX, \"-1\");\n                }\n            }\n        }\n    });\n\n    ToolBar.defaultTools = {\n        remove: {\n            command: REMOVE,\n            icon: \"x\"\n        },\n        moveUp: {\n            command: MOVE_UP,\n            icon: \"caret-alt-up\"\n        },\n        moveDown: {\n            command: MOVE_DOWN,\n            icon: \"caret-alt-down\"\n        },\n        transferTo: {\n            command: TRANSFER_TO,\n            icon: CARET_ALT_RIGHT\n        },\n        transferFrom: {\n            command: TRANSFER_FROM,\n            icon: CARET_ALT_LEFT\n        },\n        transferAllTo: {\n            command: TRANSFER_ALL_TO,\n            icon: CARET_ALT_DOUBLE_RIGHT\n        },\n        transferAllFrom: {\n            command: TRANSFER_ALL_FROM,\n            icon: CARET_ALT_DOUBLE_LEFT\n        }\n    };\n\n    extend(ListBox, {\n        ToolBar: ToolBar\n    });\n\n    function isInputElement(element) {\n        return $(element).is(\":button,a,:input,a>.k-icon,a>.k-svg-icon,textarea,span.k-select,span.k-icon,span.k-svg-icon,span.k-link,label.k-checkbox-label,.k-input,.k-multiselect-wrap,.k-picker-wrap,.k-picker-wrap>.k-selected-color,.k-tool-icon,.k-dropdownlist\");\n    }\n\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.listbox.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.listview.js":
/*!**********************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.listview.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _kendo_editable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.editable.js */ \"./node_modules/kendo-ui-core/esm/kendo.editable.js\");\n/* harmony import */ var _kendo_selectable_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.selectable.js */ \"./node_modules/kendo-ui-core/esm/kendo.selectable.js\");\n/* harmony import */ var _kendo_pager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kendo.pager.js */ \"./node_modules/kendo-ui-core/esm/kendo.pager.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\n\n// The current file development is no longer in active phase but the code will be kept as is.\n\nvar __meta__ = {\n    id: \"listview\",\n    name: \"ListView\",\n    category: \"web\",\n    description: \"The ListView widget offers rich support for interacting with data.\",\n    depends: [ \"data\" ],\n    features: [ {\n        id: \"listview-editing\",\n        name: \"Editing\",\n        description: \"Support for record editing\",\n        depends: [ \"editable\" ]\n    }, {\n        id: \"listview-selection\",\n        name: \"Selection\",\n        description: \"Support for selection\",\n        depends: [ \"selectable\" ]\n    }, {\n        id: \"listview-paging\",\n        name: \"Paging\",\n        description: \"Support for paging\",\n        depends: [ \"pager\" ]\n    } ]\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        CHANGE = \"change\",\n        KENDO_KEYDOWN = \"kendoKeydown\",\n        CANCEL = \"cancel\",\n        DATABOUND = \"dataBound\",\n        DATABINDING = \"dataBinding\",\n        Widget = kendo.ui.Widget,\n        keys = kendo.keys,\n        EMPTY_STRING = \"\",\n        EMPTY_STRING_TEMPLATE = () => EMPTY_STRING,\n        DOT = \".\",\n        FOCUSSELECTOR = \"> *:not(.k-loading-mask)\",\n        PROGRESS = \"progress\",\n        ERROR = \"error\",\n        FOCUSED = \"k-focus\",\n        SELECTED = \"k-selected\",\n        KEDITITEM = \"k-edit-item\",\n        PAGER_CLASS = \"k-listview-pager\",\n        ITEM_CLASS = \"k-listview-item\",\n        ARIA_SETSIZE = \"aria-setsize\",\n        ARIA_POSINSET = \"aria-posinset\",\n        ARIA_ROLE = \"role\",\n        ARIA_LABEL = \"aria-label\",\n        ARIA_MULTISELECTABLE = \"aria-multiselectable\",\n        ARIA_ACTIVEDESCENDANT = \"aria-activedescendant\",\n        EDIT = \"edit\",\n        REMOVE = \"remove\",\n        SAVE = \"save\",\n        MOUSEDOWN = \"mousedown\",\n        CLICK = \"click\",\n        TOUCHSTART = \"touchstart\",\n        NS = \".kendoListView\",\n        activeElement = kendo._activeElement,\n        progress = kendo.ui.progress,\n        DataSource = kendo.data.DataSource;\n\n    var ListView = kendo.ui.DataBoundWidget.extend( {\n        init: function(element, options) {\n            var that = this;\n\n            options = Array.isArray(options) ? { dataSource: options } : options;\n\n            Widget.fn.init.call(that, element, options);\n\n            options = that.options;\n\n            that.wrapper = element = that.element;\n\n            if (element[0].id) {\n                that._itemId = element[0].id + \"_lv_active\";\n            } else {\n                that._itemId = kendo.guid() + \"_lv_active\";\n            }\n\n            that._element();\n\n            that._layout();\n\n            that._dataSource();\n\n            that._setContentHeight();\n\n            that._templates();\n\n            that._navigatable();\n\n            that._selectable();\n\n            that._pageable();\n\n            that._crudHandlers();\n\n            that._scrollable();\n\n            if (that.options.autoBind) {\n                that.dataSource.fetch();\n            }\n\n            kendo.notify(that);\n        },\n\n        events: [\n            CHANGE,\n            CANCEL,\n            DATABINDING,\n            DATABOUND,\n            EDIT,\n            REMOVE,\n            SAVE,\n            KENDO_KEYDOWN\n        ],\n\n        options: {\n            name: \"ListView\",\n            ariaLabel: null,\n            autoBind: true,\n            selectable: false,\n            navigatable: false,\n            pageable: false,\n            height: null,\n            template: EMPTY_STRING_TEMPLATE,\n            altTemplate: null,\n            editTemplate: null,\n            contentTemplate: () => \"<div data-content='true' />\",\n            contentElement: \"div\",\n            bordered: true,\n            borders: \"\",\n            layout: \"\",\n            flex: {\n                direction: \"row\",\n                wrap: \"nowrap\"\n            },\n            grid: {},\n            scrollable: false\n        },\n\n        setOptions: function(options) {\n            Widget.fn.setOptions.call(this, options);\n\n            this._layout();\n\n            this._templates();\n\n            if (this.selectable) {\n                this.selectable.destroy();\n                this.selectable = null;\n            }\n\n            this._selectable();\n        },\n\n        _templates: function() {\n            var options = this.options;\n\n            this.template = kendo.template(options.template || EMPTY_STRING_TEMPLATE);\n            this.altTemplate = kendo.template(options.altTemplate || options.template || EMPTY_STRING_TEMPLATE);\n            this.editTemplate = kendo.template(options.editTemplate || EMPTY_STRING_TEMPLATE);\n        },\n\n        _item: function(action) {\n            return this.content.children()[action]();\n        },\n\n        items: function() {\n            return this.content.children(\":not(.k-loading-mask)\");\n        },\n\n        dataItem: function(element) {\n            var attr = kendo.attr(\"uid\");\n            var uid = $(element).closest(\"[\" + attr + \"]\").attr(attr);\n\n            return this.dataSource.getByUid(uid);\n        },\n\n        setDataSource: function(dataSource) {\n            this.options.dataSource = dataSource;\n            this._dataSource();\n\n            if (this.options.autoBind) {\n                dataSource.fetch();\n            }\n\n            if (this.options.scrollable === \"endless\") {\n                this._bindScrollable();\n            }\n        },\n\n        _unbindDataSource: function() {\n            var that = this;\n\n            that.dataSource.unbind(CHANGE, that._refreshHandler)\n                            .unbind(PROGRESS, that._progressHandler)\n                            .unbind(ERROR, that._errorHandler);\n        },\n\n        _dataSource: function() {\n            var that = this,\n                pageable = that.options.pageable,\n                dataSource = that.options.dataSource;\n\n            if ($.isPlainObject(pageable) && pageable.pageSize !== undefined$1) {\n                dataSource.pageSize = pageable.pageSize;\n            }\n\n            if (that.dataSource && that._refreshHandler) {\n                that._unbindDataSource();\n            } else {\n                that._refreshHandler = that.refresh.bind(that);\n                that._progressHandler = that._progress.bind(that);\n                that._errorHandler = that._error.bind(that);\n            }\n\n            that.dataSource = DataSource.create(dataSource)\n                                .bind(CHANGE, that._refreshHandler)\n                                .bind(PROGRESS, that._progressHandler)\n                                .bind(ERROR, that._errorHandler);\n        },\n\n        _progress: function(toggle) {\n            var element = this.wrapper;\n            if (toggle && this.content.height()) {\n                element = this.content;\n            }\n            progress(element, toggle, { opacity: true });\n        },\n\n        _error: function() {\n            progress(this.content, false);\n        },\n\n        _element: function() {\n            var options = this.options;\n            var height = options.height;\n\n            this.element.addClass(\"k-listview\");\n\n\n            if (options.contentElement) {\n                this.content = $(document.createElement(options.contentElement)).appendTo(this.element);\n            } else {\n                this.content = this.element;\n            }\n\n            if (height) {\n                this.element.css(\"height\", height);\n            }\n        },\n\n        _layout: function() {\n            var that = this;\n            var options = that.options;\n            var flex = options.flex;\n            var grid = options.grid;\n            var element = that.element;\n            var elementClassNames = [\"k-listview\"];\n            var content = that.content;\n            var contentClassNames = [\"k-listview-content\"];\n\n            element.add(content).removeClass(function(index, className) {\n                if (className.indexOf(\"k-\") >= 0) {\n                    return true;\n                }\n            });\n\n            // Element class names\n            if (options.bordered === true) {\n                elementClassNames.push(\"k-listview-bordered\");\n            }\n\n            if (typeof options.borders === \"string\" && options.borders !== EMPTY_STRING) {\n                elementClassNames.push(\"k-listview-borders-\" + options.borders);\n            }\n\n\n            // Content class names\n            if (typeof options.contentPadding === \"string\" && options.contentPadding !== EMPTY_STRING) {\n                contentClassNames.push(\"k-listview-content-padding-\" + options.contentPadding);\n            }\n\n            if (typeof options.layout === \"string\" && options.layout !== EMPTY_STRING) {\n                contentClassNames.push(\"k-d-\" + options.layout);\n            }\n\n            if (options.layout === \"flex\" && typeof flex === \"object\") {\n                if (typeof flex.direction === \"string\" && flex.direction !== \"\") {\n                    contentClassNames.push(\"k-flex-\" + flex.direction);\n                }\n\n                if (typeof flex.wrap === \"string\" && flex.wrap !== \"\") {\n                    contentClassNames.push(\"k-flex-\" + flex.wrap);\n                }\n            }\n\n            if (options.layout === \"grid\" && typeof grid === \"object\") {\n                if (typeof grid.cols === \"number\") {\n                    content.css(\"grid-template-columns\", \"repeat(\" + grid.cols + \", 1fr)\");\n                } else if (typeof grid.cols === \"string\") {\n                    content.css(\"grid-template-columns\", grid.cols);\n                }\n\n                if (typeof grid.rows === \"number\") {\n                    content.css(\"grid-template-rows\", \"repeat(\" + grid.rows + \", \" + (grid.rowHeight !== undefined$1 ? grid.rowHeight : \"1fr\") + \")\");\n                } else if (typeof grid.rows === \"string\") {\n                    content.css(\"grid-template-rows\", grid.rows);\n                }\n\n                if (typeof grid.gutter === \"number\") {\n                    content.css(\"grid-gap\", grid.gutter);\n                } else if (typeof grid.gutter === \"string\") {\n                    content.css(\"grid-gap\", grid.gutter);\n                }\n            }\n\n            that.element.addClass(elementClassNames.join(\" \"));\n            that.content.addClass(contentClassNames.join(\" \"));\n\n        },\n\n        _setContentHeight: function() {\n            var that = this,\n                options = that.options,\n                height;\n\n            if (options.scrollable && that.wrapper.is(\":visible\")) {\n\n                height = that.wrapper.innerHeight();\n                that.content.height(height);\n            }\n        },\n\n        refresh: function(e) {\n            var that = this,\n                view = that.dataSource.view(),\n                data,\n                items,\n                item,\n                html = \"\",\n                idx,\n                length,\n                template = that.template,\n                altTemplate = that.altTemplate,\n                options = that.options,\n                role = options.selectable ? \"option\" : \"listitem\",\n                active = activeElement(),\n                endlessAppend = that._endlessFetchInProgress,\n                index = endlessAppend ? that._skipRerenderItemsCount : 0,\n                scrollable = that.options.scrollable;\n\n            e = e || {};\n\n            if (e.action === \"itemchange\") {\n                if (!that._hasBindingTarget() && !that.editable) {\n                    data = e.items[0];\n                    item = that.items().filter(\"[\" + kendo.attr(\"uid\") + \"=\" + data.uid + \"]\");\n\n                    if (item.length > 0) {\n                        idx = item.index();\n\n                        item.replaceWith(template(data));\n                        item = that.items().eq(idx);\n                        item.attr(kendo.attr(\"uid\"), data.uid);\n\n                        that.trigger(\"itemChange\", {\n                            item: item,\n                            data: data\n                        });\n                    }\n                }\n\n                return;\n            }\n\n            if (that.trigger(DATABINDING, { action: e.action || \"rebind\", items: e.items, index: e.index })) {\n                return;\n            }\n\n            if (!endlessAppend) {\n                that._destroyEditable();\n            }\n\n            for (idx = index, length = view.length; idx < length; idx++) {\n                if (idx % 2) {\n                    html += altTemplate(view[idx]);\n                } else {\n                    html += template(view[idx]);\n                }\n            }\n\n            if (endlessAppend) {\n                that.content.append(html);\n            } else {\n                that.content.html(html);\n            }\n\n            items = that.items().not(\".k-loading-mask\");\n\n            that._ariaAttributes(view.length);\n\n            for (idx = index, length = view.length; idx < length; idx++) {\n                item = items.eq(idx);\n\n                item.addClass(ITEM_CLASS);\n\n                item.attr(kendo.attr(\"uid\"), view[idx].uid)\n                    .attr(ARIA_ROLE, role);\n\n                if (that.options.selectable) {\n                    item.attr(\"aria-selected\", \"false\");\n                }\n\n                if (that.options.pageable) {\n                    item.attr(ARIA_SETSIZE, that.dataSource.total());\n                    item.attr(ARIA_POSINSET, that.dataSource.indexOf(that.dataItem(item)) + 1);\n                }\n            }\n\n            if (that.content[0] === active && that.options.navigatable) {\n                if (that._focusNext) {\n                    that.current(that.current().next());\n                } else {\n                    if (!scrollable) {\n                        that.current(items.eq(0));\n                    }\n                }\n            }\n\n            if (that.element.attr(ARIA_ACTIVEDESCENDANT) &&\n                that.element.find(\"#\" + that.element.attr(ARIA_ACTIVEDESCENDANT)).length === 0) {\n                    that.element.removeAttr(ARIA_ACTIVEDESCENDANT);\n            }\n\n            that._setContentHeight();\n\n            that._progress(false);\n            that._endlessFetchInProgress = null;\n\n            that.trigger(DATABOUND, { action: e.action || \"rebind\", items: e.items, index: e.index });\n        },\n\n        _ariaAttributes: function(length) {\n            var content = this.content,\n                options = this.options,\n                selectable = options.selectable;\n\n            this._ariaLabelValue = this._ariaLabelValue || this.options.ariaLabel;\n\n            if (length === 0) {\n                content.removeAttr(ARIA_ROLE);\n                content.removeAttr(ARIA_MULTISELECTABLE);\n\n                if (content.attr(ARIA_LABEL)) {\n                    this._ariaLabelValue = content.attr(ARIA_LABEL);\n                    content.removeAttr(ARIA_LABEL);\n                }\n            } else {\n                content.attr(ARIA_ROLE, selectable ? \"listbox\" : \"list\");\n\n                if (selectable && kendo.ui.Selectable.parseOptions(selectable).multiple) {\n                    content.attr(ARIA_MULTISELECTABLE, true);\n                }\n\n                if (this._ariaLabelValue) {\n                    content.attr(ARIA_LABEL, this._ariaLabelValue);\n                }\n            }\n        },\n\n        _pageable: function() {\n            var that = this,\n                pageable = that.options.pageable,\n                navigatable = that.options.navigatable,\n                pagerWrap,\n                settings;\n\n            if (!pageable) {\n                return;\n            }\n\n            pagerWrap = that.wrapper.find(DOT + PAGER_CLASS);\n\n            if (!pagerWrap.length) {\n                pagerWrap = $('<div />').addClass(PAGER_CLASS);\n            }\n\n            if (pageable.position === \"top\") {\n                pagerWrap\n                    .addClass(kendo.format(\"{0}-{1}\", PAGER_CLASS, pageable.position))\n                    .prependTo(that.wrapper);\n            } else {\n                pagerWrap.appendTo(that.wrapper);\n            }\n\n            if (that.pager) {\n                that.pager.destroy();\n            }\n\n            if (typeof pageable === \"object\" && pageable instanceof kendo.ui.Pager) {\n                that.pager = pageable;\n            } else {\n                pagerWrap = pageable.pagerId ? $(\"#\" + pageable.pagerId) : pagerWrap;\n\n                settings = $.extend({}, pageable, {\n                    dataSource: that.dataSource,\n                    navigatable: navigatable,\n                    pagerId: null\n                });\n\n                that.pager = new kendo.ui.Pager(pagerWrap, settings);\n            }\n        },\n\n        _selectable: function() {\n            var that = this,\n                multi,\n                current,\n                selectable = that.options.selectable,\n                navigatable = that.options.navigatable;\n\n            if (selectable) {\n                multi = kendo.ui.Selectable.parseOptions(selectable).multiple;\n\n                that.selectable = new kendo.ui.Selectable(that.element, {\n                    aria: true,\n                    multiple: multi,\n                    filter: that.options.contentElement ? \".k-listview-content \" + FOCUSSELECTOR : FOCUSSELECTOR,\n                    change: function() {\n                        that.trigger(CHANGE);\n                    }\n                });\n\n                if (navigatable) {\n                    that.element.on(\"keydown\" + NS, function(e) {\n\n                        if (!$(e.target).is(that.element)) { return; }\n\n                        if (e.keyCode === keys.SPACEBAR) {\n                            current = that.current();\n\n                            if (e.target == e.currentTarget) {\n                                e.preventDefault();\n                            }\n\n                            if (multi) {\n                                if (!e.ctrlKey) {\n                                    that.selectable.clear();\n                                } else {\n                                    if (current && current.hasClass(SELECTED)) {\n                                        current.removeClass(SELECTED);\n                                        that.trigger(CHANGE);\n                                        return;\n                                    }\n                                }\n                            } else {\n                                that.selectable.clear();\n                            }\n\n                            that.selectable.value(current);\n                            that.trigger(CHANGE);\n                        }\n                    });\n                }\n            }\n        },\n\n        _scrollable: function() {\n            var that = this;\n            var scrollable = that.options.scrollable;\n\n            if (scrollable) {\n\n                that.content.css({\n                    \"overflow-y\": \"scroll\",\n                    \"position\": \"relative\",\n                    \"-webkit-overflow-scrolling\": \"touch\"\n                });\n\n                if (scrollable === \"endless\") {\n                    that._bindScrollable();\n                }\n            }\n        },\n\n        _bindScrollable: function() {\n            var that = this;\n            var originalPageSize = that._endlessPageSize = that.dataSource.options.pageSize;\n\n            that.content\n                .off(\"scroll\" + NS)\n                .on(\"scroll\" + NS, function() {\n                    if (this.scrollTop + this.clientHeight - this.scrollHeight >= -15 &&\n                    !that._endlessFetchInProgress &&\n                    that._endlessPageSize < that.dataSource.total()) {\n                        that._skipRerenderItemsCount = that._endlessPageSize;\n                        that._endlessPageSize = that._skipRerenderItemsCount + originalPageSize;\n                        that.dataSource.options.endless = true;\n                        that._endlessFetchInProgress = true;\n                        that.dataSource.pageSize(that._endlessPageSize);\n                    }\n                });\n        },\n\n        current: function(candidate) {\n            var that = this,\n                element = that.element,\n                current = that._current,\n                id = that._itemId;\n\n            if (candidate === undefined$1) {\n                return current;\n            }\n\n            if (current && current[0]) {\n                if (current[0].id === id) {\n                    current.removeAttr(\"id\");\n                }\n\n                current.removeClass(FOCUSED);\n                element.removeAttr(ARIA_ACTIVEDESCENDANT);\n            }\n\n            if (candidate && candidate[0]) {\n                id = candidate[0].id || id;\n\n                that._scrollTo(candidate[0]);\n\n                element.attr(ARIA_ACTIVEDESCENDANT, id);\n                candidate.addClass(FOCUSED).attr(\"id\", id);\n            }\n\n            that._current = candidate;\n        },\n\n        _scrollTo: function(element) {\n            var that = this,\n                content = that.content,\n                container,\n                UseJQueryoffset = false,\n                SCROLL = \"scroll\";\n\n            if (content.css(\"overflow\") === \"auto\" || content.css(\"overflow\") === SCROLL || content.css(\"overflow-y\") === SCROLL) {\n                container = content[0];\n            } else {\n                container = window;\n                UseJQueryoffset = true;\n            }\n\n            var scrollDirectionFunc = function(direction, dimension) {\n\n                var elementOffset = UseJQueryoffset ? $(element).offset()[direction.toLowerCase()] : element[\"offset\" + direction],\n                    elementDimension = element[\"client\" + dimension],\n                    containerScrollAmount = $(container)[SCROLL + direction](),\n                    containerDimension = $(container)[dimension.toLowerCase()]();\n\n                if (elementOffset + elementDimension > containerScrollAmount + containerDimension) {\n                    $(container)[SCROLL + direction](elementOffset + elementDimension - containerDimension);\n                } else if (elementOffset < containerScrollAmount) {\n                    $(container)[SCROLL + direction](elementOffset);\n                }\n            };\n\n            scrollDirectionFunc(\"Top\", \"Height\");\n            scrollDirectionFunc(\"Left\", \"Width\");\n        },\n\n        _navigatable: function() {\n            var that = this,\n                navigatable = that.options.navigatable,\n                element = that.element,\n                content = that.content,\n                clickCallback = function(e) {\n                    that.current($(e.currentTarget));\n                    if (!$(e.target).is(\":button, a, :input, a > .k-icon, a > k-svg-icon, textarea\")) {\n                        kendo.focusElement(element);\n                    }\n                };\n\n            if (navigatable) {\n                that._tabindex();\n\n                element\n                    .on(\"focus\" + NS, function() {\n                        var current = that._current;\n\n                        if (!current || !current.is(\":visible\")) {\n                            current = that._item(\"first\");\n                        }\n\n                        that.current(current);\n                    })\n                    .on(\"focusout\" + NS, function() {\n                        if (that._current) {\n                            that._current.removeClass(FOCUSED);\n                        }\n                    })\n                    .on(\"keydown\" + NS, that, function(e) {\n                        var key = e.keyCode,\n                            current = that.current(),\n                            target = $(e.target),\n                            canHandle = !target.is(\":button, textarea, a, a > .t-icon, input\"),\n                            isTextBox = target.is(\":text, :password\"),\n                            preventDefault = kendo.preventDefault,\n                            editItem = content.find(\".\" + KEDITITEM),\n                            active = activeElement(), idx,\n                            scrollable = that.options.scrollable;\n\n                        if (target.hasClass(PAGER_CLASS) || (!canHandle && !isTextBox && key !== keys.ESC) || (isTextBox && key !== keys.ESC && key !== keys.ENTER)) {\n                            return;\n                        }\n\n                        if (key === keys.UP || key === keys.LEFT) {\n                            if (current && current[0]) {\n                                current = current.prev();\n                            }\n\n                            if (current && current[0]) {\n                                that.current(current);\n                            }\n                            else if (!scrollable) {\n                                that.current(that._item(\"last\"));\n                            }\n                            preventDefault(e);\n                        }\n\n                        if (key === keys.DOWN || key === keys.RIGHT) {\n                            if (scrollable) {\n                                if (that.options.scrollable === \"endless\" && !current.next().length) {\n                                    that.content[0].scrollTop = that.content[0].scrollHeight;\n                                    that._focusNext = true;\n                                } else {\n                                    current = current.next();\n\n                                    if (current && current[0]) {\n                                        that.current(current);\n                                    }\n                                }\n                            }\n                            else {\n                                current = current.next();\n                                that.current(!current || !current[0] ? that._item(\"first\") : current);\n                            }\n                            preventDefault(e);\n                        }\n\n                        if (key === keys.PAGEUP) {\n                            that.current(null);\n                            that.dataSource.page(that.dataSource.page() - 1);\n                            preventDefault(e);\n                        }\n\n                        if (key === keys.PAGEDOWN) {\n                            that.current(null);\n                            that.dataSource.page(that.dataSource.page() + 1);\n                            preventDefault(e);\n                        }\n\n                        if (key === keys.HOME) {\n                            that.current(that._item(\"first\"));\n                            preventDefault(e);\n                        }\n\n                        if (key === keys.END) {\n                            that.current(that._item(\"last\"));\n                            preventDefault(e);\n                        }\n\n                        if (key === keys.ENTER) {\n                            if (editItem.length !== 0 && (canHandle || isTextBox)) {\n                                idx = that.items().index(editItem);\n\n                                if (active) {\n                                    active.blur();\n                                }\n\n                                that.save();\n\n                                var focusAgain = function() {\n                                    that.element.trigger(\"focus\");\n                                    that.current(that.items().eq(idx));\n                                };\n\n                                that.one(\"dataBound\", focusAgain);\n                            } else if (that.options.editTemplate) {\n                                that.edit(current);\n                            }\n                        }\n\n                        if (key === keys.ESC) {\n                            editItem = content.find(\".\" + KEDITITEM);\n\n                            if (editItem.length === 0) {\n                                return;\n                            }\n\n                            idx = that.items().index(editItem);\n                            that.cancel();\n                            that.element.trigger(\"focus\");\n                            that.current(that.items().eq(idx));\n                        }\n                    });\n\n                element.on(MOUSEDOWN + NS + \" \" + TOUCHSTART + NS, that.options.contentElement ? \".k-listview-content \" + FOCUSSELECTOR : FOCUSSELECTOR, clickCallback.bind(that));\n            }\n        },\n\n        clearSelection: function() {\n            var that = this;\n            that.selectable.clear();\n        },\n\n        select: function(items) {\n            var that = this,\n                selectable = that.selectable;\n\n            items = $(items);\n\n            if (items.length) {\n                if (!selectable.options.multiple) {\n                    selectable.clear();\n                    items = items.first();\n                }\n                selectable.value(items);\n                return;\n            }\n\n            return selectable.value();\n        },\n\n        _destroyEditable: function() {\n            var that = this;\n            if (that.editable) {\n                that.editable.destroy();\n                delete that.editable;\n            }\n        },\n\n        _modelFromElement: function(element) {\n            var uid = element.attr(kendo.attr(\"uid\"));\n\n            return this.dataSource.getByUid(uid);\n        },\n\n        _closeEditable: function() {\n            var that = this,\n                editable = that.editable,\n                options = that.options,\n                role = options.selectable ? \"option\" : \"listitem\",\n                data,\n                item,\n                index,\n                template = that.template;\n\n            if (editable) {\n                if (editable.element.index() % 2) {\n                    template = that.altTemplate;\n                }\n\n                data = that._modelFromElement(editable.element);\n                that._destroyEditable();\n\n                index = editable.element.index();\n                editable.element.replaceWith(template(data));\n                item = that.items().eq(index);\n                item.addClass(ITEM_CLASS);\n                item.attr(kendo.attr(\"uid\"), data.uid);\n                item.attr(ARIA_ROLE, role);\n\n                if (that._hasBindingTarget()) {\n                    kendo.bind(item, data);\n                }\n            }\n            return true;\n        },\n\n        edit: function(item) {\n            var that = this,\n                data = that._modelFromElement(item),\n                container,\n                uid = data.uid,\n                index;\n\n            that.cancel();\n\n            item = that.items().filter(\"[\" + kendo.attr(\"uid\") + \"=\" + uid + \"]\");\n            index = item.index();\n            item.replaceWith(that.editTemplate(data));\n            container = that.items().eq(index).addClass(KEDITITEM).attr(kendo.attr(\"uid\"), data.uid);\n            that.editable = container.kendoEditable({\n                model: data,\n                clearContainer: false,\n                errorTemplate: false,\n                target: that\n            }).data(\"kendoEditable\");\n\n            that.trigger(EDIT, { model: data, item: container });\n        },\n\n        save: function() {\n            var that = this,\n                editable = that.editable,\n                model;\n\n            if (!editable) {\n                return;\n            }\n\n            var container = editable.element;\n            model = that._modelFromElement(container);\n\n            if (editable.end() && !that.trigger(SAVE, { model: model, item: container })) {\n                that._closeEditable();\n                that.dataSource.sync();\n            }\n        },\n\n        remove: function(item) {\n            var that = this,\n                dataSource = that.dataSource,\n                data = that._modelFromElement(item);\n\n            if (that.editable) {\n                dataSource.cancelChanges(that._modelFromElement(that.editable.element));\n                that._closeEditable();\n            }\n\n            if (!that.trigger(REMOVE, { model: data, item: item })) {\n                if (item.attr(\"id\") === that.element.attr(ARIA_ACTIVEDESCENDANT)) {\n                    that.element.removeAttr(ARIA_ACTIVEDESCENDANT);\n                }\n\n                item.hide();\n                dataSource.remove(data);\n                dataSource.sync();\n            }\n        },\n\n        add: function() {\n            var that = this,\n                dataItem,\n                dataSource = that.dataSource,\n                index = dataSource.indexOf((dataSource.view() || [])[0]);\n\n            if (index < 0) {\n                index = 0;\n            }\n\n            that.cancel();\n            dataItem = dataSource.insert(index, {});\n            that.edit(that.element.find(\"[data-uid='\" + dataItem.uid + \"']\"));\n        },\n\n        cancel: function() {\n            var that = this,\n                dataSource = that.dataSource;\n\n            if (that.editable) {\n                var container = that.editable.element;\n                var model = that._modelFromElement(container);\n\n                if (!that.trigger(CANCEL, { model: model, container: container })) {\n                    dataSource.cancelChanges(model);\n                    that._closeEditable();\n                }\n            }\n        },\n\n        _crudHandlers: function() {\n            var that = this,\n                touchstartNs = TOUCHSTART + NS,\n                clickNs = CLICK + NS;\n\n            that.content.on(touchstartNs + \" \" + clickNs, \".k-edit-button\", function(e) {\n                e.preventDefault();\n                var item = $(this).closest(\"[\" + kendo.attr(\"uid\") + \"]\");\n                setTimeout(function() {\n                    that.edit(item);\n                });\n            });\n\n\n            that.content.on(touchstartNs + \" \" + clickNs, \".k-delete-button\", function(e) {\n                e.preventDefault();\n                var item = $(this).closest(\"[\" + kendo.attr(\"uid\") + \"]\");\n                 setTimeout(function() {\n                    that.remove(item);\n                 });\n            });\n\n            that.content.on(clickNs, \".k-update-button\", function(e) {\n                that.save();\n                e.preventDefault();\n            });\n\n            that.content.on(clickNs, \".k-cancel-button\", function(e) {\n                that.cancel();\n                e.preventDefault();\n            });\n        },\n\n        destroy: function() {\n            var that = this;\n\n            Widget.fn.destroy.call(that);\n\n            that._unbindDataSource();\n\n            that._destroyEditable();\n\n            that.element.off(NS);\n            that.content.off(NS);\n\n            that._endlessFetchInProgress = that._endlessPageSize = that._skipRerenderItemsCount = that._focusNext = null;\n\n            if (that.pager) {\n                that.pager.destroy();\n            }\n\n            kendo.destroy(that.element);\n        }\n    });\n\n    kendo.ui.plugin(ListView);\n})(__webpack_provided_window_dot_kendo.jQuery);\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.listview.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.loader.js":
/*!********************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.loader.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\nvar __meta__ = {\n    id: \"loader\",\n    name: \"Loader\",\n    category: \"web\",\n    description: \"The Loader is a visual indicator of loading data across different parts of the page.\",\n    depends: [\"core\"]\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        Widget = kendo.ui.Widget,\n        ui = kendo.ui,\n\n        HIDDEN = 'k-hidden',\n        ROLE = 'role',\n        ARIA_LABEL = 'aria-label',\n        ARIA_HIDDEN = 'aria-hidden',\n        ARIA_LIVE = 'aria-live';\n\n    var loaderClasses = {\n        loader: \"k-loader\",\n        canvas: \"k-loader-canvas\",\n        segment: \"k-loader-segment\"\n    };\n\n    var loaderTypes = {\n        'pulsing': { className: 'pulsing-2', segments: 2 },\n        'infinite-spinner': { className: 'spinner-3', segments: 3 },\n        'converging-spinner': { className: 'spinner-4', segments: 4 }\n    };\n\n    var Loader = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that._render();\n\n            that._appearance();\n\n            kendo.notify(that);\n        },\n\n        destroy: function() {\n            var that = this;\n\n            Widget.fn.destroy.call(that);\n        },\n\n        options: {\n            name: 'Loader',\n            themeColor: \"primary\",\n            sizes: {\n                'small': 'sm',\n                'medium': 'md',\n                'large': 'lg'\n            },\n            size: 'medium',\n            type: \"pulsing\",\n            visible: true,\n            messages: {\n                \"loading\": \"Loading\"\n            },\n            _classNames: []\n        },\n\n        _render: function() {\n            var that = this,\n                wrapper = that.element,\n                type = that.options.type,\n                typeData = loaderTypes[type] === undefined$1 ? type : loaderTypes[type],\n                segments = [];\n\n            wrapper\n                .empty()\n                .attr(ARIA_LABEL, that.options.messages.loading)\n                .attr(ROLE, \"alert\")\n                .attr(ARIA_LIVE, \"polite\");\n\n            if (typeData.segments) {\n                for (var i = 0; i < typeData.segments; i += 1) {\n                    segments.push($('<span/>').addClass(loaderClasses.segment));\n                }\n            }\n\n            $(\"<div>\").addClass(loaderClasses.canvas)\n                .append(segments)\n                .appendTo(wrapper);\n        },\n\n        _appearance: function() {\n            var that = this;\n\n            that._themeColor = that.options.themeColor;\n            that._sizes = that.options.sizes;\n            that._size = that.options.size;\n            that._type = that.options.type;\n            that._visible = that.options.visible;\n\n            that._updateClassNames();\n        },\n\n        _updateClassNames: function() {\n            var that = this,\n                classNames = [loaderClasses.loader],\n                keepClassNames = that.options._classNames,\n                themeColor = that._themeColor,\n                sizes = that._sizes,\n                size = that._size,\n                type = that._type,\n                typeData = loaderTypes[type] === undefined$1 ? type : loaderTypes[type],\n                sizeAbbr = sizes[size] === undefined$1 ? size : sizes[size],\n                visible = that._visible;\n\n            // Remove all class names\n            that.element.removeClass(function(index, className) {\n                if (className.indexOf('k-') === 0 && keepClassNames.indexOf(className) === -1) {\n                    that.element.removeClass(className);\n                }\n            });\n\n            // Color\n            if (typeof themeColor === 'string' && themeColor !== '' && themeColor !== 'inherit') {\n                classNames.push('k-loader-' + themeColor);\n            }\n\n            // Size\n            if (typeof size === 'string' && size !== '' && sizeAbbr !== '') {\n                classNames.push('k-loader-' + sizeAbbr);\n            }\n\n            // Type\n            if (typeof type === 'string' && type !== '') {\n                classNames.push('k-loader-' + ($.isPlainObject(typeData) ? typeData.className : type));\n            }\n\n            // Visibility\n            if (visible === false) {\n                classNames.push(HIDDEN);\n            }\n\n            that.element.attr(ARIA_HIDDEN, !visible);\n\n            // Apply classnames\n            that.element.addClass(classNames.join(' '));\n        },\n\n        setOptions: function(options) {\n            var that = this;\n\n            Widget.fn.setOptions.call(that, options);\n\n            that._render();\n\n            that._appearance();\n        },\n\n        themeColor: function(color) {\n            var that = this;\n\n            if (arguments.length === 0 || color === undefined$1) {\n                return that._themeColor;\n            }\n\n            that._themeColor = color;\n\n            that._updateClassNames();\n        },\n\n        hide: function() {\n            var that = this;\n\n            that._visible = false;\n\n            that._updateClassNames();\n        },\n\n        show: function() {\n            var that = this;\n\n            that._visible = true;\n\n            that._updateClassNames();\n        }\n    });\n\n    ui.plugin(Loader);\n\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.loader.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.maskedtextbox.js":
/*!***************************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.maskedtextbox.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* harmony import */ var _kendo_floatinglabel_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.floatinglabel.js */ \"./node_modules/kendo-ui-core/esm/kendo.floatinglabel.js\");\n/* harmony import */ var _kendo_icons_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kendo.icons.js */ \"./node_modules/kendo-ui-core/esm/kendo.icons.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\n\nlet $ = kendo.jQuery;\n\nfunction addInputPrefixSuffixContainers({ widget, wrapper, options, prefixInsertBefore, suffixInsertAfter }) {\n    var prefix = options.prefixOptions,\n        suffix = options.suffixOptions,\n        hasPrefixContent = prefix.template || prefix.icon,\n        hasSuffixContent = suffix.template || suffix.icon,\n        suffixInsertAfter = suffixInsertAfter || prefixInsertBefore,\n        layoutFlow = options.layoutFlow,\n        containerOrientation = layoutFlow ? (layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\") : \"horizontal\",\n        separatorOrientation = layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\",\n        INPUT_SEPARATOR = `<span class=\"k-input-separator k-input-separator-${separatorOrientation}\"></span>`,\n        prefixContainer,\n        suffixContainer;\n\n    if (prefix && hasPrefixContent) {\n        prefixContainer = wrapper.children(\".k-input-prefix\");\n\n        if (!prefixContainer[0]) {\n            prefixContainer = $(`<span class=\"k-input-prefix k-input-prefix-${containerOrientation}\" />`);\n            if (prefixInsertBefore) {\n                prefixContainer.insertBefore(prefixInsertBefore);\n            } else {\n                prefixContainer.prependTo(wrapper);\n            }\n        }\n\n        if (prefix.icon) {\n            prefixContainer.html(kendo.html.renderIcon({ icon: prefix.icon }));\n        }\n\n        if (prefix.template) {\n            prefixContainer.html(kendo.template(prefix.template)({}));\n        }\n\n        if (prefix.separator) {\n            $(INPUT_SEPARATOR).insertAfter(prefixContainer);\n        }\n    }\n\n    if (suffix && hasSuffixContent) {\n        suffixContainer = wrapper.children(\".k-input-suffix\");\n\n        if (!suffixContainer[0]) {\n            suffixContainer = $(`<span class=\"k-input-suffix k-input-suffix-${containerOrientation}\" />`).appendTo(wrapper);\n            if (suffixInsertAfter) {\n                suffixContainer.insertAfter(suffixInsertAfter);\n            } else {\n                suffixContainer.appendTo(wrapper);\n            }\n        }\n\n        if (suffix.icon) {\n            suffixContainer.html(kendo.html.renderIcon({ icon: suffix.icon }));\n        }\n\n        if (suffix.template) {\n            suffixContainer.html(kendo.template(suffix.template)({}));\n        }\n\n        if (suffix.separator) {\n            $(INPUT_SEPARATOR).insertBefore(suffixContainer);\n        }\n    }\n\n    widget._prefixContainer = prefixContainer;\n    widget._suffixContainer = suffixContainer;\n}\n\nvar __meta__ = {\n    id: \"maskedtextbox\",\n    name: \"MaskedTextBox\",\n    category: \"web\",\n    description: \"The MaskedTextBox widget allows to specify a mask type on an input field.\",\n    depends: [\"core\", \"floatinglabel\", \"icons\"]\n};\n\n(function($, undefined$1) {\n    var global = window;\n    var min = global.Math.min;\n    var kendo = __webpack_provided_window_dot_kendo;\n    var caret = kendo.caret;\n    var keys = kendo.keys;\n    var ui = kendo.ui;\n    var Widget = ui.Widget;\n    var NS = \".kendoMaskedTextBox\";\n    var isPlainObject = $.isPlainObject;\n    var setTimeout = window.setTimeout;\n\n    var LABELCLASSES = \"k-label k-input-label\";\n    var FLOATINGLABELCLASS = \"k-floating-label\";\n    var STATEDISABLED = \"k-disabled\";\n    var STATEINVALID = \"k-invalid\";\n    var FOCUSED = \"k-focus\";\n    var DISABLED = \"disabled\";\n    var READONLY = \"readonly\";\n    var CHANGE = \"change\";\n    var MOUSEUP = \"mouseup\";\n    var DROP = \"drop\";\n    var KEYDOWN = \"keydown\";\n    var PASTE = \"paste\";\n    var INPUT = \"input\";\n\n    function ns(name) { return name + NS; }\n\n    var INPUT_EVENT_NAME = ns(kendo.support.propertyChangeEvent ? \"propertychange\" : INPUT);\n\n    function stringDiffStart(str1, str2) {\n        var i = 0;\n        while (i < str2.length) {\n            if (str1[i] !== str2[i]) {\n                break;\n            }\n            i++;\n        }\n\n        return i;\n    }\n    var MaskedTextBox = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n            var DOMElement;\n\n            Widget.fn.init.call(that, element, options);\n\n            that._rules = $.extend({}, that.rules, that.options.rules);\n\n            element = that.element;\n            DOMElement = element[0];\n\n            that._wrapper();\n            that._tokenize();\n            that._form();\n\n            that.element\n                .addClass(\"k-input-inner\")\n                .attr(\"autocomplete\", \"off\")\n                .on(\"focus\" + NS, function() {\n                    var value = DOMElement.value;\n\n                    if (!value) {\n                        DOMElement.value = that._old = that._emptyMask;\n                    } else {\n                        that._togglePrompt(true);\n                    }\n\n                    that._oldValue = value;\n                    that.wrapper.addClass(FOCUSED);\n\n                    that._timeoutId = setTimeout(function() {\n                        caret(element, 0, value ? that._maskLength : 0);\n                    });\n                })\n                .on(\"focusout\" + NS, function() {\n                    var value = element.val();\n\n                    clearTimeout(that._timeoutId);\n                    DOMElement.value = that._old = \"\";\n\n                    if (value !== that._emptyMask) {\n                        DOMElement.value = that._old = value;\n                    }\n\n                    that.wrapper.removeClass(FOCUSED);\n                    that._change();\n                    that._togglePrompt();\n                });\n\n            if (that.options.mask && that.options.mask.length > 0) {\n                that.element.attr(\"aria-placeholder\", that.options.mask);\n            }\n\n            var disabled = element.is(\"[disabled]\") || $(that.element).parents(\"fieldset\").is(':disabled');\n\n            if (disabled) {\n                that.enable(false);\n            } else {\n                that.readonly(element.is(\"[readonly]\"));\n            }\n\n            that._validationIcon = $(kendo.ui.icon({ icon: \"exclamation-circle\", iconClass: \"k-input-validation-icon k-hidden\" })).insertAfter(element);\n\n            that.value(that.options.value || element.val());\n\n            that._label();\n            that._applyCssClasses();\n\n            addInputPrefixSuffixContainers({ widget: that, wrapper: that.wrapper, options: that.options, suffixInsertAfter: that._validationIcon });\n            if (that.floatingLabel) {\n                that.floatingLabel.refresh();\n            }\n\n            kendo.notify(that);\n        },\n\n        options: {\n            name: \"MaskedTextBox\",\n            clearPromptChar: false,\n            unmaskOnPost: false,\n            promptChar: \"_\",\n            culture: \"\",\n            rules: {},\n            value: \"\",\n            mask: \"\",\n            label: null,\n            size: \"medium\",\n            fillMode: \"solid\",\n            rounded: \"medium\",\n            prefixOptions: {\n                separator: true\n            },\n            suffixOptions: {\n                separator: true\n            }\n        },\n\n        events: [\n            CHANGE\n        ],\n\n        rules: {\n            \"0\": /\\d/,\n            \"9\": /\\d|\\s/,\n            \"#\": /\\d|\\s|\\+|\\-/,\n            \"L\": /[a-zA-Z]/,\n            \"?\": /[a-zA-Z]|\\s/,\n            \"&\": /\\S/,\n            \"C\": /./,\n            \"A\": /[a-zA-Z0-9]/,\n            \"a\": /[a-zA-Z0-9]|\\s/\n        },\n\n        setOptions: function(options) {\n            var that = this;\n\n            Widget.fn.setOptions.call(that, options);\n\n            that._rules = $.extend({}, that.rules, that.options.rules);\n\n            that._tokenize();\n\n            this._unbindInput();\n            this._bindInput();\n\n            that.value(that.element.val());\n        },\n\n        destroy: function() {\n            var that = this;\n\n            if (that.floatingLabel) {\n                that.floatingLabel.destroy();\n            }\n\n            that.element.off(NS);\n\n            if (that._formElement) {\n                that._formElement.off(\"reset\", that._resetHandler);\n                that._formElement.off(\"submit\", that._submitHandler);\n            }\n\n            Widget.fn.destroy.call(that);\n        },\n\n        raw: function() {\n            var unmasked = this._unmask(this.element.val(), 0);\n            return unmasked.replace(new RegExp(escapeRegExp(this.options.promptChar), \"g\"), \"\");\n        },\n\n        value: function(value) {\n            var element = this.element;\n            var emptyMask = this._emptyMask;\n\n            if (value === undefined$1) {\n                return this.element.val();\n            }\n\n            if (value === null) {\n                value = \"\";\n            }\n\n            if (!emptyMask) {\n                this._oldValue = value;\n                element.val(value);\n                return;\n            }\n\n            value = this._unmask(value + \"\");\n\n            element.val(value ? emptyMask : \"\");\n\n            this._mask(0, this._maskLength, value);\n            this._unmaskedValue = null;\n\n            value = element.val();\n            this._oldValue = value;\n\n            if (kendo._activeElement() !== element) {\n                if (value === emptyMask) {\n                    element.val(\"\");\n                } else {\n                    this._togglePrompt();\n                }\n            }\n\n            if (this.floatingLabel) {\n                this.floatingLabel.refresh();\n            }\n        },\n\n        _togglePrompt: function(show) {\n            var DOMElement = this.element[0];\n            var value = DOMElement.value;\n\n            if (this.options.clearPromptChar) {\n                if (!show) {\n                    value = value.replace(new RegExp(escapeRegExp(this.options.promptChar), \"g\"), \" \");\n                } else {\n                    value = this._oldValue;\n                }\n\n                DOMElement.value = this._old = value;\n            }\n        },\n\n        readonly: function(readonly) {\n            var that = this;\n\n            this._editable({\n                readonly: readonly === undefined$1 ? true : readonly,\n                disable: false\n            });\n\n            if (that.floatingLabel) {\n                that.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n            }\n        },\n\n        enable: function(enable) {\n            var that = this;\n\n            this._editable({\n                readonly: false,\n                disable: !(enable = enable === undefined$1 ? true : enable)\n            });\n\n            if (that.floatingLabel) {\n                that.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n            }\n        },\n\n        _bindInput: function() {\n            var that = this;\n\n            if (that._maskLength) {\n                that.element\n                    .on(ns(KEYDOWN), that._keydown.bind(that))\n                    .on(ns(DROP), that._drop.bind(that))\n                    .on(ns(CHANGE), that._trackChange.bind(that))\n                    .on(INPUT_EVENT_NAME, that._inputHandler.bind(that));\n\n\n                if (kendo.support.browser.msie) {\n                    var version = kendo.support.browser.version;\n                    if (version > 8 && version < 11) {\n                        var events = [ns(MOUSEUP), ns(DROP), ns(KEYDOWN), ns(PASTE)].join(\" \");\n                        that.element.on(events, that._legacyIEInputHandler.bind(that));\n                    }\n                }\n            }\n        },\n\n        _unbindInput: function() {\n            var events = [INPUT_EVENT_NAME, ns(KEYDOWN), ns(MOUSEUP), ns(DROP), ns(PASTE)].join(\" \");\n\n            this.element.off(events);\n        },\n\n        _editable: function(options) {\n            var that = this;\n            var element = that.element;\n            var wrapper = that.wrapper;\n            var disable = options.disable;\n            var readonly = options.readonly;\n\n            that._unbindInput();\n\n            if (!readonly && !disable) {\n                element.prop(DISABLED, false)\n                       .prop(READONLY, false);\n\n                wrapper.removeClass(STATEDISABLED);\n\n                that._bindInput();\n            } else {\n                element.attr(DISABLED, disable)\n                       .attr(READONLY, readonly);\n\n                wrapper.toggleClass(STATEDISABLED, disable);\n            }\n        },\n\n        _change: function() {\n            var that = this;\n            var value = that.value();\n\n            if (value !== that._oldValue) {\n                that._oldValue = value;\n\n                that.trigger(CHANGE);\n                that.element.trigger(CHANGE);\n            }\n            else if (value === \"\" && that.__changing) {//ensure change is raised when empty value (mask is stripped from input content) for consistent ngjs model update\n                that.element.trigger(CHANGE);\n            }\n        },\n\n        inputChange: function(backward) {\n            var that = this;\n            var old = that._old;\n            var element = that.element[0];\n            var value = element.value;\n            var selection = caret(element);\n            var cursor = selection[1];\n            var lengthDiff = value.length - old.length;\n            var mobile = kendo.support.mobileOS;\n\n            if (that.__dropping && lengthDiff < 0) {//dropping in same input on WebKit is raised once for the removal phase and once for the adding phase\n                return;\n            }\n\n            if (lengthDiff === -1 && mobile.android && mobile.browser === \"chrome\") {\n                backward = true;\n            }\n\n            var contentStart = min(cursor, stringDiffStart(value, old));\n            var content = value.substring(contentStart, cursor);\n\n            element.value = value.substring(0, contentStart) + that._emptyMask.substring(contentStart);\n\n            var caretPos = that._mask(contentStart, cursor, content);\n            var endContent = that._trimStartPromptChars(value.substring(cursor), min(lengthDiff, caretPos - contentStart));\n\n            var unmasked = that._unmask(endContent, old.length - endContent.length);\n            that._mask(caretPos, caretPos, unmasked);\n\n            if (backward) {\n                caretPos = that._findCaretPosBackwards(contentStart);\n            }\n\n            caret(element, caretPos);\n\n            //clean-up flags\n            that.__dropping = false;\n        },\n\n        _trimStartPromptChars: function(content, count) {\n            var promptChar = this.options.promptChar;\n\n            while (count-- > 0 && content.indexOf(promptChar) === 0) {\n                content = content.substring(1);\n            }\n\n            return content;\n        },\n\n        _findCaretPosBackwards: function(pos) {\n            var caretStart = this._find(pos, true);\n            if (caretStart < pos) {\n                caretStart += 1;\n            }\n\n            return caretStart;\n        },\n\n        _inputHandler: function() {\n            if (kendo._activeElement() !== this.element[0]) {\n                return;\n            }\n\n            this.inputChange(this.__backward);\n        },\n\n        _legacyIEInputHandler: function(e) {\n            var that = this;\n            var input = that.element[0];\n            var value = input.value;\n            var type = e.type;\n\n            that.__pasting = (type === \"paste\");\n\n            setTimeout(function() {\n                if (type === \"mouseup\" && that.__pasting) {\n                    return;\n                }\n                if (input.value && input.value !== value) {\n                    that.inputChange(that.__backward);\n                }\n            });\n        },\n\n        _trackChange: function() {\n            var that = this;\n\n            that.__changing = true;\n            setTimeout(function() { that.__changing = false; });\n        },\n\n        _form: function() {\n            var that = this;\n            var element = that.element;\n            var formId = element.attr(\"form\");\n            var form = formId ? $(\"#\" + formId) : element.closest(\"form\");\n\n            if (form[0]) {\n                that._resetHandler = function() {\n                    setTimeout(function() {\n                        that.value(element[0].value);\n                    });\n                };\n\n                that._submitHandler = function() {\n                    that.element[0].value = that._old = that.raw();\n                };\n\n                if (that.options.unmaskOnPost) {\n                    form.on(\"submit\", that._submitHandler);\n                }\n\n                that._formElement = form.on(\"reset\", that._resetHandler);\n            }\n        },\n\n        _keydown: function(e) {\n            var key = e.keyCode;\n\n            this.__backward = key === keys.BACKSPACE;\n\n            if (key === keys.ENTER) {\n                this._change();\n            }\n        },\n\n        _drop: function() {\n            this.__dropping = true;\n        },\n\n        _find: function(idx, backward) {\n            var value = this.element.val() || this._emptyMask;\n            var step = 1;\n\n            if (backward === true) {\n                step = -1;\n            }\n\n            while (idx > -1 || idx <= this._maskLength) {\n                if (value.charAt(idx) !== this.tokens[idx]) {\n                    return idx;\n                }\n\n                idx += step;\n            }\n\n            return -1;\n        },\n\n        _mask: function(start, end, value, backward) {\n            var element = this.element[0];\n            var current = element.value || this._emptyMask;\n            var empty = this.options.promptChar;\n            var valueLength;\n            var chrIdx = 0;\n            var unmasked;\n            var chr;\n            var idx;\n\n            start = this._find(start, backward);\n\n            if (start > end) {\n                end = start;\n            }\n\n            unmasked = this._unmask(current.substring(end), end);\n            value = this._unmask(value, start);\n            valueLength = value.length;\n\n            if (value) {\n                unmasked = unmasked.replace(new RegExp(\"^_{0,\" + valueLength + \"}\"), \"\");\n            }\n\n            value += unmasked;\n            current = current.split(\"\");\n            chr = value.charAt(chrIdx);\n\n            while (start < this._maskLength) {\n                current[start] = chr || empty;\n                chr = value.charAt(++chrIdx);\n\n                if (idx === undefined$1 && chrIdx > valueLength) {\n                    idx = start;\n                }\n\n                start = this._find(start + 1);\n            }\n\n            element.value = this._old = current.join(\"\");\n\n            if (kendo._activeElement() === element) {\n                if (idx === undefined$1) {\n                    idx = this._maskLength;\n                }\n\n                caret(element, idx);\n            }\n\n            return idx;\n        },\n\n        _unmask: function(value, idx) {\n            if (!value) {\n                return \"\";\n            }\n\n            if (this._unmaskedValue === value) {\n                return this._unmaskedValue;\n            }\n            value = (value + \"\").split(\"\");\n\n            var chr;\n            var token;\n            var chrIdx = 0;\n            var tokenIdx = idx || 0;\n\n            var empty = this.options.promptChar;\n\n            var valueLength = value.length;\n            var tokensLength = this.tokens.length;\n\n            var result = \"\";\n\n            while (tokenIdx < tokensLength) {\n                chr = value[chrIdx];\n                token = this.tokens[tokenIdx];\n\n                if (chr === token || chr === empty) {\n                    result += chr === empty ? empty : \"\";\n\n                    chrIdx += 1;\n                    tokenIdx += 1;\n                } else if (typeof token !== \"string\") {\n                    if ((token && token.test && token.test(chr)) || (kendo.isFunction(token) && token(chr))) {\n                        result += chr;\n                        tokenIdx += 1;\n                    } else {\n                        if (valueLength === 1) {\n                            this._blinkInvalidState();\n                        }\n                    }\n\n                    chrIdx += 1;\n                } else {\n                    tokenIdx += 1;\n                }\n\n                if (chrIdx >= valueLength) {\n                    break;\n                }\n            }\n            this._unmaskedValue = result;\n            return result;\n        },\n\n        _label: function() {\n            var that = this;\n            var element = that.element;\n            var options = that.options;\n            var id = element.attr(\"id\");\n            var floating;\n            var labelText;\n\n            if (options.label !== null) {\n                floating = isPlainObject(options.label) ? options.label.floating : false;\n                labelText = isPlainObject(options.label) ? options.label.content : options.label;\n\n                if (floating) {\n                    that._floatingLabelContainer = that.wrapper.wrap(\"<span></span>\").parent();\n                    that.floatingLabel = new kendo.ui.FloatingLabel(that._floatingLabelContainer, { widget: that });\n                }\n\n                if (kendo.isFunction(labelText)) {\n                    labelText = labelText.call(that);\n                }\n\n                if (!labelText) {\n                    labelText = \"\";\n                }\n\n                if (!id) {\n                    id = options.name + \"_\" + kendo.guid();\n                    element.attr(\"id\", id);\n                }\n\n                that._inputLabel = $(\"<label class='\" + (floating ? FLOATINGLABELCLASS : LABELCLASSES) + \"' for='\" + id + \"'>\" + labelText + \"</label>'\")[floating ? \"insertAfter\" : \"insertBefore\"](that.wrapper);\n            }\n        },\n\n        _wrapper: function() {\n            var that = this;\n            var element = that.element;\n            var DOMElement = element[0];\n\n            var wrapper = element.wrap(\"<span class='k-input k-maskedtextbox'></span>\").parent();\n            wrapper[0].style.cssText = DOMElement.style.cssText;\n            DOMElement.style.width = \"100%\";\n            that.wrapper = wrapper.addClass(DOMElement.className).removeClass('input-validation-error');\n        },\n\n        _blinkInvalidState: function() {\n            var that = this;\n\n            that._addInvalidState();\n            clearTimeout(that._invalidStateTimeout);\n            that._invalidStateTimeout = setTimeout(that._removeInvalidState.bind(that), 100);\n        },\n\n        _addInvalidState: function() {\n            var that = this;\n\n            that.wrapper.addClass(STATEINVALID);\n            that._validationIcon.removeClass(\"k-hidden\");\n        },\n\n        _removeInvalidState: function() {\n            var that = this;\n\n            that.wrapper.removeClass(STATEINVALID);\n            that._validationIcon.addClass(\"k-hidden\");\n            that._invalidStateTimeout = null;\n        },\n\n        _tokenize: function() {\n            var tokens = [];\n            var tokenIdx = 0;\n\n            var mask = this.options.mask || \"\";\n            var maskChars = mask.split(\"\");\n            var length = maskChars.length;\n            var idx = 0;\n            var chr;\n            var rule;\n\n            var emptyMask = \"\";\n            var promptChar = this.options.promptChar;\n            var numberFormat = kendo.getCulture(this.options.culture).numberFormat;\n            var rules = this._rules;\n\n            for (; idx < length; idx++) {\n                chr = maskChars[idx];\n                rule = rules[chr];\n\n                if (rule) {\n                    tokens[tokenIdx] = rule;\n                    emptyMask += promptChar;\n                    tokenIdx += 1;\n                } else {\n                    if (chr === \".\" || chr === \",\") {\n                        chr = numberFormat[chr];\n                    } else if (chr === \"$\") {\n                        chr = numberFormat.currency.symbol;\n                    } else if (chr === \"\\\\\") {\n                        idx += 1;\n                        chr = maskChars[idx];\n                    }\n\n                    chr = chr.split(\"\");\n\n                    for (var i = 0, l = chr.length; i < l; i++) {\n                        tokens[tokenIdx] = chr[i];\n                        emptyMask += chr[i];\n                        tokenIdx += 1;\n                    }\n                }\n            }\n\n            this.tokens = tokens;\n\n            this._emptyMask = emptyMask;\n            this._maskLength = emptyMask.length;\n        }\n    });\n\n    function escapeRegExp(text) {\n        return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n    }\n\n    kendo.cssProperties.registerPrefix(\"MaskedTextBox\", \"k-input-\");\n\n    kendo.cssProperties.registerValues(\"MaskedTextBox\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n    ui.plugin(MaskedTextBox);\n\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.maskedtextbox.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.menu.js":
/*!******************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.menu.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_popup_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.popup.js */ \"./node_modules/kendo-ui-core/esm/kendo.popup.js\");\n/* harmony import */ var _kendo_data_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.data.js */ \"./node_modules/kendo-ui-core/esm/kendo.data.js\");\n/* harmony import */ var _kendo_icons_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kendo.icons.js */ \"./node_modules/kendo-ui-core/esm/kendo.icons.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\n\nvar __meta__ = {\n    id: \"menu\",\n    name: \"Menu\",\n    category: \"web\",\n    description: \"The Menu widget displays hierarchical data as a multi-level menu.\",\n    depends: [ \"popup\", \"data\", \"data.odata\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        ui = kendo.ui,\n        activeElement = kendo._activeElement,\n        touch = (kendo.support.touch && kendo.support.mobileOS),\n        isArray = Array.isArray,\n        HierarchicalDataSource = kendo.data.HierarchicalDataSource,\n        MOUSEDOWN = \"mousedown\",\n        CLICK = \"click\",\n        DELAY = 30,\n        SCROLLSPEED = 50,\n        extend = $.extend,\n        each = $.each,\n        encode = kendo.htmlEncode,\n        template = kendo.template,\n        keys = kendo.keys,\n        Widget = ui.Widget,\n        excludedNodesRegExp = /^(ul|a|div)$/i,\n        NS = \".kendoMenu\",\n        IMG = \"img\",\n        OPEN = \"open\",\n        MENU = \"k-menu\",\n        LINK = \"k-link k-menu-link\",\n        LINK_SELECTOR = \".k-link\",\n        ICON_SELECTOR = \".k-menu-expand-arrow-icon\",\n        LAST = \"k-last\",\n        CLOSE = \"close\",\n        TIMER = \"timer\",\n        FIRST = \"k-first\",\n        IMAGE = \"k-image\",\n        SELECT = \"select\",\n        ZINDEX = \"zIndex\",\n        ACTIVATE = \"activate\",\n        DEACTIVATE = \"deactivate\",\n        POINTERDOWN = \"touchstart\" + NS + \" MSPointerDown\" + NS + \" pointerdown\" + NS,\n        pointers = kendo.support.pointers,\n        msPointers = kendo.support.msPointers,\n        allPointers = msPointers || pointers,\n        CHANGE = \"change\",\n        ERROR = \"error\",\n        TOUCHSTART = kendo.support.touch ? \"touchstart\" : \"\",\n        MOUSEENTER = pointers ? \"pointerover\" : (msPointers ? \"MSPointerOver\" : \"mouseenter\"),\n        MOUSELEAVE = pointers ? \"pointerout\" : (msPointers ? \"MSPointerOut\" : \"mouseleave\"),\n        MOUSEWHEEL = \"DOMMouseScroll\" + NS + \" mousewheel\" + NS,\n        RESIZE = kendo.support.resize + NS,\n        SCROLLWIDTH = \"scrollWidth\",\n        SCROLLHEIGHT = \"scrollHeight\",\n        OFFSETWIDTH = \"offsetWidth\",\n        OFFSETHEIGHT = \"offsetHeight\",\n        POPUP_ID_ATTR = \"group\",\n        POPUP_OPENER_ATTR = \"groupparent\",\n        DOCUMENT_ELEMENT = $(document.documentElement),\n        KENDOPOPUP = \"kendoPopup\",\n        HOVERSTATE = \"k-hover\",\n        FOCUSEDSTATE = \"k-focus\",\n        DISABLEDSTATE = \"k-disabled\",\n        SELECTEDSTATE = \"k-selected\",\n        menuSelector = \".k-menu\",\n        groupSelector = \".k-menu-group\",\n        animationContainerSelector = \".k-animation-container\",\n        childAnimationContainerSelector = \".k-child-animation-container\",\n        popupSelector = \".k-menu-popup ,\" + animationContainerSelector,\n        allItemsSelector = \":not(.k-list) > .k-item:not([role='treeitem'])\",\n        disabledSelector = \".k-item.k-disabled\",\n        itemSelector = \".k-item\",\n        availableItemsSelector = \".k-item:not(.k-disabled)\",\n        linkSelector = \".k-item:not(.k-disabled) > .k-link\",\n        exclusionSelector = \":not(.k-item.k-separator):visible\",\n        templateSelector = \"div:not(.k-animation-container,.k-list-container)\",\n        scrollButtonSelector = \".k-menu-scroll-button\",\n        touchPointerTypes = { \"2\": 1, \"touch\": 1 },\n        STRING = \"string\",\n        DATABOUND = \"dataBound\",\n        ARIA_EXPANDED = \"aria-expanded\",\n        ROLE = \"role\",\n\n        bindings = {\n            text: \"dataTextField\",\n            url: \"dataUrlField\",\n            spriteCssClass: \"dataSpriteCssClassField\",\n            imageUrl: \"dataImageUrlField\",\n            imageAttr: \"dataImageAttrField\",\n            content: \"dataContentField\"\n        },\n\n        rendering = {\n            wrapperCssClass: function(group, item) {\n                var result = \"k-item k-menu-item\",\n                    index = item.index;\n\n                if (item.separator) {\n                    result += \" k-separator\";\n                }\n\n                if (item.enabled === false) {\n                    result += \" k-disabled\";\n                }\n\n                if (group.firstLevel && index === 0) {\n                    result += \" k-first\";\n                }\n\n                if (index == group.length - 1) {\n                    result += \" k-last\";\n                }\n\n                if (item.cssClass) {\n                    result += \" \" + item.cssClass;\n                }\n\n                if (item.attr && item.attr.hasOwnProperty(\"class\")) {\n                    result += \" \" + item.attr[\"class\"];\n                }\n\n                if (item.selected) {\n                    result += \" \" + SELECTEDSTATE;\n                }\n\n                return result;\n            },\n\n            itemCssAttributes: function(item) {\n                var result = \"\";\n                var attributes = item.attr || {};\n\n                for (var attr in attributes) {\n                    if (attributes.hasOwnProperty(attr) && attr !== \"class\") {\n                        result += attr + \"=\\\"\" + attributes[attr] + \"\\\" \";\n                    }\n                }\n\n                return result;\n            },\n\n            imageCssAttributes: function(imgAttributes) {\n                var result = \"\";\n                var attributes = imgAttributes && imgAttributes.toJSON ? imgAttributes.toJSON() : {};\n\n                if (!attributes['class']) {\n                    attributes['class'] = IMAGE;\n                } else {\n                    attributes['class'] += \" \" + IMAGE;\n                }\n\n                for (var attr in attributes) {\n                    if (attributes.hasOwnProperty(attr)) {\n                        result += attr + \"=\\\"\" + attributes[attr] + \"\\\" \";\n                    }\n                }\n\n                return result;\n            },\n\n            contentCssAttributes: function(item) {\n                var result = \"\";\n                var attributes = item.contentAttr || {};\n                var defaultClasses = \"k-content k-group k-menu-group k-menu-group-md\";\n\n                if (!attributes['class']) {\n                    attributes['class'] = defaultClasses;\n                } else {\n                    attributes['class'] += \" \" + defaultClasses;\n                }\n\n                for (var attr in attributes) {\n                    if (attributes.hasOwnProperty(attr)) {\n                        result += attr + \"=\\\"\" + attributes[attr] + \"\\\" \";\n                    }\n                }\n\n                return result;\n            },\n\n            textClass: function() {\n                return LINK;\n            },\n\n            groupAttributes: function(group) {\n                return group.expanded !== true ? `${kendo.attr(\"style-display\")}=\"none\"` : \"\";\n            },\n\n            groupCssClass: function() {\n                return \"k-group k-menu-group k-menu-group-md\";\n            },\n\n            groupWrapperCssClass: function() {\n                return \"k-menu-popup\";\n            },\n\n            content: function(item) {\n                return item.content ? item.content : \"&nbsp;\";\n            }\n    };\n\n    function getEffectDirection(direction, root) {\n        direction = direction.split(\" \")[!root + 0] || direction;\n        return direction.replace(\"top\", \"up\").replace(\"bottom\", \"down\");\n    }\n\n    function parseDirection(direction, root, isRtl) {\n        direction = direction.split(\" \")[!root + 0] || direction;\n        var output = { origin: [\"bottom\", (isRtl ? \"right\" : \"left\")], position: [\"top\", (isRtl ? \"right\" : \"left\")] },\n            horizontal = /left|right/.test(direction);\n\n        if (horizontal) {\n            output.origin = [ \"top\", direction ];\n            output.position[1] = kendo.directions[direction].reverse;\n        } else {\n            output.origin[0] = direction;\n            output.position[0] = kendo.directions[direction].reverse;\n        }\n\n        output.origin = output.origin.join(\" \");\n        output.position = output.position.join(\" \");\n\n        return output;\n    }\n\n    function contains(parent, child) {\n        try {\n            return $.contains(parent, child);\n        } catch (e) {\n            return false;\n        }\n    }\n\n    function updateItemClasses(item) {\n        item = $(item);\n        var omitWrap = item.attr(kendo.attr(\"omit-wrap\"));\n\n        if (omitWrap) {\n            return;\n        }\n\n        item.addClass(\"k-item k-menu-item\")\n            .children(IMG)\n            .addClass(IMAGE);\n\n        item\n            .children(\"a\")\n            .addClass(LINK)\n            .children(IMG)\n            .addClass(IMAGE);\n\n        item\n            .filter(\":not([disabled])\");\n\n        item\n            .filter(\".k-separator\")\n            .removeClass(\"k-menu-item\")\n            .addClass(\"k-menu-separator\")\n            .empty()\n            .append(\"&nbsp;\");\n\n        item\n            .filter(\"li[disabled]\")\n            .addClass(DISABLEDSTATE)\n            .prop(\"disabled\", false)\n            .attr(\"aria-disabled\", true);\n\n        if (!item.filter(\"[role]\").length) {\n            item.attr(ROLE, \"menuitem\");\n        }\n\n        if (!item.children(LINK_SELECTOR).length) {\n            item.contents() // exclude groups, real links, templates and empty text nodes\n                .filter(function() { return (!this.nodeName.match(excludedNodesRegExp) && !(this.nodeType === 3 && !kendo.trim(this.nodeValue))); })\n                // adding role=none to span elements inside li[role=menuitem]\n                // to make screen readers announce submenus #telerik/kendo-ui-core/issues/6942\n                .wrapAll(\"<span class='\" + LINK + \"' role='none'></span>\")\n                .filter(function(idx, elm) { return elm.nodeType === 3; })\n                .wrap(\"<span class='k-menu-link-text' role='none'></span>\");\n        }\n\n        updateArrow(item);\n        updateFirstLast(item);\n    }\n\n    function updateArrow(item) {\n        item = $(item);\n        item.find(\"> .k-link > .k-menu-expand-arrow > [class*=k-i-caret]:not(.k-sprite),> .k-link > .k-menu-expand-arrow > [class*=k-svg-i-caret]:not(.k-sprite)\").parent().remove();\n\n        item.filter(\":has(.k-menu-group)\")\n            .children(\".k-link:not(:has([class*=k-i-caret]:not(.k-sprite))),.k-link:not(:has([class*=k-svg-i-caret]:not(.k-sprite)))\")\n            .each(function() {\n                var item = $(this);\n\n                item.append(`<span aria-hidden='true' class='k-menu-expand-arrow'>${kendo.ui.icon({ icon: getArrowIconName(item), iconClass: \"k-menu-expand-arrow-icon\" })}</span>`);\n            });\n    }\n\n    function getArrowIconName(item) {\n        var arrowIconName,\n            parent = item.parent().parent(),\n            isRtl = kendo.support.isRtl(parent);\n\n        if (parent.hasClass(MENU + \"-horizontal\")) {\n            arrowIconName = \"caret-alt-down\";\n        } else {\n            if (isRtl) {\n                arrowIconName = \"caret-alt-left\";\n            }\n            else {\n                arrowIconName = \"caret-alt-right\";\n            }\n        }\n        return arrowIconName;\n    }\n\n    function updateFirstLast(item) {\n        item = $(item);\n\n        item.filter(\".k-first:not(:first-child)\").removeClass(FIRST);\n        item.filter(\".k-last:not(:last-child)\").removeClass(LAST);\n        item.filter(\":first-child\").addClass(FIRST);\n        item.filter(\":last-child\").addClass(LAST);\n    }\n\n    function updateHasAriaPopup(parents) {\n        if (parents && parents.length) {\n            for (var index in parents) {\n                var parentLi = parents.eq(index);\n                if (parentLi.find(\"ul\").length) {\n                    parentLi.attr(\"aria-haspopup\", true);\n                } else {\n                    parentLi.removeAttr(\"aria-haspopup\");\n                }\n            }\n        }\n    }\n\n    function getParentLiItems(group) {\n        if (!group.hasClass(MENU)) {\n            return group.parentsUntil(\".\" + MENU, \"li\");\n        }\n    }\n\n    function storeItemSelectEventHandler(element, options) {\n        var selectHandler = getItemSelectEventHandler(options);\n        if (selectHandler) {\n            setItemData(element, selectHandler);\n        }\n\n        if (options.items) {\n            $(element).children(\"div\").children(\"ul\").children(\"li\").each(function(i) {\n                storeItemSelectEventHandler(this, options.items[i]);\n            });\n        }\n    }\n\n    function setItemData(element, selectHandler) {\n        $(element).children(\".k-link\").data({\n            selectHandler: selectHandler\n        });\n    }\n\n    function getItemSelectEventHandler(options) {\n        var selectHandler = options.select,\n            isFunction = kendo.isFunction;\n\n        if (selectHandler && isFunction(selectHandler)) {\n            return selectHandler;\n        }\n        return null;\n    }\n\n    function popupOpenerSelector(id) {\n        return id ? \"li[data-groupparent='\" + id + \"']\" : \"li[data-groupparent]\";\n    }\n    function popupGroupSelector(id) {\n        var selector = id ? \"[data-group='\" + id + \"']\" : \"[data-group]\";\n        return \"ul\" + selector + \",div\" + selector;\n    }\n    function getChildPopups(currentPopup, overflowWrapper) {\n        var childPopupOpener = currentPopup.find(popupOpenerSelector());\n        var result = [];\n        childPopupOpener.each(function(i, opener) {\n            opener = $(opener);\n            var popupId = opener.data(POPUP_OPENER_ATTR);\n            var popup = currentPopup;\n            while (popupId) {\n                popup = overflowWrapper.find(popupGroupSelector(popupId) + \":visible\");\n                if (popup.length) {\n                    result.push(popup);\n                }\n                opener = popup.find(popupOpenerSelector());\n                popupId = opener.data(POPUP_OPENER_ATTR);\n            }\n        });\n\n        return result;\n    }\n\n    function popupParentItem(popupElement, overflowWrapper) {\n        var popupId = popupElement.data(POPUP_ID_ATTR);\n        return popupId ? overflowWrapper.find(popupOpenerSelector(popupId)) : $([]);\n    }\n\n    function itemPopup(item, overflowWrapper) {\n        var popupId = item.data(POPUP_OPENER_ATTR);\n        return popupId ? overflowWrapper.children(animationContainerSelector).find(popupGroupSelector(popupId)) : $([]);\n    }\n\n    function overflowMenuParents(current, overflowWrapper) {\n        var parents = [];\n        var getParents = function(item) {\n            while (item.parentNode && !overflowWrapper.is(item.parentNode)) {\n                parents.push(item.parentNode);\n                item = item.parentNode;\n            }\n        };\n        var elem = current[0] || current;\n        getParents(elem);\n        var last = parents[parents.length - 1];\n        while ($(last).is(animationContainerSelector)) {\n            var popupElement = $(last).find(popupSelector);\n            elem = popupParentItem(popupElement, overflowWrapper)[0];\n            if (!elem) {\n                break;\n            }\n            parents.push(elem);\n            getParents(elem);\n            last = parents[parents.length - 1];\n        }\n        return parents;\n    }\n\n    function mousewheelDelta(e) {\n        var delta = 0;\n\n        if (e.wheelDelta) {\n            delta = -e.wheelDelta / 120;\n            delta = delta > 0 ? Math.ceil(delta) : Math.floor(delta);\n        }\n\n        if (e.detail) {\n            delta = Math.round(e.detail / 3);\n        }\n\n        return delta;\n    }\n\n    function parentsScroll(current, scrollDirection) {\n        var scroll = 0;\n        var parent = current.parentNode;\n        while (parent && !isNaN(parent[scrollDirection])) {\n            scroll += parent[scrollDirection];\n            parent = parent.parentNode;\n        }\n        return scroll;\n    }\n\n    function isPointerTouch(e) {\n        return allPointers && e.originalEvent && e.originalEvent.pointerType in touchPointerTypes;\n    }\n\n    function isTouch(e) {\n        var ev = e.originalEvent;\n        return touch && /touch/i.test(ev.type || \"\");\n    }\n\n    function removeSpacesBetweenItems(ul) {\n        ul.contents().filter(function() { return this.nodeName != \"LI\"; }).remove();\n    }\n\n    var Menu = kendo.ui.DataBoundWidget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            element = that.wrapper = that.element;\n            options = that.options;\n            that._accessors();\n            that._templates();\n            that._dataSource();\n\n            that._updateClasses();\n            that._wrapGroups();\n\n            that._animations(options);\n\n            that.nextItemZIndex = 100;\n\n            that._tabindex();\n\n            that._initOverflow(options);\n\n            that._attachMenuEventsHandlers();\n\n            if (options.openOnClick) {\n                that.clicked = false;\n            }\n\n            element.attr(ROLE, \"menubar\");\n\n            if (element[0].id) {\n                that._ariaId = kendo.format(\"{0}_mn_active\", element[0].id);\n            } else {\n                that._ariaId = kendo.format(\"{0}_mn_active\", kendo.guid());\n            }\n\n            kendo.notify(that);\n        },\n\n        events: [\n            OPEN,\n            CLOSE,\n            ACTIVATE,\n            DEACTIVATE,\n            SELECT,\n            DATABOUND\n        ],\n\n        options: {\n            name: \"Menu\",\n            animation: {\n                open: {\n                    duration: 200\n                },\n                close: { // if close animation effects are defined, they will be used instead of open.reverse\n                    duration: 100\n                }\n            },\n            orientation: \"horizontal\",\n            direction: \"default\",\n            openOnClick: false,\n            closeOnClick: true,\n            hoverDelay: 100,\n            scrollable: false,\n            popupCollision: null\n        },\n\n        _initData: function() {\n            var that = this;\n\n            if (that.dataSource) {\n                that.element.empty();\n\n                that.append(that.dataSource.view(), that.element);\n            }\n        },\n\n        _attachMenuEventsHandlers: function() {\n            var that = this;\n            var element = that.element;\n            var options = that.options;\n            var overflowWrapper = that._overflowWrapper();\n\n            that._checkActiveProxy = that._checkActiveElement.bind(that);\n\n            (overflowWrapper || element).on(POINTERDOWN, itemSelector, that._focusHandler.bind(that))\n                   .on(CLICK + NS, disabledSelector, false)\n                   .on(CLICK + NS, itemSelector, that._click.bind(that))\n                   .on(POINTERDOWN + \" \" + MOUSEDOWN + NS, \".k-content\", that._preventClose.bind(that))\n                   .on(MOUSEENTER + NS, availableItemsSelector, that._mouseenter.bind(that))\n                   .on(MOUSELEAVE + NS, availableItemsSelector, that._mouseleave.bind(that))\n                   .on(MOUSEDOWN + NS, availableItemsSelector, that._mousedown.bind(that))\n                   .on(TOUCHSTART + NS + \" \" + MOUSEENTER + NS + \" \" + MOUSELEAVE + NS + \" \" +\n                       MOUSEDOWN + NS + \" \" + CLICK + NS, linkSelector, that._toggleHover.bind(that));\n\n            element.on(\"keydown\" + NS, that._keydown.bind(that))\n                   .on(\"focus\" + NS, that._focus.bind(that))\n                   .on(\"focus\" + NS, \".k-content\", that._focus.bind(that))\n                   .on(\"blur\" + NS, that._removeHoverItem.bind(that))\n                   .on(\"blur\" + NS, \"[tabindex]\", that._checkActiveProxy);\n\n            if (overflowWrapper) {\n                overflowWrapper\n                    .on(MOUSELEAVE + NS, popupSelector, that._mouseleavePopup.bind(that))\n                    .on(MOUSEENTER + NS, popupSelector, that._mouseenterPopup.bind(that));\n            }\n\n            if (options.openOnClick) {\n                that._documentClickHandler = that._documentClick.bind(that);\n                $(document).on(\"click\", that._documentClickHandler);\n            }\n        },\n\n        _detachMenuEventsHandlers: function() {\n            var that = this;\n            var overflowWrapper = that._overflowWrapper();\n\n            if (overflowWrapper) {\n                overflowWrapper.off(NS);\n            }\n\n            that.element.off(NS);\n\n            if (that._documentClickHandler) {\n                $(document).off(\"click\", that._documentClickHandler);\n            }\n        },\n\n        _initOverflow: function(options) {\n            var that = this;\n            var isHorizontal = options.orientation == \"horizontal\";\n            var backwardBtn, forwardBtn;\n\n            if (options.scrollable) {\n                that._openedPopups = {};\n                that._scrollWrapper = that.element.wrap(\"<div class='k-menu-scroll-wrapper k-\" + options.orientation + \"'></div>\").parent();\n                if (isHorizontal) {\n                    removeSpacesBetweenItems(that.element);\n                }\n\n                backwardBtn = $(that.templates.scrollButton({ direction: isHorizontal ? \"left\" : \"up\" }));\n                forwardBtn = $(that.templates.scrollButton({ direction: isHorizontal ? \"right\" : \"down\" }));\n                backwardBtn.add(forwardBtn).appendTo(that._scrollWrapper);\n\n                that._initScrolling(that.element, backwardBtn, forwardBtn, isHorizontal);\n\n                var initialWidth = that.element.outerWidth();\n                var initialCssWidth = that.element[0].style.width;\n                initialCssWidth = initialCssWidth === \"auto\" ? \"\" : initialCssWidth;\n\n                if (isHorizontal) {\n                    $(window).on(RESIZE, function() {\n                        setTimeout(function() {\n                            that._setOverflowWrapperWidth(initialWidth, initialCssWidth);\n                            that._toggleScrollButtons(that.element, backwardBtn, forwardBtn, isHorizontal);\n                        }, 300);\n                    });\n                }\n\n                that._setOverflowWrapperWidth(initialWidth, initialCssWidth);\n                that._toggleScrollButtons(that.element, backwardBtn, forwardBtn, isHorizontal);\n            }\n        },\n\n        _overflowWrapper: function() {\n            return this._scrollWrapper || this._popupsWrapper;\n        },\n\n        _setOverflowWrapperWidth: function(initialWidth, initialCssWidth) {\n            var that = this;\n            var wrapperCssWidth = that._scrollWrapper.css(\"width\");\n\n            that._scrollWrapper.css({ width: \"\" });\n            var wrapperWidth = that._scrollWrapper.outerWidth();\n            that._scrollWrapper.css({ width: wrapperCssWidth });\n\n            var menuWidth = that.element.outerWidth();\n            var borders = that.element[0].offsetWidth - that.element[0].clientWidth;\n\n            if (menuWidth != wrapperWidth && wrapperWidth > 0) {\n                var width = initialCssWidth ? Math.min(initialWidth, wrapperWidth) : wrapperWidth;\n                that.element.width(width - borders);\n                that._scrollWrapper.width(width);\n            }\n        },\n\n        _reinitOverflow: function(options) {\n            var that = this;\n            var overflowChanged = ((options.scrollable && !that.options.scrollable) || (!options.scrollable && that.options.scrollable)) ||\n                (options.scrollable && that.options.scrollable && options.scrollable.distance != that.options.scrollable.distance) ||\n                options.orientation != that.options.orientation;\n\n            if (overflowChanged) {\n                that._detachMenuEventsHandlers();\n                that._destroyOverflow();\n                that._initOverflow(options);\n                that._attachMenuEventsHandlers();\n            }\n        },\n\n        _destroyOverflow: function() {\n            var that = this;\n            var overflowWrapper = that._overflowWrapper();\n            if (overflowWrapper) {\n                overflowWrapper.off(NS);\n                overflowWrapper.find(scrollButtonSelector).off(NS).remove();\n                overflowWrapper.children(animationContainerSelector).each(function(i, popupWrapper) {\n                    var ul = $(popupWrapper).find(\".k-child-animation-container > .k-menu-popup\");\n                    ul.off(MOUSEWHEEL);\n                    var popupParentLi = popupParentItem(ul, overflowWrapper);\n                    if (popupParentLi.length) {\n                        popupParentLi.append(popupWrapper);\n                    }\n                });\n\n                overflowWrapper.find(popupOpenerSelector()).removeAttr(\"data-groupparent\");\n                overflowWrapper.find(popupGroupSelector()).removeAttr(\"data-group\");\n                that.element.off(MOUSEWHEEL);\n                $(window).off(RESIZE);\n                overflowWrapper.contents().unwrap();\n\n                that._scrollWrapper = that._popupsWrapper = that._openedPopups = undefined$1;\n            }\n        },\n\n        _initScrolling: function(scrollElement, backwardBtn, forwardBtn, isHorizontal) {\n            var that = this;\n            var scrollable = that.options.scrollable;\n            var distance = that.isNumeric(scrollable.distance) ? scrollable.distance : SCROLLSPEED;\n            var mouseWheelDistance = distance / 2;\n            var backward = \"-=\" + distance;\n            var forward = \"+=\" + distance;\n            var backwardDouble = \"-=\" + distance * 2;\n            var forwardDouble = \"+=\" + distance * 2;\n            var scrolling = false;\n            var touchEvents = false;\n\n            var scroll = function(value) {\n                var scrollValue = isHorizontal ? { \"scrollLeft\": value } : { \"scrollTop\": value };\n                scrollElement.finish().animate(scrollValue, \"fast\", \"linear\", function() {\n                    if (scrolling) {\n                        scroll(value);\n                    }\n                });\n                that._toggleScrollButtons(scrollElement, backwardBtn, forwardBtn, isHorizontal);\n            };\n\n            var mouseenterHandler = function(e) {\n                if (!scrolling && !touchEvents) {\n                    scroll(e.data.direction);\n                    scrolling = true;\n                }\n            };\n\n            var mousedownHandler = function(e) {\n                var scrollValue = isHorizontal ? { \"scrollLeft\": e.data.direction } : { \"scrollTop\": e.data.direction };\n                touchEvents = isTouch(e) || isPointerTouch(e);\n                scrollElement.stop().animate(scrollValue, \"fast\", \"linear\", function() {\n                    if (!touchEvents) {\n                        $(e.currentTarget).trigger(MOUSEENTER);\n                    } else {\n                         that._toggleScrollButtons(scrollElement, backwardBtn, forwardBtn, isHorizontal);\n                         scrolling = true;\n                    }\n                });\n                scrolling = false;\n\n                e.stopPropagation();\n                e.preventDefault();\n            };\n\n            backwardBtn.on(MOUSEENTER + NS, { direction: backward }, mouseenterHandler)\n                .on(kendo.eventMap.down + NS, { direction: backwardDouble }, mousedownHandler);\n\n            forwardBtn.on(MOUSEENTER + NS, { direction: forward }, mouseenterHandler)\n                .on(kendo.eventMap.down + NS, { direction: forwardDouble }, mousedownHandler);\n\n            backwardBtn.add(forwardBtn)\n                .on(MOUSELEAVE + NS, function() {\n                    scrollElement.stop();\n                    scrolling = false;\n                    that._toggleScrollButtons(scrollElement, backwardBtn, forwardBtn, isHorizontal);\n                });\n\n            scrollElement.on(MOUSEWHEEL, function(e) {\n                if (!e.ctrlKey && !e.shiftKey && !e.altKey) {\n                    var wheelDelta = mousewheelDelta(e.originalEvent);\n                    var scrollSpeed = Math.abs(wheelDelta) * mouseWheelDistance;\n                    var value = (wheelDelta > 0 ? \"+=\" : \"-=\") + scrollSpeed;\n                    var scrollValue = isHorizontal ? { \"scrollLeft\": value } : { \"scrollTop\": value };\n\n                    that._closeChildPopups(scrollElement);\n\n                    scrollElement.finish().animate(scrollValue, \"fast\", \"linear\", function() {\n                        that._toggleScrollButtons(scrollElement, backwardBtn, forwardBtn, isHorizontal);\n                    });\n                    e.preventDefault();\n                }\n            });\n        },\n\n        isNumeric: function(n) {\n            return !isNaN(parseFloat(n)) && isFinite(n);\n        },\n\n        _toggleScrollButtons: function(scrollElement, backwardBtn, forwardBtn, horizontal) {\n            var currentScroll = horizontal ? kendo.scrollLeft(scrollElement) : scrollElement.scrollTop();\n            var scrollSize = horizontal ? SCROLLWIDTH : SCROLLHEIGHT;\n            var offset = horizontal ? OFFSETWIDTH : OFFSETHEIGHT;\n\n            backwardBtn.toggle(currentScroll !== 0);\n            forwardBtn.toggle(currentScroll < scrollElement[0][scrollSize] - scrollElement[0][offset] - 1);\n        },\n\n        setOptions: function(options) {\n            var animation = this.options.animation;\n\n            this._animations(options);\n\n            options.animation = extend(true, animation, options.animation);\n\n            if (\"dataSource\" in options) {\n                this._dataSource(options);\n            }\n\n            this._updateClasses();\n            this._wrapGroups();\n            this._reinitOverflow(options);\n\n            Widget.fn.setOptions.call(this, options);\n        },\n\n        destroy: function() {\n            var that = this;\n\n            Widget.fn.destroy.call(that);\n\n            that._detachMenuEventsHandlers();\n\n            that._destroyOverflow();\n\n            kendo.destroy(that.element);\n        },\n\n        enable: function(element, enable) {\n            this._toggleDisabled(element, enable !== false);\n\n            return this;\n        },\n\n        disable: function(element) {\n            this._toggleDisabled(element, false);\n\n            return this;\n        },\n\n        attemptGetItem: function(candidate) {\n            candidate = candidate || this.element;\n            var item = this.element.find(candidate);\n            var overflowWrapper = this._overflowWrapper();\n\n            if (item.length || candidate === this.element) {\n                return item;\n            } else if (overflowWrapper) {\n                return overflowWrapper.find(candidate);\n            } else {\n                return $();\n            }\n        },\n\n        append: function(item, referenceItem) {\n            referenceItem = this.attemptGetItem(referenceItem);\n\n            var inserted = this._insert(item, referenceItem, referenceItem.length ? this._childPopupElement(referenceItem).children().eq(0) : null);\n\n            each(inserted.items, function(i) {\n                inserted.group.append(this);\n                updateArrow(this);\n                storeItemSelectEventHandler(this, item[i] || item);\n            });\n\n            updateArrow(referenceItem);\n            updateFirstLast(inserted.group.find(\".k-first, .k-last\").add(inserted.items));\n            updateHasAriaPopup(getParentLiItems(inserted.group));\n\n            return this;\n        },\n\n        insertBefore: function(item, referenceItem) {\n            referenceItem = this.attemptGetItem(referenceItem);\n\n            var inserted = this._insert(item, referenceItem, referenceItem.parent());\n\n            each(inserted.items, function(i) {\n                referenceItem.before(this);\n                updateArrow(this);\n                updateFirstLast(this);\n                storeItemSelectEventHandler(this, item[i] || item);\n            });\n\n            updateFirstLast(referenceItem);\n\n            return this;\n        },\n\n        insertAfter: function(item, referenceItem) {\n            referenceItem = this.attemptGetItem(referenceItem);\n\n            var inserted = this._insert(item, referenceItem, referenceItem.parent());\n\n            each(inserted.items, function(i) {\n                referenceItem.after(this);\n                updateArrow(this);\n                updateFirstLast(this);\n                storeItemSelectEventHandler(this, item[i] || item);\n            });\n\n            updateFirstLast(referenceItem);\n\n            return this;\n        },\n\n        _insert: function(item, referenceItem, parent) {\n            var that = this,\n                items, groups;\n\n            if (!referenceItem || !referenceItem.length) {\n                parent = that.element;\n            }\n\n            var plain = $.isPlainObject(item) || item instanceof kendo.data.ObservableObject,\n                groupData = {\n                    firstLevel: parent.hasClass(MENU),\n                    horizontal: parent.hasClass(MENU + \"-horizontal\"),\n                    expanded: true,\n                    length: parent.children().length\n                };\n\n            if (referenceItem && !parent.length) {\n                parent = $(that.renderGroup({ group: groupData, options: that.options })).css(\"display\", \"none\").appendTo(referenceItem);\n                kendo.applyStylesFromKendoAttributes(parent, [\"display\"]);\n            }\n\n            if (plain || isArray(item) || item instanceof kendo.data.ObservableArray) { // is JSON\n                items = $($.map(plain ? [ item ] : item, function(value, idx) {\n                            if (typeof value === \"string\") {\n                                return $(value).get();\n                            } else {\n                                let itemElement = $(that.renderItem({\n                                    group: groupData,\n                                    item: extend(value, { index: idx })\n                                }));\n\n                                kendo.applyStylesFromKendoAttributes(itemElement, [\"display\"]);\n                                return itemElement.get();\n                            }\n                        }));\n            } else {\n                if (typeof item == \"string\" && item.charAt(0) != \"<\") {\n                    items = that.element.find(item);\n                } else {\n                    items = $(item);\n                }\n\n                groups = items.find(\"> ul\")\n                                .addClass(\"k-menu-group k-menu-group-md\")\n                                .attr(ROLE, \"menu\");\n\n                items = items.filter(\"li\");\n\n                items.add(groups.find(\"> li\")).each(function() {\n                    updateItemClasses(this);\n                });\n            }\n\n            parent = parent.is(popupSelector) ? parent.find(groupSelector).first() : parent;\n\n            return { items: items, group: parent };\n        },\n\n        remove: function(element) {\n            element = this.attemptGetItem(element);\n\n            var that = this,\n                parent = element.parentsUntil(that.element, allItemsSelector),\n                group = element.parent(\"ul:not(.k-menu)\");\n\n            element.remove();\n\n            if (group && !group.children(allItemsSelector).length) {\n                var parentItems = getParentLiItems(group);\n\n                var container = group.parent(animationContainerSelector);\n\n                if (container.length) {\n                    container.remove();\n                } else {\n                    group.remove();\n                }\n\n                updateHasAriaPopup(parentItems);\n            }\n\n            if (parent.length) {\n                parent = parent.eq(0);\n\n                updateArrow(parent);\n                updateFirstLast(parent);\n            }\n\n            return that;\n        },\n\n        _openAfterLoad: function(element, dataItem) {\n            var that = this;\n            if (dataItem.loaded()) {\n                that.open(element);\n                that._loading = false;\n            } else {\n                dataItem.one(CHANGE, function() {\n                    element.find(ICON_SELECTOR).removeClass(\"k-i-loading\");\n                    if (that._loading) {\n                        that.open(element);\n                        that._loading = false;\n                    }\n                });\n            }\n        },\n\n        open: function(element) {\n            var that = this;\n            var options = that.options;\n            var horizontal = options.orientation == \"horizontal\";\n            var direction = options.direction;\n            var isRtl = kendo.support.isRtl(that.wrapper);\n            var overflowWrapper = that._overflowWrapper();\n            element = (overflowWrapper || that.element).find(element);\n\n            var dataItem = that.dataSource && that.dataSource.getByUid(element.data(kendo.ns + \"uid\"));\n\n            if (dataItem && dataItem.hasChildren && !dataItem.loaded() && !that._loading) {\n                that._loading = true;\n                element.find(ICON_SELECTOR).addClass(\"k-i-loading\");\n                dataItem.load();\n                that._openAfterLoad(element, dataItem);\n                return;\n            }\n\n            if (/^(top|bottom|default)$/.test(direction)) {\n                if (isRtl) {\n                    direction = horizontal ? (direction + \" left\").replace(\"default\", \"bottom\") : \"left\";\n                } else {\n                    direction = horizontal ? (direction + \" right\").replace(\"default\", \"bottom\") : \"right\";\n                }\n            }\n\n            var visiblePopups = \">.k-popup:visible,>.k-animation-container > .k-child-animation-container > .k-menu-popup:visible\";\n            var closePopup = function() {\n                var popup = $(this).data(KENDOPOPUP);\n                if (popup) {\n                    // Use the built-in close method to play the hoverDelay from the options\n                    that.close($(this).closest(\"li.k-item\"), true);\n                }\n            };\n\n            element.siblings()\n                   .find(visiblePopups)\n                   .each(closePopup);\n\n            if (overflowWrapper) {\n                element.find(visiblePopups).each(closePopup);\n            }\n\n            if (that.options.openOnClick) {\n                that.clicked = true;\n            }\n\n            element.each(function() {\n                var li = $(this);\n\n                clearTimeout(li.data(TIMER));\n                clearTimeout(that._timerTimeout);\n                that._timerTimeout = setTimeout(function() {\n                    var div = li.find(\"> .k-menu-popup, > .k-animation-container > .k-child-animation-container > .k-menu-popup\").filter(\":hidden\").first();\n                    var popup;\n                    var overflowPopup;\n\n                    if (!div[0] && overflowWrapper) {\n                        overflowPopup = that._getPopup(li);\n                        div = overflowPopup && overflowPopup.element;\n                    }\n                    if (div.is(\":visible\")) {\n                        return;\n                    }\n\n                    if (div[0] && that._triggerEvent({ item: li[0], type: OPEN }) === false) {\n\n                        if (!div.find(\".k-menu-popup\")[0] && div.children(\".k-menu-group\").children(\".k-item\").length > 1) {\n                            var windowHeight = $(window).height(),\n                                setScrolling = function() {\n                                    div.css({ maxHeight: windowHeight - (kendo._outerHeight(div) - div.height()) - kendo.getShadows(div).bottom, overflow: \"auto\" });\n                                };\n\n                            setScrolling();\n                        } else {\n                            div.css({ maxHeight: \"\", overflow: \"visible\" });\n                        }\n\n                        li.data(ZINDEX, li.css(ZINDEX));\n                        var nextZindex = that.nextItemZIndex++;\n                        li.css(ZINDEX, nextZindex);\n\n                        if (that.options.scrollable) {\n                            li.parent().siblings(scrollButtonSelector).css({ zIndex: ++nextZindex });\n                        }\n\n                        popup = div.data(KENDOPOPUP);\n                        var root = li.parent().hasClass(MENU),\n                            parentHorizontal = root && horizontal,\n                            directions = parseDirection(direction, root, isRtl),\n                            effects = options.animation.open.effects,\n                            openEffects = effects !== undefined$1 ? effects : \"slideIn:\" + getEffectDirection(direction, root),\n                            collision;\n\n                        if (options.popupCollision !== null) {\n                            collision = options.popupCollision;\n                        } else if (parentHorizontal) {\n                            collision = \"fit\";\n                        } else {\n                            collision = \"fit flip\";\n                        }\n\n                        if (!popup) {\n                            popup = div.kendoPopup({\n                                activate: function() { that._triggerEvent({ item: this.wrapper.parent(), type: ACTIVATE }); },\n                                deactivate: function(e) {\n                                    that._closing = false;\n                                    e.sender.element // Restore opacity after fade.\n                                        .removeData(\"targetTransform\")\n                                        .css({ opacity: \"\" });\n                                    that._triggerEvent({ item: this.wrapper.parent(), type: DEACTIVATE });\n                                },\n                                origin: directions.origin,\n                                position: directions.position,\n                                collision: collision,\n                                anchor: li,\n                                appendTo: overflowWrapper || li,\n                                animation: {\n                                    open: extend(true, { effects: openEffects }, options.animation.open),\n                                    close: options.animation.close\n                                },\n                                open: that._popupOpen.bind(that),\n                                close: function(e) {\n                                    that._closing = e.sender.element;\n                                    var li = e.sender.wrapper.parent();\n\n                                    if (overflowWrapper) {\n                                        var popupId = e.sender.element.data(POPUP_ID_ATTR);\n                                        if (popupId) {\n                                            li = (overflowWrapper || that.element).find(popupOpenerSelector(popupId));\n                                        }\n                                        e.sender.wrapper.children(scrollButtonSelector).hide();\n                                    }\n\n                                    if (!that._triggerEvent({ item: li[0], type: CLOSE })) {\n                                        li.css(ZINDEX, li.data(ZINDEX));\n                                        li.removeData(ZINDEX);\n\n                                        if (that.options.scrollable) {\n                                            li.parent().siblings(scrollButtonSelector).css({ zIndex: \"\" });\n                                        }\n\n                                        if (touch || allPointers || kendo.support.mouseAndTouchPresent) {\n                                            li.removeClass(HOVERSTATE);\n                                            that._removeHoverItem();\n                                        }\n                                    } else {\n                                        e.preventDefault();\n                                    }\n                                }\n                            }).data(KENDOPOPUP);\n\n                            div.closest(animationContainerSelector).removeAttr(ROLE);\n                        } else {\n                            popup = div.data(KENDOPOPUP);\n                            popup.options.origin = directions.origin;\n                            popup.options.position = directions.position;\n                            popup.options.animation.open.effects = openEffects;\n                        }\n                        div.removeAttr(\"aria-hidden\");\n                        li.attr(ARIA_EXPANDED, true);\n\n                        that._configurePopupOverflow(popup, li);\n\n                        popup._hovered = true;\n                        popup.open();\n\n                        that._initPopupScrolling(popup);\n                    }\n\n                }, that.options.hoverDelay);\n\n                li.data(TIMER, that._timerTimeout);\n            });\n\n            return that;\n        },\n\n        _configurePopupOverflow: function(popup, popupOpener) {\n            var that = this;\n           if (that.options.scrollable) {\n                that._wrapPopupElement(popup);\n                if (!popupOpener.attr(\"data-groupparent\")) {\n                    var groupId = new Date().getTime();\n                    popupOpener.attr(\"data-groupparent\", groupId);\n                    popup.element.attr(\"data-group\", groupId);\n                }\n           }\n        },\n\n        _wrapPopupElement: function(popup) {\n            if (!popup.element.parent().is(childAnimationContainerSelector)) {\n                popup.wrapper = kendo.wrap(popup.element, popup.options.autosize)\n                    .css({\n                        overflow: \"hidden\",\n                        display: \"block\",\n                        position: \"absolute\"\n                    });\n            }\n        },\n\n        _initPopupScrolling: function(popup, isHorizontal, skipMouseEvents) {\n            var that = this;\n\n            if (that.options.scrollable && popup.element[0].scrollHeight > popup.element[0].offsetHeight) {\n                that._initPopupScrollButtons(popup, isHorizontal, skipMouseEvents);\n            }\n        },\n\n        _initPopupScrollButtons: function(popup, isHorizontal, skipMouseEvents) {\n            let that = this,\n                scrollButtons = popup.wrapper.children(scrollButtonSelector),\n                animation = that.options.animation,\n                timeout = ((animation && animation.open && animation.open.duration) || 0) + DELAY,\n                element = that.options.name === \"ContextMenu\" ? that.element : popup.element;\n            setTimeout(function() {\n                if (!scrollButtons.length) {\n                    let backwardBtn = $(that.templates.scrollButton({ direction: isHorizontal ? \"left\" : \"up\" }));\n                    let forwardBtn = $(that.templates.scrollButton({ direction: isHorizontal ? \"right\" : \"down\" }));\n\n                    scrollButtons = backwardBtn.add(forwardBtn).appendTo(popup.wrapper);\n\n                    that._initScrolling(element, backwardBtn, forwardBtn, isHorizontal);\n                    if (!skipMouseEvents) {\n                        scrollButtons.on(MOUSEENTER + NS, function() {\n                            let overflowWrapper = that._overflowWrapper();\n                            $(getChildPopups(popup.element, overflowWrapper)).each(function(i, p) {\n                                let popupOpener = overflowWrapper.find(popupOpenerSelector(p.data(POPUP_ID_ATTR)));\n                                that.close(popupOpener);\n                            });\n                        })\n                        .on(MOUSELEAVE + NS, function() {\n                            setTimeout(function() {\n                                if ($.isEmptyObject(that._openedPopups)) {\n                                    that._closeParentPopups(popup.element);\n                                }\n                            }, DELAY);\n                        });\n                    }\n                }\n                that._toggleScrollButtons(element, scrollButtons.first(), scrollButtons.last(), isHorizontal);\n            }, timeout);\n        },\n\n        _popupOpen: function(e) {\n            if (!this._keyTriggered) {\n                e.sender.element.find(\".\" + FOCUSEDSTATE).removeClass(FOCUSEDSTATE);\n            }\n            if (this.options.scrollable) {\n                this._setPopupHeight(e.sender);\n            }\n        },\n\n        _setPopupHeight: function(popup, isFixed) {\n            let popupElement = popup.element,\n                popups = popupElement.add(popupElement.parent(childAnimationContainerSelector));\n\n            popups.height((popupElement.hasClass(MENU) && this._initialHeight) || \"\");\n\n            let location = popup._location(isFixed),\n                windowHeight = $(window).height(),\n                popupOuterHeight = location.height,\n                popupOffsetTop = isFixed ? 0 : Math.max(location.top, 0),\n                scrollTop = isFixed ? 0 : parentsScroll(this._overflowWrapper()[0], \"scrollTop\"),\n                bottomScrollbar = window.innerHeight - windowHeight,\n                maxHeight = windowHeight - kendo.getShadows(popupElement).bottom + bottomScrollbar,\n                canFit = maxHeight + scrollTop > popupOuterHeight + popupOffsetTop;\n\n            if (!canFit) {\n                let popupViewportGap = windowHeight * 0.05, // 5% gap from the viewport.\n                    scrollButtonsHeight = $(scrollButtonSelector).outerHeight() * 2,\n                    height = Math.min(maxHeight, maxHeight - popupOffsetTop + scrollTop - popupViewportGap - scrollButtonsHeight);\n                popups.css({ overflow: \"hidden\", height: height + \"px\" });\n            }\n        },\n\n        close: function(items, dontClearClose) {\n            var that = this;\n            var overflowWrapper = that._overflowWrapper();\n            var element = (overflowWrapper || that.element);\n\n            items = element.find(items);\n\n            if (!items.length) {\n                items = element.find(\">.k-item\");\n            }\n\n            var hasChildPopupsHovered = function(currentPopup) {\n                var result = false;\n                if ($.isEmptyObject(that._openedPopups)) {\n                    return result;\n                }\n                $(getChildPopups(currentPopup, overflowWrapper)).each(function(i, popup) {\n                    result = !!that._openedPopups[popup.data(POPUP_ID_ATTR).toString()];\n                    return !result;\n                });\n                return result;\n            };\n\n            var isPopupMouseLeaved = function(opener) {\n                var groupId = opener.data(POPUP_OPENER_ATTR);\n                return (!overflowWrapper || !groupId || !that._openedPopups[groupId.toString()]);\n            };\n\n            items.each(function() {\n                var li = $(this);\n\n                li.attr(ARIA_EXPANDED, false);\n\n                if (!dontClearClose && that._isRootItem(li)) {\n                    that.clicked = false;\n                }\n\n                clearTimeout(li.data(TIMER));\n\n                li.data(TIMER, setTimeout(function() {\n                    var popup = that._getPopup(li);\n                    if (popup && (isPopupMouseLeaved(li) || that._forceClose)) {\n                        if (!that._forceClose && hasChildPopupsHovered(popup.element)) {\n                            return;\n                        }\n\n                        popup.close();\n                        popup.element.attr(\"aria-hidden\", true);\n\n                        if (overflowWrapper) {\n                            if (that._forceClose && items.last().is(li[0])) {\n                                delete that._forceClose;\n                            }\n                        }\n                    }\n                }, that.options.hoverDelay));\n            });\n\n            return that;\n        },\n\n        _getPopup: function(li) {\n            var that = this;\n            var popup = li.find(\".k-menu-popup:not(.k-list-container):not(.k-calendar-container):visible\").first().data(KENDOPOPUP);\n            var overflowWrapper = that._overflowWrapper();\n\n            if (!popup && overflowWrapper) {\n                var groupId = li.data(POPUP_OPENER_ATTR);\n                if (groupId) {\n                    var popupElement = overflowWrapper.find(popupGroupSelector(groupId));\n                    popup = popupElement.data(KENDOPOPUP);\n                }\n            }\n            return popup;\n        },\n\n        _toggleDisabled: function(items, enable) {\n            this.element.find(items).each(function() {\n                $(this)\n                    .toggleClass(DISABLEDSTATE, !enable)\n                    .attr(\"aria-disabled\", !enable);\n            });\n        },\n\n        _toggleHover: function(e) {\n            var target = $(kendo.eventTarget(e) || e.target).closest(allItemsSelector),\n                isEnter = e.type == MOUSEENTER || MOUSEDOWN.indexOf(e.type) !== -1;\n\n            target.siblings().removeClass(HOVERSTATE);\n\n            if (!target.parents(\"li.\" + DISABLEDSTATE).length) {\n                target.toggleClass(HOVERSTATE, isEnter || e.type == \"mousedown\" || e.type == \"pointerover\" || e.type == TOUCHSTART);\n            }\n\n            this._removeHoverItem();\n        },\n\n        _preventClose: function() {\n            if (!this.options.closeOnClick) {\n                this._closurePrevented = true;\n            }\n        },\n\n        _checkActiveElement: function(e) {\n            var that = this,\n                hoverItem = $(e ? e.currentTarget : this._hoverItem()),\n                target = that._findRootParent(hoverItem)[0];\n\n            if (!this._closurePrevented) {\n                setTimeout(function() {\n                    if (!document.hasFocus() || (!contains(target, kendo._activeElement()) && e && !contains(target, e.currentTarget))) {\n                        that.close(target);\n                    }\n                }, 0);\n            }\n\n            this._closurePrevented = false;\n        },\n\n        _removeHoverItem: function() {\n            var oldHoverItem = this._hoverItem();\n\n            if (oldHoverItem && oldHoverItem.hasClass(FOCUSEDSTATE)) {\n                oldHoverItem.removeClass(FOCUSEDSTATE);\n                this._oldHoverItem = null;\n            }\n        },\n\n        _wrapGroups: function() {\n            var that = this;\n\n            that.element.find(\"li > ul\")\n                .filter(function() {\n                    return !$(this).parent().hasClass(\"k-menu-popup\");\n                })\n                .wrap(\"<div class='k-menu-popup k-popup'></div>\")\n                .parent(\"div\")\n                .attr(\"aria-hidden\", that.element.is(\":visible\"))\n                .hide();\n\n            that.element.find(\"ul\").each(function() {\n                var group = $(this);\n                var id = kendo.guid();\n                group.attr(\"id\", id)\n                    .closest(\"li\")\n                    .attr(\"aria-controls\", id);\n            });\n        },\n\n        _updateClasses: function() {\n            var element = this.element,\n                nonContentGroupsSelector = \".k-menu-init div ul\",\n                items;\n\n            element.removeClass(\"k-menu-horizontal k-menu-vertical\");\n            element.addClass(\"k-widget k-reset k-header k-menu-init \" + MENU).addClass(MENU + \"-\" + this.options.orientation);\n\n            if (this.options.orientation === \"vertical\") {\n                element.attr(\"aria-orientation\", \"vertical\");\n            } else {\n                element.attr(\"aria-orientation\", \"horizontal\");\n            }\n\n            element.find(\"li > ul\")\n                   .filter(function() {\n                       return !kendo.support.matchesSelector.call(this, nonContentGroupsSelector);\n                   })\n                   .addClass(\"k-group k-menu-group k-menu-group-md\")\n                   .attr(ROLE, \"menu\")\n                   .parent(\"li\")\n                   .attr(\"aria-haspopup\", \"true\")\n                   .end()\n                   .find(\"li > div\")\n                   .addClass(\"k-content\")\n                   .attr(\"tabindex\", \"-1\"); // Capture the focus before the Menu\n\n            element.find(\"li[aria-haspopup]\").attr(ARIA_EXPANDED, false);\n\n            items = element.find(\"> li,.k-menu-group > li\");\n\n            element.removeClass(\"k-menu-init\");\n\n            items.each(function() {\n                updateItemClasses(this);\n            });\n        },\n\n        _mouseenter: function(e) {\n            var that = this;\n            var element = $(e.currentTarget);\n            var hasChildren = that._itemHasChildren(element);\n            var popupId = element.data(POPUP_OPENER_ATTR) || element.closest(popupSelector).data(POPUP_ID_ATTR);\n            var pointerTouch = isPointerTouch(e);\n            var isParentClosing = false;\n\n            if (popupId) {\n                that._openedPopups[popupId.toString()] = true;\n            }\n\n            if (that._closing) {\n                isParentClosing = !!that._closing.find(element).length;\n            }\n\n            if (isParentClosing || (e.delegateTarget != element.parents(menuSelector)[0] && e.delegateTarget != element.parents(\".k-menu-scroll-wrapper,.k-popups-wrapper\")[0])) {\n                return;\n            }\n\n            that._keyTriggered = false;\n\n            if ((that.options.openOnClick.rootMenuItems && that._isRootItem(element.closest(allItemsSelector))) ||\n                (that.options.openOnClick.subMenuItems && !that._isRootItem(element.closest(allItemsSelector)))) {\n                return;\n            }\n\n            if ((that.options.openOnClick === false ||\n                (that.options.openOnClick.rootMenuItems === false && that._isRootItem(element.closest(allItemsSelector))) ||\n                (that.options.openOnClick.subMenuItems === false && !that._isRootItem(element.closest(allItemsSelector))) || that.clicked) && !touch &&\n                !(pointerTouch && that._isRootItem(element.closest(allItemsSelector)))) {\n\n                if (!contains(e.currentTarget, e.relatedTarget) && hasChildren) {\n                    that.open(element);\n                }\n            }\n\n            if (that.options.openOnClick === true && that.clicked || touch) {\n                element.siblings().each(function(_, sibling) {\n                    that.close(sibling, true);\n                });\n            }\n        },\n\n        _mousedown: function(e) {\n            var that = this;\n            var element = $(e.currentTarget);\n            // needs to close subMenuItems\n            if (that.options.openOnClick.subMenuItems && !that._isRootItem(element) || touch) {\n                element.siblings().each(function(_, sibling) {\n                    that.close(sibling, true);\n                });\n            }\n        },\n\n        _mouseleave: function(e) {\n            var that = this;\n            var element = $(e.currentTarget);\n            var popupOpener = element.data(POPUP_OPENER_ATTR);\n            var hasChildren = element.children(popupSelector).length || popupOpener;\n            var $window = $(window);\n\n            if (popupOpener) {\n                delete that._openedPopups[popupOpener.toString()];\n            }\n\n            if (element.parentsUntil(animationContainerSelector, \".k-list-container,.k-calendar-container\")[0]) {\n                e.stopImmediatePropagation();\n                return;\n            }\n\n            if ((that.options.openOnClick === false || (!that.options.openOnClick.rootMenuItems && that._isRootItem(element)) ||\n                (!that.options.openOnClick.subMenuItems && !that._isRootItem(element))) && !touch && !isPointerTouch(e) &&\n                !contains(e.currentTarget, e.relatedTarget || e.target) && hasChildren &&\n                !contains(e.currentTarget, kendo._activeElement())) {\n                    that.close(element, true);\n                    that._loading = false;\n                    return;\n            }\n\n            // Detect if cursor goes outside the viewport of the browser\n            if ( (kendo.support.browser.msie && !e.toElement && !e.relatedTarget && !isPointerTouch(e)) ||\n                e.clientX < 0 || e.clientY < 0 ||\n                e.clientY > $window.height() ||\n                e.clientX > $window.width()) {\n                that.close(element);\n            }\n        },\n\n        _mouseenterPopup: function(e) {\n            var that = this;\n            var popupElement = $(e.currentTarget);\n\n            if (popupElement.parent().is(childAnimationContainerSelector)) {\n                 return;\n            }\n\n            popupElement = popupElement.find(popupSelector);\n            var popupId = popupElement.data(POPUP_ID_ATTR);\n\n            if (popupId) {\n                that._openedPopups[popupId.toString()] = true;\n            }\n        },\n\n        _mouseleavePopup: function(e) {\n            var that = this;\n            var popupElement = $(e.currentTarget);\n\n            if (!isPointerTouch(e) && popupElement.is(animationContainerSelector)) {\n                that._closePopups(popupElement.find(popupSelector));\n            }\n        },\n\n        _closePopups: function(rootPopup) {\n            var that = this;\n            var overflowWrapper = that._overflowWrapper();\n            var popupId = rootPopup.data(POPUP_ID_ATTR);\n\n            if (popupId) {\n                delete that._openedPopups[popupId.toString()];\n                var groupParent = overflowWrapper.find(popupOpenerSelector(popupId));\n\n                setTimeout(function() {\n                    if (that.options.openOnClick) {\n                        that._closeChildPopups(rootPopup);\n                    } else {\n                        if ($.isEmptyObject(that._openedPopups)) {\n                            var innerPopup = that._innerPopup(rootPopup);\n                            that._closeParentPopups(innerPopup);\n                        } else {\n                            that.close(groupParent, true);\n                        }\n                    }\n                }, 0);\n            }\n        },\n\n        _closeChildPopups: function(current) {\n            var that = this;\n            var overflowWrapper = that._overflowWrapper();\n            $(getChildPopups(current, overflowWrapper)).each(function() {\n                var popupOpener = overflowWrapper.find(popupOpenerSelector(this.data(POPUP_ID_ATTR)));\n                that.close(popupOpener, true);\n            });\n        },\n\n        _innerPopup: function(current) {\n            var overflowWrapper = this._overflowWrapper();\n            var popups = getChildPopups(current, overflowWrapper);\n            return popups[popups.length - 1] || current;\n        },\n\n        _closeParentPopups: function(current) {\n            var that = this;\n            var overflowWrapper = that._overflowWrapper();\n            var popupId = current.data(POPUP_ID_ATTR);\n            var popupOpener = overflowWrapper.find(popupOpenerSelector(popupId));\n            popupId = popupOpener.closest(popupSelector).data(POPUP_ID_ATTR);\n            that.close(popupOpener, true);\n            while (popupId && !that._openedPopups[popupId]) {\n                if (popupOpener.parent().is(menuSelector)) {\n                    break;\n                }\n                popupOpener = overflowWrapper.find(popupOpenerSelector(popupId));\n                that.close(popupOpener, true);\n                popupId = popupOpener.closest(popupSelector).data(POPUP_ID_ATTR);\n            }\n        },\n\n        _click: function(e) {\n            var that = this, openHandle,\n                options = that.options,\n                target = $(kendo.eventTarget(e)),\n                targetElement = target[0],\n                nodeName = target[0] ? target[0].nodeName.toUpperCase() : \"\",\n                formNode = (nodeName == \"INPUT\" || nodeName == \"SELECT\" || nodeName == \"BUTTON\" || nodeName == \"LABEL\"),\n                link = target.closest(LINK_SELECTOR),\n                element = target.closest(allItemsSelector),\n                itemElement = element[0],\n                href = link.attr(\"href\"), childGroup, childGroupVisible,\n                targetHref = target.attr(\"href\"),\n                sampleHref = $(\"<a href='#' />\").attr(\"href\"),\n                isLink = (!!href && href !== sampleHref),\n                isLocalLink = isLink && !!href.match(/^#/),\n                isTargetLink = (!!targetHref && targetHref !== sampleHref),\n                overflowWrapper = that._overflowWrapper(),\n                shouldCloseTheRootItem;\n\n            if (targetElement && (!targetElement.parentNode || !itemElement)) {\n                return;\n            }\n\n            if ($(target).closest(\"span\").hasClass('k-menu-expand-arrow-icon')) {\n                this._lastClickedElement = itemElement;\n            }\n\n            while (targetElement && targetElement.parentNode != itemElement) {\n                targetElement = targetElement.parentNode;\n            }\n\n            if ($(targetElement).is(templateSelector)) {\n                return;\n            }\n\n            if (element.hasClass(DISABLEDSTATE)) {\n                e.preventDefault();\n                return;\n            }\n\n            if (!e.handled && that._triggerSelect(target, itemElement) && !formNode) { // We shouldn't stop propagation and shoudn't prevent form elements.\n                e.preventDefault();\n            }\n\n            e.handled = true;\n\n            childGroup = element.children(popupSelector);\n            if (overflowWrapper) {\n                var childPopupId = element.data(POPUP_OPENER_ATTR);\n                if (childPopupId) {\n                    childGroup = overflowWrapper.find(popupGroupSelector(childPopupId));\n                }\n            }\n            childGroupVisible = childGroup.is(\":visible\");\n            shouldCloseTheRootItem = options.openOnClick && childGroupVisible && that._isRootItem(element);\n\n            if (options.closeOnClick && (!isLink || isLocalLink) && (!childGroup.length || shouldCloseTheRootItem)) {\n                element.removeClass(HOVERSTATE).css(\"height\"); // Force refresh for Chrome\n                that._oldHoverItem = that._findRootParent(element);\n                var item = that._parentsUntil(link, that.element, allItemsSelector);\n                that._forceClose = !!overflowWrapper;\n                that.close(item);\n                that.clicked = false;\n                if (\"MSPointerUp\".indexOf(e.type) != -1) {\n                    e.preventDefault();\n                }\n                return;\n            }\n\n            if (isLink && e.enterKey) {\n                link[0].click();\n            }\n\n            if (((!that._isRootItem(element) || options.openOnClick === false) && !options.openOnClick.subMenuItems) && !kendo.support.touch && !(isPointerTouch(e) && that._isRootItem(element.closest(allItemsSelector)))) {\n                return;\n            }\n\n            if (!isLink && !formNode && !isTargetLink) {\n                e.preventDefault();\n            }\n\n            that.clicked = true;\n            openHandle = childGroup.is(\":visible\") ? CLOSE : OPEN;\n            if (!options.closeOnClick && openHandle == CLOSE) {\n                return;\n            }\n            that[openHandle](element);\n        },\n\n        _parentsUntil: function(context, top, selector) {\n            var overflowWrapper = this._overflowWrapper();\n            if (!overflowWrapper) {\n                return context.parentsUntil(top, selector);\n            } else {\n                var parents = overflowMenuParents(context, overflowWrapper);\n                var result = [];\n                $(parents).each(function() {\n                    var parent = $(this);\n                    if (parent.is(top)) {\n                        return false;\n                    }\n                    if (parent.is(selector)) {\n                        result.push(this);\n                    }\n                });\n                return $(result);\n            }\n        },\n\n        _triggerSelect: function(target, itemElement) {\n            target = target.is(\".k-link\") ? target : target.closest(\".k-link\");\n\n            var selectHandler = target.data(\"selectHandler\"),\n                itemSelectEventData;\n\n            if (selectHandler) {\n                itemSelectEventData = this._getEventData(target);\n                selectHandler.call(this, itemSelectEventData);\n            }\n\n            var isSelectItemDefaultPrevented = itemSelectEventData && itemSelectEventData.isDefaultPrevented();\n            var isSelectDefaultPrevented = this._triggerEvent({ item: itemElement, type: SELECT });\n            return isSelectItemDefaultPrevented || isSelectDefaultPrevented;\n        },\n\n        _getEventData: function(target) {\n            var eventData = {\n                sender: this,\n                target: target,\n                _defaultPrevented: false,\n                preventDefault: function() {\n                    this._defaultPrevented = true;\n                },\n                isDefaultPrevented: function() {\n                    return this._defaultPrevented;\n                }\n            };\n            return eventData;\n        },\n\n        _documentClick: function(e) {\n            var that = this;\n            var target = $(e.target).closest(\"span\").hasClass('k-menu-expand-arrow-icon') ? that._lastClickedElement : e.target;\n\n            if (contains((that._overflowWrapper() || that.element)[0], target)) {\n                that._lastClickedElement = undefined$1;\n                return;\n            }\n\n            that.clicked = false;\n        },\n\n        _focus: function(e) {\n            var that = this,\n                target = e.target,\n                hoverItem = that._hoverItem(),\n                active = activeElement();\n\n            if (target != that.wrapper[0] && !$(target).is(\":kendoFocusable\")) {\n                e.stopPropagation();\n                $(target).closest(\".k-content\").closest(\".k-menu-popup\").closest(\".k-item\").addClass(FOCUSEDSTATE);\n                that.wrapper.trigger(\"focus\");\n                return;\n            }\n\n            if (active === e.currentTarget) {\n                if (hoverItem.length) {\n                    that._moveHover([], hoverItem);\n                } else if (!that._oldHoverItem) {\n                    that._moveHover([], that.wrapper.children().first());\n                }\n            }\n        },\n\n        _keydown: function(e) {\n            var that = this,\n                key = e.keyCode,\n                hoverItem = that._oldHoverItem,\n                target,\n                belongsToVertical,\n                hasChildren,\n                isRtl = kendo.support.isRtl(that.wrapper);\n\n            if (e.target != e.currentTarget && key != keys.ESC) {\n                return;\n            }\n\n            if (!hoverItem) {\n                hoverItem = that._oldHoverItem = that._hoverItem();\n            }\n\n            belongsToVertical = that._itemBelongsToVertival(hoverItem);\n            hasChildren = that._itemHasChildren(hoverItem);\n            that._keyTriggered = true;\n\n            if (key == keys.RIGHT) {\n                target = that[isRtl ? \"_itemLeft\" : \"_itemRight\"](hoverItem, belongsToVertical, hasChildren);\n            } else if (key == keys.LEFT) {\n                target = that[isRtl ? \"_itemRight\" : \"_itemLeft\"](hoverItem, belongsToVertical, hasChildren);\n            } else if (key == keys.DOWN) {\n                target = that._itemDown(hoverItem, belongsToVertical, hasChildren);\n            } else if (key == keys.UP) {\n                target = that._itemUp(hoverItem, belongsToVertical, hasChildren);\n            } else if (key == keys.HOME) {\n                that._moveHover(hoverItem, hoverItem.parent().children(\":visible\").first());\n                e.preventDefault();\n            } else if (key == keys.END) {\n                that._moveHover(hoverItem, hoverItem.parent().children(\":visible\").last());\n                e.preventDefault();\n            } else if (key == keys.ESC) {\n                target = that._itemEsc(hoverItem, belongsToVertical);\n            } else if (key == keys.ENTER || key == keys.SPACEBAR) {\n                target = hoverItem.children(\".k-link\");\n                if (target.length > 0) {\n                    that._click({ target: target[0], preventDefault: function() {}, enterKey: true });\n                    if (hasChildren && !hoverItem.hasClass(DISABLEDSTATE)) {\n                        that.open(hoverItem);\n                        that._moveHover(hoverItem, that._childPopupElement(hoverItem).children().find(\"li\").first());\n                    } else if (hoverItem.is(\"li\") && hoverItem.attr(\"role\") === \"menuitemcheckbox\") {\n                        hoverItem.find(\".k-checkbox\").attr(\"checked\", true);\n                    } else {\n                        that._moveHoverToRoot(hoverItem, that._findRootParent(hoverItem));\n                    }\n                }\n            } else if (key == keys.TAB) {\n                target = that._findRootParent(hoverItem);\n                that._moveHover(hoverItem, target);\n                that._checkActiveElement();\n                return;\n            }\n\n            if (target && target[0]) {\n                e.preventDefault();\n                e.stopPropagation(); // needed to handle ESC in column menu only when a root item is focused\n            }\n        },\n\n        _hoverItem: function() {\n            return this.wrapper.find(\".k-item.k-hover,.k-item.k-focus\").filter(\":visible\");\n        },\n\n        _itemBelongsToVertival: function(item) {\n            var menuIsVertical = this.wrapper.hasClass(\"k-menu-vertical\");\n\n            if (!item.length) {\n                return menuIsVertical;\n            }\n            return item.parent().hasClass(\"k-menu-group\") || menuIsVertical;\n        },\n\n        _itemHasChildren: function(item) {\n            if (!item || !item.length || !item[0].nodeType) {\n                return false;\n            }\n            return item.children(\".k-menu-group, .k-menu-popup, div.k-animation-container\").length > 0 ||\n                (!!item.data(POPUP_OPENER_ATTR) && !!this._overflowWrapper().children(popupGroupSelector(item.data(POPUP_OPENER_ATTR))));\n        },\n\n        _moveHover: function(item, nextItem) {\n            var that = this,\n                id = that._ariaId;\n\n            if (item.length && nextItem.length) {\n                item.removeClass(FOCUSEDSTATE);\n            }\n\n            if (nextItem.length) {\n                if (nextItem[0].id) {\n                    id = nextItem[0].id;\n                }\n\n                nextItem.addClass(FOCUSEDSTATE);\n                that._oldHoverItem = nextItem;\n\n                if (id) {\n                    that.element.removeAttr(\"aria-activedescendant\");\n                    $(\"#\" + id).removeAttr(\"id\");\n                    nextItem.attr(\"id\", id);\n                    that.element.attr(\"aria-activedescendant\", id);\n                }\n                that._scrollToItem(nextItem);\n            }\n        },\n\n        _moveHoverToRoot: function(item, nextItem) {\n            this._moveHover(item, nextItem);\n        },\n\n        _findRootParent: function(item) {\n            if (this._isRootItem(item)) {\n                return item;\n            } else {\n                return this._parentsUntil(item, menuSelector, \"li.k-item\").last();\n            }\n        },\n\n        _isRootItem: function(item) {\n            return item.parent().hasClass(MENU);\n        },\n\n        _itemRight: function(item, belongsToVertical, hasChildren) {\n            var that = this,\n                nextItem,\n                parentItem,\n                overflowWrapper;\n\n            if (!belongsToVertical) {\n                nextItem = item.nextAll(itemSelector + exclusionSelector).eq(0);\n                if (!nextItem.length) {\n                    nextItem = item.prevAll(itemSelector + exclusionSelector).last();\n                }\n                that.close(item);\n            } else if (hasChildren && !item.hasClass(DISABLEDSTATE)) {\n                that.open(item);\n                nextItem = that._childPopupElement(item).children().find(\"li\").first();\n            } else if (that.options.orientation == \"horizontal\") {\n                parentItem = that._findRootParent(item);\n                overflowWrapper = that._overflowWrapper();\n                if (overflowWrapper) {\n                    var rootPopup = itemPopup(parentItem, overflowWrapper);\n                    that._closeChildPopups(rootPopup);\n                }\n                that.close(parentItem);\n                nextItem = parentItem.nextAll(itemSelector + exclusionSelector).eq(0);\n            }\n\n            if (nextItem && !nextItem.length) {\n                nextItem = that.wrapper.children(\".k-item\").first();\n            } else if (!nextItem) {\n                nextItem = [];\n            }\n\n            that._moveHover(item, nextItem);\n            return nextItem;\n        },\n\n        _itemLeft: function(item, belongsToVertical) {\n            var that = this,\n                nextItem,\n                overflowWrapper;\n\n            if (!belongsToVertical) {\n                nextItem = item.prevAll(itemSelector + exclusionSelector).eq(0);\n                if (!nextItem.length) {\n                    nextItem = item.nextAll(itemSelector + exclusionSelector).last();\n                }\n                that.close(item);\n            } else {\n                nextItem = item.parent().closest(\".k-item\");\n                overflowWrapper = that._overflowWrapper();\n                if (!nextItem.length && overflowWrapper) {\n                    nextItem = popupParentItem(item.parent(), overflowWrapper);\n                }\n                that.close(nextItem);\n                if (that._isRootItem(nextItem) && that.options.orientation == \"horizontal\") {\n                    nextItem = nextItem.prevAll(itemSelector + exclusionSelector).eq(0);\n                }\n            }\n\n            if (!nextItem.length) {\n                nextItem = that.wrapper.children(\".k-item\").last();\n            }\n\n            that._moveHover(item, nextItem);\n            return nextItem;\n        },\n\n        _itemDown: function(item, belongsToVertical, hasChildren) {\n            var that = this,\n                nextItem;\n\n            if (!belongsToVertical) {\n                if (!hasChildren || item.hasClass(DISABLEDSTATE)) {\n                    return;\n                } else {\n                    that.open(item);\n                    nextItem = that._childPopupElement(item).children().find(\"li\").first();\n                }\n            } else {\n                nextItem = item.nextAll(itemSelector + exclusionSelector).eq(0);\n            }\n\n            if (!nextItem.length && item.length) {\n                nextItem = item.parent().children(\":visible\").first();\n            } else if (!item.length) {\n                nextItem = that.wrapper.children(\".k-item\").first();\n            }\n\n            that._moveHover(item, nextItem);\n            return nextItem;\n        },\n\n        _itemUp: function(item, belongsToVertical) {\n            var that = this,\n                nextItem;\n\n            if (!belongsToVertical) {\n                return;\n            } else {\n                nextItem = item.prevAll(itemSelector + exclusionSelector).eq(0);\n            }\n\n            if (!nextItem.length && item.length) {\n                nextItem = item.parent().children(\":visible\").last();\n            } else if (!item.length) {\n                nextItem = that.wrapper.children(\".k-item\").last();\n            }\n\n            that._moveHover(item, nextItem);\n            return nextItem;\n        },\n\n        _scrollToItem: function(item) {\n            var that = this;\n            if (that.options.scrollable && item && item.length) {\n                var ul = item.parent();\n                var isHorizontal = ul.hasClass(MENU) ? that.options.orientation == \"horizontal\" : false;\n                var scrollDir = isHorizontal ? \"scrollLeft\" : \"scrollTop\";\n                var getSize = isHorizontal ? kendo._outerWidth : kendo._outerHeight;\n                var currentScrollOffset = ul[scrollDir]();\n                var itemSize = getSize(item);\n                var itemOffset = item[0][isHorizontal ? \"offsetLeft\" : \"offsetTop\"];\n                var ulSize = getSize(ul);\n                var scrollButtons = ul.siblings(scrollButtonSelector);\n                var scrollButtonSize = scrollButtons.length ? getSize(scrollButtons.first()) : 0;\n                var itemPosition;\n\n                if (currentScrollOffset + ulSize < itemOffset + itemSize + scrollButtonSize) {\n                    itemPosition = itemOffset + itemSize - ulSize + scrollButtonSize;\n                } else if (currentScrollOffset > itemOffset - scrollButtonSize) {\n                    itemPosition = itemOffset - scrollButtonSize;\n                }\n\n                if (!isNaN(itemPosition)) {\n                    var scrolling = {};\n                    scrolling[scrollDir] = itemPosition;\n                    ul.finish().animate(scrolling, \"fast\", \"linear\", function() {\n                        that._toggleScrollButtons(ul, scrollButtons.first(), scrollButtons.last(), isHorizontal);\n                    });\n                }\n            }\n        },\n\n        _itemEsc: function(item, belongsToVertical) {\n            var that = this,\n                nextItem, groupId;\n\n            if (!belongsToVertical) {\n                return item;\n            } else {\n                nextItem = item.parent().closest(\".k-item\");\n\n                if (nextItem.length === 0) {\n                    groupId = item.closest(\".k-menu-popup\").data(\"group\");\n                    nextItem = that.wrapper.find(\".k-item[data-groupparent='\" + groupId + \"']\");\n                }\n\n                that.close(nextItem);\n                that._moveHover(item, nextItem);\n            }\n\n            return nextItem;\n        },\n\n        _childPopupElement: function(item) {\n            var popupElement = item.find(\".k-menu-popup\");\n            var wrapper = this._overflowWrapper();\n            if (!popupElement.length && wrapper) {\n                popupElement = itemPopup(item, wrapper);\n            }\n            return popupElement;\n        },\n\n        _triggerEvent: function(e) {\n            var that = this;\n\n            return that.trigger(e.type, { type: e.type, item: e.item });\n        },\n\n        _focusHandler: function(e) {\n            var that = this,\n                item = $(kendo.eventTarget(e)).closest(allItemsSelector);\n\n            if (item.hasClass(DISABLEDSTATE)) {\n                return;\n            }\n\n            setTimeout(function() {\n                that._moveHover([], item);\n                if (item.children(\".k-content\")[0]) {\n                    item.parent().closest(\".k-item\").removeClass(FOCUSEDSTATE);\n                }\n            }, 200);\n        },\n\n        _animations: function(options) {\n            if (options && (\"animation\" in options) && !options.animation) {\n                options.animation = { open: { effects: {} }, close: { hide: true, effects: {} } };\n            }\n        },\n        _dataSource: function(options) {\n            var that = this,\n                dataSource = options ? options.dataSource : that.options.dataSource;\n\n            if (!dataSource) {\n                return;\n            }\n\n            dataSource = isArray(dataSource) ? { data: dataSource } : dataSource;\n\n            that._unbindDataSource();\n\n            if (!dataSource.fields) {\n                dataSource.fields = [\n                    { field: \"uid\" },\n                    { field: \"text\" },\n                    { field: \"url\" },\n                    { field: \"cssClass\" },\n                    { field: \"spriteCssClass\" },\n                    { field: \"imageUrl\" },\n                    { field: \"imageAttr\" },\n                    { field: \"attr\" },\n                    { field: \"contentAttr\" },\n                    { field: \"content\" },\n                    { field: \"encoded\" },\n                    { field: \"items\" },\n                    { field: \"select\" }\n                ];\n            }\n\n            that.dataSource = HierarchicalDataSource.create(dataSource);\n\n            that._bindDataSource();\n\n            that.dataSource.fetch();\n        },\n\n        _bindDataSource: function() {\n            this._refreshHandler = this.refresh.bind(this);\n            this._errorHandler = this._error.bind(this);\n\n            this.dataSource.bind(CHANGE, this._refreshHandler);\n            this.dataSource.bind(ERROR, this._errorHandler);\n        },\n\n        _unbindDataSource: function() {\n            var dataSource = this.dataSource;\n\n            if (dataSource) {\n                dataSource.unbind(CHANGE, this._refreshHandler);\n                dataSource.unbind(ERROR, this._errorHandler);\n            }\n        },\n\n        _error: function() {\n\n        },\n\n        findByUid: function(uid) {\n            var wrapperElement = this._overflowWrapper() || this.element;\n            return wrapperElement.find(\"[\" + kendo.attr(\"uid\") + \"=\" + uid + \"]\");\n        },\n\n        refresh: function(ev) {\n            var that = this;\n            var node = ev.node;\n            var action = ev.action;\n            var parentElement = node ? that.findByUid(node.uid) : that.element;\n            var itemsToUpdate = ev.items;\n            var index = ev.index;\n            var updateProxy = that._updateItem.bind(that);\n            var removeProxy = that._removeItem.bind(that);\n\n            if (action == \"add\") {\n                that._appendItems(itemsToUpdate, index, parentElement);\n            } else if (action == \"remove\") {\n                itemsToUpdate.forEach(removeProxy);\n            } else if (action == \"itemchange\") {\n                itemsToUpdate.forEach(updateProxy);\n            } else if (action === \"itemloaded\") {\n                that.append(ev.items, parentElement);\n            } else {\n                this._initData();\n            }\n\n            this.trigger(DATABOUND, { item: parentElement, dataItem: node });\n        },\n\n        _appendItems: function(items, index, parent) {\n            var that = this;\n            var referenceItem = parent.find(itemSelector).eq(index);\n\n            if (referenceItem.length) {\n                that.insertBefore(items, referenceItem);\n            } else {\n                that.append(items, parent);\n            }\n        },\n\n        _removeItem: function(item) {\n            var that = this;\n            var element = that.findByUid(item.uid);\n            that.remove(element);\n        },\n\n        _updateItem: function(item) {\n            var that = this;\n            var element = that.findByUid(item.uid);\n            var nextElement = element.next();\n            var parentNode = item.parentNode();\n\n            that.remove(element);\n\n            if (nextElement.length) {\n                that.insertBefore(item, nextElement);\n            } else {\n                that.append(item, parentNode && that.findByUid(parentNode.uid));\n            }\n        },\n\n        _accessors: function() {\n            var that = this,\n                options = that.options,\n                i, field, textField,\n                element = that.element;\n\n            for (i in bindings) {\n                field = options[bindings[i]];\n                textField = element.attr(kendo.attr(i + \"-field\"));\n\n                if (!field && textField) {\n                    field = textField;\n                }\n\n                if (!field) {\n                    field = i;\n                }\n\n                if (!isArray(field)) {\n                    field = [field];\n                }\n\n                options[bindings[i]] = field;\n            }\n        },\n\n        _fieldAccessor: function(fieldName) {\n            var fieldBindings = this.options[bindings[fieldName]] || [],\n                count = fieldBindings.length;\n\n            if (count === 0) {\n                return (function(item) { return item[fieldName]; });\n            } else {\n                return (function(item) {\n                    var levels = $.map(fieldBindings, kendo.getter);\n                    if (item.level) {\n                        return levels[Math.min(item.level(), count - 1)](item);\n                    } else {\n                        return levels[count - 1](item);\n                    }\n                });\n            }\n        },\n\n        _templates: function() {\n            var that = this,\n                options = that.options,\n                fieldAccessor = that._fieldAccessor.bind(that);\n\n            if (options.template && typeof options.template == STRING) {\n                options.template = template(options.template);\n            } else if (!options.template) {\n                options.template = template((data) => {\n                    var text = fieldAccessor(\"text\")(data.item);\n                    if (!(typeof data.item.encoded != 'undefined' && data.item.encoded === false)) {\n                        text = encode(text);\n                    }\n\n                    return `<span class='k-menu-link-text' role='none'>${text}</span>`;\n                });\n            }\n\n            that.templates = {\n                content: template((data) => {\n                    var item = data.item;\n                    var contentHtml = fieldAccessor(\"content\")(item);\n                    var contCssAttributes = data.contentCssAttributes(item.toJSON ? item.toJSON() : item);\n                    return `<div class='${data.groupWrapperCssClass(data.group)}' ${data.groupAttributes(data.group)}><div ${contCssAttributes} tabindex='-1'>${contentHtml || ''}</div></div>`;\n                }),\n                group: template((data) =>\n                    `<div class='${data.groupWrapperCssClass(data.group)}' ${data.groupAttributes(data.group)}>` +\n                    `<ul class='${data.groupCssClass(data.group)}' id='${data.groupId}' role='menu'>` +\n                    `${data.renderItems(data)}` +\n                    \"</ul>\" +\n                    \"</div>\"\n                ),\n                itemWrapper: template((data) => {\n                    var item = data.item;\n                    var url = fieldAccessor(\"url\")(item);\n                    var imageUrl = fieldAccessor(\"imageUrl\")(item);\n                    var imgAttributes = fieldAccessor(\"imageAttr\")(item);\n                    var tag = url ? 'a' : 'span';\n\n                    return `<${tag} class='${rendering.textClass(item)}' role='none' ${url ? `href='${url}'` : ''} >` +\n                        (imageUrl ? `<img ${rendering.imageCssAttributes(imgAttributes)}  alt='' src='${imageUrl}' />` : '') +\n                        this.templates.sprite(item) +\n                        this.options.template(data) +\n                        data.arrow(data) +\n                        `</${tag}>`;\n                }),\n                item: template((data) => {\n                    var item = data.item,\n                        menu = data.menu,\n                        group = data.group,\n                        subGroup = data.subGroup;\n                    var contentHtml = fieldAccessor(\"content\")(item);\n                    var groupId = kendo.guid();\n                    return `<li class='${rendering.wrapperCssClass(group, item)}' ${(item.hasChildren || item.items || item.content) ? 'aria-controls=\"' + groupId + '\"' : '' } ${rendering.itemCssAttributes(item.toJSON ? item.toJSON() : item)} role='menuitem'  ${item.items || item.content ? \"aria-haspopup='true'\" : ''}` +\n                        `${item.enabled === false ? \"aria-disabled='true'\" : ''}` +\n                        kendo.attr(\"uid\") + `='${item.uid}' ` +\n                        ((item.items && item.items.length > 0) || item.content ?\n                            (item.expanded ?\n                                \" aria-expanded='true'\"\n                                : \" aria-expanded='false'\")\n                            : '') +\n                        \">\" +\n                        `${!item.separator ? this.templates.itemWrapper(data) : ''}` +\n                        ((item.hasChildren || item.items) ?\n                            `${subGroup({ items: item.items, menu: menu, group: { expanded: item.expanded }, groupId: groupId })}`\n                            : (item.content || item.contentUrl || contentHtml ?\n                            `${data.renderContent($.extend({}, data, { group: { expanded: item.expanded } }))}`\n                            : '')\n                        ) +\n                        \"</li>\";\n                }),\n                scrollButton: template(({ direction }) =>\n                    `<span class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-icon-button k-menu-scroll-button k-scroll-${direction}' unselectable='on'>` +\n                        kendo.ui.icon({ icon: `caret-alt-${direction}`, iconClass: \"k-button-icon\" }) +\n                    \"</span>\"\n                ),\n                arrow: template(({ item, group }) =>\n                    `<span aria-hidden='true' class='k-menu-expand-arrow'>${kendo.ui.icon({ icon: group.horizontal ? \"caret-alt-down\" : \"caret-alt-right\", iconClass: \"k-menu-expand-arrow-icon\" })}</span>`),\n                sprite: template((data) => {\n                    var spriteCssClass = fieldAccessor(\"spriteCssClass\")(data);\n                    if (spriteCssClass) {\n                        return `<span class='k-sprite ${spriteCssClass}'></span>`;\n                    }\n                    return '';\n                }),\n                empty: template(() => \"\")\n            };\n        },\n\n        renderItem: function(options) {\n            var that = this;\n            options = extend({ menu: that, group: {} }, options);\n\n            var empty = that.templates.empty,\n                item = options.item;\n\n            return that.templates.item(extend(options, {\n                separator: item.separator ? that.templates.separator : empty,\n                sprite: that.templates.sprite,\n                itemWrapper: that.templates.itemWrapper,\n                renderContent: that.renderContent,\n                arrow: item.items || item.content || item[that.options.dataContentField[0]] ? that.templates.arrow : empty,\n                subGroup: that.renderGroup.bind(that)\n            }, rendering));\n        },\n\n        renderGroup: function(options) {\n            var that = this;\n            var templates = that.templates || options.menu.templates;\n\n            return templates.group(extend({\n                renderItems: function(options) {\n                    var html = \"\",\n                        i = 0,\n                        items = options.items,\n                        len = items ? items.length : 0,\n                        group = extend({ length: len }, options.group);\n\n                    for (; i < len; i++) {\n                        html += options.menu.renderItem(extend(options, {\n                            group: group,\n                            item: extend({ index: i }, items[i])\n                        }));\n                    }\n\n                    return html;\n                }\n            }, options, rendering));\n        },\n\n        renderContent: function(options) {\n            return options.menu.templates.content(extend(options, rendering));\n        }\n    });\n\n    var ContextMenu = Menu.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Menu.fn.init.call(that, element, options);\n\n            that.element.attr(ROLE, \"menu\");\n\n            that._marker = kendo.guid().substring(0, 8);\n\n            that.target = $(that.options.target);\n\n            that._popup();\n            that._wire();\n        },\n\n        _initOverflow: function(options) {\n            var that = this;\n            if (options.scrollable && !that._overflowWrapper()) {\n                that._openedPopups = {};\n\n                that._popupsWrapper = (that.element.parent().is(childAnimationContainerSelector) ? that.element.closes(animationContainerSelector) : that.element)\n                    .wrap(\"<div class='k-menu-scroll-wrapper \" + options.orientation + \"'></div>\").parent();\n\n                if (that.options.orientation == \"horizontal\") {\n                    removeSpacesBetweenItems(that.element);\n                }\n\n                if (options.appendTo) {\n                    options.appendTo = $(options.appendTo);\n                    options.appendTo.append(that._popupsWrapper);\n                }\n\n                that._initialHeight = that.element[0].style.height;\n                that._initialWidth = that.element[0].style.width;\n            }\n        },\n\n        options: {\n            name: \"ContextMenu\",\n            filter: null,\n            showOn: \"contextmenu\",\n            orientation: \"vertical\",\n            alignToAnchor: false,\n            copyAnchorStyles: true,\n            target: \"body\",\n            origin: undefined$1,\n            position: undefined$1\n        },\n\n        events: [\n            OPEN,\n            CLOSE,\n            ACTIVATE,\n            DEACTIVATE,\n            SELECT\n        ],\n\n        setOptions: function(options) {\n            var that = this;\n\n            Menu.fn.setOptions.call(that, options);\n\n            that.target.off(that.showOn + NS + that._marker, that._showProxy);\n\n            if (that.userEvents) {\n                that.userEvents.destroy();\n            }\n\n            that.target = $(that.options.target);\n            if (options.orientation && that.popup.wrapper[0]) {\n                that.popup.element.unwrap();\n            }\n\n            that._wire();\n\n            Menu.fn.setOptions.call(this, options);\n        },\n\n        destroy: function() {\n            var that = this;\n\n            that.target.off(that.options.showOn + NS + that._marker);\n            DOCUMENT_ELEMENT.off(kendo.support.mousedown + NS + that._marker, that._closeProxy);\n\n            if (that.userEvents) {\n                that.userEvents.destroy();\n            }\n\n            Menu.fn.destroy.call(that);\n\n            if (that.popup) {\n                that.popup.destroy();\n            }\n        },\n\n        open: function(x, y) {\n            var that = this;\n\n            x = $(x)[0];\n\n            if (contains(that.element[0], $(x)[0]) || that._itemHasChildren($(x))) { // call parent open for children elements\n                Menu.fn.open.call(that, x);\n            } else {\n                if (that._triggerEvent({ item: that.element, type: OPEN }) === false) {\n                    if (that.popup.visible() && that.options.filter) {\n                        that.popup.close(true);\n                        that.popup.element.parent().kendoStop(true);\n                    }\n\n                    if (!that._triggerFocusOnActivate) {\n                        that._triggerFocusOnActivate = that._focusMenu.bind(that);\n                    }\n                    that.bind(ACTIVATE, that._triggerFocusOnActivate);\n\n                    if (y !== undefined$1) {\n                        var overflowWrapper = that._overflowWrapper();\n                        if (overflowWrapper) {\n                            var offset = overflowWrapper.offset();\n                            x -= offset.left;\n                            y -= offset.top;\n                        }\n                        that.popup.wrapper.hide();\n                        that._configurePopupScrolling(x, y);\n                        that.popup.open(x, y);\n                    } else {\n                        that.popup.options.anchor = (x ? x : that.popup.anchor) || that.target;\n                        that.popup.element.kendoStop(true);\n                        that._configurePopupScrolling();\n                        that.popup.open();\n                    }\n\n                    DOCUMENT_ELEMENT.off(that.popup.downEvent, that.popup._mousedownProxy);\n                    DOCUMENT_ELEMENT\n                        .on(kendo.support.mousedown + NS + that._marker, that._closeProxy);\n                }\n            }\n\n            return that;\n        },\n\n        _focusMenu: function() {\n            var that = this;\n\n            that.unbind(ACTIVATE, that._triggerFocusOnActivate);\n            that.element.trigger(\"focus\");\n        },\n\n        _configurePopupScrolling: function(x, y) {\n            var that = this;\n            var popup = that.popup;\n            var isHorizontal = that.options.orientation == \"horizontal\";\n\n            if (that.options.scrollable) {\n                that._wrapPopupElement(popup);\n\n                popup.element.parent().css({\n                    position: \"\",\n                    height: \"\"\n                });\n\n                popup.element.css({\n                    visibility: \"hidden\",\n                    display: \"\",\n                    position: \"\"\n                });\n\n                if (isHorizontal) {\n                    that._setPopupWidth(popup, isNaN(x) ? undefined$1 : { isFixed: true, x: x, y: y });\n                } else {\n                    that._setPopupHeight(popup, isNaN(x) ? undefined$1 : { isFixed: true, x: x, y: y });\n                }\n\n                popup.element.css({\n                    visibility: \"\",\n                    display: \"none\",\n                    position: \"absolute\"\n                });\n\n                that._initPopupScrollButtons(popup, isHorizontal, true);\n                popup.element.siblings(scrollButtonSelector).hide();\n            }\n        },\n\n        _setPopupWidth: function(popup, isFixed) {\n            var popupElement = popup.element;\n            var popups = popupElement.add(popupElement.parent(childAnimationContainerSelector));\n\n            popups.width(this._initialWidth || \"\");\n\n            var location = popup._location(isFixed);\n            var windowWidth = $(window).width();\n            var popupOuterWidth = location.width;\n            var popupOffsetLeft = Math.max(location.left, 0);\n            var scrollLeft = isFixed ? 0 : parentsScroll(this._overflowWrapper()[0], \"scrollLeft\");\n            var shadow = kendo.getShadows(popupElement);\n            var maxWidth = windowWidth - shadow.left - shadow.right;\n            var canFit = maxWidth + scrollLeft > popupOuterWidth + popupOffsetLeft;\n\n            if (!canFit) {\n                popups.css({ overflow: \"hidden\", width: (maxWidth - popupOffsetLeft + scrollLeft) + \"px\" });\n            }\n        },\n\n        close: function() {\n            var that = this;\n\n            if (contains(that.element[0], $(arguments[0])[0]) || that._itemHasChildren(arguments[0])) {\n                Menu.fn.close.call(that, arguments[0]);\n            } else {\n                if (that.popup.visible()) {\n                    if (that._triggerEvent({ item: that.element, type: CLOSE }) === false) {\n                        that._removeHoverItem();\n                        that.element.find(\"#\" + that._ariaId).removeAttr(\"id\");\n                        that.popup.close();\n                        DOCUMENT_ELEMENT.off(kendo.support.mousedown + NS + that._marker, that._closeProxy);\n                        that.unbind(SELECT, that._closeTimeoutProxy);\n                        that.popup.options.anchor.focus();\n                    }\n                }\n            }\n        },\n\n        _showHandler: function(e) {\n            var ev = e, offset,\n                that = this,\n                options = that.options,\n                target = kendo.support.mobileOS ? $(ev.target) : $(ev.currentTarget);\n\n            if (e.event) {\n                ev = e.event;\n                ev.pageX = e.x.location;\n                ev.pageY = e.y.location;\n            }\n\n            if (contains(that.element[0], e.relatedTarget || e.target)) {\n                return;\n            }\n\n            that._eventOrigin = ev;\n\n            ev.preventDefault();\n            ev.stopImmediatePropagation();\n\n            that.element.find(\".\" + FOCUSEDSTATE).removeClass(FOCUSEDSTATE);\n\n            if ((options.filter && target.is(options.filter)) || !options.filter) {\n                if (options.alignToAnchor) {\n                    that.popup.options.anchor = ev.currentTarget;\n                    that.open(ev.currentTarget);\n                } else {\n                    that.popup.options.anchor = ev.currentTarget;\n\n                    if (that._targetChild) {\n                        offset = that.target.offset();\n                        that.open(ev.pageX - offset.left, ev.pageY - offset.top);\n                    } else {\n                        that.open(ev.pageX, ev.pageY);\n                    }\n                }\n            }\n        },\n\n        _closeHandler: function(e) {\n            var that = this,\n                target = $(e.relatedTarget || e.target),\n                sameTarget = target.closest(that.target.selector)[0] == that.target[0],\n                item = target.closest(itemSelector),\n                children = that._itemHasChildren(item),\n                overflowWrapper = that._overflowWrapper(),\n                containment = contains(that.element[0], target[0]) || (overflowWrapper && contains(overflowWrapper[0], target[0]));\n\n            that._eventOrigin = e;\n\n            var normalClick = e.which !== 3;\n\n            if (that.popup.visible() && ((normalClick && sameTarget) || !sameTarget) && ((that.options.closeOnClick && !children && containment) || !containment)) {\n                if (containment) {\n                    this.unbind(SELECT, this._closeTimeoutProxy);\n                    that.bind(SELECT, that._closeTimeoutProxy);\n                } else {\n                    that.close();\n                }\n            }\n        },\n\n        _wire: function() {\n            var that = this,\n                options = that.options,\n                target = that.target;\n\n            that._preventProxy = null;\n            that._showProxy = that._showHandler.bind(that);\n            that._closeProxy = that._closeHandler.bind(that);\n            that._closeTimeoutProxy = that.close.bind(that);\n\n            if (target[0]) {\n                if (kendo.support.mobileOS && options.showOn == \"contextmenu\") {\n                    that.userEvents = new kendo.UserEvents(target, {\n                        filter: options.filter,\n                        allowSelection: false\n                    });\n\n                    that._preventProxy = function() { return false; };\n\n                    that.userEvents.bind(\"hold\", that._showProxy);\n                }\n\n                if (options.filter) {\n                    target.on(options.showOn + NS + that._marker, options.filter, that._preventProxy || that._showProxy);\n                } else {\n                    target.on(options.showOn + NS + that._marker, that._preventProxy || that._showProxy);\n                }\n\n                target.on(\"keydown\", (e) => {\n                    if (e.keyCode === kendo.keys.F10 && e.shiftKey) {\n                        e.preventDefault();\n                        that.open(e.target);\n                    }\n                });\n            }\n        },\n\n        _triggerEvent: function(e) {\n            var that = this,\n                anchor = $(that.popup.options.anchor)[0],\n                origin = that._eventOrigin;\n\n            that._eventOrigin = undefined$1;\n\n            return that.trigger(e.type, extend({ type: e.type, item: e.item || this.element[0], target: anchor }, origin ? { event: origin } : {} ));\n        },\n\n        _popup: function() {\n            var that = this;\n            var overflowWrapper = that._overflowWrapper();\n            var contextMenuElement = that.element.addClass(\"k-context-menu\");\n\n            that._triggerProxy = that._triggerEvent.bind(that);\n\n            that.popup = $(\"<div></div>\")\n                            .append(contextMenuElement)\n                            .kendoPopup({\n                                origin: that.options.origin,\n                                position: that.options.position,\n                                autosize: that.options.orientation === \"horizontal\",\n                                anchor: that.target || \"body\",\n                                copyAnchorStyles: that.options.copyAnchorStyles,\n                                collision: that.options.popupCollision || \"fit\",\n                                animation: that.options.animation,\n                                activate: that._triggerProxy,\n                                deactivate: that._triggerProxy,\n                                appendTo: overflowWrapper || that.options.appendTo,\n                                close: !overflowWrapper ? $.noop : function(e) {\n                                    $(getChildPopups(e.sender.element, overflowWrapper)).each(function(i, p) {\n                                        var popup = p.data(KENDOPOPUP);\n                                        if (popup) {\n                                            popup.close(true);\n                                        }\n                                    });\n                                }\n                            }).data(KENDOPOPUP);\n\n            that._targetChild = contains(that.target[0], that.popup.element[0]);\n        },\n\n        _moveHoverToRoot: function(item, nextItem) {\n            this._moveHover(item, nextItem);\n            this.close();\n        },\n\n        _focus: function(e) {\n            var hoverItem = this._oldHoverItem = this._hoverItem() || [];\n\n            Menu.fn._focus.call(this, e);\n\n            if (activeElement() === e.currentTarget) {\n                this._moveHover(hoverItem, this.wrapper.children().filter(\":visible\").not(\".k-separator\").first());\n            }\n        }\n    });\n\n    ui.plugin(Menu);\n    ui.plugin(ContextMenu);\n\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.menu.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.mobile.scroller.js":
/*!*****************************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.mobile.scroller.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_fx_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.fx.js */ \"./node_modules/kendo-ui-core/esm/kendo.fx.js\");\n/* harmony import */ var _kendo_draganddrop_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.draganddrop.js */ \"./node_modules/kendo-ui-core/esm/kendo.draganddrop.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\nvar __meta__ = {\n    id: \"mobile.scroller\",\n    name: \"Scroller\",\n    category: \"mobile\",\n    description: \"The Kendo Mobile Scroller widget enables touch friendly kinetic scrolling for the contents of a given DOM element.\",\n    depends: [ \"fx\", \"draganddrop\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        mobile = kendo.mobile,\n        fx = kendo.effects,\n        ui = mobile.ui,\n        extend = $.extend,\n        Widget = ui.Widget,\n        Class = kendo.Class,\n        Movable = kendo.ui.Movable,\n        Pane = kendo.ui.Pane,\n        PaneDimensions = kendo.ui.PaneDimensions,\n        Transition = fx.Transition,\n        Animation = fx.Animation,\n        abs = Math.abs,\n        SNAPBACK_DURATION = 500,\n        SCROLLBAR_OPACITY = 0.7,\n        FRICTION = 0.96,\n        VELOCITY_MULTIPLIER = 10,\n        MAX_VELOCITY = 55,\n        OUT_OF_BOUNDS_FRICTION = 0.5,\n        ANIMATED_SCROLLER_PRECISION = 5,\n        RELEASECLASS = \"km-scroller-release\",\n        REFRESHCLASS = \"km-scroller-refresh\",\n        PULL = \"pull\",\n        CHANGE = \"change\",\n        RESIZE = \"resize\",\n        SCROLL = \"scroll\",\n        MOUSE_WHEEL_ID = 2;\n\n    var ZoomSnapBack = Animation.extend({\n        init: function(options) {\n            var that = this;\n            Animation.fn.init.call(that);\n            extend(that, options);\n\n            that.userEvents.bind(\"gestureend\", that.start.bind(that));\n            that.tapCapture.bind(\"press\", that.cancel.bind(that));\n        },\n\n        enabled: function() {\n          return this.movable.scale < this.dimensions.minScale;\n        },\n\n        done: function() {\n            return this.dimensions.minScale - this.movable.scale < 0.01;\n        },\n\n        tick: function() {\n            var movable = this.movable;\n            movable.scaleWith(1.1);\n            this.dimensions.rescale(movable.scale);\n        },\n\n        onEnd: function() {\n            var movable = this.movable;\n            movable.scaleTo(this.dimensions.minScale);\n            this.dimensions.rescale(movable.scale);\n        }\n    });\n\n    var DragInertia = Animation.extend({\n        init: function(options) {\n            var that = this;\n\n            Animation.fn.init.call(that);\n\n            extend(that, options, {\n                transition: new Transition({\n                    axis: options.axis,\n                    movable: options.movable,\n                    onEnd: function() { that._end(); }\n                })\n            });\n\n            that.tapCapture.bind(\"press\", function() { that.cancel(); });\n            that.userEvents.bind(\"end\", that.start.bind(that));\n            that.userEvents.bind(\"gestureend\", that.start.bind(that));\n            that.userEvents.bind(\"tap\", that.onEnd.bind(that));\n        },\n\n        onCancel: function() {\n            this.transition.cancel();\n        },\n\n        freeze: function(location) {\n            var that = this;\n            that.cancel();\n            that._moveTo(location);\n        },\n\n        onEnd: function() {\n            var that = this;\n            if (that.paneAxis.outOfBounds()) {\n                that._snapBack();\n            } else {\n                that._end();\n            }\n        },\n\n        done: function() {\n            return abs(this.velocity) < 1;\n        },\n\n        start: function(e) {\n            var that = this,\n                velocity;\n\n            if (!that.dimension.enabled) { return; }\n\n            if (that.paneAxis.outOfBounds()) {\n                if (that.transition._started) {\n                    that.transition.cancel();\n                    that.velocity = Math.min(e.touch[that.axis].velocity * that.velocityMultiplier, MAX_VELOCITY);\n\n                    Animation.fn.start.call(that);\n                } else {\n                    that._snapBack();\n                }\n            } else {\n                velocity = e.touch.id === MOUSE_WHEEL_ID ? 0 : e.touch[that.axis].velocity;\n                that.velocity = Math.max(Math.min(velocity * that.velocityMultiplier, MAX_VELOCITY), -MAX_VELOCITY);\n\n                that.tapCapture.captureNext();\n                Animation.fn.start.call(that);\n            }\n        },\n\n        tick: function() {\n            var that = this,\n                dimension = that.dimension,\n                friction = that.paneAxis.outOfBounds() ? OUT_OF_BOUNDS_FRICTION : that.friction,\n                delta = (that.velocity *= friction),\n                location = that.movable[that.axis] + delta;\n\n                if (!that.elastic && dimension.outOfBounds(location)) {\n                    location = Math.max(Math.min(location, dimension.max), dimension.min);\n                    that.velocity = 0;\n                }\n\n            that.movable.moveAxis(that.axis, location);\n        },\n\n        _end: function() {\n            this.tapCapture.cancelCapture();\n            this.end();\n        },\n\n        _snapBack: function() {\n            var that = this,\n                dimension = that.dimension,\n                snapBack = that.movable[that.axis] > dimension.max ? dimension.max : dimension.min;\n            that._moveTo(snapBack);\n        },\n\n        _moveTo: function(location) {\n            this.transition.moveTo({ location: location, duration: SNAPBACK_DURATION, ease: Transition.easeOutExpo });\n        }\n    });\n\n    var AnimatedScroller = Animation.extend({\n        init: function(options) {\n            var that = this;\n\n            kendo.effects.Animation.fn.init.call(this);\n\n            extend(that, options, {\n                origin: {},\n                destination: {},\n                offset: {}\n            });\n        },\n\n        tick: function() {\n            this._updateCoordinates();\n            this.moveTo(this.origin);\n        },\n\n        done: function() {\n            return abs(this.offset.y) < ANIMATED_SCROLLER_PRECISION && abs(this.offset.x) < ANIMATED_SCROLLER_PRECISION;\n        },\n\n        onEnd: function() {\n            this.moveTo(this.destination);\n            if (this.callback) {\n                this.callback.call();\n            }\n        },\n\n        setCoordinates: function(from, to) {\n            this.offset = {};\n            this.origin = from;\n            this.destination = to;\n        },\n\n        setCallback: function(callback) {\n            if (callback && kendo.isFunction(callback)) {\n                this.callback = callback;\n            } else {\n                callback = undefined$1;\n            }\n        },\n\n        _updateCoordinates: function() {\n            this.offset = {\n                x: (this.destination.x - this.origin.x) / 4,\n                y: (this.destination.y - this.origin.y) / 4\n            };\n\n            this.origin = {\n                y: this.origin.y + this.offset.y,\n                x: this.origin.x + this.offset.x\n            };\n        }\n    });\n\n    var ScrollBar = Class.extend({\n        init: function(options) {\n            var that = this,\n                horizontal = options.axis === \"x\",\n                element = $('<div role=\"scrollbar\" aria-controls=\"' + options.controlsId + '\" class=\"km-touch-scrollbar km-' + (horizontal ? \"horizontal\" : \"vertical\") + '-scrollbar\" />');\n\n            if (horizontal) {\n                element.attr(\"aria-orientation\", \"horizontal\");\n            }\n\n            extend(that, options, {\n                element: element,\n                elementSize: 0,\n                movable: new Movable(element),\n                scrollMovable: options.movable,\n                alwaysVisible: options.alwaysVisible,\n                size: horizontal ? \"width\" : \"height\"\n            });\n\n            that.scrollMovable.bind(CHANGE, that.refresh.bind(that));\n            that.container.append(element);\n            if (options.alwaysVisible) {\n                that.show();\n            }\n        },\n\n        refresh: function() {\n            var that = this,\n                axis = that.axis,\n                dimension = that.dimension,\n                paneSize = dimension.size,\n                scrollMovable = that.scrollMovable,\n                sizeRatio = paneSize / dimension.total,\n                position = Math.round(-scrollMovable[axis] * sizeRatio),\n                size = Math.round(paneSize * sizeRatio);\n\n                if (sizeRatio >= 1) {\n                    this.element.css(\"display\", \"none\");\n                } else {\n                    this.element.css(\"display\", \"\");\n                }\n\n                if (position + size > paneSize) {\n                    size = paneSize - position;\n                } else if (position < 0) {\n                    size += position;\n                    position = 0;\n                }\n\n            if (that.elementSize != size) {\n                that.element.css(that.size, size + \"px\");\n                that.elementSize = size;\n            }\n\n            that._ariaValue(position, dimension.size - that.elementSize);\n\n            that.movable.moveAxis(axis, position);\n        },\n\n        show: function() {\n            this.element.css({ opacity: SCROLLBAR_OPACITY, visibility: \"visible\" });\n        },\n\n        hide: function() {\n            if (!this.alwaysVisible) {\n                this.element.css({ opacity: 0 });\n            }\n        },\n\n        _ariaValue: function(current, total) {\n            var element = this.element;\n\n            if (current > total) {\n                current = total;\n            }\n\n            element.attr(\"aria-valuemax\", total);\n            element.attr(\"aria-valuenow\", current);\n        }\n    });\n\n    var Scroller = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n            Widget.fn.init.call(that, element, options);\n\n            element = that.element;\n\n            that._native = that.options.useNative && kendo.support.hasNativeScrolling;\n            if (that._native) {\n                element.addClass(\"km-native-scroller\")\n                    .prepend('<div class=\"km-scroll-header\"/>');\n\n                extend(that, {\n                    scrollElement: element,\n                    fixedContainer: element.children().first()\n                });\n\n                return;\n            }\n\n            element\n                .css(\"overflow\", \"hidden\")\n                .addClass(\"km-scroll-wrapper\")\n                .wrapInner('<div class=\"km-scroll-container\"/>')\n                .prepend('<div class=\"km-scroll-header\"/>');\n\n            var inner = element.children().eq(1),\n\n                tapCapture = new kendo.TapCapture(element),\n\n                movable = new Movable(inner),\n\n                dimensions = new PaneDimensions({\n                    element: inner,\n                    container: element,\n                    forcedEnabled: that.options.zoom\n                }),\n\n                avoidScrolling = this.options.avoidScrolling,\n\n                userEvents = new kendo.UserEvents(element, {\n                    touchAction: \"pan-y\",\n                    fastTap: true,\n                    allowSelection: true,\n                    preventDragEvent: true,\n                    captureUpIfMoved: true,\n                    multiTouch: that.options.zoom,\n                    supportDoubleTap: that.options.supportDoubleTap,\n                    start: function(e) {\n                        dimensions.refresh();\n\n                        var velocityX = abs(e.x.velocity),\n                            velocityY = abs(e.y.velocity),\n                            horizontalSwipe = velocityX * 2 >= velocityY,\n                            originatedFromFixedContainer = $.contains(that.fixedContainer[0], e.event.target),\n                            verticalSwipe = velocityY * 2 >= velocityX;\n\n\n                        if (!originatedFromFixedContainer && !avoidScrolling(e) && that.enabled && (dimensions.x.enabled && horizontalSwipe || dimensions.y.enabled && verticalSwipe)) {\n                            userEvents.capture();\n                        } else {\n                            userEvents.cancel();\n                        }\n                    }\n                }),\n\n                pane = new Pane({\n                    movable: movable,\n                    dimensions: dimensions,\n                    userEvents: userEvents,\n                    elastic: that.options.elastic\n                }),\n\n                zoomSnapBack = new ZoomSnapBack({\n                    movable: movable,\n                    dimensions: dimensions,\n                    userEvents: userEvents,\n                    tapCapture: tapCapture\n                }),\n\n                animatedScroller = new AnimatedScroller({\n                    moveTo: function(coordinates) {\n                        that.scrollTo(coordinates.x, coordinates.y);\n                    }\n                });\n\n            movable.bind(CHANGE, function() {\n                that.scrollTop = - movable.y;\n                that.scrollLeft = - movable.x;\n\n                that.trigger(SCROLL, {\n                    scrollTop: that.scrollTop,\n                    scrollLeft: that.scrollLeft\n                });\n            });\n\n            if (that.options.mousewheelScrolling) {\n                element.on(\"DOMMouseScroll mousewheel\", this._wheelScroll.bind(this));\n            }\n\n            extend(that, {\n                movable: movable,\n                dimensions: dimensions,\n                zoomSnapBack: zoomSnapBack,\n                animatedScroller: animatedScroller,\n                userEvents: userEvents,\n                pane: pane,\n                tapCapture: tapCapture,\n                pulled: false,\n                enabled: true,\n                scrollElement: inner,\n                scrollTop: 0,\n                scrollLeft: 0,\n                fixedContainer: element.children().first()\n            });\n\n            that._initAxis(\"x\");\n            that._initAxis(\"y\");\n\n            // build closure\n            that._wheelEnd = function() {\n                that._wheel = false;\n                that.userEvents.end(0, that._wheelY);\n            };\n\n            dimensions.refresh();\n\n            if (that.options.pullToRefresh) {\n                that._initPullToRefresh();\n            }\n        },\n\n        _wheelScroll: function(e) {\n            if (e.ctrlKey) {\n                return;\n            }\n\n            if (!this._wheel) {\n                this._wheel = true;\n                this._wheelY = 0;\n                this.userEvents.press(0, this._wheelY);\n            }\n\n            clearTimeout(this._wheelTimeout);\n            this._wheelTimeout = setTimeout(this._wheelEnd, 50);\n\n            var delta = kendo.wheelDeltaY(e);\n\n            if (delta) {\n                this._wheelY += delta;\n                this.userEvents.move(0, this._wheelY);\n            }\n\n            e.preventDefault();\n        },\n\n        makeVirtual: function() {\n            this.dimensions.y.makeVirtual();\n        },\n\n        virtualSize: function(min, max) {\n            this.dimensions.y.virtualSize(min, max);\n        },\n\n        height: function() {\n            return this.dimensions.y.size;\n        },\n\n        scrollHeight: function() {\n            return this.scrollElement[0].scrollHeight;\n        },\n\n        scrollWidth: function() {\n            return this.scrollElement[0].scrollWidth;\n        },\n\n        options: {\n            name: \"Scroller\",\n            zoom: false,\n            pullOffset: 140,\n            visibleScrollHints: false,\n            elastic: true,\n            useNative: false,\n            mousewheelScrolling: true,\n            avoidScrolling: function() { return false; },\n            pullToRefresh: false,\n            messages: {\n                pullTemplate: \"Pull to refresh\",\n                releaseTemplate: \"Release to refresh\",\n                refreshTemplate: \"Refreshing\"\n            }\n        },\n\n        events: [\n            PULL,\n            SCROLL,\n            RESIZE\n        ],\n\n        _resize: function() {\n            if (!this._native) {\n                this.contentResized();\n            }\n        },\n\n        setOptions: function(options) {\n            var that = this;\n            Widget.fn.setOptions.call(that, options);\n            if (options.pullToRefresh) {\n                that._initPullToRefresh();\n            }\n        },\n\n        reset: function() {\n            if (this._native) {\n                this.scrollElement.scrollTop(0);\n            } else {\n                this.movable.moveTo({ x: 0, y: 0 });\n                this._scale(1);\n            }\n        },\n\n        contentResized: function() {\n            this.dimensions.refresh();\n            if (this.pane.x.outOfBounds()) {\n                this.movable.moveAxis(\"x\", this.dimensions.x.min);\n            }\n\n            if (this.pane.y.outOfBounds()) {\n                this.movable.moveAxis(\"y\", this.dimensions.y.min);\n            }\n        },\n\n        zoomOut: function() {\n            var dimensions = this.dimensions;\n            dimensions.refresh();\n            this._scale(dimensions.fitScale);\n            this.movable.moveTo(dimensions.centerCoordinates());\n        },\n\n        enable: function() {\n            this.enabled = true;\n        },\n\n        disable: function() {\n            this.enabled = false;\n        },\n\n        scrollTo: function(x, y) {\n            if (this._native) {\n                kendo.scrollLeft(this.scrollElement, abs(x));\n                this.scrollElement.scrollTop(abs(y));\n            } else {\n                this.dimensions.refresh();\n                this.movable.moveTo({ x: x, y: y });\n            }\n        },\n\n        animatedScrollTo: function(x, y, callback) {\n            var from,\n                to;\n\n            if (this._native) {\n                this.scrollTo(x, y);\n            } else {\n                from = { x: this.movable.x, y: this.movable.y };\n                to = { x: x, y: y };\n\n                this.animatedScroller.setCoordinates(from, to);\n                this.animatedScroller.setCallback(callback);\n                this.animatedScroller.start();\n            }\n        },\n\n        pullHandled: function() {\n            var that = this;\n            that.refreshHint.removeClass(REFRESHCLASS);\n            that.hintContainer.html(that.pullTemplate({}));\n            that.yinertia.onEnd();\n            that.xinertia.onEnd();\n            that.userEvents.cancel();\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n            if (this.userEvents) {\n                this.userEvents.destroy();\n            }\n        },\n\n        _scale: function(scale) {\n            this.dimensions.rescale(scale);\n            this.movable.scaleTo(scale);\n        },\n\n        _initPullToRefresh: function() {\n            var that = this;\n\n            that.dimensions.y.forceEnabled();\n            that.pullTemplate = kendo.template(that.options.messages.pullTemplate);\n            that.releaseTemplate = kendo.template(that.options.messages.releaseTemplate);\n            that.refreshTemplate = kendo.template(that.options.messages.refreshTemplate);\n\n            that.scrollElement.prepend('<span class=\"km-scroller-pull\"><span class=\"km-icon\"></span><span class=\"km-loading-left\"></span><span class=\"km-loading-right\"></span><span class=\"km-template\">' + that.pullTemplate({}) + '</span></span>');\n            that.refreshHint = that.scrollElement.children().first();\n            that.hintContainer = that.refreshHint.children(\".km-template\");\n\n            that.pane.y.bind(\"change\", that._paneChange.bind(that));\n            that.userEvents.bind(\"end\", that._dragEnd.bind(that));\n        },\n\n        _dragEnd: function() {\n            var that = this;\n\n            if (!that.pulled) {\n                return;\n            }\n\n            that.pulled = false;\n            that.refreshHint.removeClass(RELEASECLASS).addClass(REFRESHCLASS);\n            that.hintContainer.html(that.refreshTemplate({}));\n            that.yinertia.freeze(that.options.pullOffset / 2);\n            that.trigger(\"pull\");\n        },\n\n        _paneChange: function() {\n            var that = this;\n\n            if (that.movable.y / OUT_OF_BOUNDS_FRICTION > that.options.pullOffset) {\n                if (!that.pulled) {\n                    that.pulled = true;\n                    that.refreshHint.removeClass(REFRESHCLASS).addClass(RELEASECLASS);\n                    that.hintContainer.html(that.releaseTemplate({}));\n                }\n            } else if (that.pulled) {\n                that.pulled = false;\n                that.refreshHint.removeClass(RELEASECLASS);\n                that.hintContainer.html(that.pullTemplate({}));\n            }\n        },\n\n        _initAxis: function(axis) {\n            var that = this,\n                elementId = that.element.attr(\"id\"),\n                movable = that.movable,\n                dimension = that.dimensions[axis],\n                tapCapture = that.tapCapture,\n                paneAxis = that.pane[axis],\n                scrollBar;\n\n            if (!elementId) {\n                elementId = kendo.guid();\n                that.element.attr(\"id\", elementId);\n            }\n\n            scrollBar = new ScrollBar({\n                axis: axis,\n                movable: movable,\n                dimension: dimension,\n                container: that.element,\n                alwaysVisible: that.options.visibleScrollHints,\n                controlsId: elementId\n            });\n\n            dimension.bind(CHANGE, function() {\n                scrollBar.refresh();\n            });\n\n            paneAxis.bind(CHANGE, function() {\n                scrollBar.show();\n            });\n\n            that[axis + \"inertia\"] = new DragInertia({\n                axis: axis,\n                paneAxis: paneAxis,\n                movable: movable,\n                tapCapture: tapCapture,\n                userEvents: that.userEvents,\n                dimension: dimension,\n                elastic: that.options.elastic,\n                friction: that.options.friction || FRICTION,\n                velocityMultiplier: that.options.velocityMultiplier || VELOCITY_MULTIPLIER,\n                end: function() {\n                    scrollBar.hide();\n                    that.trigger(\"scrollEnd\", {\n                        axis: axis,\n                        scrollTop: that.scrollTop,\n                        scrollLeft: that.scrollLeft\n                    });\n                }\n            });\n        }\n    });\n\n    ui.plugin(Scroller);\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.mobile.scroller.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.multiselect.js":
/*!*************************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.multiselect.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_list_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.list.js */ \"./node_modules/kendo-ui-core/esm/kendo.list.js\");\n/* harmony import */ var _kendo_mobile_scroller_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.mobile.scroller.js */ \"./node_modules/kendo-ui-core/esm/kendo.mobile.scroller.js\");\n/* harmony import */ var _kendo_virtuallist_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kendo.virtuallist.js */ \"./node_modules/kendo-ui-core/esm/kendo.virtuallist.js\");\n/* harmony import */ var _kendo_html_chip_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./kendo.html.chip.js */ \"./node_modules/kendo-ui-core/esm/kendo.html.chip.js\");\n/* harmony import */ var _kendo_html_chiplist_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./kendo.html.chiplist.js */ \"./node_modules/kendo-ui-core/esm/kendo.html.chiplist.js\");\n/* harmony import */ var _kendo_html_button_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./kendo.html.button.js */ \"./node_modules/kendo-ui-core/esm/kendo.html.button.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\n\n\n\n\nlet $ = kendo.jQuery;\n\nfunction addInputPrefixSuffixContainers({ widget, wrapper, options, prefixInsertBefore, suffixInsertAfter }) {\n    var prefix = options.prefixOptions,\n        suffix = options.suffixOptions,\n        hasPrefixContent = prefix.template || prefix.icon,\n        hasSuffixContent = suffix.template || suffix.icon,\n        suffixInsertAfter = suffixInsertAfter || prefixInsertBefore,\n        layoutFlow = options.layoutFlow,\n        containerOrientation = layoutFlow ? (layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\") : \"horizontal\",\n        separatorOrientation = layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\",\n        INPUT_SEPARATOR = `<span class=\"k-input-separator k-input-separator-${separatorOrientation}\"></span>`,\n        prefixContainer,\n        suffixContainer;\n\n    if (prefix && hasPrefixContent) {\n        prefixContainer = wrapper.children(\".k-input-prefix\");\n\n        if (!prefixContainer[0]) {\n            prefixContainer = $(`<span class=\"k-input-prefix k-input-prefix-${containerOrientation}\" />`);\n            if (prefixInsertBefore) {\n                prefixContainer.insertBefore(prefixInsertBefore);\n            } else {\n                prefixContainer.prependTo(wrapper);\n            }\n        }\n\n        if (prefix.icon) {\n            prefixContainer.html(kendo.html.renderIcon({ icon: prefix.icon }));\n        }\n\n        if (prefix.template) {\n            prefixContainer.html(kendo.template(prefix.template)({}));\n        }\n\n        if (prefix.separator) {\n            $(INPUT_SEPARATOR).insertAfter(prefixContainer);\n        }\n    }\n\n    if (suffix && hasSuffixContent) {\n        suffixContainer = wrapper.children(\".k-input-suffix\");\n\n        if (!suffixContainer[0]) {\n            suffixContainer = $(`<span class=\"k-input-suffix k-input-suffix-${containerOrientation}\" />`).appendTo(wrapper);\n            if (suffixInsertAfter) {\n                suffixContainer.insertAfter(suffixInsertAfter);\n            } else {\n                suffixContainer.appendTo(wrapper);\n            }\n        }\n\n        if (suffix.icon) {\n            suffixContainer.html(kendo.html.renderIcon({ icon: suffix.icon }));\n        }\n\n        if (suffix.template) {\n            suffixContainer.html(kendo.template(suffix.template)({}));\n        }\n\n        if (suffix.separator) {\n            $(INPUT_SEPARATOR).insertBefore(suffixContainer);\n        }\n    }\n\n    widget._prefixContainer = prefixContainer;\n    widget._suffixContainer = suffixContainer;\n}\n\nvar __meta__ = {\n    id: \"multiselect\",\n    name: \"MultiSelect\",\n    category: \"web\",\n    description: \"The MultiSelect widget allows the selection from pre-defined values.\",\n    depends: [ \"list\", \"html.chip\", \"html.chiplist\", \"html.button\" ],\n    features: [ {\n        id: \"mobile-scroller\",\n        name: \"Mobile scroller\",\n        description: \"Support for kinetic scrolling in mobile device\",\n        depends: [ \"mobile.scroller\" ]\n    }, {\n        id: \"virtualization\",\n        name: \"VirtualList\",\n        description: \"Support for virtualization\",\n        depends: [ \"virtuallist\" ]\n    } ]\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        ui = kendo.ui,\n        List = ui.List,\n        encode = kendo.htmlEncode,\n        html = kendo.html,\n        keys = $.extend({ A: 65 }, kendo.keys),\n        activeElement = kendo._activeElement,\n        ObservableArray = kendo.data.ObservableArray,\n        ID = \"id\",\n        CHIP = \".k-chip\",\n        ACCEPT = \"accept\",\n        FILTER = \"filter\",\n        REBIND = \"rebind\",\n        OPEN = \"open\",\n        CLOSE = \"close\",\n        CHANGE = \"change\",\n        PROGRESS = \"progress\",\n        SELECT = \"select\",\n        DESELECT = \"deselect\",\n        ARIA_DISABLED = \"aria-disabled\",\n        ARIA_READONLY = \"aria-readonly\",\n        ARIA_EXPANDED = \"aria-expanded\",\n        ARIA_HIDDEN = \"aria-hidden\",\n        ARIA_ACTIVEDESCENDANT = \"aria-activedescendant\",\n        ARIA_BUSY = \"aria-busy\",\n        FOCUSEDCLASS = \"k-focus\",\n        SELECTEDCLASS = \"k-selected\",\n        HIDDENCLASS = \"k-hidden\",\n        HOVERCLASS = \"k-hover\",\n        STATEDISABLED = \"k-disabled\",\n        NOCLICKCLASS = \"k-no-click\",\n        DISABLED = \"disabled\",\n        READONLY = \"readonly\",\n        AUTOCOMPLETEVALUE = \"off\",\n        ns = \".kendoMultiSelect\",\n        CLICK = \"click\" + ns,\n        KEYDOWN = \"keydown\" + ns,\n        MOUSEENTER = \"mouseenter\" + ns,\n        MOUSELEAVE = \"mouseleave\" + ns,\n        HOVEREVENTS = MOUSEENTER + \" \" + MOUSELEAVE,\n        quotRegExp = /\"/g,\n        isArray = Array.isArray,\n        styles = [\"font-family\",\n                  \"font-size\",\n                  \"font-stretch\",\n                  \"font-style\",\n                  \"font-weight\",\n                  \"letter-spacing\",\n                  \"text-transform\",\n                  \"line-height\"];\n\n    var MultiSelect = List.extend({\n        init: function(element, options) {\n            var that = this, id, disabled;\n\n            that.ns = ns;\n            List.fn.init.call(that, element, options);\n\n            that._optionsMap = {};\n            that._customOptions = {};\n\n            that._wrapper();\n            that._inputValuesContainer();\n            that._tagList();\n            that._input();\n            that._textContainer();\n            that._loader();\n            that._clearButton();\n            that._arrowButton();\n\n            that._tabindex(that.input);\n\n            element = that.element.attr(\"multiple\", \"multiple\").hide();\n            options = that.options;\n\n            if (!options.placeholder) {\n                options.placeholder = element.data(\"placeholder\");\n            }\n\n            id = element.attr(ID);\n\n            if (!id) {\n                id = kendo.guid();\n            }\n\n            if (id) {\n                that._tagID = id + \"_tag_active\";\n                id = id + \"_taglist\";\n                that.tagList.attr(ID, id);\n            }\n\n            that._initialOpen = true;\n\n            if (options.label) {\n                this._label();\n            }\n\n            that._aria();\n\n            that._dataSource();\n            that._ignoreCase();\n            that._popup();\n\n            that._tagTemplate();\n            that.requireValueMapper(that.options);\n            that._initList();\n\n            that._reset();\n            that._enable();\n            that._placeholder();\n\n            if (options.autoBind) {\n                that.dataSource.fetch();\n            } else if (options.value) {\n                that._preselect(options.value);\n            }\n\n            disabled = $(that.element).parents(\"fieldset\").is(':disabled');\n\n            if (disabled) {\n                that.enable(false);\n            }\n\n            that._toggleCloseVisibility();\n            that._applyCssClasses();\n\n            addInputPrefixSuffixContainers({ widget: that, wrapper: that.wrapper, options: that.options, prefixInsertBefore: that._inputValuesContainer, suffixInsertAfter: options.clearButton ? that._clear : that.element });\n            if (that.floatingLabel) {\n                that.floatingLabel.refresh();\n            }\n\n            kendo.notify(that);\n        },\n\n        options: {\n            name: \"MultiSelect\",\n            tagMode: \"multiple\",\n            enabled: true,\n            autoBind: true,\n            autoClose: true,\n            highlightFirst: true,\n            dataTextField: \"\",\n            dataValueField: \"\",\n            filter: \"startswith\",\n            ignoreCase: true,\n            minLength: 1,\n            messages: {\n                \"singleTag\": \"item(s) selected\",\n                \"clear\": \"clear\",\n                \"deleteTag\": \"delete\",\n                \"noData\": \"No data found.\",\n                \"downArrow\": \"select\"\n            },\n            enforceMinLength: false,\n            delay: 100,\n            value: null,\n            maxSelectedItems: null,\n            placeholder: \"\",\n            height: 200,\n            animation: {},\n            virtual: false,\n            itemTemplate: \"\",\n            tagTemplate: \"\",\n            groupTemplate: (data) => encode(data),\n            fixedGroupTemplate: (data) => encode(data),\n            prefixOptions: {\n                separator: true\n            },\n            suffixOptions: {\n                separator: true\n            },\n            clearButton: true,\n            autoWidth: false,\n            popup: null,\n            size: \"medium\",\n            fillMode: \"solid\",\n            rounded: \"medium\",\n            label: null\n        },\n\n        events: [\n            OPEN,\n            CLOSE,\n            CHANGE,\n            SELECT,\n            DESELECT,\n            \"filtering\",\n            \"dataBinding\",\n            \"dataBound\"\n        ],\n\n        setDataSource: function(dataSource) {\n            this.options.dataSource = dataSource;\n\n            this._state = \"\";\n            this._dataSource();\n\n            this.persistTagList = false;\n            this.listView.setDataSource(this.dataSource);\n\n            if (this.options.autoBind) {\n                this.dataSource.fetch();\n            }\n        },\n\n        setOptions: function(options) {\n            var listOptions = this._listOptions(options);\n\n            List.fn.setOptions.call(this, options);\n\n            this.listView.setOptions(listOptions);\n\n\n            this._accessors();\n            this._aria();\n            this._tagTemplate();\n            this._placeholder();\n            this._clearButton();\n            this._arrowButton();\n        },\n\n        currentTag: function(candidate) {\n            var that = this;\n\n            if (candidate !== undefined$1) {\n                if (that._currentTag) {\n                    that._currentTag\n                        .removeClass(FOCUSEDCLASS)\n                        .removeAttr(ID);\n\n                    that._currentTag.find(\".k-chip-action\").attr(ARIA_HIDDEN, true);\n\n                    that.input.removeAttr(ARIA_ACTIVEDESCENDANT);\n                }\n\n                if (candidate) {\n                    candidate.addClass(FOCUSEDCLASS).attr(ID, that._tagID);\n\n                    candidate.find(\".k-chip-action\").removeAttr(ARIA_HIDDEN);\n\n                    that.input.attr(ARIA_ACTIVEDESCENDANT, that._tagID);\n                }\n\n                that._currentTag = candidate;\n            } else {\n                return that._currentTag;\n            }\n        },\n\n        dataItems: function() {\n            return this.listView.selectedDataItems();\n        },\n\n        destroy: function() {\n            var that = this,\n                ns = that.ns;\n\n            clearTimeout(that._busy);\n            clearTimeout(that._typingTimeout);\n\n            if (that.filterInput) {\n                that.filterInput.off(ns);\n            }\n\n            that.wrapper.off(ns);\n            that.tagList.off(ns);\n            that.input.off(ns);\n            that._clear.off(ns);\n\n            List.fn.destroy.call(that);\n        },\n\n        _onActionSheetCreate: function() {\n            var that = this;\n\n            that.filterInput\n                .on(\"keydown\" + ns, that._keydown.bind(that))\n                .on(\"input\" + ns, that._search.bind(that))\n                .on(\"paste\" + ns, that._search.bind(that))\n                .attr({\n                    \"role\": \"combobox\",\n                    \"aria-expanded\": false,\n                    \"aria-controls\": that.input.attr(\"aria-controls\"),\n                    \"aria-autocomplete\": that.input.attr(\"aria-autocomplete\"),\n                    \"aria-describedby\": that.input.attr(\"aria-describedby\")\n                });\n\n            that.popup.bind(\"activate\", () => {\n                that.filterInput.val(that.input.val());\n                that.filterInput.trigger(\"focus\");\n            });\n\n            that.popup.bind(\"close\", () => {\n                that.input.trigger(\"focus\");\n            });\n        },\n\n        _aria: function() {\n            var that = this,\n                id = that.ul[0].id,\n                autocomplete = this.options.filter === \"none\" ? \"none\" : \"list\",\n                tagListId = that.tagList.attr(ID);\n\n            that.input.attr({\n                \"role\": \"combobox\",\n                \"aria-expanded\": false,\n                \"aria-controls\": id,\n                \"aria-autocomplete\": autocomplete,\n                \"aria-describedby\": tagListId\n            });\n\n            that._ariaLabel(that._focused);\n        },\n\n        _activateItem: function() {\n            if (this.popup.visible()) {\n                List.fn._activateItem.call(this);\n            }\n            this.currentTag(null);\n        },\n\n        _listOptions: function(options) {\n            var that = this;\n            var listOptions = List.fn._listOptions.call(that, $.extend(options, {\n                selectedItemChange: that._selectedItemChange.bind(that),\n                selectable: \"multiple\"\n            }));\n\n            var itemTemplate = this.options.itemTemplate || this.options.template;\n            var template = listOptions.itemTemplate || itemTemplate || listOptions.template;\n\n            if (!template) {\n                template = data => encode(kendo.getter(listOptions.dataTextField)(data));\n            }\n\n            listOptions.template = template;\n\n            return listOptions;\n        },\n\n        _setListValue: function() {\n            List.fn._setListValue.call(this, this._initialValues.slice(0));\n        },\n\n        _listChange: function(e) {\n            var data = this.dataSource.flatView();\n            var optionsMap = this._optionsMap;\n            var valueGetter = this._value;\n\n            if (this._state === REBIND) {\n                this._state = \"\";\n            }\n\n            for (var i = 0; i < e.added.length; i++) {\n                if (optionsMap[valueGetter(e.added[i].dataItem)] === undefined$1) {\n                    this._render(data); //render select element <option> tags if the item does not persist in the current data view\n                    break;\n                }\n            }\n\n            this._selectValue(e.added, e.removed);\n        },\n\n        _selectedItemChange: function(e) {\n            var items = e.items;\n            var context;\n            var idx;\n\n            for (idx = 0; idx < items.length; idx++) {\n                context = items[idx];\n                this.tagList.children(CHIP).eq(context.index).children(\"span\").first().html(this.tagTextTemplate(context.item));\n            }\n        },\n\n        _wrapperMousedown: function(e) {\n            var that = this;\n            var notInput = e.target.nodeName.toLowerCase() !== \"input\";\n            var target = $(e.target);\n            var closeButton = target.closest(\".k-input-button, .k-chip\").children(\"[class*='-i-caret-alt-down']\")[0];\n            var removeButton = target.closest(\"[class*='-i-x']\")[0];\n\n            if (notInput && !(removeButton && kendo.support.mobileOS) && e.cancelable) {\n                e.preventDefault();\n            }\n\n            if (!removeButton) {\n                if (closeButton && that.popup.visible()) {\n                    that.toggle(false);\n                } else {\n                    if (that.input[0] !== activeElement() && notInput) {\n                        that.input.trigger(\"focus\");\n                    }\n\n                    if (that.options.minLength === 1 && !that.popup.visible()) {\n                        that.open();\n                    }\n                }\n            }\n\n        },\n\n        _inputFocus: function() {\n            this._placeholder(false, true);\n            this.wrapper.addClass(FOCUSEDCLASS);\n        },\n\n        _inputFocusout: function(e) {\n            var that = this;\n\n            if (that.filterInput && e.relatedTarget === that.filterInput[0]) {\n                return;\n            }\n\n            clearTimeout(that._typingTimeout);\n\n            that.wrapper.removeClass(FOCUSEDCLASS);\n\n            that._placeholder(!that.listView.selectedDataItems()[0], true);\n            that.close();\n\n            if (that._state === FILTER) {\n                that._state = ACCEPT;\n                that.listView.skipUpdate(true);\n            }\n\n            if (that.listView.bound() && that.listView.isFiltered()) {\n                that.persistTagList = true;\n                that._clearFilter();\n            }\n\n            that.element.trigger(\"blur\");\n        },\n\n        _removeTag: function(tag, shouldTrigger) {\n            var that = this;\n            var state = that._state;\n            var position = tag.index();\n            var listView = that.listView;\n            var value = listView.value()[position];\n            var dataItem = that.listView.selectedDataItems()[position];\n            var customIndex = that._customOptions[value];\n            var listViewChildren = listView.element[0].children;\n            var option;\n            var listViewChild;\n\n            if (that.trigger(DESELECT, { dataItem: dataItem, item: tag })) {\n                that._close();\n                return;\n            }\n\n            if (customIndex === undefined$1 && (state === ACCEPT || state === FILTER)) {\n                customIndex = that._optionsMap[value];\n            }\n\n            var done = function() {\n                that.currentTag(null);\n                if (shouldTrigger) {\n                    that._change();\n                }\n\n                that._refreshTagListAria();\n                that._close();\n            };\n\n            if (customIndex === undefined$1 && listView.select().length) {\n                that.persistTagList = false;\n                listView.select(listView.select()[position]).done(done);\n            } else {\n                option = that.element[0].children[customIndex];\n                if (option) {\n                    option.selected = false;\n                }\n\n                listView.removeAt(position);\n\n                if (listView._removedAddedIndexes) {\n                    listView._removedAddedIndexes.splice(position, 1);\n                }\n\n                listViewChild = listViewChildren[customIndex];\n                if (listViewChild) {\n                    listViewChildren[customIndex].classList.remove(\"k-selected\");\n                }\n                if (that.options.tagMode !== \"single\") {\n                    tag.remove();\n                } else {\n                    that._updateTagListHTML();\n                }\n                done();\n            }\n        },\n\n        _tagListClick: function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            var target = $(e.currentTarget);\n\n            if (target.is(\"[class*='-i-x-circle']\")) {\n                this._removeTag(target.closest(CHIP), true);\n            }\n        },\n\n        _clearValue: function() {\n            var that = this;\n\n            if (that.options.tagMode === \"single\") {\n                that._clearSingleTagValue();\n            } else {\n                that.tagList.children(CHIP).each(function(index, tag) {\n                    that._removeTag($(tag), false);\n                });\n            }\n\n            that.input.val(\"\");\n            that._search(true);\n            that._change();\n            that.focus();\n            that._hideClear();\n\n            if (that._state === FILTER) {\n                that._state = ACCEPT;\n            }\n        },\n\n        _clearSingleTagValue: function() {\n            var that = this;\n            var items = that.dataItems();\n            var tags = that.tagList.children(CHIP);\n            var persistTagList = that.persistTagList;\n\n            for (var i = 0; i < items.length; i += 1) {\n                if (that.trigger(DESELECT, { dataItem: items[i], item: tags.first() })) {\n                    that._close();\n                    return;\n                }\n            }\n\n            if (persistTagList) {\n                that.persistTagList = false;\n            }\n\n            that.listView.value([]);\n            that.persistTagList = persistTagList;\n        },\n\n        _focusHandler: function() {\n            var input = this.input;\n            var active = activeElement();\n            var isActive = input[0] === active;\n\n            if (!isActive) {\n                this.input.trigger(\"focus\");\n            }\n        },\n\n        _editable: function(options) {\n            var that = this,\n                disable = options.disable,\n                readonly = options.readonly,\n                wrapper = that.wrapper.off(ns),\n                tagList = that.tagList.off(ns),\n                input = that.input.off(ns);\n\n            if (!readonly && !disable) {\n                wrapper\n                    .removeClass(STATEDISABLED)\n                    .removeClass(NOCLICKCLASS)\n                    .on(HOVEREVENTS, that._toggleHover)\n                    .on(\"mousedown\" + ns + \" touchend\" + ns, that._wrapperMousedown.bind(that))\n                    .on(CLICK, that._focusHandler.bind(that));\n\n                that.input.on(KEYDOWN, that._keydown.bind(that))\n                    .on(\"paste\" + ns, that._search.bind(that))\n                    .on(\"input\" + ns, that._search.bind(that))\n                    .on(\"focus\" + ns, that._inputFocus.bind(that))\n                    .on(\"focusout\" + ns, that._inputFocusout.bind(that));\n\n                that._clear.on(CLICK + \" touchend\" + ns, that._clearValue.bind(that));\n\n                input.prop(DISABLED, false)\n                     .prop(READONLY, false)\n                     .attr(ARIA_DISABLED, false)\n                     .attr(ARIA_READONLY, false);\n\n                that.element.prop(DISABLED, false);\n\n                tagList\n                    .on(MOUSEENTER, CHIP, function() { $(this).addClass(HOVERCLASS); })\n                    .on(MOUSELEAVE, CHIP, function() { $(this).removeClass(HOVERCLASS); })\n                    .on(CLICK + \" touchend\" + ns, \".k-chip .k-icon,.k-chip .k-svg-icon\", that._tagListClick.bind(that));\n            } else {\n\n                wrapper.toggleClass(STATEDISABLED, disable)\n                       .toggleClass(NOCLICKCLASS, readonly);\n\n                input.attr(DISABLED, disable)\n                     .attr(READONLY, readonly)\n                     .attr(ARIA_DISABLED, disable)\n                     .attr(ARIA_READONLY, readonly);\n\n                that.element.prop(DISABLED, disable);\n            }\n        },\n\n        _close: function() {\n            var that = this;\n            if (that.options.autoClose) {\n                that.close();\n            } else {\n                that.popup.position();\n            }\n        },\n\n        _filterSource: function(filter, force) {\n            if (!force) {\n                force = this._retrieveData;\n            }\n            this._retrieveData = false;\n            List.fn._filterSource.call(this, filter, force);\n        },\n\n        close: function() {\n            this._activeItem = null;\n            this.input.removeAttr(ARIA_ACTIVEDESCENDANT);\n\n            this.popup.close();\n        },\n\n        open: function() {\n            var that = this,\n                filterValue = that.input.val().toLowerCase(),\n                listViewFilter = that.listView.dataSource.filter(),\n                listViewFilterValue = \"\";\n\n            if (listViewFilter && listViewFilter.filters.length > 0) {\n                listViewFilterValue = (listViewFilter.filters[0].value || \"\").toString().toLowerCase();\n            }\n\n            if (that._request) {\n                that._retrieveData = false;\n            }\n\n            if (that._retrieveData || !that.listView.bound() || (that._state === ACCEPT && filterValue !== listViewFilterValue)) {\n                that._open = true;\n                that._state = REBIND;\n\n                that.listView.skipUpdate(true);\n\n                that.persistTagList = that._initialOpen && !that.listView.bound() ? false : true;\n                that._filterSource();\n                that._focusItem();\n            } else if (that._allowOpening()) {\n\n                //selects values in autoBind false and non virtual scenario on initial load\n                if (that._initialOpen && !that.options.autoBind && !that.options.virtual && that.options.value && !$.isPlainObject(that.options.value[0])) {\n                    that.value(that.value() || that._initialValues);\n                }\n\n                // In some cases when the popup is opened resize is triggered which will cause it to close\n                // Setting the below flag will prevent this from happening\n                that.popup._hovered = true;\n                that._initialOpen = false;\n                that.popup.open({ altTarget: that.wrapper.add(that.element).add(that.input) });\n                that._focusItem();\n            }\n        },\n\n        toggle: function(toggle) {\n            toggle = toggle !== undefined$1 ? toggle : !this.popup.visible();\n\n            this[toggle ? OPEN : CLOSE]();\n        },\n\n        refresh: function() {\n            this.listView.refresh();\n        },\n\n        _floatCheck: function() {\n            if (this.listView) {\n                var hasValue = (this.value() && this.value().length);\n                return !hasValue && !this.popup.visible();\n            }\n\n            return true;\n        },\n\n        _listBound: function() {\n            var that = this;\n            var data = that.dataSource.flatView();\n\n            that._render(data);\n            that._renderFooter();\n            that._renderNoData();\n            that._toggleNoData(!data.length);\n            that._resizePopup();\n\n            if (that._open) {\n                that._open = false;\n                that.toggle(that._allowOpening());\n            }\n\n            that.popup.position();\n            that._updateItemFocus();\n\n            if (that._touchScroller) {\n                that._touchScroller.reset();\n            }\n\n            that._hideBusy();\n\n            that.trigger(\"dataBound\");\n        },\n\n        _updateItemFocus: function() {\n            var that = this,\n                data = that.dataSource.flatView(),\n                skip = that.listView.skip(),\n                isFirstPage = skip === undefined$1 || skip === 0;\n\n            if (data.length && isFirstPage) {\n                if (!that.options.highlightFirst) {\n                    that.listView.focus(-1);\n                } else {\n                    that.listView.focusFirst();\n                }\n            }\n        },\n\n        _inputValue: function() {\n            var that = this;\n            var inputValue = that.filterInput && activeElement() === that.filterInput[0] ? that.filterInput.val() : that.input.val();\n\n            if (that.options.placeholder === inputValue) {\n                inputValue = \"\";\n            }\n            return inputValue;\n        },\n\n        value: function(value) {\n            var that = this;\n            var listView = that.listView;\n            var oldValue = listView.value().slice();\n            var maxSelectedItems = that.options.maxSelectedItems;\n            var clearFilters = listView.bound() && listView.isFiltered();\n\n            if (value === undefined$1) {\n                return oldValue;\n            }\n\n            that.persistTagList = false;\n            that.requireValueMapper(that.options, value);\n\n            value = that._normalizeValues(value);\n\n            if (maxSelectedItems !== null && value.length > maxSelectedItems) {\n                value = value.slice(0, maxSelectedItems);\n            }\n\n            if (clearFilters) {\n                that._clearFilter();\n            }\n\n            listView.value(value);\n            that._old = that._valueBeforeCascade = value.slice(); //get a new array reference\n\n            if (!clearFilters) {\n                that._fetchData();\n            }\n\n            that._toggleCloseVisibility();\n        },\n\n        _preselect: function(data, value) {\n            var that = this;\n\n            if (!isArray(data) && !(data instanceof kendo.data.ObservableArray)) {\n                data = [data];\n            }\n\n            if ($.isPlainObject(data[0]) || data[0] instanceof kendo.data.ObservableObject || !that.options.dataValueField) {\n                that.dataSource.data(data);\n                that.value(value || that._initialValues);\n                that._retrieveData = true;\n            }\n        },\n\n        _setOption: function(value, selected) {\n            var option = this.element[0].children[this._optionsMap[value]];\n\n            if (option) {\n                option.selected = selected;\n            }\n        },\n\n        _fetchData: function() {\n            var that = this;\n            var hasItems = !!that.dataSource.view().length;\n            var isEmptyArray = that.listView.value().length === 0;\n\n            if (isEmptyArray || that._request) {\n                return;\n            }\n\n            if (that._retrieveData || (!that._fetch && !hasItems)) {\n                that._fetch = true;\n                that._retrieveData = false;\n                that.dataSource.read().done(function() {\n                    that._fetch = false;\n                });\n            }\n        },\n\n        _isBound: function() {\n            return this.listView.bound() && !this._retrieveData;\n        },\n\n        _dataSource: function() {\n            var that = this,\n                element = that.element,\n                options = that.options,\n                dataSource = options.dataSource || {};\n\n            dataSource = isArray(dataSource) ? { data: dataSource } : dataSource;\n\n            dataSource.select = element;\n            dataSource.fields = [{ field: options.dataTextField },\n                                 { field: options.dataValueField }];\n\n            if (that.dataSource && that._refreshHandler) {\n                that._unbindDataSource();\n            } else {\n                that._progressHandler = that._showBusy.bind(that);\n                that._errorHandler = that._hideBusy.bind(that);\n            }\n\n            that.dataSource = kendo.data.DataSource.create(dataSource)\n                                   .bind(PROGRESS, that._progressHandler)\n                                   .bind(\"error\", that._errorHandler);\n        },\n\n        _reset: function() {\n            var that = this,\n                element = that.element,\n                formId = element.attr(\"form\"),\n                form = formId ? $(\"#\" + formId) : element.closest(\"form\");\n\n            if (form[0]) {\n                that._resetHandler = function() {\n                    setTimeout(function() {\n                        that.value(that._initialValues);\n                        that._placeholder();\n                    });\n                };\n\n                that._form = form.on(\"reset\", that._resetHandler);\n            }\n        },\n\n        _initValue: function() {\n            var value = this.options.value || this.element.val();\n\n            this._old = this._initialValues = this._normalizeValues(value);\n        },\n\n        _normalizeValues: function(value) {\n            var that = this;\n\n            if (value === null) {\n                value = [];\n            } else if (value && $.isPlainObject(value)) {\n                value = [that._value(value)];\n            } else if (value && $.isPlainObject(value[0])) {\n                value = $.map(value, function(dataItem) { return that._value(dataItem); });\n            } else if (!isArray(value) && !(value instanceof ObservableArray)) {\n                value = [value];\n            } else if (isArray(value)) {\n                value = value.slice();\n            }\n\n            return value;\n        },\n\n        _change: function() {\n            var that = this,\n                value = that.value();\n\n            if (!compare(value, that._old)) {\n                that._old = value.slice();\n\n                that.trigger(CHANGE);\n\n                // trigger the DOM change event so any subscriber gets notified\n                that.element.trigger(CHANGE);\n            }\n            that.popup.position();\n\n            that._toggleCloseVisibility();\n        },\n\n        _click: function(e) {\n            var that = this;\n            var item = e.item;\n\n            e.preventDefault();\n\n            that._select(item).done(function() {\n                that._activeItem = item;\n                that._change();\n                that._close();\n            });\n        },\n\n        _getActiveItem: function() {\n            return this._activeItem || $(this.listView.items()[this._getSelectedIndices().length - 1]) || this.listView.focus();\n        },\n\n        _getSelectedIndices: function() {\n            return this.listView._selectedIndices || this.listView._selectedIndexes;\n        },\n\n        _keydown: function(e) {\n            var that = this;\n            var key = e.keyCode;\n            var tag = that._currentTag;\n            var listView = that.listView;\n            var hasValue = that.input.val();\n            var isRtl = kendo.support.isRtl(that.wrapper);\n            var visible = that.popup.visible();\n            var dir = 0;\n            var activeItemIdx;\n            var handled = false;\n\n            if (key !== keys.ENTER) {\n                this._multipleSelection = false;\n            }\n\n            if (key === keys.DOWN) {\n                e.preventDefault();\n\n                if (!visible) {\n                    that.open();\n\n                    if (!listView.focus()) {\n                        listView.focusFirst();\n                    }\n                    e.stopPropagation();\n                    return;\n                }\n\n                if (listView.focus()) {\n                    if (!that._activeItem && e.shiftKey) {\n                        that._activeItem = listView.focus();\n                        dir = -1;\n                    }\n                    activeItemIdx = listView.getElementIndex(that._getActiveItem().first());\n\n                    listView.focusNext();\n                    if (!listView.focus()) {\n                        listView.focusLast();\n                    } else {\n                        if (e.shiftKey && !that.options.virtual) {\n                            this._multipleSelection = true;\n                            that._selectRange(activeItemIdx, listView.getElementIndex(listView.focus().first()) + dir);\n                        }\n                    }\n                } else {\n                    listView.focusFirst();\n                }\n                handled = true;\n\n            } else if (key === keys.UP) {\n                if (visible) {\n                    if (!that._activeItem && e.shiftKey) {\n                        that._activeItem = listView.focus();\n                        dir = 1;\n                    }\n                    activeItemIdx = listView.getElementIndex(that._getActiveItem().first());\n                    listView.focusPrev();\n                    if (!listView.focus()) {\n                        that.close();\n                    } else {\n                        if (e.shiftKey && !that.options.virtual) {\n                            this._multipleSelection = true;\n                            that._selectRange(activeItemIdx, listView.getElementIndex(listView.focus().first()) + dir);\n                        }\n                    }\n                }\n                handled = true;\n                e.preventDefault();\n            } else if ((key === keys.LEFT && !isRtl) || (key === keys.RIGHT && isRtl)) {\n                if (!hasValue) {\n                    tag = tag ? tag.prev(CHIP) : that.tagList.children(CHIP).last();\n                    if (tag[0]) {\n                        that.currentTag(tag);\n                    }\n                }\n                handled = true;\n            } else if ((key === keys.RIGHT && !isRtl) || (key === keys.LEFT && isRtl)) {\n                if (!hasValue && tag) {\n                    tag = tag.next(CHIP);\n                    that.currentTag(tag[0] ? tag : null);\n                }\n                handled = true;\n            } else if (e.ctrlKey && !e.altKey && key === keys.A && visible && !that.options.virtual) {\n                this._multipleSelection = true;\n                if (this._getSelectedIndices().length === listView.items().length) {\n                    that._activeItem = null;\n                }\n\n                if (listView.items().length) {\n                    that._selectRange(0, listView.items().length - 1);\n                }\n                handled = true;\n            } else if (key === keys.ENTER && visible) {\n                if (!listView.focus()) {\n                    e.stopPropagation();\n                    return;\n                }\n\n                e.preventDefault();\n\n                if (this._multipleSelection) {\n                    this._multipleSelection = false;\n                     if (listView.focus().hasClass(SELECTEDCLASS)) {\n                        that._close();\n                        e.stopPropagation();\n                        return;\n                    }\n                }\n\n                that._select(listView.focus()).done(function() {\n                    that._change();\n                    that._close();\n                });\n                handled = true;\n            } else if (key === keys.SPACEBAR && e.ctrlKey && visible) {\n                if (that._activeItem && listView.focus() && listView.focus()[0] === that._activeItem[0]) {\n                    that._activeItem = null;\n                }\n                if (!$(listView.focus()).hasClass(SELECTEDCLASS)) {\n                    that._activeItem = listView.focus();\n                }\n                that._select(listView.focus()).done(function() {\n                    that._change();\n                });\n                handled = true;\n                e.preventDefault();\n            } else if (key === keys.SPACEBAR && e.shiftKey && visible && !that.options.virtual) {\n                var activeIndex = listView.getElementIndex(that._getActiveItem());\n                var currentIndex = listView.getElementIndex(listView.focus());\n\n                if (activeIndex !== undefined$1 && currentIndex !== undefined$1) {\n                    that._selectRange(activeIndex, currentIndex);\n                }\n                handled = true;\n                e.preventDefault();\n            } else if (key === keys.ESC) {\n                if (visible) {\n                    e.preventDefault();\n                } else {\n                    that.tagList.children(CHIP).each(function(index, tag) {\n                        that._removeTag($(tag), false);\n                    });\n                    that._change();\n                }\n\n                that.close();\n                handled = true;\n            } else if (key === keys.HOME) {\n                if (visible) {\n                    if (!listView.focus()) {\n                        that.close();\n                    } else {\n                        if (e.ctrlKey && e.shiftKey && !that.options.virtual) {\n                            that._selectRange(listView.getElementIndex(listView.focus()[0]), 0);\n                        }\n                        listView.focusFirst();\n                    }\n                } else if (!hasValue) {\n                    tag = that.tagList.children(CHIP).first()[0];\n\n                    if (tag) {\n                        that.currentTag($(tag));\n                    }\n                }\n                handled = true;\n            } else if (key === keys.END) {\n                if (visible) {\n                    if (!listView.focus()) {\n                        that.close();\n                    } else {\n                        if (e.ctrlKey && e.shiftKey && !that.options.virtual) {\n                            that._selectRange(\n                                listView.getElementIndex(listView.focus()[0]),\n                                listView.element.children().length - 1\n                            );\n                        }\n                        listView.focusLast();\n                    }\n                } else if (!hasValue) {\n                    tag = that.tagList.children(CHIP).last()[0];\n\n                    if (tag) {\n                        that.currentTag($(tag));\n                    }\n                }\n                handled = true;\n            } else if ((key === keys.DELETE || key === keys.BACKSPACE) && !hasValue) {\n                that._state = ACCEPT;\n\n                if (that.options.tagMode === \"single\") {\n                    that._clearSingleTagValue();\n\n                    that._change();\n                    that._close();\n                    e.stopPropagation();\n                    return;\n                }\n\n                if (key === keys.BACKSPACE && !tag) {\n                    tag = that.tagList.children(CHIP).last();\n                }\n\n                if (tag && tag[0]) {\n                    that._removeTag(tag, true);\n                }\n                handled = true;\n            } else if (that.popup.visible() && (key === keys.PAGEDOWN || key === keys.PAGEUP)) {\n                e.preventDefault();\n\n                var direction = key === keys.PAGEDOWN ? 1 : -1;\n                listView.scrollWith(direction * listView.screenHeight());\n                handled = true;\n            } else {\n                clearTimeout(that._typingTimeout);\n                that._search();\n                handled = true;\n            }\n\n            if (handled) {\n                e.stopPropagation();\n            }\n        },\n\n        _hideBusy: function() {\n            var that = this;\n            clearTimeout(that._busy);\n            that.input.attr(ARIA_BUSY, false);\n            that._loading.addClass(HIDDENCLASS);\n            that._request = false;\n            that._busy = null;\n\n            that._toggleCloseVisibility();\n        },\n\n        _showBusyHandler: function() {\n            this.input.attr(ARIA_BUSY, true);\n            this._loading.removeClass(HIDDENCLASS);\n            this._hideClear();\n        },\n\n        _showBusy: function() {\n            var that = this;\n\n            that._request = true;\n\n            if (that._busy) {\n                return;\n            }\n\n            that._busy = setTimeout(that._showBusyHandler.bind(that), 100);\n        },\n\n        _placeholder: function(show, skipCaret) {\n            var that = this;\n            var input = that.input;\n            var active = activeElement();\n            var placeholder = that.options.placeholder;\n            var inputValue = input.val();\n            var isActive = input[0] === active;\n            var caretPos = inputValue.length;\n\n            if (!isActive || that.options.autoClose || inputValue === placeholder) {\n                caretPos = 0;\n                inputValue = \"\";\n            }\n\n            if (show === undefined$1) {\n                show = false;\n                if (input[0] !== active) {\n                    show = !that.listView.selectedDataItems()[0];\n                }\n            }\n\n            that._prev = inputValue;\n            input.toggleClass(\"k-readonly\", show).val(show ? placeholder : inputValue);\n\n            if (isActive && !skipCaret) {\n                kendo.caret(input[0], caretPos, caretPos);\n            }\n        },\n\n        _option: function(dataValue, dataText, selected) {\n            var option = \"<option\";\n\n            if (dataValue !== undefined$1) {\n                dataValue += \"\";\n\n                if (dataValue.indexOf('\"') !== -1) {\n                    dataValue = dataValue.replace(quotRegExp, \"&quot;\");\n                }\n\n                option += ' value=\"' + dataValue + '\"';\n            }\n\n            if (selected) {\n                option += ' selected';\n            }\n\n            option += \">\";\n\n            if (dataText !== undefined$1) {\n                option += kendo.htmlEncode(dataText);\n            }\n\n            return option += \"</option>\";\n        },\n\n        _render: function(data) {\n            var selectedItems = this.listView.selectedDataItems();\n            var values = this.listView.value();\n            var length = data.length;\n            var selectedIndex;\n            var options = \"\";\n            var dataItem;\n            var value;\n            var idx;\n\n            if (values.length !== selectedItems.length) {\n                selectedItems = this._buildSelectedItems(values);\n            }\n\n            var custom = {};\n            var optionsMap = {};\n\n            for (idx = 0; idx < length; idx++) {\n                dataItem = data[idx];\n                value = this._value(dataItem);\n\n                selectedIndex = this._selectedItemIndex(value, selectedItems);\n                if (selectedIndex !== -1) {\n                    selectedItems.splice(selectedIndex, 1);\n                }\n\n                optionsMap[value] = idx;\n                options += this._option(value, this._text(dataItem), selectedIndex !== -1);\n            }\n\n            if (selectedItems.length) {\n                for (idx = 0; idx < selectedItems.length; idx++) {\n                    dataItem = selectedItems[idx];\n\n                    value = this._value(dataItem);\n                    custom[value] = length;\n                    optionsMap[value] = length;\n\n                    length += 1;\n                    options += this._option(value, this._text(dataItem), true);\n                }\n            }\n\n            this._customOptions = custom;\n            this._optionsMap = optionsMap;\n\n            this.element.html(options);\n        },\n\n        _buildSelectedItems: function(values) {\n            var valueField = this.options.dataValueField;\n            var textField = this.options.dataTextField;\n            var result = [];\n            var item;\n\n            for (var idx = 0; idx < values.length; idx++) {\n                item = {};\n                item[valueField] = values[idx];\n                item[textField] = values[idx];\n\n                result.push(item);\n            }\n\n            return result;\n        },\n\n        _selectedItemIndex: function(value, selectedItems) {\n            var valueGetter = this._value;\n            var idx = 0;\n\n            for (; idx < selectedItems.length; idx++) {\n                if (value === valueGetter(selectedItems[idx])) {\n                    return idx;\n                }\n            }\n\n            return -1;\n        },\n\n        _search: function(noDelay) {\n            let that = this;\n\n            // noDelay may come as an even object, that is why an explicit === true check is needed.\n            if (noDelay === true) {\n                that._performSearch();\n                return;\n            }\n\n            clearTimeout(that._typingTimeout);\n\n            that._typingTimeout = setTimeout(function() {\n                that._performSearch();\n            }, that.options.delay);\n        },\n\n        _performSearch: function() {\n            var that = this,\n                value = that._inputValue();\n\n            if (that._prev !== value) {\n                that._prev = value;\n                that.search(value);\n                that._toggleCloseVisibility();\n            }\n        },\n\n        _toggleCloseVisibility: function() {\n            if (this.value().length || (this.input.val() && this.input.val() !== this.options.placeholder)) {\n                this._showClear();\n            } else {\n                this._hideClear();\n            }\n        },\n\n        _allowOpening: function() {\n            return this._allowSelection() && List.fn._allowOpening.call(this);\n        },\n\n        _allowSelection: function() {\n            var max = this.options.maxSelectedItems;\n            return max === null || max > this.listView.value().length;\n        },\n\n        updatePersistTagList: function(added, removed) {\n            if (this.persistTagList.added &&\n                this.persistTagList.added.length === removed.length &&\n                this.persistTagList.removed &&\n                this.persistTagList.removed.length === added.length) {\n                    this.persistTagList = false;\n             } else {\n                 this.listView._removedAddedIndexes = this._old.slice();\n                 this.persistTagList = {\n                     added: added,\n                     removed: removed\n                 };\n             }\n        },\n\n        _selectValue: function(added, removed) {\n            var that = this;\n            var total = that.dataSource.total();\n            var tagList = that.tagList;\n            var getter = that._value;\n            var removedItem;\n            var addedItem;\n            var idx;\n\n            if (this.persistTagList) {\n                this.updatePersistTagList(added, removed);\n                that._refreshTagListAria();\n\n                return;\n            }\n\n            if (that.options.tagMode === \"multiple\") {\n                for (idx = removed.length - 1; idx > -1; idx--) {\n                    removedItem = removed[idx];\n\n                    if (tagList.children(CHIP).length) {\n                        tagList[0].removeChild(tagList[0].children[removedItem.position]);\n                        that._setOption(getter(removedItem.dataItem), false);\n                    }\n                }\n\n                for (idx = 0; idx < added.length; idx++) {\n                    addedItem = added[idx];\n\n                    that.tagList.append(that.tagTemplate(addedItem.dataItem));\n\n                    that._setOption(getter(addedItem.dataItem), true);\n                }\n\n                kendo.applyStylesFromKendoAttributes(that.tagList, [\"background-color\"]);\n            } else {\n                if (!that._maxTotal || that._maxTotal < total) {\n                    that._maxTotal = total;\n                }\n\n                this._updateTagListHTML();\n\n                for (idx = removed.length - 1; idx > -1; idx--) {\n                    that._setOption(getter(removed[idx].dataItem), false);\n                }\n\n                for (idx = 0; idx < added.length; idx++) {\n                    that._setOption(getter(added[idx].dataItem), true);\n                }\n            }\n\n            that._refreshTagListAria();\n            that._refreshFloatingLabel();\n\n            that._placeholder();\n        },\n\n        _refreshTagListAria: function() {\n            var that = this;\n            html.renderChipList(that.tagList, $.extend({ selectable: that.value().length === 0 ? \"none\" : \"multiple\" }, that.options));\n        },\n\n        _updateTagListHTML: function() {\n            var that = this;\n            var values = that.value();\n            var total = that.dataSource.total();\n            var tagList = that.tagList;\n\n            tagList.children(CHIP).each(function(index, tag) {\n                $(tag).remove();\n            });\n\n            if (values.length) {\n                that.tagList.append(that.tagTemplate({\n                    values: values,\n                    dataItems: that.dataItems(),\n                    maxTotal: that._maxTotal,\n                    currentTotal: total\n                }));\n\n                kendo.applyStylesFromKendoAttributes(that.tagList, [\"background-color\"]);\n            }\n\n            that._refreshTagListAria();\n        },\n\n        _select: function(candidate) {\n            var resolved = $.Deferred().resolve();\n\n            if (!candidate) {\n                return resolved;\n            }\n\n            var that = this;\n            var listView = that.listView;\n            var dataItem = listView.dataItemByIndex(listView.getElementIndex(candidate));\n            var isSelected = candidate.hasClass(\"k-selected\");\n\n            if (that._state === REBIND) {\n                that._state = \"\";\n            }\n\n            if (!that._allowSelection() && !isSelected) {\n                return resolved;\n            }\n\n            if (that.trigger(isSelected ? DESELECT : SELECT, { dataItem: dataItem, item: candidate })) {\n                that._close();\n                return resolved;\n            }\n\n            that.persistTagList = false;\n            return listView.select(candidate).done(function() {\n                that._placeholder();\n\n                if (that._state === FILTER) {\n                    that._state = ACCEPT;\n                    listView.skipUpdate(true);\n                }\n            });\n        },\n\n        _selectRange: function(startIndex, endIndex) {\n            var that = this;\n            var listView = this.listView;\n            var maxSelectedItems = this.options.maxSelectedItems;\n            var indices = this._getSelectedIndices().slice();\n            var indicesToSelect = [];\n            var i;\n\n            var selectIndices = function(indices) {\n                listView.select(indices).done(function() {\n                    indices.forEach(function(index) {\n                        var dataItem = listView.dataItemByIndex(index);\n                        var candidate = listView.element.children()[index];\n                        var isSelected = $(candidate).hasClass(\"k-selected\");\n\n                        that.trigger(isSelected ? SELECT : DESELECT, { dataItem: dataItem, item: $(candidate) });\n                    });\n                    that._change();\n                });\n            };\n\n            if (indices.length - 1 === endIndex - startIndex) {\n                return selectIndices(indices);\n            }\n\n            if (startIndex < endIndex) {\n                for (i = startIndex; i <= endIndex; i++) {\n                    indicesToSelect.push(i);\n                }\n            } else {\n                for (i = startIndex; i >= endIndex; i--) {\n                    indicesToSelect.push(i);\n                }\n            }\n\n            if (maxSelectedItems !== null && indicesToSelect.length > maxSelectedItems) {\n                indicesToSelect = indicesToSelect.slice(0, maxSelectedItems);\n            }\n\n            for (i = 0; i < indicesToSelect.length; i++) {\n                var index = indicesToSelect[i];\n\n                if (this._getSelectedIndices().indexOf(index) == -1) {\n                    indices.push(index);\n                } else {\n                    indices.splice(indices.indexOf(index), 1);\n                }\n            }\n\n            if (!indices.length) {\n                return;\n            }\n\n            that.persistTagList = false;\n            return selectIndices(indices);\n        },\n\n        _input: function() {\n            var that = this;\n            var element = that.element;\n            var accessKey = element[0].accessKey;\n            var input = that._inputValuesContainer.children(\"input.k-input-inner\");\n\n            if (!input[0]) {\n                input = $('<input class=\"k-input-inner\" />').appendTo(that._inputValuesContainer);\n            }\n\n            element.removeAttr(\"accesskey\");\n            input.attr(\"data-validate\", false);\n\n            that._focused = that.input = input.attr({\n                \"autocomplete\": AUTOCOMPLETEVALUE,\n                \"title\": element[0].title\n            });\n\n            if (accessKey) {\n                that._focused.attr(\"accesskey\", accessKey);\n            }\n        },\n\n        _inputValuesContainer: function() {\n            var that = this,\n                inputValuesContainer = that.wrapper.children(\".k-input-values\");\n\n            if (!inputValuesContainer[0]) {\n                inputValuesContainer = $('<div class=\"k-input-values\"></div>').appendTo(that.wrapper);\n            }\n\n            that._inputValuesContainer = inputValuesContainer;\n        },\n\n        _tagList: function() {\n            var that = this,\n                options = that.options,\n                tagList = that._inputValuesContainer.children(\".k-chip-list\");\n\n            if (!tagList[0]) {\n                tagList = $(html.renderChipList('<div unselectable=\"on\" class=\"k-selection-multiple\" />', $.extend({ selectable: \"none\" }, options))).appendTo(that._inputValuesContainer);\n            }\n\n            that.tagList = tagList;\n        },\n\n        _tagTemplate: function() {\n            var that = this;\n            var options = that.options;\n            var tagTemplate = options.tagTemplate;\n            var hasDataSource = options.dataSource;\n            var isMultiple = options.tagMode === \"multiple\";\n            var singleTag = options.messages.singleTag;\n            var defaultTemplate;\n            var multipleTemplateFunc;\n            var singleTemplateFunc;\n\n            if (that.element[0].length && !hasDataSource) {\n                options.dataTextField = options.dataTextField || \"text\";\n                options.dataValueField = options.dataValueField || \"value\";\n            }\n\n            multipleTemplateFunc = data => encode(kendo.getter(options.dataTextField)(data));\n            singleTemplateFunc = ({ values }) => `${values.length} ${encode(singleTag)}`;\n\n            defaultTemplate = isMultiple ? multipleTemplateFunc : singleTemplateFunc;\n\n            that.tagTextTemplate = tagTemplate = tagTemplate ? kendo.template(tagTemplate) : defaultTemplate;\n\n            that.tagTemplate = function(data) {\n                return html.renderChip('<span unselectable=\"on\">' +\n                '</span>', $.extend({}, options, {\n                        fillMode: \"solid\",\n                        rounded: \"medium\",\n                        enabled: true,\n                        themeColor: \"base\",\n                        text: tagTemplate(data),\n                        attr: {\n                            unselectable: \"on\",\n                            \"aria-selected\": true,\n                            role: \"option\",\n                            \"aria-keyshortcuts\": isMultiple ? \"Enter Delete\" : \"Enter\"\n                        },\n                        removable: isMultiple,\n                        removableAttr: {\n                            unselectable: \"on\",\n                            \"aria-hidden\": true,\n                            \"aria-label\": that.options.messages.deleteTag,\n                            title: that.options.messages.deleteTag\n                        },\n                        icon: !isMultiple ? \"caret-alt-down\" : \"\",\n                        iconAttr: {\n                            unselectable: \"on\",\n                            \"aria-hidden\": true,\n                            \"aria-label\": 'open'\n                        }\n                    })\n                );\n            };\n        },\n\n        _loader: function() {\n            this._loading = $('<span class=\"k-icon k-i-loading k-input-loading-icon ' + HIDDENCLASS + '\"></span>').insertAfter(this._inputValuesContainer);\n        },\n\n        _popup: function() {\n            List.fn._popup.call(this);\n            this.popup.element.addClass(\"k-multiselect-popup\");\n        },\n\n        _clearButton: function() {\n            List.fn._clearButton.call(this);\n\n            if (this.options.clearButton) {\n                this._clear.insertAfter(this._inputValuesContainer);\n            }\n        },\n\n        _arrowButton: function() {\n            var arrowTitle = encode(this.options.messages.downArrow),\n                arrow = $(html.renderButton('<button type=\"button\" aria-label=\"' + arrowTitle + '\" class=\"k-input-button\"></button>', $.extend({}, this.options, {\n                    icon: \"caret-alt-down\",\n                    rounded: null\n                })));\n\n            if (this._arrow) {\n                this._arrow.remove();\n                this._arrow = null;\n            }\n\n            if (this.options.downArrow) {\n                this._arrow = arrow.attr({\n                    \"tabIndex\": -1\n                });\n\n                this._arrow.appendTo(this.wrapper);\n            }\n        },\n\n        _textContainer: function() {\n            var computedStyles = kendo.getComputedStyles(this.input[0], styles);\n\n            computedStyles.position = \"absolute\";\n            computedStyles.visibility = \"hidden\";\n            computedStyles.top = -3333;\n            computedStyles.left = -3333;\n\n            this._span = $(\"<span/>\").css(computedStyles).appendTo(this.wrapper);\n        },\n\n        _wrapper: function() {\n            var that = this,\n                element = that.element,\n                wrapper = element.parent(\"span.k-multiselect\");\n\n            if (!wrapper[0]) {\n                wrapper = element.wrap('<span class=\"k-multiselect k-input\" unselectable=\"on\" />').parent();\n                wrapper[0].style.cssText = element[0].style.cssText;\n            }\n\n            that.wrapper = wrapper\n                            .addClass(element[0].className)\n                            .removeClass('input-validation-error').css(\"display\", \"\");\n        },\n\n        _closeHandler: function(e) {\n            if (this.trigger(CLOSE)) {\n                e.preventDefault();\n            } else {\n                this.input.attr(ARIA_EXPANDED, false);\n                this.ul.attr(ARIA_HIDDEN, true);\n            }\n        },\n\n        _openHandler: function(e) {\n            this._adjustListWidth();\n\n            if (this.trigger(OPEN)) {\n                e.preventDefault();\n            } else {\n                this.input.attr(ARIA_EXPANDED, true);\n                this.ul.attr(ARIA_HIDDEN, false);\n            }\n        }\n    });\n\n    function compare(a, b) {\n        var length;\n\n        if ((a === null && b !== null) || (a !== null && b === null)) {\n            return false;\n        }\n\n        length = a.length;\n        if (length !== b.length) {\n            return false;\n        }\n\n        while (length--) {\n            if (a[length] !== b[length]) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    ui.plugin(MultiSelect);\n\n    kendo.cssProperties.registerPrefix(\"MultiSelect\", \"k-input-\");\n\n    kendo.cssProperties.registerValues(\"MultiSelect\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.multiselect.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.notification.js":
/*!**************************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.notification.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* harmony import */ var _kendo_popup_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.popup.js */ \"./node_modules/kendo-ui-core/esm/kendo.popup.js\");\n/* harmony import */ var _kendo_icons_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kendo.icons.js */ \"./node_modules/kendo-ui-core/esm/kendo.icons.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\n\nvar __meta__ = {\n    id: \"notification\",\n    name: \"Notification\",\n    category: \"web\",\n    description: \"The Notification widget displays user alerts.\",\n    depends: [ \"core\", \"popup\", \"icons\" ],\n    features: [ {\n        id: \"notification-fx\",\n        name: \"Animation\",\n        description: \"Support for animation\",\n        depends: [ \"fx\" ]\n    } ]\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        Widget = kendo.ui.Widget,\n        extend = $.extend,\n        encode = kendo.htmlEncode,\n        setTimeout = window.setTimeout,\n        CLICK = \"click\",\n        SHOW = \"show\",\n        HIDE = \"hide\",\n        KNOTIFICATION = \"k-notification\",\n        KCLOSEICONSELECTOR = `.k-notification-actions .k-icon`,\n        KHIDING = \"k-hiding\",\n        INFO = \"info\",\n        SUCCESS = \"success\",\n        WARNING = \"warning\",\n        ERROR = \"error\",\n        TYPEICONS = { [INFO]: \"info-circle\", [ERROR]: \"x-outline\", [WARNING]: \"exclamation-circle\", [SUCCESS]: \"check-outline\" },\n        TOP = \"top\",\n        LEFT = \"left\",\n        BOTTOM = \"bottom\",\n        RIGHT = \"right\",\n        UP = \"up\",\n        NS = \".kendoNotification\",\n        WRAPPER = '<div role=\"alert\" aria-live=\"polite\" class=\"k-notification\"></div>',\n        GET_TEMPLATE_FUNC = (encodeContent) =>\n            ({ typeIcon, content, closeButton }) =>\n                kendo.ui.icon($(`<span class=\"k-notification-status\" title=\"${encode(typeIcon)}\"></span>`), { icon: TYPEICONS[encode(typeIcon)] || encode(typeIcon) }) +\n                `<div class=\"k-notification-content\">${encodeContent ? encode(content) : content}</div>`,\n        TEMPLATE = GET_TEMPLATE_FUNC(false),\n        SAFE_TEMPLATE = GET_TEMPLATE_FUNC(true),\n        defaultActions = {\n            close: {\n                template: kendo.ui.icon($('<span aria-hidden=\"true\" title=\"Hide\"></span>'), { icon: \"x\" })\n            }\n        };\n\n    var Notification = Widget.extend({\n        init: function(element, options) {\n            let that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            if (options && options.button && !options.position && that.options.position) {\n                that.options.position.right = 40;\n            }\n\n            options = that.options;\n\n            if (!options.appendTo || !$(options.appendTo).is(element)) {\n                that.element.hide();\n            }\n\n            that._compileTemplates(options.templates);\n            that._guid = \"_\" + kendo.guid();\n            that._isRtl = kendo.support.isRtl(element);\n            that._compileStacking(options.stacking, options.position.top, options.position.left);\n\n            kendo.notify(that);\n        },\n\n        events: [\n            SHOW,\n            HIDE\n        ],\n\n        options: {\n            name: \"Notification\",\n            position: {\n                pinned: true,\n                top: null,\n                left: null,\n                bottom: 20,\n                right: 20\n            },\n            stacking: \"default\",\n            hideOnClick: true,\n            button: false,\n            allowHideAfter: 0,\n            autoHideAfter: 5000,\n            appendTo: null,\n            width: null,\n            height: null,\n            templates: [],\n            title: null,\n            animation: {\n                open: {\n                    effects: \"fade:in\",\n                    duration: 300\n                },\n                close: {\n                    effects: \"fade:out\",\n                    duration: 600,\n                    hide: true\n                }\n            }\n        },\n\n        _compileTemplates: function(templates) {\n            var that = this;\n            var kendoTemplate = kendo.template;\n\n            that._compiled = {};\n\n            $.each(templates, function(key, value) {\n                that._compiled[value.type] = kendoTemplate(value.template || $(\"#\" + value.templateId).html());\n            });\n\n            that._defaultCompiled = kendoTemplate(TEMPLATE);\n            that._safeCompiled = kendoTemplate(SAFE_TEMPLATE);\n        },\n\n        _getCompiled: function(type, safe) {\n            var defaultCompiled = safe ? this._safeCompiled : this._defaultCompiled;\n\n            return type ? this._compiled[type] || defaultCompiled : defaultCompiled;\n        },\n\n        _compileStacking: function(stacking, top, left) {\n            var that = this,\n                paddings = { paddingTop: 0, paddingRight: 0, paddingBottom: 0, paddingLeft: 0 },\n                horizontalAlignment = left !== null ? LEFT : RIGHT,\n                origin, position;\n\n            switch (stacking) {\n                case \"down\":\n                    origin = BOTTOM + \" \" + horizontalAlignment;\n                    position = TOP + \" \" + horizontalAlignment;\n                    delete paddings.paddingBottom;\n                break;\n                case RIGHT:\n                    origin = TOP + \" \" + RIGHT;\n                    position = TOP + \" \" + LEFT;\n                    delete paddings.paddingRight;\n                break;\n                case LEFT:\n                    origin = TOP + \" \" + LEFT;\n                    position = TOP + \" \" + RIGHT;\n                    delete paddings.paddingLeft;\n                break;\n                case UP:\n                    origin = TOP + \" \" + horizontalAlignment;\n                    position = BOTTOM + \" \" + horizontalAlignment;\n                    delete paddings.paddingTop;\n                break;\n                default:\n                    if (top !== null) {\n                        origin = BOTTOM + \" \" + horizontalAlignment;\n                        position = TOP + \" \" + horizontalAlignment;\n                        delete paddings.paddingBottom;\n                    } else {\n                        origin = TOP + \" \" + horizontalAlignment;\n                        position = BOTTOM + \" \" + horizontalAlignment;\n                        delete paddings.paddingTop;\n                    }\n                break;\n            }\n\n            that._popupOrigin = origin;\n            that._popupPosition = position;\n            that._popupPaddings = paddings;\n        },\n\n        _attachPopupEvents: function(options, popup) {\n            var that = this,\n                allowHideAfter = options.allowHideAfter,\n                attachDelay = !isNaN(allowHideAfter) && allowHideAfter > 0,\n                closeIcon;\n\n            function attachClick(target) {\n                target.on(CLICK + NS, function() {\n                    that._hidePopup(popup);\n                });\n            }\n\n            if (options.hideOnClick) {\n                popup.bind(\"activate\", function() {\n                    if (attachDelay) {\n                        setTimeout(function() {\n                            attachClick(popup.element);\n                        }, allowHideAfter);\n                    } else {\n                        attachClick(popup.element);\n                    }\n                });\n            } else if (options.button) {\n                closeIcon = popup.element.find(KCLOSEICONSELECTOR);\n                if (attachDelay) {\n                    setTimeout(function() {\n                        attachClick(closeIcon);\n                    }, allowHideAfter);\n                } else {\n                    attachClick(closeIcon);\n                }\n            }\n        },\n\n        _showPopup: function(wrapper, options) {\n            var that = this,\n                autoHideAfter = options.autoHideAfter,\n                x = options.position.left,\n                y = options.position.top,\n                popup, openPopup;\n\n            openPopup = $(\".\" + that._guid + \":not(.\" + KHIDING + \")\").last();\n\n            popup = new kendo.ui.Popup(wrapper, {\n                anchor: openPopup[0] ? openPopup : document.body,\n                origin: that._popupOrigin,\n                position: that._popupPosition,\n                _resizeOnWrap: true,\n                animation: options.animation,\n                copyAnchorStyles: false,\n                autosize: true,\n                modal: true,\n                collision: \"\",\n                isRtl: that._isRtl,\n                close: function() {\n                    that._triggerHide(this.element);\n                },\n                deactivate: function(e) {\n                    e.sender.element.off(NS);\n                    e.sender.element.find(KCLOSEICONSELECTOR).off(NS);\n                    e.sender.destroy();\n                }\n            });\n\n            that._attachPopupEvents(options, popup);\n\n            wrapper.removeClass(\"k-group k-reset k-popup\");\n\n            if (openPopup[0]) {\n                popup.open();\n            } else {\n                if (x === null) {\n                    x = $(window).width() - wrapper.outerWidth() - options.position.right;\n                }\n\n                if (y === null) {\n                    y = $(window).height() - wrapper.outerHeight() - options.position.bottom;\n                }\n\n                popup.open(x, y);\n            }\n            wrapper.removeClass(\"k-popup\");\n\n            popup.wrapper.addClass(that._guid).css(extend({ margin: 0,zIndex: 10050 }, that._popupPaddings));\n\n            if (options.position.pinned) {\n                popup.wrapper.css(\"position\", \"fixed\");\n                if (openPopup[0]) {\n                    that._togglePin(popup.wrapper, true);\n                }\n            } else if (!openPopup[0]) {\n                that._togglePin(popup.wrapper, false);\n            }\n\n            if (autoHideAfter > 0) {\n                setTimeout(function() {\n                    that._hidePopup(popup);\n                }, autoHideAfter);\n            }\n        },\n\n        _hidePopup: function(popup) {\n            popup.wrapper.addClass(KHIDING);\n            popup.close();\n        },\n\n        _togglePin: function(wrapper, pin) {\n            var win = $(window),\n                sign = pin ? -1 : 1;\n\n            wrapper.css({\n                top: parseInt(wrapper.css(TOP), 10) + sign * win.scrollTop(),\n                left: parseInt(wrapper.css(LEFT), 10) + sign * win.scrollLeft()\n            });\n        },\n\n        _attachStaticEvents: function(options, wrapper) {\n            var that = this,\n                allowHideAfter = options.allowHideAfter,\n                attachDelay = !isNaN(allowHideAfter) && allowHideAfter > 0;\n\n            function attachClick(target) {\n                target.on(CLICK + NS, that._hideStatic.bind(that, wrapper));\n            }\n\n            if (options.hideOnClick) {\n                if (attachDelay) {\n                    setTimeout(function() {\n                        attachClick(wrapper);\n                    }, allowHideAfter);\n                } else {\n                    attachClick(wrapper);\n                }\n            } else if (options.button) {\n                if (attachDelay) {\n                    setTimeout(function() {\n                        attachClick(wrapper.find(KCLOSEICONSELECTOR));\n                    }, allowHideAfter);\n                } else {\n                    attachClick(wrapper.find(KCLOSEICONSELECTOR));\n                }\n            }\n        },\n\n        _showStatic: function(wrapper, options) {\n            var that = this,\n                autoHideAfter = options.autoHideAfter,\n                animation = options.animation,\n                insertionMethod = options.stacking == UP || options.stacking == LEFT ? \"prependTo\" : \"appendTo\",\n                initializedNotifications;\n\n            if (!that._hideTimeouts) {\n                that._hideTimeouts = [];\n            }\n\n            wrapper\n                .removeClass(\"k-popup\")\n                .addClass(that._guid)\n                [insertionMethod](options.appendTo)\n                .hide()\n                .kendoAnimate(animation.open || false);\n\n            wrapper.css(\"display\", \"\");\n            initializedNotifications = that.getNotifications();\n            initializedNotifications.each(function(idx, element) {\n                that._attachStaticEvents(options, $(element));\n\n                if (autoHideAfter > 0 && !$(element).attr(kendo.attr(\"has-hidetimeout\"))) {\n                    $(element).attr(kendo.attr(\"has-hidetimeout\"), true);\n                    that._hideTimeouts.push(\n                        setTimeout(function() {\n                        that._hideStatic($(element));\n                    }, autoHideAfter));\n                }\n            });\n        },\n\n        _hideStatic: function(wrapper) {\n            wrapper.kendoAnimate(extend(this.options.animation.close || false, { complete: function() {\n                wrapper.off(NS).find(KCLOSEICONSELECTOR).off(NS);\n                wrapper.remove();\n            } }));\n            this._triggerHide(wrapper);\n        },\n\n        _triggerHide: function(element) {\n            this.trigger(HIDE, { element: element });\n        },\n\n        show: function(content, type, safe) {\n            var that = this,\n                options = that.options,\n                wrapper = $(WRAPPER),\n                contentId = kendo.guid(),\n                args, defaultArgs;\n\n            if (!type) {\n                type = INFO;\n            }\n\n            wrapper.attr(\"aria-label\", type);\n\n            if (content !== null && content !== undefined$1 && content !== \"\") {\n\n                if (kendo.isFunction(content)) {\n                    content = content();\n                }\n\n                defaultArgs = { typeIcon: type, content: \"\", closeButton: options.button };\n\n                if ($.isPlainObject(content)) {\n                    args = extend(defaultArgs, content);\n                } else {\n                    args = extend(defaultArgs, { content: content });\n                }\n\n                wrapper\n                    .addClass(KNOTIFICATION + \"-\" + type)\n                    .toggleClass(KNOTIFICATION + \"-closable\", options.button)\n                    .attr({\n                        \"data-role\": \"alert\",\n                        title: options.title\n                    })\n                    .css({ width: options.width, height: options.height })\n                    .append(that._getCompiled(type, safe)(args));\n\n                if (that.options.button) {\n                    wrapper.append(that.addActions(\"close\"));\n                }\n\n                wrapper.find(\".k-notification-content\").attr(\"id\", contentId);\n                wrapper.attr(\"aria-describedby\", contentId);\n\n                if ($(options.appendTo)[0]) {\n                    that._showStatic(wrapper, options);\n                } else {\n                    that._showPopup(wrapper, options);\n                }\n\n                that.trigger(SHOW, { element: wrapper });\n            }\n\n            return that;\n        },\n\n        showText: function(content, type) {\n            this.show(content, type, true);\n        },\n\n        info: function(content) {\n            return this.show(content, INFO);\n        },\n\n        success: function(content) {\n            return this.show(content, SUCCESS);\n        },\n\n        warning: function(content) {\n            return this.show(content, WARNING);\n        },\n\n        error: function(content) {\n            return this.show(content, ERROR);\n        },\n\n        hide: function() {\n            var that = this,\n                openedNotifications = that.getNotifications();\n\n            if (that.options.appendTo) {\n                if (that._hideTimeouts) {\n                    that._hideTimeouts.forEach(clearTimeout);\n                }\n                that._hideTimeouts = [];\n                openedNotifications.each(function(idx, element) {\n                    that._hideStatic($(element));\n                });\n            } else {\n                openedNotifications.each(function(idx, element) {\n                    var popup = $(element).data(\"kendoPopup\");\n                    if (popup) {\n                        that._hidePopup(popup);\n                    }\n                });\n            }\n\n            return that;\n        },\n\n        getNotifications: function() {\n            var that = this,\n                guidElements = $(\".\" + that._guid + \":not(.\" + KHIDING + \")\");\n\n            if (that.options.appendTo) {\n                return guidElements;\n            } else {\n                return guidElements.find(\">.k-child-animation-container >.\" + KNOTIFICATION);\n            }\n        },\n\n        setOptions: function(newOptions) {\n            var that = this,\n                options;\n\n            Widget.fn.setOptions.call(that, newOptions);\n\n            options = that.options;\n\n            if (newOptions.templates !== undefined$1) {\n                that._compileTemplates(options.templates);\n            }\n\n            if (newOptions.stacking !== undefined$1 || newOptions.position !== undefined$1) {\n                that._compileStacking(options.stacking, options.position.top, options.position.left);\n            }\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n            this.getNotifications().off(NS).find(KCLOSEICONSELECTOR).off(NS);\n        },\n\n        addActions: function(actions) {\n            var actionsContainer = $('<span class=\"k-notification-actions\"/>');\n\n            if (!Array.isArray(actions)) {\n                actions = [actions];\n            }\n\n            actions.forEach(function(action) {\n                $(defaultActions[action].template)\n                    .wrap(`<span class=\"k-notification-action k-notification-${action}-action\">`)\n                    .parent()\n                    .appendTo(actionsContainer);\n            });\n\n            return actionsContainer;\n        }\n    });\n\n    kendo.ui.plugin(Notification);\n\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.notification.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.numerictextbox.js":
/*!****************************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.numerictextbox.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* harmony import */ var _kendo_userevents_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.userevents.js */ \"./node_modules/kendo-ui-core/esm/kendo.userevents.js\");\n/* harmony import */ var _kendo_floatinglabel_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kendo.floatinglabel.js */ \"./node_modules/kendo-ui-core/esm/kendo.floatinglabel.js\");\n/* harmony import */ var _kendo_html_button_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./kendo.html.button.js */ \"./node_modules/kendo-ui-core/esm/kendo.html.button.js\");\n/* harmony import */ var _kendo_icons_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./kendo.icons.js */ \"./node_modules/kendo-ui-core/esm/kendo.icons.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\n\n\n\nlet $ = kendo.jQuery;\n\nfunction addInputPrefixSuffixContainers({ widget, wrapper, options, prefixInsertBefore, suffixInsertAfter }) {\n    var prefix = options.prefixOptions,\n        suffix = options.suffixOptions,\n        hasPrefixContent = prefix.template || prefix.icon,\n        hasSuffixContent = suffix.template || suffix.icon,\n        suffixInsertAfter = suffixInsertAfter || prefixInsertBefore,\n        layoutFlow = options.layoutFlow,\n        containerOrientation = layoutFlow ? (layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\") : \"horizontal\",\n        separatorOrientation = layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\",\n        INPUT_SEPARATOR = `<span class=\"k-input-separator k-input-separator-${separatorOrientation}\"></span>`,\n        prefixContainer,\n        suffixContainer;\n\n    if (prefix && hasPrefixContent) {\n        prefixContainer = wrapper.children(\".k-input-prefix\");\n\n        if (!prefixContainer[0]) {\n            prefixContainer = $(`<span class=\"k-input-prefix k-input-prefix-${containerOrientation}\" />`);\n            if (prefixInsertBefore) {\n                prefixContainer.insertBefore(prefixInsertBefore);\n            } else {\n                prefixContainer.prependTo(wrapper);\n            }\n        }\n\n        if (prefix.icon) {\n            prefixContainer.html(kendo.html.renderIcon({ icon: prefix.icon }));\n        }\n\n        if (prefix.template) {\n            prefixContainer.html(kendo.template(prefix.template)({}));\n        }\n\n        if (prefix.separator) {\n            $(INPUT_SEPARATOR).insertAfter(prefixContainer);\n        }\n    }\n\n    if (suffix && hasSuffixContent) {\n        suffixContainer = wrapper.children(\".k-input-suffix\");\n\n        if (!suffixContainer[0]) {\n            suffixContainer = $(`<span class=\"k-input-suffix k-input-suffix-${containerOrientation}\" />`).appendTo(wrapper);\n            if (suffixInsertAfter) {\n                suffixContainer.insertAfter(suffixInsertAfter);\n            } else {\n                suffixContainer.appendTo(wrapper);\n            }\n        }\n\n        if (suffix.icon) {\n            suffixContainer.html(kendo.html.renderIcon({ icon: suffix.icon }));\n        }\n\n        if (suffix.template) {\n            suffixContainer.html(kendo.template(suffix.template)({}));\n        }\n\n        if (suffix.separator) {\n            $(INPUT_SEPARATOR).insertBefore(suffixContainer);\n        }\n    }\n\n    widget._prefixContainer = prefixContainer;\n    widget._suffixContainer = suffixContainer;\n}\n\nvar __meta__ = {\n    id: \"numerictextbox\",\n    name: \"NumericTextBox\",\n    category: \"web\",\n    description: \"The NumericTextBox widget can format and display numeric, percentage or currency textbox.\",\n    depends: [ \"core\", \"userevents\", \"floatinglabel\", \"html.button\", \"icons\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        caret = kendo.caret,\n        keys = kendo.keys,\n        html = kendo.html,\n        ui = kendo.ui,\n        Widget = ui.Widget,\n        activeElement = kendo._activeElement,\n        extractFormat = kendo._extractFormat,\n        parse = kendo.parseFloat,\n        placeholderSupported = kendo.support.placeholder,\n        getCulture = kendo.getCulture,\n        CHANGE = \"change\",\n        DISABLED = \"disabled\",\n        READONLY = \"readonly\",\n        INPUT = \"k-input-inner\",\n        SPIN = \"spin\",\n        ns = \".kendoNumericTextBox\",\n        TOUCHEND = \"touchend\",\n        MOUSELEAVE = \"mouseleave\" + ns,\n        HOVEREVENTS = \"mouseenter\" + ns + \" \" + MOUSELEAVE,\n        FOCUSED = \"k-focus\",\n        HOVER = \"k-hover\",\n        FOCUS = \"focus\",\n        POINT = \".\",\n        SYMBOL = \"symbol\",\n        CLASS_ICON = \"k-icon\",\n        LABELCLASSES = \"k-label k-input-label\",\n        FLOATINGLABELCLASS = \"k-floating-label\",\n        SELECTED = \"k-selected\",\n        STATEDISABLED = \"k-disabled\",\n        STATEINVALID = \"k-invalid\",\n        ARIA_DISABLED = \"aria-disabled\",\n        INTEGER_REGEXP = /^(-)?(\\d*)$/,\n        NULL = null,\n        isPlainObject = $.isPlainObject,\n        extend = $.extend;\n\n    var NumericTextBox = Widget.extend({\n         init: function(element, options) {\n             var that = this,\n             isStep = options && options.step !== undefined$1,\n             min, max, step, value, disabled;\n             var inputType;\n\n             Widget.fn.init.call(that, element, options);\n\n             options = that.options;\n             element = that.element\n                           .on(\"focusout\" + ns, that._focusout.bind(that))\n                           .attr(\"role\", \"spinbutton\");\n\n             options.placeholder = options.placeholder || element.attr(\"placeholder\");\n\n             min = that.min(element.attr(\"min\"));\n             max = that.max(element.attr(\"max\"));\n             step = that._parse(element.attr(\"step\"));\n\n             if (options.min === NULL && min !== NULL) {\n                 options.min = min;\n             }\n\n             if (options.max === NULL && max !== NULL) {\n                 options.max = max;\n             }\n\n             if (!isStep && step !== NULL) {\n                 options.step = step;\n             }\n\n             that._initialOptions = extend({}, options);\n\n             inputType = element.attr(\"type\");\n\n             that._reset();\n             that._wrapper();\n             that._arrows();\n             that._validation();\n             that._input();\n\n             if (!kendo.support.mobileOS) {\n                 that._text.on(FOCUS + ns, that._click.bind(that));\n             } else {\n                 that._text.on(TOUCHEND + ns + \" \" + FOCUS + ns, function() {\n                     if (kendo.support.browser.edge) {\n                         that._text.one(FOCUS + ns, function() {\n                            that._focusin();\n                         });\n                     } else {\n                        that._focusin();\n                     }\n                     that.selectValue();\n                 });\n             }\n\n             element.attr(\"aria-valuemin\", options.min !== NULL ? options.min * options.factor : options.min)\n                    .attr(\"aria-valuemax\", options.max !== NULL ? options.max * options.factor : options.max);\n\n             options.format = extractFormat(options.format);\n\n             value = options.value;\n\n             if (value == NULL) {\n                 if (inputType == \"number\") {\n                    value = parseFloat(element.val());\n                 } else {\n                     value = element.val();\n                 }\n             }\n\n             that.value(value);\n\n             disabled = !options.enable || element.is(\"[disabled]\") || $(that.element).parents(\"fieldset\").is(':disabled');\n\n             if (disabled) {\n                 that.enable(false);\n             } else {\n                 that.readonly(element.is(\"[readonly]\"));\n             }\n\n             that._label();\n             that._ariaLabel(that._text);\n             that._applyCssClasses();\n\n             addInputPrefixSuffixContainers({ widget: that, wrapper: that.wrapper, options: that.options, prefixInsertBefore: that._text, suffixInsertAfter: that._validationIcon });\n             if (that.floatingLabel) {\n                 that.floatingLabel.refresh();\n             }\n\n             kendo.notify(that);\n         },\n\n        options: {\n            name: \"NumericTextBox\",\n            decimals: NULL,\n            autoAdjust: true,\n            enable: true,\n            restrictDecimals: false,\n            min: NULL,\n            max: NULL,\n            value: NULL,\n            step: 1,\n            round: true,\n            culture: \"\",\n            format: \"n\",\n            spinners: true,\n            placeholder: \"\",\n            selectOnFocus: false,\n            factor: 1,\n            upArrowText: \"Increase value\",\n            downArrowText: \"Decrease value\",\n            label: null,\n            size: \"medium\",\n            fillMode: \"solid\",\n            rounded: \"medium\",\n            prefixOptions: {\n                separator: true\n            },\n            suffixOptions: {\n                separator: true\n            }\n        },\n        events: [\n            CHANGE,\n            SPIN\n        ],\n\n        _editable: function(options) {\n            var that = this,\n                element = that.element,\n                disable = options.disable,\n                readonly = options.readonly,\n                text = that._text.add(element),\n                wrapper = that.wrapper.off(HOVEREVENTS);\n\n            that._toggleText(true);\n\n            that._upArrowEventHandler.unbind(\"press\");\n            that._downArrowEventHandler.unbind(\"press\");\n            element\n                .off(\"keydown\" + ns)\n                .off(\"keyup\" + ns)\n                .off(\"input\" + ns)\n                .off(\"paste\" + ns);\n\n            if (that._inputLabel) {\n                that._inputLabel.off(ns);\n            }\n\n            if (!readonly && !disable) {\n                wrapper\n                    .removeClass(STATEDISABLED)\n                    .on(HOVEREVENTS, that._toggleHover);\n\n                text.prop(DISABLED, false)\n                    .prop(READONLY, false)\n                    .attr(ARIA_DISABLED, false);\n\n                that._upArrowEventHandler.bind(\"press\", function(e) {\n                    e.preventDefault();\n                    that._spin(1);\n                    that._upArrow.addClass(SELECTED);\n                });\n\n                that._downArrowEventHandler.bind(\"press\", function(e) {\n                    e.preventDefault();\n                    that._spin(-1);\n                    that._downArrow.addClass(SELECTED);\n                });\n\n                that.element\n                    .on(\"keydown\" + ns, that._keydown.bind(that))\n                    .on(\"keyup\" + ns, that._keyup.bind(that))\n                    .on(\"paste\" + ns, that._paste.bind(that))\n                    .on(\"input\" + ns, that._inputHandler.bind(that));\n\n                if (that._inputLabel) {\n                    that._inputLabel.on(\"click\" + ns, that.focus.bind(that));\n                }\n\n            } else {\n                wrapper\n                    .addClass(disable ? STATEDISABLED : \"\")\n                    .removeClass(disable ? \"\" : STATEDISABLED);\n\n                text.attr(DISABLED, disable)\n                    .attr(READONLY, readonly)\n                    .attr(ARIA_DISABLED, disable);\n            }\n        },\n\n        readonly: function(readonly) {\n            var that = this;\n\n            this._editable({\n                readonly: readonly === undefined$1 ? true : readonly,\n                disable: false\n            });\n\n            if (that.floatingLabel) {\n                that.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n            }\n        },\n\n        enable: function(enable) {\n            var that = this;\n\n            this._editable({\n                readonly: false,\n                disable: !(enable = enable === undefined$1 ? true : enable)\n            });\n\n            if (that.floatingLabel) {\n                that.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n            }\n        },\n\n        setOptions: function(options) {\n            var that = this;\n            Widget.fn.setOptions.call(that, options);\n\n            that._text.prop(\"placeholder\", that.options.placeholder);\n            that._placeholder(that.options.placeholder);\n            that.element.attr({\n                \"aria-valuemin\": that.options.min !== NULL ? that.options.min * that.options.factor : that.options.min,\n                \"aria-valuemax\": that.options.max !== NULL ? that.options.max * that.options.factor : that.options.max\n            });\n\n            that.options.format = extractFormat(that.options.format);\n            that._upArrowEventHandler.destroy();\n            that._upArrowEventHandler = null;\n            that._downArrowEventHandler.destroy();\n            that._downArrowEventHandler = null;\n            that._arrowsWrap.remove();\n            that._arrows();\n\n            that._applyCssClasses();\n\n            if (that._inputLabel) {\n                that._inputLabel.off(ns);\n                that._inputLabel.remove();\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.destroy();\n                    if (that._floatingLabelContainer) {\n                        that.wrapper.unwrap();\n                    }\n                }\n            }\n\n            that._label();\n\n            if (options.enable !== undefined$1 || options.readonly !== undefined$1) {\n                that._editable({\n                    readonly: options.readonly,\n                    disable: !options.enable\n                });\n            } else {\n                that._editable({\n                    readonly: that.element.attr(\"readonly\") !== undefined$1 ? Boolean(that.element.attr(\"readonly\")) : that.options.readonly,\n                    disable: that.element.attr(\"disabled\") !== undefined$1 ? Boolean(that.element.attr(\"disabled\")) : !that.options.enable\n                });\n            }\n\n            if (options.value !== undefined$1) {\n                that.value(options.value);\n            } else if (that._value !== undefined$1) {\n                that.value(that._value);\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n\n            if (that._inputLabel) {\n                that._inputLabel.off(ns);\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.destroy();\n                }\n            }\n\n            that.element\n                .add(that._text)\n                .add(that._upArrow)\n                .add(that._downArrow)\n                .off(ns);\n\n            that._upArrowEventHandler.destroy();\n            that._downArrowEventHandler.destroy();\n\n            if (that._form) {\n                that._form.off(\"reset\", that._resetHandler);\n            }\n\n            Widget.fn.destroy.call(that);\n        },\n\n        min: function(value) {\n            return this._option(\"min\", value);\n        },\n\n        max: function(value) {\n            return this._option(\"max\", value);\n        },\n\n        step: function(value) {\n            return this._option(\"step\", value);\n        },\n\n        value: function(value) {\n            var that = this, adjusted;\n\n            if (value === undefined$1) {\n                return that._value;\n            }\n\n            value = that._parse(value);\n            adjusted = that._adjust(value);\n\n            if (value !== adjusted) {\n                value = NULL;\n            }\n\n            that._update(value);\n            that._old = that._value;\n\n            if (that.floatingLabel) {\n                that.floatingLabel.refresh();\n            }\n        },\n\n        focus: function() {\n            this._focusin();\n            this.selectValue();\n        },\n\n        _adjust: function(value) {\n            let that = this,\n                options = that.options,\n                min = options.min,\n                max = options.max,\n                autoAdjust = options.autoAdjust;\n\n            if (value === NULL || !autoAdjust) {\n                return value;\n            }\n\n            if (min !== NULL && value < min) {\n                value = min;\n            } else if (max !== NULL && value > max) {\n                value = max;\n            }\n\n            return value;\n        },\n\n        _arrows: function() {\n            var that = this,\n            arrows,\n            _release = function() {\n                clearTimeout( that._spinning );\n                arrows.removeClass(SELECTED);\n            },\n            options = that.options,\n            spinners = options.spinners,\n            element = that.element;\n\n            arrows = element.siblings(\".k-icon-button\");\n\n            if (!arrows[0]) {\n                arrows = $(buttonHtml(\"increase\", options.upArrowText, options) + buttonHtml(\"decrease\", options.downArrowText, options))\n                        .appendTo(that.wrapper);\n\n                that._arrowsWrap = arrows.wrapAll('<span class=\"k-input-spinner k-spin-button\"/>').parent();\n            }\n\n            if (!spinners) {\n                arrows.parent().toggle(spinners);\n            }\n\n            that._upArrow = arrows.eq(0);\n            that._upArrowEventHandler = new kendo.UserEvents(that._upArrow, { release: _release });\n            that._downArrow = arrows.eq(1);\n            that._downArrowEventHandler = new kendo.UserEvents(that._downArrow, { release: _release });\n        },\n\n        _validation: function() {\n            var that = this;\n            var element = that.element;\n\n            that._validationIcon = $(kendo.ui.icon({ icon: \"exclamation-circle\", iconClass: \"k-input-validation-icon k-hidden\" })).insertAfter(element);\n        },\n\n        _blur: function() {\n            var that = this;\n\n            that._toggleText(true);\n\n            that._change(that.element.val());\n        },\n\n        _click: function(e) {\n            var that = this;\n\n            clearTimeout(that._focusing);\n            that._focusing = setTimeout(function() {\n                var input = e.target,\n                    idx = caret(input)[0],\n                    value = input.value.substring(0, idx),\n                    format = that._format(that.options.format),\n                    group = format[\",\"],\n                    result, groupRegExp, extractRegExp,\n                    caretPosition = 0;\n\n                if (group) {\n                    groupRegExp = new RegExp(\"\\\\\" + group, \"g\");\n                    extractRegExp = new RegExp(\"(-)?(\" + format[SYMBOL] + \")?([\\\\d\\\\\" + group + \"]+)(\\\\\" + format[POINT] + \")?(\\\\d+)?\");\n                }\n\n                if (extractRegExp) {\n                    result = extractRegExp.exec(value);\n                }\n\n                if (result) {\n                    caretPosition = result[0].replace(groupRegExp, \"\").length;\n\n                    if (value.indexOf(\"(\") != -1 && that._value < 0) {\n                        caretPosition++;\n                    }\n                }\n\n                that._focusin();\n\n                caret(that.element[0], caretPosition);\n                that.selectValue();\n            });\n        },\n\n        selectValue: function() {\n            if (this.options.selectOnFocus) {\n                this.element[0].select();\n            }\n        },\n\n        _getFactorValue: function(value) {\n            var that = this,\n                factor = that.options.factor;\n\n            if (factor && factor !== 1) {\n                value = kendo.parseFloat(value);\n                if (value !== null) {\n                    value = value / factor;\n                }\n            }\n\n            return value;\n        },\n\n        _change: function(value) {\n            var that = this;\n\n            value = that._getFactorValue(value);\n            that._update(value);\n            value = that._value;\n\n            if (that._old != value) {\n                that._old = value;\n\n                if (!that._typing) {\n                    // trigger the DOM change event so any subscriber gets notified\n                    that.element.trigger(CHANGE);\n                }\n\n                that.trigger(CHANGE);\n            }\n\n            that._typing = false;\n        },\n\n        _culture: function(culture) {\n            return culture || getCulture(this.options.culture);\n        },\n\n        _focusin: function() {\n            var that = this;\n            that.wrapper.addClass(FOCUSED);\n            that._toggleText(false);\n            that.element[0].focus();\n        },\n\n        _focusout: function() {\n            var that = this;\n\n            clearTimeout(that._focusing);\n            that.wrapper.removeClass(FOCUSED).removeClass(HOVER);\n            that._blur();\n            that._removeInvalidState();\n        },\n\n        _format: function(format, culture) {\n            var numberFormat = this._culture(culture).numberFormat;\n\n            format = format.toLowerCase();\n\n            if (format.indexOf(\"c\") > -1) {\n                numberFormat = numberFormat.currency;\n            } else if (format.indexOf(\"p\") > -1) {\n                numberFormat = numberFormat.percent;\n            }\n\n            return numberFormat;\n        },\n\n        _input: function() {\n            var that = this,\n                options = that.options,\n                element = that.element.addClass(INPUT).show()[0],\n                accessKey = element.accessKey,\n                wrapper = that.wrapper,\n                inputs = wrapper.find(POINT + INPUT),\n                text;\n\n            text = inputs.first();\n\n            if (text.length < 2) {\n                text = $('<input type=\"text\"/>')\n                        .attr(kendo.attr(\"validate\"), false)\n                        .insertBefore(element);\n            }\n\n            try {\n                element.setAttribute(\"type\", \"text\");\n            } catch (e) {\n                element.type = \"text\";\n            }\n\n            text[0].title = element.title;\n            text[0].tabIndex = element.tabIndex;\n            text[0].style.cssText = element.style.cssText;\n            text.prop(\"placeholder\", options.placeholder);\n\n            if (accessKey) {\n                text.attr(\"accesskey\", accessKey);\n                element.accessKey = \"\";\n            }\n\n\n            that._text = text.addClass(element.className)\n                             .attr({\n                                 \"role\": \"spinbutton\",\n                                 \"aria-valuemin\": options.min !== NULL ? options.min * options.factor : options.min,\n                                 \"aria-valuemax\": options.max !== NULL ? options.max * options.factor : options.max,\n                                 \"autocomplete\": \"off\"\n                             });\n        },\n\n        _keydown: function(e) {\n            var that = this,\n                key = e.keyCode;\n\n            if (key === keys.NUMPAD_DOT) {\n                that._numPadDot = true;\n            }\n\n            if (key == keys.DOWN) {\n                that._step(-1);\n                return;\n            } else if (key == keys.UP) {\n                that._step(1);\n                return;\n            } else if (key == keys.ENTER) {\n                that._change(that.element.val());\n                return;\n            }\n\n            if (key != keys.TAB) {\n                that._typing = true;\n            }\n            that._cachedCaret = caret(that.element);\n        },\n\n        _keyup: function() {\n            this._removeInvalidState();\n        },\n\n        _inputHandler: function() {\n            var element = this.element;\n            var value = element.val();\n            var min = this.options.min;\n            var numberFormat = this._format(this.options.format);\n            var decimalSeparator = numberFormat[POINT];\n            var minInvalid = (min !== null && min >= 0 && value.charAt(0) === \"-\");\n\n            if (this._numPadDot && decimalSeparator !== POINT) {\n                value = value.replace(POINT, decimalSeparator);\n                this.element.val(value);\n                this._numPadDot = false;\n            }\n\n            if (this._isPasted && this._parse(value)) {\n                value = this._parse(value)\n                    .toString()\n                    .replace(POINT, numberFormat[POINT]);\n            }\n\n            if (this._numericRegex(numberFormat).test(value) && !minInvalid) {\n                this._oldText = value;\n            } else {\n                this._blinkInvalidState();\n                this.element.val(this._oldText);\n                if (this._cachedCaret) {\n                    caret(element, this._cachedCaret[0]);\n                    this._cachedCaret = null;\n                }\n            }\n\n            this._isPasted = false;\n        },\n\n        _blinkInvalidState: function() {\n            var that = this;\n\n            that._addInvalidState();\n            clearTimeout(that._invalidStateTimeout);\n            that._invalidStateTimeout = setTimeout(that._removeInvalidState.bind(that), 100);\n        },\n\n        _addInvalidState: function() {\n            var that = this;\n\n            that.wrapper.addClass(STATEINVALID);\n            that._validationIcon.removeClass('k-hidden');\n        },\n\n        _removeInvalidState: function() {\n            var that = this;\n\n            that.wrapper.removeClass(STATEINVALID);\n            that._validationIcon.addClass('k-hidden');\n            that._invalidStateTimeout = null;\n        },\n\n        _numericRegex: function(numberFormat) {\n            var that = this;\n            var separator = numberFormat[POINT];\n            var precision = that.options.decimals;\n            var fractionRule = \"*\";\n\n            if (separator === POINT) {\n                separator = \"\\\\\" + separator;\n            }\n\n            if (precision === NULL) {\n                precision = numberFormat.decimals;\n            }\n\n            if (precision === 0 && that.options.restrictDecimals) {\n                return INTEGER_REGEXP;\n            }\n\n            if (that.options.restrictDecimals) {\n                fractionRule = \"{0,\" + precision + \"}\";\n            }\n\n            if (that._separator !== separator || that._oldPrecision !== precision) {\n                that._separator = separator;\n                that._floatRegExp = new RegExp(\"^(-)?(((\\\\d+(\" + separator + \"\\\\d\" + fractionRule + \")?)|(\" + separator + \"\\\\d\" + fractionRule + \")))?$\");\n                that._oldPrecision = precision;\n            }\n\n            return that._floatRegExp;\n        },\n\n        _paste: function(e) {\n            var that = this;\n            var element = e.target;\n            var value = element.value;\n            var numberFormat = that._format(that.options.format);\n\n            that._isPasted = true;\n\n           setTimeout(function() {\n                var result = that._parse(element.value);\n\n                if (result === NULL) {\n                    that._update(value);\n                } else {\n                    element.value = result.toString().replace(POINT, numberFormat[POINT]);\n                    if (that._adjust(result) !== result || !that._numericRegex(numberFormat).test(element.value)) {\n                        value = that._getFactorValue(element.value);\n                        that._update(value);\n                    }\n                }\n            });\n        },\n\n        _option: function(option, value) {\n            var that = this,\n                element = that.element,\n                options = that.options;\n\n            if (value === undefined$1) {\n                return options[option];\n            }\n\n            value = that._parse(value);\n\n            if (!value && option === \"step\") {\n                return;\n            }\n\n            options[option] = value;\n            element\n                .add(that._text)\n                .attr(\"aria-value\" + option, value);\n\n            element.attr(option, value);\n        },\n\n        _spin: function(step, timeout) {\n            var that = this;\n\n            timeout = timeout || 500;\n\n            clearTimeout( that._spinning );\n            that._spinning = setTimeout(function() {\n                that._spin(step, 50);\n            }, timeout );\n\n            that._step(step);\n        },\n\n        _step: function(step) {\n            var that = this,\n                element = that.element,\n                originalValue = that._value,\n                value = that._parse(element.val()) || 0,\n                precision = that.options.decimals || 2;\n\n            if (activeElement() != element[0]) {\n                that._focusin();\n            }\n\n            if (that.options.factor && value) {\n                value = value / that.options.factor;\n            }\n\n            value = +(value + that.options.step * step).toFixed(precision);\n            value = that._adjust(value);\n            that._update(value);\n            that._typing = false;\n\n            if (originalValue !== value) {\n                that.trigger(SPIN);\n            }\n        },\n\n        _toggleHover: function(e) {\n            $(e.currentTarget).toggleClass(HOVER, e.type === \"mouseenter\");\n        },\n\n        _toggleText: function(toggle) {\n            var that = this;\n\n            that._text.toggle(toggle);\n            if (toggle) {\n                that._text.removeAttr(\"aria-hidden\");\n            } else {\n                that._text.attr(\"aria-hidden\", \"true\");\n            }\n            that.element.toggle(!toggle);\n        },\n\n        _parse: function(value, culture) {\n            return parse(value, this._culture(culture), this.options.format);\n        },\n\n        _round: function(value, precision) {\n            var rounder = this.options.round ? kendo._round : truncate;\n\n            return rounder(value, precision);\n        },\n\n        _update: function(value) {\n            var that = this,\n                options = that.options,\n                factor = options.factor,\n                format = options.format,\n                decimals = options.decimals,\n                culture = that._culture(),\n                numberFormat = that._format(format, culture),\n                originalValue,\n                isNotNull;\n\n            if (decimals === NULL) {\n                decimals = numberFormat.decimals;\n            }\n\n            value = that._parse(value, culture);\n\n            isNotNull = value !== NULL;\n\n            if (isNotNull) {\n                value = parseFloat(that._round(value, decimals), 10);\n            }\n\n            that._value = value = that._adjust(value);\n            that._placeholder(kendo.toString(value, format, culture));\n\n            if (isNotNull) {\n                if (factor) {\n                    value = parseFloat(that._round(value * factor, decimals), 10);\n                }\n                value = value.toString();\n                if (value.indexOf(\"e\") !== -1) {\n                    value = that._round(+value, decimals);\n                }\n                originalValue = value;\n                value = value.replace(POINT, numberFormat[POINT]);\n            } else {\n                value = null;\n                originalValue = null;\n            }\n\n            that.element.val(value);\n            that._oldText = value;\n            that.element.add(that._text).attr(\"aria-valuenow\", originalValue);\n        },\n\n        _placeholder: function(value) {\n            var input = this._text;\n\n            input.val(value);\n            if (!placeholderSupported && !value) {\n                input.val(this.options.placeholder);\n            }\n\n            input.attr(\"title\", this.element.attr(\"title\") || input.val());\n        },\n\n        _label: function() {\n            var that = this;\n            var element = that.element;\n            var options = that.options;\n            var id = element.attr(\"id\");\n            var floating;\n            var labelText;\n\n            if (options.label !== null) {\n                floating = isPlainObject(options.label) ? options.label.floating : false;\n                labelText = isPlainObject(options.label) ? options.label.content : options.label;\n\n                if (floating) {\n                    that._floatingLabelContainer = that.wrapper.wrap(\"<span></span>\").parent();\n                    that.floatingLabel = new kendo.ui.FloatingLabel(that._floatingLabelContainer, { widget: that });\n                }\n\n                if (kendo.isFunction(labelText)) {\n                    labelText = labelText.call(that);\n                }\n\n                if (!labelText) {\n                    labelText = \"\";\n                }\n\n                if (!id) {\n                    id = options.name + \"_\" + kendo.guid();\n                    element.attr(\"id\", id);\n                }\n\n                that._inputLabel = $(\"<label class='\" + (floating ? FLOATINGLABELCLASS : LABELCLASSES) + \"' for='\" + id + \"'>\" + labelText + \"</label>'\")[floating ? \"insertAfter\" : \"insertBefore\"](that.wrapper);\n\n                if ((that.element.attr(\"disabled\") === undefined$1) && (that.element.attr(\"readonly\") === undefined$1)) {\n                    that._inputLabel.on(\"click\" + ns, that.focus.bind(that));\n                }\n            }\n        },\n\n        _wrapper: function() {\n            var that = this,\n                element = that.element,\n                DOMElement = element[0],\n                wrapper;\n\n            wrapper = element.parents(\".k-numerictextbox\");\n\n            if (!wrapper.is(\"span.k-numerictextbox\")) {\n                wrapper = element.hide().wrap(\"<span/>\").parent();\n            }\n\n            wrapper[0].style.cssText = DOMElement.style.cssText;\n            DOMElement.style.width = \"\";\n            that.wrapper = wrapper.addClass(\"k-numerictextbox k-input\")\n                                  .addClass(DOMElement.className)\n                                  .removeClass('input-validation-error')\n                                  .css(\"display\", \"\");\n        },\n\n        _reset: function() {\n            var that = this,\n                element = that.element,\n                formId = element.attr(\"form\"),\n                form = formId ? $(\"#\" + formId) : element.closest(\"form\");\n\n            if (form[0]) {\n                that._resetHandler = function() {\n                    setTimeout(function() {\n                        that.value(element[0].value);\n                        that.max(that._initialOptions.max);\n                        that.min(that._initialOptions.min);\n                    });\n                };\n\n                that._form = form.on(\"reset\", that._resetHandler);\n            }\n        }\n    });\n\n    kendo.cssProperties.registerPrefix(\"NumericTextBox\", \"k-input-\");\n\n    kendo.cssProperties.registerValues(\"NumericTextBox\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n    function buttonHtml(direction, text, options) {\n        var className = direction === \"increase\" ? \"caret-alt-up\" : \"caret-alt-down\";\n        var dir = direction === \"increase\" ? \"increase\" : \"decrease\";\n\n        return html.renderButton('<button role=\"button\" tabindex=\"-1\" unselectable=\"on\" class=\"k-spinner-' + dir + '\" aria-label=\"' + text + '\" title=\"' + text + '\"></button>', extend({}, options, {\n            icon: className,\n            shape: null,\n            rounded: null\n        }));\n    }\n\n    function truncate(value, precision) {\n        var parts = parseFloat(value, 10).toString().split(POINT);\n\n        if (parts[1]) {\n            parts[1] = parts[1].substring(0, precision);\n        }\n\n        return parts.join(POINT);\n\n    }\n\n    ui.plugin(NumericTextBox);\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.numerictextbox.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.pager.js":
/*!*******************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.pager.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.data.js */ \"./node_modules/kendo-ui-core/esm/kendo.data.js\");\n/* harmony import */ var _kendo_icons_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.icons.js */ \"./node_modules/kendo-ui-core/esm/kendo.icons.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\nvar __meta__ = {\n    id: \"pager\",\n    name: \"Pager\",\n    category: \"framework\",\n    depends: [ \"data\", \"icons\" ],\n    advanced: true\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        ui = kendo.ui,\n        Widget = ui.Widget,\n        keys = kendo.keys,\n        mediaQuery = kendo.mediaQuery,\n        support = kendo.support,\n        encode = kendo.htmlEncode,\n        template = kendo.template,\n        FIRST = \"caret-alt-to-left\",\n        LAST = \"caret-alt-to-right\",\n        PREV = \"caret-alt-left\",\n        NEXT = \"caret-alt-right\",\n        FIRST_CONST = \"caret-alt-to-left\",\n        LAST_CONST = \"caret-alt-to-right\",\n        PREV_CONST = \"caret-alt-left\",\n        NEXT_CONST = \"caret-alt-right\",\n        FOCUSABLE = \":kendoFocusable:not([tabindex='-1'])\",\n        CHANGE = \"change\",\n        NS = \".kendoPager\",\n        CLICK = \"click\",\n        KEYDOWN = \"keydown\",\n        DISABLED = \"disabled\",\n        MOUSEDOWN = \"down\",\n        MAX_VALUE = Number.MAX_VALUE,\n        isRtl = false,\n        iconTemplate = ({ text, wrapClassName, className, size }) => `<button role=\"button\" title=\"${text}\" aria-label=\"${text}\" class=\"k-pager-nav k-button k-button-flat k-button-flat-base k-icon-button ${wrapClassName} ${size}\">${kendo.ui.icon($('<span class=\"k-button-icon\"></span>'),className)}</button>`;\n\n    function button(options) {\n        return options.template( {\n            idx: options.idx,\n            text: options.text,\n            ns: kendo.ns,\n            numeric: options.numeric,\n            size: options.size,\n            title: options.title || \"\",\n            tabindex: options.navigatable ? 0 : -1,\n            navigatable: options.navigatable\n        });\n    }\n\n    function selectOption(template, idx, text, selected) {\n        return template( {\n            idx: idx,\n            text: text || idx,\n            selected: selected || false\n        });\n    }\n\n    function icon(className, text, wrapClassName, id, size) {\n        return iconTemplate({\n            className: className,\n            text: text,\n            wrapClassName: wrapClassName || \"\",\n            id: id || \"\",\n            size: size\n        });\n    }\n\n    function update(element, className, page, disabled) {\n       element.find(`[class*=\"-i-${className}\"]`)\n              .parent()\n              .attr(kendo.attr(\"page\"), page)\n              .attr(\"tabindex\", disabled ? -1 : 0)\n              .attr(\"aria-disabled\", disabled)\n              .toggleClass(\"k-disabled\", disabled);\n    }\n\n    function first(element, page) {\n        update(element, FIRST, 1, page <= 1);\n    }\n\n    function prev(element, page) {\n        update(element, PREV, Math.max(1, page - 1), page <= 1);\n    }\n\n    function next(element, page, totalPages) {\n        update(element, NEXT, Math.min(totalPages, page + 1), page >= totalPages);\n    }\n\n    function last(element, page, totalPages) {\n        update(element, LAST, totalPages, page >= totalPages);\n    }\n\n    var Pager = Widget.extend( {\n        init: function(element, options) {\n            var that = this, page, totalPages;\n            var buttonSize = \"\";\n            var dropDownClasses = \"\";\n\n            Widget.fn.init.call(that, element, options);\n\n            options = that.options;\n            that._createDataSource(options);\n            that.linkTemplate = kendo.template(that.options.linkTemplate);\n            that.selectTemplate = kendo.template(that.options.selectTemplate);\n            that.numericSelectItemTemplate = kendo.template(that.options.numericSelectItemTemplate);\n\n            page = that.page();\n            totalPages = that.totalPages();\n\n            that._refreshHandler = that.refresh.bind(that);\n\n            that.dataSource.bind(CHANGE, that._refreshHandler);\n            that.downEvent = kendo.applyEventMap(MOUSEDOWN, kendo.guid());\n\n            isRtl = kendo.support.isRtl(element);\n            that._numericWrap = that.element.find(\".k-pager-numbers-wrap\");\n\n            if (isRtl) {\n                FIRST = LAST_CONST;\n                LAST = FIRST_CONST;\n                PREV = NEXT_CONST;\n                NEXT = PREV_CONST;\n                if (that._numericWrap.length) {\n                    that._numericWrap.empty();\n                }\n            } else {\n                FIRST = FIRST_CONST;\n                LAST = LAST_CONST;\n                PREV = PREV_CONST;\n                NEXT = NEXT_CONST;\n            }\n\n            if (options.size) {\n                buttonSize = kendo.getValidCssClass(\"k-button-\", \"size\", options.size);\n                dropDownClasses = \"k-rounded-md \" + kendo.getValidCssClass(\"k-picker-\", \"size\", options.size);\n            }\n\n            if (options.navigatable) {\n                that._id = that.element.attr(\"id\") || kendo.guid();\n            }\n            that._template();\n\n            if (options.previousNext || options.numeric) {\n\n                if (that._numericWrap.length === 0) {\n                    that._numericWrap = $(\"<div class='k-pager-numbers-wrap' />\").appendTo(that.element);\n                }\n            }\n\n\n            if (options.previousNext) {\n                if (!that._numericWrap.find(\"[class*='-i-\" + FIRST + \"']\").length) {\n                    that._numericWrap.append(icon(FIRST, options.messages.first, \"k-pager-first\", that._id, buttonSize));\n\n                    first(that._numericWrap, page, totalPages);\n                }\n\n                if (!that._numericWrap.find(\"[class*='-i-\" + PREV + \"']\").length) {\n                    that._numericWrap.append(icon(PREV, options.messages.previous, null, that._id, buttonSize));\n\n                    prev(that._numericWrap, page, totalPages);\n                }\n            }\n\n            if (options.numeric) {\n                if (!that._numericSelect) {\n                    that._numericSelect = that._numericWrap.find(\".k-dropdown\");\n\n                    if (that._numericSelect.length === 0) {\n                       that._numericSelect = $(\"<select aria-label='\" + that.options.messages.numbersSelectLabel + \"' class='k-dropdown k-picker k-picker-solid k-dropdown-list \" + dropDownClasses + \"' />\").appendTo(that._numericWrap);\n                    }\n                }\n\n                if (!that.list) {\n                    that.list = that._numericWrap.find(\".k-pager-numbers\");\n\n                    if (that.list.length === 0) {\n                       that.list = $('<div class=\"k-pager-numbers\" />').appendTo(that._numericWrap);\n                    }\n                }\n\n                if (options.dataSource && !options.dataSource.total()) {\n                    that._numericSelect.empty().append(\"<option value='0' />\");\n                    that.list.empty().append(that.selectTemplate({ text: 0, tabindex: options.navigatalbe ? 0 : -1, navigatable: options.navigatable, title: kendo.format(options.messages.pageButtonLabel, 0) }));\n                }\n            }\n\n            if (options.input) {\n                if (!that.element.find(\".k-pager-input\").length) {\n                   that.element.append('<span class=\"k-pager-input k-label\">' +\n                        encode(options.messages.page) +\n                       '<span class=\"k-textbox k-input k-input-md k-rounded-md k-input-solid\"><input class=\"k-input-inner\" /></span>' +\n                       encode(kendo.format(options.messages.of, totalPages)) +\n                       '</span>');\n                }\n\n                that.element.on(KEYDOWN + NS, \".k-pager-input input\", that._keydown.bind(that));\n            }\n\n            if (options.previousNext) {\n                if (!that._numericWrap.find(\"[class*='-i-\" + NEXT + \"']\").length) {\n                    that._numericWrap.append(icon(NEXT, options.messages.next, null, that._id, buttonSize));\n\n                    next(that._numericWrap, page, totalPages);\n                }\n\n                if (!that._numericWrap.find(\"[class*='-i-\" + LAST + \"']\").length) {\n                    that._numericWrap.append(icon(LAST, options.messages.last, \"k-pager-last\", that._id, buttonSize));\n\n                    last(that._numericWrap, page, totalPages);\n                }\n            }\n\n            if (options.pageSizes) {\n                if (!that.element.find(\".k-pager-sizes\").length) {\n                    var pageSizes = options.pageSizes.length ? options.pageSizes : [\"all\", 5, 10, 20];\n                    var pageItems = $.map(pageSizes, function(size) {\n                        if (size.toLowerCase && size.toLowerCase() === \"all\") {\n                            return \"<option value='all'>\" + encode(options.messages.allPages) + \"</option>\";\n                        }\n\n                        return \"<option>\" + size + \"</option>\";\n                    });\n\n                    $('<span class=\"k-pager-sizes\"><select></select><span>' + encode(options.messages.itemsPerPage) + \"</span></span>\")\n                        .appendTo(that.element)\n                        .find(\"select\").html(pageItems.join(\"\")).end()\n                        .appendTo(that.element);\n                }\n\n                that.element.find(\".k-pager-sizes select\").val(that.pageSize());\n\n                if (kendo.ui.DropDownList) {\n                   that.element.find(\".k-pager-sizes select\").show().attr(\"aria-label\", options.messages.pageSizeDropDownLabel).kendoDropDownList({ size: options.size });\n                }\n\n                that.element.on(CHANGE + NS, \".k-pager-sizes select\", that._change.bind(that));\n            }\n\n            if (options.refresh) {\n                if (!that.element.find(\".k-pager-refresh\").length) {\n                    that.element.append('<button role=\"button\" href=\"#\" class=\"k-pager-refresh k-button ' + buttonSize + ' k-button-flat k-button-flat-base k-icon-button\" title=\"' + options.messages.refresh +\n                        '\" aria-label=\"' + options.messages.refresh + '\">' + kendo.ui.icon(\"arrow-rotate-cw\") + '</button>');\n                }\n\n                that.element.on(CLICK + NS, \".k-pager-refresh\", that._refreshClick.bind(that));\n            }\n\n            if (options.info) {\n                if (!that.element.find(\".k-pager-info\").length) {\n                    that.element.append('<span class=\"k-pager-info k-label\" />');\n                }\n            }\n\n            that.element\n                .on(CLICK + NS , \"button\", that._click.bind(that))\n                .on(CHANGE + NS , \"select.k-dropdown\", that._numericSelectChange.bind(that))\n                .addClass(\"k-pager\");\n\n            if (options.size) {\n                that.element.addClass(kendo.getValidCssClass(\"k-pager-\", \"size\", options.size));\n            }\n\n            if (options.autoBind) {\n                that.refresh();\n            }\n\n            that._resizeHandler = that.resize.bind(that, true);\n            $(window).on(\"resize\" + NS, that._resizeHandler);\n\n            that._navigatable();\n            that._responsive();\n\n            kendo.notify(that);\n        },\n\n        destroy: function() {\n            var that = this;\n\n            Widget.fn.destroy.call(that);\n\n            that.element.off(NS);\n            that.dataSource.unbind(CHANGE, that._refreshHandler);\n            that._refreshHandler = null;\n            $(window).off(\"resize\" + NS, this._resizeHandler);\n\n            kendo.destroy(that.element);\n            that.element = that.list = null;\n        },\n\n        events: [\n            CHANGE\n        ],\n\n        options: {\n            name: \"Pager\",\n            ARIATemplate: ({ page, totalPages }) => `Page navigation, page ${page} of ${totalPages}`,\n            selectTemplate: ({ text, title, tabindex, size }) => `<button role=\"button\" aria-current=\"page\" tabindex=\"${tabindex}\" aria-label=\"${title}\" class=\"k-button ${size} k-button-flat k-button-flat-primary k-selected\"><span class=\"k-button-text\">${encode(text)}</span></button>`,\n            linkTemplate: ({ ns, idx, text, title, tabindex, size }) => `<button class=\"k-button ${size} k-button-flat k-button-flat-primary\" tabindex=\"${tabindex}\" href=\"#\" data-${ns}page=\"${idx}\" ${title !== \"\" ? `title=\"${title}\"` : ''}><span class=\"k-button-text\">${encode(text)}</span></button>`,\n            numericSelectItemTemplate: ({ idx, selected, text }) => `<option value=\"${idx}\" ${selected ? 'selected=\"selected\"' : '' }>${encode(text)}</option>`,\n            buttonCount: 10,\n            autoBind: true,\n            numeric: true,\n            info: true,\n            input: false,\n            previousNext: true,\n            pageSizes: false,\n            refresh: false,\n            responsive: true,\n            navigatable: false,\n            size: \"medium\",\n            messages: {\n                allPages: \"All\",\n                display: \"{0} - {1} of {2} items\",\n                empty: \"No items to display\",\n                page: \"Page\",\n                of: \"of {0}\",\n                itemsPerPage: \"items per page\",\n                pageButtonLabel: \"Page {0}\",\n                pageSizeDropDownLabel: \"Page sizes drop down\",\n                numbersSelectLabel: \"Page select\",\n                first: \"Go to the first page\",\n                previous: \"Go to the previous page\",\n                next: \"Go to the next page\",\n                last: \"Go to the last page\",\n                refresh: \"Refresh\",\n                morePages: \"More pages\"\n            }\n        },\n\n        setDataSource: function(dataSource) {\n            var that = this;\n\n            that.dataSource.unbind(CHANGE, that._refreshHandler);\n            that.dataSource = that.options.dataSource = dataSource;\n            dataSource.bind(CHANGE, that._refreshHandler);\n\n            if (that.options.autoBind) {\n                dataSource.fetch();\n            }\n        },\n\n        _aria: function() {\n            this.element.attr({\n                \"role\": \"application\",\n                \"aria-roledescription\": \"pager\",\n                \"aria-keyshortcuts\": \"Enter ArrowRight ArrowLeft\"\n            });\n        },\n\n        _adaptiveStep: function(step, hide, availableWidth) {\n            var that = this;\n            switch (step) {\n                case 0:\n                    return that._toggleButtons(hide, availableWidth);\n                case 1:\n                    return that._toggleRefresh(hide, availableWidth);\n                case 2:\n                    return that._togglePagerInfo(hide, availableWidth);\n                case 3:\n                    return that._toggleInputSizesLabel(hide, availableWidth);\n                case 4:\n                    return that._togglePageSizesLabel(hide, availableWidth);\n                case 5:\n                    return that._togglePageSizesDropDown(hide, availableWidth);\n                case 6:\n                    return that._togglePageInputs(hide, availableWidth);\n                default:\n                 break;\n              }\n        },\n\n        _calculateNeededWidth: function() {\n            var sumWidth = 0;\n            var gap = parseInt(this.element.css(\"gap\"));\n            this.element.children().each(function() {\n                const element = $(this);\n                const pagerInfo = element.hasClass(\"k-pager-info\");\n                if (pagerInfo) {\n                    element.removeClass(\"k-pager-info k-label\");\n                }\n                sumWidth += element.is(\":visible\") ? element.width() : 0;\n                sumWidth += gap;\n                if (pagerInfo) {\n                    element.addClass(\"k-pager-info k-label\");\n                }\n            });\n            return sumWidth;\n        },\n\n        _resize: function(size) {\n            var that = this;\n            that._responsive(size);\n            if (!that.element.is(\":visible\") || !that._lastWidth || !that.options.responsive) {\n                return;\n            }\n\n            if (that._lastWidth < size.width) {\n                for (let i = 6; i >= 0; i--) {\n                    const availableWidth = that._calculateNeededWidth();\n                    if (size.width < availableWidth) {\n                        break;\n                    }\n                    const shouldBreak = that._adaptiveStep(i, false, size.width - availableWidth);\n                    if (shouldBreak) {\n                        break;\n                    }\n                }\n            } else if (that._lastWidth > size.width) {\n                for (let i = 0; i < 7; i++) {\n                    if (size.width > that._calculateNeededWidth()) {\n                        break;\n                    }\n                    that._adaptiveStep(i, true);\n                }\n            }\n\n            that._lastWidth = size.width;\n        },\n\n        _toggleButtons: function(hide, availableWidth) {\n            if (!this._numericWrap || !this.list || !this._numericSelect) {\n                return;\n            }\n\n            if (hide) {\n                this._numericSelect.show();\n                this.list.hide();\n            } else if (availableWidth && ((this.list.width() - this._numericSelect.width()) < availableWidth)) {\n                this._numericSelect.hide();\n                this.list.show();\n            }\n        },\n\n        _toggleRefresh: function(hide, availableWidth) {\n            if (!this.options.refresh) {\n                return;\n            }\n            const refreshContainer = this.element.find(\".k-pager-refresh\");\n\n            if (hide) {\n                refreshContainer.hide();\n            } else if (availableWidth && (refreshContainer.width() < availableWidth)) {\n                refreshContainer.show();\n            } else {\n                return true;\n            }\n        },\n\n        _togglePagerInfo: function(hide, availableWidth) {\n            if (!this.options.info) {\n                return;\n            }\n            const infoBox = this.element.find(\".k-pager-info\");\n            if (hide) {\n                infoBox.hide();\n            } else if (availableWidth && (infoBox.width() < availableWidth)) {\n                infoBox.show();\n            } else if (!infoBox.is(\":visible\")) {\n                return true;\n            }\n        },\n\n        _toggleInputSizesLabel: function(hide, availableWidth) {\n            if (!this.options.input) {\n                return;\n            }\n            const inputElements = this.element.find(\".k-pager-input\").children();\n            const labels = inputElements.eq(0).add(inputElements.eq(2));\n\n            if (hide) {\n                labels.hide();\n            } else if (availableWidth && ((inputElements.eq(0).width() + inputElements.eq(2).width()) < availableWidth)) {\n                labels.show();\n            } else {\n                return true;\n            }\n        },\n\n\n        _togglePageSizesLabel: function(hide, availableWidth) {\n            if (!this.options.pageSizes) {\n                return;\n            }\n            const label = this.element.find(\".k-pager-sizes\").children().eq(1);\n\n            if (hide) {\n                label.hide();\n            } else if (availableWidth && (label.width() < availableWidth)) {\n                label.show();\n            } else {\n                return true;\n            }\n        },\n\n        _togglePageSizesDropDown: function(hide, availableWidth) {\n            if (!this.options.pageSizes) {\n                return;\n            }\n\n            const picker = this.element.find(\".k-pager-sizes .k-picker\");\n\n            if (hide) {\n                picker.hide();\n            } else if (availableWidth && (picker.width() < availableWidth)) {\n                picker.show();\n            } else {\n                return true;\n            }\n        },\n\n\n        _togglePageInputs: function(hide, availableWidth) {\n            var options = this.options;\n\n            if (!options.input || !this._numericSelect) {\n                return;\n            }\n\n            if (hide) {\n                this._numericSelect.hide();\n            } else if (availableWidth && (this._numericSelect.width() < availableWidth) && !this.list.is(\":visible\")) {\n                this._numericSelect.show();\n            } else {\n                return true;\n            }\n        },\n\n        _createDataSource: function(options) {\n            this.dataSource = kendo.data.DataSource.create(options.dataSource);\n        },\n\n        _responsive: function(size) {\n            var that = this;\n            var options = that.options;\n            var width;\n            var info;\n\n            if (options.responsive) {\n                width = that.element.outerWidth();\n\n                if (size && size.width > 0) {\n                    width = size.width;\n                }\n\n                info = that.element.find(\".k-pager-info\");\n\n                if (width <= 480) {\n                    info.hide();\n                    that.element.find(\".k-pager-sizes\").children().hide();\n                    if (options.numeric) {\n                        that._numericSelect.show();\n                        that.list.hide();\n                    }\n                } else {\n                    if (width <= 600) {\n                        info.hide();\n                        if (options.numeric) {\n                            that._numericSelect.show();\n                            that.list.hide();\n                        }\n                    } else if (options.numeric) {\n                        that._numericSelect.hide();\n                        that.list.show();\n                    }\n                }\n            } else if (that._numericSelect) {\n                that._numericSelect.hide();\n            }\n        },\n\n        refresh: function(e) {\n            var that = this,\n                idx,\n                end,\n                start = 1,\n                reminder,\n                page = that.page(),\n                html = \"\",\n                selectHtml = \"\",\n                options = that.options,\n                pageSize = that.pageSize(),\n                collapsedTotal = that._collapsedTotal(),\n                total = that.dataSource._isGroupPaged() ? that.dataSource.groupsTotal(true) : that.dataSource.total(),\n                totalPages = that.totalPages(),\n                linkTemplate = that.linkTemplate,\n                navigatable = options.navigatable,\n                numericSelectItemTemplate = that.numericSelectItemTemplate,\n                buttonSize = options.size ? kendo.getValidCssClass(\"k-button-\", \"size\", options.size) : \"\",\n                buttonCount = options.buttonCount;\n\n            if (e && e.action == \"itemchange\") {\n                return;\n            }\n\n            if (options.numeric) {\n\n                if (page > buttonCount) {\n                    reminder = (page % buttonCount);\n                    start = (reminder === 0) ? (page - buttonCount) + 1 : (page - reminder) + 1;\n                }\n\n                end = Math.min((start + buttonCount) - 1, totalPages);\n\n                if (start > 1) {\n                    html += button({\n                        template: linkTemplate,\n                        navigatable: navigatable,\n                        size: buttonSize,\n                        idx: start - 1,\n                        text: \"...\",\n                        numeric: false,\n                        title: options.messages.morePages\n                    });\n                    selectHtml += selectOption(numericSelectItemTemplate, start - 1, options.messages.morePages);\n                }\n\n                for (idx = start; idx <= end; idx++) {\n                    html += button({\n                        template: idx == page ? that.selectTemplate : linkTemplate,\n                        navigatable: navigatable,\n                        idx: idx,\n                        text: idx,\n                        size: buttonSize,\n                        numeric: true,\n                        title: kendo.format(options.messages.pageButtonLabel, idx)\n                    });\n                    selectHtml += selectOption(numericSelectItemTemplate, idx, idx, idx == page);\n                }\n\n                if (end < totalPages) {\n                    html += button({\n                        template: linkTemplate,\n                        navigatable: navigatable,\n                        idx: idx,\n                        size: buttonSize,\n                        text: \"...\",\n                        numeric: numericSelectItemTemplate,\n                        title: options.messages.morePages\n                    });\n                    selectHtml += selectOption(numericSelectItemTemplate, idx, options.messages.morePages);\n                }\n\n                if (html === \"\") {\n                    html = that.selectTemplate({ text: 0, size: buttonSize, tabindex: navigatable ? 0 : -1, navigatable: navigatable, title: kendo.format(options.messages.pageButtonLabel, 0) });\n                    selectHtml = $(\"<option value='0' />\");\n                }\n\n                that.list.html(html);\n                that._numericSelect.html(selectHtml);\n            }\n\n            if (options.info) {\n                if (total > 0) {\n                    html = kendo.format(options.messages.display,\n                        that.dataSource.options.endless ? 1 : Math.min((page - 1) * (that.dataSource.pageSize() || 0) + 1, collapsedTotal), // first item in the page\n                        Math.min(page * pageSize, collapsedTotal), // last item in the page\n                    total);\n                } else {\n                    html = options.messages.empty;\n                }\n\n                that.element.find(\".k-pager-info\").html(html);\n            }\n\n            if (options.input) {\n                that.element\n                    .find(\".k-pager-input\")\n                    .html('<span>' + encode(that.options.messages.page) + '</span>' +\n                        '<span class=\"k-textbox k-input k-input-md k-rounded-md k-input-solid\"><input class=\"k-input-inner\" aria-label=\"' + that.options.messages.page + \" \" + page + '\"></span>' +\n                        '<span>' + encode(kendo.format(options.messages.of, totalPages)) + '</span>')\n                    .find(\"input\")\n                    .val(page)\n                    .attr(DISABLED, total < 1)\n                    .attr(\"aria-disabled\", total < 1)\n                    .toggleClass(\"k-disabled\", total < 1);\n            }\n\n            if (options.previousNext) {\n                first(that.element, page, totalPages);\n\n                prev(that.element, page, totalPages);\n\n                next(that.element, page, totalPages);\n\n                last(that.element, page, totalPages);\n            }\n\n            if (options.pageSizes) {\n                var hasAll = that.element.find(\".k-pager-sizes option[value='all']\").length > 0;\n                var selectAll = hasAll && (pageSize === this.dataSource.total() || pageSize == MAX_VALUE);\n                var text = pageSize;\n                if (selectAll) {\n                    pageSize = \"all\";\n                    text = options.messages.allPages;\n                }\n\n                that.element\n                    .find(\".k-pager-sizes select\")\n                    .val(pageSize)\n                    .filter(\"[\" + kendo.attr(\"role\") + \"=dropdownlist]\")\n                    .kendoDropDownList(\"value\", pageSize)\n                    .kendoDropDownList(\"text\", text); // handles custom values\n            }\n\n            that._restoreFocus(start, end, totalPages);\n            that._excludeChildrenFromTab();\n            that._updateAria();\n\n            if (totalPages) {\n                that._lastWidth = kendo._outerWidth(that.element) + 12;\n                that.resize(true);\n            } else if (that._lastWidth) {\n              that._lastWidth = kendo._outerWidth(that.element);\n            }\n        },\n\n        _excludeChildrenFromTab: function() {\n            var activeElement = kendo._activeElement();\n            if (this.options.navigatable && (activeElement === this.element[0] || !$.contains(this.element[0], activeElement))) {\n                this.element.find(FOCUSABLE).attr(\"tabindex\", -1);\n            }\n        },\n\n        _restoreFocus: function(start, end, totalPages) {\n            var that = this;\n\n            if (!that.options.navigatable) {\n                return;\n            }\n\n            if (that._focusSelected) {\n                that.element.find(\".k-selected\").trigger(\"focus\");\n                that._focusSelected = null;\n            }\n\n            if (that._focusMore !== null) {\n                if (end < totalPages && that._focusMore) {\n                    that.list.find(\"li\").last().find(\"a\").trigger(\"focus\");\n                }\n                if (!that._focusMore && start > 1) {\n                    that.list.find(\"li\").first().find(\"a\").trigger(\"focus\");\n                }\n                that._focusMore = null;\n            }\n        },\n\n        _restoreTabIndexes: function() {\n            this.element\n                .find(\"[tabindex='-1']:not(.k-disabled)\")\n                .attr(\"tabindex\", 0);\n        },\n\n        _collapsedTotal: function() {\n            return this.dataSource.total();\n        },\n\n        _keydown: function(e) {\n            if (e.keyCode === kendo.keys.ENTER) {\n                var input = this.element.find(\".k-pager-input\").find(\"input\"),\n                    page = parseInt(input.val(), 10);\n\n                if (isNaN(page) || page < 1 || page > this.totalPages()) {\n                    page = this.page();\n                }\n\n                input.val(page);\n\n                this.page(page);\n            }\n        },\n\n        _refreshClick: function(e) {\n            e.preventDefault();\n\n            this.dataSource.read();\n        },\n\n        _change: function(e) {\n            var value = e.currentTarget.value;\n            var pageSize = parseInt(value, 10);\n            var dataSource = this.dataSource;\n\n            if (!isNaN(pageSize)) {\n                dataSource.pageSize(pageSize);\n            } else if ((value + \"\").toLowerCase() == \"all\") {\n                dataSource._pageSize = undefined$1;\n                dataSource._take = undefined$1;\n                dataSource._skip = 0;\n                dataSource.fetch();\n            }\n        },\n\n        _template: function() {\n            this._ariaTemplate = template(this.options.ARIATemplate).bind(this);\n        },\n\n        _updateAria: function() {\n            if (!this.options.navigatable) {\n                return;\n            }\n            this.element.attr(\"aria-label\", this._ariaTemplate({ page: this.page(), totalPages: this.totalPages() }));\n        },\n\n        _navigatable: function() {\n            var that = this;\n            var options = that.options;\n\n            if (!options.navigatable) {\n                return;\n            }\n\n            that._aria();\n            that.element.attr(\"id\", that._id);\n            that._template();\n            that._updateAria();\n\n            that._tabindex(that.element);\n\n            that.element.on(\"keydown\" + NS, that, that._keyDown.bind(that));\n            that.element.on(\"focusout\" + NS, function() { that.element.removeClass(\"k-focus\"); });\n            that.element.on(\"focusin\" + NS, function(e) {\n                that.element.addClass(\"k-focus\");\n\n                if (e.target === that.element[0]) {\n                    that.element.find(FOCUSABLE).attr(\"tabindex\", -1);\n                } else {\n                    that.element.removeClass(\"k-focus\");\n                }\n            });\n        },\n\n        _keyDown: function(e) {\n            var that = this;\n            var target = $(e.target);\n            var allFocusable;\n            var handled = false;\n            var focusedIndex;\n\n            if (target[0] === that.element[0] && e.keyCode == keys.ENTER) {\n                that._restoreTabIndexes();\n                that.element.find(FOCUSABLE).first().trigger(\"focus\");\n                handled = true;\n            }\n\n            if (target[0] !== that.element[0] && e.keyCode == keys.ESC) {\n                that.element.trigger(\"focus\");\n                handled = true;\n            }\n\n            if (target[0] === that.element[0] && e.keyCode == keys.HOME) {\n                that.page(1);\n                handled = true;\n            }\n\n            if (target[0] === that.element[0] && e.keyCode == keys.END) {\n                that.page(that.totalPages());\n                handled = true;\n            }\n\n            if (target[0] === that.element[0] && (e.keyCode == (isRtl ? keys.LEFT : keys.RIGHT) || e.keyCode == keys.PAGEDOWN)) {\n                that.page(that.page() + 1);\n                handled = true;\n            }\n\n            if (target[0] === that.element[0] && (e.keyCode == (isRtl ? keys.RIGHT : keys.LEFT) || e.keyCode == keys.PAGEUP)) {\n                that.page((that.page() - 1) || 1);\n                handled = true;\n            }\n\n            if (target[0] !== that.element[0] && e.keyCode == keys.TAB) {\n                allFocusable = that.element.find(FOCUSABLE);\n                focusedIndex = allFocusable.index(target);\n\n                if (e.shiftKey) {\n                    if (focusedIndex - 1 < 0) {\n                        allFocusable.last().trigger(\"focus\");\n                    } else {\n                        allFocusable.eq(focusedIndex - 1).trigger(\"focus\");\n                    }\n                } else {\n                    if (focusedIndex + 1 < allFocusable.length) {\n                        allFocusable.eq(focusedIndex + 1 ).trigger(\"focus\");\n                    } else {\n                        allFocusable.first().trigger(\"focus\");\n                    }\n                }\n\n                handled = true;\n            }\n\n            if (handled) {\n                e.preventDefault();\n                e.stopPropagation();\n            }\n        },\n\n        _numericSelectChange: function(e) {\n            var target = e.currentTarget;\n            var value = target.value;\n            var page = parseInt(value, 10);\n\n            target.blur();\n\n            this.page(page);\n        },\n\n        _click: function(e) {\n            var target = $(e.currentTarget);\n\n            e.preventDefault();\n\n            if (this.options.navigatable) {\n                if (target.attr(\"title\") == this.options.messages.morePages) {\n                    this._focusMore = target.parent().index();\n                } else if (!target.hasClass(\"k-pager-refresh\") && !target.hasClass(\"k-pager-nav\")) {\n                    this._focusSelected = true;\n                }\n            }\n\n            if (!target.is(\".k-disabled\")) {\n                this.page(parseInt(target.attr(kendo.attr(\"page\")), 10));\n            }\n        },\n\n        totalPages: function() {\n            return Math.ceil((this.dataSource.total() || 0) / (this.pageSize() || 1));\n        },\n\n        pageSize: function() {\n            return this.dataSource.pageSize() || this.dataSource.total();\n        },\n\n        page: function(page) {\n            if (page) {\n                if (this.trigger(\"pageChange\", { index: page })) {\n                   return;\n                }\n\n                this.dataSource.page(page);\n\n                this.trigger(CHANGE, { index: page });\n            } else {\n                if (this.dataSource.total() > 0) {\n                    return this.dataSource.page();\n                } else {\n                    return 0;\n                }\n            }\n        },\n    });\n\n    ui.plugin(Pager);\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.pager.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.panelbar.js":
/*!**********************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.panelbar.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.data.js */ \"./node_modules/kendo-ui-core/esm/kendo.data.js\");\n/* harmony import */ var _kendo_icons_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.icons.js */ \"./node_modules/kendo-ui-core/esm/kendo.icons.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\nvar __meta__ = {\n    id: \"panelbar\",\n    name: \"PanelBar\",\n    category: \"web\",\n    description: \"The PanelBar widget displays hierarchical data as a multi-level expandable panel bar.\",\n    depends: [\"core\", \"data\", \"data.odata\", \"icons\"]\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        ui = kendo.ui,\n        keys = kendo.keys,\n        extend = $.extend,\n        encode = kendo.htmlEncode,\n        each = $.each,\n        isArray = Array.isArray,\n        template = kendo.template,\n        Widget = ui.Widget,\n        HierarchicalDataSource = kendo.data.HierarchicalDataSource,\n        excludedNodesRegExp = /^(ul|a|div)$/i,\n        NS = \".kendoPanelBar\",\n        IMG = \"img\",\n        HREF = \"href\",\n        LINK = \"k-link\",\n        LINKSELECTOR = \".\" + LINK,\n        ERROR = \"error\",\n        ITEM = \".k-panelbar-item\",\n        GROUP = \".k-panelbar-group\",\n        VISIBLEGROUP = GROUP + \":visible\",\n        IMAGE = \"k-image\",\n        CHANGE = \"change\",\n        EXPAND = \"expand\",\n        SELECT = \"select\",\n        CLICK = \"click\",\n        CONTENT = \"k-panelbar-content\",\n        ACTIVATE = \"activate\",\n        COLLAPSE = \"collapse\",\n        DATABOUND = \"dataBound\",\n        MOUSEENTER = \"mouseenter\",\n        MOUSELEAVE = \"mouseleave\",\n        CONTENTLOAD = \"contentLoad\",\n        UNDEFINED = \"undefined\",\n        EXPANDEDCLASS = \"k-expanded\",\n        GROUPS = \"> .k-panelbar-group\",\n        CONTENTS = \"> .k-panelbar-content\",\n        STRING = \"string\",\n        FOCUSEDCLASS = \"k-focus\",\n        DISABLEDCLASS = \"k-disabled\",\n        SELECTEDCLASS = \"k-selected\",\n        SELECTEDSELECTOR = \".\" + SELECTEDCLASS,\n        ACTIVEITEMSELECTOR = ITEM + \":not(.k-disabled)\",\n        clickableItems = \"> \" + ACTIVEITEMSELECTOR + \" > \" + LINKSELECTOR + \", .k-panelbar-group > \" + ACTIVEITEMSELECTOR + \" > \" + LINKSELECTOR,\n        disabledItems = ITEM + \".k-disabled > .k-link\",\n        selectableItems = \"> li > \" + SELECTEDSELECTOR + \", .k-panelbar-group > li > \" + SELECTEDSELECTOR,\n        ARIA_DISABLED = \"aria-disabled\",\n        ARIA_EXPANDED = \"aria-expanded\",\n        ARIA_HIDDEN = \"aria-hidden\",\n        ARIA_SELECTED = \"aria-selected\",\n        VISIBLE = \":visible\",\n        EMPTY = \":empty\",\n        SINGLE = \"single\",\n        bindings = {\n            text: \"dataTextField\",\n            url: \"dataUrlField\",\n            spriteCssClass: \"dataSpriteCssClassField\",\n            imageUrl: \"dataImageUrlField\",\n            icon: \"dataIconField\",\n            iconClass: \"dataIconClassField\",\n        },\n        itemIcon,\n        rendering = {\n        aria: function(item) {\n            var attr = \"\";\n\n            if (item.items || item.content || item.contentUrl || item.expanded) {\n                attr += ARIA_EXPANDED + \"='\" + (item.expanded ? \"true\" : \"false\") + \"' \";\n            }\n\n            if (item.enabled === false) {\n                attr += ARIA_DISABLED + \"='true'\";\n            }\n\n            return attr;\n        },\n\n    wrapperCssClass: function(group, item) {\n        var result = \"k-panelbar-item\",\n            index = item.index;\n\n        if (group.firstLevel) {\n            result += \" k-panelbar-header\";\n        }\n\n        if (item.enabled === false) {\n            result += \" \" + DISABLEDCLASS;\n        } else if (item.expanded === true) {\n            result += \" \" + EXPANDEDCLASS;\n        }\n\n        if (item.cssClass) {\n            result += \" \" + item.cssClass;\n        }\n\n        if (item.level) {\n            result += \" k-level-\" + item.level();\n        }\n\n        return result;\n    },\n\n    textClass: function(item) {\n        var result = LINK;\n\n        if (item.selected) {\n            result += \" \" + SELECTEDCLASS;\n        }\n\n        return result;\n    },\n    textAttributes: function(url) {\n        return url ? \" href='\" + url + \"'\" : \"\";\n    },\n    arrowIconOptions: function(item) {\n        return {\n            icon: item.expanded ? \"chevron-up\" : \"chevron-down\",\n            iconClass: `k-panelbar-toggle k-panelbar-${item.expanded ? \"collapse\" : \"expand\"}`\n        };\n    },\n    text: function(item) {\n         return item.encoded === false ? item.text : kendo.htmlEncode(item.text);\n    },\n    groupAttributes: function(group) {\n        return group.expanded !== true ? ` ${kendo.attr(\"style-display\")}=\"none\"` : \"\";\n    },\n    ariaHidden: function(group) {\n        return group.expanded !== true;\n    },\n    groupCssClass: function() {\n        return \"k-panelbar-group\";\n    },\n    contentAttributes: function(content) {\n        return content.item.expanded !== true ? ` ${kendo.attr(\"style-display\")}=\"none\"` : \"\";\n    },\n    content: function(item) {\n        return item.content ? item.content : item.contentUrl ? \"\" : \"&nbsp;\";\n    },\n    contentUrl: function(item) {\n        return item.contentUrl ? 'href=\"' + item.contentUrl + '\"' : \"\";\n    }\n};\n\n    function updateLevel(item) {\n        item = $(item);\n\n        item.addClass(\"k-level-\" + item.parentsUntil(\".k-panelbar\", \"ul\").length);\n    }\n\n     function updateItemHtml(item) {\n        var wrapper = item,\n            group = item.children(\"ul\"),\n            toggleButton = wrapper.children(\".k-link\").children(\".k-panelbar-toggle\");\n\n        if (item.hasClass(\"k-panelbar\")) {\n            return;\n        }\n\n        if (!toggleButton.length && group.length) {\n            toggleButton = $(\"<span class='k-panelbar-toggle' />\").appendTo(wrapper);\n        } else if (!group.length || !group.children().length) {\n            toggleButton.remove();\n            group.remove();\n        }\n     }\n\n    itemIcon = function(item) {\n        return item.children(\"span\").children(\".k-panelbar-toggle\");\n    };\n\n    var PanelBar = kendo.ui.DataBoundWidget.extend({\n        init: function(element, options) {\n            var that = this,\n                content,\n                hasDataSource;\n\n           if (isArray(options)) {\n                options = { dataSource: options };\n           }\n\n            hasDataSource = options && !!options.dataSource;\n\n            Widget.fn.init.call(that, element, options);\n\n            element = that.wrapper = that.element.addClass(\"k-panelbar\");\n            options = that.options;\n\n            if (element[0].id) {\n                that._itemId = element[0].id + \"_pb_active\";\n            }\n\n            that._tabindex();\n\n            that._accessors();\n\n            that._dataSource();\n\n            that._templates();\n\n            that._initData(hasDataSource);\n\n            that._updateClasses();\n\n            that._animations(options);\n\n            element\n                .on(CLICK + NS, clickableItems, that._click.bind(that))\n                .on(MOUSEENTER + NS + \" \" + MOUSELEAVE + NS, clickableItems, that._toggleHover)\n                .on(CLICK + NS, disabledItems, false)\n                .on(CLICK + NS, \".k-request-retry\", that._retryRequest.bind(that))\n                .on(\"keydown\" + NS, that._keydown.bind(that))\n                .on(\"focus\" + NS, function() {\n                    var item = that.select();\n                    that._current(item[0] ? item : that._first());\n                })\n                .on(\"blur\" + NS, function() {\n                    that._current(null);\n                })\n                .attr(\"role\", \"tree\");\n\n            content = element.find(\"li.\" + EXPANDEDCLASS + \" > .\" + CONTENT);\n\n            if (content[0]) {\n                that.expand(content.parent(), false);\n            }\n\n            kendo.notify(that);\n\n            if (that._showWatermarkOverlay) {\n                that._showWatermarkOverlay(that.wrapper[0]);\n            }\n        },\n\n        events: [\n            EXPAND,\n            COLLAPSE,\n            SELECT,\n            ACTIVATE,\n            CHANGE,\n            ERROR,\n            DATABOUND,\n            CONTENTLOAD\n        ],\n        options: {\n            name: \"PanelBar\",\n            dataSource: {},\n            animation: {\n                expand: {\n                    effects: \"expand:vertical\",\n                    duration: 200\n                },\n                collapse: { // if collapse animation effects are defined, they will be used instead of expand.reverse\n                    duration: 200\n                }\n            },\n            messages: {\n                loading: \"Loading...\",\n                requestFailed: \"Request failed.\",\n                retry: \"Retry\"\n            },\n            autoBind: true,\n            loadOnDemand: true,\n            expandMode: \"multiple\",\n            template: null,\n            dataTextField: null,\n            selectable: true\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            this.element.off(NS);\n\n            kendo.destroy(this.element);\n        },\n\n        _initData: function(hasDataSource) {\n            var that = this;\n\n            if (hasDataSource) {\n                that.element.empty();\n                 if (that.options.autoBind) {\n                    that._progress(true);\n\n                    that.dataSource.fetch();\n                 }\n            }\n        },\n\n        _templates: function() {\n            var that = this,\n                options = that.options,\n                fieldAccessor = that._fieldAccessor.bind(that);\n\n              if (options.template && typeof options.template == STRING) {\n                    options.template = template(options.template);\n              } else if (!options.template) {\n                  options.template = template((data) => {\n                     var text = fieldAccessor(\"text\")(data.item);\n\n                     if (data.item.encoded !== false) {\n                         text = encode(text);\n                     }\n\n                     return `<span class='k-panelbar-item-text'>${text}</span>`;\n                  });\n                }\n\n            that.templates = {\n                content: template(\n                   ({ data, item, contentAttributes, content }) => `<div class='k-panelbar-content'${contentAttributes({ data, item, contentAttributes, content })}>${content(item)}</div>`\n                ),\n                group: template( ({ data, items, group, renderItems, panelBar, ariaHidden, groupCssClass, groupAttributes }) =>\n                    `<ul role='group' aria-hidden='${ariaHidden(group)}' class='${groupCssClass(group)}' ${groupAttributes(group)}>` +\n                        renderItems({ data, items, group, renderItems, panelBar, ariaHidden, groupCssClass, groupAttributes }) +\n                    \"</ul>\"\n                ),\n                itemWrapper: template(({ panelBar, item, arrow, textClass, arrowIconOptions, textAttributes, contentUrl }) => {\n                     var url = fieldAccessor(\"url\")(item);\n                     var imageUrl = fieldAccessor(\"imageUrl\")(item);\n                     var spriteCssClass = fieldAccessor(\"spriteCssClass\")(item);\n                     var icon = fieldAccessor(\"icon\")(item);\n                     var iconClass = fieldAccessor(\"iconClass\")(item);\n                     iconClass = iconClass ? \" \" + iconClass : \"\";\n                     var contentUrl = contentUrl(item);\n                     var tag = url || contentUrl ? 'a' : 'span';\n\n                    return `<${tag} class='${textClass(item)}' ${contentUrl}${textAttributes(url)}>` +\n                        (imageUrl ? `<img class='k-panelbar-item-icon k-image' alt='' src='${imageUrl}' />` : '') +\n                        (spriteCssClass ? `<span class='k-sprite ${spriteCssClass}'></span>` : '') +\n                        (icon ? kendo.ui.icon($(\"<span></span>\"), { icon: icon, iconClass: \"k-panelbar-item-icon\" + iconClass }) : '') +\n                        panelBar.options.template({ panelBar, item, arrow, textClass, textAttributes, contentUrl }) +\n                        arrow({ panelBar, item, arrow, textClass, arrowIconOptions, textAttributes, contentUrl }) +\n                    `</${tag}>`;\n                }),\n\n                item: template(({ data, group, item, panelBar, itemWrapper, renderContent, arrow, arrowIconOptions, subGroup, aria, wrapperCssClass, contentUrl, textClass, textAttributes }) =>\n                    `<li aria-selected='false' role='treeitem' ${aria(item)}class='${wrapperCssClass(group, item)}' ` +\n                    kendo.attr(\"uid\") + `='${item.uid}'>` +\n                        itemWrapper({ data, group, item, panelBar, itemWrapper, renderContent, arrow, arrowIconOptions, subGroup, aria, wrapperCssClass, contentUrl, textClass, textAttributes }) +\n                        ((item.items && item.items.length > 0) ?\n                        subGroup({ items: item.items, panelBar: panelBar, group: { expanded: item.expanded } })\n                        : ((item.content || item.contentUrl) ?\n                        renderContent({ data, group, item, panelBar, itemWrapper, renderContent, arrow, arrowIconOptions, subGroup, aria, wrapperCssClass, contentUrl, textClass, textAttributes })\n                        : \"\")\n                        ) +\n                    \"</li>\"\n                ),\n                loading: template(({ messages }) => `<li class='k-panelbar-item'><span class='k-icon k-i-loading'></span> ${encode(messages.loading)}</li>`),\n                retry: template(({ messages }) =>\n                    \"<li class='k-panelbar-item'>\" +\n                        `${encode(messages.requestFailed)} ` +\n                        `<button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-request-retry'><span class='k-button-text'>${encode(messages.retry)}</span></button>` +\n                    \"</li>\"\n                ),\n                arrow: template(({ item, arrowIconOptions }) => kendo.ui.icon(arrowIconOptions(item))),\n                empty: template(() => \"\")\n            };\n        },\n\n        setOptions: function(options) {\n            var animation = this.options.animation;\n\n            this._animations(options);\n\n            options.animation = extend(true, animation, options.animation);\n\n            if (\"dataSource\" in options) {\n                this.setDataSource(options.dataSource);\n            }\n\n            Widget.fn.setOptions.call(this, options);\n        },\n\n        expand: function(element, useAnimation) {\n            var that = this,\n                animBackup = {};\n\n            element = this.element.find(element);\n\n            if (that._animating && element.find(\"ul\").is(\":visible\")) {\n                that.one(\"complete\", function() {\n                    setTimeout(function() {\n                        that.expand(element);\n                    });\n                });\n                return;\n            }\n            that._animating = true;\n\n            useAnimation = useAnimation !== false;\n\n            element.each(function(index, item) {\n                item = $(item);\n                var wrapper = element.children(\".k-panelbar-group,.k-panelbar-content\");\n\n                if (!wrapper.length) {\n                    wrapper = that._addGroupElement(element);\n                }\n\n                 var groups = wrapper.add(item.find(CONTENTS));\n\n                if (!item.hasClass(DISABLEDCLASS) && groups.length > 0) {\n\n                    if (that.options.expandMode == SINGLE && that._collapseAllExpanded(item)) {\n                        return that;\n                    }\n\n                    if (!useAnimation) {\n                        animBackup = that.options.animation;\n                        that.options.animation = { expand: { effects: {} }, collapse: { hide: true, effects: {} } };\n                    }\n\n                    if (!that._triggerEvent(EXPAND, item)) {\n                        that._toggleItem(item, false, false);\n                    }\n\n                    if (!useAnimation) {\n                        that.options.animation = animBackup;\n                    }\n                }\n            });\n\n            return that;\n        },\n\n        collapse: function(element, useAnimation) {\n            var that = this,\n                animBackup = {};\n\n            that._animating = true;\n\n            useAnimation = useAnimation !== false;\n            element = that.element.find(element);\n\n            element.each(function(index, item) {\n                item = $(item);\n                var groups = item.find(GROUPS).add(item.find(CONTENTS));\n\n                if (!item.hasClass(DISABLEDCLASS) && groups.is(VISIBLE)) {\n\n                    if (!useAnimation) {\n                        animBackup = that.options.animation;\n                        that.options.animation = { expand: { effects: {} }, collapse: { hide: true, effects: {} } };\n                    }\n\n                    if (!that._triggerEvent(COLLAPSE, item)) {\n                        that._toggleItem(item, true);\n                    }\n\n                    if (!useAnimation) {\n                        that.options.animation = animBackup;\n                    }\n                }\n\n            });\n            return that;\n        },\n\n         updateArrow: function(items) {\n                var that = this;\n\n                items = $(items);\n                items.children(LINKSELECTOR).children(\".k-panelbar-collapse, .k-panelbar-expand\").remove();\n\n                items\n                    .filter(function() {\n                        var dataItem = that.dataItem(this);\n\n                        if (!dataItem) {\n                            return $(this).find(\".k-panelbar-group\").length > 0 ||\n                                $(this).find(\".k-panelbar-content\").length > 0;\n                        }\n\n                        return dataItem.hasChildren || dataItem.content || dataItem.contentUrl;\n                    })\n                    .children(\".k-link:not(:has([class*=-i-chevron]))\")\n                    .each(function() {\n                        var item = $(this),\n                            parent = item.parent();\n                        let icon = kendo.ui.icon({\n                            icon: parent.hasClass(EXPANDEDCLASS) ? \"chevron-up\" : \"chevron-down\",\n                            iconClass: `k-panelbar-toggle k-panelbar-${parent.hasClass(EXPANDEDCLASS) ? \"collapse\" : \"expand\" }`\n                        });\n\n                        item.append(icon);\n                    });\n         },\n\n        _accessors: function() {\n            var that = this,\n                options = that.options,\n                i, field, textField,\n                element = that.element;\n\n            for (i in bindings) {\n                field = options[bindings[i]];\n                textField = element.attr(kendo.attr(i + \"-field\"));\n\n                if (!field && textField) {\n                    field = textField;\n                }\n\n                if (!field) {\n                    field = i;\n                }\n\n                if (!isArray(field)) {\n                    field = [field];\n                }\n\n                options[bindings[i]] = field;\n            }\n        },\n\n        _progress: function(item, showProgress) {\n            var element = this.element;\n            var loadingText = this.templates.loading({ messages: this.options.messages });\n\n            if (arguments.length == 1) {\n                showProgress = item;\n\n                if (showProgress) {\n                    element.html(loadingText);\n                } else {\n                    element.empty();\n                }\n            }\n            else {\n                itemIcon(item)\n                    .empty()\n                    .removeClass(\"k-i-arrow-rotate-cw k-svg-i-arrow-rotate-cw\")\n                    .toggleClass(\"k-i-loading\", showProgress);\n            }\n        },\n\n        _refreshRoot: function(items) {\n            var that = this;\n            var parent = that.element;\n            var groupData = {\n                firstLevel: true,\n                expanded: true,\n                length: parent.children().length\n            };\n\n            this.element.empty();\n\n            var rootItemsHtml = $.map(items, function(value, idx) {\n                    if (typeof value === \"string\") {\n                        return $(value);\n                    } else {\n                        value.items = [];\n                        let itemElement = $(that.renderItem({\n                            group: groupData,\n                            item: extend(value, { index: idx })\n                        }));\n\n                        kendo.applyStylesFromKendoAttributes(itemElement, [\"display\"]);\n                        return itemElement;\n                    }\n            });\n\n            this.element.append(rootItemsHtml);\n            var elements = this.element.children(\".k-panelbar-item\");\n            for (var i = 0; i < items.length; i++) {\n                this.trigger(\"itemChange\", {\n                    item: elements.eq(i).find(\".k-link\").first(),\n                    data: items[i],\n                    ns: ui\n                });\n            }\n        },\n\n        _refreshChildren: function(item, parentNode) {\n            var i, children, child;\n\n            parentNode.children(\".k-panelbar-group\").empty();\n            var items = item.children.data();\n            if (!items.length) {\n                updateItemHtml(parentNode);\n                children = parentNode.children(\".k-panelbar-group\").children(\"li\");\n            } else {\n                this.append(item.children, parentNode);\n\n                if (this.options.loadOnDemand) {\n                    this._toggleGroup(parentNode.children(\".k-panelbar-group\"), false);\n                }\n                children = parentNode.children(\".k-panelbar-group\").children(\"li\");\n\n                for (i = 0; i < children.length; i++) {\n                    child = children.eq(i);\n                    this.trigger(\"itemChange\", {\n                        item: child.find(\".k-link\").first(),\n                        data: this.dataItem(child),\n                        ns: ui\n                    });\n                }\n            }\n        },\n\n        findByUid: function(uid) {\n            var items = this.element.find(\".k-panelbar-item\");\n            var uidAttr = kendo.attr(\"uid\");\n            var result;\n\n            for (var i = 0; i < items.length; i++) {\n                if (items[i].getAttribute(uidAttr) == uid) {\n                    result = items[i];\n                    break;\n                }\n            }\n\n            return $(result);\n        },\n\n        refresh: function(e) {\n            var options = this.options;\n            var node = e.node;\n            var action = e.action;\n            var items = e.items;\n            var parentNode = this.wrapper;\n            var loadOnDemand = options.loadOnDemand;\n\n            if (e.field) {\n                if (!items[0] || !items[0].level) {\n                    return;\n                }\n\n                return this._updateItems(items, e.field);\n            }\n\n            if (node) {\n                parentNode = this.findByUid(node.uid);\n                this._progress(parentNode, false);\n            }\n            if (action == \"add\") {\n                this._appendItems(e.index, items, parentNode);\n            } else if (action == \"remove\") {\n                this.remove(this.findByUid(items[0].uid));\n            } else if (action == \"itemchange\") {\n                this._updateItems(items);\n            } else if (action == \"itemloaded\") {\n                this._refreshChildren(node, parentNode);\n            } else {\n                this._refreshRoot(items);\n            }\n\n            if (action != \"remove\") {\n                for (var k = 0; k < items.length; k++) {\n\n                    if (!loadOnDemand || items[k].expanded) {\n                        var tempItem = items[k];\n                        if (this._hasChildItems(tempItem)) {\n                                tempItem.load();\n                        }\n                    }\n                }\n            }\n\n            this.trigger(DATABOUND, { node: node ? parentNode : undefined$1 });\n        },\n\n        _error: function(e) {\n            var node = e.node && this.findByUid(e.node.uid);\n            var retryHtml = this.templates.retry({ messages: this.options.messages });\n\n            if (node) {\n                this._progress(node, false);\n                this._expanded(node, false);\n                kendo.ui.icon(itemIcon(node), { icon: \"arrow-rotate-cw\" });\n                e.node.loaded(false);\n            } else {\n                this._progress(false);\n                this.element.html(retryHtml);\n            }\n        },\n\n        _retryRequest: function(e) {\n            e.preventDefault();\n\n            this.dataSource.fetch();\n        },\n\n         items: function() {\n            return this.element.find(\".k-panelbar-item > span:first-child\");\n        },\n\n        setDataSource: function(dataSource) {\n            var options = this.options;\n\n            options.dataSource = dataSource;\n\n            this._dataSource();\n\n            if (this.options.autoBind) {\n                this._progress(true);\n                this.dataSource.fetch();\n            }\n        },\n\n        _bindDataSource: function() {\n            this._refreshHandler = this.refresh.bind(this);\n            this._errorHandler = this._error.bind(this);\n\n            this.dataSource.bind(CHANGE, this._refreshHandler);\n            this.dataSource.bind(ERROR, this._errorHandler);\n        },\n\n        _unbindDataSource: function() {\n            var dataSource = this.dataSource;\n\n            if (dataSource) {\n                dataSource.unbind(CHANGE, this._refreshHandler);\n                dataSource.unbind(ERROR, this._errorHandler);\n            }\n        },\n\n        // generates accessor function for a given field name, honoring the data*Field arrays\n        _fieldAccessor: function(fieldName) {\n            var fieldBindings = this.options[bindings[fieldName]] || [],\n                count = fieldBindings.length;\n\n            if (count === 0) {\n                return (function(item) { return item[fieldName]; });\n            } else {\n                return (function(item) {\n                    var levels = $.map(fieldBindings, kendo.getter);\n                    if (item.level) {\n                        return levels[Math.min(item.level(), count - 1)](item);\n                    } else {\n                        return levels[count - 1](item);\n                    }\n                });\n            }\n        },\n\n        _dataSource: function() {\n            var that = this,\n                options = that.options,\n                dataSource = options.dataSource;\n\n            if (!dataSource) {\n                return;\n            }\n\n            dataSource = isArray(dataSource) ? { data: dataSource } : dataSource;\n\n            that._unbindDataSource();\n\n            if (!dataSource.fields) {\n                dataSource.fields = [\n                    { field: \"text\" },\n                    { field: \"url\" },\n                    { field: \"spriteCssClass\" },\n                    { field: \"imageUrl\" },\n                    { field: \"icon\" },\n                    { field: \"iconClass\" }\n                ];\n            }\n\n            that.dataSource = HierarchicalDataSource.create(dataSource);\n\n            that._bindDataSource();\n        },\n\n        _appendItems: function(index, items, parentNode) {\n            var that = this, children, wrapper;\n\n              if (parentNode.hasClass(\"k-panelbar\")) {\n                  children = parentNode.children(\"li\");\n                  wrapper = parentNode;\n              } else {\n                  wrapper = parentNode.children(\".k-panelbar-group\");\n                  if (!wrapper.length) {\n                      wrapper = that._addGroupElement(parentNode);\n                  }\n\n                  children = wrapper.children(\"li\");\n              }\n\n             var groupData = {\n                firstLevel: parentNode.hasClass(\"k-panelbar\"),\n                expanded: true,\n                length: children.length\n             };\n\n             var itemsHtml = $.map(items, function(value, idx) {\n                    if (typeof value === \"string\") {\n                        return $(value);\n                    } else {\n                        let itemElement = $(that.renderItem({\n                            group: groupData,\n                            item: extend(value, { index: idx })\n                        }));\n\n                        kendo.applyStylesFromKendoAttributes(itemElement, [\"display\"]);\n                        return itemElement;\n                    }\n            });\n\n              if (typeof index == UNDEFINED) {\n                   index = children.length;\n              }\n\n              for (var i = 0; i < itemsHtml.length; i++) {\n                  if (children.length === 0 || index === 0) {\n                      wrapper.append(itemsHtml[i]);\n                  } else {\n                       itemsHtml[i].insertAfter(children[index - 1]);\n                  }\n               }\n\n              if (that.dataItem(parentNode)) {\n                  that.dataItem(parentNode).hasChildren = true;\n                  that.updateArrow(parentNode);\n              }\n        },\n\n        _updateItems: function(items, field) {\n            var that = this;\n            var i, node, nodeWrapper, item;\n            var context = { panelBar: that.options, item: item, group: {} };\n            var render = field != \"expanded\";\n\n            if (field == \"selected\") {\n                if (items[0][field]) {\n                    var currentNode = that.findByUid(items[0].uid);\n\n                    if (!currentNode.hasClass(DISABLEDCLASS)) {\n                        that.select(currentNode, true);\n                    }\n                } else {\n                    that.clearSelection();\n                }\n            } else {\n                var elements = $.map(items, function(item) {\n                    return that.findByUid(item.uid);\n                });\n\n                for (i = 0; i < items.length; i++) {\n                    context.item = item = items[i];\n                    context.panelBar = that;\n                    nodeWrapper = elements[i];\n                    node = nodeWrapper.parent();\n                    if (render) {\n                        context.group = {\n                            firstLevel: node.hasClass(\"k-panelbar\"),\n                            expanded: nodeWrapper.parent().hasClass(EXPANDEDCLASS),\n                            length: nodeWrapper.children().length\n                        };\n\n                        nodeWrapper.children(\".k-link\").remove();\n                        nodeWrapper.prepend(that.templates.itemWrapper(extend(context,\n                            {\n                                arrow: item.hasChildren || item.content || item.contentUrl ? that.templates.arrow : that.templates.empty\n                            },\n                            rendering)));\n                    }\n\n                    if (field == \"expanded\") {\n                        that._toggleItem(nodeWrapper, !item[field], item[field] ? \"true\" : true);\n                    } else if (field == \"enabled\") {\n                        that.enable(nodeWrapper, item[field]);\n                         if (!item[field]) {\n                            if (item.selected) {\n                                item.set(\"selected\", false);\n                            }\n                         }\n                    }\n\n                    if (nodeWrapper.length) {\n                        this.trigger(\"itemChange\", { item: nodeWrapper.find(\".k-link\").first(), data: item, ns: ui });\n                    }\n                }\n            }\n        },\n\n        _toggleDisabled: function(element, enable) {\n            element = this.element.find(element);\n            element\n                .toggleClass(DISABLEDCLASS, !enable)\n                .attr(ARIA_DISABLED, !enable);\n        },\n\n       dataItem: function(item) {\n            var uid = $(item).closest(ITEM).attr(kendo.attr(\"uid\")),\n                dataSource = this.dataSource;\n\n            return dataSource && dataSource.getByUid(uid);\n       },\n\n       select: function(element, skipChange) {\n           var that = this;\n\n            if (element === undefined$1) {\n                return that.element.find(selectableItems).parent();\n            }\n\n            element = that.element.find(element);\n\n            if (!element.length) {\n                this._updateSelected(element);\n            } else {\n                element\n                    .each(function() {\n                        var item = $(this),\n                            link = item.children(LINKSELECTOR);\n\n                        if (item.hasClass(DISABLEDCLASS)) {\n                            return that;\n                        }\n\n                        that._updateSelected(link, skipChange);\n                    });\n            }\n\n            return that;\n        },\n\n        clearSelection: function() {\n            this.select($());\n        },\n\n        enable: function(element, state) {\n            this._toggleDisabled(element, state !== false);\n\n            return this;\n        },\n\n        disable: function(element) {\n            this._toggleDisabled(element, false);\n\n            return this;\n        },\n\n        append: function(item, referenceItem) {\n            referenceItem = this.element.find(referenceItem);\n\n            var inserted = this._insert(item, referenceItem, referenceItem.length ? referenceItem.find(GROUPS) : null);\n\n            each(inserted.items, function() {\n                inserted.group.append(this);\n                updateLevel(this);\n            });\n\n            this.updateArrow(referenceItem);\n            inserted.group.height(\"auto\");\n\n            return this;\n        },\n\n        insertBefore: function(item, referenceItem) {\n            referenceItem = this.element.find(referenceItem);\n\n            var inserted = this._insert(item, referenceItem, referenceItem.parent());\n\n            each(inserted.items, function() {\n                referenceItem.before(this);\n                updateLevel(this);\n            });\n\n            inserted.group.height(\"auto\");\n\n            return this;\n        },\n\n        insertAfter: function(item, referenceItem) {\n            referenceItem = this.element.find(referenceItem);\n\n            var inserted = this._insert(item, referenceItem, referenceItem.parent());\n\n            each(inserted.items, function() {\n                referenceItem.after(this);\n                updateLevel(this);\n            });\n\n            inserted.group.height(\"auto\");\n\n            return this;\n        },\n\n        remove: function(element) {\n            element = this.element.find(element);\n\n            var that = this,\n                parent = element.parentsUntil(that.element, ITEM),\n                group = element.parent(\"ul\");\n\n            element.remove();\n\n            if (group && !group.hasClass(\"k-panelbar\") && !group.children(ITEM).length) {\n                group.remove();\n            }\n\n            if (parent.length) {\n                parent = parent.eq(0);\n\n                that.updateArrow(parent);\n            }\n\n            return that;\n        },\n\n        reload: function(element) {\n            var that = this;\n            element = that.element.find(element);\n\n            element.each(function() {\n                var item = $(this);\n\n                that._ajaxRequest(item, item.children(\".\" + CONTENT), !item.is(VISIBLE));\n            });\n        },\n\n        _first: function() {\n            return this.element.children(ACTIVEITEMSELECTOR).first();\n        },\n\n        _last: function() {\n            var item = this.element.children(ACTIVEITEMSELECTOR).last(),\n                group = item.children(VISIBLEGROUP);\n\n            if (group[0]) {\n                return group.children(ACTIVEITEMSELECTOR).last();\n            }\n            return item;\n        },\n\n        _current: function(candidate) {\n            var that = this,\n                focused = that._focused,\n                id = that._itemId;\n\n            if (candidate === undefined$1) {\n                return focused;\n            }\n\n            that.element.removeAttr(\"aria-activedescendant\");\n\n            if (focused && focused.length) {\n                if (focused[0].id === id) {\n                    focused.removeAttr(\"id\");\n                }\n\n                focused\n                    .children(LINKSELECTOR)\n                    .removeClass(FOCUSEDCLASS);\n            }\n\n            if ($(candidate).length) {\n                id = candidate[0].id || id;\n\n                candidate.attr(\"id\", id)\n                         .children(LINKSELECTOR)\n                         .addClass(FOCUSEDCLASS);\n\n                that.element.attr(\"aria-activedescendant\", id);\n            }\n\n            that._focused = candidate;\n        },\n\n        _keydown: function(e) {\n            var that = this,\n                key = e.keyCode,\n                current = that._current();\n\n            if (e.target != e.currentTarget) {\n                return;\n            }\n\n            if (key == keys.DOWN || key == keys.RIGHT) {\n                that._current(that._nextItem(current));\n                e.preventDefault();\n            } else if (key == keys.UP || key == keys.LEFT) {\n                that._current(that._prevItem(current));\n                e.preventDefault();\n            } else if (key == keys.ENTER || key == keys.SPACEBAR) {\n                that._click(e);\n                e.preventDefault();\n            } else if (key == keys.HOME) {\n                that._current(that._first());\n                e.preventDefault();\n            } else if (key == keys.END) {\n                that._current(that._last());\n                e.preventDefault();\n            }\n        },\n\n        _nextItem: function(item) {\n            if (!item) {\n                return this._first();\n            }\n\n            var group = item.children(VISIBLEGROUP),\n                next = item.nextAll(\":visible\").first();\n\n            if (group[0]) {\n                next = group.children().first();\n            }\n\n            if (!next[0]) {\n                next = item.parent(VISIBLEGROUP).parent(ITEM).next();\n            }\n\n            if (!next[0]) {\n                next = this._first();\n            }\n\n            return next;\n        },\n\n        _prevItem: function(item) {\n            if (!item) {\n                return this._last();\n            }\n\n            var prev = item.prevAll(\":visible\").first(),\n                result;\n\n            if (!prev[0]) {\n                prev = item.parent(VISIBLEGROUP).parent(ITEM);\n                if (!prev[0]) {\n                    prev = this._last();\n                }\n            } else {\n                result = prev;\n                while (result[0]) {\n                    result = result.children(VISIBLEGROUP).children().last();\n                    if (result[0]) {\n                        prev = result;\n                    }\n                }\n            }\n\n            return prev;\n        },\n\n        _insert: function(item, referenceItem, parent) {\n            var that = this,\n                items,\n                plain = $.isPlainObject(item),\n                isReferenceItem = referenceItem && referenceItem[0],\n                groupData;\n\n            if (!isReferenceItem) {\n                parent = that.element;\n            }\n\n            groupData = {\n                firstLevel: parent.hasClass(\"k-panelbar\"),\n                expanded: $(referenceItem).hasClass(EXPANDEDCLASS),\n                length: parent.children().length\n            };\n\n            if (isReferenceItem && !parent.length) {\n                parent = $(that.renderGroup({ group: groupData, options: that.options }));\n                kendo.applyStylesFromKendoAttributes(parent, [\"display\"]);\n                parent.appendTo(referenceItem);\n            }\n\n            if (plain || Array.isArray(item) || item instanceof HierarchicalDataSource) { // is JSON or HierarchicalDataSource\n                if (item instanceof HierarchicalDataSource) {\n                   item = item.data();\n                }\n\n                items = $.map(plain ? [item] : item, function(value, idx) {\n                    if (typeof value === \"string\") {\n                        return $(value);\n                    } else {\n                        let itemElement = $(that.renderItem({\n                            group: groupData,\n                            item: extend(value, { index: idx })\n                        }));\n\n                        kendo.applyStylesFromKendoAttributes(itemElement, [\"display\"]);\n                        return itemElement;\n                    }\n                });\n                if (isReferenceItem) {\n                    var dataItem = that.dataItem(referenceItem);\n\n                    if (dataItem) {\n                        dataItem.hasChildren = true;\n                        referenceItem\n                            .attr(ARIA_EXPANDED, dataItem.expanded)\n                            .not(\".\" + EXPANDEDCLASS)\n                            .children(\"ul\")\n                            .attr(ARIA_HIDDEN, !dataItem.expanded);\n                    } else {\n                        referenceItem.attr(ARIA_EXPANDED, false);\n                    }\n                }\n            } else {\n                if (typeof item == \"string\" && item.charAt(0) != \"<\") {\n                    items = that.element.find(item);\n                } else {\n                    items = $(item);\n                }\n                that._updateItemsClasses(items);\n            }\n\n            if (!item.length) {\n                item = [item];\n            }\n\n            return { items: items, group: parent };\n        },\n\n        _toggleHover: function(e) {\n            var target = $(e.currentTarget);\n\n            if (!target.parents(\"li.\" + DISABLEDCLASS).length) {\n                target.toggleClass(\"k-hover\", e.type == MOUSEENTER);\n            }\n        },\n\n        _updateClasses: function() {\n            var that = this,\n                panels, items, expanded, panelsParent, dataItem;\n\n            panels = that.element\n                         .find(\"li > ul\")\n                         .not(function() { return $(this).parentsUntil(\".k-panelbar\", \"div\").length; })\n                         .addClass(\"k-panelbar-group\")\n                         .attr(\"role\", \"group\");\n\n            panelsParent = panels.parent();\n            dataItem = that.dataItem(panelsParent);\n            expanded = (dataItem && dataItem.expanded) || false;\n\n            panels.parent()\n                  .not(\"[\" + ARIA_EXPANDED + \"]\")\n                  .attr(ARIA_EXPANDED, expanded)\n                  .not(\".\" + EXPANDEDCLASS)\n                  .children(\"ul\")\n                  .attr(ARIA_HIDDEN, !expanded)\n                  .hide();\n\n            items = that.element.add(panels).children();\n\n            that._updateItemsClasses(items);\n            that.updateArrow(items);\n        },\n\n        _updateItemsClasses: function(items) {\n            var length = items.length,\n                idx = 0;\n\n            for (; idx < length; idx++) {\n                this._updateItemClasses(items[idx], idx);\n            }\n        },\n\n        _updateItemClasses: function(item, index) {\n            var selected = this._selected,\n                contentUrls = this.options.contentUrls,\n                url = contentUrls && contentUrls[index],\n                root = this.element[0],\n                wrapElement, link;\n\n            item = $(item)\n                .addClass(\"k-panelbar-item\")\n                .attr({\n                    role: \"treeitem\",\n                    \"aria-selected\": false\n                });\n\n            if (kendo.support.browser.msie) { // IE10 doesn't apply list-style: none on invisible items otherwise.\n                item.css(\"list-style-position\", \"inside\")\n                    .css(\"list-style-position\", \"\");\n            }\n\n            item\n                .children(IMG)\n                .addClass(IMAGE);\n\n            link = item\n                    .children(\"a\")\n                    .addClass(LINK);\n\n            if (link[0]) {\n                link.attr(\"href\", url); //url can be undefined\n\n                link.children(IMG)\n                    .addClass(IMAGE);\n            }\n\n            item\n                .filter(\"li[disabled]\")\n                .addClass(\"k-disabled\")\n                .attr(ARIA_DISABLED, true)\n                .prop(\"disabled\", false);\n\n            item\n                .children(\"div\")\n                .addClass(CONTENT + \" k-panelbar-content\")\n                .attr(ARIA_HIDDEN, true)\n                .hide()\n                .parent()\n                .attr(ARIA_EXPANDED, false);\n\n            link = item.children(SELECTEDSELECTOR);\n            if (link[0]) {\n                if (selected) {\n                    selected.attr(ARIA_SELECTED, false)\n                            .children(SELECTEDSELECTOR)\n                            .removeClass(SELECTEDCLASS);\n                }\n\n                link.addClass(SELECTEDCLASS);\n                this._selected = item.attr(ARIA_SELECTED, true);\n            }\n\n            if (!item.children(LINKSELECTOR)[0]) {\n                wrapElement = \"<span class='\" + LINK + \"'><span class='k-panelbar-item-text'></span></span>\";\n                if (contentUrls && contentUrls[index] && item[0].parentNode == root) {\n                    wrapElement = '<a class=\"k-link\" href=\"' + contentUrls[index] + '\"></a>';\n                }\n\n                item\n                    .contents() // exclude groups, real links, templates and empty text nodes\n                    .filter(function() { return (!this.nodeName.match(excludedNodesRegExp) && !(this.nodeType == 3 && !kendo.trim(this.nodeValue.trim))); })\n                    .wrapAll(wrapElement);\n            }\n\n\n            if (item.parent(\".k-panelbar\")[0]) {\n                item.addClass(\"k-panelbar-header\");\n            } else {\n                item.addClass(\"k-panelbar-item\");\n            }\n\n            if (!/k\\-level\\-\\d+/i.test(item.attr(\"class\"))) {\n                item.addClass(\"k-level-\" + item.parentsUntil(this.element, \"ul\").length);\n            }\n        },\n\n        _click: function(e) {\n            var that = this,\n                target = e.type == CLICK ? $(e.target) : that._current().children(LINKSELECTOR),\n                element = that.element,\n                prevent, contents, href, isAnchor;\n\n            if (target.parents(\"li.\" + DISABLEDCLASS).length) {\n                return;\n            }\n\n            if (target.closest(\".k-panelbar\")[0] != element[0]) {\n                return;\n            }\n\n            if (target.is(\":kendoFocusable\") && !target.hasClass(LINK)) {\n                return;\n            }\n\n            var link = target.closest(LINKSELECTOR),\n                item = link.closest(ITEM);\n\n            that._updateSelected(link);\n\n            var wrapper = item.children(\".k-panelbar-group,.k-panelbar-content\");\n            var dataItem = this.dataItem(item);\n\n            if (!wrapper.length && ((that.options.loadOnDemand && dataItem && dataItem.hasChildren) ||\n             this._hasChildItems(item) || item.content || item.contentUrl)) {\n                wrapper = that._addGroupElement(item);\n            }\n\n            contents = item.find(GROUPS).add(item.find(CONTENTS));\n            href = link.attr(HREF);\n            isAnchor = href && (href.charAt(href.length - 1) == \"#\" || href.indexOf(\"#\" + that.element[0].id + \"-\") != -1);\n            prevent = !!(isAnchor || contents.length);\n\n            if (contents.data(\"animating\") && prevent) {\n                e.preventDefault();\n                return;\n            }\n\n            if (that._triggerEvent(SELECT, item)) {\n                prevent = true;\n            }\n\n            if (prevent === false) {\n                return;\n            }\n\n            if (that.options.expandMode == SINGLE) {\n                if (that._collapseAllExpanded(item) && prevent) {\n                    e.preventDefault();\n                    return;\n                }\n            }\n\n            if (contents.length) {\n                var visibility = contents.is(VISIBLE);\n\n                if (!that._triggerEvent(!visibility ? EXPAND : COLLAPSE, item)) {\n                    prevent = that._toggleItem(item, visibility);\n                }\n            }\n\n            if (prevent) {\n                e.preventDefault();\n            }\n        },\n        _hasChildItems: function(item) {\n            return (item.items && item.items.length > 0) || item.hasChildren;\n        },\n\n        _toggleItem: function(element, isVisible, expanded) {\n            var that = this,\n                childGroup = element.find(GROUPS),\n                link = element.find(LINKSELECTOR),\n                url = link.attr(HREF),\n                prevent, content,\n                dataItem = that.dataItem(element),\n                notVisible = !isVisible;\n\n            var loaded = dataItem && dataItem.loaded();\n\n            if (dataItem && !expanded && dataItem.expanded !== notVisible) {\n                dataItem.set(\"expanded\", notVisible);\n                prevent = dataItem.hasChildren || !!dataItem.content || !!dataItem.contentUrl;\n                return prevent;\n            }\n\n            if (dataItem && (!expanded || expanded === \"true\") && !loaded && !dataItem.content && !dataItem.contentUrl) {\n                 if (that.options.loadOnDemand) {\n                     this._progress(element, true);\n                 }\n\n                 element.children(\".k-panelbar-group,.k-panelbar-content\").remove();\n                 prevent = dataItem.hasChildren;\n\n                 dataItem.load();\n             } else {\n                   if (childGroup.length) {\n                        this._toggleGroup(childGroup, isVisible);\n                        prevent = true;\n                   } else {\n                        content = element.children(\".\" + CONTENT);\n\n                        if (content.length) {\n                            prevent = true;\n\n                            if (!content.is(EMPTY) || url === undefined$1) {\n                                that._toggleGroup(content, isVisible);\n                            } else {\n                                that._ajaxRequest(element, content, isVisible);\n                            }\n                        }\n                    }\n             }\n\n            return prevent;\n        },\n\n        _toggleGroup: function(element, visibility) {\n            var that = this,\n                animationSettings = that.options.animation,\n                animation = animationSettings.expand,\n                hasCollapseAnimation = animationSettings.collapse && \"effects\" in animationSettings.collapse,\n                collapse = extend({}, animationSettings.expand, animationSettings.collapse);\n\n            if (element.hasClass(\"k-hidden\")) {\n                element.removeClass(\"k-hidden\");\n            }\n\n            if (!hasCollapseAnimation) {\n                collapse = extend(collapse, { reverse: true });\n            }\n\n            if (element.is(VISIBLE) != visibility) {\n                that._animating = false;\n                return;\n            }\n\n            element.attr(ARIA_HIDDEN, !!visibility);\n\n            element.parent()\n                .attr(ARIA_EXPANDED, !visibility)\n                .toggleClass(EXPANDEDCLASS, !visibility)\n                .find(\"> .k-link > .k-panelbar-collapse,> .k-link > .k-panelbar-expand\")\n                .each(function(ind, el) {\n                    let iconEl = $(el);\n                    iconEl.removeClass(\"k-panelbar-expand k-panelbar-collapse\");\n                    kendo.ui.icon(iconEl, {\n                        icon: visibility ? \"chevron-down\" : \"chevron-up\",\n                        iconClass: visibility ? \"k-panelbar-expand\" : \"k-panelbar-collapse\"\n                    });\n                });\n            if (visibility) {\n                animation = extend(collapse, { hide: true });\n\n                animation.complete = function() {\n                    that._animationCallback();\n                };\n            } else {\n                animation = extend( { complete: function(element) {\n                        that._triggerEvent(ACTIVATE, element.closest(ITEM));\n                        that._animationCallback();\n                    } }, animation );\n            }\n\n            element\n                .toggle(0)\n                .kendoStop(true, true)\n                .kendoAnimate( animation );\n        },\n\n        _animationCallback: function() {\n            var that = this;\n            that.trigger(\"complete\");\n            that._animating = false;\n        },\n\n        _addGroupElement: function(element) {\n            var group = $('<ul role=\"group\" aria-hidden=\"true\" class=\"k-panelbar-group\"></ul>').hide();\n\n            element.append(group);\n            return group;\n        },\n\n        _collapseAllExpanded: function(item) {\n            var that = this, children, stopExpand = false;\n\n            var groups = item.find(GROUPS).add(item.find(CONTENTS));\n\n            if (groups.is(VISIBLE)) {\n                stopExpand = true;\n            }\n\n            if (!(groups.is(VISIBLE) || groups.length === 0)) {\n                children = item.siblings();\n                children.find(GROUPS).add(children.find(CONTENTS))\n                        .filter(function() { return $(this).is(VISIBLE); })\n                        .each(function(index, content) {\n                            content = $(content);\n\n                            stopExpand = that._triggerEvent(COLLAPSE, content.closest(ITEM));\n                            if (!stopExpand) {\n                                that._toggleGroup(content, true);\n                            }\n                        });\n\n                 that.one(\"complete\", function() {\n                    setTimeout(function() {\n                        children.each(function(index, child) {\n                            var dataItem = that.dataItem(child);\n\n                            if (dataItem) {\n                                dataItem.set(\"expanded\", false);\n                            }\n                        });\n                    });\n                });\n            }\n\n            return stopExpand;\n        },\n\n        _ajaxRequest: function(element, contentElement, isVisible) {\n\n            var that = this,\n                statusIcon = element.find(\".k-panelbar-collapse, .k-panelbar-expand\"),\n                link = element.find(LINKSELECTOR),\n                loadingIconTimeout = setTimeout(function() {\n                    statusIcon\n                        .empty()\n                        .removeClass(\"k-i-chevron-up k-i-chevron-down k-svg-i-chevron-up k-svg-i-chevron-down\")\n                        .addClass(\"k-i-loading\");\n                }, 100),\n                data = {},\n                url = link.attr(HREF);\n\n            $.ajax({\n                type: \"GET\",\n                cache: false,\n                url: url,\n                dataType: \"html\",\n                data: data,\n\n                error: function(xhr, status) {\n                    statusIcon.removeClass(\"k-i-loading\");\n                    kendo.ui.icon(statusIcon, { icon: statusIcon.hasClass(\"k-panelbar-expand\") ? \"chevron-down\" : \"chevron-up\" });\n                    if (that.trigger(ERROR, { xhr: xhr, status: status })) {\n                        this.complete();\n                    }\n                },\n\n                complete: function() {\n                    clearTimeout(loadingIconTimeout);\n                    kendo.ui.icon(statusIcon, { icon: statusIcon.hasClass(\"k-panelbar-expand\") ? \"chevron-down\" : \"chevron-up\" });\n                    statusIcon.removeClass(\"k-i-loading\");\n                },\n\n                success: function(data) {\n                    function getElements() {\n                        return { elements: contentElement.get() };\n                    }\n                    try {\n                        contentElement.html(data);\n                    } catch (e) {\n                        var console = window.console;\n\n                        if (console && console.error) {\n                            console.error(e.name + \": \" + e.message + \" in \" + url);\n                        }\n                        this.error(this.xhr, \"error\");\n                    }\n\n                    that._toggleGroup(contentElement, isVisible);\n\n                    that.trigger(CONTENTLOAD, { item: element[0], contentElement: contentElement[0] });\n                }\n            });\n        },\n\n        _triggerEvent: function(eventName, element) {\n            var that = this;\n\n            return that.trigger(eventName, { item: element[0] });\n        },\n\n        _updateSelected: function(link, skipChange) {\n            var that = this,\n                element = that.element,\n                item = link.parent(ITEM),\n                selected = that._selected,\n                dataItem = that.dataItem(item);\n\n            if (that.options.selectable == false) {\n                that._current(item[0] ? item : null);\n\n                return;\n            }\n\n            if (selected) {\n                selected.attr(ARIA_SELECTED, false);\n            }\n\n            that._selected = item.attr(ARIA_SELECTED, true);\n\n            element.find(selectableItems).removeClass(SELECTEDCLASS);\n\n            link.addClass(SELECTEDCLASS);\n            that._current(item[0] ? item : null);\n            if (dataItem) {\n                 dataItem.set(\"selected\", true);\n            }\n\n            if (!skipChange) {\n                that.trigger(CHANGE);\n            }\n        },\n\n        _animations: function(options) {\n            if (options && (\"animation\" in options) && !options.animation) {\n                options.animation = { expand: { effects: {} }, collapse: { hide: true, effects: {} } };\n            }\n        },\n\n        renderItem: function(options) {\n            var that = this;\n                options = extend({ panelBar: that, group: {} }, options);\n\n            var empty = that.templates.empty,\n                item = options.item;\n\n            return that.templates.item(extend(options, {\n                itemWrapper: that.templates.itemWrapper,\n                renderContent: that.renderContent,\n                arrow: that._hasChildItems(item) || item.content || item.contentUrl ? that.templates.arrow : empty,\n                subGroup: !options.loadOnDemand || item.expanded ? that.renderGroup : empty\n            }, rendering));\n        },\n\n        renderGroup: function(options) {\n            var that = this;\n            var templates = that.templates || options.panelBar.templates;\n\n            return templates.group(extend({\n                renderItems: function(options) {\n                    var html = \"\",\n                        i = 0,\n                        items = options.items,\n                        len = items ? items.length : 0,\n                        group = extend({ length: len }, options.group);\n\n                    for (; i < len; i++) {\n                        html += options.panelBar.renderItem(extend(options, {\n                            group: group,\n                            item: extend({ index: i }, items[i])\n                        }));\n                    }\n\n                    return html;\n                }\n            }, options, rendering));\n        },\n\n        renderContent: function(options) {\n            return options.panelBar.templates.content(extend(options, rendering));\n        }\n    });\n\nkendo.ui.plugin(PanelBar);\n\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.panelbar.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.popup.js":
/*!*******************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.popup.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\nvar __meta__ = {\n    id: \"popup\",\n    name: \"Pop-up\",\n    category: \"framework\",\n    depends: [ \"core\" ],\n    advanced: true\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        ui = kendo.ui,\n        Widget = ui.Widget,\n        Class = kendo.Class,\n        support = kendo.support,\n        getOffset = kendo.getOffset,\n        outerWidth = kendo._outerWidth,\n        outerHeight = kendo._outerHeight,\n        OPEN = \"open\",\n        CLOSE = \"close\",\n        DEACTIVATE = \"deactivate\",\n        ACTIVATE = \"activate\",\n        CENTER = \"center\",\n        LEFT = \"left\",\n        RIGHT = \"right\",\n        TOP = \"top\",\n        BOTTOM = \"bottom\",\n        ABSOLUTE = \"absolute\",\n        HIDDEN = \"hidden\",\n        BODY = \"body\",\n        LOCATION = \"location\",\n        POSITION = \"position\",\n        VISIBLE = \"visible\",\n        EFFECTS = \"effects\",\n        ACTIVE = \"k-active\",\n        ACTIVECHILDREN = \".k-picker-wrap, .k-dropdown-wrap, .k-link\",\n        MOUSEDOWN = \"down\",\n        DOCUMENT_ELEMENT = $(document.documentElement),\n        WINDOW = $(window),\n        SCROLL = \"scroll\",\n        TRANSFORM = \"transform\",\n        extend = $.extend,\n        NS = \".kendoPopup\",\n        styles = [\"font-size\",\n                  \"font-family\",\n                  \"font-stretch\",\n                  \"font-style\",\n                  \"font-weight\",\n                  \"line-height\"];\n\n    function contains(container, target) {\n        if (!container || !target) {\n            return false;\n        }\n        return container === target || $.contains(container, target);\n    }\n\n    var Popup = Widget.extend({\n        init: function(element, options) {\n            var that = this, parentPopup;\n\n            options = options || {};\n\n            if (options.isRtl) {\n                options.origin = options.origin || BOTTOM + \" \" + RIGHT;\n                options.position = options.position || TOP + \" \" + RIGHT;\n            }\n\n            Widget.fn.init.call(that, element, options);\n\n            element = that.element;\n            options = that.options;\n\n            that.collisions = options.collision ? options.collision.split(\" \") : [];\n            that.downEvent = kendo.applyEventMap(MOUSEDOWN, kendo.guid());\n\n            if (that.collisions.length === 1) {\n                that.collisions.push(that.collisions[0]);\n            }\n\n            parentPopup = $(that.options.anchor).closest(\".k-popup,.k-group\").filter(\":not([class^=km-])\"); // When popup is in another popup, make it relative.\n\n            options.appendTo = $($(options.appendTo)[0] || parentPopup[0] || document.body);\n\n            that.element.hide()\n                .addClass(\"k-popup\")\n                .toggleClass(\"k-rtl\", !!options.isRtl)\n                .appendTo(options.appendTo)\n                .attr(\"aria-hidden\", true)\n                .on(\"mouseenter\" + NS, function() {\n                    that._hovered = true;\n                })\n                .on(\"wheel\" + NS, function(e) {\n                    var list = $(e.target).find(\".k-list\");\n                    var scrollArea = list.parent();\n                    if (list.length && list.is(\":visible\") && ((scrollArea.scrollTop() === 0 && e.originalEvent.deltaY < 0) ||\n                        (scrollArea.scrollTop() === scrollArea.prop('scrollHeight') - scrollArea.prop('offsetHeight') && e.originalEvent.deltaY > 0))) {\n                           e.preventDefault();\n                    }\n                })\n                .on(\"mouseleave\" + NS, function() {\n                    that._hovered = false;\n                });\n\n            that.wrapper = $();\n\n            if (options.animation === false) {\n                options.animation = { open: { effects: {} }, close: { hide: true, effects: {} } };\n            }\n\n            extend(options.animation.open, {\n                complete: function() {\n                    that.wrapper.addClass(\"k-animation-container-shown\"); // Forcing refresh causes flickering in mobile.\n                    that.wrapper.css(\"overflow\",\"\");\n                    that._activated = true;\n                    that._trigger(ACTIVATE);\n                }\n            });\n\n            extend(options.animation.close, {\n                complete: function() {\n                    that._animationClose();\n                }\n            });\n\n            that._mousedownProxy = function(e) {\n                that._mousedown(e);\n            };\n\n            if (support.mobileOS.android) {\n                that._resizeProxy = function(e) {\n                    setTimeout(function() {\n                        that._resize(e);\n                    }, 600); //Logic from kendo.onResize\n                };\n            } else {\n                that._resizeProxy = function(e) {\n                    that._resize(e);\n                };\n            }\n\n            if (options.toggleTarget) {\n                $(options.toggleTarget).on(options.toggleEvent + NS, that.toggle.bind(that));\n            }\n        },\n\n        events: [\n            OPEN,\n            ACTIVATE,\n            CLOSE,\n            DEACTIVATE\n        ],\n\n        options: {\n            name: \"Popup\",\n            toggleEvent: \"click\",\n            origin: BOTTOM + \" \" + LEFT,\n            position: TOP + \" \" + LEFT,\n            anchor: BODY,\n            appendTo: null,\n            collision: \"flip fit\",\n            viewport: window,\n            copyAnchorStyles: true,\n            autosize: false,\n            autowidth: false,\n            modal: false,\n            adjustSize: {\n                width: 0,\n                height: 0\n            },\n            animation: {\n                open: {\n                    effects: \"slideIn:down\",\n                    transition: true,\n                    duration: 200\n                },\n                close: { // if close animation effects are defined, they will be used instead of open.reverse\n                    duration: 100,\n                    hide: true\n                }\n            },\n            omitOriginOffsets: false\n        },\n\n        _animationClose: function() {\n            var that = this;\n            var location = that.wrapper.data(LOCATION);\n\n            that.wrapper.hide();\n\n            if (location) {\n                that.wrapper.css(location);\n            }\n\n            if (that.options.anchor != BODY) {\n                that._hideActiveClass();\n            }\n\n            that._closing = false;\n            that._trigger(DEACTIVATE);\n        },\n\n        destroy: function() {\n            var that = this,\n                options = that.options,\n                element = that.element.off(NS),\n                parent;\n\n            Widget.fn.destroy.call(that);\n\n            if (options.toggleTarget) {\n                $(options.toggleTarget).off(NS);\n            }\n\n            if (!options.modal) {\n                DOCUMENT_ELEMENT.off(that.downEvent, that._mousedownProxy);\n                that._toggleResize(false);\n            }\n\n            kendo.destroy(that.element.children());\n            element.removeData();\n\n            if (options.appendTo[0] === document.body) {\n                parent = element.closest(\".k-animation-container\");\n\n                if (parent[0]) {\n                    parent.remove();\n                } else {\n                    element.remove();\n                }\n            }\n        },\n\n        open: function(x, y) {\n            var that = this,\n                fixed = { isFixed: !isNaN(parseInt(y,10)), x: x, y: y },\n                shouldCorrectWidth = that._shouldCorrectWidth,\n                element = that.element,\n                options = that.options,\n                animation, wrapper,\n                anchor = $(options.anchor),\n                mobile = element[0] && element.hasClass(\"km-widget\"),\n                listbox = element.find(\"[role='listbox']\"),\n                parent;\n\n            if (!that.visible()) {\n                if (options.copyAnchorStyles) {\n                    if (mobile && styles[0] == \"font-size\") {\n                        styles.shift();\n                    }\n                    element.css(kendo.getComputedStyles(anchor[0], styles));\n                }\n\n                if (that.element.parent().data(\"animating\") || that._trigger(OPEN)) {\n                    return;\n                }\n\n                that._activated = false;\n\n                if (!options.modal) {\n                    DOCUMENT_ELEMENT.off(that.downEvent, that._mousedownProxy)\n                                .on(that.downEvent, that._mousedownProxy);\n\n                    // this binding hangs iOS in editor\n                    // all elements in IE7/8 fire resize event, causing mayhem\n                    that._toggleResize(false);\n                    that._toggleResize(true);\n                }\n\n                that.wrapper = wrapper = kendo.wrap(element, options.autosize, options._resizeOnWrap, shouldCorrectWidth, options.autowidth)\n                    .css({\n                        overflow: HIDDEN,\n                        display: \"block\",\n                        position: ABSOLUTE\n                    })\n                    .attr(\"aria-hidden\", false);\n\n                parent = element.parent();\n\n                if (listbox.attr(\"aria-label\")) {\n                    wrapper.attr(\"aria-label\", listbox.attr(\"aria-label\"));\n                } else if (listbox.attr(\"aria-labelledby\")) {\n                    wrapper.attr(\"aria-labelledby\", listbox.attr(\"aria-labelledby\"));\n                }\n\n                if (support.mobileOS.android) {\n                    parent.css(TRANSFORM, \"translatez(0)\"); // Android is VERY slow otherwise. Should be tested in other droids as well since it may cause blur.\n                }\n\n                wrapper.css(POSITION);\n\n                if ($(options.appendTo)[0] == document.body) {\n                    wrapper.css(TOP, \"-10000px\");\n                }\n\n                that.flipped = that._position(fixed);\n                animation = that._openAnimation();\n\n                if (options.anchor != BODY && !that.element.hasClass(\"k-tooltip\")) {\n                    that._addActiveClass();\n                }\n\n                parent.hide();\n                element.show();\n                that.wrapper.show();\n\n                parent.data(EFFECTS, animation.effects)\n                       .kendoStop(true)\n                       .kendoAnimate(animation);\n\n\n                element.attr(\"aria-hidden\", false);\n            }\n        },\n\n        _location: function(isFixed) {\n            var that = this,\n                element = that.element,\n                options = that.options,\n                wrapper,\n                anchor = $(options.anchor),\n                mobile = element[0] && element.hasClass(\"km-widget\");\n\n            if (options.copyAnchorStyles) {\n                if (mobile && styles[0] == \"font-size\") {\n                    styles.shift();\n                }\n                element.css(kendo.getComputedStyles(anchor[0], styles));\n            }\n\n            that.wrapper = wrapper = kendo.wrap(element, options.autosize)\n                                    .css({\n                                        overflow: HIDDEN,\n                                        display: \"block\",\n                                        position: ABSOLUTE\n                                    });\n\n            if (support.mobileOS.android) {\n                wrapper.css(TRANSFORM, \"translatez(0)\"); // Android is VERY slow otherwise. Should be tested in other droids as well since it may cause blur.\n            }\n\n            wrapper.css(POSITION);\n\n            if ($(options.appendTo)[0] == document.body) {\n                wrapper.css(TOP, \"-10000px\");\n            }\n\n            that._position(isFixed || {});\n\n            var offset = wrapper.offset();\n            return {\n                width: kendo._outerWidth(wrapper),\n                height: kendo._outerHeight(wrapper),\n                left: offset.left,\n                top: offset.top\n            };\n        },\n\n        _openAnimation: function() {\n            var animation = extend(true, {}, this.options.animation.open);\n            animation.effects = kendo.parseEffects(animation.effects, this.flipped);\n\n            return animation;\n        },\n\n        _hideActiveClass: function() {\n            var anchor = $(this.options.anchor);\n            anchor\n                .children(ACTIVECHILDREN)\n                .removeClass(ACTIVE);\n\n        },\n\n        _addActiveClass: function() {\n            $(this.options.anchor)\n                .children(ACTIVECHILDREN)\n                .addClass(ACTIVE);\n        },\n\n        position: function() {\n            if (this.visible()) {\n                this.flipped = this._position();\n            }\n        },\n\n        toggle: function() {\n            var that = this;\n\n            that[that.visible() ? CLOSE : OPEN]();\n        },\n\n        visible: function() {\n            return this.wrapper.is(\":\" + VISIBLE) && this.element.is(\":\" + VISIBLE);\n        },\n\n        close: function(skipEffects) {\n            var that = this,\n                parent = that.element.parent(),\n                options = that.options, wrap,\n                animation, openEffects, closeEffects;\n\n            if (that.visible()) {\n                wrap = (that.wrapper[0] ? that.wrapper : kendo.wrap(that.element).hide());\n\n                that._toggleResize(false);\n\n                if (that._closing || that._trigger(CLOSE)) {\n                    that._toggleResize(true);\n                    return;\n                }\n\n                that.wrapper.removeClass(\"k-animation-container-shown\");\n\n                // Close all inclusive popups.\n                that.element.find(\".k-popup\").each(function() {\n                    var that = $(this),\n                        popup = that.data(\"kendoPopup\");\n\n                    if (popup) {\n                        popup.close(skipEffects);\n                    }\n                });\n\n                DOCUMENT_ELEMENT.off(that.downEvent, that._mousedownProxy);\n\n                if (skipEffects) {\n                    animation = { hide: true, effects: {} };\n                } else {\n                    animation = extend(true, {}, options.animation.close);\n                    openEffects = parent.data(EFFECTS);\n                    closeEffects = animation.effects;\n\n                    if (!closeEffects && !kendo.size(closeEffects) && openEffects && kendo.size(openEffects)) {\n                        animation.effects = openEffects;\n                        animation.reverse = true;\n                    }\n\n                    that._closing = true;\n                }\n\n                parent.kendoStop(true);\n                that.element.attr(\"aria-hidden\", true);\n                wrap\n                    .css({ overflow: HIDDEN }) // stop callback will remove hidden overflow\n                    .attr(\"aria-hidden\", true);\n                parent.kendoAnimate(animation);\n\n                if (skipEffects) {\n                    that._animationClose();\n                }\n            }\n        },\n\n        _trigger: function(ev) {\n            return this.trigger(ev, { type: ev });\n        },\n\n        _resize: function(e) {\n            var that = this;\n\n            if (support.resize.indexOf(e.type) !== -1) {\n                clearTimeout(that._resizeTimeout);\n                that._resizeTimeout = setTimeout(function() {\n                    that._position();\n                    that._resizeTimeout = null;\n                }, 50);\n            } else {\n                if (!that._hovered || (that._activated && that.element.find(\".k-list\").length > 0)) {\n                    that.close();\n                }\n            }\n        },\n\n        _toggleResize: function(toggle) {\n            var method = toggle ? \"on\" : \"off\";\n            var eventNames = support.resize;\n\n            if (!(support.mobileOS.ios || support.mobileOS.android || support.browser.safari)) {\n                eventNames += \" \" + SCROLL;\n            }\n\n            if (toggle && !this.scrollableParents) {\n                this.scrollableParents = this._scrollableParents();\n            }\n\n            if (this.scrollableParents && this.scrollableParents.length) {\n                this.scrollableParents[method](SCROLL, this._resizeProxy);\n            }\n\n            WINDOW[method](eventNames, this._resizeProxy);\n        },\n\n        _mousedown: function(e) {\n            var that = this,\n                container = that.element[0],\n                options = that.options,\n                anchor = $(options.anchor)[0],\n                toggleTarget = options.toggleTarget,\n                target = kendo.eventTarget(e),\n                popup = $(target).closest(\".k-popup\"),\n                mobile = popup.parent().parent(\".km-shim\").length;\n\n            popup = popup[0];\n            if (!mobile && popup && popup !== that.element[0]) {\n                return;\n            }\n\n            // This MAY result in popup not closing in certain cases.\n            if ($(e.target).closest(\"a\").data(\"rel\") === \"popover\") {\n                return;\n            }\n\n            if (!contains(container, target) && !contains(anchor, target) && !(toggleTarget && contains($(toggleTarget)[0], target))) {\n                that.close();\n            }\n        },\n\n        _fit: function(position, size, viewPortSize) {\n            var output = 0;\n\n            if (position + size > viewPortSize) {\n                output = viewPortSize - (position + size);\n            }\n\n            if (position < 0) {\n                output = -position;\n            }\n\n            return output;\n        },\n\n        _flip: function(offset, size, anchorSize, viewPortSize, origin, position, boxSize) {\n            var output = 0;\n                boxSize = boxSize || size;\n\n            if (position !== origin && position !== CENTER && origin !== CENTER) {\n                if (offset + boxSize > viewPortSize) {\n                    output += -(anchorSize + size);\n                }\n\n                if (offset + output < 0) {\n                    output += anchorSize + size;\n                }\n            }\n            return output;\n        },\n\n        _scrollableParents: function() {\n            return $(this.options.anchor)\n                       .parentsUntil(\"body\")\n                       .filter(function(index, element) {\n                           return kendo.isScrollable(element);\n                       });\n        },\n\n        _position: function(fixed) {\n            var that = this,\n                //element = that.element.css(POSITION, \"\"), /* fixes telerik/kendo-ui-core#790, comes from telerik/kendo#615 */\n                element = that.element,\n                wrapper = that.wrapper,\n                options = that.options,\n                viewport = $(options.viewport),\n                zoomLevel = support.zoomLevel(),\n                isWindow = !!((viewport[0] == window) && window.innerWidth && (zoomLevel <= 1.02)),\n                anchor = $(options.anchor),\n                origins = options.origin.toLowerCase().split(\" \"),\n                positions = options.position.toLowerCase().split(\" \"),\n                collisions = that.collisions,\n                siblingContainer, parents,\n                parentZIndex, zIndex = 10002,\n                idx = 0,\n                docEl = document.documentElement,\n                length, viewportOffset, viewportWidth, viewportHeight;\n\n            if (options.viewport === window) {\n                viewportOffset = {\n                    top: (window.pageYOffset || document.documentElement.scrollTop || 0),\n                    left: (window.pageXOffset || document.documentElement.scrollLeft || 0)\n                };\n            } else {\n                viewportOffset = viewport.offset();\n            }\n\n            if (isWindow) {\n                viewportWidth = window.innerWidth;\n                viewportHeight = window.innerHeight;\n            } else {\n                viewportWidth = viewport.width();\n                viewportHeight = viewport.height();\n            }\n\n            if (isWindow && docEl.scrollHeight - docEl.clientHeight > 0) {\n                 var sign = options.isRtl ? -1 : 1;\n\n                 viewportWidth -= sign * kendo.support.scrollbar();\n            }\n\n            siblingContainer = anchor.parents().filter(wrapper.siblings());\n\n            if (siblingContainer[0]) {\n                parentZIndex = Math.max(Number(siblingContainer.css(\"zIndex\")), 0);\n\n                // set z-index to be more than that of the container/sibling\n                // compensate with more units for window z-stack\n                if (parentZIndex) {\n                    zIndex = parentZIndex + 10;\n                } else {\n                    parents = anchor.parentsUntil(siblingContainer);\n                    for (length = parents.length; idx < length; idx++) {\n                        parentZIndex = Number($(parents[idx]).css(\"zIndex\"));\n                        if (parentZIndex && zIndex < parentZIndex) {\n                            zIndex = parentZIndex + 10;\n                        }\n                    }\n                }\n            }\n\n            wrapper.css(\"zIndex\", zIndex);\n\n            if (fixed && fixed.isFixed) {\n                wrapper.css({ left: fixed.x, top: fixed.y });\n            } else {\n                wrapper.css(that._align(origins, positions));\n            }\n\n            var pos = getOffset(wrapper, POSITION, anchor[0] === wrapper.offsetParent()[0]),\n                offset = getOffset(wrapper),\n                anchorParent = anchor.offsetParent().parent(\".k-animation-container,.k-popup,.k-group\"); // If the parent is positioned, get the current positions\n\n            if (anchorParent.length) {\n                pos = getOffset(wrapper, POSITION, true);\n                offset = getOffset(wrapper);\n            }\n\n            offset.top -= viewportOffset.top;\n            offset.left -= viewportOffset.left;\n\n            if (!that.wrapper.data(LOCATION)) { // Needed to reset the popup location after every closure - fixes the resize bugs.\n                wrapper.data(LOCATION, extend({}, pos));\n            }\n\n            var offsets = extend({}, offset),\n                location = extend({}, pos),\n                adjustSize = options.adjustSize;\n\n            if (collisions[0] === \"fit\") {\n                location.top += that._fit(offsets.top, outerHeight(wrapper) + adjustSize.height, viewportHeight / zoomLevel);\n            }\n\n            if (collisions[1] === \"fit\") {\n                location.left += that._fit(offsets.left, outerWidth(wrapper) + adjustSize.width, viewportWidth / zoomLevel);\n            }\n\n            var flipPos = extend({}, location);\n            var elementHeight = outerHeight(element);\n            var wrapperHeight = outerHeight(wrapper);\n\n            if (!wrapper.height() && elementHeight) {\n                wrapperHeight = wrapperHeight + elementHeight;\n            }\n\n            if (collisions[0] === \"flip\") {\n                location.top += that._flip(offsets.top, elementHeight, outerHeight(anchor), viewportHeight / zoomLevel, origins[0], positions[0], wrapperHeight);\n            }\n\n            if (collisions[1] === \"flip\") {\n                location.left += that._flip(offsets.left, outerWidth(element), outerWidth(anchor), viewportWidth / zoomLevel, origins[1], positions[1], outerWidth(wrapper));\n            }\n\n            wrapper.css(location);\n\n            return (location.left != flipPos.left || location.top != flipPos.top);\n        },\n\n        _align: function(origin, position) {\n            var that = this,\n                element = that.wrapper,\n                anchor = $(that.options.anchor),\n                verticalOrigin = origin[0],\n                horizontalOrigin = origin[1],\n                verticalPosition = position[0],\n                horizontalPosition = position[1],\n                anchorOffset = getOffset(anchor),\n                appendTo = $(that.options.appendTo),\n                appendToOffset,\n                width = outerWidth(element) || outerWidth(element.find(\".k-child-animation-container\").children().first()),\n                height = outerHeight(element) || outerHeight(element.find(\".k-child-animation-container\").children().first()),\n                anchorWidth = outerWidth(anchor),\n                anchorHeight = outerHeight(anchor),\n                top = that.options.omitOriginOffsets ? 0 : anchorOffset.top,\n                left = that.options.omitOriginOffsets ? 0 : anchorOffset.left,\n                round = Math.round;\n\n            if (appendTo[0] != document.body) {\n                appendToOffset = getOffset(appendTo);\n                top -= appendToOffset.top;\n                left -= appendToOffset.left;\n            }\n\n\n            if (verticalOrigin === BOTTOM) {\n                top += anchorHeight;\n            }\n\n            if (verticalOrigin === CENTER) {\n                top += round(anchorHeight / 2);\n            }\n\n            if (verticalPosition === BOTTOM) {\n                top -= height;\n            }\n\n            if (verticalPosition === CENTER) {\n                top -= round(height / 2);\n            }\n\n            if (horizontalOrigin === RIGHT) {\n                left += anchorWidth;\n            }\n\n            if (horizontalOrigin === CENTER) {\n                left += round(anchorWidth / 2);\n            }\n\n            if (horizontalPosition === RIGHT) {\n                left -= width;\n            }\n\n            if (horizontalPosition === CENTER) {\n                left -= round(width / 2);\n            }\n\n            return {\n                top: top,\n                left: left\n            };\n        }\n    });\n\n    ui.plugin(Popup);\n\n    var stableSort = kendo.support.stableSort;\n    var tabKeyTrapNS = \"kendoTabKeyTrap\";\n    var focusableNodesSelector = \"a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex], *[contenteditable]\";\n    var TabKeyTrap = Class.extend({\n        init: function(element, options) {\n            this.element = $(element);\n            this.element.autoApplyNS(tabKeyTrapNS);\n        },\n\n        trap: function() {\n            this.element.on(\"keydown\", this._keepInTrap.bind(this));\n        },\n\n        removeTrap: function() {\n            this.element.kendoDestroy(tabKeyTrapNS);\n        },\n\n        destroy: function() {\n            this.element.kendoDestroy(tabKeyTrapNS);\n            this.element = undefined$1;\n        },\n\n        shouldTrap: function() {\n            return true;\n        },\n\n        _keepInTrap: function(e) {\n            if (e.which !== 9 || !this.shouldTrap() || e.isDefaultPrevented()) {\n                return;\n            }\n\n            var elements = this._focusableElements();\n            var sortedElements = this._sortFocusableElements(elements);\n            var next = this._nextFocusable(e, sortedElements);\n\n            if (next) {\n                this._focus(next);\n            }\n\n            e.preventDefault();\n        },\n        _focusableElements: function() {\n            var elements = this.element.find(focusableNodesSelector).filter(function(i, item) {\n                return item.tabIndex >= 0 && $(item).is(':visible') && !$(item).is('[disabled]');\n            });\n\n            if (this.element.is(\"[tabindex]\")) {\n                [].push.call(elements, this.element[0]);\n            }\n\n            return elements;\n        },\n        _sortFocusableElements: function(elements) {\n            var sortedElements;\n\n            if (stableSort) {\n                sortedElements = [].sort.call(elements, function(prev, next) {\n                    return prev.tabIndex - next.tabIndex;\n                });\n            } else {\n                var attrName = \"__k_index\";\n                elements.each(function(i, item) {\n                    item.setAttribute(attrName, i);\n                });\n\n                sortedElements = [].sort.call(elements, function(prev, next) {\n                    return prev.tabIndex === next.tabIndex ?\n                        parseInt(prev.getAttribute(attrName), 10) - parseInt(next.getAttribute(attrName), 10) :\n                        prev.tabIndex - next.tabIndex;\n                });\n\n                elements.removeAttr(attrName);\n            }\n\n            return sortedElements;\n        },\n        _nextFocusable: function(e, elements) {\n            var count = elements.length;\n            var current = elements.index(e.target);\n\n            return elements.get((current + (e.shiftKey ? -1 : 1)) % count);\n        },\n        _focus: function(element) {\n            if (element.nodeName == \"IFRAME\") {\n                element.contentWindow.document.body.focus();\n                return;\n            }\n\n            element.focus();\n\n            if (element.nodeName == \"INPUT\" && element.setSelectionRange && this._haveSelectionRange(element)) {\n                element.setSelectionRange(0, element.value.length);\n            }\n        },\n        _haveSelectionRange: function(element) {\n            var elementType = element.type.toLowerCase();\n\n            return elementType === \"text\" || elementType === \"search\" ||\n            elementType === \"url\" || elementType === \"tel\" ||\n            elementType === \"password\";\n        }\n    });\n    ui.Popup.TabKeyTrap = TabKeyTrap;\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.popup.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.progressbar.js":
/*!*************************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.progressbar.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\nvar __meta__ = {\n    id: \"progressbar\",\n    name: \"ProgressBar\",\n    category: \"web\",\n    description: \"The ProgressBar offers rich functionality for displaying and tracking progress\",\n    depends: [ \"core\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        ui = kendo.ui,\n        Widget = ui.Widget,\n        HORIZONTAL = \"horizontal\",\n        VERTICAL = \"vertical\",\n        DEFAULTMIN = 0,\n        DEFAULTMAX = 100,\n        DEFAULTVALUE = 0,\n        DEFAULTCHUNKCOUNT = 5,\n        KPROGRESSBAR = \"k-progressbar\",\n        KPROGRESSBARREVERSE = \"k-progressbar-reverse\",\n        KPROGRESSBARINDETERMINATE = \"k-progressbar-indeterminate\",\n        KPROGRESSBARCOMPLETE = \"k-complete\",\n        KPROGRESSWRAPPER = \"k-selected\",\n        KPROGRESSSTATUS = \"k-progress-status\",\n        LABEL_POSITION_END = \"k-progress-end\",\n        KCOMPLETEDCHUNK = \"k-selected\",\n        STATEDISABLED = \"k-disabled\",\n        PROGRESS_VALUE = \"k-progressbar-value\",\n        CHUNK_ITEM = \"k-progressbar-chunk\",\n        PROGRESSTYPE = {\n            VALUE: \"value\",\n            PERCENT: \"percent\",\n            CHUNK: \"chunk\"\n        },\n        CHANGE = \"change\",\n        COMPLETE = \"complete\",\n        BOOLEAN = \"boolean\",\n        math = Math,\n        extend = $.extend,\n        HUNDREDPERCENT = 100,\n        DEFAULTANIMATIONDURATION = 400,\n        PRECISION = 3,\n        templates = {\n            progressStatus: \"<span class='k-progress-status-wrap \" + LABEL_POSITION_END + \"'><span class='k-progress-status'></span></span>\",\n            noProgressStatus: \"<span class='k-progress-status-wrap \" + LABEL_POSITION_END + \"'></span>\",\n            announceElement: '<span aria-live=\"polite\" class=\"k-sr-only k-progress-announce\"></span>'\n        };\n\n    var ProgressBar = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(this, element, options);\n\n            options = that.options;\n\n            that._progressProperty = (options.orientation === HORIZONTAL) ? \"width\" : \"height\";\n\n            that._fields();\n\n            options.value = that._validateValue(options.value);\n\n            that._validateType(options.type);\n\n            that._wrapper();\n\n            if (options.ariaRole) {\n                that._aria();\n            }\n\n            that._progressAnimation();\n\n            if ((options.value !== options.min) && (options.value !== false)) {\n               that._updateProgress();\n            }\n        },\n\n        setOptions: function(options) {\n            var that = this,\n                wrapper = that.wrapper;\n\n            Widget.fn.setOptions.call(that, options);\n\n            if (options.hasOwnProperty(\"reverse\")) {\n                wrapper.toggleClass(\"k-progressbar-reverse\", options.reverse);\n            }\n\n            if (options.hasOwnProperty(\"enable\")) {\n                that.enable(options.enable);\n            }\n\n            if (options.ariaRole) {\n                that._aria();\n            }\n\n            that._progressAnimation();\n\n            that._validateValue();\n\n            that._updateProgress();\n        },\n\n        events: [\n            CHANGE,\n            COMPLETE\n        ],\n\n        options: {\n            name: \"ProgressBar\",\n            orientation: HORIZONTAL,\n            reverse: false,\n            min: DEFAULTMIN,\n            max: DEFAULTMAX,\n            value: DEFAULTVALUE,\n            enable: true,\n            type: PROGRESSTYPE.VALUE,\n            chunkCount: DEFAULTCHUNKCOUNT,\n            showStatus: true,\n            animation: { },\n            label: null,\n            labelId: null,\n            ariaRole: false\n        },\n\n        _aria: function() {\n            var that = this,\n                options = that.options,\n                wrapper = that.wrapper;\n\n            wrapper.attr({\n                \"role\": \"progressbar\",\n                \"aria-valuemin\": options.min,\n                \"aria-valuemax\": options.max\n            });\n\n            if (!!options.labelId) {\n                wrapper.attr(\"aria-labelledby\", options.labelId);\n            } else if (!!options.label) {\n                wrapper.attr(\"aria-label\", options.label);\n            }\n\n            that.announce = $(templates.announceElement);\n            that.announce.appendTo($(\"body\"));\n\n            if (options.value !== false) {\n                wrapper.attr(\"aria-valuenow\", options.value);\n\n                that.announce.text(that._calculatePercentage().toFixed() + \"%\");\n            }\n        },\n\n        _fields: function() {\n            var that = this;\n\n            that._isStarted = false;\n\n            that.progressWrapper = that.progressStatus = $();\n        },\n\n        _validateType: function(currentType) {\n            var isValid = false;\n\n            $.each(PROGRESSTYPE, function(k, type) {\n                if (type === currentType) {\n                    isValid = true;\n                    return false;\n                }\n            });\n\n            if (!isValid) {\n                throw new Error(kendo.format(\"Invalid ProgressBar type '{0}'\", currentType));\n            }\n        },\n\n        _wrapper: function() {\n            var that = this;\n            var container = that.wrapper = that.element;\n            var options = that.options;\n            var orientation = options.orientation;\n            var initialValue = (options.value !== false) ? options.value : options.min;\n\n            container.addClass(KPROGRESSBAR);\n\n            container.addClass(KPROGRESSBAR + \"-\" + ((orientation === HORIZONTAL) ? HORIZONTAL : VERTICAL));\n\n            if (options.enable === false) {\n                container.addClass(STATEDISABLED);\n            }\n\n            if (options.reverse) {\n                container.addClass(KPROGRESSBARREVERSE);\n            }\n\n            if (options.value === false) {\n                container.addClass(KPROGRESSBARINDETERMINATE);\n            }\n\n            if (options.type === PROGRESSTYPE.CHUNK) {\n                that._addChunkProgressWrapper();\n            } else {\n                if (options.showStatus) {\n                    that.progressStatus = that.wrapper.prepend(templates.progressStatus)\n                                              .find(\".\" + KPROGRESSSTATUS);\n\n                    if (options.type === PROGRESSTYPE.VALUE) {\n                        that.progressStatus.text(initialValue);\n                    } else {\n                        that.progressStatus.text(that._calculatePercentage(initialValue).toFixed() + \"%\");\n                    }\n                } else {\n                    that.wrapper.prepend(templates.noProgressStatus);\n                }\n            }\n        },\n\n        value: function(value) {\n            return this._value(value);\n        },\n\n        _value: function(value) {\n            var that = this;\n            var options = that.options;\n            var validated;\n\n            if (value === undefined$1) {\n                return options.value;\n            } else {\n                if (typeof value !== BOOLEAN) {\n                    value = that._roundValue(value);\n\n                    if (!isNaN(value)) {\n                        validated = that._validateValue(value);\n\n                        if (validated !== options.value) {\n                            that.wrapper.removeClass(KPROGRESSBARINDETERMINATE);\n\n                            options.value = validated;\n\n                            that._isStarted = true;\n\n                            that._updateProgress();\n                        }\n                    }\n                } else if (!value) {\n                    that.wrapper.addClass(KPROGRESSBARINDETERMINATE);\n                    that.wrapper.removeAttr(\"aria-valuenow\");\n                    options.value = false;\n\n                    if (that.announce) {\n                        that.announce.text(\"\");\n                    }\n                }\n            }\n        },\n\n        _roundValue: function(value) {\n             value = parseFloat(value);\n\n             var power = math.pow(10, PRECISION);\n\n             return kendo._round(value * power) / power;\n        },\n\n        _validateValue: function(value) {\n            var that = this;\n            var options = that.options;\n\n            if (value !== false) {\n                if (value <= options.min || value === true) {\n                    return options.min;\n                } else if (value >= options.max) {\n                    return options.max;\n                }\n            } else if (value === false) {\n                return false;\n            }\n\n            if (isNaN(that._roundValue(value))) {\n                return options.min;\n            }\n\n            return value;\n        },\n\n        _updateProgress: function() {\n            var that = this;\n            var options = that.options;\n            var percentage = that._calculatePercentage();\n\n            if (options.type === PROGRESSTYPE.CHUNK) {\n                that._updateChunks(percentage);\n                that._onProgressUpdateAlways(options.value);\n            } else {\n                that._updateProgressWrapper(percentage);\n            }\n\n            if (options.ariaRole) {\n                that.wrapper.attr(\"aria-valuenow\", that.options.value);\n\n                if (that.announce) {\n                    that.announce.text(percentage.toFixed() + \"%\");\n                }\n            }\n        },\n\n        _updateChunks: function(percentage) {\n            var that = this;\n            var options = that.options;\n            var chunkCount = options.chunkCount;\n            var percentagesPerChunk = parseInt((HUNDREDPERCENT / chunkCount) * 100, 10) / 100;\n            var percentageParsed = parseInt(percentage * 100, 10) / 100;\n            var completedChunksCount = math.floor(percentageParsed / percentagesPerChunk);\n            var completedChunks;\n\n            if ((options.orientation === HORIZONTAL && !(options.reverse)) ||\n               (options.orientation === VERTICAL && options.reverse)) {\n                completedChunks = that.wrapper.find(\"li.\" + CHUNK_ITEM).slice(0, completedChunksCount);\n            } else if (completedChunksCount === 0) {\n                completedChunks = kendo.jQuery();\n            } else {\n                completedChunks = that.wrapper.find(\"li.\" + CHUNK_ITEM).slice(completedChunksCount * -1);\n            }\n\n            that.wrapper.find(\".\" + KCOMPLETEDCHUNK)\n                        .removeClass(KCOMPLETEDCHUNK + \" \" + PROGRESS_VALUE);\n\n            completedChunks.addClass(KCOMPLETEDCHUNK + \" \" + PROGRESS_VALUE);\n        },\n\n        _updateProgressWrapper: function(percentage) {\n            var that = this;\n            var options = that.options;\n            var progressWrapper = that.wrapper.find(\".\" + KPROGRESSWRAPPER);\n            var animationDuration = that._isStarted ? that._animation.duration : 0;\n            var animationCssOptions = { };\n\n            if (progressWrapper.length === 0) {\n                that._addRegularProgressWrapper();\n            }\n\n            animationCssOptions[that._progressProperty] = percentage + \"%\";\n            that.progressWrapper.animate(animationCssOptions, {\n                duration: animationDuration,\n                start: that._onProgressAnimateStart.bind(that),\n                progress: that._onProgressAnimate.bind(that),\n                complete: that._onProgressAnimateComplete.bind(that, options.value),\n                always: that._onProgressUpdateAlways.bind(that, options.value)\n            });\n        },\n\n        _onProgressAnimateStart: function() {\n            this.progressWrapper.show();\n        },\n\n        _onProgressAnimate: function(e) {\n            var that = this;\n            var options = that.options;\n            var progressInPercent = parseFloat(e.elem.style[that._progressProperty], 10);\n            var progressStatusWrapSize;\n\n            if (options.showStatus) {\n                progressStatusWrapSize = 10000 / parseFloat(that.progressWrapper[0].style[that._progressProperty]);\n\n                that.progressWrapper.find(\".k-progress-status-wrap\").css(that._progressProperty, progressStatusWrapSize + \"%\");\n            }\n\n            if (options.type !== PROGRESSTYPE.CHUNK && progressInPercent <= 98) {\n                that.progressWrapper.removeClass(KPROGRESSBARCOMPLETE);\n            }\n        },\n\n        _onProgressAnimateComplete: function(currentValue) {\n            var that = this;\n            var options = that.options;\n            var progressWrapperSize = parseFloat(that.progressWrapper[0].style[that._progressProperty]);\n            var progressValue;\n\n            if (options.type !== PROGRESSTYPE.CHUNK && progressWrapperSize > 98) {\n                that.progressWrapper.addClass(KPROGRESSBARCOMPLETE);\n            }\n\n            if (options.showStatus) {\n                if (options.type === PROGRESSTYPE.VALUE) {\n                    progressValue = currentValue;\n                } else if (options.type == PROGRESSTYPE.PERCENT) {\n                    progressValue = that._calculatePercentage(currentValue).toFixed() + \"%\";\n                } else {\n                    progressValue = math.floor(that._calculatePercentage(currentValue)) + \"%\";\n                }\n                that.progressStatus.text(progressValue);\n            }\n\n            if (currentValue === options.min) {\n                that.progressWrapper.hide();\n            }\n        },\n\n        _onProgressUpdateAlways: function(currentValue) {\n            var that = this;\n            var options = that.options;\n\n            if (that._isStarted) {\n                that.trigger(CHANGE, { value: currentValue });\n            }\n\n            if (currentValue === options.max && that._isStarted) {\n                that.trigger(COMPLETE, { value: options.max });\n            }\n        },\n\n        enable: function(enable) {\n            var that = this;\n            var options = that.options;\n\n            options.enable = typeof(enable) === \"undefined\" ? true : enable;\n            that.wrapper.toggleClass(STATEDISABLED, !options.enable);\n        },\n\n        destroy: function() {\n            var that = this;\n\n            if (that.announce) {\n                that.announce.remove();\n            }\n\n            Widget.fn.destroy.call(that);\n        },\n\n        _addChunkProgressWrapper: function() {\n            var that = this;\n            var options = that.options;\n            var container = that.wrapper;\n            var chunkSize = HUNDREDPERCENT / options.chunkCount;\n            var html = \"\";\n\n            if (options.chunkCount <= 1) {\n                options.chunkCount = 1;\n            }\n\n            that.element.addClass(\"k-chunk-progressbar\");\n            html += \"<ul class='k-reset k-progressbar-chunks'>\";\n            for (var i = options.chunkCount - 1; i >= 0; i--) {\n                html += \"<li class='\" + CHUNK_ITEM + \"'></li>\";\n            }\n            html += \"</ul>\";\n\n            container.append(html).find(\".\" + CHUNK_ITEM).css(that._progressProperty, chunkSize + \"%\")\n                     .first().addClass(\"k-first\")\n                     .end()\n                     .last().addClass(\"k-last\");\n\n            that._normalizeChunkSize();\n        },\n\n        _normalizeChunkSize: function() {\n            var that = this;\n            var options = that.options;\n            var lastChunk = that.wrapper.find(\".\" + CHUNK_ITEM).last();\n            var currentSize = parseFloat(lastChunk[0].style[that._progressProperty]);\n            var difference = HUNDREDPERCENT - (options.chunkCount * currentSize);\n\n            if (difference > 0) {\n                lastChunk.css(that._progressProperty, (currentSize + difference) + \"%\");\n            }\n        },\n\n        _addRegularProgressWrapper: function() {\n            var that = this;\n\n            that.progressWrapper = $(\"<div class='\" + KPROGRESSWRAPPER + \" \" + PROGRESS_VALUE + \"'></div>\").appendTo(that.wrapper);\n\n            if (that.options.showStatus) {\n                that.progressWrapper.append(templates.progressStatus);\n\n                that.progressStatus = that.wrapper.find(\".\" + KPROGRESSSTATUS);\n            } else {\n                that.progressWrapper.prepend(templates.noProgressStatus);\n            }\n        },\n\n        _calculateChunkSize: function() {\n            var that = this;\n            var chunkCount = that.options.chunkCount;\n            var chunkContainer = that.wrapper.find(\"ul.k-reset\");\n\n            return (parseInt(chunkContainer.css(that._progressProperty), 10) - (chunkCount - 1)) / chunkCount;\n        },\n\n        _calculatePercentage: function(currentValue) {\n            var that = this;\n            var options = that.options;\n            var value = (currentValue !== undefined$1) ? currentValue : options.value;\n            var min = options.min;\n            var max = options.max;\n            that._onePercent = math.abs((max - min) / 100);\n\n            return math.abs((value - min) / that._onePercent);\n        },\n\n        _progressAnimation: function() {\n            var that = this;\n            var options = that.options;\n            var animation = options.animation;\n\n            if (animation === false) {\n                that._animation = { duration: 0 };\n            } else {\n                that._animation = extend({\n                    duration: DEFAULTANIMATIONDURATION\n                }, options.animation);\n            }\n        }\n    });\n\n    kendo.ui.plugin(ProgressBar);\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.progressbar.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.resizable.js":
/*!***********************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.resizable.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* harmony import */ var _kendo_draganddrop_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.draganddrop.js */ \"./node_modules/kendo-ui-core/esm/kendo.draganddrop.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\nvar __meta__ = {\n    id: \"resizable\",\n    name: \"Resizable\",\n    category: \"framework\",\n    depends: [ \"core\", \"draganddrop\" ],\n    advanced: true\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        ui = kendo.ui,\n        Widget = ui.Widget,\n        isFunction = kendo.isFunction,\n        extend = $.extend,\n        HORIZONTAL = \"horizontal\",\n        VERTICAL = \"vertical\",\n        START = \"start\",\n        RESIZE = \"resize\",\n        RESIZEEND = \"resizeend\";\n\n    var Resizable = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that.orientation = that.options.orientation.toLowerCase() != VERTICAL ? HORIZONTAL : VERTICAL;\n            that._positionMouse = that.orientation == HORIZONTAL ? \"x\" : \"y\";\n            that._position = that.orientation == HORIZONTAL ? \"left\" : \"top\";\n            that._sizingDom = that.orientation == HORIZONTAL ? \"outerWidth\" : \"outerHeight\";\n\n            that.draggable = new ui.Draggable(options.draggableElement || element, {\n                distance: 1,\n                filter: options.handle,\n                drag: that._resize.bind(that),\n                dragcancel: that._cancel.bind(that),\n                dragstart: that._start.bind(that),\n                dragend: that._dragend.bind(that),\n                clickMoveClick: options.clickMoveClick\n            });\n\n            that.userEvents = that.draggable.userEvents;\n        },\n\n        events: [\n            RESIZE,\n            RESIZEEND,\n            START\n        ],\n\n        options: {\n            name: \"Resizable\",\n            orientation: HORIZONTAL,\n            clickMoveClick: false\n        },\n\n        resize: function() {\n            // Overrides base widget resize\n        },\n\n        _max: function(e) {\n            var that = this,\n                hintSize = that.hint ? that.hint[that._sizingDom]() : 0,\n                size = that.options.max;\n\n            return isFunction(size) ? size(e) : size !== undefined$1 ? (that._initialElementPosition + size) - hintSize : size;\n        },\n\n        _min: function(e) {\n            var that = this,\n                size = that.options.min;\n\n            return isFunction(size) ? size(e) : size !== undefined$1 ? that._initialElementPosition + size : size;\n        },\n\n        _start: function(e) {\n            var that = this,\n                hint = that.options.hint,\n                el = $(e.currentTarget);\n\n            that._initialElementPosition = el.position()[that._position];\n            that._initialMousePosition = e[that._positionMouse].startLocation;\n\n            if (hint) {\n                that.hint = isFunction(hint) ? $(hint(el)) : hint;\n\n                that.hint.css({\n                    position: \"absolute\"\n                })\n                .css(that._position, that._initialElementPosition)\n                .appendTo(that.element);\n            }\n\n            that.trigger(START, e);\n\n            that._maxPosition = that._max(e);\n            that._minPosition = that._min(e);\n\n            $(document.body).css(\"cursor\", el.css(\"cursor\"));\n        },\n\n        _resize: function(e) {\n            var that = this,\n                maxPosition = that._maxPosition,\n                minPosition = that._minPosition,\n                currentPosition = that._initialElementPosition + (e[that._positionMouse].location - that._initialMousePosition),\n                position;\n\n            position = minPosition !== undefined$1 ? Math.max(minPosition, currentPosition) : currentPosition;\n            that.position = position = maxPosition !== undefined$1 ? Math.min(maxPosition, position) : position;\n\n            if (that.hint) {\n                that.hint.toggleClass(that.options.invalidClass || \"\", position == maxPosition || position == minPosition)\n                         .css(that._position, position);\n            }\n\n            that.resizing = true;\n            that.trigger(RESIZE, extend(e, { position: position }));\n        },\n\n        _dragend: function(e) {\n            this._stop();\n            this.trigger(RESIZEEND, extend(e, { position: this.position }));\n        },\n\n        _stop: function() {\n            var that = this;\n\n            if (that.hint) {\n                that.hint.remove();\n            }\n\n            that.resizing = false;\n            $(document.body).css(\"cursor\", \"\");\n        },\n\n        _cancel: function(e) {\n            var that = this;\n\n            if (that.hint) {\n                that.position = undefined$1;\n                that.hint.css(that._position, that._initialElementPosition);\n                that._stop();\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n\n            Widget.fn.destroy.call(that);\n\n            if (that.draggable) {\n                that.draggable.destroy();\n            }\n        },\n\n        press: function(target) {\n            if (!target) {\n                return;\n            }\n\n            var position = target.position(),\n                that = this;\n\n            that.userEvents.press(position.left, position.top, target[0]);\n            that.targetPosition = position;\n            that.target = target;\n        },\n\n        move: function(delta) {\n            var that = this,\n                orientation = that._position,\n                position = that.targetPosition,\n                current = that.position;\n\n            if (current === undefined$1) {\n                current = position[orientation];\n            }\n\n            position[orientation] = current + delta;\n\n            that.userEvents.move(position.left, position.top);\n        },\n\n        end: function() {\n            this.userEvents.end();\n            this.target = this.position = undefined$1;\n        }\n    });\n\n    kendo.ui.plugin(Resizable);\n\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.resizable.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.responsivepanel.js":
/*!*****************************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.responsivepanel.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\nvar __meta__ = {\n    id: \"responsive-panel\",\n    name: \"Responsive Panel\",\n    category: \"web\",\n    description: \"The Responsive Panel widget allows a panel of content to be hidden on mobile devices, available through a toggle button.\",\n    depends: [ \"core\" ]\n};\n\n(function($, undefined$1) {\n    var NS = \".kendoResponsivePanel\";\n    var OPEN = \"open\";\n    var CLOSE = \"close\";\n    var ACTIVATE_EVENTS = \"click\" + NS + \" touchstart\" + NS + \" touchend\" + NS;\n    var Widget = kendo.ui.Widget;\n    var ResponsivePanel = Widget.extend({\n        init: function(element, options) {\n            Widget.fn.init.call(this, element, options);\n\n            this._guid = \"_\" + kendo.guid();\n\n            this._toggleHandler = this._toggleButtonClick.bind(this);\n            this._closeHandler = this._close.bind(this);\n\n            $(document.documentElement).on(ACTIVATE_EVENTS, this.options.toggleButton, this._toggleHandler);\n\n            this._registerBreakpoint();\n\n            if (this.options.content) {\n                kendo.destroy(this.element.children());\n                this.element.html(this.options.content);\n            }\n\n            this.element\n                .addClass(\"k-rpanel k-rpanel-\" + this.options.orientation + \" \" + this._guid);\n\n            this._resizeHandler = this.resize.bind(this, true);\n            $(window).on(\"resize\" + NS, this._resizeHandler);\n        },\n        _mediaQuery: ({ breakpoint, guid, toggleButton }) =>\n            `@media (max-width: ${breakpoint - 1}px) {` +\n                `.${guid}.k-rpanel-animate.k-rpanel-left,` +\n                `.${guid}.k-rpanel-animate.k-rpanel-right {` +\n                    \"-webkit-transition: -webkit-transform .2s ease-out;\" +\n                    \"-ms-transition: -ms-transform .2s ease-out;\" +\n                    \"transition: transform .2s ease-out;\" +\n                \"} \" +\n                `.${guid}.k-rpanel-top {` +\n                    \"overflow: hidden;\" +\n                \"}\" +\n                `.${guid}.k-rpanel-animate.k-rpanel-top {` +\n                    \"-webkit-transition: max-height .2s linear;\" +\n                    \"-ms-transition: max-height .2s linear;\" +\n                    \"transition: max-height .2s linear;\" +\n                \"}\" +\n            \"} \" +\n            `@media (min-width: ${breakpoint}px) {` +\n                `${toggleButton} { display: none; } ` +\n                `.${guid}.k-rpanel-left { float: left; } ` +\n                `.${guid}.k-rpanel-right { float: right; } ` +\n                `.${guid}.k-rpanel-left, .${guid}.k-rpanel-right {` +\n                    \"position: relative;\" +\n                    \"-webkit-transform: translateX(0);\" +\n                    \"-ms-transform: translateX(0);\" +\n                    \"transform: translateX(0);\" +\n                    \"-webkit-transform: translateX(0) translateZ(0);\" +\n                    \"-ms-transform: translateX(0) translateZ(0);\" +\n                    \"transform: translateX(0) translateZ(0);\" +\n                \"} \" +\n                `.k-ie9 .${guid}.k-rpanel-left { left: 0; } ` +\n                `.${guid}.k-rpanel-top { max-height: none; }` +\n            \"}\",\n        _registerBreakpoint: function() {\n            var options = this.options;\n\n            this._registerStyle(this._mediaQuery({\n                breakpoint: options.breakpoint,\n                toggleButton: options.toggleButton,\n                guid: this._guid\n            }));\n        },\n        _registerStyle: function(cssText) {\n            var head = $(\"head,body\")[0];\n            var style = document.createElement('style');\n\n            var nonce = this.options.nonce;\n            if (nonce) {\n                style.setAttribute(\"nonce\", nonce);\n            }\n\n            head.appendChild(style);\n\n            if (style.styleSheet) {\n                style.styleSheet.cssText = cssText;\n            } else {\n                style.appendChild(document.createTextNode(cssText));\n            }\n        },\n        options: {\n            name: \"ResponsivePanel\",\n            content: \"\",\n            nonce: \"\",\n            orientation: \"left\",\n            toggleButton: \".k-rpanel-toggle\",\n            breakpoint: 640,\n            autoClose: true\n        },\n        events: [\n            OPEN,\n            CLOSE\n        ],\n        _resize: function() {\n            this.element.removeClass(\"k-rpanel-animate k-rpanel-expanded\");\n\n            $(document.documentElement).off(ACTIVATE_EVENTS, this._closeHandler);\n        },\n        _toggleButtonClick: function(e) {\n            e.preventDefault();\n\n            if (e.type == \"touchend\") {\n                return;\n            }\n\n            if (this.element.hasClass(\"k-rpanel-expanded\")) {\n                this.close();\n            } else {\n                this.open();\n            }\n        },\n        open: function() {\n            if (!this.trigger(OPEN)) {\n                this.element.addClass(\"k-rpanel-animate k-rpanel-expanded\");\n\n                if (this.options.autoClose) {\n                    $(document.documentElement).on(ACTIVATE_EVENTS, this._closeHandler);\n                }\n            }\n        },\n        close: function() {\n            if (!this.trigger(CLOSE)) {\n                this.element.addClass(\"k-rpanel-animate\").removeClass(\"k-rpanel-expanded\");\n\n                $(document.documentElement).off(ACTIVATE_EVENTS, this._closeHandler);\n            }\n        },\n        _close: function(e) {\n            var prevented = e.isDefaultPrevented();\n            var container = $(e.target).closest(this.options.toggleButton + \",.k-rpanel\");\n\n            if (!container.length && !prevented) {\n                this.close();\n            }\n        },\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            $(window).off(\"resize\" + NS, this._resizeHandler);\n            $(document.documentElement).off(ACTIVATE_EVENTS, this._closeHandler);\n        }\n    });\n\n    kendo.ui.plugin(ResponsivePanel);\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.responsivepanel.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.router.js":
/*!********************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.router.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\nvar __meta__ = {\n    id: \"router\",\n    name: \"Router\",\n    category: \"framework\",\n    description: \"The Router class is responsible for tracking the application state and navigating between the application states.\",\n    depends: [ \"core\" ],\n    hidden: false\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        CHANGE = \"change\",\n        BACK = \"back\",\n        SAME = \"same\",\n        support = kendo.support,\n        location = window.location,\n        history = window.history,\n        CHECK_URL_INTERVAL = 50,\n        BROKEN_BACK_NAV = kendo.support.browser.msie,\n        hashStrip = /^#*/,\n        document = window.document;\n\n    function absoluteURL(path, pathPrefix) {\n        if (!pathPrefix) {\n            return path;\n        }\n\n        if (path + \"/\" === pathPrefix) {\n            path = pathPrefix;\n        }\n\n        var regEx = new RegExp(\"^\" + pathPrefix, \"i\");\n\n        if (!regEx.test(path)) {\n            path = pathPrefix + \"/\" + path;\n        }\n\n        return location.protocol + '//' + (location.host + \"/\" + path).replace(/\\/\\/+/g, '/');\n    }\n\n    function hashDelimiter(bang) {\n        return bang ? \"#!\" : \"#\";\n    }\n\n    function locationHash(hashDelimiter) {\n        var href = location.href;\n\n        // ignore normal anchors if in hashbang mode - however, still return \"\" if no hash present\n        if (hashDelimiter === \"#!\" && href.indexOf(\"#\") > -1 && href.indexOf(\"#!\") < 0) {\n            return null;\n        }\n\n        return href.split(hashDelimiter)[1] || \"\";\n    }\n\n    function stripRoot(root, url) {\n        if (url.indexOf(root) === 0) {\n            return (url.substr(root.length)).replace(/\\/\\//g, '/');\n        } else {\n            return url;\n        }\n    }\n\n    var HistoryAdapter = kendo.Class.extend({\n        back: function() {\n            if (BROKEN_BACK_NAV) {\n                setTimeout(function() { history.back(); });\n            } else {\n                history.back();\n            }\n        },\n\n        forward: function() {\n            if (BROKEN_BACK_NAV) {\n                setTimeout(function() { history.forward(); });\n            } else {\n                history.forward();\n            }\n        },\n\n        length: function() {\n            return history.length;\n        },\n\n        replaceLocation: function(url) {\n            location.replace(url);\n        }\n    });\n\n    var PushStateAdapter = HistoryAdapter.extend({\n        init: function(root) {\n            this.root = root;\n        },\n\n        navigate: function(to) {\n            history.pushState({}, document.title, absoluteURL(to, this.root));\n        },\n\n        replace: function(to) {\n            history.replaceState({}, document.title, absoluteURL(to, this.root));\n        },\n\n        normalize: function(url) {\n            return stripRoot(this.root, url);\n        },\n\n        current: function() {\n            var current = location.pathname;\n\n            if (location.search) {\n                current += location.search;\n            }\n\n            return stripRoot(this.root, current);\n        },\n\n        change: function(callback) {\n            $(window).bind(\"popstate.kendo\", callback);\n        },\n\n        stop: function() {\n            $(window).unbind(\"popstate.kendo\");\n        },\n\n        normalizeCurrent: function(options) {\n            var fixedUrl,\n                root = options.root,\n                pathname = location.pathname,\n                hash = locationHash(hashDelimiter(options.hashBang));\n\n            if (root === pathname + \"/\") {\n                fixedUrl = root;\n            }\n\n            if (root === pathname && hash) {\n                fixedUrl = absoluteURL(hash.replace(hashStrip, ''), root);\n            }\n\n            if (fixedUrl) {\n                history.pushState({}, document.title, fixedUrl);\n            }\n        }\n    });\n\n    function fixHash(url) {\n        return url.replace(/^(#)?/, \"#\");\n    }\n\n    function fixBang(url) {\n        return url.replace(/^(#(!)?)?/, \"#!\");\n    }\n\n    var HashAdapter = HistoryAdapter.extend({\n        init: function(bang) {\n            this._id = kendo.guid();\n            this.prefix = hashDelimiter(bang);\n            this.fix = bang ? fixBang : fixHash;\n        },\n\n        navigate: function(to) {\n            location.hash = this.fix(to);\n        },\n\n        replace: function(to) {\n            this.replaceLocation(this.fix(to));\n        },\n\n        normalize: function(url) {\n            if (url.indexOf(this.prefix) < 0) {\n               return url;\n            } else {\n                return url.split(this.prefix)[1];\n            }\n        },\n\n        change: function(callback) {\n            if (support.hashChange) {\n                $(window).on(\"hashchange.\" + this._id, callback);\n            } else {\n                this._interval = setInterval(callback, CHECK_URL_INTERVAL);\n            }\n        },\n\n        stop: function() {\n            $(window).off(\"hashchange.\" + this._id);\n            clearInterval(this._interval);\n        },\n\n        current: function() {\n            return locationHash(this.prefix);\n        },\n\n        normalizeCurrent: function(options) {\n            var pathname = location.pathname,\n                root = options.root;\n\n            if (options.pushState && root !== pathname) {\n                this.replaceLocation(root + this.prefix + stripRoot(root, pathname));\n                return true; // browser will reload at this point.\n            }\n\n            return false;\n        }\n    });\n\n    var History = kendo.Observable.extend({\n        start: function(options) {\n            options = options || {};\n\n            this.bind([CHANGE, BACK, SAME], options);\n\n            if (this._started) {\n                return;\n            }\n\n            this._started = true;\n\n            options.root = options.root || \"/\";\n\n            var adapter = this.createAdapter(options),\n                current;\n\n            // adapter may reload the document\n            if (adapter.normalizeCurrent(options)) {\n                return;\n            }\n\n            current = adapter.current();\n\n            $.extend(this, {\n                adapter: adapter,\n                root: options.root,\n                historyLength: adapter.length(),\n                current: current,\n                locations: [current]\n            });\n\n            adapter.change(this._checkUrl.bind(this));\n        },\n\n        createAdapter: function(options) {\n           return support.pushState && options.pushState ? new PushStateAdapter(options.root) : new HashAdapter(options.hashBang);\n        },\n\n        stop: function() {\n            if (!this._started) {\n                return;\n            }\n            this.adapter.stop();\n            this.unbind(CHANGE);\n            this._started = false;\n        },\n\n        change: function(callback) {\n            this.bind(CHANGE, callback);\n        },\n\n        replace: function(to, silent) {\n\n            this._navigate(to, silent, function(adapter) {\n                adapter.replace(to);\n                this.locations[this.locations.length - 1] = this.current;\n            });\n        },\n\n        navigate: function(to, silent) {\n            if (to === \"#:back\") {\n                this.backCalled = true;\n                this.adapter.back();\n                return;\n            }\n\n            this._navigate(to, silent, function(adapter) {\n                adapter.navigate(to);\n                this.locations.push(this.current);\n            });\n        },\n\n        _navigate: function(to, silent, callback) {\n            var adapter = this.adapter;\n\n            to = adapter.normalize(to);\n\n            if (this.current === to || this.current === decodeURIComponent(to)) {\n                this.trigger(SAME);\n                return;\n            }\n\n            if (!silent) {\n                if (this.trigger(CHANGE, { url: to, decode: false })) {\n                    return;\n                }\n            }\n\n            this.current = to;\n\n            callback.call(this, adapter);\n\n            this.historyLength = adapter.length();\n        },\n\n        _checkUrl: function() {\n            var adapter = this.adapter,\n                current = adapter.current(),\n                newLength = adapter.length(),\n                navigatingInExisting = this.historyLength === newLength,\n                back = current === this.locations[this.locations.length - 2] && navigatingInExisting,\n                backCalled = this.backCalled,\n                prev = this.current;\n\n            if (current === null || this.current === current || this.current === decodeURIComponent(current)) {\n                return true;\n            }\n\n            this.historyLength = newLength;\n            this.backCalled = false;\n\n            this.current = current;\n\n            if (back && this.trigger(\"back\", { url: prev, to: current })) {\n                adapter.forward();\n                this.current = prev;\n                return;\n            }\n\n            if (this.trigger(CHANGE, { url: current, backButtonPressed: !backCalled })) {\n                if (back) {\n                    adapter.forward();\n                } else {\n                    adapter.back();\n                    this.historyLength --;\n                }\n                this.current = prev;\n                return;\n            }\n\n            if (back) {\n                this.locations.pop();\n            } else {\n                this.locations.push(current);\n            }\n        }\n    });\n\n    kendo.History = History;\n    kendo.History.HistoryAdapter = HistoryAdapter;\n    kendo.History.HashAdapter = HashAdapter;\n    kendo.History.PushStateAdapter = PushStateAdapter;\n    kendo.absoluteURL = absoluteURL;\n    kendo.history = new History();\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n(function() {\n    var kendo = __webpack_provided_window_dot_kendo,\n        history = kendo.history,\n        Observable = kendo.Observable,\n        INIT = \"init\",\n        ROUTE_MISSING = \"routeMissing\",\n        CHANGE = \"change\",\n        BACK = \"back\",\n        SAME = \"same\",\n        optionalParam = /\\((.*?)\\)/g,\n        namedParam = /(\\(\\?)?:\\w+/g,\n        splatParam = /\\*\\w+/g,\n        escapeRegExp = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n    function namedParamReplace(match, optional) {\n        return optional ? match : '([^\\/]+)';\n    }\n\n    function routeToRegExp(route, ignoreCase) {\n        return new RegExp('^' + route\n            .replace(escapeRegExp, '\\\\$&')\n            .replace(optionalParam, '(?:$1)?')\n            .replace(namedParam, namedParamReplace)\n            .replace(splatParam, '(.*?)') + '$', ignoreCase ? \"i\" : \"\");\n    }\n\n    function stripUrl(url) {\n        return url.replace(/(\\?.*)|(#.*)/g, \"\");\n    }\n\n    var Route = kendo.Class.extend({\n        init: function(route, callback, ignoreCase) {\n            if (!(route instanceof RegExp)) {\n                route = routeToRegExp(route, ignoreCase);\n            }\n\n            this.route = route;\n            this._callback = callback;\n        },\n\n        callback: function(url, back, decode) {\n            var params,\n                idx = 0,\n                length,\n                queryStringParams = kendo.parseQueryStringParams(url);\n                queryStringParams._back = back;\n\n            url = stripUrl(url);\n            params = this.route.exec(url).slice(1);\n            length = params.length;\n\n            if (decode) {\n                for (; idx < length; idx ++) {\n                    if (typeof params[idx] !== 'undefined') {\n                        params[idx] = decodeURIComponent(params[idx]);\n                    }\n                }\n            }\n\n            params.push(queryStringParams);\n\n            this._callback.apply(null, params);\n        },\n\n        worksWith: function(url, back, decode) {\n            if (this.route.test(stripUrl(url))) {\n                this.callback(url, back, decode);\n                return true;\n            } else {\n                return false;\n            }\n        }\n    });\n\n    var Router = Observable.extend({\n        init: function(options) {\n            if (!options) {\n                options = {};\n            }\n\n            Observable.fn.init.call(this);\n\n            this.routes = [];\n            this.pushState = options.pushState;\n            this.hashBang = options.hashBang;\n            this.root = options.root;\n            this.ignoreCase = options.ignoreCase !== false;\n\n            this.bind([INIT, ROUTE_MISSING, CHANGE, SAME, BACK], options);\n        },\n\n        destroy: function() {\n            history.unbind(CHANGE, this._urlChangedProxy);\n            history.unbind(SAME, this._sameProxy);\n            history.unbind(BACK, this._backProxy);\n            this.unbind();\n        },\n\n        start: function() {\n            var that = this,\n                sameProxy = function() { that._same(); },\n                backProxy = function(e) { that._back(e); },\n                urlChangedProxy = function(e) { that._urlChanged(e); };\n\n            history.start({\n                same: sameProxy,\n                change: urlChangedProxy,\n                back: backProxy,\n                pushState: that.pushState,\n                hashBang: that.hashBang,\n                root: that.root\n            });\n\n            // eslint-disable-next-line no-undef\n            var initEventObject = { url: history.current || \"/\", preventDefault: $.noop };\n\n            if (!that.trigger(INIT, initEventObject)) {\n                that._urlChanged(initEventObject);\n            }\n\n            this._urlChangedProxy = urlChangedProxy;\n            this._backProxy = backProxy;\n        },\n\n        route: function(route, callback) {\n            this.routes.push(new Route(route, callback, this.ignoreCase));\n        },\n\n        navigate: function(url, silent) {\n            kendo.history.navigate(url, silent);\n        },\n\n        replace: function(url, silent) {\n            kendo.history.replace(url, silent);\n        },\n\n        _back: function(e) {\n            if (this.trigger(BACK, { url: e.url, to: e.to })) {\n                e.preventDefault();\n            }\n        },\n\n        _same: function() {\n            this.trigger(SAME);\n        },\n\n        _urlChanged: function(e) {\n            var url = e.url;\n            var decode = !!e.decode;\n            var back = e.backButtonPressed;\n\n            if (!url) {\n                url = \"/\";\n            }\n\n            if (this.trigger(CHANGE, { url: e.url, params: kendo.parseQueryStringParams(e.url), backButtonPressed: back })) {\n                e.preventDefault();\n                return;\n            }\n\n            var idx = 0,\n                routes = this.routes,\n                route,\n                length = routes.length;\n\n            for (; idx < length; idx ++) {\n                 route = routes[idx];\n\n                 if (route.worksWith(url, back, decode)) {\n                    return;\n                 }\n            }\n\n            if (this.trigger(ROUTE_MISSING, { url: url, params: kendo.parseQueryStringParams(url), backButtonPressed: back })) {\n                e.preventDefault();\n            }\n        }\n    });\n\n    kendo.Router = Router;\n})();\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.router.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.selectable.js":
/*!************************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.selectable.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* harmony import */ var _kendo_userevents_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.userevents.js */ \"./node_modules/kendo-ui-core/esm/kendo.userevents.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\nlet __meta__ = {\n    id: \"selectable\",\n    name: \"Selectable\",\n    category: \"framework\",\n    depends: [ \"core\", \"userevents\" ],\n    advanced: true\n};\n\n(function($, undefined$1) {\n    let kendo = __webpack_provided_window_dot_kendo,\n        Widget = kendo.ui.Widget,\n        support = kendo.support,\n        abs = Math.abs,\n        ARIASELECTED = \"aria-selected\",\n        SELECTED = \"k-selected\",\n        ACTIVE = \"k-selecting\",\n        SELECTABLE = \"k-selectable\",\n        CHANGE = \"change\",\n        CHANGING = \"changing\",\n        NS = \".kendoSelectable\",\n        UNSELECT = \"unselect\",\n        UNSELECTING = \"k-unselecting\",\n        HOVER = \"k-hover\",\n        MID = \"k-range-mid\",\n        SPLITEND = \"k-range-split-end\",\n        SPLITSTART = \"k-range-split-start\",\n        RANGESTART = \"k-range-start\",\n        RANGEEND = \"k-range-end\",\n        START = \"start\",\n        END = \"end\",\n        NONE = \"none\",\n        MOUSEENTER = \"mouseenter\",\n        MOUSELEAVE = \"mouseleave\",\n        TOUCHSTART = \"touchstart\",\n        TOUCHMOVE = \"touchmove\",\n        TOUCHEND = \"touchend\",\n        INPUTSELECTOR_ICONSSELECTOR_FONT = \"span.k-icon.k-i-caret-alt-down,span.k-icon.k-i-caret-alt-up,.k-icon.k-i-caret-alt-down,.k-icon.k-i-caret-alt-right,.k-icon.k-i-caret-alt-left\",\n        INPUTSELECTOR_ICONSSELECTOR_SVG = INPUTSELECTOR_ICONSSELECTOR_FONT.replaceAll('k-i', 'k-svg-i'),\n        INPUTSELECTOR_SVG_PARTS = INPUTSELECTOR_ICONSSELECTOR_SVG.split(\",\").map((selector) => selector + \" *\").join(\",\"),\n        INPUTSELECTOR = `input,a,textarea,.k-multiselect-wrap,select,button,${INPUTSELECTOR_ICONSSELECTOR_FONT},${INPUTSELECTOR_ICONSSELECTOR_SVG},${INPUTSELECTOR_SVG_PARTS},.k-button>span,.k-button>span *,.k-button>img,label.k-checkbox-label.k-no-text,span.k-numeric-wrap,.k-focusable`,\n        msie = kendo.support.browser.msie,\n        supportEventDelegation = false,\n        extend = $.extend;\n\n        (function($) {\n            (function() {\n                $('<div class=\"parent\"><span></span></div>')\n                .on(\"click\", \">*\", function() {\n                    supportEventDelegation = true;\n                })\n                .find(\"span\")\n                .trigger(\"click\")\n                .end()\n                .off();\n            })();\n        })($);\n\n    const Selectable = Widget.extend({\n        init: function(element, options) {\n            let that = this,\n                multiple,\n                dragToSelect,\n                selectableClass;\n\n            Widget.fn.init.call(that, element, options);\n\n            selectableClass = that.selectableClass = that.options.selectableClass || SELECTABLE;\n\n            that._marquee = $(\"<div class='k-marquee'><div class='k-marquee-color'></div></div>\");\n            that._lastActive = null;\n            that.element.addClass(selectableClass);\n\n            that.relatedTarget = that.options.relatedTarget;\n\n            multiple = that.options.multiple;\n            dragToSelect = that.options.dragToSelect;\n\n            that.userEvents = new kendo.UserEvents(that.element, {\n                global: true,\n                allowSelection: true,\n                filter: (!supportEventDelegation ? \".\" + selectableClass + \" \" : \"\") + that.options.filter,\n                tap: that._tap.bind(that),\n                touchAction: multiple ? \"none\" : \"pan-x pan-y\"\n            });\n\n            if (multiple) {\n                if (dragToSelect) {\n                    that.userEvents\n                        .bind(\"hold\", that._hold.bind(that))\n                        .bind(\"start\", that._start.bind(that))\n                        .bind(\"move\", that._move.bind(that))\n                        .bind(\"end\", that._end.bind(that));\n                }\n                that.userEvents\n                   .bind(\"select\", that._select.bind(that));\n            }\n        },\n\n        events: [CHANGE, CHANGING, UNSELECT],\n\n        options: {\n            name: \"Selectable\",\n            filter: \">*\",\n            inputSelectors: INPUTSELECTOR,\n            multiple: false,\n            holdToDrag: false,\n            dragToSelect: true,\n            relatedTarget: $.noop,\n            ignoreOverlapped: false,\n            addIdToRanges: false,\n            toggleable: false,\n            selectableClass: \"\"\n        },\n\n        _isElement: function(target) {\n            var elements = this.element;\n            var idx, length = elements.length, result = false;\n\n            target = target[0];\n\n            for (idx = 0; idx < length; idx ++) {\n                if (elements[idx] === target) {\n                    result = true;\n                    break;\n                }\n            }\n\n            return result;\n        },\n\n        _tap: function(e) {\n            let target = $(e.target),\n                that = this,\n                options = that.options,\n                ctrlKey = e.event.ctrlKey || e.event.metaKey,\n                multiple = that.options.multiple,\n                shiftKey = multiple && e.event.shiftKey,\n                selectedClass = that.options.selectedClass || SELECTED,\n                selected,\n                whichCode = e.event.which,\n                buttonCode = e.event.button;\n\n            //in case of hierarchy or right-click\n            if (!that._isElement(target.closest(\".\" + that.selectableClass)) || whichCode && whichCode == 3 || buttonCode && buttonCode == 2) {\n                return;\n            }\n\n            if (!this._allowSelection(e.event.target)) {\n                return;\n            }\n\n            if (that.trigger(CHANGING, { target: target, originalEvent: e.event })) {\n                return;\n            }\n\n            selected = target.hasClass(selectedClass);\n\n            target = target.add(that.relatedTarget(target));\n\n            if (!multiple) {\n                if (selected && ctrlKey) {\n                    that._unselect(target);\n                    that._notify(CHANGE, e);\n                } else if (!selected) {\n                    that.clear();\n                    that.value(target, e);\n                    that._notify(CHANGE, e);\n                }\n            } else {\n                if (shiftKey) {\n                    if (!that._lastRange || !compareElements(that._lastRange, target)) {\n                        that.selectRange(that._firstSelectee(), target, e);\n                        that._notify(CHANGE, e);\n                    }\n                    that._lastRange = target;\n                } else {\n                    that._lastRange = null;\n                    if (selected && (ctrlKey || options.toggleable)) {\n                        that._unselect(target);\n                        that._notify(CHANGE, e);\n                    } else if (ctrlKey || options.toggleable) {\n                        that.value(target, e);\n                        that._notify(CHANGE, e);\n                    } else if (!selected || that.value().length > 1) {\n                        that.clear();\n                        that.value(target, e);\n                        that._notify(CHANGE, e);\n                    }\n\n                    that._lastActive = that._downTarget = target;\n                }\n            }\n        },\n\n        _hold: function(e) {\n            if (this.options.holdToDrag) {\n                // serves as a drag hint to indicate start of selection\n                this._tap(e);\n            }\n\n            this._activated = true;\n        },\n\n        _isActivated: function() {\n            return this.options.holdToDrag ? this._activated : true;\n        },\n\n        _start: function(e) {\n            let that = this,\n                target = $(e.target),\n                selectedClass = that.options.selectedClass || SELECTED,\n                selected = target.hasClass(selectedClass),\n                currentElement,\n                ctrlKey = e.event.ctrlKey || e.event.metaKey;\n\n            if (!that._isActivated() || !this._allowSelection(e.event.target)) {\n                return;\n            }\n\n            if (that.trigger(CHANGING, { target: target, originalEvent: e.event })) {\n                that.userEvents.cancel();\n                return;\n            }\n\n            that._downTarget = target;\n\n            //in case of hierarchy\n            if (!that._isElement(target.closest(\".\" + that.selectableClass))) {\n                that.userEvents.cancel();\n                return;\n            }\n\n            if (that.options.useAllItems) {\n                that._items = that.element.find(that.options.filter);\n            } else {\n                currentElement = target.closest(that.element);\n                that._items = currentElement.find(that.options.filter);\n            }\n\n            e.sender.capture();\n\n            that._marquee\n                .appendTo(document.body)\n                .css({\n                    left: e.x.client + 1,\n                    top: e.y.client + 1,\n                    width: 0,\n                    height: 0\n                });\n\n            if (!ctrlKey) {\n                that.clear();\n            }\n\n            target = target.add(that.relatedTarget(target));\n            if (selected) {\n                that._selectElement(target, true);\n                if (ctrlKey) {\n                    target.addClass(UNSELECTING);\n                }\n            }\n        },\n\n        _move: function(e) {\n            var that = this,\n                position = {\n                    left: e.x.startLocation > e.x.location ? e.x.location : e.x.startLocation,\n                    top: e.y.startLocation > e.y.location ? e.y.location : e.y.startLocation,\n                    width: abs(e.x.initialDelta),\n                    height: abs(e.y.initialDelta)\n                };\n\n            if (!that._isActivated()) {\n                return;\n            }\n\n            that._marquee.css(position);\n\n            that._invalidateSelectables(position, (e.event.ctrlKey || e.event.metaKey));\n\n            e.preventDefault();\n        },\n\n        _end: function(e) {\n            var that = this,\n            rangeSelectedAttr = kendo.attr(\"range-selected\"),\n            uid = kendo.guid();\n\n            if (!that._isActivated()) {\n                return;\n            }\n\n            that._activated = false;\n\n            that._marquee.remove();\n\n            that._unselect(that.element\n                .find(that.options.filter + \".\" + UNSELECTING))\n                .removeClass(UNSELECTING);\n\n\n            var target = that.element.find(that.options.filter + \".\" + ACTIVE);\n            target = target.add(that.relatedTarget(target));\n\n            if (that.options.addIdToRanges) {\n                for (var i = 0; i < that._currentlyActive.length; i++) {\n                    $(that._currentlyActive[i]).attr(rangeSelectedAttr, uid);\n                }\n            }\n\n            if (!that._lastRange || !compareElements(that._lastRange, target)) {\n                that.value(target, e);\n                that._notify(CHANGE, e);\n            }\n            that._lastRange = target;\n            that._lastActive = that._downTarget;\n            that._items = null;\n        },\n\n        _invalidateSelectables: function(position, ctrlKey) {\n            var idx,\n                length,\n                target = this._downTarget[0],\n                items = this._items,\n                selectedClass = this.options.selectedClass || SELECTED,\n                related,\n                toSelect;\n\n            this._currentlyActive = [];\n\n            for (idx = 0, length = items.length; idx < length; idx ++) {\n                toSelect = items.eq(idx);\n                related = toSelect.add(this.relatedTarget(toSelect));\n\n                if (collision(toSelect, position)) {\n                    if (toSelect.hasClass(selectedClass)) {\n                        if (ctrlKey && target !== toSelect[0]) {\n                            related.removeClass(selectedClass).addClass(UNSELECTING);\n                        }\n                    } else if (!toSelect.hasClass(ACTIVE) && !toSelect.hasClass(UNSELECTING) && !this._collidesWithActiveElement(related, position)) {\n                        related.addClass(ACTIVE);\n                    }\n                    this._currentlyActive.push(related[0]);\n                } else {\n                    if (toSelect.hasClass(ACTIVE)) {\n                        related.removeClass(ACTIVE);\n                    } else if (ctrlKey && toSelect.hasClass(UNSELECTING)) {\n                        related.removeClass(UNSELECTING).addClass(selectedClass);\n                    }\n                }\n            }\n        },\n\n        _collidesWithActiveElement: function(element, marqueeRect) {\n            if (!this.options.ignoreOverlapped) {\n                return false;\n            }\n\n            var activeElements = this._currentlyActive;\n            var elemRect = element[0].getBoundingClientRect();\n            var activeElementRect;\n            var collision = false;\n            var isRtl = kendo.support.isRtl(element);\n            var leftRight = isRtl ? \"right\" : \"left\";\n            var tempRect = {};\n\n            marqueeRect.right = marqueeRect.left + marqueeRect.width;\n            marqueeRect.bottom = marqueeRect.top + marqueeRect.height;\n\n            for (var i = 0; i < activeElements.length; i++) {\n                activeElementRect = activeElements[i].getBoundingClientRect();\n                if (overlaps(elemRect, activeElementRect)) {\n                    tempRect[leftRight] = leftRight === \"left\" ? activeElementRect.right : activeElementRect.left;\n                    elemRect = extend({}, elemRect, tempRect);\n                    if (elemRect.left > elemRect.right) {\n                        return true;\n                    }\n                    collision = !overlaps(elemRect, marqueeRect);\n                }\n            }\n            return collision;\n        },\n\n        value: function(val) {\n            var that = this,\n                selectElement = that._selectElement.bind(that);\n\n            if (val) {\n                val.each(function() {\n                    selectElement(this);\n                });\n\n                return;\n            }\n\n            return that.element.find(that.options.filter + \".\" + (that.options.selectedClass || SELECTED));\n        },\n\n        selectedRanges: function() {\n            var that = this;\n            var rangeSelectedAttr = kendo.attr(\"range-selected\");\n            var map = {};\n\n            that.element.find(\"[\" + rangeSelectedAttr + \"]\").each(function(_, elem) {\n                var rangeId = $(elem).attr(rangeSelectedAttr);\n                var mapLocation = map[rangeId];\n\n                if (!mapLocation) {\n                    mapLocation = map[rangeId] = [];\n                }\n\n                mapLocation.push($(elem));\n            });\n\n            return map;\n        },\n\n        selectedSingleItems: function() {\n            var that = this;\n            var rangeSelectedAttr = kendo.attr(\"range-selected\");\n\n            return that.element.find(that.options.filter + \".\" + (that.options.selectedClass || SELECTED) + \":not([\" + rangeSelectedAttr + \"])\").toArray().map(function(elem) {\n                return $(elem);\n            });\n        },\n\n        _firstSelectee: function() {\n            var that = this,\n                selected;\n\n            if (that._lastActive !== null) {\n                return that._lastActive;\n            }\n\n            selected = that.value();\n            return selected.length > 0 ?\n                    selected[0] :\n                    that.element.find(that.options.filter)[0];\n        },\n\n        _selectElement: function(element, preventNotify) {\n            var toSelect = $(element),\n                selectedClass = this.options.selectedClass || SELECTED,\n                isPrevented = !preventNotify && this._notify(\"select\", { element: element });\n\n            toSelect.removeClass(ACTIVE);\n            if (!isPrevented) {\n                 toSelect.addClass(selectedClass);\n\n                if (this.options.aria) {\n                    toSelect.attr(ARIASELECTED, true);\n                }\n            }\n        },\n\n        _notify: function(name, args) {\n            args = args || { };\n            return this.trigger(name, args);\n        },\n\n        _unselect: function(element) {\n            if (this.trigger(UNSELECT, { element: element })) {\n                return;\n            }\n\n            var rangeSelectedAttr = kendo.attr(\"range-selected\");\n\n            element.removeClass(this.options.selectedClass || SELECTED).removeAttr(rangeSelectedAttr);\n\n            if (this.options.aria) {\n                element.attr(ARIASELECTED, false);\n            }\n\n            return element;\n        },\n\n        _select: function(e) {\n            if (this._allowSelection(e.event.target)) {\n                if (!msie || (msie && !$(kendo._activeElement()).is(this.options.inputSelectors))) {\n                    if (this._allowPreventDefault(e.event.target)) {\n                        e.preventDefault();\n                    }\n                }\n            }\n        },\n\n        _allowPreventDefault: function(target) {\n            var disallowedSelectors = \".k-table-td\";\n            // Required for the paste event in the Grid to work in Chrome.\n            return !$(target).is(disallowedSelectors) || !this.options.allowPaste;\n        },\n\n        _allowSelection: function(target) {\n            if ($(target).is(this.options.inputSelectors)) {\n                this.userEvents.cancel();\n                this._downTarget = null;\n                return false;\n            }\n\n            return true;\n        },\n\n        resetTouchEvents: function() {\n            this.userEvents.cancel();\n        },\n\n        clear: function() {\n            var items = this.element.find(this.options.filter + \".\" + (this.options.selectedClass || SELECTED));\n            this._unselect(items);\n        },\n\n        selectRange: function(start, end) {\n            var that = this,\n                idx,\n                tmp,\n                items;\n\n            that.clear();\n\n            if (that.element.length > 1) {\n                items = that.options.continuousItems();\n            }\n\n            if (!items || !items.length) {\n                items = that.element.find(that.options.filter);\n            }\n\n            start = $.inArray($(start)[0], items);\n            end = $.inArray($(end)[0], items);\n\n            if (start > end) {\n                tmp = start;\n                start = end;\n                end = tmp;\n            }\n\n            if (!that.options.useAllItems) {\n                end += that.element.length - 1;\n            }\n\n            for (idx = start; idx <= end; idx ++ ) {\n                that._selectElement(items[idx], true);\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n\n            Widget.fn.destroy.call(that);\n\n            that.element.off(NS);\n\n            that.userEvents.destroy();\n\n            that._marquee = that._lastActive = that.element = that.userEvents = null;\n        }\n    });\n\n    const RangeSelectable = Widget.extend({\n        init: function(element, options) {\n            let that = this,\n            ns,\n            cellSelectorValid;\n\n            Widget.fn.init.call(that, element, options);\n\n            that.widget = options.widget;\n            ns = options.ns;\n            cellSelectorValid = options.filter;\n\n            that.userEvents = new kendo.UserEvents(that.element, {\n                global: true,\n                allowSelection: true,\n                filter: that.options.filter,\n                tap: that._tap.bind(that),\n                touchAction: NONE\n            });\n\n            if (support.touch) {\n                element.on(TOUCHSTART + ns, cellSelectorValid, that._mouseEnter.bind(that))\n                    .on(TOUCHEND + ns + \" \" + TOUCHMOVE + ns, cellSelectorValid, that._mouseLeave.bind(that));\n            } else {\n                element.on(MOUSEENTER + ns, cellSelectorValid, that._mouseEnter.bind(that))\n                    .on(MOUSELEAVE + ns, cellSelectorValid, that._mouseLeave.bind(that));\n            }\n        },\n\n        events: [CHANGE],\n\n        options: {\n            name: \"RangeSelectable\",\n            filter: \">*\",\n            inputSelectors: INPUTSELECTOR,\n            resetOnStart: false,\n            multiple: false,\n            dragToSelect: true,\n            cellSelector: \"*\",\n            ns: \"\",\n            reverse: false,\n            relatedTarget: $.noop\n        },\n\n        destroy: function() {\n            let that = this;\n\n            Widget.fn.destroy.call(that);\n\n            that.userEvents.destroy();\n            that.widget = null;\n\n            that._lastActive = that.element = that.userEvents = that._start = that._end = null;\n        },\n\n        _allowSelection: function(target) {\n            if ($(target).is(this.options.inputSelectors)) {\n                this.userEvents.cancel();\n                return false;\n            }\n\n            return true;\n        },\n\n        _mouseEnter: function(e) {\n            let that = this,\n                cell = $(e.currentTarget),\n                range;\n\n            cell.addClass(HOVER);\n\n            range = that.widget.selectRange();\n\n            if (that.options.resetOnStart && range.end) {\n                return;\n            }\n\n            if (range.target === START && that._end) {\n                that.range(cell, that._end, true, that.options.reverse);\n            }\n\n            if (range.target === END) {\n                that.range(that._start, cell, true, that.options.reverse);\n            }\n        },\n\n        _mouseLeave: function(e) {\n            $(e.currentTarget).removeClass(HOVER);\n        },\n\n        start: function(element, preventFlagUpdate) {\n            if (element === undefined$1 || element === null) {\n                return this._start;\n            }\n\n            element.addClass(SELECTED + \" \" + RANGESTART).attr(ARIASELECTED, true);\n\n            if (!preventFlagUpdate) {\n                this._start = element;\n            }\n        },\n\n        end: function(element, preventFlagUpdate) {\n            if (element === undefined$1 || element === null) {\n                return this._start;\n            }\n\n            element.addClass(SELECTED + \" \" + RANGEEND).attr(ARIASELECTED, true);\n\n            if (!preventFlagUpdate) {\n                this._end = element;\n            }\n        },\n\n        mid: function(elements) {\n            let tables = this.element.find(\"table\"),\n                options = this.options;\n\n            elements.addClass(MID).attr(ARIASELECTED, true);\n            tables.each(function() {\n                let that = $(this);\n                let lastCell = that.find(options.cellSelectorValid).last();\n                let firstCell = that.find(options.cellSelectorValid).first();\n\n                if (lastCell.hasClass(MID)) {\n                    lastCell.addClass(SPLITEND);\n                }\n\n                if (firstCell.hasClass(MID)) {\n                    firstCell.addClass(SPLITSTART);\n                }\n            });\n        },\n\n        clear: function(clearVariables) {\n            let options = this.options;\n            this.element.find(options.cellSelector)\n                .removeClass(MID + \" \" + SPLITEND + \" \" + SPLITSTART);\n\n            this.clearStartEnd();\n\n            if (clearVariables) {\n                this._start = this._end = null;\n            }\n        },\n\n        clearStartEnd: function() {\n            let that = this, options = that.options;\n            that.element.find(options.cellSelector).removeClass(RANGESTART + \" \" + SELECTED + \" \" + RANGEEND).removeAttr(ARIASELECTED);\n        },\n\n        selectFrom: function(start) {\n            let that = this,\n                options = this.options,\n                items,\n                startIdx;\n\n            items = that.element.find(options.cellSelector);\n\n            startIdx = $.inArray($(start)[0], items);\n\n            that.clear();\n            that.start(start);\n\n            items = items.filter(function(index) {\n                return index > startIdx;\n            });\n            that.mid(items);\n        },\n\n        selectTo: function(end) {\n            let that = this,\n                options = this.options,\n                items,\n                endIdx;\n\n            items = that.element.find(options.cellSelector);\n\n            endIdx = $.inArray($(end)[0], items);\n\n            that.clear();\n\n            items = items.filter(function(index) {\n                return index < endIdx;\n            });\n            that.mid(items);\n            that.end($(end));\n        },\n\n        range: function(start, end, preventFlagUpdate, invert) {\n            let that = this,\n                options = this.options,\n                items,\n                startIdx,\n                endIdx;\n\n            if (start === undefined$1) {\n                return { start: that._start, end: that._end };\n            }\n\n            that._clearFlags();\n\n            items = that.element.find(options.cellSelector);\n\n            startIdx = $.inArray($(start)[0], items);\n            endIdx = $.inArray($(end)[0], items);\n\n            if (!start || (start && !start.length)) {\n                that._useStart = true;\n            }\n\n            that.clear();\n\n            if (start) {\n                that.start($(start), preventFlagUpdate);\n            }\n\n            items = items.filter(function(index) {\n               if (endIdx < 0 || (!start && startIdx < 0)) {\n                   return;\n               }\n\n                return (index > startIdx && index < endIdx) || options.reverse && (index < startIdx && index > endIdx);\n            });\n\n            that.mid(items);\n\n            if (end) {\n                that.end($(end), preventFlagUpdate);\n            } else {\n                that._useEnd = true;\n            }\n\n            if (startIdx > endIdx && invert) {\n                that.clearStartEnd();\n                that.start($(end), true);\n                that.end($(start), true);\n            }\n        },\n\n        change: function() {\n            this.trigger(CHANGE);\n        },\n\n        _clearFlags: function() {\n            this._useStart = this._useEnd = false;\n        },\n\n        _tap: function(e) {\n            let target = $(e.target),\n                that = this,\n                range = that.widget.selectRange() || {},\n                start = range.start,\n                end = range.end,\n                currentDate = kendo.calendar.toDateObject($(target).find(\"span\")),\n                options = that.options,\n                resetOnStart = options.resetOnStart;\n\n            that._lastActive = target;\n\n            if (!start && !end) {\n                that.clear(true);\n                if (range.target === START) {\n                    that.start(target);\n                }\n\n                if (range.target === END) {\n                    that.end(target);\n                }\n\n                that._clearFlags();\n                that.trigger(CHANGE);\n                return;\n            }\n\n            if (!start && end) {\n                if (range.target === END) {\n                    that.end(target);\n                } else {\n                    if (+currentDate > +range.end && !options.reverse) {\n                        that.clear(true);\n                        that.start(target);\n                    } else {\n                        that.range(target, that._end, false, true);\n                    }\n                }\n                that.trigger(CHANGE);\n                that._clearFlags();\n                return;\n            }\n\n            if (start && !end) {\n                if (range.target === END && !options.reverse && +start > +currentDate) {\n                    that.clear(true);\n\n                    if (resetOnStart) {\n                        that.start(target);\n                    } else {\n                        that.end(target);\n                    }\n                } else if (range.target === START) {\n                    that.start(target);\n                } else {\n                    that.range(that._start, target, false, true);\n                }\n                that.trigger(CHANGE);\n                that._clearFlags();\n                return;\n            }\n\n            if (start && end) {\n                if (!options.reverse) {\n                    if (+start > +currentDate && range.target === END) {\n                        that.clear(true);\n                        if (resetOnStart) {\n                            that.start(target);\n                            that.end(null);\n                            range.target = START;\n                        } else {\n                            that.start(null);\n                            that.end(target);\n                        }\n                        that.trigger(CHANGE);\n                        return;\n                    }\n\n                    if (+start < +currentDate && range.target === START) {\n                        if (+currentDate > +range.end) {\n                            that.clear(true);\n                            that.start(target);\n                            that.end(null);\n                        } else {\n                            that.range(target, that._end);\n                        }\n                        that.trigger(CHANGE);\n                        return;\n                    }\n\n                    if (range.target === START) {\n                        that.range(target, that._end);\n                    }\n\n                    if (range.target === END) {\n                        that.range(that._start, target);\n                    }\n\n                    that.trigger(CHANGE);\n                    return;\n                }\n\n                if (resetOnStart) {\n                    if (range.target === START) {\n                        that.range(target, that._end, false, true);\n                    } else {\n                        that.range(that._start, target, false, true);\n                    }\n                } else {\n                    if (range.target === START) {\n                        that.start(target);\n                    } else {\n                        that.end(target);\n                    }\n                }\n\n                that.trigger(CHANGE);\n            }\n        }\n    });\n\n    Selectable.parseOptions = function(selectable) {\n        var selectableMode = selectable.mode || selectable;\n        var asLowerString = typeof selectableMode === \"string\" && selectableMode.toLowerCase();\n        return {\n            multiple: asLowerString && asLowerString.indexOf(\"multiple\") > -1,\n            cell: asLowerString && asLowerString.indexOf(\"cell\") > -1,\n            range: asLowerString && asLowerString.indexOf(\"range\") > -1,\n            single: asLowerString && asLowerString.indexOf(\"single\") > -1\n        };\n    };\n\n    function compareElements(element, toCompare) {\n\n        if (element.length !== toCompare.length) {\n            return false;\n        }\n\n        for (var i = 0; i < element.length; i++) {\n            if (element[i] !== toCompare[i]) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function collision(element, position) {\n        if (!element.is(\":visible\")) {\n            return false;\n        }\n\n        var elementPosition = kendo.getOffset(element),\n            right = position.left + position.width,\n            bottom = position.top + position.height;\n\n        elementPosition.right = elementPosition.left + kendo._outerWidth(element);\n        elementPosition.bottom = elementPosition.top + kendo._outerHeight(element);\n\n        return !(elementPosition.left > right ||\n            elementPosition.right < position.left ||\n            elementPosition.top > bottom ||\n            elementPosition.bottom < position.top);\n    }\n\n    function overlaps(firstRect, secondRect) {\n        return !(firstRect.right <= secondRect.left ||\n            firstRect.left >= secondRect.right ||\n            firstRect.bottom <= secondRect.top ||\n            firstRect.top >= secondRect.bottom);\n    }\n\n    kendo.ui.plugin(Selectable);\n    kendo.ui.plugin(RangeSelectable);\n\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.selectable.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.slider.js":
/*!********************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.slider.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_draganddrop_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.draganddrop.js */ \"./node_modules/kendo-ui-core/esm/kendo.draganddrop.js\");\n/* harmony import */ var _kendo_icons_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.icons.js */ \"./node_modules/kendo-ui-core/esm/kendo.icons.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\nvar __meta__ = {\n    id: \"slider\",\n    name: \"Slider\",\n    category: \"web\",\n    description: \"The Slider widget provides a rich input for selecting values or ranges of values.\",\n    depends: [ \"draganddrop\", \"icons\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        Widget = kendo.ui.Widget,\n        Draggable = kendo.ui.Draggable,\n        outerWidth = kendo._outerWidth,\n        outerHeight = kendo._outerHeight,\n        extend = $.extend,\n        format = kendo.format,\n        parse = kendo.parseFloat,\n        isArray = Array.isArray,\n        math = Math,\n        support = kendo.support,\n        pointers = support.pointers,\n        msPointers = support.msPointers,\n        CHANGE = \"change\",\n        SLIDE = \"slide\",\n        NS = \".slider\",\n        MOUSE_DOWN = \"touchstart\" + NS + \" mousedown\" + NS,\n        TRACK_MOUSE_DOWN = pointers ? \"pointerdown\" + NS : (msPointers ? \"MSPointerDown\" + NS : MOUSE_DOWN),\n        MOUSE_UP = \"touchend\" + NS + \" mouseup\" + NS,\n        TRACK_MOUSE_UP = pointers ? \"pointerup\" : (msPointers ? \"MSPointerUp\" + NS : MOUSE_UP),\n        MOVE_SELECTION = \"moveSelection\",\n        KEY_DOWN = \"keydown\" + NS,\n        CLICK = \"click\" + NS,\n        MOUSE_OVER = \"mouseover\" + NS,\n        FOCUS = \"focus\" + NS,\n        BLUR = \"blur\" + NS,\n        DRAG_HANDLE = \".k-draghandle\",\n        TRACK_SELECTOR = \".k-slider-track\",\n        TICK_SELECTOR = \".k-tick\",\n        STATE_SELECTED = \"k-selected\",\n        STATE_FOCUSED = \"k-focus\",\n        STATE_DISABLED = \"k-disabled\",\n        DISABLED = \"disabled\",\n        UNDEFINED = \"undefined\",\n        TABINDEX = \"tabindex\",\n        getTouches = kendo.getTouches,\n\n        ARIA_VALUETEXT = \"aria-valuetext\",\n        ARIA_VALUENOW = \"aria-valuenow\";\n\n    var SliderBase = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            options = that.options;\n            that._isHorizontal = options.orientation == \"horizontal\";\n            that._isRtl = that._isHorizontal && kendo.support.isRtl(element);\n            that._position = that._isRtl ? \"right\" : that._isHorizontal ? \"left\" : \"bottom\";\n            that._sizeFn = that._isHorizontal ? \"width\" : \"height\";\n            that._outerSize = that._isHorizontal ? outerWidth : outerHeight;\n\n            options.tooltip.format = options.tooltip.enabled ? options.tooltip.format || \"{0}\" : \"{0}\";\n\n            if (options.smallStep <= 0) {\n                throw new Error('Kendo UI Slider smallStep must be a positive number.');\n            }\n\n            that._createHtml();\n            that._trackDiv = that.wrapper.find(TRACK_SELECTOR);\n\n            that._maxSelection = that._trackDiv[that._sizeFn]();\n\n            that._sliderItemsInit();\n\n            that._reset();\n\n            that._tabindex(that.wrapper.find(DRAG_HANDLE));\n            that[options.enabled ? \"enable\" : \"disable\"]();\n\n            var rtlDirectionSign = kendo.support.isRtl(that.wrapper) ? -1 : 1;\n\n            that._keyMap = {\n                37: step(-1 * rtlDirectionSign * options.smallStep), // left arrow\n                40: step(-options.smallStep), // down arrow\n                39: step(+1 * rtlDirectionSign * options.smallStep), // right arrow\n                38: step(+options.smallStep), // up arrow\n                35: setValue(options.max), // end\n                36: setValue(options.min), // home\n                33: step(+options.largeStep), // page up\n                34: step(-options.largeStep) // page down\n            };\n\n            that._ariaLabel(that.wrapper.find(DRAG_HANDLE));\n\n            kendo.notify(that);\n        },\n\n        events: [\n            CHANGE,\n            SLIDE\n        ],\n\n        options: {\n            enabled: true,\n            min: 0,\n            max: 10,\n            smallStep: 1,\n            largeStep: 5,\n            orientation: \"horizontal\",\n            tickPlacement: \"both\",\n            tooltip: { enabled: true, format: \"{0}\" }\n        },\n\n        _distance: function() {\n            return round(this.options.max - this.options.min);\n        },\n\n        _resize: function() {\n            this.wrapper.find(\".k-slider-items\").remove();\n\n            this._maxSelection = this._trackDiv[this._sizeFn]();\n            this._sliderItemsInit();\n            this._refresh();\n\n            if (this.options.enabled) {\n                this.enable(true);\n            }\n        },\n\n        _sliderItemsInit: function() {\n            var that = this,\n                options = that.options;\n\n            // [Backwards compatibilty]: maxSelection is reduced with 2 to compensate new styling and preserve automatic calculation to not show ticks.\n            var sizeBetweenTicks = (that._maxSelection - 2) / ((options.max - options.min) / options.smallStep);\n\n            var pixelWidths = that._calculateItemsWidth(math.floor(removeFraction(that._distance()) / removeFraction(options.smallStep)));\n\n            if (options.tickPlacement != \"none\" && sizeBetweenTicks >= 2) {\n                $(this.element).parent().find(\".k-slider-items\").remove();\n                that._trackDiv.before(createSliderItems(options, that._distance()));\n                that._setItemsTitle();\n            }\n\n            that._calculateSteps(pixelWidths);\n\n            if (options.tickPlacement != \"none\" && sizeBetweenTicks >= 2 &&\n                options.largeStep >= options.smallStep) {\n                that._setItemsLargeTick();\n                that.wrapper.find(TICK_SELECTOR).first().addClass(\"k-first\");\n                that.wrapper.find(TICK_SELECTOR).last().addClass(\"k-last\");\n            }\n        },\n\n        getSize: function() {\n            return kendo.dimensions(this.wrapper);\n        },\n\n        _setItemsTitle: function() {\n            var that = this,\n                options = that.options,\n                items = that.wrapper.find(TICK_SELECTOR),\n                titleNumber = options.min,\n                count = items.length;\n\n            for (var i = 0; i <= count; i += 1) {\n                $(items[i]).attr(\"title\", format(options.tooltip.format, round(titleNumber)));\n                titleNumber += options.smallStep;\n            }\n        },\n\n        _setItemsLargeTick: function() {\n            var that = this,\n                options = that.options,\n                items = that.wrapper.find(TICK_SELECTOR),\n                i = 0, item, value;\n\n            if (removeFraction(options.largeStep) % removeFraction(options.smallStep) === 0 || that._distance() / options.largeStep >= 3) {\n                if (!that._isHorizontal && !that._isRtl) {\n                    items = $.makeArray(items).reverse();\n                }\n\n                for (i = 0; i < items.length; i++) {\n                    item = $(items[i]);\n                    value = that._values[i];\n                    var valueWithoutFraction = round(removeFraction(value - this.options.min));\n                    if (valueWithoutFraction % removeFraction(options.smallStep) === 0 && valueWithoutFraction % removeFraction(options.largeStep) === 0) {\n                        item.addClass(\"k-tick-large\")\n                            .html(\"<span class='k-label'>\" + item.attr(\"title\") + \"</span>\");\n\n                        if (i !== 0 && i !== items.length - 1) {\n                            item.css(\"line-height\", item[that._sizeFn]() + \"px\");\n                        }\n                    }\n                }\n            }\n        },\n\n        _calculateItemsWidth: function(itemsCount) {\n            var that = this,\n                options = that.options,\n                trackDivSize = parseFloat(that._trackDiv.css(that._sizeFn)) + 1,\n                distance = that._distance(),\n                preciseItemsCount = removeFraction(distance) / removeFraction(options.smallStep),\n                pixelStep = trackDivSize / removeFraction(distance),\n                itemWidth,\n                pixelWidths,\n                i;\n\n            if (preciseItemsCount - itemsCount > 0) {\n                trackDivSize -= ((removeFraction(distance) % removeFraction(options.smallStep)) * pixelStep);\n            }\n\n            itemWidth = trackDivSize / itemsCount;\n            pixelWidths = [];\n\n            for (i = 0; i < itemsCount - 1; i++) {\n                pixelWidths[i] = itemWidth;\n            }\n\n            pixelWidths[itemsCount - 1] = pixelWidths[itemsCount] = itemWidth / 2;\n            return that._roundWidths(pixelWidths);\n        },\n\n        _roundWidths: function(pixelWidthsArray) {\n            var balance = 0,\n                count = pixelWidthsArray.length,\n                i;\n\n            for (i = 0; i < count; i++) {\n                balance += (pixelWidthsArray[i] - math.floor(pixelWidthsArray[i]));\n                pixelWidthsArray[i] = math.floor(pixelWidthsArray[i]);\n            }\n\n            balance = math.round(balance);\n\n            return this._addAdditionalSize(balance, pixelWidthsArray);\n        },\n\n        _addAdditionalSize: function(additionalSize, pixelWidthsArray) {\n            if (additionalSize === 0) {\n                return pixelWidthsArray;\n            }\n\n            //set step size\n            var step = parseFloat(pixelWidthsArray.length - 1) / parseFloat(additionalSize == 1 ? additionalSize : additionalSize - 1),\n                i;\n\n            for (i = 0; i < additionalSize; i++) {\n                pixelWidthsArray[parseInt(math.round(step * i), 10)] += 1;\n            }\n\n            return pixelWidthsArray;\n        },\n\n        _calculateSteps: function(pixelWidths) {\n            var that = this,\n                options = that.options,\n                val = options.min,\n                selection = 0,\n                distance = that._distance(),\n                itemsCount = math.ceil(removeFraction(distance) / removeFraction(options.smallStep)),\n                i = 1,\n                lastItem;\n\n            itemsCount += (removeFraction(distance) / removeFraction(options.smallStep)) % 1 === 0 ? 1 : 0;\n            pixelWidths.splice(0, 0, pixelWidths[itemsCount - 2] * 2);\n            pixelWidths.splice(itemsCount - 1, 1, pixelWidths.pop() * 2);\n\n            that._pixelSteps = [selection];\n            that._values = [val];\n\n            if (itemsCount === 0) {\n                return;\n            }\n\n            while (i < itemsCount) {\n                selection += (pixelWidths[i - 1] + pixelWidths[i]) / 2;\n                that._pixelSteps[i] = selection;\n                val += options.smallStep;\n                that._values[i] = round(val);\n\n                i++;\n            }\n\n            lastItem = (removeFraction(distance) % removeFraction(options.smallStep)) === 0 ? itemsCount - 1 : itemsCount;\n\n            that._pixelSteps[lastItem] = that._maxSelection;\n            that._values[lastItem] = options.max;\n        },\n\n        _getValueFromPosition: function(mousePosition, draggableArea) {\n            var that = this,\n                options = that.options,\n                step = math.max(options.smallStep * (that._maxSelection / that._distance()), 0),\n                position = 0,\n                halfStep = (step / 2),\n                i;\n\n            if (that._isHorizontal) {\n                position = mousePosition - draggableArea.startPoint;\n                if (that._isRtl) {\n                    position = that._maxSelection - position;\n                }\n            } else {\n                position = draggableArea.startPoint - mousePosition;\n            }\n\n            if (that._maxSelection - ((parseInt(that._maxSelection % step, 10) - 3) / 2) < position) {\n                return options.max;\n            }\n\n            for (i = 0; i < that._pixelSteps.length; i++) {\n                if (math.abs(that._pixelSteps[i] - position) - 1 <= halfStep) {\n                    return round(that._values[i]);\n                }\n            }\n        },\n\n        _getFormattedValue: function(val, drag) {\n            var that = this,\n                html = \"\",\n                tooltip = that.options.tooltip,\n                tooltipTemplate,\n                selectionStart,\n                selectionEnd;\n\n            if (isArray(val)) {\n                selectionStart = val[0];\n                selectionEnd = val[1];\n            } else if (drag && drag.type) {\n                selectionStart = drag.selectionStart;\n                selectionEnd = drag.selectionEnd;\n            }\n\n            if (drag) {\n                tooltipTemplate = drag.tooltipTemplate;\n            }\n\n            if (!tooltipTemplate && tooltip.template) {\n                tooltipTemplate = kendo.template(tooltip.template);\n            }\n\n            if (isArray(val) || (drag && drag.type)) {\n\n                if (tooltipTemplate) {\n                    html = tooltipTemplate({\n                        selectionStart: selectionStart,\n                        selectionEnd: selectionEnd\n                    });\n                } else {\n                    selectionStart = format(tooltip.format, selectionStart);\n                    selectionEnd = format(tooltip.format, selectionEnd);\n                    html = selectionStart + \" - \" + selectionEnd;\n                }\n            } else {\n                if (drag) {\n                    drag.val = val;\n                }\n\n                if (tooltipTemplate) {\n                    html = tooltipTemplate({\n                        value: val\n                    });\n                } else {\n                    html = format(tooltip.format, val);\n                }\n            }\n            return html;\n        },\n\n        _getDraggableArea: function() {\n            var that = this,\n                offset = kendo.getOffset(that._trackDiv);\n\n            return {\n                startPoint: that._isHorizontal ? offset.left : offset.top + that._maxSelection,\n                endPoint: that._isHorizontal ? offset.left + that._maxSelection : offset.top\n            };\n        },\n\n        _createHtml: function() {\n            var that = this,\n                element = that.element,\n                options = that.options,\n                inputs = element.find(\"input\");\n\n            if (inputs.length == 2) {\n                inputs.eq(0).prop(\"value\", formatValue(options.selectionStart));\n                inputs.eq(1).prop(\"value\", formatValue(options.selectionEnd));\n            } else {\n                element.prop(\"value\", formatValue(options.value));\n            }\n\n            that.wrapper = element.wrap(createWrapper(options, element, that._isHorizontal)).hide().parents(\".k-slider\");\n\n            if (options.showButtons) {\n                that.wrapper.find(\".k-slider-track-wrap\")\n                       .after(createButton(options, \"increase\", that._isHorizontal, that._isRtl))\n                       .before(createButton(options, \"decrease\", that._isHorizontal, that._isRtl));\n            }\n\n            element.before(createTrack(options, element, that._isHorizontal));\n        },\n\n        _focus: function(e) {\n            var that = this,\n                target = e.target,\n                val = that.value(),\n                drag = that._drag;\n\n            if (!drag) {\n                if (target == that.wrapper.find(DRAG_HANDLE).eq(0)[0]) {\n                    drag = that._firstHandleDrag;\n                    that._activeHandle = 0;\n                } else {\n                    drag = that._lastHandleDrag;\n                    that._activeHandle = 1;\n                }\n                val = val[that._activeHandle];\n            }\n\n            $(target).addClass(STATE_FOCUSED + \" \" + STATE_SELECTED);\n\n            if (drag) {\n                that._activeHandleDrag = drag;\n\n                drag.selectionStart = that.options.selectionStart;\n                drag.selectionEnd = that.options.selectionEnd;\n\n                drag._updateTooltip(val);\n            }\n        },\n\n        _focusWithMouse: function(target) {\n            target = $(target);\n\n            var that = this,\n                idx = target.is(DRAG_HANDLE) ? target.index() : 0;\n\n            window.setTimeout(function() {\n                that.wrapper.find(DRAG_HANDLE)[idx == 2 ? 1 : 0].focus();\n            }, 1);\n\n            that._setTooltipTimeout();\n        },\n\n        _blur: function(e) {\n            var that = this,\n                drag = that._activeHandleDrag;\n\n            $(e.target).removeClass(STATE_FOCUSED + \" \" + STATE_SELECTED);\n\n            if (drag) {\n                drag._removeTooltip();\n                delete that._activeHandleDrag;\n                delete that._activeHandle;\n            }\n        },\n\n        _setTooltipTimeout: function() {\n            var that = this;\n            that._tooltipTimeout = window.setTimeout(function() {\n                var drag = that._drag || that._activeHandleDrag;\n                if (drag) {\n                    drag._removeTooltip();\n                }\n            }, 300);\n        },\n\n        _clearTooltipTimeout: function() {\n            var that = this;\n            window.clearTimeout(this._tooltipTimeout);\n            var drag = that._drag || that._activeHandleDrag;\n            if (drag && drag.tooltipDiv) {\n                drag.tooltipDiv.stop(true, false).css(\"opacity\", 1);\n            }\n        },\n\n        _reset: function() {\n            var that = this,\n                element = that.element,\n                formId = element.attr(\"form\"),\n                form = formId ? $(\"#\" + formId) : element.closest(\"form\");\n\n            if (form[0]) {\n                that._form = form.on(\"reset\", that._formResetHandler.bind(that));\n            }\n        },\n\n        min: function(value) {\n            if (!value) {\n                return this.options.min;\n            }\n            this.setOptions({ \"min\": value });\n        },\n\n        max: function(value) {\n            if (!value) {\n                return this.options.max;\n            }\n            this.setOptions({ \"max\": value });\n        },\n\n        setOptions: function(options) {\n            Widget.fn.setOptions.call(this, options);\n            this._sliderItemsInit();\n            this._refresh();\n        },\n\n        destroy: function() {\n            if (this._form) {\n                this._form.off(\"reset\", this._formResetHandler);\n            }\n            Widget.fn.destroy.call(this);\n        }\n    });\n\n    function createWrapper(options, element, isHorizontal) {\n        var orientationCssClass = isHorizontal ? \" k-slider-horizontal\" : \" k-slider-vertical\",\n            style = options.style ? options.style : element.attr(\"style\"),\n            cssClasses = element.attr(\"class\") ? (\" \" + element.attr(\"class\")) : \"\",\n            tickPlacementCssClass = \"\";\n\n        if (options.tickPlacement == \"bottomRight\") {\n            tickPlacementCssClass = \" k-slider-bottomright\";\n        } else if (options.tickPlacement == \"topLeft\") {\n            tickPlacementCssClass = \" k-slider-topleft\";\n        }\n\n        style = style ? \" style='\" + style + \"'\" : \"\";\n\n        return \"<div class='k-slider\" + orientationCssClass + cssClasses + \"'\" + style + \">\" +\n               \"<div class='k-slider-track-wrap\" + tickPlacementCssClass +\n               \"'></div></div>\";\n    }\n\n    function createButton(options, type, isHorizontal, isRtl) {\n        var buttonIconName = \"\";\n\n        if (isHorizontal) {\n            if (type === \"increase\") {\n                buttonIconName = isRtl ? \"caret-alt-left\" : \"caret-alt-right\";\n            } else {\n                buttonIconName = isRtl ? \"caret-alt-right\" : \"caret-alt-left\";\n            }\n        } else {\n            if (type == \"increase\") {\n                buttonIconName = \"caret-alt-up\";\n            } else {\n                buttonIconName = \"caret-alt-down\";\n            }\n        }\n\n        return \"<button class='k-button k-button-md k-rounded-full k-button-solid k-button-solid-base k-icon-button k-button-\" + type + \"' \" +\n                \"title='\" + options[type + \"ButtonTitle\"] + \"' \" +\n                \"aria-label='\" + options[type + \"ButtonTitle\"] + \"'>\" +\n                    kendo.ui.icon({ icon: buttonIconName, iconClass: \"k-button-icon\" }) +\n                \"</button>\";\n    }\n\n    function createSliderItems(options, distance) {\n        var result = \"<ul class='k-reset k-slider-items' role='presentation'>\",\n            count = math.floor(round(distance / options.smallStep)) + 1,\n            i;\n\n        for (i = 0; i < count; i++) {\n            result += \"<li class='k-tick'></li>\";\n        }\n\n        result += \"</ul>\";\n\n        return result;\n    }\n\n    function createTrack(options, element, isHorizontal) {\n        var dragHandleCount = element.is(\"input\") ? 1 : 2,\n            firstDragHandleTitle = dragHandleCount == 2 ? options.leftDragHandleTitle : options.dragHandleTitle,\n            value = options.value,\n            min = options.selectionStart,\n            max = options.selectionEnd,\n            elementValue, minElementValue, maxElementValue;\n\n        if (dragHandleCount === 1) {\n            elementValue = element.val();\n\n            if (elementValue !== null && elementValue !== undefined$1 && elementValue !== 'null') {\n                if (value === null || value === undefined$1) {\n                    value = elementValue;\n                }\n            }\n        } else {\n            minElementValue = element.find(\"input\").eq(0).val();\n            maxElementValue = element.find(\"input\").eq(1).val();\n\n            if (minElementValue !== null && minElementValue !== undefined$1 && minElementValue !== 'null') {\n                if (min === null || min === undefined$1) {\n                    min = minElementValue;\n                }\n            }\n\n            if (maxElementValue !== null && maxElementValue !== undefined$1 && maxElementValue !== 'null') {\n                if (max === null || max === undefined$1) {\n                    max = maxElementValue;\n                }\n            }\n        }\n\n        var result = \"<div class='k-slider-track'><div class='k-slider-selection'><!-- --></div>\" +\n               \"<span tabindex='0' class='k-draghandle' title='\" + firstDragHandleTitle + \"' role='slider' \" +\n               (isHorizontal === false ? \"aria-orientation='vertical' \" : \"\") +\n               \"aria-valuemin='\" + options.min + \"' aria-valuemax='\" + options.max + \"' aria-valuenow='\" + (dragHandleCount > 1 ? (min || options.min) : value || options.min) + \"'></span>\" +\n               (dragHandleCount > 1 ? \"<span tabindex='0' class='k-draghandle' title='\" + options.rightDragHandleTitle + \"'role='slider' \" +\n               (isHorizontal === false ? \"aria-orientation='vertical' \" : \"\") +\n               \"aria-valuemin='\" + options.min + \"' aria-valuemax='\" + options.max + \"' aria-valuenow='\" + (max || options.max) + \"'></span>\" : \"\") +\n               \"</div>\";\n\n        return result;\n    }\n\n    function step(stepValue) {\n        return function(value) {\n            return value + stepValue;\n        };\n    }\n\n    function setValue(value) {\n        return function() {\n            return value;\n        };\n    }\n\n    function formatValue(value) {\n        return (value + \"\").replace(\".\", kendo.cultures.current.numberFormat[\".\"]);\n    }\n\n    function calculatePrecision(value) {\n        var number = value.toString();\n        var precision = 0;\n\n        number = number.split(\".\");\n\n        if (number[1]) {\n            precision = number[1].length;\n        }\n\n        precision = precision > 10 ? 10 : precision;\n        return precision;\n    }\n\n    function round(value) {\n        var precision, power;\n\n        value = parseFloat(value, 10);\n        precision = calculatePrecision(value);\n        power = math.pow(10, precision || 0);\n\n        return math.round(value * power) / power;\n    }\n\n    function parseAttr(element, name) {\n        var value = parse(element.getAttribute(name));\n        if (value === null) {\n            value = undefined$1;\n        }\n        return value;\n    }\n\n    function defined(value) {\n        return typeof value !== UNDEFINED;\n    }\n\n    function removeFraction(value) {\n        return value * 10000;\n    }\n\n    var Slider = SliderBase.extend({\n        init: function(element, options) {\n            var that = this,\n                dragHandle;\n\n            element.type = \"text\";\n            options = extend({}, {\n                value: parseAttr(element, \"value\"),\n                min: parseAttr(element, \"min\"),\n                max: parseAttr(element, \"max\"),\n                smallStep: parseAttr(element, \"step\")\n            }, options);\n\n            element = $(element);\n\n            if (options && options.enabled === undefined$1) {\n                options.enabled = !element.is(\"[disabled]\");\n            }\n\n            SliderBase.fn.init.call(that, element, options);\n            options = that.options;\n            if (!defined(options.value) || options.value === null) {\n                options.value = options.min;\n                element.prop(\"value\", formatValue(options.min));\n            }\n            options.value = math.max(math.min(options.value, options.max), options.min);\n\n            dragHandle = that.wrapper.find(DRAG_HANDLE);\n\n            that._selection = new Slider.Selection(dragHandle, that, options);\n            that._drag = new Slider.Drag(dragHandle, \"\", that, options);\n\n            that._refreshAriaAttr(options.value);\n        },\n\n        options: {\n            name: \"Slider\",\n            showButtons: true,\n            increaseButtonTitle: \"Increase\",\n            decreaseButtonTitle: \"Decrease\",\n            dragHandleTitle: \"drag\",\n            tooltip: { format: \"{0:#,#.##}\" },\n            value: null\n        },\n\n        enable: function(enable) {\n            var that = this,\n                options = that.options,\n                clickHandler,\n                move;\n\n            that.disable();\n            if (enable === false) {\n                return;\n            }\n\n            that.wrapper\n                .removeClass(STATE_DISABLED);\n\n            that.wrapper.find(\"input\").prop(DISABLED, false);\n\n            clickHandler = function(e) {\n                var touch = getTouches(e)[0];\n\n                if (!touch) {\n                    return;\n                }\n\n                var mousePosition = that._isHorizontal ? touch.location.pageX : touch.location.pageY,\n                    draggableArea = that._getDraggableArea(),\n                    target = $(e.target);\n\n                if (target.hasClass(\"k-draghandle\")) {\n                    target.addClass(STATE_FOCUSED + \" \" + STATE_SELECTED);\n                    return;\n                }\n\n                that._update(that._getValueFromPosition(mousePosition, draggableArea));\n\n                that._focusWithMouse(e.target);\n\n                that._drag.dragstart(e);\n                e.preventDefault();\n            };\n\n            that.wrapper\n                .find(TICK_SELECTOR + \", \" + TRACK_SELECTOR)\n                    .on(TRACK_MOUSE_DOWN, clickHandler)\n                    .end()\n                    .on(TRACK_MOUSE_DOWN, function() {\n                        $(document.documentElement).one(\"selectstart\", kendo.preventDefault);\n                    })\n                    .on(TRACK_MOUSE_UP, function() {\n                        that._drag._end();\n                    });\n\n            that.wrapper\n                .find(DRAG_HANDLE)\n                .attr(TABINDEX, 0)\n                .on(MOUSE_UP, function() {\n                    that._setTooltipTimeout();\n                })\n                .on(CLICK, function(e) {\n                    that._focusWithMouse(e.target);\n                    e.preventDefault();\n                })\n                .on(FOCUS, that._focus.bind(that))\n                .on(BLUR, that._blur.bind(that));\n\n            move = (function(sign) {\n                var newVal = that._nextValueByIndex(that._valueIndex + (sign * 1));\n                that._setValueInRange(newVal);\n                that._drag._updateTooltip(newVal);\n            });\n\n            if (options.showButtons) {\n                var mouseDownHandler = (function(e, sign) {\n                    this._clearTooltipTimeout();\n                    if (e.which === 1 || (support.touch && e.which === 0)) {\n                        move(sign);\n\n                        this.timeout = setTimeout((function() {\n                            this.timer = setInterval(function() {\n                                move(sign);\n                            }, 60);\n                        }).bind(this), 200);\n                    }\n                }).bind(that);\n\n                that.wrapper.find(\".k-button\")\n                    .on(MOUSE_UP, (function(e) {\n                        this._clearTimer();\n                        that._focusWithMouse(e.target);\n                    }).bind(that))\n                    .on(MOUSE_OVER, function(e) {\n                        $(e.currentTarget).addClass(\"k-hover\");\n                    })\n                    .on(\"mouseout\" + NS, (function(e) {\n                        $(e.currentTarget).removeClass(\"k-hover\");\n                        this._clearTimer();\n                    }).bind(that))\n                    .on(MOUSE_DOWN, (function(e) {\n                        var sign = $(e.target).closest(\".k-button\").is(\".k-button-increase\") ? 1 : -1;\n                        mouseDownHandler(e, sign);\n                    }))\n                    .on(\"click\", kendo.preventDefault);\n            }\n\n            that.wrapper\n                .find(DRAG_HANDLE)\n                .off(KEY_DOWN, false)\n                .on(KEY_DOWN, this._keydown.bind(that));\n\n            options.enabled = true;\n        },\n\n        disable: function() {\n            var that = this;\n\n            that.wrapper\n                .addClass(STATE_DISABLED);\n\n            $(that.element).prop(DISABLED, DISABLED);\n\n            that.wrapper\n                .find(\".k-button\")\n                .off(MOUSE_DOWN)\n                .on(MOUSE_DOWN, function(e) {\n                    e.preventDefault();\n                    $(this).addClass(\"k-active\");\n                })\n                .off(MOUSE_UP)\n                .on(MOUSE_UP, function(e) {\n                    e.preventDefault();\n                    $(this).removeClass(\"k-active\");\n                })\n                .off(\"mouseleave\" + NS)\n                .on(\"mouseleave\" + NS, kendo.preventDefault)\n                .off(MOUSE_OVER)\n                .on(MOUSE_OVER, kendo.preventDefault);\n\n            that.wrapper\n                .find(TICK_SELECTOR + \", \" + TRACK_SELECTOR).off(TRACK_MOUSE_DOWN).off(TRACK_MOUSE_UP);\n\n            that.wrapper\n                .find(DRAG_HANDLE)\n                .attr(TABINDEX, -1)\n                .off(MOUSE_UP)\n                .off(KEY_DOWN)\n                .off(CLICK)\n                .off(FOCUS)\n                .off(BLUR);\n\n            that.options.enabled = false;\n        },\n\n        _update: function(val) {\n            var that = this,\n                change = that.value() != val;\n\n            that.value(val);\n\n            if (change) {\n                that.trigger(CHANGE, { value: that.options.value });\n            }\n        },\n\n        value: function(value) {\n            var that = this,\n                options = that.options;\n\n            value = round(value);\n            if (isNaN(value)) {\n                return options.value;\n            }\n\n            if (value >= options.min && value <= options.max) {\n                if (options.value != value) {\n                    that.element.prop(\"value\", formatValue(value));\n                    options.value = value;\n                    that._refreshAriaAttr(value);\n                    that._refresh();\n                }\n            }\n        },\n\n        _refresh: function() {\n            this.trigger(MOVE_SELECTION, { value: this.options.value });\n        },\n\n        _refreshAriaAttr: function(value) {\n            var that = this,\n                drag = that._drag,\n                formattedValue;\n\n            if (drag && drag._tooltipDiv) {\n                formattedValue = drag._tooltipDiv.text();\n            } else {\n                formattedValue = that._getFormattedValue(value, null);\n            }\n            this.wrapper.find(DRAG_HANDLE).attr(ARIA_VALUENOW, value).attr(ARIA_VALUETEXT, formattedValue);\n        },\n\n        _clearTimer: function() {\n            clearTimeout(this.timeout);\n            clearInterval(this.timer);\n        },\n\n        _keydown: function(e) {\n            var that = this;\n\n            if (e.keyCode in that._keyMap) {\n                that._clearTooltipTimeout();\n                that._setValueInRange(that._keyMap[e.keyCode](that.options.value));\n                that._drag._updateTooltip(that.value());\n                e.preventDefault();\n            }\n        },\n\n        _setValueInRange: function(val) {\n            var that = this,\n                options = that.options;\n\n            val = round(val);\n            if (isNaN(val)) {\n                that._update(options.min);\n                return;\n            }\n\n            val = math.max(math.min(val, options.max), options.min);\n            that._update(val);\n        },\n\n        _nextValueByIndex: function(index) {\n            var count = this._values.length;\n\n            return this._values[math.max(0, math.min(index, count - 1))];\n        },\n\n        _formResetHandler: function() {\n            var that = this,\n                min = that.options.min;\n\n            setTimeout(function() {\n                var value = that.element[0].value;\n                that.value(value === \"\" || isNaN(value) ? min : value);\n            });\n        },\n\n        destroy: function() {\n            var that = this;\n\n            SliderBase.fn.destroy.call(that);\n\n            that.wrapper.off(NS)\n                .find(\".k-button\").off(NS)\n                .end()\n                .find(DRAG_HANDLE).off(NS)\n                .end()\n                .find(TICK_SELECTOR + \", \" + TRACK_SELECTOR).off(NS)\n                .end();\n\n            that._drag.draggable.destroy();\n            that._drag._removeTooltip(true);\n        }\n    });\n\n    Slider.Selection = function(dragHandle, that, options) {\n        function moveSelection(val) {\n            var selectionValue = val - options.min,\n                index = that._valueIndex = math.ceil(round(selectionValue / options.smallStep)),\n                selection = parseInt(that._pixelSteps[index], 10),\n                selectionDiv = that._trackDiv.find(\".k-slider-selection\");\n\n            selectionDiv[that._sizeFn](selection);\n            dragHandle.css(that._position, selection);\n        }\n\n        moveSelection(options.value);\n\n        that.bind([SLIDE, MOVE_SELECTION], function(e) {\n            moveSelection(parseFloat(e.value, 10));\n        });\n\n        that.bind(CHANGE, function(e) {\n            moveSelection(parseFloat(e.sender.value(), 10));\n        });\n    };\n\n    Slider.Drag = function(element, type, owner, options) {\n        var that = this;\n        that.owner = owner;\n        that.options = options;\n        that.element = element;\n        that.type = type;\n\n        that.draggable = new Draggable(element, {\n            distance: 0,\n            dragstart: that._dragstart.bind(that),\n            drag: that.drag.bind(that),\n            dragend: that.dragend.bind(that),\n            dragcancel: that.dragcancel.bind(that)\n        });\n\n        element.click(false);\n\n        // Disable link dragging\n        element.on(\"dragstart\", function(e) {\n            e.preventDefault();\n        });\n    };\n\n    Slider.Drag.prototype = {\n        dragstart: function(e) {\n            // add reference to the last active drag handle.\n            this.owner._activeDragHandle = this;\n            // HACK to initiate click on the line\n            this.draggable.userEvents.cancel();\n            this._dragstart(e);\n            this.dragend();\n        },\n\n        _dragstart: function(e) {\n            var that = this,\n                owner = that.owner,\n                options = that.options;\n\n            if (!options.enabled) {\n                e.preventDefault();\n                return;\n            }\n\n            // add reference to the last active drag handle.\n            this.owner._activeDragHandle = this;\n\n            owner.element.off(MOUSE_OVER);\n            owner.wrapper.find(\".\" + STATE_FOCUSED).removeClass(STATE_FOCUSED + \" \" + STATE_SELECTED);\n            that.element.addClass(STATE_FOCUSED + \" \" + STATE_SELECTED);\n            $(document.documentElement).css(\"cursor\", \"pointer\");\n\n            that.draggableArea = owner._getDraggableArea();\n            that.step = math.max(options.smallStep * (owner._maxSelection / owner._distance()), 0);\n\n            if (that.type) {\n                that.selectionStart = options.selectionStart;\n                that.selectionEnd = options.selectionEnd;\n                owner._setZIndex(that.type);\n            } else {\n                that.oldVal = that.val = options.value;\n            }\n\n            that._removeTooltip(true);\n            that._createTooltip();\n        },\n\n        _createTooltip: function() {\n            var that = this,\n                owner = that.owner,\n                tooltip = that.options.tooltip,\n                html = '',\n                wnd = $(window),\n                tooltipTemplate, calloutCssClass;\n\n            if (!tooltip.enabled) {\n                return;\n            }\n\n            if (tooltip.template) {\n                tooltipTemplate = that.tooltipTemplate = kendo.template(tooltip.template);\n            }\n\n            $(\".k-slider-tooltip\").remove(); // if user changes window while tooltip is visible, a second one will be created\n            that.tooltipDiv = $(\"<div role='tooltip' class='k-tooltip k-slider-tooltip'><!-- --></div>\").appendTo(document.body);\n\n            html = owner._getFormattedValue(that.val || owner.value(), that);\n\n            if (!that.type) {\n                calloutCssClass = \"k-callout-\" + (owner._isHorizontal ? 's' : 'e');\n                that.tooltipInnerDiv = \"<div class='k-callout \" + calloutCssClass + \"'><!-- --></div>\";\n                html += that.tooltipInnerDiv;\n            }\n\n            that.tooltipDiv.html(html);\n\n            that._scrollOffset = {\n                top: wnd.scrollTop(),\n                left: kendo.scrollLeft(wnd)\n            };\n\n            that.moveTooltip();\n        },\n\n        drag: function(e) {\n            var that = this,\n                owner = that.owner,\n                x = e.x.location,\n                y = e.y.location,\n                startPoint = that.draggableArea.startPoint,\n                endPoint = that.draggableArea.endPoint,\n                slideParams;\n\n            e.preventDefault();\n\n            if (owner._isHorizontal) {\n                if (owner._isRtl) {\n                    that.val = that.constrainValue(x, startPoint, endPoint, x < endPoint);\n                } else {\n                    that.val = that.constrainValue(x, startPoint, endPoint, x >= endPoint);\n                }\n            } else {\n                that.val = that.constrainValue(y, endPoint, startPoint, y <= endPoint);\n            }\n\n            if (that.oldVal != that.val) {\n                that.oldVal = that.val;\n\n                if (that.type) {\n                    if (that.type == \"firstHandle\") {\n                        if (that.val < that.selectionEnd) {\n                            that.selectionStart = that.val;\n                        } else {\n                            that.selectionStart = that.selectionEnd = that.val;\n                        }\n                    } else {\n                        if (that.val > that.selectionStart) {\n                            that.selectionEnd = that.val;\n                        } else {\n                            that.selectionStart = that.selectionEnd = that.val;\n                        }\n                    }\n                    slideParams = {\n                        values: [that.selectionStart, that.selectionEnd],\n                        value: [that.selectionStart, that.selectionEnd]\n                    };\n                } else {\n                    slideParams = { value: that.val };\n                }\n\n                owner.trigger(SLIDE, slideParams);\n            }\n            that._updateTooltip(that.val);\n        },\n\n        _updateTooltip: function(val) {\n            var that = this,\n                options = that.options,\n                tooltip = options.tooltip,\n                html = \"\";\n\n            if (!tooltip.enabled) {\n                return;\n            }\n\n            if (!that.tooltipDiv) {\n                that._createTooltip();\n            }\n\n            html = that.owner._getFormattedValue(round(val), that);\n\n            if (!that.type) {\n                html += that.tooltipInnerDiv;\n            }\n\n            that.tooltipDiv.html(html);\n            that.moveTooltip();\n        },\n\n        dragcancel: function() {\n            this.owner._refresh();\n            $(document.documentElement).css(\"cursor\", \"\");\n            return this._end();\n        },\n\n        dragend: function() {\n            var that = this,\n                owner = that.owner;\n\n            $(document.documentElement).css(\"cursor\", \"\");\n\n            if (that.type) {\n                owner._update(that.selectionStart, that.selectionEnd);\n            } else {\n                owner._update(that.val);\n                that.draggable.userEvents._disposeAll();\n            }\n\n            that.draggable.userEvents.cancel();\n            return that._end();\n        },\n\n        _end: function() {\n            var that = this,\n                owner = that.owner;\n\n            owner._focusWithMouse(that.element);\n\n            owner.element.on(MOUSE_OVER);\n\n            return false;\n        },\n\n        _removeTooltip: function(noAnimation) {\n            var that = this,\n                owner = that.owner;\n\n            if (that.tooltipDiv && owner.options.tooltip.enabled && owner.options.enabled) {\n                if (noAnimation) {\n                    that.tooltipDiv.remove();\n                    that.tooltipDiv = null;\n                } else {\n                    that.tooltipDiv.fadeOut(\"slow\", function() {\n                        $(this).remove();\n                        that.tooltipDiv = null;\n                    });\n                }\n            }\n        },\n\n        moveTooltip: function() {\n            var that = this,\n                owner = that.owner,\n                top = 0,\n                left = 0,\n                element = that.element,\n                offset = kendo.getOffset(element),\n                margin = 8,\n                viewport = $(window),\n                callout = that.tooltipDiv.find(\".k-callout\"),\n                width = outerWidth(that.tooltipDiv),\n                height = outerHeight(that.tooltipDiv),\n                dragHandles, sdhOffset, diff, anchorSize;\n\n            if (that.type) {\n                dragHandles = owner.wrapper.find(DRAG_HANDLE);\n                offset = kendo.getOffset(dragHandles.eq(0));\n                sdhOffset = kendo.getOffset(dragHandles.eq(1));\n\n                if (owner._isHorizontal) {\n                    top = sdhOffset.top;\n                    left = offset.left + ((sdhOffset.left - offset.left) / 2);\n                } else {\n                    top = offset.top + ((sdhOffset.top - offset.top) / 2);\n                    left = sdhOffset.left;\n                }\n\n                anchorSize = outerWidth(dragHandles.eq(0)) + 2 * margin;\n            } else {\n                top = offset.top;\n                left = offset.left;\n                anchorSize = outerWidth(element) + 2 * margin;\n            }\n\n            if (owner._isHorizontal) {\n                left -= parseInt((width - owner._outerSize(element)) / 2, 10);\n                top -= height + margin + (callout.length ? callout.height() : 0);\n            } else {\n                top -= parseInt((height - owner._outerSize(element)) / 2, 10);\n                left -= width + margin + (callout.length ? callout.width() : 0);\n            }\n\n            if (owner._isHorizontal) {\n                diff = that._flip(top, height, anchorSize, outerHeight(viewport) + that._scrollOffset.top);\n                top += diff;\n                left += that._fit(left, width, outerWidth(viewport) + that._scrollOffset.left);\n            } else {\n                diff = that._flip(left, width, anchorSize, outerWidth(viewport) + that._scrollOffset.left);\n                top += that._fit(top, height, outerHeight(viewport) + that._scrollOffset.top);\n                left += diff;\n            }\n\n            if (diff > 0 && callout) {\n                callout.removeClass();\n                callout.addClass(\"k-callout k-callout-\" + (owner._isHorizontal ? \"n\" : \"w\"));\n            }\n\n            that.tooltipDiv.css({ top: top, left: left });\n        },\n\n        _fit: function(position, size, viewPortEnd) {\n            var output = 0;\n\n            if (position + size > viewPortEnd) {\n                output = viewPortEnd - (position + size);\n            }\n\n            if (position < 0) {\n                output = -position;\n            }\n\n            return output;\n        },\n\n        _flip: function(offset, size, anchorSize, viewPortEnd) {\n            var output = 0;\n\n            if (offset + size > viewPortEnd) {\n                output += -(anchorSize + size);\n            }\n\n            if (offset + output < 0) {\n                output += anchorSize + size;\n            }\n\n            return output;\n        },\n\n        constrainValue: function(position, min, max, maxOverflow) {\n            var that = this,\n                val = 0;\n\n            if (min < position && position < max) {\n                val = that.owner._getValueFromPosition(position, that.draggableArea);\n            } else {\n                if (maxOverflow ) {\n                    val = that.options.max;\n                } else {\n                    val = that.options.min;\n                }\n            }\n\n            return val;\n        }\n\n    };\n\n    kendo.ui.plugin(Slider);\n\n    var RangeSlider = SliderBase.extend({\n        init: function(element, options) {\n            var that = this,\n                inputs = $(element).find(\"input\"),\n                firstInput = inputs.eq(0)[0],\n                secondInput = inputs.eq(1)[0];\n\n            firstInput.type = \"text\";\n            secondInput.type = \"text\";\n\n            if (options && options.showButtons) {\n                if (window.console) {\n                    window.console.warn(\"showbuttons option is not supported for the range slider, ignoring\");\n                }\n\n                options.showButtons = false;\n            }\n\n            options = extend({}, {\n                selectionStart: parseAttr(firstInput, \"value\"),\n                min: parseAttr(firstInput, \"min\"),\n                max: parseAttr(firstInput, \"max\"),\n                smallStep: parseAttr(firstInput, \"step\")\n            }, {\n                selectionEnd: parseAttr(secondInput, \"value\"),\n                min: parseAttr(secondInput, \"min\"),\n                max: parseAttr(secondInput, \"max\"),\n                smallStep: parseAttr(secondInput, \"step\")\n            }, options);\n\n            if (options && options.enabled === undefined$1) {\n                options.enabled = !inputs.is(\"[disabled]\");\n            }\n\n            SliderBase.fn.init.call(that, element, options);\n            options = that.options;\n            if (!defined(options.selectionStart) || options.selectionStart === null) {\n                options.selectionStart = options.min;\n                inputs.eq(0).prop(\"value\", formatValue(options.min));\n            }\n\n            if (!defined(options.selectionEnd) || options.selectionEnd === null) {\n                options.selectionEnd = options.max;\n                inputs.eq(1).prop(\"value\", formatValue(options.max));\n            }\n\n            var dragHandles = that.wrapper.find(DRAG_HANDLE);\n\n            this._selection = new RangeSlider.Selection(dragHandles, that, options);\n            that._firstHandleDrag = new Slider.Drag(dragHandles.eq(0), \"firstHandle\", that, options);\n            that._lastHandleDrag = new Slider.Drag(dragHandles.eq(1), \"lastHandle\" , that, options);\n\n            that._refreshAriaAttr(options.selectionStart , options.selectionEnd);\n        },\n\n        options: {\n            name: \"RangeSlider\",\n            leftDragHandleTitle: \"drag\",\n            rightDragHandleTitle: \"drag\",\n            tooltip: { format: \"{0:#,#.##}\" },\n            selectionStart: null,\n            selectionEnd: null\n        },\n\n        enable: function(enable) {\n            var that = this,\n                options = that.options,\n                clickHandler;\n\n            that.disable();\n            if (enable === false) {\n                return;\n            }\n\n            that.wrapper\n                .removeClass(STATE_DISABLED);\n\n            that.wrapper.find(\"input\").prop(DISABLED, false);\n\n            clickHandler = function(e) {\n                var touch = getTouches(e)[0];\n\n                if (!touch) {\n                    return;\n                }\n\n                var mousePosition = that._isHorizontal ? touch.location.pageX : touch.location.pageY,\n                    draggableArea = that._getDraggableArea(),\n                    val = that._getValueFromPosition(mousePosition, draggableArea),\n                    target = $(e.target),\n                    from, to, drag;\n\n                if (target.hasClass(\"k-draghandle\")) {\n                    that.wrapper.find(\".\" + STATE_FOCUSED).removeClass(STATE_FOCUSED + \" \" + STATE_SELECTED);\n                    target.addClass(STATE_FOCUSED + \" \" + STATE_SELECTED);\n                    return;\n                }\n\n                if (val < options.selectionStart) {\n                    from = val;\n                    to = options.selectionEnd;\n                    drag = that._firstHandleDrag;\n                } else if (val > that.selectionEnd) {\n                    from = options.selectionStart;\n                    to = val;\n                    drag = that._lastHandleDrag;\n                } else {\n                    if (val - options.selectionStart <= options.selectionEnd - val) {\n                        from = val;\n                        to = options.selectionEnd;\n                        drag = that._firstHandleDrag;\n                    } else {\n                        from = options.selectionStart;\n                        to = val;\n                        drag = that._lastHandleDrag;\n                    }\n                }\n\n                drag.dragstart(e);\n                that._setValueInRange(from, to);\n                that._focusWithMouse(drag.element);\n            };\n\n            that.wrapper\n                .find(TICK_SELECTOR + \", \" + TRACK_SELECTOR)\n                    .on(TRACK_MOUSE_DOWN, clickHandler)\n                    .end()\n                    .on(TRACK_MOUSE_DOWN, function() {\n                        $(document.documentElement).one(\"selectstart\", kendo.preventDefault);\n                    })\n                    .on(TRACK_MOUSE_UP, function() {\n                        if (that._activeDragHandle) {\n                            that._activeDragHandle._end();\n                        }\n                    });\n\n            that.wrapper\n                .find(DRAG_HANDLE)\n                .attr(TABINDEX, 0)\n                .on(MOUSE_UP, function() {\n                    that._setTooltipTimeout();\n                })\n                .on(CLICK, function(e) {\n                    that._focusWithMouse(e.target);\n                    e.preventDefault();\n                })\n                .on(FOCUS, that._focus.bind(that))\n                .on(BLUR, that._blur.bind(that));\n\n            that.wrapper.find(DRAG_HANDLE)\n                .off(KEY_DOWN, kendo.preventDefault)\n                .eq(0).on(KEY_DOWN,\n                    (function(e) {\n                        this._keydown(e, \"firstHandle\");\n                    }).bind(that)\n                )\n                .end()\n                .eq(1).on(KEY_DOWN,\n                    (function(e) {\n                        this._keydown(e, \"lastHandle\");\n                    }).bind(that)\n                );\n\n            that.options.enabled = true;\n        },\n\n        disable: function() {\n            var that = this;\n\n            that.wrapper\n                .addClass(STATE_DISABLED);\n\n            that.wrapper.find(\"input\").prop(DISABLED, DISABLED);\n\n            that.wrapper\n                .find(TICK_SELECTOR + \", \" + TRACK_SELECTOR).off(TRACK_MOUSE_DOWN).off(TRACK_MOUSE_UP);\n\n            that.wrapper\n                .find(DRAG_HANDLE)\n                .attr(TABINDEX, -1)\n                .off(MOUSE_UP)\n                .off(KEY_DOWN)\n                .off(CLICK)\n                .off(FOCUS)\n                .off(BLUR);\n\n            that.options.enabled = false;\n        },\n\n        _keydown: function(e, handle) {\n            var that = this,\n                selectionStartValue = that.options.selectionStart,\n                selectionEndValue = that.options.selectionEnd,\n                dragSelectionStart,\n                dragSelectionEnd,\n                activeHandleDrag;\n\n            if (e.keyCode in that._keyMap) {\n\n                that._clearTooltipTimeout();\n\n                if (handle == \"firstHandle\") {\n                    activeHandleDrag = that._activeHandleDrag = that._firstHandleDrag;\n                    selectionStartValue = that._keyMap[e.keyCode](selectionStartValue);\n\n                    if (selectionStartValue > selectionEndValue) {\n                        selectionEndValue = selectionStartValue;\n                    }\n                } else {\n                    activeHandleDrag = that._activeHandleDrag = that._lastHandleDrag;\n                    selectionEndValue = that._keyMap[e.keyCode](selectionEndValue);\n\n                    if (selectionStartValue > selectionEndValue) {\n                        selectionStartValue = selectionEndValue;\n                    }\n                }\n\n                that._setValueInRange(round(selectionStartValue), round(selectionEndValue));\n\n                dragSelectionStart = Math.max(selectionStartValue, that.options.selectionStart);\n                dragSelectionEnd = Math.min(selectionEndValue, that.options.selectionEnd);\n\n                activeHandleDrag.selectionEnd = Math.max(dragSelectionEnd, that.options.selectionStart);\n                activeHandleDrag.selectionStart = Math.min(dragSelectionStart, that.options.selectionEnd);\n\n                activeHandleDrag._updateTooltip(that.value()[that._activeHandle]);\n\n                e.preventDefault();\n            }\n        },\n\n        _update: function(selectionStart, selectionEnd) {\n            var that = this,\n                values = that.value();\n\n            var change = values[0] != selectionStart || values[1] != selectionEnd;\n\n            that.value([selectionStart, selectionEnd]);\n\n            if (change) {\n                that.trigger(CHANGE, {\n                    values: [selectionStart, selectionEnd],\n                    value: [selectionStart, selectionEnd]\n                });\n            }\n        },\n\n        value: function(value) {\n            if (value && value.length) {\n                return this._value(value[0], value[1]);\n            } else {\n                return this._value();\n            }\n        },\n\n        _value: function(start, end) {\n            var that = this,\n                options = that.options,\n                selectionStart = options.selectionStart,\n                selectionEnd = options.selectionEnd;\n\n            if (isNaN(start) && isNaN(end)) {\n                return [selectionStart, selectionEnd];\n            } else {\n                start = round(start);\n                end = round(end);\n            }\n\n            if (start >= options.min && start <= options.max &&\n                end >= options.min && end <= options.max && start <= end) {\n                if (selectionStart != start || selectionEnd != end) {\n                    that.element.find(\"input\")\n                        .eq(0).prop(\"value\", formatValue(start))\n                        .end()\n                        .eq(1).prop(\"value\", formatValue(end));\n\n                    options.selectionStart = start;\n                    options.selectionEnd = end;\n                    that._refresh();\n                    that._refreshAriaAttr(start, end);\n                }\n            }\n        },\n\n        values: function(start, end) {\n            if (isArray(start)) {\n                return this._value(start[0], start[1]);\n            } else {\n                return this._value(start, end);\n            }\n        },\n\n        _refresh: function() {\n            var that = this,\n                options = that.options;\n\n            that.trigger(MOVE_SELECTION, {\n                values: [options.selectionStart, options.selectionEnd],\n                value: [options.selectionStart, options.selectionEnd]\n            });\n\n            if (options.selectionStart == options.max && options.selectionEnd == options.max) {\n                that._setZIndex(\"firstHandle\");\n            }\n        },\n\n        _refreshAriaAttr: function(start, end) {\n            var that = this,\n                dragHandles = that.wrapper.find(DRAG_HANDLE),\n                drag = that._activeHandleDrag,\n                formattedValue;\n\n            formattedValue = that._getFormattedValue([start, end], drag);\n\n            dragHandles.eq(0).attr(ARIA_VALUENOW, start);\n            dragHandles.eq(1).attr(ARIA_VALUENOW, end);\n            dragHandles.attr(ARIA_VALUETEXT, formattedValue);\n        },\n\n        _setValueInRange: function(selectionStart, selectionEnd) {\n            var options = this.options;\n\n            selectionStart = math.max(math.min(selectionStart, options.max), options.min);\n\n            selectionEnd = math.max(math.min(selectionEnd, options.max), options.min);\n\n            if (selectionStart == options.max && selectionEnd == options.max) {\n                this._setZIndex(\"firstHandle\");\n            }\n\n            this._update(math.min(selectionStart, selectionEnd), math.max(selectionStart, selectionEnd));\n        },\n\n        _setZIndex: function(type) {\n            this.wrapper.find(DRAG_HANDLE).each(function(index) {\n                $(this).css(\"z-index\", type == \"firstHandle\" ? 1 - index : index);\n            });\n        },\n\n        _formResetHandler: function() {\n            var that = this,\n                options = that.options;\n\n            setTimeout(function() {\n                var inputs = that.element.find(\"input\");\n                var start = inputs[0].value;\n                var end = inputs[1].value;\n                that.values(start === \"\" || isNaN(start) ? options.min : start, end === \"\" || isNaN(end) ? options.max : end);\n            });\n        },\n\n        destroy: function() {\n            var that = this;\n\n            SliderBase.fn.destroy.call(that);\n\n            that.wrapper.off(NS)\n                .find(TICK_SELECTOR + \", \" + TRACK_SELECTOR).off(NS)\n                .end()\n                .find(DRAG_HANDLE).off(NS);\n\n            that._firstHandleDrag.draggable.destroy();\n            that._lastHandleDrag.draggable.destroy();\n        }\n    });\n\n    RangeSlider.Selection = function(dragHandles, that, options) {\n        function moveSelection(value) {\n            value = value || [];\n            var selectionStartValue = value[0] - options.min,\n                selectionEndValue = value[1] - options.min,\n                selectionStartIndex = math.ceil(round(selectionStartValue / options.smallStep)),\n                selectionEndIndex = math.ceil(round(selectionEndValue / options.smallStep)),\n                selectionStart = that._pixelSteps[selectionStartIndex],\n                selectionEnd = that._pixelSteps[selectionEndIndex];\n\n            dragHandles.eq(0).css(that._position, selectionStart)\n                       .end()\n                       .eq(1).css(that._position, selectionEnd);\n\n            makeSelection(selectionStart, selectionEnd);\n        }\n\n        function makeSelection(selectionStart, selectionEnd) {\n            var selection,\n                selectionPosition,\n                selectionDiv = that._trackDiv.find(\".k-slider-selection\");\n\n            selection = math.abs(selectionStart - selectionEnd);\n\n            selectionDiv[that._sizeFn](selection);\n            selectionPosition = math.min(selectionStart, selectionEnd);\n            selectionDiv.css(that._position, selectionPosition - 1);\n        }\n\n        moveSelection(that.value());\n\n        that.bind([ CHANGE, SLIDE, MOVE_SELECTION ], function(e) {\n            moveSelection(e.values);\n        });\n    };\n\n    kendo.ui.plugin(RangeSlider);\n\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.slider.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.sortable.js":
/*!**********************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.sortable.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_draganddrop_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.draganddrop.js */ \"./node_modules/kendo-ui-core/esm/kendo.draganddrop.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\nvar __meta__ = {\n    id: \"sortable\",\n    name: \"Sortable\",\n    category: \"framework\",\n    depends: [ \"draganddrop\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        Widget = kendo.ui.Widget,\n        outerWidth = kendo._outerWidth,\n        outerHeight = kendo._outerHeight,\n\n        START = \"start\",\n        BEFORE_MOVE = \"beforeMove\",\n        MOVE = \"move\",\n        END = \"end\",\n        CHANGE = \"change\",\n        CANCEL = \"cancel\",\n\n        ACTION_SORT = \"sort\",\n        ACTION_REMOVE = \"remove\",\n        ACTION_RECEIVE = \"receive\",\n\n        DEFAULT_FILTER = \">*\",\n        MISSING_INDEX = -1;\n\n    function containsOrEqualTo(parent, child) {\n        try {\n            return $.contains(parent, child) || parent == child;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    function defaultHint(element) {\n        return element.clone();\n    }\n\n    function defaultPlaceholder(element) {\n        return element.clone().removeAttr(\"id\").css(\"visibility\", \"hidden\");\n    }\n\n    var Sortable = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            if (!that.options.placeholder) {\n                that.options.placeholder = defaultPlaceholder;\n            }\n\n            if (!that.options.hint) {\n                that.options.hint = defaultHint;\n            }\n\n            that.draggable = that._createDraggable();\n        },\n\n        events: [\n            START,\n            BEFORE_MOVE,\n            MOVE,\n            END,\n            CHANGE,\n            CANCEL\n        ],\n\n        options: {\n            name: \"Sortable\",\n            hint: null,\n            placeholder: null,\n            filter: DEFAULT_FILTER,\n            holdToDrag: false,\n            disabled: null,\n            container: null,\n            connectWith: null,\n            handler: null,\n            cursorOffset: null,\n            axis: null,\n            ignore: null,\n            autoScroll: false,\n            cursor: \"auto\",\n            moveOnDragEnter: false\n        },\n\n        destroy: function() {\n            this.draggable.destroy();\n            Widget.fn.destroy.call(this);\n        },\n\n        _createDraggable: function() {\n            var that = this,\n                element = that.element,\n                options = that.options;\n\n            return new kendo.ui.Draggable(element, {\n                filter: options.filter,\n                hint: kendo.isFunction(options.hint) ? options.hint : $(options.hint),\n                holdToDrag: options.holdToDrag,\n                container: options.container ? $(options.container) : null,\n                cursorOffset: options.cursorOffset,\n                axis: options.axis,\n                ignore: options.ignore,\n                autoScroll: options.autoScroll,\n                dragstart: that._dragstart.bind(that),\n                dragcancel: that._dragcancel.bind(that),\n                drag: that._drag.bind(that),\n                dragend: that._dragend.bind(that)\n            });\n        },\n\n        _dragstart: function(e) {\n            var draggedElement = this.draggedElement = e.currentTarget,\n                disabled = this.options.disabled,\n                handler = this.options.handler,\n                _placeholder = this.options.placeholder,\n                placeholder = this.placeholder = kendo.isFunction(_placeholder) ? $(_placeholder.call(this, draggedElement)) : $(_placeholder);\n\n            if (disabled && draggedElement.is(disabled)) {\n                e.preventDefault();\n            } else if (handler && !$(e.initialTarget).is(handler)) {\n                e.preventDefault();\n            } else {\n\n                if (this.trigger(START, { item: draggedElement, draggableEvent: e })) {\n                    e.preventDefault();\n                } else {\n                    draggedElement.css(\"display\", \"none\");\n                    draggedElement.before(placeholder);\n\n                    this._setCursor();\n                }\n\n            }\n        },\n\n        _dragcancel: function() {\n            this._cancel();\n            this.trigger(CANCEL, { item: this.draggedElement });\n\n            this._resetCursor();\n        },\n\n        _drag: function(e) {\n            var draggedElement = this.draggedElement,\n                target = this._findTarget(e),\n                targetCenter,\n                cursorOffset = { left: e.x.location, top: e.y.location },\n                offsetDelta,\n                axisDelta = { x: e.x.delta, y: e.y.delta },\n                direction,\n                sibling,\n                getSibling,\n                axis = this.options.axis,\n                moveOnDragEnter = this.options.moveOnDragEnter,\n                eventData = { item: draggedElement, list: this, draggableEvent: e };\n\n            if (axis === \"x\" || axis === \"y\") {\n                this._movementByAxis(axis, cursorOffset, axisDelta[axis], eventData);\n                return;\n            }\n\n            if (target) {\n                targetCenter = this._getElementCenter(target.element);\n\n                offsetDelta = {\n                    left: Math.round(cursorOffset.left - targetCenter.left),\n                    top: Math.round(cursorOffset.top - targetCenter.top)\n                };\n\n                $.extend(eventData, { target: target.element });\n\n                if (target.appendToBottom) {\n                    this._movePlaceholder(target, null, eventData);\n                    return;\n                }\n\n                if (target.appendAfterHidden) {\n                    this._movePlaceholder(target, \"next\", eventData);\n                }\n\n                if (this._isFloating(target.element)) { //horizontal\n                    if ((axisDelta.x < 0 && moveOnDragEnter) || (!moveOnDragEnter && offsetDelta.left < 0)) {\n                        direction = \"prev\";\n                    } else if ((axisDelta.x > 0 && moveOnDragEnter) || (!moveOnDragEnter && offsetDelta.left > 0)) {\n                        direction = \"next\";\n                    }\n                } else { //vertical\n                    if ((axisDelta.y < 0 && moveOnDragEnter) || (!moveOnDragEnter && offsetDelta.top < 0)) {\n                        direction = \"prev\";\n                    } else if ((axisDelta.y > 0 && moveOnDragEnter) || (!moveOnDragEnter && offsetDelta.top > 0)) {\n                        direction = \"next\";\n                    }\n                }\n\n                if (direction) {\n                    getSibling = (direction === \"prev\") ? jQuery.fn.prev : jQuery.fn.next;\n\n                    sibling = getSibling.call(target.element);\n\n                    //find the prev/next visible sibling\n                    while (sibling.length && !sibling.is(\":visible\")) {\n                        sibling = getSibling.call(sibling);\n                    }\n\n                    if (sibling[0] != this.placeholder[0]) {\n                        this._movePlaceholder(target, direction, eventData);\n                    }\n                }\n            }\n        },\n\n        _dragend: function(e) {\n            var placeholder = this.placeholder,\n                draggedElement = this.draggedElement,\n                draggedIndex = this.indexOf(draggedElement),\n                placeholderIndex = this.indexOf(placeholder),\n                connectWith = this.options.connectWith,\n                connectedList,\n                isDefaultPrevented,\n                eventData,\n                connectedListEventData;\n\n            this._resetCursor();\n\n            eventData = {\n                action: ACTION_SORT,\n                item: draggedElement,\n                oldIndex: draggedIndex,\n                newIndex: placeholderIndex,\n                draggableEvent: e\n            };\n\n            if (placeholderIndex >= 0) {\n                isDefaultPrevented = this.trigger(END, eventData);\n            } else {\n                connectedList = placeholder.parents(connectWith).getKendoSortable();\n\n                eventData.action = ACTION_REMOVE;\n                connectedListEventData = $.extend({}, eventData, {\n                    action: ACTION_RECEIVE,\n                    oldIndex: MISSING_INDEX,\n                    newIndex: connectedList.indexOf(placeholder)\n                });\n\n                isDefaultPrevented = !(!this.trigger(END, eventData) && !connectedList.trigger(END, connectedListEventData));\n            }\n\n            if (isDefaultPrevented || placeholderIndex === draggedIndex) {\n                this._cancel();\n                return;\n            }\n\n            placeholder.replaceWith(draggedElement);\n\n            draggedElement.show();\n            this.draggable.dropped = true;\n\n            eventData = {\n                action: this.indexOf(draggedElement) != MISSING_INDEX ? ACTION_SORT : ACTION_REMOVE,\n                item: draggedElement,\n                oldIndex: draggedIndex,\n                newIndex: this.indexOf(draggedElement),\n                draggableEvent: e\n            };\n\n            this.trigger(CHANGE, eventData);\n\n            if (connectedList) {\n                connectedListEventData = $.extend({}, eventData, {\n                    action: ACTION_RECEIVE,\n                    oldIndex: MISSING_INDEX,\n                    newIndex: connectedList.indexOf(draggedElement)\n                });\n\n                connectedList.trigger(CHANGE, connectedListEventData);\n            }\n\n        },\n\n        _findTarget: function(e) {\n            var element = this._findElementUnderCursor(e),\n                items,\n                connectWith = this.options.connectWith,\n                node;\n\n            if ($.contains(this.element[0], element)) { //the element is part of the sortable container\n                items = this.items();\n                node = items.filter(element)[0] || items.has(element)[0];\n\n                return node ? { element: $(node), sortable: this } : null;\n            } else if (this.element[0] == element && this._isEmpty()) {\n                return { element: this.element, sortable: this, appendToBottom: true };\n            } else if (this.element[0] == element && this._isLastHidden()) {\n                node = this.items().eq(0);\n                return { element: node , sortable: this, appendAfterHidden: true };\n            } else if (connectWith) { //connected lists are present\n                return this._searchConnectedTargets(element, e);\n            }\n        },\n\n        _findElementUnderCursor: function(e) {\n            var elementUnderCursor = kendo.elementUnderCursor(e),\n                draggable = e.sender;\n\n            if (containsOrEqualTo(draggable.hint[0], elementUnderCursor)) {\n                draggable.hint.hide();\n                elementUnderCursor = kendo.elementUnderCursor(e);\n                // IE8 does not return the element in iframe from first attempt\n                if (!elementUnderCursor) {\n                    elementUnderCursor = kendo.elementUnderCursor(e);\n                }\n                draggable.hint.show();\n            }\n\n            return elementUnderCursor;\n        },\n\n        _searchConnectedTargets: function(element, e) {\n            var connected = $(this.options.connectWith),\n                sortableInstance,\n                items,\n                node;\n\n            for (var i = 0; i < connected.length; i++) {\n                sortableInstance = connected.eq(i).getKendoSortable();\n\n                if ($.contains(connected[i], element)) {\n                    if (sortableInstance) {\n                        items = sortableInstance.items();\n                        node = items.filter(element)[0] || items.has(element)[0];\n\n                        if (node) {\n                            sortableInstance.placeholder = this.placeholder;\n                            return { element: $(node), sortable: sortableInstance };\n                        } else {\n                            return null;\n                        }\n                    }\n                } else if (connected[i] == element) {\n                    if (sortableInstance && sortableInstance._isEmpty()) {\n                        return { element: connected.eq(i), sortable: sortableInstance, appendToBottom: true };\n                    } else if (this._isCursorAfterLast(sortableInstance, e)) {\n                        node = sortableInstance.items().last();\n                        return { element: node, sortable: sortableInstance };\n                    }\n                }\n            }\n\n        },\n\n        _isCursorAfterLast: function(sortable, e) {\n            var lastItem = sortable.items().last(),\n                cursorOffset = { left: e.x.location, top: e.y.location },\n                lastItemOffset,\n                delta;\n\n            lastItemOffset = kendo.getOffset(lastItem);\n            lastItemOffset.top += outerHeight(lastItem);\n            lastItemOffset.left += outerWidth(lastItem);\n\n            if (this._isFloating(lastItem)) { //horizontal\n                delta = lastItemOffset.left - cursorOffset.left;\n            } else { //vertical\n                delta = lastItemOffset.top - cursorOffset.top;\n            }\n\n            return delta < 0 ? true : false;\n        },\n\n        _movementByAxis: function(axis, cursorOffset, delta, eventData) {\n            var cursorPosition = (axis === \"x\") ? cursorOffset.left : cursorOffset.top,\n                target = (delta < 0) ? this.placeholder.prev() : this.placeholder.next(),\n                items = this.items(),\n                targetCenter;\n\n            if (target.length && !target.is(\":visible\")) {\n                target = (delta < 0) ? target.prev() : target.next();\n            }\n\n            if (!items.filter(target).length) {\n                return;\n            }\n\n            $.extend(eventData, { target: target });\n            targetCenter = this._getElementCenter(target);\n\n            if (targetCenter) {\n                targetCenter = (axis === \"x\") ? targetCenter.left : targetCenter.top;\n            }\n\n            if (target.length && delta < 0 && cursorPosition - targetCenter < 0) { //prev\n                this._movePlaceholder({ element: target, sortable: this }, \"prev\", eventData);\n            } else if (target.length && delta > 0 && cursorPosition - targetCenter > 0) { //next\n                this._movePlaceholder({ element: target, sortable: this }, \"next\", eventData);\n            }\n        },\n\n        _movePlaceholder: function(target, direction, eventData) {\n            var placeholder = this.placeholder;\n\n            if (!target.sortable.trigger(BEFORE_MOVE, eventData)) {\n\n                if (!direction) {\n                    target.element.append(placeholder);\n                } else if (direction === \"prev\") {\n                    target.element.before(placeholder);\n                } else if (direction === \"next\") {\n                    target.element.after(placeholder);\n                }\n\n                target.sortable.trigger(MOVE, eventData);\n            }\n        },\n\n        _setCursor: function() {\n            var cursor = this.options.cursor,\n                body;\n\n            if (cursor && cursor !== \"auto\") {\n                body = $(document.body);\n\n                this._originalCursorType = body.css(\"cursor\");\n                body.css({ \"cursor\": cursor });\n\n                if (!this._cursorStylesheet) {\n                    this._cursorStylesheet = $(\"<style>* { cursor: \" + cursor + \" !important; }</style>\");\n                }\n\n                this._cursorStylesheet.appendTo(body);\n            }\n        },\n\n        _resetCursor: function() {\n            if (this._originalCursorType) {\n                $(document.body).css(\"cursor\", this._originalCursorType);\n                this._originalCursorType = null;\n\n                this._cursorStylesheet.remove();\n            }\n        },\n\n        _getElementCenter: function(element) {\n            var center = element.length ? kendo.getOffset(element) : null;\n            if (center) {\n                center.top += outerHeight(element) / 2;\n                center.left += outerWidth(element) / 2;\n            }\n\n            return center;\n        },\n\n        _isFloating: function(item) {\n            var isFloating = /left|right/.test(item.css('float'));\n            var isTable = /inline|table-cell/.test(item.css('display'));\n            var isHorizontalFlex = /flex/.test(item.parent().css('display')) && (/row|row-reverse/.test(item.parent().css('flex-direction')) || !item.parent().css('flex-direction'));\n            return isFloating || isTable || isHorizontalFlex;\n        },\n\n        _cancel: function() {\n            if (this.draggedElement) {\n                this.draggedElement.show();\n                this.placeholder.remove();\n                this.draggable.dropped = true;\n            }\n        },\n\n        _items: function() {\n            var filter = this.options.filter,\n                items;\n\n            if (filter) {\n                items = this.element.find(filter);\n            } else {\n                items = this.element.children();\n            }\n\n            return items;\n        },\n\n        indexOf: function(element) {\n            var items = this._items(),\n                placeholder = this.placeholder,\n                draggedElement = this.draggedElement;\n\n            if (placeholder && element[0] == placeholder[0]) {\n                return items.not(draggedElement).index(element);\n            } else {\n                return items.not(placeholder).index(element);\n            }\n        },\n\n        items: function() {\n            var placeholder = this.placeholder,\n                items = this._items();\n\n            if (placeholder) {\n                items = items.not(placeholder);\n            }\n\n            return items;\n        },\n\n        _isEmpty: function() {\n            return !this.items().length;\n        },\n\n        _isLastHidden: function() {\n            return this.items().length === 1 && this.items().is(\":hidden\");\n        }\n\n    });\n\n    kendo.ui.plugin(Sortable);\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.sortable.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.splitbutton.js":
/*!*************************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.splitbutton.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_html_button_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.html.button.js */ \"./node_modules/kendo-ui-core/esm/kendo.html.button.js\");\n/* harmony import */ var _kendo_button_menu_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.button.menu.js */ \"./node_modules/kendo-ui-core/esm/kendo.button.menu.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\nvar __meta__ = {\n    id: \"splitbutton\",\n    name: \"SplitButton\",\n    category: \"web\",\n    description: \"The SplitButton allows the user to execute a default action which is bound to a Button or to choose a predefined action from a drop-down list.\",\n    depends: [\"button.menu\", \"html.button\"]\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        Widget = kendo.ui.Widget,\n        NS = \".kendoSplitButton\",\n        ui = kendo.ui,\n        extend = $.extend,\n        html = kendo.html,\n        outerWidth = kendo._outerWidth,\n        keys = kendo.keys,\n\n        DOT = \".\",\n        ID = \"id\",\n\n        ARIA_HASPOPUP = \"aria-haspopup\",\n        ARIA_DISABLED = \"aria-disabled\",\n        ARIA_CONTROLS = \"aria-controls\",\n        ARIA_LABEL = \"aria-label\",\n        ARIA_EXPANDED = \"aria-expanded\",\n\n        DISABLED = \"disabled\",\n        DISABLEDSTATE = \"k-disabled\",\n        FOCUSSTATE = \"k-focus\",\n\n        CLICK = \"click\",\n        KEYDOWN = \"keydown\",\n        OPEN = \"open\",\n        CLOSE = \"close\",\n\n        FOCUS = \"focus\",\n        BLUR = \"blur\";\n\n    var cssClasses = {\n        widget: \"k-split-button k-button-group\"\n    };\n\n    var SplitButton = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            options = options || {};\n            options.enabled = options.enabled !== false && !$(element).prop(DISABLED);\n            Widget.fn.init.call(that, element, options);\n\n            that._wrapper();\n            that._renderButtons();\n            that._renderMenu();\n\n            that._enable(that.options.enabled);\n\n            that._aria();\n\n            that._attachEvents();\n\n            kendo.notify(that);\n\n            that._applyCssClasses();\n        },\n\n        options: {\n            name: \"SplitButton\",\n            enabled: true,\n            items: [],\n            rounded: \"medium\",\n            size: \"medium\",\n            fillMode: \"solid\",\n            themeColor: \"base\",\n            icon: null,\n            popup: null,\n            arrowIcon: \"caret-alt-down\",\n            messages: {\n                labelSuffix: \"splitbutton\"\n            }\n        },\n\n        events: [\n            CLICK,\n            OPEN,\n            CLOSE\n        ],\n\n        _wrapper: function() {\n            var that = this,\n                id = that.element.attr(ID) || kendo.guid(),\n                wrapperId = id + \"_wrapper\";\n\n            that.wrapper = that.element\n                .wrap(\"<div id=\\\"\" + wrapperId + \"\\\" class=\\\"\" + cssClasses.widget + \"\\\"></div>\")\n                .parent(\".k-split-button\");\n\n            that.arrowButton = $(\"<button tabindex=\\\"-1\\\" aria-label=\\\"arrow-button\\\" class=\\\"k-split-button-arrow\\\"></button>\").appendTo(that.wrapper);\n        },\n\n        _applyCssClasses: function() {\n            var that = this;\n\n            that.wrapper.addClass(that._getAppearanceClasses());\n        },\n\n        _clearCssClasses: function() {\n            var that = this;\n\n            that.wrapper.removeClass(that._getAppearanceClasses());\n        },\n\n        _getAppearanceClasses: function() {\n            var that = this,\n                widgetName = that.__proto__.options.name,\n                roundedClass = kendo.cssProperties.getValidClass({\n                    widget: widgetName,\n                    propName: \"rounded\",\n                    value: that.options.rounded\n                });\n\n            return roundedClass;\n        },\n\n        _renderButtons: function() {\n            var that = this;\n\n            that._mainButton();\n            that._arrowButton();\n        },\n\n        _mainButton: function() {\n            var that = this,\n                options = extend({}, that.options, {\n                    type: that.element.attr(\"type\") || \"button\"\n                });\n\n            delete options.click;\n\n            html.renderButton(that.element, options);\n        },\n\n        _arrowButton: function() {\n            var that = this,\n                options = extend({}, that.options, {\n                    type: \"button\",\n                    icon: that.options.arrowIcon,\n                });\n\n            delete options.text;\n            delete options.imageUrl;\n            delete options.click;\n            delete options.iconClass;\n\n            html.renderButton(that.arrowButton, options);\n        },\n\n        _aria: function() {\n            var that = this,\n                element = that.element,\n                menu = that.menu;\n\n            element.attr(ARIA_HASPOPUP, menu ? \"menu\" : null);\n            element.attr(ARIA_EXPANDED, menu ? false : null);\n            element.attr(ARIA_CONTROLS, menu ? menu.list.attr(ID) : null);\n\n            if (!element.attr(ARIA_LABEL)) {\n                element.attr(ARIA_LABEL, element.text() + \" \" + that.options.messages.labelSuffix);\n            }\n        },\n\n        _renderMenu: function() {\n            var that = this,\n                options = extend({}, that.options),\n                menu = $(\"<div></div>\");\n\n            delete options.click;\n            delete options.name;\n\n            if (!options.items.length) {\n                return;\n            }\n\n            that.menu = menu.appendTo(that.wrapper).kendoButtonMenu(extend({\n                mainButton: that.element,\n                toggleTarget: that.arrowButton,\n                menuOpen: that.menuOpenHandler.bind(that),\n                menuClose: that.menuCloseHandler.bind(that),\n                menuClick: that._click.bind(that)\n            }, options)).data(\"kendoButtonMenu\");\n        },\n\n        menuOpenHandler: function(ev) {\n            var that = this,\n                computedWidth = outerWidth(that.wrapper);\n\n            var isDefaultPrevented = that.trigger(OPEN, { target: that.element });\n            if (isDefaultPrevented) {\n                ev.preventDefault();\n                return;\n            }\n\n            ev.sender.adjustPopupWidth(computedWidth);\n            that.element.attr(ARIA_EXPANDED, true);\n        },\n\n        menuCloseHandler: function(ev) {\n            var that = this,\n                isDefaultPrevented = that.trigger(CLOSE, { target: that.element });\n\n            if (isDefaultPrevented) {\n                ev.preventDefault();\n                return;\n            }\n\n            that.element.attr(ARIA_EXPANDED, false);\n            that.element.trigger(FOCUS);\n        },\n\n        _attachEvents: function() {\n            var that = this;\n\n            that.element.on(CLICK + NS, that._click.bind(that));\n            that.element.on(KEYDOWN + NS, that._keydown.bind(that));\n            that.element.on(FOCUS + NS, that._focus.bind(that));\n            that.element.on(BLUR + NS, that._blur.bind(that));\n        },\n\n        _focus: function() {\n            this.wrapper.addClass(FOCUSSTATE);\n        },\n\n        _blur: function() {\n            this.wrapper.removeClass(FOCUSSTATE);\n        },\n\n        _click: function(ev) {\n            var that = this,\n                target = $(ev.target).closest(\".k-button\"),\n                id = target.attr(ID),\n                originalEvent = ev;\n\n            if (ev.type === \"menu-click\") {\n                id = ev.id;\n                target = ev.target;\n                originalEvent = ev.originalEvent;\n            }\n\n            that.menu.close();\n\n            that.trigger(CLICK, { id: id, target: target, originalEvent: originalEvent });\n        },\n\n        _keydown: function(ev) {\n            var that = this;\n\n            if (that.element.is(DOT + DISABLEDSTATE) && (ev.keyCode === keys.ENTER || ev.keyCode === keys.SPACEBAR)) {\n                ev.preventDefault();\n            }\n        },\n\n        focus: function() {\n            var that = this;\n            that.element.trigger(FOCUS);\n        },\n\n        _enable: function(enable, soft) {\n            this.element.add(this.arrowButton)\n                .toggleClass(DISABLEDSTATE, !enable);\n\n            if (enable) {\n                this.element.removeAttr(ARIA_DISABLED);\n            } else {\n                this.element.attr(ARIA_DISABLED, !enable);\n            }\n\n            if (!soft) {\n                this.element.attr(DISABLED, !enable);\n            }\n\n            this.arrowButton.attr(DISABLED, !enable);\n        },\n\n        enable: function(enable, menuItem, soft) {\n            var that = this;\n\n            if (enable === undefined$1) {\n                enable = true;\n            }\n\n            if (menuItem && menuItem.length) {\n                that.menu.enable(enable, menuItem);\n                return;\n            }\n\n            that.options.enabled = enable;\n\n            that._enable(enable, soft);\n            that.menu.enable(enable);\n        },\n\n        hide: function(menuItem) {\n            var that = this;\n\n            if (menuItem && menuItem.length) {\n                that.menu.hide(menuItem);\n            }\n        },\n\n        show: function(menuItem) {\n            var that = this;\n\n            if (menuItem && menuItem.length) {\n                that.menu.show(menuItem);\n            }\n        },\n\n        open: function() {\n            this.menu._popup.open();\n        },\n\n        close: function() {\n            this.menu._popup.close();\n        },\n\n        items: function() {\n            return this.menu.items();\n        },\n\n        setOptions: function(options) {\n            var that = this;\n\n            Widget.fn.setOptions.call(that, options);\n\n            if (options.popup || options.items || options.size) {\n                that.menu.destroy();\n                that._renderMenu();\n            }\n\n            that._renderButtons();\n\n            that._aria();\n        },\n\n        destroy: function() {\n            var that = this;\n\n            if (that.menu) {\n                that.menu.destroy();\n            }\n\n            that.element.off(NS);\n\n            Widget.fn.destroy.call(that);\n        }\n    });\n\n    kendo.cssProperties.registerPrefix(\"SplitButton\", \"k-splitbutton-\");\n\n    kendo.cssProperties.registerValues(\"SplitButton\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([[\"full\", \"full\"]])\n    }]);\n\n    ui.plugin(SplitButton);\n\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.splitbutton.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.splitter.js":
/*!**********************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.splitter.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_resizable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.resizable.js */ \"./node_modules/kendo-ui-core/esm/kendo.resizable.js\");\n/* harmony import */ var _kendo_icons_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.icons.js */ \"./node_modules/kendo-ui-core/esm/kendo.icons.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\nvar __meta__ = {\n    id: \"splitter\",\n    name: \"Splitter\",\n    category: \"web\",\n    description: \"The Splitter widget provides an easy way to create a dynamic layout of resizable and collapsible panes.\",\n    depends: [ \"resizable\", \"icons\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        ui = kendo.ui,\n        keys = kendo.keys,\n        extend = $.extend,\n        Widget = ui.Widget,\n        pxUnitsRegex = /^\\d+(\\.\\d+)?px$/i,\n        percentageUnitsRegex = /^\\d+(\\.\\d+)?%$/i,\n        NS = \".kendoSplitter\",\n        EXPAND = \"expand\",\n        COLLAPSE = \"collapse\",\n        CONTENTLOAD = \"contentLoad\",\n        ERROR = \"error\",\n        RESIZE = \"resize\",\n        LAYOUTCHANGE = \"layoutChange\",\n        HORIZONTAL = \"horizontal\",\n        VERTICAL = \"vertical\",\n        MOUSEENTER = \"mouseenter\",\n        CLICK = \"click\",\n        PANE = \"pane\",\n        MOUSELEAVE = \"mouseleave\",\n        FOCUSED = \"k-focus\",\n        KPANE = \"k-\" + PANE,\n        PANECLASS = \".\" + KPANE,\n        TABINDEX = \"tabindex\",\n        ARIA_VALUEMIN = \"aria-valuemin\",\n        ARIA_VALUEMAX = \"aria-valuemax\",\n        ARIA_VALUENOW = \"aria-valuenow\",\n        ARIA_CONTROLS = \"aria-controls\",\n        ARIA_LABEL = \"aria-label\",\n        ARIA_LABELLEDBY = \"aria-labelledby\",\n        ARIA_ORIENTATION = \"aria-orientation\";\n\n    function isPercentageSize(size) {\n        return percentageUnitsRegex.test(size);\n    }\n\n    function isPixelSize(size) {\n        return pxUnitsRegex.test(size) || /^\\d+$/.test(size);\n    }\n\n    function isFluid(size) {\n        return !isPercentageSize(size) && !isPixelSize(size);\n    }\n\n    function calculateSize(size, total) {\n        var output = parseInt(size, 10);\n\n        if (isPercentageSize(size)) {\n            output = Math.floor(output * total / 100);\n        }\n\n        return output;\n    }\n\n    function panePropertyAccessor(propertyName, triggersResize) {\n        return function(pane, value) {\n            var paneConfig = this.element.find(pane).data(PANE);\n\n            if (arguments.length == 1) {\n                return paneConfig[propertyName];\n            }\n\n            paneConfig[propertyName] = value;\n\n            if (triggersResize) {\n                var splitter = this.element.data(\"kendo\" + this.options.name);\n                splitter.resize(true);\n            }\n        };\n    }\n\n    var Splitter = Widget.extend({\n        init: function(element, options) {\n            var that = this,\n                isHorizontal;\n\n            Widget.fn.init.call(that, element, options);\n\n            that.wrapper = that.element;\n\n            if (that.options.orientation) {\n                isHorizontal = that.options.orientation.toLowerCase() != VERTICAL;\n            }\n\n            that.orientation = isHorizontal ? HORIZONTAL : VERTICAL;\n            that._dimension = isHorizontal ? \"width\" : \"height\";\n            that._keys = {\n                decrease: isHorizontal ? keys.LEFT : keys.UP,\n                increase: isHorizontal ? keys.RIGHT : keys.DOWN\n            };\n\n            that._resizeStep = 10;\n\n            that._marker = kendo.guid().substring(0, 8);\n\n            that._initPanes();\n\n            that.resizing = new PaneResizing(that);\n\n            that.element.triggerHandler(\"init\" + NS);\n        },\n        events: [\n            EXPAND,\n            COLLAPSE,\n            CONTENTLOAD,\n            ERROR,\n            RESIZE,\n            LAYOUTCHANGE\n        ],\n\n        _addOverlays: function() {\n            this._panes().append(\"<div class='k-splitter-overlay k-overlay' />\");\n        },\n\n        _removeOverlays: function() {\n            this._panes().children(\".k-splitter-overlay\").remove();\n        },\n\n        _attachEvents: function() {\n            var that = this,\n                orientation = that.options.orientation;\n\n            // do not use delegated events to increase performance of nested elements\n            that.element\n                .children(\".k-splitbar-draggable-\" + orientation)\n                    .on(\"keydown\" + NS, that._keydown.bind(that))\n                    .on(\"mousedown\" + NS, function(e) { e.currentTarget.focus(); })\n                    .on(\"focus\" + NS, function(e) { $(e.currentTarget).addClass(FOCUSED); })\n                    .on(\"blur\" + NS, function(e) { $(e.currentTarget).removeClass(FOCUSED);\n                        if (that.resizing) {\n                            that.resizing.end();\n                        }\n                    })\n                    .on(MOUSEENTER + NS, function() { $(this).addClass(\"k-splitbar-\" + that.orientation + \"-hover\"); })\n                    .on(MOUSELEAVE + NS, function() { $(this).removeClass(\"k-splitbar-\" + that.orientation + \"-hover\"); })\n                    .on(\"mousedown\" + NS, that._addOverlays.bind(that))\n                .end()\n                .children(\".k-splitbar\")\n                    .on(\"dblclick\" + NS, that._togglePane.bind(that))\n                    .children(\".k-collapse-next, .k-collapse-prev\").on(CLICK + NS, that._arrowClick(COLLAPSE)).end()\n                    .children(\".k-expand-next, .k-expand-prev\").on(CLICK + NS, that._arrowClick(EXPAND)).end()\n                .end();\n\n            $(window).on(\"resize\" + NS + that._marker, that.resize.bind(that, false));\n            $(document).on(\"mouseup\" + NS + that._marker, that._removeOverlays.bind(that));\n        },\n\n        _detachEvents: function() {\n            var that = this;\n\n            that.element\n                .children(\".k-splitbar-draggable-\" + that.orientation).off(NS).end()\n                .children(\".k-splitbar\").off(\"dblclick\" + NS)\n                    .children(\".k-collapse-next, .k-collapse-prev, .k-expand-next, .k-expand-prev\").off(NS);\n\n            $(window).off(NS + that._marker);\n            $(document).off(NS + that._marker);\n        },\n\n        options: {\n            name: \"Splitter\",\n            clickMoveClick: true,\n            orientation: HORIZONTAL,\n            panes: []\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            this._detachEvents();\n\n            if (this.resizing) {\n                this.resizing.destroy();\n            }\n\n            kendo.destroy(this.element);\n\n            this.wrapper = this.element = null;\n        },\n\n        _keydown: function(e) {\n            var that = this,\n                key = e.keyCode,\n                resizing = that.resizing,\n                target = $(e.currentTarget),\n                navigationKeys = that._keys,\n                increase = key === navigationKeys.increase,\n                decrease = key === navigationKeys.decrease,\n                pane;\n\n            if (increase || decrease) {\n                if (e.ctrlKey) {\n                    pane = target[decrease ? \"next\" : \"prev\"]();\n\n                    if (resizing && resizing.isResizing()) {\n                        resizing.end();\n                    }\n\n                    if (!pane[that._dimension]()) {\n                        that._triggerAction(EXPAND, pane);\n                    } else {\n                        that._triggerAction(COLLAPSE, target[decrease ? \"prev\" : \"next\"]());\n                    }\n                } else if (resizing) {\n                    resizing.move((decrease ? -1 : 1) * that._resizeStep, target);\n                }\n                e.preventDefault();\n            } else if (key === keys.HOME) {\n                pane = target.prev();\n                that.collapse(pane);\n                e.preventDefault();\n            } else if (key === keys.END) {\n                pane = target.prev();\n                that.expand(pane);\n                e.preventDefault();\n            } else if (key === keys.ENTER && resizing) {\n                resizing.end();\n                e.preventDefault();\n            }\n        },\n\n        _initPanes: function() {\n            var panesConfig = this.options.panes || [];\n            var that = this;\n\n            this.element\n                .addClass(\"k-splitter\")\n                .children()\n                    .each(function(i, pane) {\n                        if (pane.nodeName.toLowerCase() != \"script\") {\n                            that._initPane(pane, panesConfig[i]);\n                        }\n                    });\n\n            this.resize();\n        },\n\n        _initPane: function(pane, config) {\n            pane = $(pane)\n                .attr(\"role\", \"group\")\n                .addClass(KPANE);\n\n            pane.data(PANE, config ? config : {})\n                .toggleClass(\"k-scrollable\", config ? config.scrollable !== false : true);\n\n            this.ajaxRequest(pane);\n        },\n\n        ajaxRequest: function(pane, url, data) {\n            var that = this,\n                paneConfig;\n\n            pane = that.element.find(pane);\n            paneConfig = pane.data(PANE);\n\n            url = url || paneConfig.contentUrl;\n\n            if (url) {\n                pane.append(\"<span class='k-icon k-i-loading k-pane-loading' />\");\n\n                if (kendo.isLocalUrl(url)) {\n                    jQuery.ajax({\n                        url: url,\n                        data: data || {},\n                        type: \"GET\",\n                        dataType: \"html\",\n                        success: function(data) {\n                            pane.html(data);\n\n                            that.trigger(CONTENTLOAD, { pane: pane[0] });\n                        },\n                        error: function(xhr, status) {\n                            that.trigger(ERROR, {\n                                pane: pane[0],\n                                status: status,\n                                xhr: xhr\n                            });\n                        }\n                    });\n                } else {\n                    pane.removeClass(\"k-scrollable\")\n                        .html(\"<iframe src='\" + url + \"' frameborder='0' class='k-content-frame'>\" +\n                                \"This page requires frames in order to show content\" +\n                              \"</iframe>\");\n                }\n            }\n        },\n\n        _triggerAction: function(type, pane) {\n            var paneConfig = pane.data(PANE);\n            var shouldExecute = (paneConfig.collapsed && type == EXPAND) || (!paneConfig.collapsed && type == COLLAPSE);\n\n            if (!paneConfig.collapsible) {\n                return;\n            }\n\n            if (shouldExecute && !this.trigger(type, { pane: pane[0] })) {\n                this[type](pane[0]);\n            }\n        },\n\n        _togglePane: function(e) {\n            var that = this,\n                target = $(e.target),\n                arrow;\n\n            if (target.closest(\".k-splitter\")[0] != that.element[0]) {\n                return;\n            }\n\n            arrow = target.children(\"span:not(.k-resize-handle)\");\n\n            if (arrow.length !== 1) {\n                return;\n            }\n\n            if (arrow.is(\".k-collapse-prev\")) {\n                that._triggerAction(COLLAPSE, target.prev());\n            } else if (arrow.is(\".k-collapse-next\")) {\n                that._triggerAction(COLLAPSE, target.next());\n            } else if (arrow.is(\".k-expand-prev\")) {\n                that._triggerAction(EXPAND, target.prev());\n            } else if (arrow.is(\".k-expand-next\")) {\n                that._triggerAction(EXPAND, target.next());\n            }\n        },\n        _arrowClick: function(arrowType) {\n            var that = this;\n\n            return function(e) {\n                var target = $(e.currentTarget),\n                    pane;\n\n                if (target.closest(\".k-splitter\")[0] != that.element[0]) {\n                    return;\n                }\n\n                if (target.is(\".k-\" + arrowType + \"-prev\")) {\n                    pane = target.parent().prev();\n                } else {\n                    pane = target.parent().next();\n                }\n                that._triggerAction(arrowType, pane);\n            };\n        },\n        _updateSplitBar: function(splitbar, previousPane, nextPane, previousPaneEl) {\n            var catIconIf = function(actionType, iconType, condition) {\n                    var icon = iconType ? ui.icon({ icon: iconType, size: \"xsmall\" }) : \"\";\n                    return condition ? \"<span class='k-\" + actionType + \"'>\" + icon + \"</span>\" : \"\";\n                },\n                orientation = this.orientation,\n                draggable = (previousPane.resizable !== false) && (nextPane.resizable !== false),\n                prevCollapsible = previousPane.collapsible,\n                prevCollapsed = previousPane.collapsed,\n                nextCollapsible = nextPane.collapsible,\n                nextCollapsed = nextPane.collapsed,\n                previousPaneId = previousPaneEl.attr(\"id\");\n\n            if (!previousPaneId) {\n                previousPaneId = kendo.guid();\n                previousPaneEl.attr(\"id\", previousPaneId);\n            }\n\n            splitbar.addClass(\"k-splitbar k-splitbar-\" + orientation)\n                    .attr(\"role\", \"separator\")\n                    .attr(ARIA_VALUEMIN, \"0\")\n                    .attr(ARIA_VALUEMAX, \"100\")\n                    .attr(ARIA_CONTROLS, previousPaneId)\n                    .removeClass(\"k-splitbar-\" + orientation + \"-hover\")\n                    .toggleClass(\"k-splitbar-draggable-\" + orientation,\n                        draggable && !prevCollapsed && !nextCollapsed)\n                    .toggleClass(\"k-splitbar-static-\" + orientation,\n                        !draggable && !prevCollapsible && !nextCollapsible)\n                    .html(\n                        catIconIf(\"collapse-prev\", \"caret-alt-up\", prevCollapsible && !prevCollapsed && !nextCollapsed && orientation == VERTICAL) +\n                        catIconIf(\"collapse-prev\", \"caret-alt-left\", prevCollapsible && !prevCollapsed && !nextCollapsed && orientation == HORIZONTAL) +\n                        catIconIf(\"expand-prev\", \"caret-alt-down\", prevCollapsible && prevCollapsed && !nextCollapsed && orientation == VERTICAL) +\n                        catIconIf(\"expand-prev\", \"caret-alt-right\", prevCollapsible && prevCollapsed && !nextCollapsed && orientation == HORIZONTAL) +\n                        catIconIf(\"resize-handle\", null, draggable && orientation == VERTICAL) +\n                        catIconIf(\"resize-handle\", null, draggable && orientation == HORIZONTAL) +\n                        catIconIf(\"collapse-next\", \"caret-alt-down\", nextCollapsible && !nextCollapsed && !prevCollapsed && orientation == VERTICAL) +\n                        catIconIf(\"collapse-next\", \"caret-alt-right\", nextCollapsible && !nextCollapsed && !prevCollapsed && orientation == HORIZONTAL) +\n                        catIconIf(\"expand-next\", \"caret-alt-up\", nextCollapsible && nextCollapsed && !prevCollapsed && orientation == VERTICAL) +\n                        catIconIf(\"expand-next\", \"caret-alt-left\", nextCollapsible && nextCollapsed && !prevCollapsed && orientation == HORIZONTAL)\n                    );\n\n            if (previousPane.labelId) {\n                splitbar.attr(ARIA_LABELLEDBY, previousPane.labelId);\n            } else if (previousPane.label) {\n                splitbar.attr(ARIA_LABEL, previousPane.label);\n            }\n\n            if (orientation == HORIZONTAL) {\n                splitbar.attr(ARIA_ORIENTATION, VERTICAL);\n            }\n\n            if (!draggable && !prevCollapsible && !nextCollapsible) {\n                splitbar.removeAttr(TABINDEX);\n            }\n        },\n        _updateSplitBars: function() {\n            var that = this;\n\n            this.element.children(\".k-splitbar\").each(function() {\n                var splitbar = $(this),\n                    previousPaneEl = splitbar.prevAll(PANECLASS).first(),\n                    previousPane = previousPaneEl.data(PANE),\n                    nextPane = splitbar.nextAll(PANECLASS).first().data(PANE);\n\n                if (!nextPane) {\n                    return;\n                }\n\n                that._updateSplitBar(splitbar, previousPane, nextPane, previousPaneEl);\n            });\n        },\n        _removeSplitBars: function() {\n            this.element.children(\".k-splitbar\").remove();\n        },\n        _panes: function() {\n            if (!this.element) {\n                return $();\n            }\n            return this.element.children(PANECLASS);\n        },\n\n        _resetAriaValueNow: function(splitBars, panesSizes) {\n            var i, splitbar, valueNow, joinDimension;\n\n            for (i = 0; i < splitBars.length; i++) {\n                joinDimension = (panesSizes[i] + panesSizes[i + 1]) || 1;\n                valueNow = Math.round(panesSizes[i] / joinDimension * 100);\n                splitbar = splitBars[i];\n                splitbar.setAttribute(ARIA_VALUENOW, valueNow);\n            }\n        },\n\n        _resize: function() {\n            var that = this,\n                element = that.element,\n                panes = element.children(PANECLASS),\n                isHorizontal = that.orientation == HORIZONTAL,\n                splitBars = element.children(\".k-splitbar\"),\n                splitBarsCount = splitBars.length,\n                sizingProperty = isHorizontal ? \"width\" : \"height\",\n                totalSize = element[sizingProperty](),\n                panesSizes = [];\n\n            that.wrapper.addClass(\"k-splitter-resizing\");\n\n            if (that._suppressResize) {\n                return;\n            }\n\n            if (splitBarsCount === 0) {\n                splitBarsCount = panes.length - 1;\n                panes.slice(0, splitBarsCount)\n                     .after(\"<div tabindex='0' class='k-splitbar' data-marker='\" + that._marker + \"' />\");\n\n                that._updateSplitBars();\n                splitBars = element.children(\".k-splitbar\");\n            } else {\n                that._updateSplitBars();\n            }\n\n            // discard splitbar sizes from total size\n            splitBars.each(function() {\n                totalSize -= this[isHorizontal ? \"offsetWidth\" : \"offsetHeight\"];\n            });\n\n            var sizedPanesWidth = 0,\n                sizedPanesCount = 0,\n                freeSizedPanes = $();\n\n            panes.css({ position: \"absolute\", top: 0 })\n                [sizingProperty](function() {\n                    var element = $(this),\n                        config = element.data(PANE) || {}, size;\n\n                    element.removeClass(\"k-collapsed\");\n                    if (config.collapsed) {\n                        size = config.collapsedSize ? calculateSize(config.collapsedSize, totalSize) : 0;\n                        element.css(\"overflow\", \"hidden\").addClass(\"k-collapsed\");\n                    } else if (isFluid(config.size)) {\n                        freeSizedPanes = freeSizedPanes.add(this);\n                        panesSizes.push(false);\n                        return;\n                    } else { // sized in px/%, not collapsed\n                        size = calculateSize(config.size, totalSize);\n                    }\n\n                    sizedPanesCount++;\n                    sizedPanesWidth += size;\n                    panesSizes.push(size);\n\n                    return size;\n                });\n\n            totalSize -= sizedPanesWidth;\n\n            var freeSizePanesCount = freeSizedPanes.length,\n                freeSizePaneWidth = Math.floor(totalSize / freeSizePanesCount);\n\n            freeSizedPanes\n                .slice(0, freeSizePanesCount - 1)\n                    .css(sizingProperty, freeSizePaneWidth)\n                .end()\n                .eq(freeSizePanesCount - 1)\n                    .css(sizingProperty, totalSize - (freeSizePanesCount - 1) * freeSizePaneWidth);\n\n            panesSizes.forEach(function(size, i) {\n                if (size === false) {\n                    panesSizes[i] = freeSizePaneWidth;\n                }\n            });\n\n            that._resetAriaValueNow(splitBars, panesSizes);\n\n            // arrange panes\n            var sum = 0,\n                alternateSizingProperty = isHorizontal ? \"height\" : \"width\",\n                positioningProperty = isHorizontal ? \"left\" : \"top\",\n                sizingDomProperty = isHorizontal ? \"offsetWidth\" : \"offsetHeight\";\n\n            if (freeSizePanesCount === 0) {\n                var lastNonCollapsedPane = panes.filter(function() {\n                    return !(($(this).data(PANE) || {}).collapsed);\n                }).last();\n\n                lastNonCollapsedPane[sizingProperty](totalSize + lastNonCollapsedPane[0][sizingDomProperty]);\n            }\n\n            element.children()\n                .css(alternateSizingProperty, element[alternateSizingProperty]())\n                .each(function(i, child) {\n                    if (child.tagName.toLowerCase() != \"script\") {\n                        child.style[positioningProperty] = Math.floor(sum) + \"px\";\n                        sum += child[sizingDomProperty];\n                    }\n                });\n\n            that._detachEvents();\n            that._attachEvents();\n\n            that.wrapper.removeClass(\"k-splitter-resizing\");\n\n            kendo.resize(panes);\n            that.trigger(LAYOUTCHANGE);\n        },\n\n        toggle: function(pane, expand) {\n            var that = this,\n                paneConfig;\n\n            pane = that.element.find(pane);\n            paneConfig = pane.data(PANE);\n\n            if (!expand && !paneConfig.collapsible) {\n                return;\n            }\n\n            if (arguments.length == 1) {\n                expand = paneConfig.collapsed === undefined$1 ? false : paneConfig.collapsed;\n            }\n\n            paneConfig.collapsed = !expand;\n\n            if (paneConfig.collapsed) {\n                pane.css(\"overflow\", \"hidden\");\n            } else {\n                pane.css(\"overflow\", \"\");\n            }\n\n            that.resize(true);\n        },\n\n        collapse: function(pane) {\n            this.toggle(pane, false);\n        },\n\n        expand: function(pane) {\n            this.toggle(pane, true);\n        },\n\n        _addPane: function(config, idx, paneElement) {\n            var that = this;\n\n            if (paneElement.length) {\n                that.options.panes.splice(idx, 0, config);\n                that._initPane(paneElement, config);\n\n                that._removeSplitBars();\n\n                that.resize(true);\n            }\n\n            return paneElement;\n        },\n\n        append: function(config) {\n            config = config || {};\n\n            var that = this,\n                paneElement = $(\"<div />\").appendTo(that.element);\n\n            return that._addPane(config, that.options.panes.length, paneElement);\n        },\n\n        insertBefore: function(config, referencePane) {\n            referencePane = $(referencePane);\n            config = config || {};\n\n            var that = this,\n                idx = that.wrapper.children(\".k-pane\").index(referencePane),\n                paneElement = $(\"<div />\").insertBefore($(referencePane));\n\n            return that._addPane(config, idx, paneElement);\n        },\n\n        insertAfter: function(config, referencePane) {\n            referencePane = $(referencePane);\n            config = config || {};\n\n            var that = this,\n                idx = that.wrapper.children(\".k-pane\").index(referencePane),\n                paneElement = $(\"<div />\").insertAfter($(referencePane));\n\n            return that._addPane(config, idx + 1, paneElement);\n        },\n\n        remove: function(pane) {\n            var that = this;\n            pane = that.wrapper.find(pane);\n\n            if (pane.length) {\n                kendo.destroy(pane);\n                pane.each(function(idx, element) {\n                    that.options.panes.splice(that.wrapper.children(\".k-pane\").index(element), 1);\n                    $(element).remove();\n                });\n\n                that._removeSplitBars();\n\n                if (that.options.panes.length) {\n                    that.resize(true);\n                }\n            }\n\n            return that;\n        },\n\n        size: panePropertyAccessor(\"size\", true),\n\n        min: panePropertyAccessor(\"min\"),\n\n        max: panePropertyAccessor(\"max\")\n    });\n\n    ui.plugin(Splitter);\n\n    var verticalDefaults = {\n            sizingProperty: \"height\",\n            sizingDomProperty: \"offsetHeight\",\n            alternateSizingProperty: \"width\",\n            positioningProperty: \"top\",\n            mousePositioningProperty: \"pageY\"\n        };\n\n    var horizontalDefaults = {\n            sizingProperty: \"width\",\n            sizingDomProperty: \"offsetWidth\",\n            alternateSizingProperty: \"height\",\n            positioningProperty: \"left\",\n            mousePositioningProperty: \"pageX\"\n        };\n\n    function PaneResizing(splitter) {\n        var that = this,\n            orientation = splitter.orientation,\n            handle = \".k-splitbar-draggable-\" + orientation + \"[data-marker=\" + splitter._marker + \"]\";\n\n        if (splitter.options.clickMoveClick) {\n            handle += \",.k-ghost-splitbar\";\n        }\n\n        that.owner = splitter;\n        that._element = splitter.element;\n        that.orientation = orientation;\n\n        extend(that, orientation === HORIZONTAL ? horizontalDefaults : verticalDefaults);\n\n        that._resizable = new kendo.ui.Resizable(splitter.element, {\n            orientation: orientation,\n            handle: handle,\n            clickMoveClick: splitter.options.clickMoveClick,\n            hint: that._createHint.bind(that),\n            start: that._start.bind(that),\n            max: that._max.bind(that),\n            min: that._min.bind(that),\n            invalidClass: \"k-restricted-size-\" + orientation,\n            resizeend: that._stop.bind(that)\n        });\n    }\n\n    PaneResizing.prototype = {\n        press: function(target) {\n            this._resizable.press(target);\n        },\n\n        move: function(delta, target) {\n            if (!this.pressed) {\n                this.press(target);\n                this.pressed = true;\n            }\n\n            if (!this._resizable.target) {\n                this._resizable.press(target);\n            }\n\n            this._resizable.move(delta);\n        },\n\n        end: function() {\n            this._resizable.end();\n            this.pressed = false;\n        },\n\n        destroy: function() {\n            this._resizable.destroy();\n            this._resizable = this._element = this.owner = null;\n        },\n\n        isResizing: function() {\n            return this._resizable.resizing;\n        },\n\n        _createHint: function(handle) {\n            var that = this;\n            return $(\"<div class='k-ghost-splitbar k-ghost-splitbar-\" + that.orientation + \"' />\")\n                        .css(that.alternateSizingProperty, handle[that.alternateSizingProperty]());\n        },\n\n        _start: function(e) {\n            var that = this,\n                splitbar = $(e.currentTarget),\n                previousPane = splitbar.prev(),\n                nextPane = splitbar.next();\n\n            if ($(e.initialTarget).closest(\".k-expand-next, .k-expand-prev, .k-collapse-next, .k-collapse-prev\").length > 0 ||\n                !nextPane.length ||\n                !previousPane.length) {\n                    e.preventDefault();\n                    return;\n            }\n\n            var previousPaneConfig = previousPane.data(PANE),\n                nextPaneConfig = nextPane.data(PANE),\n                prevBoundary = parseInt(previousPane[0].style[that.positioningProperty], 10),\n                nextBoundary = parseInt(nextPane[0].style[that.positioningProperty], 10) + nextPane[0][that.sizingDomProperty] - splitbar[0][that.sizingDomProperty],\n                totalSize = parseInt(that._element.css(that.sizingProperty), 10),\n                toPx = function(value) {\n                    var val = parseInt(value, 10);\n                    return (isPixelSize(value) ? val : (totalSize * val) / 100) || 0;\n                };\n\n            if (!previousPaneConfig || !nextPaneConfig) {\n                e.preventDefault();\n                e.sender.draggable.clickMoveClick.cancel();\n                that.owner.element.find(\".k-ghost-splitbar\").remove();\n                return;\n            }\n\n            var prevMinSize = toPx(previousPaneConfig.min),\n                prevMaxSize = toPx(previousPaneConfig.max) || nextBoundary - prevBoundary,\n                nextMinSize = toPx(nextPaneConfig.min),\n                nextMaxSize = toPx(nextPaneConfig.max) || nextBoundary - prevBoundary;\n\n            that.previousPane = previousPane;\n            that.nextPane = nextPane;\n            that._maxPosition = Math.min(nextBoundary - nextMinSize, prevBoundary + prevMaxSize);\n            that._minPosition = Math.max(prevBoundary + prevMinSize, nextBoundary - nextMaxSize);\n        },\n        _max: function() {\n            return this._maxPosition;\n        },\n        _min: function() {\n            return this._minPosition;\n        },\n        _stop: function(e) {\n            var that = this,\n                splitbar = $(e.currentTarget),\n                owner = that.owner;\n\n            owner._panes().children(\".k-splitter-overlay\").remove();\n\n            if (e.keyCode !== kendo.keys.ESC) {\n                var ghostPosition = e.position,\n                    previousPane = splitbar.prev(),\n                    nextPane = splitbar.next();\n\n                if (!nextPane.length || !previousPane.length) {\n                    return false;\n                }\n\n                var previousPaneConfig = previousPane.data(PANE),\n                    nextPaneConfig = nextPane.data(PANE),\n                    previousPaneNewSize = ghostPosition - parseInt(previousPane[0].style[that.positioningProperty], 10),\n                    nextPaneNewSize = parseInt(nextPane[0].style[that.positioningProperty], 10) + nextPane[0][that.sizingDomProperty] - ghostPosition - splitbar[0][that.sizingDomProperty],\n                    fluidPanesCount = that._element.children(PANECLASS).filter(function() { return isFluid($(this).data(PANE).size); }).length;\n\n                if (!isFluid(previousPaneConfig.size) || fluidPanesCount > 1) {\n                    if (isFluid(previousPaneConfig.size)) {\n                        fluidPanesCount--;\n                    }\n\n                    previousPaneConfig.size = previousPaneNewSize + \"px\";\n                }\n\n                if (!isFluid(nextPaneConfig.size) || fluidPanesCount > 1) {\n                    nextPaneConfig.size = nextPaneNewSize + \"px\";\n                }\n\n                owner.resize(true);\n            }\n\n            return false;\n        }\n    };\n\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.splitter.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.tabstrip.js":
/*!**********************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.tabstrip.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.data.js */ \"./node_modules/kendo-ui-core/esm/kendo.data.js\");\n/* harmony import */ var _kendo_icons_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.icons.js */ \"./node_modules/kendo-ui-core/esm/kendo.icons.js\");\n/* harmony import */ var _kendo_sortable_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kendo.sortable.js */ \"./node_modules/kendo-ui-core/esm/kendo.sortable.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\n\nvar __meta__ = {\n    id: \"tabstrip\",\n    name: \"TabStrip\",\n    category: \"web\",\n    description: \"The TabStrip widget displays a collection of tabs with associated tab content.\",\n    depends: [ \"data\", \"icons\", \"sortable\" ],\n    features: [ {\n        id: \"tabstrip-fx\",\n        name: \"Animation\",\n        description: \"Support for animation\",\n        depends: [ \"fx\" ]\n    } ]\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        ui = kendo.ui,\n        keys = kendo.keys,\n        map = $.map,\n        each = $.each,\n        trim = kendo.trim,\n        extend = $.extend,\n        isFunction = kendo.isFunction,\n        template = kendo.template,\n        outerWidth = kendo._outerWidth,\n        outerHeight = kendo._outerHeight,\n        Widget = ui.Widget,\n        excludedNodesRegExp = /^(a|div)$/i,\n        NS = \".kendoTabStrip\",\n        IMG = \"img\",\n        HREF = \"href\",\n        PREV = \"prev\",\n        NEXT = \"next\",\n        SHOW = \"show\",\n        LINK = \"k-link\",\n        LAST = \"k-last\",\n        CLICK = \"click\",\n        ERROR = \"error\",\n        EMPTY = \":empty\",\n        IMAGE = \"k-image\",\n        FIRST = \"k-first\",\n        SELECT = \"select\",\n        ACTIVATE = \"activate\",\n        CONTENT = \"k-tabstrip-content k-content\",\n        CONTENTURL = \"contentUrl\",\n        MOUSEENTER = \"mouseenter\",\n        MOUSELEAVE = \"mouseleave\",\n        CONTENTLOAD = \"contentLoad\",\n        DISABLEDSTATE = \"k-disabled\",\n        ACTIVESTATE = \"k-active\",\n        FOCUSEDSTATE = \"k-focus\",\n        HOVERSTATE = \"k-hover\",\n        TABONTOP = \"k-tab-on-top\",\n        NAVIGATABLEITEMS = \".k-item:not(.\" + DISABLEDSTATE + \")\",\n        KEYBOARDNAVIGATABLEITEMS = \".k-item\",\n        HOVERABLEITEMS = \".k-tabstrip-items > \" + NAVIGATABLEITEMS + \":not(.\" + ACTIVESTATE + \")\",\n        DEFAULTDISTANCE = 200,\n        ARIA_HIDDEN = \"aria-hidden\",\n        ARIA_CONTROLS = \"aria-controls\",\n        ARIA_DISABLED = \"aria-disabled\",\n        ARIA_SELECTED = \"aria-selected\",\n        ARIA_ORIENTATION = \"aria-orientation\",\n        ARIA_LABELLEDBY = \"aria-labelledby\",\n\n        templates = {\n            content: (data) =>\n                `<div class='k-tabstrip-content k-content' ${data.contentAttributes(data)} tabindex='0'>${data.content(data.item)}</div>`,\n            textWrapper: ({ tag, item , contentUrl, textAttributes, image, sprite, text }) =>\n                `<${tag(item)} class='k-link' ${contentUrl(item)} ${textAttributes(item)}>` +\n                    `${image(item)}${sprite(item)}${text(item)}` +\n                `</${tag(item)}>`,\n            item: (data) =>templates.itemWrapper(data,`${data.textWrapper(data)}`),\n            itemWrapper: (data, item) =>\n                `<li class='${data.wrapperCssClass(data.group, data.item)}' role='tab' ${data.item.active ? \"aria-selected='true'\" : ''}>` +\n                    item +\n                \"</li>\",\n            image: ({ imageUrl }) => `<img class='k-image' alt='' src='${imageUrl}' />`,\n            sprite: ({ spriteCssClass }) => `<span class='k-sprite ${spriteCssClass}'></span>`,\n            empty: () => \"\"\n        },\n\n        rendering = {\n            wrapperCssClass: function(group, item) {\n                var result = [\"k-tabstrip-item\", \"k-item\"],\n                    index = item.index;\n\n                if (item.enabled === false) {\n                    result.push(\"k-disabled\");\n                }\n\n                if (index === 0) {\n                    result.push(\"k-first\");\n                }\n\n                if (index == group.length - 1) {\n                    result.push(\"k-last\");\n                }\n\n                return result.join(\" \");\n            },\n            textAttributes: function(item) {\n                return item.url ? \" href='\" + item.url + \"'\" : \"\";\n            },\n            text: function(item) {\n                return item.encoded === false ? item.text : kendo.htmlEncode(item.text);\n            },\n            tag: function(item) {\n                return item.url ? \"a\" : \"span\";\n            },\n            contentAttributes: function(content) {\n                return content.active !== true ? ` ${kendo.attr(\"style-display\")}=\"none\" aria-hidden='true'` : \"\";\n            },\n            content: function(item) {\n                return item.content ? item.content : item.contentUrl ? \"\" : \"&nbsp;\";\n            },\n            contentUrl: function(item) {\n                return item.contentUrl ? kendo.attr(\"content-url\") + '=\"' + item.contentUrl + '\"' : \"\";\n            }\n        };\n\n    function updateTabClasses(tabs) {\n        tabs.children(IMG)\n            .addClass(IMAGE);\n\n        tabs.children(\"a\")\n            .addClass(LINK)\n            .children(IMG)\n            .addClass(IMAGE);\n\n        tabs.filter(\"li[disabled]\")\n            .addClass(DISABLEDSTATE)\n            .attr(ARIA_DISABLED, \"true\")\n            .prop(\"disabled\", false);\n\n        tabs.filter(\":not([class*=k-state])\")\n            .children(\"a\")\n            .filter(\":focus\")\n            .parent()\n            .addClass(ACTIVESTATE + \" \" + TABONTOP);\n\n        tabs.attr(\"role\", \"tab\");\n\n        tabs.each(function() {\n            var item = $(this);\n            item.attr(ARIA_SELECTED, item.is(\".\" + ACTIVESTATE));\n\n            if (!item.children(\".\" + LINK).length) {\n                item\n                    .contents() // exclude groups, real links, templates and empty text nodes\n                    .filter(function() { return (!this.nodeName.match(excludedNodesRegExp) && !(this.nodeType == 3 && !trim(this.nodeValue))); })\n                    .wrapAll(\"<span UNSELECTABLE='on' class='\" + LINK + \"'/>\");\n            }\n        });\n\n    }\n\n    function updateFirstLast(tabGroup) {\n        var tabs = tabGroup.children(\".k-item\");\n\n        tabs.filter(\".k-first:not(:first-child)\").removeClass(FIRST);\n        tabs.filter(\".k-last:not(:last-child)\").removeClass(LAST);\n        tabs.filter(\":first-child\").addClass(FIRST);\n        tabs.filter(\":last-child\").addClass(LAST);\n    }\n\n    function scrollButtonHtml(buttonClass, iconClass) {\n        return `<span aria-hidden='true' class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button k-tabstrip-${buttonClass}' unselectable='on'>${kendo.ui.icon({ icon: iconClass, iconClass: \"k-button-icon\" })}</span>`;\n    }\n\n    var TabStrip = Widget.extend({\n        init: function(element, options) {\n            var that = this, value;\n\n            Widget.fn.init.call(that, element, options);\n\n            that._animations(that.options);\n\n            options = that.options;\n\n            that._contentUrls = options.contentUrls || [];\n\n            that._wrapper();\n\n            that._isRtl = kendo.support.isRtl(that.wrapper);\n\n            that._updateClasses();\n            that._dataSource();\n\n            that._tabindex(that.tabGroup);\n            that.tabGroup.attr(\"role\", \"tablist\");\n\n            if (options.dataSource) {\n                that.dataSource.fetch();\n            }\n\n            that._tabPosition();\n            that._scrollable();\n            that._sortable();\n            that._processContentUrls();\n            that._attachEvents();\n\n            if (that.options.value) {\n                value = that.options.value;\n            }\n\n            that._initialActivate();\n            that.value(value);\n            kendo.notify(that);\n\n            if (that._showWatermarkOverlay) {\n                that._showWatermarkOverlay(that.element[0]);\n            }\n        },\n\n        events: [\n            SELECT,\n            ACTIVATE,\n            SHOW,\n            ERROR,\n            CONTENTLOAD,\n            \"change\",\n            \"dataBinding\",\n            \"dataBound\"\n        ],\n\n        options: {\n            name: \"TabStrip\",\n            dataEncodedField: \"\",\n            dataTextField: \"\",\n            dataContentField: \"\",\n            dataImageUrlField: \"\",\n            dataUrlField: \"\",\n            dataSpriteCssClass: \"\",\n            dataContentUrlField: \"\",\n            tabPosition: \"top\",\n            tabTemplate: null,\n            animation: {\n                open: {\n                    effects: \"expand:vertical fadeIn\",\n                    duration: 200\n                },\n                close: { // if close animation effects are defined, they will be used instead of open.reverse\n                    duration: 200\n                }\n            },\n            collapsible: false,\n            navigatable: true,\n            contentUrls: false,\n            applyMinHeight: true,\n            scrollable: {\n                distance: DEFAULTDISTANCE\n            },\n            sortable: false\n        },\n\n        setDataSource: function(dataSource) {\n            var that = this;\n\n            that.options.dataSource = dataSource;\n            that._dataSource();\n            that.dataSource.fetch();\n        },\n\n        setOptions: function(options) {\n            var that = this,\n                animation = that.options.animation;\n\n            that._animations(options);\n\n            if (options.contentUrls) {\n                that._contentUrls = options.contentUrls;\n            }\n\n            options.animation = extend(true, animation, options.animation);\n\n            if (options.navigatable) {\n                that.tabGroup.on(\"keydown\" + NS, that._keyDownProxy);\n            } else {\n                that.tabGroup.off(\"keydown\" + NS, that._keyDownProxy);\n            }\n\n            Widget.fn.setOptions.call(that, options);\n        },\n\n        activateTab: function(item) {\n            if (this.tabGroup.children(\"[data-animating]\").length) { return; }\n\n            item = this.tabGroup.find(item);\n\n            var that = this,\n                animationSettings = that.options.animation,\n                animation = animationSettings.open,\n                close = extend({}, animationSettings.close),\n                hasCloseAnimation = close && \"effects\" in close,\n                neighbours = item.parent().children(),\n                oldTab = neighbours.filter(\".\" + ACTIVESTATE),\n                itemIndex = neighbours.index(item),\n                isAnimationEnabled = animation && \"duration\" in animation && \"effects\" in animation;\n\n            close = extend( hasCloseAnimation ? close : extend({ reverse: true }, animation), { hide: true });\n            // deactivate previously active tab\n            if (kendo.size(animation.effects)) {\n                oldTab.kendoRemoveClass(ACTIVESTATE, { duration: close.duration });\n                item.kendoRemoveClass(HOVERSTATE, { duration: close.duration });\n            } else {\n                oldTab.removeClass(ACTIVESTATE);\n                item.removeClass(HOVERSTATE);\n            }\n\n            // handle content elements\n            var contentAnimators = that.contentAnimators;\n\n            if (that.inRequest) {\n                that.xhr.abort();\n                that.inRequest = false;\n            }\n\n            if (contentAnimators.length === 0) {\n                that.tabGroup.find(\".\" + TABONTOP).removeClass(TABONTOP);\n                item.addClass(TABONTOP) // change these directly to bring the tab on top.\n                    .css(\"z-index\");\n\n                item.addClass(ACTIVESTATE);\n                that._current(item, true);\n\n                that.trigger(\"change\");\n\n                if (that._scrollableModeActive) {\n                    that._scrollTabsToItem(item);\n                }\n\n                return false;\n            }\n\n            var visibleContents = contentAnimators.filter(\".\" + ACTIVESTATE),\n                contentHolder = that.contentHolder(itemIndex),\n                contentElement = contentHolder.closest(\".k-content\");\n\n            that.tabsHeight = outerHeight(that.tabGroup) +\n                              parseInt(that.wrapper.css(\"border-top-width\"), 10) +\n                              parseInt(that.wrapper.css(\"border-bottom-width\"), 10);\n\n            if (contentHolder.length === 0) {\n                visibleContents\n                    .removeClass( ACTIVESTATE )\n                    .attr(ARIA_HIDDEN, true)\n                    .kendoStop(true, true)\n                    .kendoAnimate( close );\n                return false;\n            }\n\n            item.attr(\"data-animating\", true);\n\n            var isAjaxContent = (item.children(\".\" + LINK).data(CONTENTURL) || that._contentUrls[itemIndex] || false) && contentHolder.is(EMPTY),\n                showContentElement = function() {\n                    oldTab.attr(ARIA_SELECTED, false);\n                    item.attr(ARIA_SELECTED, true);\n                    that.tabGroup.attr(\"aria-activedescendant\", item.attr(\"id\"));\n\n                    that._current(item, true);\n\n                    contentElement\n                        .addClass(ACTIVESTATE)\n                        .removeAttr(ARIA_HIDDEN)\n                        .kendoStop(true, true)\n                        .kendoAnimate( extend({ init: function() {\n                            that.trigger(SHOW, { item: item[0], contentElement: contentHolder[0] });\n                            kendo.resize(contentHolder);\n                        } }, animation, {\n                            complete: function() {\n                                // See https://github.com/telerik/kendo-ui-core/issues/6660\n                                that.element.css('min-height', oldMinHeight);\n                                item.removeAttr(\"data-animating\");\n\n                                that.trigger(ACTIVATE, { item: item[0], contentElement: contentHolder[0] });\n                                kendo.resize(contentHolder);\n\n                                // Force IE and Edge rendering to fix visual glitches telerik/kendo-ui-core#2777.\n                                if (isAnimationEnabled && (kendo.support.browser.msie || kendo.support.browser.edge)) {\n                                    contentHolder.finish().animate({\n                                        opacity: 0.9\n                                    },\"fast\", \"linear\", function() {\n                                        contentHolder.finish().animate({\n                                            opacity: 1\n                                        },\"fast\", \"linear\");\n                                    });\n                                }\n                            }\n                        } ) );\n                },\n                showContent = function() {\n                    if (!isAjaxContent) {\n                        showContentElement();\n                        that.trigger(\"change\");\n                    } else {\n                        item.removeAttr(\"data-animating\");\n                        that.ajaxRequest(item, contentHolder, function() {\n                            item.attr(\"data-animating\", true);\n                            showContentElement();\n                            that.trigger(\"change\");\n                        });\n                    }\n\n                    if (that._scrollableModeActive) {\n                        that._scrollTabsToItem(item);\n                    }\n\n                };\n\n            // See https://github.com/telerik/kendo-ui-core/issues/6660\n            var oldMinHeight = that.element.css('min-height');\n\n            if (that.options.applyMinHeight) {\n                that.element.css('min-height', that.element.outerHeight());\n            }\n\n            visibleContents.removeClass(ACTIVESTATE);\n            that.tabGroup.find(\".\" + TABONTOP).removeClass(TABONTOP);\n            item.addClass(TABONTOP).css(\"z-index\");\n\n            if (kendo.size(animation.effects)) {\n                item.kendoAddClass(ACTIVESTATE, { duration: animation.duration });\n            } else {\n                item.addClass(ACTIVESTATE);\n            }\n\n            visibleContents.attr(ARIA_HIDDEN, true);\n\n            if (visibleContents.length) {\n                visibleContents\n                    .kendoStop(true, true)\n                    .kendoAnimate(extend( {\n                        complete: showContent\n                   }, close ));\n            } else {\n                showContent();\n            }\n\n            return true;\n        },\n\n        ajaxRequest: function(element, content, complete, url) {\n            element = this.tabGroup.find(element);\n\n            var that = this,\n                xhr = $.ajaxSettings.xhr,\n                link = element.find(\".\" + LINK),\n                data = {},\n                halfWidth = element.width() / 2,\n                fakeProgress = false,\n                statusIcon = element.find(\".k-loading\").removeClass(\"k-complete\");\n\n            if (!statusIcon[0]) {\n                statusIcon = $(\"<span class='k-loading'/>\").prependTo(element);\n            }\n\n            var endState = halfWidth * 2 - statusIcon.width();\n\n            var oldProgressAnimation = function() {\n                statusIcon.animate({ marginLeft: (parseInt(statusIcon.css(\"marginLeft\"), 10) || 0) < halfWidth ? endState : 0 }, 500, oldProgressAnimation);\n            };\n\n            if (kendo.support.browser.msie && kendo.support.browser.version < 10) {\n                setTimeout(oldProgressAnimation, 40);\n            }\n\n             url = url || link.data(CONTENTURL) || that._contentUrls[element.index()] || link.attr(HREF);\n            that.inRequest = true;\n\n            var ajaxOptions = {\n                type: \"GET\",\n                cache: false,\n                url: url,\n                dataType: \"html\",\n                data: data,\n                xhr: function() {\n                    var current = this,\n                        request = xhr(),\n                        event = current.progressUpload ? \"progressUpload\" : current.progress ? \"progress\" : false;\n\n                    if (request) {\n                        $.each([ request, request.upload ], function() {\n                            if (this.addEventListener) {\n                                this.addEventListener(\"progress\", function(evt) {\n                                    if (event) {\n                                        current[event](evt);\n                                    }\n                                }, false);\n                            }\n                        });\n                    }\n\n                    current.noProgress = !(window.XMLHttpRequest && ('upload' in new XMLHttpRequest()));\n                    return request;\n                },\n\n                progress: function(evt) {\n                    if (evt.lengthComputable) {\n                        var percent = parseInt((evt.loaded / evt.total * 100), 10) + \"%\";\n                        statusIcon\n                            .stop(true)\n                            .addClass(\"k-progress\")\n                            .css({\n                                \"width\": percent,\n                                \"marginLeft\": 0\n                            });\n                    }\n                },\n\n                error: function(xhr, status) {\n                    if (that.trigger(\"error\", { xhr: xhr, status: status })) {\n                        this.complete();\n                    }\n                },\n\n                stopProgress: function() {\n                    clearInterval(fakeProgress);\n                    statusIcon\n                        .stop(true)\n                        .addClass(\"k-progress\")\n                        [0].style.cssText = \"\";\n                },\n\n                complete: function(xhr) {\n                    that.inRequest = false;\n                    if (this.noProgress) {\n                        setTimeout(this.stopProgress, 500);\n                    } else {\n                        this.stopProgress();\n                    }\n\n                    if (xhr.statusText == \"abort\") {\n                        statusIcon.remove();\n                    }\n                },\n\n                success: function(data) {\n                    statusIcon.addClass(\"k-complete\");\n                    try {\n                        var current = this,\n                            loaded = 10;\n\n                        if (current.noProgress) {\n                            statusIcon.width(loaded + \"%\");\n                            fakeProgress = setInterval(function() {\n                                current.progress({ lengthComputable: true, loaded: Math.min(loaded, 100), total: 100 });\n                                loaded += 10;\n                            }, 40);\n                        }\n\n                        kendo.destroy(content);\n                        content.html(data);\n                    } catch (e) {\n                        var console = window.console;\n\n                        if (console && console.error) {\n                            console.error(e.name + \": \" + e.message + \" in \" + url);\n                        }\n                        this.error(this.xhr, \"error\");\n                    }\n\n                    if (complete) {\n                        complete.call(that, content);\n                    }\n\n                    that.trigger(CONTENTLOAD, { item: element[0], contentElement: content[0] });\n                }\n            };\n\n            if (typeof url === \"object\") {\n                ajaxOptions = $.extend(true, {}, ajaxOptions, url);\n\n                if (isFunction(ajaxOptions.url)) {\n                    ajaxOptions.url = ajaxOptions.url();\n                }\n\n                if (isFunction(ajaxOptions.data)) {\n                    ajaxOptions.data = ajaxOptions.data();\n                }\n            }\n\n            that.xhr = $.ajax(ajaxOptions);\n        },\n\n        append: function(tab) {\n            var that = this,\n                inserted = that._create(tab);\n\n            each(inserted.tabs, function(idx) {\n                var contents = inserted.contents[idx];\n                that.tabGroup.append(this);\n                if (that.options.tabPosition == \"bottom\") {\n                    that.tabWrapper.before(contents);\n                } else {\n                    that.wrapper.append(contents);\n                }\n            });\n\n            updateFirstLast(that.tabGroup);\n            that._updateContentElements();\n            that.resize(true);\n\n            return that;\n        },\n\n        contentElement: function(itemIndex) {\n            if (isNaN(itemIndex - 0)) {\n                return undefined$1;\n            }\n\n            var contentElements = this.contentElements && this.contentElements[0] && !kendo.kineticScrollNeeded ? this.contentElements : this.contentAnimators;\n            var id = $(this.tabGroup.children()[itemIndex]).attr(ARIA_CONTROLS);\n\n            if (contentElements) {\n                for (var i = 0, len = contentElements.length; i < len; i++) {\n                    if (contentElements.eq(i).closest(\".k-content\")[0].id == id) {\n                        return contentElements[i];\n                    }\n                }\n            }\n\n            return undefined$1;\n        },\n\n        contentHolder: function(itemIndex) {\n            var contentElement = $(this.contentElement(itemIndex)),\n                scrollContainer = contentElement.children(\".km-scroll-container\");\n\n            return kendo.support.touch && scrollContainer[0] ? scrollContainer : contentElement;\n        },\n\n        deactivateTab: function(item) {\n            var that = this,\n                animationSettings = that.options.animation,\n                animation = animationSettings.open,\n                close = extend({}, animationSettings.close),\n                hasCloseAnimation = close && \"effects\" in close;\n            item = that.tabGroup.find(item);\n\n            close = extend( hasCloseAnimation ? close : extend({ reverse: true }, animation), { hide: true });\n\n            if (kendo.size(animation.effects)) {\n                item.kendoRemoveClass(ACTIVESTATE, { duration: animation.duration });\n            } else {\n                item.removeClass(ACTIVESTATE);\n            }\n\n            item.attr(ARIA_SELECTED, false);\n            that.tabGroup.removeAttr(\"aria-activedescendant\");\n\n            that.contentAnimators\n                    .filter(\".\" + ACTIVESTATE)\n                    .kendoStop(true, true)\n                    .kendoAnimate( close )\n                    .removeClass(ACTIVESTATE)\n                    .attr(ARIA_HIDDEN, true);\n        },\n\n        destroy: function() {\n            var that = this;\n\n            Widget.fn.destroy.call(that);\n\n            if (that._refreshHandler) {\n                that.dataSource.unbind(\"change\", that._refreshHandler);\n            }\n\n            that.wrapper.off(NS);\n            that.tabGroup.off(NS);\n\n            if (that._scrollableModeActive) {\n                that._scrollPrevButton.off().remove();\n                that._scrollNextButton.off().remove();\n            }\n\n            kendo.destroy(that.wrapper);\n        },\n\n        disable: function(element) {\n            this._toggleDisabled(element, false);\n\n            return this;\n        },\n\n        enable: function(element, state) {\n            this._toggleDisabled(element, state !== false);\n\n            return this;\n        },\n\n        insertAfter: function(tab, referenceTab) {\n            if ($(tab).is($(referenceTab))) {\n                referenceTab = this.tabGroup.find(referenceTab).prev();\n            } else {\n                referenceTab = this.tabGroup.find(referenceTab);\n            }\n\n            var that = this,\n                inserted = that._create(tab),\n                referenceContent = that.element.find(\"[id='\" + referenceTab.attr(ARIA_CONTROLS) + \"']\");\n\n            each(inserted.tabs, function(idx) {\n                var contents = inserted.contents[idx];\n                var fromIndex = inserted.newTabsCreated ? that._contentUrls.length - (inserted.tabs.length - idx) : $(contents).index() - 1;\n\n                referenceTab.after(this);\n                referenceContent.after(contents);\n\n                that._moveUrlItem(fromIndex, $(this).index());\n            });\n\n            updateFirstLast(that.tabGroup);\n            that._updateContentElements(inserted.newTabsCreated);\n            that.resize(true);\n\n            return that;\n        },\n\n        insertBefore: function(tab, referenceTab) {\n            if ($(tab).is($(referenceTab))) {\n                referenceTab = this.tabGroup.find(referenceTab).next();\n            } else {\n                referenceTab = this.tabGroup.find(referenceTab);\n            }\n\n            var that = this,\n                inserted = that._create(tab),\n                referenceContent = that.element.find(\"[id='\" + referenceTab.attr(ARIA_CONTROLS) + \"']\");\n\n            each(inserted.tabs, function(idx) {\n                var contents = inserted.contents[idx];\n                var fromIndex = inserted.newTabsCreated ? that._contentUrls.length - (inserted.tabs.length - idx) : $(contents).index() - 1;\n\n                referenceTab.before(this);\n                referenceContent.before(contents);\n\n                that._moveUrlItem(fromIndex, $(this).index());\n            });\n\n            updateFirstLast(that.tabGroup);\n            that._updateContentElements(inserted.newTabsCreated);\n            that.resize(true);\n\n            return that;\n        },\n\n        items: function() {\n            return this.tabGroup[0].children;\n        },\n\n        refresh: function(e) {\n            var that = this,\n                options = that.options,\n                encoded = kendo.getter(options.dataEncodedField),\n                text = kendo.getter(options.dataTextField),\n                content = kendo.getter(options.dataContentField),\n                contentUrl = kendo.getter(options.dataContentUrlField),\n                image = kendo.getter(options.dataImageUrlField),\n                url = kendo.getter(options.dataUrlField),\n                sprite = kendo.getter(options.dataSpriteCssClass),\n                idx,\n                tabs = [],\n                tab,\n                action,\n                view = that.dataSource.view(),\n                length;\n\n\n            e = e || {};\n            action = e.action;\n\n            if (action) {\n               view = e.items;\n            }\n\n            for (idx = 0, length = view.length; idx < length; idx ++) {\n                tab = {\n                    text: text(view[idx])\n                };\n\n                if (options.tabTemplate) {\n                    tab.model = view[idx];\n                    tab.template = options.tabTemplate;\n                }\n\n                if (options.dataEncodedField) {\n                    tab.encoded = encoded(view[idx]);\n                }\n\n                if (options.dataContentField) {\n                    tab.content = content(view[idx]);\n                }\n\n                if (options.dataContentUrlField) {\n                    tab.contentUrl = contentUrl(view[idx]);\n                }\n\n                if (options.dataUrlField) {\n                    tab.url = url(view[idx]);\n                }\n\n                if (options.dataImageUrlField) {\n                    tab.imageUrl = image(view[idx]);\n                }\n\n                if (options.dataSpriteCssClass) {\n                    tab.spriteCssClass = sprite(view[idx]);\n                }\n\n                tabs[idx] = tab;\n            }\n\n            if (e.action == \"add\") {\n                if (e.index < that.tabGroup.children().length) {\n                    that.insertBefore(tabs, that.tabGroup.children().eq(e.index));\n                } else {\n                    that.append(tabs);\n                }\n            } else if (e.action == \"remove\") {\n                for (idx = 0; idx < view.length; idx++) {\n                   that.remove(e.index);\n                }\n            } else if (e.action == \"itemchange\") {\n                idx = that.dataSource.view().indexOf(view[0]);\n                if (e.field === options.dataTextField) {\n                    that.tabGroup.children().eq(idx).find(\".k-link\").text(view[0].get(e.field));\n                }\n\n                if (e.field === options.dataUrlField) {\n                    that._contentUrls[idx] = view[0].get(e.field);\n                }\n            } else {\n                that.trigger(\"dataBinding\");\n                that.remove(\"li\");\n                that._contentUrls = [];\n                that.append(tabs);\n                that.trigger(\"dataBound\");\n            }\n        },\n\n        reload: function(element) {\n            element = this.tabGroup.find(element);\n            var that = this;\n            var contentUrls = that._contentUrls;\n\n            element.each(function() {\n                var item = $(this),\n                    contentUrl = item.find(\".\" + LINK).data(CONTENTURL) || contentUrls[item.index()],\n                    content = that.contentHolder(item.index());\n\n                if (contentUrl) {\n                    that.ajaxRequest(item, content, null, contentUrl);\n                }\n            });\n\n            return that;\n        },\n\n        remove: function(elements) {\n            var that = this;\n            var type = typeof elements;\n            var contents;\n\n            if (type === \"string\") {\n                elements = that.tabGroup.find(elements);\n            } else if (type === \"number\") {\n                elements = that.tabGroup.children().eq(elements);\n            }\n\n            contents = elements.map(function() {\n                var idx = $(this).index();\n                var content = that.contentElement(idx);\n\n                kendo.destroy(content);\n                that._removeUrlItem(idx);\n\n                return content;\n            });\n\n            elements.remove();\n            contents.empty();\n            contents.remove();\n\n            that._updateContentElements();\n            that.resize(true);\n\n            return that;\n        },\n\n        select: function(element) {\n            var that = this;\n\n            if (arguments.length === 0) {\n                return that.tabGroup.children(\"li.\" + ACTIVESTATE);\n            }\n\n            if (!isNaN(element)) {\n                element = that.tabGroup.children().get(element);\n            }\n\n            element = that.tabGroup.find(element);\n            $(element).each(function(index, item) {\n                item = $(item);\n                if (!item.hasClass(ACTIVESTATE) && !that.trigger(SELECT, { item: item[0], contentElement: that.contentHolder(item.index())[0] })) {\n                    that.activateTab(item);\n                    that.tabGroup.attr(\"aria-activedescendant\", item.attr(\"id\"));\n                }\n            });\n\n            return that;\n        },\n\n        value: function(value) {\n            var that = this;\n\n            if (value !== undefined$1) {\n                if (value != that.value()) {\n                   that.tabGroup.children().each(function() {\n                        if (kendo.trim($(this).text()) == value) {\n                            that.select(this);\n                        }\n                   });\n                }\n            } else {\n                return that.select().text();\n            }\n        },\n\n        _active: function() {\n            var that = this;\n            setTimeout(function() {\n                var item = that.tabGroup.children().filter(\".\" + ACTIVESTATE);\n\n                item = item[0] ? item : that._endItem(\"first\");\n                if (item[0]) {\n                    that._current(item);\n                }\n            }, 100);\n        },\n\n        _animations: function(options) {\n            if (options && (\"animation\" in options) && !options.animation) {\n                options.animation = { open: { effects: {} }, close: { effects: {} } }; // No animation\n            }\n        },\n\n        _appendUrlItem: function(url) {\n            this._contentUrls.push(url);\n        },\n\n        _attachEvents: function() {\n            var that = this,\n                options = that.options;\n\n            that.tabGroup\n                .on(CLICK + NS, \".k-disabled .k-link\", false)\n                .on(CLICK + NS, \" > \" + NAVIGATABLEITEMS, that._itemClick.bind(that));\n\n            that.wrapper.on(\"focus\" + NS, function() { that.tabGroup.trigger(\"focus\"); });\n\n            that.tabGroup\n                .on(MOUSEENTER + NS + \" \" + MOUSELEAVE + NS, HOVERABLEITEMS, that._toggleHover)\n                .on(\"focus\" + NS, that._active.bind(that))\n                .on(\"blur\" + NS, function() { that._current(null); });\n\n            that._keyDownProxy = that._keydown.bind(that);\n\n            if (options.navigatable) {\n                that.tabGroup.on(\"keydown\" + NS, that._keyDownProxy);\n            }\n        },\n\n        _click: function(item) {\n            var that = this,\n                link = item.find(\".\" + LINK),\n                href = link.attr(HREF),\n                collapse = that.options.collapsible,\n                index = item.index(),\n                contentHolder = that.contentHolder(index),\n                prevent, isAnchor,\n                neighbours = item.parent().children(),\n                oldFocusedTab = neighbours.filter(\".\" + FOCUSEDSTATE);\n\n            if (item.closest(\".k-tabstrip\")[0] != that.wrapper[0]) {\n                return;\n            }\n\n            if (item.is(\".\" + DISABLEDSTATE + (!collapse ? \",.\" + ACTIVESTATE : \"\"))) {\n                oldFocusedTab.removeClass(FOCUSEDSTATE);\n                that._focused = item;\n\n                item.addClass(FOCUSEDSTATE);\n                that._current(item);\n\n                if (that._scrollableModeActive) {\n                    that._scrollTabsToItem(item);\n                }\n                return true;\n            }\n\n            isAnchor = link.data(CONTENTURL) || that._contentUrls[index] || (href && (href.charAt(href.length - 1) == \"#\" || href.indexOf(\"#\" + that.element[0].id + \"-\") != -1));\n            prevent = !href || isAnchor;\n\n            if (that.tabGroup.children(\"[data-animating]\").length) {\n                return prevent;\n            }\n\n            if (that.trigger(SELECT, { item: item[0], contentElement: contentHolder[0] })) {\n                return true;\n            }\n\n            if (prevent === false) {\n                return;\n            }\n\n            if (collapse && item.is(\".\" + ACTIVESTATE)) {\n                that.deactivateTab(item);\n                return true;\n            }\n\n            if (that.activateTab(item)) {\n                that._current(item);\n                prevent = true;\n            }\n\n            return prevent;\n        },\n\n        _create: function(tab) {\n            var that = this,\n            tabs,\n            contents,\n            content,\n            newTabsCreated = false;\n\n            tab = tab instanceof kendo.data.ObservableArray ? tab.toJSON() : tab;\n\n            if ($.isPlainObject(tab) || Array.isArray(tab)) {\n                tab = Array.isArray(tab) ? tab : [tab];\n                newTabsCreated = true;\n\n                tabs = map(tab, function(value, idx) {\n                            that._appendUrlItem(tab[idx].contentUrl || null);\n\n                            return $(TabStrip.renderItem({\n                                group: that.tabGroup,\n                                item: extend(value, { index: idx })\n                            }));\n                        });\n\n                contents = map( tab, function(value, idx) {\n                            if (typeof value.content == \"string\" || value.contentUrl) {\n                                let tabstripContent = $(TabStrip.renderContent({\n                                    item: extend(value, { index: idx })\n                                }));\n\n                                kendo.applyStylesFromKendoAttributes(tabstripContent, [\"display\"]);\n                                return tabstripContent;\n                            }\n                        });\n            } else {\n                if (typeof tab == \"string\" && tab[0] != \"<\") {\n                    tabs = that.element.find(tab);\n                } else {\n                    tabs = $(tab);\n                }\n                contents = $();\n                tabs.each(function() {\n                    if (/k-tabstrip-items/.test(this.parentNode.className)) {\n                        var element = that.element.find(\"[id='\" + this.getAttribute(ARIA_CONTROLS) + \"']\");\n                        content = element;\n                    } else {\n                        content = $(\"<div class='\" + CONTENT + \"'/>\");\n                    }\n\n                    contents = contents.add(content);\n                });\n\n                updateTabClasses(tabs);\n            }\n\n            return { tabs: tabs, contents: contents, newTabsCreated: newTabsCreated };\n        },\n\n        _current: function(candidate, preventFocus) {\n            var that = this,\n                focused = that._focused;\n\n            if (candidate === undefined$1) {\n                return focused;\n            }\n\n            if (focused && candidate && focused[0] === candidate[0]) {\n                focused = false;\n            }\n\n            if (focused) {\n                focused.removeClass(FOCUSEDSTATE);\n            }\n\n            if (candidate && !preventFocus) {\n                candidate.addClass(FOCUSEDSTATE);\n            }\n\n            that._focused = candidate;\n        },\n\n        _dataSource: function() {\n            var that = this;\n\n            if (that.dataSource && that._refreshHandler) {\n                that.dataSource.unbind(\"change\", that._refreshHandler);\n            } else {\n                that._refreshHandler = that.refresh.bind(that);\n            }\n\n            that.dataSource = kendo.data.DataSource.create(that.options.dataSource)\n                                .bind(\"change\", that._refreshHandler);\n        },\n\n        _elementId: function(element, idx, tab) {\n            var elementId = element.attr(\"id\"),\n                wrapperId = this.element.attr(\"id\"),\n                guid = kendo.guid();\n\n            if (!elementId || elementId.indexOf(wrapperId + \"-\") > -1) {\n                var tabStripID = (wrapperId || guid) + \"-\";\n\n                if (tab) {\n                    tabStripID += \"tab-\";\n                }\n\n                return tabStripID + (idx + 1);\n            }\n\n            return elementId;\n        },\n\n        _endItem: function(action) {\n            return this.tabGroup.children(NAVIGATABLEITEMS)[action]();\n        },\n\n        _getItem: function(action) {\n            return this.tabGroup.children(KEYBOARDNAVIGATABLEITEMS)[action]();\n        },\n\n        _initialActivate: function() {\n            var that = this,\n                selectedItems = that.tabGroup.children(\"li.\" + ACTIVESTATE),\n                content = that.contentHolder(selectedItems.index());\n\n            if (selectedItems[0] && content.length > 0 && content[0].childNodes.length === 0) {\n                that.activateTab(selectedItems.eq(0));\n            }\n        },\n\n        _item: function(item, action) {\n            var endItem;\n            if (action === PREV) {\n                endItem = \"last\";\n            } else {\n                endItem = \"first\";\n            }\n\n            if (!item) {\n                return this._endItem(endItem);\n            }\n\n            item = item[action]();\n\n            if (!item[0]) {\n                item = this.tabGroup.children(KEYBOARDNAVIGATABLEITEMS)[endItem]();\n            }\n\n            if (item.hasClass(DISABLEDSTATE)) {\n                item.addClass(FOCUSEDSTATE);\n            }\n            if (item.hasClass(DISABLEDSTATE) || item.hasClass(ACTIVESTATE)) {\n                this._focused = item;\n            }\n\n            return item;\n        },\n\n        _itemClick: function(e) {\n            var that = this,\n                tabGroup = that.tabGroup[0];\n\n            if (tabGroup !== document.activeElement) {\n                var msie = kendo.support.browser.msie;\n                if (msie) {\n                    try {\n                        // does not scroll to the active element\n                        tabGroup.setActive();\n                    } catch (j) {\n                        tabGroup.focus();\n                    }\n                } else {\n                    tabGroup.focus();\n                }\n            }\n\n            if (that._click($(e.currentTarget))) {\n                e.preventDefault();\n            }\n        },\n\n        _keydown: function(e) {\n            var that = this,\n                key = e.keyCode,\n                current = that._current(),\n                rtl = that._isRtl,\n                isHorizontal = /top|bottom/.test(that.options.tabPosition),\n                action;\n\n            if (e.target != e.currentTarget || !current) {\n                return;\n            }\n\n            if (key === keys.DOWN && !isHorizontal) {\n                action = NEXT;\n            } else if (key === keys.UP && !isHorizontal) {\n                action = PREV;\n            } else if (key === keys.RIGHT && isHorizontal) {\n                action = rtl ? PREV : NEXT;\n            } else if (key === keys.LEFT && isHorizontal) {\n                action = rtl ? NEXT : PREV;\n            } else if (key == keys.ENTER || key == keys.SPACEBAR) {\n                that._click(current);\n                e.preventDefault();\n            } else if (key == keys.HOME) {\n                that._click(that._getItem(\"first\"));\n                e.preventDefault();\n                return;\n            } else if (key == keys.END) {\n                that._click(that._getItem(\"last\"));\n                e.preventDefault();\n                return;\n            }\n\n            if (action) {\n                that._click(that._item(current, action));\n                e.preventDefault();\n            }\n        },\n\n        _moveUrlItem: function(from, to) {\n            this._contentUrls.splice(to, 0, this._contentUrls.splice(from, 1)[0]);\n        },\n\n        _processContentUrls: function() {\n            var that = this;\n\n            if (that._contentUrls.length) {\n                that.tabGroup.children(\".k-item\")\n                    .each(function(index, item) {\n                        var url = that._contentUrls[index];\n\n                        if (typeof url === 'string') {\n                            $(item).find(\">.\" + LINK).data(CONTENTURL, url);\n                        }\n                    });\n            } else {\n                that._contentUrls.length = that.tabGroup.find(\"li.k-item\").length;\n            }\n        },\n\n        _removeUrlItem: function(index) {\n            this._contentUrls.splice(index, 1);\n        },\n\n        _resize: function() {\n            this._scrollable();\n        },\n\n        _scrollable: function() {\n            var that = this,\n                options = that.options,\n                wrapperOffsetWidth,\n                tabGroupScrollWidth,\n                scrollPrevButton,\n                scrollNextButton;\n\n            if (that._scrollableAllowed()) {\n\n                that.wrapper.addClass(\"k-tabstrip-scrollable\");\n\n                wrapperOffsetWidth = that.wrapper[0].offsetWidth;\n                tabGroupScrollWidth = that.tabGroup[0].scrollWidth;\n\n                if (tabGroupScrollWidth > wrapperOffsetWidth && !that._scrollableModeActive) {\n                    that._nowScrollingTabs = false;\n                    that._isRtl = kendo.support.isRtl(that.element);\n                    var mouseDown = kendo.support.touch ? \"touchstart\" : \"mousedown\";\n                    var mouseUp = kendo.support.touch ? \"touchend\" : \"mouseup\";\n                    var browser = kendo.support.browser;\n                    var isRtlScrollDirection = that._isRtl && !browser.msie && !browser.edge;\n\n                    that.tabWrapper.prepend(scrollButtonHtml(\"prev\", \"caret-alt-left\"));\n                    that.tabWrapper.append(scrollButtonHtml(\"next\", \"caret-alt-right\"));\n\n                    scrollPrevButton = that._scrollPrevButton = that.tabWrapper.children(\".k-tabstrip-prev\");\n                    scrollNextButton = that._scrollNextButton = that.tabWrapper.children(\".k-tabstrip-next\");\n\n                    scrollPrevButton.on(mouseDown + NS, function() {\n                        that._nowScrollingTabs = true;\n                        that._scrollTabsByDelta(options.scrollable.distance * (isRtlScrollDirection ? 1 : -1));\n                    });\n\n                    scrollNextButton.on(mouseDown + NS, function() {\n                        that._nowScrollingTabs = true;\n                        that._scrollTabsByDelta(options.scrollable.distance * (isRtlScrollDirection ? -1 : 1));\n                    });\n\n                    scrollPrevButton.add(scrollNextButton).on(mouseUp + NS, function() {\n                        that._nowScrollingTabs = false;\n                    });\n\n                    that._scrollableModeActive = true;\n\n                    that._toggleScrollButtons();\n                } else if (that._scrollableModeActive && tabGroupScrollWidth <= wrapperOffsetWidth) {\n                    that._scrollableModeActive = false;\n\n                    that.wrapper.removeClass(\"k-tabstrip-scrollable\");\n\n                    that._scrollPrevButton.off().remove();\n                    that._scrollNextButton.off().remove();\n                } else if (!that._scrollableModeActive) {\n                    that.wrapper.removeClass(\"k-tabstrip-scrollable\");\n                } else {\n                    that._toggleScrollButtons();\n                }\n            }\n        },\n\n        _scrollableAllowed: function() {\n            var options = this.options;\n\n            if (options.scrollable && !options.scrollable.distance) {\n                options.scrollable = { distance: DEFAULTDISTANCE };\n            }\n\n            return options.scrollable && !isNaN(options.scrollable.distance) && (options.tabPosition == \"top\" || options.tabPosition == \"bottom\");\n        },\n\n        _scrollTabsToItem: function(item) {\n            var that = this,\n                tabGroup = that.tabGroup,\n                currentScrollOffset = kendo.scrollLeft(tabGroup),\n                itemWidth = outerWidth(item),\n                itemOffset = that._isRtl ? item.position().left : item.position().left - tabGroup.children().first().position().left,\n                tabGroupWidth = tabGroup[0].offsetWidth,\n                browser = kendo.support.browser,\n                itemPosition;\n\n            if (that._isRtl && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                currentScrollOffset = currentScrollOffset * -1;\n            }\n\n            if (that._isRtl) {\n                if (itemOffset < 0) {\n                    itemPosition = currentScrollOffset + itemOffset - (tabGroupWidth - currentScrollOffset);\n                } else if (itemOffset + itemWidth > tabGroupWidth) {\n                    itemPosition = currentScrollOffset + itemOffset - itemWidth;\n                }\n            } else {\n                if (currentScrollOffset + tabGroupWidth < itemOffset + itemWidth) {\n                    itemPosition = itemOffset + itemWidth - tabGroupWidth;\n                } else if (currentScrollOffset > itemOffset) {\n                    itemPosition = itemOffset;\n                }\n            }\n\n            tabGroup.finish().animate({ \"scrollLeft\": itemPosition }, \"fast\", \"linear\", function() {\n                that._toggleScrollButtons();\n            });\n        },\n\n        _scrollTabsByDelta: function(delta) {\n            var that = this;\n            var tabGroup = that.tabGroup;\n            var scrLeft = kendo.scrollLeft(tabGroup);\n            var browser = kendo.support.browser;\n\n            if (that._isRtl && (browser.mozilla || (browser.webkit && browser.version >= 85))) {\n                scrLeft = scrLeft * -1;\n            }\n\n            tabGroup.finish().animate({ \"scrollLeft\": scrLeft + delta }, \"fast\", \"linear\", function() {\n                if (that._nowScrollingTabs && !jQuery.fx.off) {\n                    that._scrollTabsByDelta(delta);\n                } else {\n                    that._toggleScrollButtons();\n                }\n            });\n        },\n\n        _sortable: function() {\n            var that = this,\n            options = that.options,\n            position = options.tabPosition,\n            axis = position === 'left' || position === 'right' ? 'y' : 'x';\n\n            if (!that.options.sortable) {\n                return;\n            }\n\n            that.sortable = new kendo.ui.Sortable(that.tabGroup, {\n                filter: \"li.k-tabstrip-item\",\n                axis,\n                container: that.tabWrapper,\n                hint: el => `<div id='hint' class='k-tabstrip k-tabstrip-${position}'>\n                                <div class= 'k-tabstrip-items-wrapper k-hstack'>\n                                    <ul class='k-tabstrip-items k-reset'>\n                                        <li class='k-item k-tabstrip-item k-first k-active k-tab-on-${position}'>${el.html()}</li>\n                                    </ul>\n                                </div>\n                            </div>`,\n                change: that._sortChange.bind(that),\n                start: e => that.activateTab(e.item)\n            });\n\n        },\n\n        _sortChange: function(e) {\n            var that = this,\n                reference = that.tabGroup.children().eq(e.newIndex);\n\n            if (e.oldIndex < e.newIndex) {\n                that.insertAfter(e.item, reference);\n            } else {\n                that.insertBefore(e.item, reference);\n            }\n        },\n\n        _tabPosition: function() {\n            var that = this,\n                tabPosition = that.options.tabPosition;\n\n            that.wrapper.addClass(\"k-tabstrip-\" + tabPosition);\n\n            if (tabPosition == \"bottom\") {\n                that.tabWrapper.appendTo(that.wrapper);\n            }\n\n            if (tabPosition === \"left\" || tabPosition === \"right\") {\n                that.tabGroup.attr(ARIA_ORIENTATION, \"vertical\");\n            }\n\n            that.resize(true);\n        },\n\n        _toggleHover: function(e) {\n            $(e.currentTarget).toggleClass(HOVERSTATE, e.type == MOUSEENTER);\n        },\n\n        _toggleDisabled: function(element, enable) {\n            element = this.tabGroup.find(element);\n            element.each(function() {\n                $(this)\n                    .toggleClass(DISABLEDSTATE, !enable)\n                    .attr(ARIA_DISABLED, !enable);\n            });\n        },\n\n        _toggleScrollButtons: function() {\n            var that = this,\n                ul = that.tabGroup,\n                scrollLeft = kendo.scrollLeft(ul);\n\n                that._scrollPrevButton.toggleClass('k-disabled', scrollLeft === 0);\n                that._scrollNextButton.toggleClass('k-disabled', scrollLeft === ul[0].scrollWidth - ul[0].offsetWidth);\n        },\n\n        _updateClasses: function() {\n            var that = this,\n                tabs, activeItem, activeTab;\n            var isHorizontal = /top|bottom/.test(that.options.tabPosition);\n\n            that.wrapper.addClass(\"k-widget k-tabstrip\");\n\n            if (!that.tabGroup) {\n                that.tabGroup = that.wrapper.children(\"ul\");\n                that.tabGroup.wrap('<div />');\n                that.tabWrapper = that.tabGroup.parent();\n            }\n\n            if (!that.tabGroup[0]) {\n                that.tabGroup = $(\"<ul />\").prependTo(that.wrapper);\n                that.tabGroup.wrap('<div />');\n                that.tabWrapper = that.tabGroup.parent();\n            }\n\n            that.tabWrapper.addClass('k-tabstrip-items-wrapper');\n            that.tabWrapper.addClass(isHorizontal ? 'k-hstack' : 'k-vstack');\n            that.tabGroup.addClass('k-tabstrip-items k-reset');\n\n            tabs = that.tabGroup.find(\"li\").addClass(\"k-tabstrip-item k-item\");\n\n            if (tabs.length) {\n                activeItem = tabs.filter(\".\" + ACTIVESTATE).index();\n                activeTab = activeItem >= 0 ? activeItem : undefined$1;\n\n                that.tabGroup // Remove empty text nodes\n                    .contents()\n                    .filter(function() { return (this.nodeType == 3 && !trim(this.nodeValue)); })\n                    .remove();\n            }\n\n            if (activeItem >= 0) {\n                tabs.eq(activeItem).addClass(TABONTOP);\n            }\n\n            that.contentElements = that.wrapper.children(\"div:not(.k-tabstrip-items-wrapper)\");\n\n            that.contentElements\n                .addClass(CONTENT)\n                .eq(activeTab)\n                .addClass(ACTIVESTATE)\n                .css({ display: \"block\" });\n\n            if (tabs.length) {\n                updateTabClasses(tabs);\n                activeItem = tabs.filter(\".\" + ACTIVESTATE).index();\n\n                that.tabGroup.attr(\"aria-activedescendant\", tabs.eq(activeItem).attr(\"id\"));\n                updateFirstLast(that.tabGroup);\n                that._updateContentElements(true);\n            }\n        },\n\n        _updateContentElements: function(isInitialUpdate) {\n            var that = this,\n                contentUrls = that._contentUrls,\n                items = that.tabGroup.children(\".k-item\"),\n                contentElements = that.wrapper.children(\"div:not(.k-tabstrip-items-wrapper)\"),\n                _elementId = that._elementId.bind(that);\n\n            if (contentElements.length && (items.length > contentElements.length)) {\n                contentElements.each(function(idx) {\n                    // Generate an ID for each content element\n                    var contentId = _elementId($(this), idx),\n                        item = items.filter(\"[aria-controls=\" + (contentId || 0) + \"]\")[0],\n                        tabId;\n\n                    if (!item && isInitialUpdate) {\n                        // On initialization of the widget get the tab by its index\n                        item = items[idx];\n                    }\n\n                    if (item) {\n                        // set the tab aria-controls attribute to the content ID\n                        item.setAttribute(ARIA_CONTROLS, contentId);\n                        tabId = item.id = _elementId($(item), idx, true);\n                        this.setAttribute(ARIA_LABELLEDBY, tabId);\n                    }\n\n                    // set the get (possibly existing) ID on the content element\n                    this.setAttribute(\"id\", contentId);\n                });\n            } else {\n                items.each(function(idx) {\n                    var currentContent = contentElements.eq(idx),\n                        contentId = _elementId(currentContent, idx),\n                        tabId;\n\n                    // set the tab aria-controls attribute to the content ID\n                    this.setAttribute(ARIA_CONTROLS, contentId);\n\n                    tabId = this.id = _elementId($(this), idx, true);\n\n                    if (!currentContent.length && contentUrls[idx]) {\n                        // Append content element in case contentUrl is used\n                        $(\"<div class='\" + CONTENT + \"'/>\").appendTo(that.wrapper).attr(\"id\", contentId);\n                    } else {\n                        // set the ID on the content element\n                        currentContent.attr(\"id\", contentId);\n\n                        if (!$(this).children(\".k-loading\")[0] && !contentUrls[idx]) {\n                            $(\"<span class='k-loading k-complete'/>\").prependTo(this);\n                        }\n                    }\n\n                    currentContent.attr(\"role\", \"tabpanel\");\n                    currentContent.attr(\"tabindex\", \"0\");\n                    currentContent.attr(ARIA_LABELLEDBY, tabId);\n                    currentContent.filter(\":not(.\" + ACTIVESTATE + \")\").attr(ARIA_HIDDEN, true);\n                });\n            }\n\n            that.contentElements = that.contentAnimators = that.wrapper.children(\"div:not(.k-tabstrip-items-wrapper)\"); // refresh the contents\n\n            that.tabsHeight = outerHeight(that.tabGroup) +\n                              parseInt(that.wrapper.css(\"border-top-width\"), 10) +\n                              parseInt(that.wrapper.css(\"border-bottom-width\"), 10);\n\n            if (kendo.kineticScrollNeeded && kendo.mobile.ui.Scroller) {\n                kendo.touchScroller(that.contentElements);\n                that.contentElements = that.contentElements.children(\".km-scroll-container\");\n            }\n        },\n\n        _wrapper: function() {\n            var that = this;\n\n            if (that.element.is(\"ul\")) {\n                that.wrapper = that.element.wrapAll(\"<div />\").parent();\n            } else {\n                that.wrapper = that.element;\n            }\n        }\n    });\n\n    // client-side rendering\n    extend(TabStrip, {\n        renderItem: function(options) {\n            options = extend({ tabStrip: {}, group: {} }, options);\n\n            var empty = templates.empty,\n                item = options.item,\n                templateOptions = extend(options, {\n                    image: item.imageUrl ? templates.image : empty,\n                    sprite: item.spriteCssClass ? templates.sprite : empty,\n                    textWrapper: templates.textWrapper\n                }, rendering);\n\n                if (item.template) {\n                    return templates.itemWrapper(templateOptions, kendo.template(item.template)(item.model));\n                }\n\n            return templates.item(templateOptions);\n        },\n\n        renderContent: function(options) {\n            return templates.content(extend(options, rendering));\n        }\n    });\n\n    kendo.ui.plugin(TabStrip);\n\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.tabstrip.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.textarea.js":
/*!**********************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.textarea.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* harmony import */ var _kendo_floatinglabel_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.floatinglabel.js */ \"./node_modules/kendo-ui-core/esm/kendo.floatinglabel.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\nlet $ = kendo.jQuery;\n\nfunction addInputPrefixSuffixContainers({ widget, wrapper, options, prefixInsertBefore, suffixInsertAfter }) {\n    var prefix = options.prefixOptions,\n        suffix = options.suffixOptions,\n        hasPrefixContent = prefix.template || prefix.icon,\n        hasSuffixContent = suffix.template || suffix.icon,\n        suffixInsertAfter = suffixInsertAfter || prefixInsertBefore,\n        layoutFlow = options.layoutFlow,\n        containerOrientation = layoutFlow ? (layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\") : \"horizontal\",\n        separatorOrientation = layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\",\n        INPUT_SEPARATOR = `<span class=\"k-input-separator k-input-separator-${separatorOrientation}\"></span>`,\n        prefixContainer,\n        suffixContainer;\n\n    if (prefix && hasPrefixContent) {\n        prefixContainer = wrapper.children(\".k-input-prefix\");\n\n        if (!prefixContainer[0]) {\n            prefixContainer = $(`<span class=\"k-input-prefix k-input-prefix-${containerOrientation}\" />`);\n            if (prefixInsertBefore) {\n                prefixContainer.insertBefore(prefixInsertBefore);\n            } else {\n                prefixContainer.prependTo(wrapper);\n            }\n        }\n\n        if (prefix.icon) {\n            prefixContainer.html(kendo.html.renderIcon({ icon: prefix.icon }));\n        }\n\n        if (prefix.template) {\n            prefixContainer.html(kendo.template(prefix.template)({}));\n        }\n\n        if (prefix.separator) {\n            $(INPUT_SEPARATOR).insertAfter(prefixContainer);\n        }\n    }\n\n    if (suffix && hasSuffixContent) {\n        suffixContainer = wrapper.children(\".k-input-suffix\");\n\n        if (!suffixContainer[0]) {\n            suffixContainer = $(`<span class=\"k-input-suffix k-input-suffix-${containerOrientation}\" />`).appendTo(wrapper);\n            if (suffixInsertAfter) {\n                suffixContainer.insertAfter(suffixInsertAfter);\n            } else {\n                suffixContainer.appendTo(wrapper);\n            }\n        }\n\n        if (suffix.icon) {\n            suffixContainer.html(kendo.html.renderIcon({ icon: suffix.icon }));\n        }\n\n        if (suffix.template) {\n            suffixContainer.html(kendo.template(suffix.template)({}));\n        }\n\n        if (suffix.separator) {\n            $(INPUT_SEPARATOR).insertBefore(suffixContainer);\n        }\n    }\n\n    widget._prefixContainer = prefixContainer;\n    widget._suffixContainer = suffixContainer;\n}\n\nvar __meta__ = {\n    id: \"textarea\",\n    name: \"TextArea\",\n    category: \"web\",\n    description: \"The TextArea widget represents a multi-line plain-text editing control which enables you to style and provide a floating label functionality to textarea elements\",\n    depends: [\"core\", \"floatinglabel\"]\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        Widget = kendo.ui.Widget,\n        ui = kendo.ui,\n        isPlainObject = $.isPlainObject,\n        NS = \".kendoTextArea\",\n        CHANGE = \"change\",\n        DISABLED = \"disabled\",\n        READONLY = \"readonly\",\n        INPUT = \"k-input-inner\",\n        FOCUSED = \"k-focus\",\n        LABELCLASSES = \"k-label k-input-label\",\n        FLOATINGLABELCLASS = \"k-floating-label\",\n        STATEDISABLED = \"k-disabled\",\n        STATEREADONLY = \"k-readonly\",\n        ARIA_DISABLED = \"aria-disabled\",\n        TEXTAREACONTAINER = \"k-textarea-container\";\n\n    var TextArea = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n            options = $.extend(true, {}, options);\n\n            that.options.value = options.value || that.element.val();\n            that.options.readonly = options.readonly !== undefined$1 ? options.readonly : Boolean(that.element.attr(\"readonly\"));\n            that.options.enable = options.enable !== undefined$1 ? options.enable : !(Boolean(that.element.attr(\"disabled\")));\n            that.options.placeholder = options.placeholder || that.element.attr(\"placeholder\");\n            that.options.maxLength = options.maxLength || that.element.attr(\"maxlength\");\n\n            if (!that.options.value.replace(/\\s/g, '').length) {\n                that.options.value = '';\n                that.element.val('');\n            }\n\n            that.value(that.options.value);\n            that._wrapper();\n            that._label();\n            that._editable({\n                readonly: that.options.readonly,\n                disable: !(that.options.enable)\n            });\n            that._applyAttributes();\n            that._applyCssClasses();\n            that.element.attr(\"autocomplete\", \"off\");\n\n            addInputPrefixSuffixContainers({ widget: that, wrapper: that.wrapper, options: that.options });\n            if (that.floatingLabel) {\n                that.floatingLabel.refresh();\n            }\n\n            kendo.notify(that);\n        },\n\n        events: [\n            CHANGE\n        ],\n\n        attributes: [\n            \"maxLength\",\n            \"rows\",\n            \"placeholder\"\n        ],\n\n        options: {\n            name: 'TextArea',\n            value: '',\n            readonly: false,\n            enable: true,\n            placeholder: '',\n            label: null,\n            resizable: \"none\",\n            maxLength: null,\n            cols: 20,\n            rows: 1,\n            rounded: \"medium\",\n            size: \"medium\",\n            fillMode: \"solid\",\n            resize: \"none\",\n            overflow: \"auto\",\n            layoutFlow: \"vertical\",\n            prefixOptions: {\n                separator: true\n            },\n            suffixOptions: {\n                separator: true\n            }\n        },\n\n        _applyCssClasses: function(action) {\n            var that = this,\n                options = that.options,\n                resize = kendo.cssProperties.getValidClass({\n                    widget: options.name,\n                    propName: \"resize\",\n                    value: options.resize\n                }),\n                overflow = kendo.cssProperties.getValidClass({\n                    widget: options.name,\n                    propName: \"overflow\",\n                    value: options.overflow\n                }),\n                layoutFlow = kendo.cssProperties.getValidClass({\n                    widget: options.name,\n                    propName: \"layoutFlow\",\n                    value: options.layoutFlow\n                });\n\n            Widget.fn._applyCssClasses.call(that);\n\n            if (!resize && options.resize === \"none\") {\n                resize = \"k-resize-none\";\n            }\n\n            if (overflow) {\n                overflow = \"!\" + overflow;\n            }\n\n            action = action || \"addClass\";\n\n            that.element[action](resize);\n            that.element[action](overflow);\n            that.element[action](INPUT);\n            that.wrapper[action](layoutFlow);\n            if (options.layoutFlow == \"vertical\") {\n                that.element[action](\"!k-flex-none\");\n            }\n        },\n\n        _applyAttributes: function() {\n            var that = this;\n            var property;\n            var attributes = {};\n\n            for (property in that.attributes) {\n                attributes[that.attributes[property]] = that.options[that.attributes[property]];\n            }\n\n            that.element.attr(attributes);\n        },\n\n        value: function(value) {\n            var that = this;\n\n            if (value === undefined$1) {\n                return that._value;\n            }\n\n            that._value = value;\n            that.element.val(value);\n        },\n\n        readonly: function(readonly) {\n            var that = this;\n\n            this._editable({\n                readonly: readonly === undefined$1 ? true : readonly,\n                disable: false\n            });\n\n            if (that.floatingLabel) {\n                that.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n            }\n        },\n\n        enable: function(enable) {\n            var that = this;\n\n            this._editable({\n                readonly: false,\n                disable: !(enable = enable === undefined$1 ? true : enable)\n            });\n\n            if (that.floatingLabel) {\n                that.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n            }\n        },\n\n        focus: function() {\n            var that = this;\n\n            that.element[0].focus();\n        },\n\n        destroy: function() {\n            var that = this;\n\n            that._applyCssClasses(\"removeClass\");\n\n            if (that.floatingLabel) {\n                that.floatingLabel.destroy();\n            }\n\n            if (that._inputLabel) {\n                that._inputLabel.remove();\n                that._inputLabel = null;\n            }\n\n            // Move the styles back to the element.\n            that.element[0].style.cssText = that.wrapper[0].style.cssText;\n\n            that.element.off(NS);\n            that.element.unwrap();\n            that.wrapper = null;\n            Widget.fn.destroy.call(that);\n        },\n\n        setOptions: function(options) {\n            var that = this;\n            that.destroy();\n            that.init(that.element, options);\n        },\n\n        _editable: function(options) {\n            var that = this;\n            var element = that.element;\n            var wrapper = that.wrapper;\n            var disable = options.disable;\n            var readonly = options.readonly;\n\n            element.off(NS);\n\n            if (!readonly && !disable) {\n                element.prop(DISABLED, false)\n                       .prop(READONLY, false)\n                       .attr(ARIA_DISABLED, false);\n\n                wrapper.removeClass(STATEDISABLED)\n                        .removeClass(STATEREADONLY);\n\n                element.on(\"focusin\" + NS, that._focusin.bind(that));\n                element.on(\"focusout\" + NS, that._focusout.bind(that));\n            } else {\n                element.attr(DISABLED, disable)\n                       .attr(READONLY, readonly)\n                       .attr(ARIA_DISABLED, disable);\n\n                wrapper.toggleClass(STATEDISABLED, disable)\n                        .toggleClass(STATEREADONLY, readonly);\n            }\n        },\n\n        _label: function() {\n            var that = this;\n            var element = that.element;\n            var options = that.options;\n            var id = element.attr(\"id\");\n            var floating;\n            var labelText;\n\n            if (options.label !== null) {\n                floating = isPlainObject(options.label) ? options.label.floating : false;\n                labelText = isPlainObject(options.label) ? options.label.content : options.label;\n\n                if (floating) {\n                    that._floatingLabelContainer = that.wrapper.wrap(\"<span></span>\").parent();\n                    that.floatingLabel = new kendo.ui.FloatingLabel(that._floatingLabelContainer, { widget: that });\n                    that._floatingLabelContainer.addClass(TEXTAREACONTAINER);\n                }\n\n                if (kendo.isFunction(labelText)) {\n                    labelText = labelText.call(that);\n                }\n\n                if (!labelText) {\n                    labelText = \"\";\n                }\n\n                if (!id) {\n                    id = options.name + \"_\" + kendo.guid();\n                    element.attr(\"id\", id);\n                }\n\n                that._inputLabel = $(\"<label class='\" + (floating ? FLOATINGLABELCLASS : LABELCLASSES) + \"' for='\" + id + \"'>\" + labelText + \"</label>'\")[floating ? \"insertAfter\" : \"insertBefore\"](that.wrapper);\n            }\n        },\n\n        _focusin: function() {\n            var that = this;\n\n            that.wrapper.addClass(FOCUSED);\n        },\n\n        _focusout: function() {\n            var that = this;\n            var value = that._value;\n            var newValue = that.element.val();\n\n            that.wrapper.removeClass(FOCUSED);\n\n            if (value === null) {\n                value = \"\";\n            }\n\n            if (value !== newValue) {\n                that._value = newValue;\n\n                that.trigger(CHANGE);\n            }\n        },\n\n        _wrapper: function() {\n            var that = this;\n            var element = that.element;\n            var DOMElement = element[0];\n            var wrapper;\n\n            wrapper = element.wrap(\"<span class='k-input k-textarea'></span>\").parent();\n            wrapper[0].style.cssText = DOMElement.style.cssText;\n            DOMElement.style.width = \"\";\n\n            that.wrapper = wrapper.addClass(DOMElement.className).removeClass('input-validation-error');\n        }\n    });\n\n    kendo.cssProperties.registerPrefix(\"TextArea\", \"k-input-\");\n\n    kendo.cssProperties.registerValues(\"TextArea\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n    ui.plugin(TextArea);\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.textarea.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.textbox.js":
/*!*********************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.textbox.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* harmony import */ var _kendo_floatinglabel_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.floatinglabel.js */ \"./node_modules/kendo-ui-core/esm/kendo.floatinglabel.js\");\n/* harmony import */ var _kendo_icons_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kendo.icons.js */ \"./node_modules/kendo-ui-core/esm/kendo.icons.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\n\nlet $ = kendo.jQuery;\n\nfunction addInputPrefixSuffixContainers({ widget, wrapper, options, prefixInsertBefore, suffixInsertAfter }) {\n    var prefix = options.prefixOptions,\n        suffix = options.suffixOptions,\n        hasPrefixContent = prefix.template || prefix.icon,\n        hasSuffixContent = suffix.template || suffix.icon,\n        suffixInsertAfter = suffixInsertAfter || prefixInsertBefore,\n        layoutFlow = options.layoutFlow,\n        containerOrientation = layoutFlow ? (layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\") : \"horizontal\",\n        separatorOrientation = layoutFlow == \"vertical\" ? \"horizontal\" : \"vertical\",\n        INPUT_SEPARATOR = `<span class=\"k-input-separator k-input-separator-${separatorOrientation}\"></span>`,\n        prefixContainer,\n        suffixContainer;\n\n    if (prefix && hasPrefixContent) {\n        prefixContainer = wrapper.children(\".k-input-prefix\");\n\n        if (!prefixContainer[0]) {\n            prefixContainer = $(`<span class=\"k-input-prefix k-input-prefix-${containerOrientation}\" />`);\n            if (prefixInsertBefore) {\n                prefixContainer.insertBefore(prefixInsertBefore);\n            } else {\n                prefixContainer.prependTo(wrapper);\n            }\n        }\n\n        if (prefix.icon) {\n            prefixContainer.html(kendo.html.renderIcon({ icon: prefix.icon }));\n        }\n\n        if (prefix.template) {\n            prefixContainer.html(kendo.template(prefix.template)({}));\n        }\n\n        if (prefix.separator) {\n            $(INPUT_SEPARATOR).insertAfter(prefixContainer);\n        }\n    }\n\n    if (suffix && hasSuffixContent) {\n        suffixContainer = wrapper.children(\".k-input-suffix\");\n\n        if (!suffixContainer[0]) {\n            suffixContainer = $(`<span class=\"k-input-suffix k-input-suffix-${containerOrientation}\" />`).appendTo(wrapper);\n            if (suffixInsertAfter) {\n                suffixContainer.insertAfter(suffixInsertAfter);\n            } else {\n                suffixContainer.appendTo(wrapper);\n            }\n        }\n\n        if (suffix.icon) {\n            suffixContainer.html(kendo.html.renderIcon({ icon: suffix.icon }));\n        }\n\n        if (suffix.template) {\n            suffixContainer.html(kendo.template(suffix.template)({}));\n        }\n\n        if (suffix.separator) {\n            $(INPUT_SEPARATOR).insertBefore(suffixContainer);\n        }\n    }\n\n    widget._prefixContainer = prefixContainer;\n    widget._suffixContainer = suffixContainer;\n}\n\nvar __meta__ = {\n    id: \"textbox\",\n    name: \"TextBox\",\n    category: \"web\",\n    description: \"The TextBox widget enables you to style and provide a floating label functionality to input elements\",\n    depends: [\"core\", \"floatinglabel\", \"icons\"]\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        Widget = kendo.ui.Widget,\n        ui = kendo.ui,\n        isPlainObject = $.isPlainObject,\n        NS = \".kendoTextBox\",\n        CHANGE = \"change\",\n        DISABLED = \"disabled\",\n        READONLY = \"readonly\",\n        INPUT = \"k-input-inner\",\n        INPUT_EV = \"input\",\n        FOCUSED = \"k-focus\",\n        LABELCLASSES = \"k-label k-input-label\",\n        FLOATINGLABELCLASS = \"k-floating-label\",\n        STATEDISABLED = \"k-disabled\",\n        STATEREADONLY = \"k-readonly\",\n        HIDDENCLASS = \"k-hidden\",\n        ARIA_DISABLED = \"aria-disabled\";\n\n    var TextBox = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n            options = $.extend(true, {}, options);\n\n            that.options.value = options.value || that.element.val();\n            that.options.readonly = options.readonly !== undefined$1 ? options.readonly : Boolean(that.element.attr(\"readonly\"));\n            that.options.enable = options.enable !== undefined$1 ? options.enable : !(Boolean(that.element.attr(\"disabled\")));\n            that.options.placeholder = options.placeholder || that.element.attr(\"placeholder\");\n\n            that.value(that.options.value);\n            that._wrapper();\n            that._label();\n            that._editable({\n                readonly: that.options.readonly,\n                disable: !(that.options.enable)\n            });\n\n            that.element\n                .addClass(INPUT)\n                .attr(\"placeholder\", that.options.placeholder)\n                .attr(\"autocomplete\", \"off\");\n\n            if (options.icon) {\n                that._icon();\n            }\n\n            addInputPrefixSuffixContainers({ widget: that, wrapper: that.wrapper, options: that.options });\n            that._clearButton();\n            if (that._clear) {\n                that._clear.on(\"click\" + NS + \" touchend\" + NS, that._clearValue.bind(that));\n            }\n\n            kendo.notify(that);\n            that._applyCssClasses();\n            if (that.floatingLabel) {\n                that.floatingLabel.refresh();\n            }\n        },\n\n        events: [\n            CHANGE,\n            INPUT_EV\n        ],\n\n        options: {\n            name: 'TextBox',\n            value: '',\n            readonly: false,\n            clearButton: false,\n            enable: true,\n            placeholder: '',\n            label: null,\n            rounded: \"medium\",\n            size: \"medium\",\n            fillMode: \"solid\",\n            icon: null,\n            prefixOptions: {\n                separator: true\n            },\n            suffixOptions: {\n                separator: true\n            }\n        },\n\n        value: function(value) {\n            var that = this;\n\n            if (value === undefined$1) {\n                return that._value;\n            }\n\n            that._value = value;\n            that.element.val(value);\n\n            value ? that._showClear() : that._hideClear();\n\n            if (that.floatingLabel) {\n                that.floatingLabel.refresh();\n            }\n        },\n\n        readonly: function(readonly) {\n            var that = this;\n\n            this._editable({\n                readonly: readonly === undefined$1 ? true : readonly,\n                disable: false\n            });\n\n            if (that.floatingLabel) {\n                that.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n            }\n        },\n\n        enable: function(enable) {\n            var that = this;\n\n            this._editable({\n                readonly: false,\n                disable: !(enable = enable === undefined$1 ? true : enable)\n            });\n\n            if (that.floatingLabel) {\n                that.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n            }\n        },\n\n        focus: function() {\n            var that = this;\n\n            that.element[0].focus();\n        },\n\n        destroy: function() {\n            var that = this;\n\n            if (that.floatingLabel) {\n                that.floatingLabel.destroy();\n            }\n\n            if (that._clear) {\n                that._clear.off(NS);\n                that._clear = null;\n            }\n\n            that.element.off(NS);\n            that.element[0].style.width = \"\";\n            that.element.removeClass(INPUT);\n            Widget.fn.destroy.call(that);\n        },\n\n        setOptions: function(options) {\n            this.destroy();\n\n            if (this._inputLabel) {\n                this._inputLabel.remove();\n                this._inputLabel = null;\n            }\n\n            if (this._floatingLabelContainer) {\n                this.floatingLabel.destroy();\n                this.floatingLabel = null;\n                this.element.unwrap();\n                this.element.unwrap();\n                this._floatingLabelContainer = null;\n            } else {\n                this.element.unwrap();\n            }\n\n            kendo.deepExtend(this.options, options);\n            this.init(this.element, this.options);\n        },\n\n        _clearValue: function(e) {\n            this.element.val(\"\");\n            this.element.focus();\n            this.element.trigger(CHANGE, { value: \"\", originalEvent: e });\n            this._hideClear();\n        },\n\n        _hideClear: function() {\n            if (this._clear) {\n                this._clear.addClass(HIDDENCLASS);\n            }\n        },\n\n        _showClear: function() {\n            if (this._clear) {\n                this._clear.removeClass(HIDDENCLASS);\n            }\n        },\n\n        _clearButton: function() {\n            let that = this;\n\n            if (!that._clear) {\n                that._clear = $(`<span unselectable=\"on\" class=\"k-clear-value\" title=\"Clear\">${kendo.ui.icon(\"x\")}</span>`).attr({\n                    \"role\": \"button\",\n                    \"tabIndex\": -1\n                });\n                that._clear.appendTo(that.wrapper);\n            }\n\n            if (!that.options.clearButton) {\n                that._clear.remove();\n            }\n\n            if (!that.element.val()) {\n                that._hideClear();\n            }\n        },\n\n        _editable: function(options) {\n            var that = this;\n            var element = that.element;\n            var wrapper = that.wrapper;\n            var disable = options.disable;\n            var readonly = options.readonly;\n\n            element.off(NS);\n\n            if (!readonly && !disable) {\n                element.prop(DISABLED, false)\n                       .prop(READONLY, false)\n                       .attr(ARIA_DISABLED, false);\n\n                wrapper.removeClass(STATEDISABLED)\n                        .removeClass(STATEREADONLY);\n\n                element.on(\"focusin\" + NS, that._focusin.bind(that));\n                element.on(\"focusout\" + NS, that._focusout.bind(that));\n                element.on(CHANGE + NS, that._change.bind(that));\n                element.on(INPUT_EV + NS, that._input.bind(that));\n            } else {\n                element.attr(DISABLED, disable)\n                       .attr(READONLY, readonly)\n                       .attr(ARIA_DISABLED, disable);\n\n                wrapper.toggleClass(STATEDISABLED, disable)\n                        .toggleClass(STATEREADONLY, readonly);\n            }\n        },\n\n        _icon: function() {\n            this.wrapper.prepend(kendo.ui.icon({ icon: this.options.icon, iconClass: \"k-input-icon\" }));\n        },\n\n        _input: function(e) {\n            var that = this;\n            var newValue = that.element.val();\n\n            that.trigger(INPUT_EV, { value: newValue, originalEvent: e });\n        },\n\n        _label: function() {\n            var that = this;\n            var element = that.element;\n            var options = that.options;\n            var id = element.attr(\"id\");\n            var floating;\n            var labelText;\n\n            if (options.label !== null) {\n                floating = isPlainObject(options.label) ? options.label.floating : false;\n                labelText = isPlainObject(options.label) ? options.label.content : options.label;\n\n                if (floating) {\n                    that._floatingLabelContainer = that.wrapper.wrap(\"<span></span>\").parent();\n                    that.floatingLabel = new kendo.ui.FloatingLabel(that._floatingLabelContainer, { widget: that });\n                }\n\n                if (kendo.isFunction(labelText)) {\n                    labelText = labelText.call(that);\n                }\n\n                if (!labelText) {\n                    labelText = \"\";\n                }\n\n                if (!id) {\n                    id = options.name + \"_\" + kendo.guid();\n                    element.attr(\"id\", id);\n                }\n                that._inputLabel = $(\"<label class='\" + (floating ? FLOATINGLABELCLASS : LABELCLASSES) + \"' for='\" + id + \"'>\" + labelText + \"</label>'\")[floating ? \"insertAfter\" : \"insertBefore\"](that.wrapper);\n            }\n        },\n\n        _focusin: function() {\n            var that = this;\n\n            that.wrapper.addClass(FOCUSED);\n        },\n\n        _focusout: function() {\n            var that = this;\n\n            that.wrapper.removeClass(FOCUSED);\n        },\n\n        _change: function(e) {\n            var that = this;\n            var newValue = that.element.val();\n\n            that._value = newValue;\n\n            that.trigger(CHANGE, { value: newValue, originalEvent: e });\n            newValue ? that._showClear() : that._hideClear();\n        },\n\n        _wrapper: function() {\n            var that = this;\n            var element = that.element;\n            var DOMElement = element[0];\n            var wrapper;\n\n            wrapper = element.wrap(\"<span class='k-input k-textbox'></span>\").parent();\n            wrapper[0].style.cssText = DOMElement.style.cssText;\n            DOMElement.style.width = \"100%\";\n            that.wrapper = wrapper.addClass(DOMElement.className).removeClass('input-validation-error');\n        }\n    });\n\n    kendo.cssProperties.registerPrefix(\"TextBox\", \"k-input-\");\n\n    kendo.cssProperties.registerValues(\"TextBox\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n    ui.plugin(TextBox);\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.textbox.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.timepicker.js":
/*!************************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.timepicker.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _kendo_popup_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.popup.js */ \"./node_modules/kendo-ui-core/esm/kendo.popup.js\");\n/* harmony import */ var _kendo_dateinput_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.dateinput.js */ \"./node_modules/kendo-ui-core/esm/kendo.dateinput.js\");\n/* harmony import */ var _kendo_html_button_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kendo.html.button.js */ \"./node_modules/kendo-ui-core/esm/kendo.html.button.js\");\n/* harmony import */ var _kendo_label_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./kendo.label.js */ \"./node_modules/kendo-ui-core/esm/kendo.label.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\n\n\n// The current file development is no longer in active phase but the code will be kept as is.\n\nvar __meta__ = {\n    id: \"timepicker\",\n    name: \"TimePicker\",\n    category: \"web\",\n    description: \"The TimePicker widget allows the end user to select a value from a list of predefined values or to type a new value.\",\n    depends: [ \"calendar\", \"popup\", \"html.button\", \"label\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        keys = kendo.keys,\n        html = kendo.html,\n        parse = kendo.parseDate,\n        activeElement = kendo._activeElement,\n        extractFormat = kendo._extractFormat,\n        support = kendo.support,\n        browser = support.browser,\n        ui = kendo.ui,\n        Widget = ui.Widget,\n        OPEN = \"open\",\n        CLOSE = \"close\",\n        CHANGE = \"change\",\n        ns = \".kendoTimePicker\",\n        CLICK = \"click\" + ns,\n        DISABLED = \"disabled\",\n        READONLY = \"readonly\",\n        LI = \"li\",\n        SPAN = \"<span></span>\",\n        FOCUSED = \"k-focus\",\n        HOVER = \"k-hover\",\n        HOVEREVENTS = \"mouseenter\" + ns + \" mouseleave\" + ns,\n        MOUSEDOWN = \"mousedown\" + ns,\n        MS_PER_MINUTE = 60000,\n        MS_PER_DAY = 86400000,\n        SELECTED = \"k-selected\",\n        STATEDISABLED = \"k-disabled\",\n        ARIA_SELECTED = \"aria-selected\",\n        ARIA_EXPANDED = \"aria-expanded\",\n        ARIA_HIDDEN = \"aria-hidden\",\n        ARIA_DISABLED = \"aria-disabled\",\n        ARIA_READONLY = \"aria-readonly\",\n        ARIA_ACTIVEDESCENDANT = \"aria-activedescendant\",\n        ID = \"id\",\n        isArray = Array.isArray,\n        extend = $.extend,\n        DATE = Date,\n        dateFormatRegExp = /d{1,2}|E{1,6}|e{1,6}|c{3,6}|c{1}|M{1,5}|L{1,5}|y{1,4}|H{1,2}|h{1,2}|k{1,2}|K{1,2}|m{1,2}|a{1,5}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|x{1,5}|X{1,5}|G{1,5}|q{1,5}|Q{1,5}|\"[^\"]*\"|'[^']*'/g,\n        LITERAL = \"literal\",\n        MONTH = \"month\",\n        HOUR = \"hour\",\n        ZONE = \"zone\",\n        WEEKDAY = \"weekday\",\n        QUARTER = \"quarter\",\n        DATE_FIELD_MAP = {\n            \"G\": \"era\",\n            \"y\": \"year\",\n            \"q\": QUARTER,\n            \"Q\": QUARTER,\n            \"M\": MONTH,\n            \"L\": MONTH,\n            \"d\": \"day\",\n            \"E\": WEEKDAY,\n            \"c\": WEEKDAY,\n            \"e\": WEEKDAY,\n            \"h\": HOUR,\n            \"H\": HOUR,\n            \"k\": HOUR,\n            \"K\": HOUR,\n            \"m\": \"minute\",\n            \"s\": \"second\",\n            \"a\": \"dayperiod\",\n            \"x\": ZONE,\n            \"X\": ZONE,\n            \"z\": ZONE,\n            \"Z\": ZONE\n        },\n        NAME_TYPES = {\n            month: {\n                type: \"months\",\n                minLength: 3,\n                standAlone: \"L\"\n            },\n\n            quarter: {\n                type: \"quarters\",\n                minLength: 3,\n                standAlone: \"q\"\n            },\n\n            weekday: {\n                type: \"days\",\n                minLength: {\n                    E: 0,\n                    c: 3,\n                    e: 3\n                },\n                standAlone: \"c\"\n            },\n\n            dayperiod: {\n                type: \"dayPeriods\",\n                minLength: 0\n            },\n\n            era: {\n                type: \"eras\",\n                minLength: 0\n            }\n        },\n        TODAY = new DATE(),\n        MODERN_RENDERING_TEMPLATE = ({ mainSize, messages, buttonSize }) =>\n        '<div>' +\n            `<div tabindex=\"0\" class=\"k-timeselector ${mainSize}\">` +\n                '<div class=\"k-time-header\">' +\n                    '<span class=\"k-title\"></span>' +\n                    kendo.html.renderButton(`<button class=\"k-time-now\" title=\"Select now\" aria-label=\"Select now\">${messages.now}</button>`, {\n                        fillMode: \"flat\",\n                        size: buttonSize\n                    }) +\n                '</div>' +\n                '<div class=\"k-time-list-container\">' +\n                    '<span class=\"k-time-highlight\"></span>' +\n                '</div>' +\n            '</div>' +\n            NEW_RENDERING_FOOTER(buttonSize, messages) +\n        '</div>',\n        NEW_RENDERING_FOOTER = (buttonSize, messages) => '<div class=\"k-time-footer k-actions k-actions-stretched k-actions-horizontal\">' +\n            kendo.html.renderButton(`<button class=\"k-time-accept\" title=\"Set time\" aria-label=\"Set time\">${messages.set}</button>`, {\n                size: buttonSize,\n                themeColor: \"primary\"\n            }) +\n            kendo.html.renderButton(`<button class=\"k-time-cancel\" title=\"Cancel changes\" aria-label=\"Cancel changes\">${messages.cancel}</button>`, {\n                size: buttonSize\n            }) +\n        '</div>',\n        HIGHLIGHTCONTAINER = '<span class=\"k-time-highlight\"></span>';\n\n        TODAY = new Date(TODAY.getFullYear(), TODAY.getMonth(), TODAY.getDate(), 0, 0, 0);\n\n    var TimeView = function(options) {\n        var that = this,\n        id = options.id;\n\n        that.options = options;\n        that._dates = [];\n\n        that._createList(options.timeView && options.timeView.list === \"scroll\");\n\n        if (id) {\n            that._timeViewID = id + \"_timeview\";\n            that._optionID = id + \"_option_selected\";\n\n            that.ul.attr(ID, that._timeViewID);\n        }\n\n        that._heightHandler = that._height.bind(that);\n        that._popup();\n    };\n\n    TimeView.prototype = {\n        _createList: function(scroll) {\n            if (scroll) {\n                this._createScrollList();\n            } else {\n                this._createClassicRenderingList();\n            }\n        },\n        _createScrollList: function() {\n            var templateOptions = $.extend({}, this.options, {\n                mainSize: kendo.getValidCssClass(\"k-timeselector-\", \"size\", this.options.size || \"medium\"),\n                buttonSize: this.options.size || \"medium\"\n            });\n            this.popupContent = $(kendo.template(MODERN_RENDERING_TEMPLATE)(templateOptions))\n            .on(MOUSEDOWN, preventDefault);\n            this.list = this.popupContent.find(\".k-timeselector\");\n\n            this.ul = this.list.find(\".k-time-list-container\");\n            this.popupContent.on(\"click\" + ns, \".k-time-header button.k-time-now\", this._nowClickHandler.bind(this));\n            this.popupContent.on(\"click\" + ns, \".k-time-footer button.k-time-cancel\", this._cancelClickHandler.bind(this));\n            this.popupContent.on(\"click\" + ns, \".k-time-footer button.k-time-accept\", this._setClickHandler.bind(this));\n            this.list.on(\"mouseover\" + ns, \".k-time-list-wrapper\", this._mouseOverHandler.bind(this));\n            this.list.on(\"keydown\" + ns, this._scrollerKeyDownHandler.bind(this));\n        },\n\n        _scrollerKeyDownHandler: function(e) {\n            var that = this,\n                key = e.keyCode,\n                list = $(e.currentTarget).find(\".k-time-list-wrapper.k-focus\"),\n                lists = that.list.find(\".k-time-list-wrapper\"),\n                length = lists.length,\n                index = lists.index(list),\n                isRtl = kendo.support.isRtl(that.wrapper),\n                itemHeight = getItemHeight(list.find(\".k-item:visible\").eq(0)),\n                container = list.find(\".k-time-container.k-content.k-scrollable\");\n\n            if (!list.length) {\n                return;\n            }\n\n            if (key == keys.RIGHT && !isRtl || key == keys.LEFT && isRtl) {\n                if (index + 1 < length) {\n                    that._focusList(lists.eq(index + 1));\n                }\n\n            } else if (key == keys.LEFT && !isRtl || key == keys.RIGHT && isRtl) {\n                if (index - 1 >= 0) {\n                    that._focusList(lists.eq(index - 1));\n                }\n            } else if (key == keys.UP) {\n                container.scrollTop(container.scrollTop() - itemHeight);\n                e.preventDefault();\n            } else if (key == keys.DOWN) {\n                container.scrollTop(container.scrollTop() + itemHeight);\n                e.preventDefault();\n            } else if (key === keys.ENTER) {\n                that._setClickHandler(e);\n            } else if (key === keys.ESC) {\n                that._cancelClickHandler(e);\n            }\n        },\n\n        _mouseOverHandler: function(e) {\n            this._focusList($(e.currentTarget));\n        },\n\n        _focusList: function(list) {\n            this.list.find(\".k-time-list-wrapper\").removeClass(FOCUSED);\n            list.addClass(FOCUSED);\n            this.list.trigger(\"focus\");\n            this._scrollTop = list.find('.k-scrollable').scrollTop();\n        },\n        _createClassicRenderingList: function() {\n            var that = this;\n            var listParent = $('<div class=\"k-list ' + kendo.getValidCssClass(\"k-list-\", \"size\", that.options.size) + '\"><ul tabindex=\"-1\" role=\"listbox\" aria-hidden=\"true\" unselectable=\"on\" class=\"k-list-ul\"/></div>');\n\n            that.ul = listParent.find(\"ul\")\n                .css({\n                    overflow: support.kineticScrollNeeded ? \"\" : \"auto\"\n                })\n                .on(CLICK, LI, that._click.bind(that))\n                .on(\"mouseenter\" + ns, LI, function() {\n                    $(this).addClass(HOVER);\n                })\n                .on(\"mouseleave\" + ns, LI, function() {\n                    $(this).removeClass(HOVER);\n                });\n\n            that.list = $(\"<div class='k-list-container k-list-scroller' unselectable='on'/>\")\n                .append(listParent)\n                .on(MOUSEDOWN, preventDefault);\n\n            that.template = (data) => `<li tabindex=\"-1\" role=\"option\" class=\"k-list-item\" unselectable=\"on\"><span class=\"k-list-item-text\">${data}</span></li>`;\n\n        },\n        current: function(candidate) {\n            var that = this,\n                active = that.options.active;\n\n            if (candidate !== undefined$1) {\n                if (that._current) {\n                    that._current\n                        .removeClass(SELECTED);\n                        if (that._current && that._current.length) {\n                            that._current[0].removeAttribute(ID);\n                            that._current[0].removeAttribute(ARIA_SELECTED);\n                        }\n                }\n\n                if (candidate) {\n                    candidate = $(candidate).addClass(SELECTED)\n                                            .attr(ID, that._optionID)\n                                            .attr(ARIA_SELECTED, true);\n\n                    that.scroll(candidate[0]);\n                }\n\n                that._current = candidate;\n\n                if (active) {\n                    active(candidate);\n                }\n            } else {\n                return that._current;\n            }\n        },\n\n        _updateTitle: function() {\n            this.list.find(\".k-time-header > .k-title\").html(kendo.toString(this._value, this.options.format, this.options.culture));\n        },\n\n        applyValue: function(value) {\n            if (!value) {\n                return;\n            }\n\n            var is12hourFormat = includes(this.options.format.toLowerCase(), \"t\");\n            var hours = value.getHours();\n            var minutes = value.getMinutes();\n            var seconds = value.getSeconds();\n            var designator;\n            var indexAttr = kendo.attr('index');\n            var hoursList = this.ul.find('[' + indexAttr + '=\"1\"]');\n            var minutessList = this.ul.find('[' + indexAttr + '=\"2\"]');\n            var secondsList = this.ul.find('[' + indexAttr + '=\"3\"]');\n            var designatorList = this.ul.find('[' + indexAttr + '=\"4\"]');\n\n            if (is12hourFormat) {\n                if (hours >= 12) {\n                    designator = \"PM\";\n                    if (hours > 12) {\n                        hours -= 12;\n                    }\n                } else {\n                    designator = \"AM\";\n                    if (hours === 0) {\n                        hours = 12;\n                    }\n                }\n            }\n\n            this._internalScroll = true;\n            if (hoursList.length) {\n                this._scrollListToPosition(hoursList, hours);\n            }\n\n            if (minutessList.length) {\n                this._scrollListToPosition(minutessList, minutes);\n            }\n\n            if (secondsList.length) {\n                this._scrollListToPosition(secondsList, seconds);\n            }\n\n            if (designatorList.length) {\n                this._scrollListToPosition(designatorList, designator);\n            }\n            this._internalScroll = false;\n        },\n\n        _scrollListToPosition: function(list, value) {\n            var item = list.find('.k-item[data-value=\"' + pad(value) + '\"]');\n            var itemHeight = getItemHeight(item);\n\n            list.scrollTop(list.find(\".k-item:visible\").index(item) * itemHeight);\n        },\n\n        close: function() {\n            this.popup.close();\n        },\n\n        destroy: function() {\n            var that = this;\n\n            that.ul.off(ns);\n            that.list.off(ns);\n            if (that.popupContent) {\n                that.popupContent.off(ns);\n            }\n            if (that.popup) {\n                that.popup.destroy();\n            }\n        },\n\n        open: function() {\n            var that = this;\n            var popupHovered;\n\n            if (!that.ul[0].firstChild || (that.ul.find(\"li\").length < 1)) {\n                that.bind();\n            }\n\n            // In some cases when the popup is opened resize is triggered which will cause it to close\n            // Setting the below flag will prevent this from happening\n            // Reference: https://github.com/telerik/kendo/pull/7553\n            popupHovered = that.popup._hovered;\n            that.popup._hovered = true;\n\n            that.popup.open();\n\n            setTimeout(function() {\n                that.popup._hovered = popupHovered;\n            }, 1);\n\n            if (that._current) {\n                that.scroll(that._current[0]);\n            }\n        },\n\n        dataBind: function(dates) {\n            var that = this,\n                options = that.options,\n                format = options.format,\n                toString = kendo.toString,\n                template = that.template,\n                length = dates.length,\n                idx = 0,\n                date,\n                html = \"\";\n\n            for (; idx < length; idx++) {\n                date = dates[idx];\n\n                if (isInRange(date, options.min, options.max)) {\n                    html += template(toString(date, format, options.culture));\n                }\n            }\n\n            that._html(html);\n        },\n\n        refresh: function() {\n            var that = this,\n                options = that.options,\n                format = options.format,\n                offset = dst(),\n                ignoreDST = offset < 0,\n                value = kendo.parseDate(that._value),\n                parsedValue = value ? mergeDateAndTime(value, options.min) : mergeDateAndTime(new Date(), options.min),\n                min = options.min,\n                max = options.max,\n                msMin = getMilliseconds(min),\n                msMax = getMilliseconds(max),\n                msLastTime = getMilliseconds(lastTimeOption(options.interval)),\n                msInterval = options.interval * MS_PER_MINUTE,\n                toString = kendo.toString,\n                template = that.template,\n                start = options.useValueToRender ? parsedValue : new Date(+options.min),\n                startDate = new DATE(start),\n                msStart,\n                length,\n                html = \"\";\n\n            if (ignoreDST) {\n                length = (MS_PER_DAY + (offset * MS_PER_MINUTE)) / msInterval;\n            } else {\n                length = MS_PER_DAY / msInterval;\n            }\n\n            if (msMin != msMax || msLastTime === msMax) {\n                if (msMin > msMax) {\n                    msMax += MS_PER_DAY;\n                }\n\n                length = ((msMax - msMin) / msInterval) + 1;\n            }\n\n            if (options.timeView && options.timeView.list === \"scroll\") {\n                html = that._createListContent(splitDateFormat(format));\n            } else {\n                that.getDatesInRange(msStart, msMax, startDate, max, msInterval, start).forEach(function(date) {\n                    html += template(toString(date, format, options.culture));\n                });\n            }\n\n            that._html(html);\n        },\n\n        _showAllHiddenItems: function() {\n            var items = this.list.find('.k-time-container');\n            var length = items.length;\n            var item;\n\n            for (var i = 0; i < length; i++) {\n                item = $(items[i]);\n                item.find('.k-item:hidden').show();\n                this._updateListBottomOffset(item);\n            }\n        },\n\n        _updateListBottomOffset: function(list) {\n            var itemHeight = getItemHeight(list.find(\".k-item:visible\").eq(0));\n            var listHeight = list.outerHeight();\n            var bottomOffset = listHeight - itemHeight;\n            list.find(\".k-scrollable-placeholder\").css({\n                height: list.find(\"ul\").height() + bottomOffset\n            });\n        },\n\n        _updateHoursRange: function() {\n            var that = this;\n            var indexAttr = kendo.attr('index');\n            var hoursList = this.ul.find('[' + indexAttr + '=\"1\"]');\n            var minHours = this._minHours;\n            var maxHours = this._maxHours;\n            var is12hourFormat = includes(this.options.format.toLowerCase(), \"t\");\n            var useMax;\n            var useMin;\n            var selectedDesignator = this._findSelectedValue(this.ul.find('[' + indexAttr + '=\"4\"]'));\n\n            if (!hoursList.length) {\n                return;\n            }\n\n            if (is12hourFormat && selectedDesignator) {\n\n                if (selectedDesignator === \"AM\") {\n                    if (minHours < 12) {\n                        useMin = true;\n                    }\n\n                    if (maxHours < 12) {\n                        useMax = true;\n                    }\n                } else if (selectedDesignator === \"PM\") {\n\n                    if (minHours > 12) {\n                        useMin = true;\n                        minHours -= 12;\n                    }\n\n                    if (maxHours > 12) {\n                        useMax = true;\n                        maxHours -= 12;\n                    }\n                }\n\n                hoursList.find(\".k-item\").each(function(_, item) {\n                    item = $(item);\n                    var value = +item.attr(\"data-value\");\n                    if ((that._validateMin && useMin && value < minHours) || (that._validateMax && useMax && value > maxHours)) {\n                        item.hide();\n                    } else {\n                        item.show();\n                    }\n                });\n            } else {\n                hoursList.find(\".k-item\").each(function(_, item) {\n                    item = $(item);\n                    var value = +item.attr(\"data-value\");\n                    if ((that._validateMin && value < minHours) ||\n                        (that._validateMax && value > maxHours)) {\n                        item.hide();\n                    } else {\n                        item.show();\n                    }\n                });\n            }\n\n            this._updateListBottomOffset(hoursList);\n        },\n\n        _updateMinutesRange: function() {\n            var that = this;\n            var indexAttr = kendo.attr('index');\n            var minutesList = this.ul.find('[' + indexAttr + '=\"2\"]');\n            var minHours = this._minHours;\n            var maxHours = this._maxHours;\n            var minMinutes = this._minMinutes;\n            var maxMinutes = this._maxMinutes;\n            var selectedHour = +this._findSelectedValue(this.ul.find('[' + indexAttr + '=\"1\"]'));\n            var is12hourFormat = includes(this.options.format.toLowerCase(), \"t\");\n            var selectedDesignator = this._findSelectedValue(this.ul.find('[' + indexAttr + '=\"4\"]'));\n\n            if (is12hourFormat && selectedDesignator === \"PM\") {\n                selectedHour += 12;\n            }\n\n            if (!minutesList.length) {\n                return;\n            }\n\n            minutesList.find(\".k-item\").each(function(_, item) {\n                item = $(item);\n                var value = +item.attr(\"data-value\");\n                if ((that._validateMin && value < minMinutes && minHours && selectedHour === minHours) ||\n                    (that._validateMax && value > maxMinutes && maxHours && selectedHour === maxHours)) {\n                    item.hide();\n                } else {\n                    item.show();\n                }\n            });\n\n            this._updateListBottomOffset(minutesList);\n        },\n\n        _updateSecondsRange: function() {\n            var that = this;\n            var indexAttr = kendo.attr('index');\n            var secondsList = this.ul.find('[' + indexAttr + '=\"3\"]');\n            var minSeconds = this._minSeconds;\n            var maxSeconds = this._minSeconds;\n            var minMinutes = this._minMinutes;\n            var maxMinutes = this._maxMinutes;\n            var selectedMinutes = +this._findSelectedValue(this.ul.find('[' + indexAttr + '=\"2\"]'));\n\n            if (!secondsList.length) {\n                return;\n            }\n\n            secondsList.find(\".k-item\").each(function(_, item) {\n                item = $(item);\n                var value = +item.attr(\"data-value\");\n                if ((that._validateMin && value < minSeconds && minMinutes && selectedMinutes === minMinutes) ||\n                    (that._validateMax && value > maxSeconds && maxMinutes && selectedMinutes === maxMinutes)) {\n                    item.hide();\n                } else {\n                    item.show();\n                }\n            });\n\n            this._updateListBottomOffset(secondsList);\n        },\n\n        _updateDesignatorRange: function() {\n            var minHours = this._minHours;\n            var maxHours = this._maxHours;\n            var indexAttr = kendo.attr('index');\n            var designatorList = this.ul.find('[' + indexAttr + '=\"4\"]');\n\n            if (!designatorList.length) {\n               return;\n            }\n\n            if (this._validateMin && minHours >= 12) {\n                designatorList.find('.k-item[data-value=\"AM\"]').hide();\n            } else {\n                designatorList.find('.k-item[data-value=\"AM\"]').show();\n            }\n\n            if (this._validateMax && maxHours < 12) {\n                designatorList.find('.k-item[data-value=\"PM\"]').hide();\n            } else {\n                designatorList.find('.k-item[data-value=\"PM\"]').show();\n            }\n        },\n\n\n        _updateRanges: function() {\n            if (!this.options.specifiedRange) {\n                return;\n            }\n            if (!this._currentlySelected) {\n                this._currentlySelected = new Date();\n            }\n\n            var max = this.options.endTime ? this.options.endTime : this.options.max;\n            var min = this.options.startTime ? this.options.startTime : this.options.min;\n\n            if (this.options.validateDate) {\n                if (max.getFullYear() === this._currentlySelected.getFullYear() &&\n                    max.getMonth() === this._currentlySelected.getMonth() &&\n                    max.getDate() === this._currentlySelected.getDate()) {\n                    this._validateMax = true;\n                } else {\n                    this._validateMax = false;\n                }\n\n                if (min.getFullYear() === this._currentlySelected.getFullYear() &&\n                    min.getMonth() === this._currentlySelected.getMonth() &&\n                    min.getDate() === this._currentlySelected.getDate()) {\n                    this._validateMin = true;\n                } else {\n                    this._validateMin = false;\n                }\n\n                if (!this._validateMax && !this._validateMin) {\n                    this._showAllHiddenItems();\n                    return;\n                }\n            } else {\n                this._validateMax = true;\n                this._validateMin = true;\n            }\n\n            this._minMinutes = min.getMinutes();\n            this._maxMinutes = max.getMinutes();\n            this._minHours = min.getHours();\n            this._maxHours = max.getHours();\n            this._minSeconds = min.getSeconds();\n            this._maxSeconds = max.getSeconds();\n\n            this._updateDesignatorRange();\n            this._updateHoursRange();\n            this._updateMinutesRange();\n            this._updateSecondsRange();\n        },\n\n        addTranslate: function() {\n            var lists = this.ul.find(\".k-time-container.k-content.k-scrollable\");\n            var length = lists.length;\n            var list;\n            var itemHeight;\n            var listHeight;\n            var topOffset;\n            var translate;\n            var bottomOffset;\n\n            for (var i = 0; i < length; i++) {\n                list = lists.eq(i);\n                itemHeight = getItemHeight(list.find(\".k-item:visible\").eq(0));\n                listHeight = list.outerHeight();\n                topOffset = (listHeight - itemHeight) / 2;\n                translate = \"translateY(\" + topOffset + \"px)\";\n                bottomOffset = listHeight - itemHeight;\n                list.find(\"ul\").css({\n                    transform: translate,\n                    \"-ms-transform\": translate\n                });\n                list.find(\".k-scrollable-placeholder\").css({\n                    height: list.find(\"ul\").height() + bottomOffset\n                });\n                list.off(ns)\n                    .on(\"click\" + ns, \".k-item\", this._itemClickHandler.bind(this))\n                    .on(\"scroll\" + ns, this._listScrollHandler.bind(this));\n            }\n        },\n\n        _nowClickHandler: function(e) {\n            e.preventDefault();\n\n            var now = new Date();\n            this.value(now);\n            this.options.change(kendo.toString(now, this.options.format, this.options.culture), true);\n        },\n\n        _cancelClickHandler: function(e) {\n            e.preventDefault();\n            this.value(this._value);\n            this.popup.close();\n        },\n\n        _setClickHandler: function(e) {\n            e.preventDefault();\n            this._value = new Date(this._currentlySelected);\n\n            this.options.change(kendo.toString(this._currentlySelected, this.options.format, this.options.culture), true);\n            this.popup.close();\n        },\n\n        _listScrollHandler: function(e) {\n            var that = this;\n            var itemHeight = getItemHeight($(e.currentTarget).find(\".k-item:visible\").eq(0));\n\n            if (that._internalScroll) {\n                return;\n            }\n\n            if (that._scrollingTimeout) {\n                clearTimeout(that._scrollingTimeout);\n            }\n\n            that._scrollingTimeout = setTimeout(function() {\n                if (e.currentTarget.scrollTop % itemHeight > 1) {\n                    e.currentTarget.scrollTop += itemHeight - e.currentTarget.scrollTop % itemHeight;\n                }\n                that._scrollTop = e.currentTarget.scrollTop;\n                that._updateCurrentlySelected();\n                that._updateRanges();\n            }, 100);\n        },\n\n        _updateCurrentlySelected: function() {\n            var is12hourFormat = includes(this.options.format.toLowerCase(), \"t\");\n            var indexAttr = kendo.attr('index');\n            var hoursList = this.ul.find('[' + indexAttr + '=\"1\"]');\n            var minutesList = this.ul.find('[' + indexAttr + '=\"2\"]');\n            var secondsList = this.ul.find('[' + indexAttr + '=\"3\"]');\n            var designatorList = this.ul.find('[' + indexAttr + '=\"4\"]');\n            var selectedHour;\n            var selectedMinutes;\n            var selectedSeconds;\n            var selectedDesignator;\n\n            if (!this.ul.is(\":visible\")) {\n                return;\n            }\n\n            if (!this._currentlySelected) {\n                this._currentlySelected = this._value ? new Date(this._value) : new Date();\n            }\n\n            if (hoursList.length) {\n                selectedHour = +this._findSelectedValue(hoursList);\n            }\n\n            if (minutesList.length) {\n                selectedMinutes = +this._findSelectedValue(minutesList);\n            }\n\n            if (secondsList.length) {\n                selectedSeconds = +this._findSelectedValue(secondsList);\n            }\n\n            if (designatorList.length) {\n                selectedDesignator = this._findSelectedValue(designatorList);\n            }\n\n            if (is12hourFormat) {\n                if (selectedDesignator == \"PM\") {\n                    selectedHour += 12;\n                    if (selectedHour == 24) {\n                        selectedHour = 12;\n                    }\n                }\n\n                if (selectedDesignator === \"AM\" && selectedHour === 12) {\n                    selectedHour = 0;\n                }\n            }\n\n            if (selectedHour !== undefined$1) {\n                this._currentlySelected.setHours(selectedHour);\n            }\n\n            if (selectedMinutes !== undefined$1) {\n                this._currentlySelected.setMinutes(selectedMinutes);\n            }\n\n            if (selectedSeconds !== undefined$1) {\n                this._currentlySelected.setSeconds(selectedSeconds);\n            }\n        },\n\n        _findSelectedValue: function(list) {\n           var firstOccurence = firstItemIndex(list.scrollTop(), getItemHeight(list.find(\".k-item:visible\").eq(0)));\n           return list.find(\".k-item:visible\").eq(firstOccurence).attr(\"data-value\");\n        },\n\n        _itemClickHandler: function(e) {\n            var list = $(e.originalEvent.currentTarget);\n            var index = list.find(\".k-item:visible\").index($(e.currentTarget));\n            var itemHeight = getItemHeight(list.find(\".k-item:visible\").eq(0));\n\n            list.scrollTop(index * itemHeight);\n        },\n\n        getDatesInRange: function(msStart, msMax, startDate, max, msInterval, start) {\n            var result = [];\n\n            while (true) {\n                if (msMax && (getMilliseconds(start) >= msMax || startDate.getDate() != start.getDate())) {\n                    msStart = getMilliseconds(start);\n                    if (startDate < start) {\n                        msStart += MS_PER_DAY;\n                    }\n                    if (msStart > msMax) {\n                        start = new DATE(+max);\n                    }\n                    if (getMilliseconds(start) > 0) {\n                        result.push(new Date(start));\n                    }\n                    break;\n                }\n                if (startDate.getDate() != start.getDate()) {\n                    break;\n                }\n                result.push(new Date(start));\n                start.setTime(start.getTime() + msInterval);\n                if (!msMax && this.options.maxSet) {\n                    break;\n                }\n            }\n\n            return result;\n        },\n\n        _createListContent: function(parts) {\n            var length = parts.length;\n            var result = \"\";\n            var part;\n            var values;\n\n            for (var i = 0; i < length; i++) {\n                part = parts[i];\n\n                if (part.type === \"literal\") {\n                    result += this._literalTemplate(part);\n                } else {\n                    values = this._getValues(part, true);\n                    result += this._itemTemplate(values.values, part, this.options.messages[part.type], values.index);\n                }\n            }\n\n            return result;\n        },\n\n        _itemTemplate: function(values, part, title, index) {\n            var result = \"\";\n            var length = values.length;\n            var indexAttr = kendo.attr('index');\n\n            result += '<div class=\"k-time-list-wrapper\" role=\"presentation\">' +\n                        '<span class=\"k-title\">' + (title || part.type) + '</span>' +\n                        '<div class=\"k-time-list\">' +\n                            '<div class=\"k-time-container k-content k-scrollable\" role=\"presentation\" ' + indexAttr + '=\"' + index + '\">' +\n                                '<ul class=\"k-reset\">';\n\n            for ( var i = 0; i < length; i++) {\n                result += '<li class=\"k-item\" data-value=\"' + values[i] + '\">' +\n                                '<span>' + values[i] + '</span>' +\n                           '</li>';\n            }\n\n            result += '</ul>' +\n                      '<div class=\"k-scrollable-placeholder\"></div>' +\n                    '</div>' +\n                '</div>' +\n            '</div>';\n\n            return result;\n        },\n\n        _getValues: function(part, shouldPad) {\n            var result = [];\n            var index;\n            var start = 0;\n            var end;\n\n            if (part.type === \"hour\") {\n                start = part.hour12 ? 1 : 0;\n                index = 1;\n                end = part.hour12 ? 12 : 23;\n            } else if (part.type === \"minute\") {\n                index = 2;\n                end = 59;\n            } else if (part.type === \"second\") {\n                index = 3;\n                end = 59;\n            }\n\n            for (; start <= end; start++) {\n                result.push(shouldPad ? pad(start) : start);\n            }\n\n            return {\n                values: result,\n                index: index\n            };\n        },\n\n        _literalTemplate: function(part) {\n            var result = '<div class=\"k-time-separator\">' +\n                (part.pattern === \" tt\" ? ':' : part.pattern) +\n                '</div>';\n\n            if (part.pattern === \" tt\") {\n                result += this._itemTemplate([\"AM\", \"PM\"], part, \"AM/PM\", 4);\n            }\n\n            return result;\n        },\n\n        bind: function() {\n            var that = this,\n                dates = that.options.dates;\n\n            if (dates && dates[0]) {\n                that.dataBind(dates);\n            } else {\n                that.refresh();\n            }\n        },\n\n        _html: function(html) {\n            var that = this;\n\n            if (that.options.timeView && that.options.timeView.list === \"scroll\") {\n                html = HIGHLIGHTCONTAINER + html;\n                that.ul.html(html);\n            } else {\n                that.ul[0].innerHTML = html;\n                that.popup.unbind(OPEN, that._heightHandler);\n                that.popup.one(OPEN, that._heightHandler);\n\n                that.current(null);\n                that.select(that._value);\n            }\n        },\n\n        scroll: function(item) {\n            if (!item) {\n                return;\n            }\n\n            if (item.scrollIntoViewIfNeeded) {\n                item.scrollIntoViewIfNeeded();\n            } else {\n                scrollIntoViewIfNeeded(item);\n            }\n        },\n\n        select: function(li) {\n            var that = this,\n                options = that.options,\n                current = that._current,\n                selection;\n\n            if (li instanceof Date) {\n                li = kendo.toString(li, options.format, options.culture);\n            }\n\n            if (typeof li === \"string\") {\n                if (!current || current.text() !== li) {\n                    li = $.grep(that.ul[0].childNodes, function(node) {\n                        return (node.textContent || node.innerText) == li;\n                    });\n\n                    li = li[0] ? li : null;\n                } else {\n                    li = current;\n                }\n            }\n            selection = that._distinctSelection(li);\n            that.current(selection);\n        },\n\n        _distinctSelection: function(selection) {\n            var that = this,\n                currentValue,\n                selectionIndex;\n\n            if (selection && selection.length > 1) {\n                currentValue = getMilliseconds(that._value);\n                selectionIndex = $.inArray(currentValue, that._dates);\n                selection = that.ul.children()[selectionIndex];\n            }\n\n            return selection;\n        },\n\n        setOptions: function(options) {\n            var old = this.options;\n\n            options.min = parse(options.min);\n            options.max = parse(options.max);\n\n            this.options = extend(old, options, {\n                active: old.active,\n                change: old.change,\n                close: old.close,\n                open: old.open\n            });\n\n            this.bind();\n        },\n\n        toggle: function() {\n            var that = this;\n\n            if (that.popup.visible()) {\n                that.close();\n            } else {\n                that.open();\n            }\n        },\n\n        value: function(value) {\n            var that = this;\n\n            that._value = value;\n            if (that.ul[0].firstChild) {\n                if (that.options.timeView && that.options.timeView.list === \"scroll\") {\n                    that.applyValue(value);\n                } else {\n                    that.select(value);\n                }\n            }\n        },\n\n        _click: function(e) {\n            var that = this,\n                li = $(e.currentTarget),\n                date = li.text(),\n                dates = that.options.dates;\n\n            if (dates && dates.length > 0) {\n                date = dates[li.index()];\n            }\n\n            if (!e.isDefaultPrevented()) {\n                that.select(li);\n                that.options.change(date, true);\n                that.close();\n            }\n        },\n\n        _height: function() {\n            var that = this;\n            var list = that.list;\n            var parent = list.closest(\".k-child-animation-container\");\n            var container = list.closest(\".k-animation-container\");\n            var height = that.options.height;\n            var elements = list.add(container);\n            var ul = that.ul[0];\n\n            if (ul.children.length) {\n                elements.add(parent).show();\n\n                list.add(parent)\n                    .height(ul.scrollHeight > height ? height : \"auto\");\n\n                elements.hide();\n            }\n        },\n\n        _parse: function(value) {\n            var that = this,\n                options = that.options,\n                min = getMilliseconds(options.min) != getMilliseconds(TODAY) ? options.min : null,\n                max = getMilliseconds(options.max) != getMilliseconds(TODAY) ? options.max : null,\n                current = that._value || min || max || TODAY;\n\n            if (value instanceof DATE) {\n                return value;\n            }\n\n            value = parse(value, options.parseFormats, options.culture);\n\n            if (value) {\n                value = new DATE(current.getFullYear(),\n                                 current.getMonth(),\n                                 current.getDate(),\n                                 value.getHours(),\n                                 value.getMinutes(),\n                                 value.getSeconds(),\n                                 value.getMilliseconds());\n            }\n\n            return value;\n        },\n\n        _adjustListWidth: function() {\n            var list = this.list,\n                width = list[0].style.width,\n                wrapper = this.options.anchor,\n                computedStyle, computedWidth,\n                outerWidth = kendo._outerWidth;\n\n            if (!list.data(\"width\") && width) {\n                return;\n            }\n\n            computedStyle = window.getComputedStyle ? window.getComputedStyle(wrapper[0], null) : 0;\n            computedWidth = computedStyle ? parseFloat(computedStyle.width) : outerWidth(wrapper);\n\n            if (computedStyle && (browser.mozilla || browser.msie)) { // getComputedStyle returns different box in FF and IE.\n                computedWidth += parseFloat(computedStyle.paddingLeft) + parseFloat(computedStyle.paddingRight) + parseFloat(computedStyle.borderLeftWidth) + parseFloat(computedStyle.borderRightWidth);\n            }\n\n            width = computedWidth - (outerWidth(list) - list.width());\n\n            list.css({\n                fontFamily: wrapper.css(\"font-family\"),\n                width: width\n            })\n            .data(\"width\", width);\n        },\n\n        _popup: function() {\n            var that = this,\n                list = that.list,\n                options = that.options,\n                anchor = options.anchor;\n\n            if (!this.options.omitPopup) {\n\n                that.popup = new ui.Popup(that.popupContent || list, extend(options.popup, {\n                    anchor: anchor,\n                    open: options.open,\n                    close: options.close,\n                    animation: options.animation,\n                    isRtl: support.isRtl(options.anchor),\n                    activate: function() {\n                        if (that.options.timeView && that.options.timeView.list === \"scroll\") {\n                            that.addTranslate();\n                            if (that._value) {\n                                that.applyValue(that._value);\n                            } else {\n                                that._updateCurrentlySelected();\n                            }\n                            that._updateRanges();\n                            that._focusList(that.list.find(\".k-time-list-wrapper\").eq(0));\n                        }\n                    }\n                }));\n            } else {\n                list.appendTo(options.timeDiv);\n            }\n        },\n\n        move: function(e) {\n            var that = this,\n                key = e.keyCode,\n                ul = that.ul[0],\n                current = that._current,\n                down = key === keys.DOWN;\n\n            if (key === keys.UP || down) {\n                if (e.altKey) {\n                    that.toggle(down);\n                    return;\n                } else if (down) {\n                    current = current ? current[0].nextSibling : ul.firstChild;\n                } else {\n                    current = current ? current[0].previousSibling : ul.lastChild;\n                }\n\n                if (current) {\n                    that.select(current);\n                }\n\n                that.options.change(that._current.text());\n                e.preventDefault();\n\n            } else if (key === keys.ENTER || key === keys.TAB || key === keys.ESC) {\n                e.preventDefault();\n                if (current) {\n                    that.options.change(current.text(), true);\n                }\n                that.close();\n            }\n        }\n    };\n\n    function dst() {\n        var today = new DATE(),\n            midnight = new DATE(today.getFullYear(), today.getMonth(), today.getDate(), 0, 0, 0),\n            noon = new DATE(today.getFullYear(), today.getMonth(), today.getDate(), 12, 0, 0);\n\n        return -1 * (midnight.getTimezoneOffset() - noon.getTimezoneOffset());\n    }\n\n    function getMilliseconds(date) {\n        return date.getHours() * 60 * MS_PER_MINUTE + date.getMinutes() * MS_PER_MINUTE + date.getSeconds() * 1000 + date.getMilliseconds();\n    }\n\n    function lastTimeOption(interval) {\n        var date = new Date(2100, 0, 1);\n        date.setMinutes(-interval);\n        return date;\n    }\n\n    function isInRange(value, min, max) {\n        var msMin = getMilliseconds(min),\n            msMax = getMilliseconds(max),\n            msValue;\n\n        if (!value || msMin == msMax) {\n            return true;\n        }\n\n        msValue = getMilliseconds(value);\n\n        if (msMin > msValue) {\n            msValue += MS_PER_DAY;\n        }\n\n        if (msMax < msMin) {\n            msMax += MS_PER_DAY;\n        }\n\n        return msValue >= msMin && msValue <= msMax;\n    }\n\n    TimeView.getMilliseconds = getMilliseconds;\n\n    kendo.TimeView = TimeView;\n\n    var TimePicker = Widget.extend({\n        init: function(element, options) {\n            var that = this, ul, timeView, disabled;\n\n            options = options || {};\n            options.componentType = options.componentType || \"classic\";\n\n            Widget.fn.init.call(that, element, options);\n\n            element = that.element;\n            options = that.options;\n\n            options.min = parse(element.attr(\"min\")) || parse(options.min);\n            options.max = parse(element.attr(\"max\")) || parse(options.max);\n\n            if (+options.max != +TODAY || +options.min != +TODAY) {\n                this._specifiedRange = true;\n            }\n\n            normalize(options);\n\n            that._initialOptions = extend({}, options);\n\n            that._wrapper();\n\n            if (that.options.timeView && that.options.timeView.list === \"scroll\") {\n                that.options.height = null;\n            }\n\n            that.timeView = timeView = new TimeView(extend({}, options, {\n                id: element.attr(ID),\n                anchor: that.wrapper,\n                format: options.format,\n                change: function(value, trigger) {\n                    if (trigger) {\n                        that._change(value);\n                    } else {\n                        element.val(value);\n                    }\n                },\n                open: function(e) {\n                    if (that.options.timeView && that.options.timeView.list !== \"scroll\") {\n                        that.timeView._adjustListWidth();\n                    } else {\n                        that.timeView._updateTitle();\n                    }\n\n                    if (that.trigger(OPEN)) {\n                        e.preventDefault();\n                    } else {\n                        element.attr(ARIA_EXPANDED, true);\n                        ul.attr(ARIA_HIDDEN, false);\n\n                        if (timeView.current()) {\n                            element.attr(ARIA_ACTIVEDESCENDANT, timeView._optionID);\n                        }\n                    }\n                },\n                close: function(e) {\n                    if (that.trigger(CLOSE)) {\n                        e.preventDefault();\n                    } else {\n                        element.attr(ARIA_EXPANDED, false);\n                        ul.attr(ARIA_HIDDEN, true);\n                        element[0].removeAttribute(ARIA_ACTIVEDESCENDANT);\n                    }\n                },\n                active: function(current) {\n                    if (element && element.length) {\n                        element[0].removeAttribute(ARIA_ACTIVEDESCENDANT);\n                    }\n                    if (current) {\n                        element.attr(ARIA_ACTIVEDESCENDANT, timeView._optionID);\n                    }\n                },\n                specifiedRange: that._specifiedRange,\n                maxSet: +options.max != +TODAY\n            }));\n            ul = timeView.ul;\n\n            that._ariaLabel(ul);\n\n            that._icon();\n            that._reset();\n\n            try {\n                element[0].setAttribute(\"type\", \"text\");\n            } catch (e) {\n                element[0].type = \"text\";\n            }\n\n            element.addClass(\"k-input-inner\")\n                   .attr({\n                        \"role\": \"combobox\",\n                        \"aria-expanded\": false,\n                        \"aria-controls\": timeView._timeViewID,\n                        \"autocomplete\": \"off\"\n                   });\n\n            disabled = element.is(\"[disabled]\") || $(that.element).parents(\"fieldset\").is(':disabled');\n            if (disabled) {\n                that.enable(false);\n            } else {\n                that.readonly(element.is(\"[readonly]\"));\n            }\n            if (options.dateInput) {\n                var min = options.min;\n                var max = options.max;\n                var today = new DATE();\n                if (getMilliseconds(min) == getMilliseconds(max)) {\n                    min = new DATE(today.getFullYear(), today.getMonth(), today.getDate(), 0, 0, 0);\n                    max = new DATE(today.getFullYear(), today.getMonth(), today.getDate(), 24, 0, 0);\n                }\n\n                that._dateInput = new ui.DateInput(element, {\n                    culture: options.culture,\n                    format: options.format,\n                    min: min,\n                    max: max,\n                    value: options.value,\n                    interval: options.interval,\n                    size: options.size,\n                    fillMode: options.fillMode,\n                    rounded: options.rounded,\n                    messages: options.messages.dateInput\n                });\n            }\n            that._old = that._update(options.value || that.element.val());\n            that._oldText = element.val();\n            that._applyCssClasses();\n\n            if (options.label) {\n                that._label();\n            }\n\n            kendo.notify(that);\n        },\n\n        options: {\n            name: \"TimePicker\",\n            min: TODAY,\n            max: TODAY,\n            format: \"\",\n            dates: [],\n            parseFormats: [],\n            value: null,\n            interval: 30,\n            height: 200,\n            animation: {},\n            dateInput: false,\n            messages: {\n                set: \"Set\",\n                cancel: \"Cancel\",\n                hour: \"hour\",\n                minute: \"minute\",\n                second: \"second\",\n                millisecond: \"millisecond\",\n                now: \"Now\"\n            },\n            componentType: \"classic\",\n            size: \"medium\",\n            fillMode: \"solid\",\n            rounded: \"medium\",\n            label: null\n        },\n\n        events: [\n         OPEN,\n         CLOSE,\n         CHANGE\n        ],\n\n        componentTypes: {\n            \"classic\": {\n                timeView: {\n                    list: \"list\"\n                }\n            },\n            \"modern\": {\n                timeView: {\n                    list: \"scroll\"\n                }\n            }\n        },\n\n        setOptions: function(options) {\n            var that = this;\n            var value = that._value;\n\n            Widget.fn.setOptions.call(that, options);\n            options = that.options;\n\n            if (+options.max != +TODAY || +options.min != +TODAY) {\n                this._specifiedRange = true;\n            }\n\n            that._arrow.off(ns);\n            that._arrow.remove();\n\n            normalize(options);\n\n            that.timeView.setOptions(options);\n\n            that._icon();\n            that._editable(options);\n\n            if (value) {\n                that.element.val(kendo.toString(value, options.format, options.culture));\n            }\n\n            if (options.label && that._inputLabel) {\n                that.label.setOptions(options.label);\n            } else if (options.label === false) {\n                that.label._unwrapFloating();\n                that._inputLabel.remove();\n                delete that._inputLabel;\n            } else if (options.label) {\n                that._label();\n            }\n        },\n\n        dataBind: function(dates) {\n            if (isArray(dates)) {\n                this.timeView.dataBind(dates);\n            }\n        },\n\n        _editable: function(options) {\n            var that = this,\n                disable = options.disable,\n                readonly = options.readonly,\n                arrow = that._arrow.off(ns),\n                element = that.element.off(ns),\n                wrapper = that.wrapper.off(ns);\n\n            if (that._dateInput) {\n                that._dateInput._unbindInput();\n            }\n\n            if (!readonly && !disable) {\n                wrapper\n                    .removeClass(STATEDISABLED)\n                    .on(HOVEREVENTS, that._toggleHover);\n\n                if (element && element.length) {\n                    element[0].removeAttribute(DISABLED);\n                    element[0].removeAttribute(READONLY);\n                }\n                element.attr(ARIA_DISABLED, false)\n                       .attr(ARIA_READONLY, false)\n                       .on(\"keydown\" + ns, that._keydown.bind(that))\n                       .on(\"focusout\" + ns, that._blur.bind(that))\n                       .on(\"focus\" + ns, function() {\n                           that.wrapper.addClass(FOCUSED);\n                       });\n\n                if (that._dateInput) {\n                    that._dateInput._bindInput();\n                }\n               arrow.on(CLICK, that._click.bind(that))\n                   .on(MOUSEDOWN, preventDefault);\n            } else {\n                wrapper\n                    .addClass(disable ? STATEDISABLED : \"\")\n                    .removeClass(disable ? \"\" : STATEDISABLED);\n\n                element.attr(DISABLED, disable)\n                       .attr(READONLY, readonly)\n                       .attr(ARIA_DISABLED, disable)\n                       .attr(ARIA_READONLY, readonly);\n            }\n        },\n\n        _label: function() {\n            var that = this;\n            var options = that.options;\n            var labelOptions = $.isPlainObject(options.label) ? options.label : {\n                content: options.label\n            };\n\n            if (that._dateInput) {\n                labelOptions.floatCheck = () => {\n                    that._dateInput._toggleDateMask(true);\n\n                    if (!that.value() && !that._dateInput._hasDateInput() && document.activeElement !== that.element[0]) {\n                        that._dateInput._toggleDateMask(false);\n                        return true;\n                    }\n\n                    return false;\n                };\n            }\n\n            that.label = new kendo.ui.Label(null, $.extend({}, labelOptions, {\n                widget: that\n            }));\n\n            that._inputLabel = that.label.element;\n        },\n\n        readonly: function(readonly) {\n            this._editable({\n                readonly: readonly === undefined$1 ? true : readonly,\n                disable: false\n            });\n\n            if (this.label && this.label.floatingLabel) {\n                this.label.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n            }\n        },\n\n        enable: function(enable) {\n            this._editable({\n                readonly: false,\n                disable: !(enable = enable === undefined$1 ? true : enable)\n            });\n\n            if (this.label && this.label.floatingLabel) {\n                this.label.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n\n            Widget.fn.destroy.call(that);\n\n            that.timeView.destroy();\n\n            that.element.off(ns);\n            that._arrow.off(ns);\n            that.wrapper.off(ns);\n\n            if (that._form) {\n                that._form.off(\"reset\", that._resetHandler);\n            }\n\n            if (that.label) {\n                that.label.destroy();\n            }\n        },\n\n        close: function() {\n            this.timeView.close();\n        },\n\n        open: function() {\n            this.timeView.open();\n        },\n\n        min: function(value) {\n            if (value) {\n                this._specifiedRange = true;\n            }\n\n            return this._option(\"min\", value);\n        },\n\n        max: function(value) {\n            if (value && this.timeView) {\n                this._specifiedRange = true;\n                this.timeView.options.maxSet = true;\n            } else if (this.timeView) {\n                this.timeView.options.maxSet = false;\n            }\n            return this._option(\"max\", value);\n        },\n\n        value: function(value) {\n            var that = this;\n\n            if (value === undefined$1) {\n                return that._value;\n            }\n\n            that._old = that._update(value);\n\n            if (that._old === null) {\n                that.element.val(\"\");\n            }\n\n            that._oldText = that.element.val();\n\n            if (that.label && that.label.floatingLabel) {\n                that.label.floatingLabel.refresh();\n            }\n        },\n\n        _blur: function() {\n            var that = this,\n                value = that.element.val();\n\n           if (!(that.options.timeView && that.options.timeView.list === \"scroll\")) {\n               that.close();\n           }\n\n            if (value !== that._oldText) {\n                that._change(value);\n            }\n            that.wrapper.removeClass(FOCUSED);\n        },\n\n        _click: function() {\n            var that = this,\n                element = that.element;\n\n            that.timeView.toggle();\n\n            if (!support.touch && element[0] !== activeElement()) {\n                element.trigger(\"focus\");\n            }\n        },\n\n        _change: function(value) {\n            var that = this,\n            oldValue = that.element.val(),\n            dateChanged;\n\n            value = that._update(value);\n            dateChanged = !kendo.calendar.isEqualDate(that._old, value);\n\n            var valueUpdated = dateChanged && !that._typing;\n            var textFormatted = oldValue !== that.element.val();\n\n            if (valueUpdated || textFormatted) {\n                that.element.trigger(CHANGE);\n            }\n\n            if (dateChanged) {\n                that._old = value;\n                that._oldText = that.element.val();\n\n                that.trigger(CHANGE);\n            }\n\n            that._typing = false;\n        },\n\n        _icon: function() {\n            var that = this,\n                element = that.element,\n                options = that.options,\n                arrow;\n\n            arrow = element.next(\"button.k-input-button\");\n\n            if (!arrow[0]) {\n                arrow = $(html.renderButton('<button unselectable=\"on\" tabindex=\"-1\" class=\"k-input-button\" aria-label=\"select\"></button>', {\n                    icon: \"clock\",\n                    size: options.size,\n                    fillMode: options.fillMode,\n                    shape: \"none\",\n                    rounded: \"none\"\n                })).insertAfter(element);\n            }\n\n            that._arrow = arrow.attr({\n                \"role\": \"button\"\n            });\n        },\n\n        _keydown: function(e) {\n            var that = this,\n                key = e.keyCode,\n                timeView = that.timeView,\n                value = that.element.val();\n\n            if (timeView.popup.visible() || e.altKey) {\n                timeView.move(e);\n                if (that._dateInput && e.stopImmediatePropagation) {\n                    e.stopImmediatePropagation();\n                }\n            } else if (key === keys.ENTER && value !== that._oldText) {\n                that._change(value);\n            } else {\n                that._typing = true;\n            }\n        },\n\n        _option: function(option, value) {\n            var that = this,\n                options = that.options;\n\n            if (value === undefined$1) {\n                return options[option];\n            }\n\n            value = that.timeView._parse(value);\n\n            if (!value) {\n                return;\n            }\n\n            value = new DATE(+value);\n\n            options[option] = value;\n            that.timeView.options[option] = value;\n            that.timeView.bind();\n        },\n\n        _toggleHover: function(e) {\n            $(e.currentTarget).toggleClass(HOVER, e.type === \"mouseenter\");\n        },\n\n        _update: function(value) {\n            var that = this,\n                options = that.options,\n                timeView = that.timeView,\n                date = timeView._parse(value);\n\n            if (!isInRange(date, options.min, options.max)) {\n                date = null;\n            }\n\n            that._value = date;\n            that._currentlySelected = date;\n            if (that._dateInput && date) {\n                that._dateInput.value(date || value);\n            } else {\n                that.element.val(kendo.toString(date || value, options.format, options.culture));\n            }\n            timeView.value(date);\n\n            return date;\n        },\n\n        _wrapper: function() {\n            var that = this,\n                element = that.element,\n                wrapper;\n\n            wrapper = element.parents(\".k-timepicker\");\n\n            if (!wrapper[0]) {\n                wrapper = element.wrap(SPAN).parent();\n            }\n\n            wrapper[0].style.cssText = element[0].style.cssText;\n            that.wrapper = wrapper.addClass(\"k-timepicker k-input\")\n                .addClass(element[0].className);\n\n            element.css({\n                height: element[0].style.height\n            });\n        },\n\n        _reset: function() {\n            var that = this,\n                element = that.element,\n                formId = element.attr(\"form\"),\n                form = formId ? $(\"#\" + formId) : element.closest(\"form\");\n\n            if (form[0]) {\n                that._resetHandler = function() {\n                    that.value(element[0].defaultValue);\n                    that.max(that._initialOptions.max);\n                    that.min(that._initialOptions.min);\n                };\n\n                that._form = form.on(\"reset\", that._resetHandler);\n            }\n        }\n    });\n\n    function normalize(options) {\n        var parseFormats = options.parseFormats;\n\n        options.format = extractFormat(options.format || kendo.getCulture(options.culture).calendars.standard.patterns.t);\n\n        parseFormats = isArray(parseFormats) ? parseFormats : [parseFormats];\n        parseFormats.splice(0, 0, options.format);\n        options.parseFormats = parseFormats;\n    }\n\n    function preventDefault(e) {\n        e.preventDefault();\n    }\n\n    function mergeDateAndTime(date, time) {\n        return new Date(date.getFullYear(),\n            date.getMonth(),\n            date.getDate(),\n            time.getHours(),\n            time.getMinutes(),\n            time.getSeconds(),\n            time.getMilliseconds());\n    }\n\n    function datePattern(format, info) {\n        var calendar = info.calendar;\n        var result;\n        if (typeof format === \"string\") {\n            if (calendar.patterns[format]) {\n                result = calendar.patterns[format];\n            } else {\n                result = format;\n            }\n        }\n\n        if (!result) {\n            result = calendar.patterns.d;\n        }\n\n        return result;\n    }\n\n    function addLiteral(parts, value) {\n        var lastPart = parts[parts.length - 1];\n        if (lastPart && lastPart.type === \"LITERAL\") {\n            lastPart.pattern += value;\n        } else {\n            parts.push({\n                type: LITERAL,\n                pattern: value\n            });\n        }\n    }\n\n    function isHour12(pattern) {\n        return pattern === \"h\" || pattern === \"K\";\n    }\n\n    function dateNameType(formatLength) {\n        var nameType;\n        if (formatLength <= 3) {\n            nameType = \"abbreviated\";\n        } else if (formatLength === 4) {\n            nameType = \"wide\";\n        } else if (formatLength === 5) {\n            nameType = \"narrow\";\n        } else if (formatLength === 6) {\n            nameType = \"short\";\n        }\n\n        return nameType;\n    }\n\n    function startsWith(text, searchString, position) {\n        position = position || 0;\n        return text.indexOf(searchString, position) === position;\n    }\n\n    function includes(text, subStr) {\n        var returnValue = false;\n\n        if (text.indexOf(subStr) !== -1) {\n            returnValue = true;\n        }\n\n        return returnValue;\n    }\n\n    function splitDateFormat(format) {\n        var info = kendo.culture();\n        var pattern = datePattern(format, info);\n        var parts = [];\n        var lastIndex = dateFormatRegExp.lastIndex = 0;\n        var match = dateFormatRegExp.exec(pattern);\n        var specifier;\n        var type;\n        var part;\n        var names;\n        var minLength;\n        var patternLength;\n\n        while (match) {\n            var value = match[0];\n\n            if (lastIndex < match.index) {\n                addLiteral(parts, pattern.substring(lastIndex, match.index));\n            }\n\n            if (startsWith(value, '\"') || startsWith(value, \"'\")) {\n                addLiteral(parts, value);\n            } else {\n                specifier = value[0];\n                type = DATE_FIELD_MAP[specifier];\n                part = {\n                    type: type,\n                    pattern: value\n                };\n\n                if (type === \"hour\") {\n                    part.hour12 = isHour12(value);\n                }\n\n                names = NAME_TYPES[type];\n\n                if (names) {\n                    minLength = typeof names.minLength === \"number\" ? names.minLength : names.minLength[specifier];\n                    patternLength = value.length;\n\n                    if (patternLength >= minLength) {\n                        part.names = {\n                            type: names.type,\n                            nameType: dateNameType(patternLength),\n                            standAlone: names.standAlone === specifier\n                        };\n                    }\n                }\n\n                parts.push(part);\n            }\n\n            lastIndex = dateFormatRegExp.lastIndex;\n            match = dateFormatRegExp.exec(pattern);\n        }\n\n        if (lastIndex < pattern.length) {\n            addLiteral(parts, pattern.substring(lastIndex));\n        }\n\n        return parts;\n    }\n\n    function pad(value, size) {\n        var s = String(value);\n        while (s.length < (size || 2)) {\n            s = \"0\" + s;\n        }\n        return s;\n    }\n\n    function firstItemIndex(scrollTop, itemHeight) {\n        return Math.max(Math.round(scrollTop / itemHeight), 0);\n    }\n\n    function getItemHeight(item) {\n        return item.length && item[0].getBoundingClientRect().height;\n    }\n\n    function scrollIntoViewIfNeeded(element, centerIfNeeded) {\n\n        function makeRange(start, length) {\n            return { start: start, length: length, end: start + length };\n        }\n\n        function coverRange(inner, outer) {\n            if (centerIfNeeded === false ||\n                (outer.start < inner.end && inner.start < outer.end))\n            {\n                return Math.min(\n                    inner.start, Math.max(outer.start, inner.end - outer.length)\n                );\n            }\n            return (inner.start + inner.end - outer.length) / 2;\n        }\n\n        function makePoint(x, y) {\n            return {\n                x: x, y: y,\n                translate: function translate(dX, dY) {\n                    return makePoint(x + dX, y + dY);\n                }\n            };\n        }\n\n        function absolute(elem, pt) {\n            while (elem) {\n                pt = pt.translate(elem.offsetLeft, elem.offsetTop);\n                elem = elem.offsetParent;\n            }\n            return pt;\n        }\n\n        var target = absolute(element, makePoint(0, 0)),\n            extent = makePoint(element.offsetWidth, element.offsetHeight),\n            elem = element.parentNode,\n            origin;\n\n        while (elem instanceof HTMLElement) {\n            origin = absolute(elem, makePoint(elem.clientLeft, elem.clientTop));\n            elem.scrollLeft = coverRange(\n                makeRange(target.x - origin.x, extent.x),\n                makeRange(elem.scrollLeft, elem.clientWidth)\n            );\n            elem.scrollTop = coverRange(\n                makeRange(target.y - origin.y, extent.y),\n                makeRange(elem.scrollTop, elem.clientHeight)\n            );\n\n            target = target.translate(-elem.scrollLeft, -elem.scrollTop);\n            elem = elem.parentNode;\n        }\n    }\n\n\n    kendo.cssProperties.registerPrefix(\"TimePicker\", \"k-input-\");\n\n    kendo.cssProperties.registerValues(\"TimePicker\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n    ui.plugin(TimePicker);\n\n})(__webpack_provided_window_dot_kendo.jQuery);\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.timepicker.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.togglebutton.js":
/*!**************************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.togglebutton.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* harmony import */ var _kendo_button_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.button.js */ \"./node_modules/kendo-ui-core/esm/kendo.button.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\nvar __meta__ = {\n        id: \"togglebutton\",\n        name: \"ToggleButton\",\n        category: \"web\",\n        description: \"The ToggleButton widget displays styled buttons with selected state.\",\n        depends: [\"core\", \"button\"]\n    };\n\n    (function($, undefined$1) {\n        var kendo = __webpack_provided_window_dot_kendo,\n            Button = kendo.ui.Button,\n            CLICK = \"click\",\n            TOGGLE = \"toggle\",\n            NS = \".kendoToggleButton\",\n            ARIA_PRESSED = \"aria-pressed\",\n            SELECTED = \"k-selected\",\n            DATA_GROUP = \"data-group\",\n            ID = \"id\";\n\n        var ToggleButton = Button.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Button.fn.init.call(that, element, options);\n\n                element = that.wrapper = that.element;\n                options = that.options;\n\n\n                that._selected = options.selected === true ? true : false;\n                that.toggle(that._selected);\n\n                if (options.group) {\n                    element.attr(DATA_GROUP, options.group);\n                }\n\n                kendo.notify(that);\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that.wrapper.off(NS);\n                Button.fn.destroy.call(that);\n            },\n\n            events: [\n                CLICK,\n                TOGGLE\n            ],\n\n            options: {\n                name: \"ToggleButton\",\n                group: undefined$1,\n                selected: false\n            },\n\n            toggle: function(toggle) {\n                if (toggle === undefined$1) {\n                    toggle = !this._selected;\n                }\n\n                this._selected = toggle;\n\n                if (toggle === true) {\n                    this.element.attr(ARIA_PRESSED, true);\n                    this.element.addClass(SELECTED);\n                } else if (toggle === false) {\n                    this.element.attr(ARIA_PRESSED, false);\n                    this.element.removeClass(SELECTED);\n                }\n            },\n\n            _click: function(e) {\n                if (this.options.enable) {\n                    if (this.trigger(CLICK, {\n                        event: e,\n                        id: this.element.attr(ID),\n                        target: this.element\n                    })) {\n                        e.preventDefault();\n                    } else {\n                        this.toggle();\n\n                        this.trigger(TOGGLE, {\n                            event: e,\n                            checked: this._selected,\n                            group: this.options.group,\n                            id: this.element.attr(ID),\n                            target: this.element\n                        });\n                    }\n                }\n            }\n        });\n\n        kendo.cssProperties.registerPrefix(\"ToggleButton\", \"k-button-\");\n\n        kendo.cssProperties.registerValues(\"ToggleButton\", [{\n            prop: \"fillMode\",\n            values: kendo.cssProperties.fillModeValues.concat([\"link\"])\n        }, {\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n        kendo.ui.plugin(ToggleButton);\n\n    })(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.togglebutton.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.toolbar.js":
/*!*********************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.toolbar.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* harmony import */ var _kendo_splitbutton_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.splitbutton.js */ \"./node_modules/kendo-ui-core/esm/kendo.splitbutton.js\");\n/* harmony import */ var _kendo_dropdownbutton_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kendo.dropdownbutton.js */ \"./node_modules/kendo-ui-core/esm/kendo.dropdownbutton.js\");\n/* harmony import */ var _kendo_buttongroup_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./kendo.buttongroup.js */ \"./node_modules/kendo-ui-core/esm/kendo.buttongroup.js\");\n/* harmony import */ var _kendo_menu_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./kendo.menu.js */ \"./node_modules/kendo-ui-core/esm/kendo.menu.js\");\n/* harmony import */ var _kendo_icons_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./kendo.icons.js */ \"./node_modules/kendo-ui-core/esm/kendo.icons.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\n\n\n\n\nvar __meta__ = {\n    id: \"toolbar\",\n    name: \"ToolBar\",\n    category: \"web\",\n    description: \"The ToolBar widget displays one or more command buttons divided into groups.\",\n    depends: [ \"core\", \"splitbutton\", \"dropdownbutton\", \"buttongroup\", \"menu\", \"icons\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        ui = kendo.ui,\n        Widget = ui.Widget,\n        isFunction = kendo.isFunction,\n        keys = kendo.keys,\n        outerWidth = kendo._outerWidth,\n        ns = \".kendoToolBar\",\n        TOOLBAR = \"toolbar\",\n        KTOOLBAR = \"k-toolbar\",\n        KBUTTON = \"k-button\",\n        BUTTON_GROUP = \"k-button-group\",\n        SPLIT_BUTTON = \"k-split-button\",\n        MENU_BUTTON = \"k-menu-button\",\n        POPUP_BUTTON = \"k-popup-button\",\n        KSEPARATOR = \"k-separator\",\n        SPACER_CLASS = \"k-spacer\",\n        UPLOAD_BUTTON = \"k-upload-button\",\n        POPUP = \"k-popup\",\n        RESIZABLE_TOOLBAR = \"k-toolbar-resizable\",\n        STATE_SELECTED = \"k-selected\",\n        STATE_DISABLED = \"k-disabled\",\n        STATE_HIDDEN = \"k-hidden\",\n        FORCE_HIDDEN = \"k-force-hidden\",\n        GROUP_START = \"k-group-start\",\n        GROUP_END = \"k-group-end\",\n        MENU_LINK = \"k-menu-link\",\n        MENU_ITEM = \"k-menu-item\",\n        OVERFLOW_ANCHOR = \"k-toolbar-overflow-button\",\n        TEMPLATE_ITEM = \"k-toolbar-item\",\n        TOOLBAR_TOOL = \"k-toolbar-tool\",\n        MENU_LINK_TOGGLE = \"k-menu-link-toggle\",\n        DROPDOWNLIST = \"k-dropdownlist\",\n        INPUT_BUTTON = \"k-input-button\",\n        MENU_POPUP = \"k-menu-popup\",\n        KFOCUS = \"k-focus\",\n        SINGLE = \"single\",\n        MULTIPLE = \"multiple\",\n        NONE = \"none\",\n        TABINDEX_MINUS_1 = \"[tabindex=-1]\",\n\n        ARIA_DISABLED = \"aria-disabled\",\n        ARIA_CHECKED = \"aria-checked\",\n        ARIA_LABEL = \"aria-label\",\n\n        CHANGE = \"change\",\n        CLICK = \"click\",\n        TOGGLE = \"toggle\",\n        OPEN = \"open\",\n        CLOSE = \"close\",\n        FOCUS = \"focus\",\n        FOCUSIN = \"focusin\",\n        FOCUSOUT = \"focusout\",\n        KEYDOWN = \"keydown\",\n\n        SPACER = \"spacer\",\n        PRIMARY = \"primary\",\n        ROLE = \"role\",\n        SEPARATOR = \"separator\",\n        OVERFLOW = \"overflow\",\n        TABINDEX = \"tabindex\",\n        INPUT = \"input\",\n        SELECT = \"select\",\n        HIDDEN = \"hidden\",\n        GROUP = \"group\",\n        DATA_UID = \"data-uid\",\n        DATA_PARENTUID = \"data-parentuid\",\n        DATA_ROLE_SELECTOR = \"[data-role]\",\n        DATA_TOGGLE_SELECTOR = \"[data-toggle]\",\n        DATA_ROLE_BUTTONMENU = \"[data-role=buttonmenu]\",\n\n        KENDO_FOCUSABLE = \":kendoFocusable\",\n\n        OVERFLOW_OPEN = \"overflowOpen\",\n        OVERFLOW_CLOSE = \"overflowClose\",\n        OVERFLOW_NEVER = \"never\",\n        OVERFLOW_AUTO = \"auto\",\n        OVERFLOW_ALWAYS = \"always\",\n\n        KENDO_UID_ATTR = kendo.attr(\"uid\"),\n\n        NOTHING = \"\",\n        DASH = \"_\",\n        EMPTY = \" \",\n        DOT = \".\",\n        COMMA = \",\",\n        ID = \"id\",\n        UID = \"uid\",\n        NBSP = \"&nbsp;\",\n\n        K_DROP_DOWN_BUTTON = \"kendoDropDownButton\",\n        K_SPLIT_BUTTON = \"kendoSplitButton\",\n        K_TOGGLE_BUTTON = \"kendoToggleButton\",\n        K_BUTTON_GROUP = \"kendoButtonGroup\";\n\n        kendo.toolbar = {};\n\n    var WIDGET_TYPES = {\n        button: \"Button\",\n        splitButton: \"SplitButton\",\n        dropDownButton: \"DropDownButton\",\n        buttonGroup: \"ButtonGroup\",\n        popupButton: \"Button\",\n        open: \"Button\"\n    };\n\n    var TOOLBAR_TOOLS_CLASSES = {\n        Button: \"k-toolbar-button\",\n        ToggleButton: \"k-toolbar-toggle-button\",\n        SplitButton: \"k-toolbar-split-button\",\n        DropDownButton: \"k-toolbar-menu-button\",\n        ButtonGroup: \"k-toolbar-button-group\",\n        ColorPicker: \"k-toolbar-color-picker\",\n        Switch: \"k-toolbar-switch\"\n    };\n\n    var SAFE_COMPONENTS = [ \"Button\", \"SplitButton\", \"DropDownButton\", \"ButtonGroup\", \"Switch\", \"ColorPicker\" ];\n\n    var POPUP_BUTTON_TEMPLATE = `<button class=\"k-popup-button\"><span class=\"k-button-icon k-icon\"></span><span class=\"k-button-text\">${kendo.ui.icon(\"caret-alt-down\")}</span></button>`;\n    var TEMPLATE_WRAPPER = \"<div class='k-toolbar-item' aria-keyshortcuts='Enter'></div>\";\n    var CUSTOM_WIDGET_WRAP = \"<span class='k-toolbar-tool k-toolbar-item' tabindex='0'>\";\n    var SEPARATOR_OVERFLOW_EL = \"<li role='separator' class='k-separator k-menu-separator k-hidden'></li>\";\n    var SEPARATOR_EL = '<div role=\"separator\">&nbsp;</div>';\n    var SPACER_EL = '<div>&nbsp;</div>';\n\n    var ToolBar = Widget.extend({\n        init: function(element, options) {\n            Widget.fn.init.call(this, element, options);\n\n            options = this.options;\n\n            this._isRtl = kendo.support.isRtl(element);\n            this.uid = kendo.guid();\n\n            element = this.wrapper = this.element;\n            element.attr(KENDO_UID_ATTR, this.uid);\n            element.addClass(KTOOLBAR);\n            element.attr(ROLE, TOOLBAR);\n\n            if (options.resizable) {\n                this._resizable();\n            }\n\n            if (options.tools && options.tools.length > 0) {\n                options.items = this._extendToolsOptions();\n            }\n\n            if (options.items && options.items.length) {\n                this._items();\n            }\n\n            this._attachEvents();\n            this._tabIndex();\n            this._applyCssClasses();\n\n            if (options.resizable) {\n                this._shrink(this.element.innerWidth());\n                this.overflowAnchor.appendTo(this.wrapper);\n                this._toggleOverflowAnchor();\n            }\n\n            kendo.notify(this);\n        },\n\n        events: [\n            CLICK,\n            TOGGLE,\n            OPEN,\n            CLOSE,\n            OVERFLOW_OPEN,\n            OVERFLOW_CLOSE,\n            CHANGE\n        ],\n\n        options: {\n            name: \"ToolBar\",\n            items: [],\n            resizable: true,\n            navigateOnTab: false,\n            evaluateTemplates: false,\n            size: \"medium\"\n        },\n\n        destroy: function() {\n            var that = this;\n\n            if (that.options.resizable) {\n                kendo.unbindResize(that._resizeHandler);\n                that.overflowMenu.destroy();\n            }\n\n            that.element.find(DOT + POPUP_BUTTON).each((i, el) => {\n                var button = $(el).getKendoButton(),\n                    popup, popupWrapper, chooser;\n\n                if (button) {\n                    chooser = button.chooser;\n                    popup = button.popup;\n                    popupWrapper = popup.wrapper;\n\n                    chooser.destroy();\n                    popup.destroy();\n                    popupWrapper.remove();\n                }\n            });\n\n            kendo.destroy(that.element.children());\n\n            Widget.fn.destroy.call(that);\n        },\n\n        add: function(options) {\n            this._add(options);\n\n            if (this.options.resizable) {\n                this.resize(true);\n            }\n        },\n\n        enable: function(candidate, enable) {\n            var that = this,\n                uid = this._getUid(candidate),\n                item = this._getItem(candidate, uid),\n                component = item.component,\n                buttonPopup, children, focused, wrapper;\n\n            if (typeof enable == \"undefined\") {\n                enable = true;\n            }\n\n            if (item.component) {\n                wrapper = component.wrapper;\n                focused = wrapper.hasClass(KFOCUS) || wrapper.is(\":focus\");\n                component.enable(enable);\n                wrapper.find(\"[disabled]\").removeAttr(\"disabled\");\n                wrapper.removeAttr(\"disabled\");\n\n                if (focused) {\n                    wrapper.addClass(KFOCUS).trigger(FOCUS);\n                }\n            } else if (item.buttonsPopupItem.length > 0) {\n                buttonPopup = kendo.widgetInstance(item.buttonsPopupItem.closest(DOT + MENU_POPUP));\n                buttonPopup.enable(enable, item.buttonsPopupItem);\n            }\n\n            if (this.overflowMenu) {\n                this.overflowMenu.enable(item.menuItem, enable);\n\n                children = this.overflowMenu.element\n                    .find(\"[data-parentuid=\" + uid + \"]\");\n\n                children.each((i, el) => {\n                    that.overflowMenu.enable($(el), enable);\n                });\n            }\n        },\n\n        getSelectedFromGroup: function(groupName) {\n            return this.element.find(\"[data-group='\" + groupName + \"']\").filter(DOT + STATE_SELECTED);\n        },\n\n        hide: function(candidate) {\n            var that = this,\n                uid = this._getUid(candidate),\n                item = that._getItem(candidate, uid),\n                elements, parentButtonGroup, children, parentGroupEl;\n\n            if (!item) {\n                return;\n            }\n\n            elements = item.templateEl.add(item.toolbarEl).add(item.buttonsPopupItem).add(item.menuItem);\n\n            elements.addClass(STATE_HIDDEN);\n            elements.addClass(FORCE_HIDDEN);\n\n            if (this.overflowMenu) {\n                children = this.overflowMenu.element\n                    .find(\"[data-parentuid=\" + uid + \"]\");\n\n                children.each((i, el) => {\n                    $(el).addClass(FORCE_HIDDEN);\n                    $(el).addClass(STATE_HIDDEN);\n                });\n            }\n\n            parentGroupEl = item.toolbarEl.parent().closest(DOT + BUTTON_GROUP);\n            parentButtonGroup = parentGroupEl.data(K_BUTTON_GROUP);\n\n            if (parentButtonGroup) {\n                if (parentGroupEl.children(\":not(.k-hidden)\").length === 0) {\n                    that.hide(parentGroupEl);\n                } else {\n                    that._groupVisibleButtons(parentGroupEl);\n                }\n            }\n\n            if (elements.find(\"[tabindex=0]\").addBack(\"[tabindex=0]\").length > 0) {\n                this._resetTabIndex(that._getAllItems().first());\n            }\n\n            if (this.options.resizable) {\n                this.resize(true);\n            }\n        },\n\n        remove: function(candidate) {\n            var that = this,\n                uid = this._getUid(candidate),\n                item = this._getItem(candidate, uid),\n                buttonGroup, children;\n\n            if (!item) {\n                return;\n            }\n\n            if (item.component) {\n                buttonGroup = item.toolbarEl.closest('[data-role=\"buttongroup\"]');\n                if (buttonGroup.length > 0 && item.toolbarEl.siblings().length === 0) {\n                    buttonGroup.data(K_BUTTON_GROUP).destroy();\n                    buttonGroup.remove();\n\n                    item.toolbarEl = $(NOTHING);\n                } else {\n                    item.component.destroy();\n                }\n            }\n\n            if (item.templateEl.length > 0) {\n                item.templateEl.remove();\n            } else if (item.toolbarEl.length > 0) {\n                item.toolbarEl.remove();\n            }\n\n            if (item.buttonsPopupItem.length > 0) {\n                item.buttonsPopupItem.remove();\n            }\n\n            if (this.overflowMenu) {\n                this.overflowMenu.remove(item.menuItem);\n\n                children = this.overflowMenu.element\n                    .find(\"[data-parentuid=\" + uid + \"]\");\n\n                children.each((i, el) => {\n                    that.overflowMenu.remove($(el));\n                });\n            }\n\n            if (this.options.resizable) {\n                this.resize(true);\n            }\n        },\n\n        show: function(candidate) {\n            var that = this,\n                uid = this._getUid(candidate),\n                item = this._getItem(candidate, uid),\n                elements, parentButtonGroup, children, parentGroupEl;\n\n            if (!item) {\n                return;\n            }\n\n            elements = item.templateEl.add(item.toolbarEl).add(item.buttonsPopupItem);\n            elements.removeClass(FORCE_HIDDEN);\n            elements.removeClass(STATE_HIDDEN);\n\n            item.menuItem.removeClass(FORCE_HIDDEN);\n\n            if (this.overflowMenu) {\n                children = this.overflowMenu.element\n                    .find(\"[data-parentuid=\" + uid + \"]\");\n\n                children.each((i, el) => {\n                    $(el).removeClass(FORCE_HIDDEN);\n                });\n            }\n\n            parentGroupEl = item.toolbarEl.parent().closest(DOT + BUTTON_GROUP);\n            parentButtonGroup = parentGroupEl.data(K_BUTTON_GROUP);\n\n            if (parentButtonGroup) {\n                if (parentGroupEl.hasClass(\"k-hidden\") && parentGroupEl.children(\":not(.k-hidden)\").length > 0) {\n                    that.show(parentGroupEl);\n                } else {\n                    that._groupVisibleButtons(parentGroupEl);\n                }\n            }\n\n            if (this.options.resizable) {\n                this.resize(true);\n            }\n        },\n\n        toggle: function(candidate, checked) {\n            var item = this._getItem(candidate),\n                element = item.toolbarEl,\n                menuItem = item.menuItem,\n                button, parentGroup, group, groupButtons;\n\n            if (checked === undefined$1) {\n                checked = true;\n            }\n\n            button = element.data(K_TOGGLE_BUTTON);\n\n            if (!item.component && menuItem.find(DOT + MENU_LINK_TOGGLE).length === 0) {\n                return;\n            }\n\n            group = element.data(GROUP);\n\n            if (item.component) {\n                parentGroup = element.closest(DOT + BUTTON_GROUP).data(K_BUTTON_GROUP);\n\n                if (parentGroup) {\n                    if (element.hasClass(STATE_SELECTED) !== checked) {\n                        parentGroup._toggleIndex(element.index());\n                    }\n                }\n\n                button.toggle(checked);\n\n                if (checked) {\n                    groupButtons = this.element.find(\"[data-group=\" + group + \"]\");\n\n                    groupButtons.each((i, el) => {\n                        if (el !== element[0]) {\n                            $(el).data(K_TOGGLE_BUTTON).toggle(false);\n                        }\n                    });\n                }\n            }\n\n            if (menuItem) {\n                menuItem\n                    .attr(ARIA_CHECKED, checked)\n                    .find(DOT + MENU_LINK_TOGGLE)\n                    .toggleClass(STATE_SELECTED, checked);\n\n                if (checked && this.overflowMenu) {\n                    groupButtons = this.overflowMenu.element.find(\"[data-group=\" + group + \"]\");\n\n                    groupButtons.each((i, el) => {\n                        if (el !== menuItem[0]) {\n                            $(el)\n                                .attr(ARIA_CHECKED, false)\n                                .find(DOT + MENU_LINK_TOGGLE)\n                                .removeClass(STATE_SELECTED);\n                        }\n                    });\n                }\n            }\n        },\n\n        toggleTools: function(conditions) {\n            var that = this,\n                tools = that.element.find(DATA_TOGGLE_SELECTOR),\n                focusable = that.element.find(KENDO_FOCUSABLE).not(TABINDEX_MINUS_1);\n\n            tools.each(function(index, elm) {\n                var tool = $(elm),\n                    widget = null,\n                    condition = tool.data(TOGGLE),\n                    toToggle = conditions && conditions[condition];\n\n                if (tool.is(DATA_ROLE_SELECTOR)) {\n                    widget = kendo.widgetInstance(tool);\n                }\n\n                if (widget && widget.enable) {\n                    widget.enable(toToggle || false);\n                } else {\n                    that.enable(tool, toToggle);\n                }\n            });\n\n            that.element.find(DATA_TOGGLE_SELECTOR + \"[disabled]\").removeAttr(\"disabled\");\n\n            that.element.find(KENDO_FOCUSABLE).not(TABINDEX_MINUS_1).attr(\"tabindex\", -1);\n            focusable.attr(TABINDEX, 0);\n        },\n\n        _add: function(options) {\n            var processed = this._processOptions(options),\n                template = processed.template,\n                overflowTemplate = processed.overflowTemplate,\n                type = WIDGET_TYPES[processed.type],\n                element;\n\n            if (template || overflowTemplate) {\n                element = this._addTemplate(processed);\n            } else if (kendo.ui[processed.component]) {\n                element = this._addCustomWidget(processed);\n            } else if (type) {\n                element = this._addDefaultTool(type, processed);\n            } else if (processed.type === SPACER) {\n                this._addSpacer();\n            } else if (processed.type === SEPARATOR) {\n                this._addSeparator(processed);\n            }\n\n            if (element) {\n                if (this.overflowAnchor) {\n                    element.insertBefore(this.overflowAnchor);\n                } else {\n                    element.appendTo(this.element);\n                }\n\n                element.find(\"[disabled]\").removeAttr(\"disabled\");\n\n                if (element.is(\"[disabled]\")) {\n                    element.removeAttr(\"disabled\");\n                }\n            }\n        },\n\n        _addAttributes: function(options, element) {\n            var attributes = options.attributes,\n                classes = NOTHING;\n\n            if (!attributes) {\n                attributes = {};\n            }\n\n            if (options.hidden) {\n                classes = STATE_HIDDEN + EMPTY + FORCE_HIDDEN;\n            }\n\n            if (options.align) {\n                classes = classes + \" k-align-\" + options.align;\n            }\n\n            if (attributes) {\n                if (attributes.class) {\n                    classes = classes + EMPTY + attributes.class;\n                    delete attributes.class;\n                }\n\n                element.attr(attributes);\n            }\n\n            element.addClass(classes);\n            element.attr(KENDO_UID_ATTR, options.uid);\n\n            if (options.id) {\n                element.attr(ID, options.id);\n            }\n            if (options.overflow === OVERFLOW_NEVER) {\n                element.attr(\"data-overflow\", OVERFLOW_NEVER);\n            }\n        },\n\n        _addCustomWidget: function(options) {\n            var element = $(options.element || \"<input>\"),\n                widget, result, classes;\n\n            if (options.overflowComponent) {\n                this._addMenuItem(options.overflowComponent.type, $.extend({}, options, options.overflowComponent));\n            }\n\n            if (options.attributes) {\n                classes = options.attributes.class;\n                delete options.attributes[\"class\"];\n                element.attr(options.attributes);\n                delete options.attributes[ARIA_LABEL];\n            }\n\n            if (!options.componentOptions) {\n                options.componentOptions = {};\n            }\n\n            options.componentOptions.size = this.options.size;\n\n            widget = new kendo.ui[options.component](element, options.componentOptions);\n\n            if (SAFE_COMPONENTS.indexOf(options.component) > -1) {\n                widget.wrapper.addClass(TOOLBAR_TOOL + \" \" + TOOLBAR_TOOLS_CLASSES[options.component]);\n                result = widget.wrapper;\n            } else {\n                result = (widget.wrapper || widget.element).wrap(CUSTOM_WIDGET_WRAP).parent();\n            }\n\n            if (options.attributes) {\n                options.attributes.class = classes;\n            }\n\n            this._addAttributes(options, result);\n\n            return result;\n        },\n\n        _addDefaultTool: function(component, options) {\n            var element, op;\n\n            if (options.overflow !== OVERFLOW_ALWAYS) {\n                element = this._addToolbarTool(component, $.extend(true, {}, options));\n            }\n\n            if (this.overflowMenu && options.overflow !== OVERFLOW_NEVER) {\n                if (options.overflowComponent) {\n                    op = $.extend(true, {}, options, options.overflowComponent);\n                    delete op[\"data-command\"];\n                    this._addMenuItem(\"Button\", op);\n                } else {\n                    this._addMenuItem(component, $.extend(true, {}, options));\n                }\n            }\n\n            return element;\n        },\n\n        _addMenuItem: function(component, options) {\n            var that = this,\n                selected = options.selected,\n                menuitem;\n\n            delete options.selected;\n\n            if (options.id) {\n                options.id = options.id + DASH + OVERFLOW;\n            }\n            if (options.showIcon === TOOLBAR) {\n                delete options.imageUrl;\n                delete options.icon;\n            }\n\n            if (options.showText === TOOLBAR) {\n                if (!options.attributes) {\n                    options.attributes = {};\n                }\n\n                options.attributes[ARIA_LABEL] = options.text;\n\n                options.text = NOTHING;\n            } else if (options.text === undefined$1 || options.text === NOTHING) {\n                options.text = NBSP;\n                options.encoded = false;\n            }\n\n            that.overflowMenu.append(options);\n            menuitem = that.overflowMenu.element.find(DOT + MENU_ITEM).last();\n\n            if (options.icon) {\n                menuitem.find(DOT + MENU_LINK).prepend(kendo.ui.icon(options.icon));\n            }\n\n            if (component === \"ToggleButton\" || (component === \"Button\" && options.togglable === true)) {\n                menuitem.find(DOT + MENU_LINK).addClass(MENU_LINK_TOGGLE);\n\n                if (selected) {\n                    menuitem.find(DOT + MENU_LINK).addClass(STATE_SELECTED);\n                }\n\n                if (options.group) {\n                    menuitem.attr(\"data-group\", options.group);\n                }\n            } else if (options.menuButtons) {\n                options.menuButtons.forEach((i) => {\n                    i.overflow = options.overflow;\n                    that._addMenuItem(null, i);\n                });\n            } else if (options.buttons) {\n                menuitem.remove();\n                menuitem = null;\n\n                options.buttons.forEach((i) => {\n                    var attributes = i.attributes;\n                    i.overflow = options.overflow;\n                    i.attributes = $.extend(attributes, options.attributes);\n\n                    that._addMenuItem(\"Button\", i);\n                });\n            }\n\n            if (component === \"DropDownButton\") {\n                menuitem.addClass(STATE_DISABLED);\n                menuitem.attr(ARIA_DISABLED, true);\n            }\n\n            if (menuitem) {\n                that._addAttributes(options, menuitem);\n\n                if (options.overflow === OVERFLOW_AUTO) {\n                    menuitem.addClass(STATE_HIDDEN);\n                }\n\n                if (options.click || options.toggle) {\n                    that.overflowMenu.bind(SELECT, (e) => {\n                        if (e.item === menuitem[0]) {\n                            this._onMenuItemSelect(e, options.click, options.toggle);\n                        }\n                    });\n                }\n            }\n\n            return menuitem;\n        },\n\n        _addPopupButton: function(options) {\n            var that = this,\n                widgetElement = $(POPUP_BUTTON_TEMPLATE),\n                component = options.popupComponent,\n                popup, chooser;\n\n            widgetElement.attr(ARIA_LABEL, options.text);\n\n            popup = $(\"<div/>\").appendTo($(\"<body>\")).kendoPopup({\n                anchor: widgetElement\n            }).data(\"kendoPopup\");\n\n            widgetElement.on(CLICK + \" touchend\", (e) => {\n                popup.toggle();\n                e.preventDefault();\n            });\n\n            chooser = new component(popup.element);\n\n            chooser.bind(options.commandOn, (e) => {\n                that.trigger(CHANGE, { target: widgetElement, value: e.value || e });\n                popup.close();\n            });\n\n            return { widgetElement, chooser, popup };\n        },\n\n        _addSeparator: function(options) {\n            var separator = $(SEPARATOR_EL),\n                overflowSeparator = $(SEPARATOR_OVERFLOW_EL);\n\n            separator.addClass(KSEPARATOR);\n            separator.attr(ROLE, SEPARATOR);\n\n            if (this.overflowAnchor) {\n                separator.insertBefore(this.overflowAnchor);\n            } else {\n                separator.appendTo(this.element);\n            }\n\n            this._addAttributes(options, separator);\n\n            if (options.id) {\n                options.id = options.id + DASH + OVERFLOW;\n            }\n\n            this._addAttributes(options, overflowSeparator);\n\n            if (this.overflowMenu) {\n                this.overflowMenu.element.append(overflowSeparator);\n            }\n        },\n\n        _addSpacer: function() {\n            var spacer = $(SPACER_EL);\n            spacer.addClass(SPACER_CLASS);\n\n            if (this.overflowAnchor) {\n                spacer.insertBefore(this.overflowAnchor);\n            } else {\n                spacer.appendTo(this.element);\n            }\n        },\n\n        _addTemplate: function(options) {\n            var template = options.template,\n                overflowTemplate = options.overflowTemplate,\n                element, menuitem, inputsInTemplate = $(NOTHING);\n\n            if (overflowTemplate && this.overflowMenu && options.overflow !== OVERFLOW_NEVER) {\n                overflowTemplate = isFunction(overflowTemplate) ? overflowTemplate(options)[0] : overflowTemplate;\n                this.overflowMenu.append({});\n                menuitem = this.overflowMenu.element\n                    .find(DOT + MENU_ITEM)\n                    .last()\n                    .find(DOT + MENU_LINK)\n                    .html(overflowTemplate)\n                    .parent();\n            }\n\n            if (template && options.overflow !== OVERFLOW_ALWAYS) {\n                if (this.options.evaluateTemplates) {\n                    template = kendo.template(template);\n                }\n\n                template = isFunction(template) ? template(options) : template;\n\n                element = $(TEMPLATE_WRAPPER);\n                element.html(template);\n\n                if (menuitem) {\n                    menuitem.addClass(STATE_HIDDEN);\n                }\n            }\n\n            if (element) {\n                inputsInTemplate = element.find(INPUT + COMMA + SELECT);\n                this._addAttributes(options, element);\n            }\n\n            if (menuitem) {\n                inputsInTemplate.add(menuitem.find(INPUT + COMMA + SELECT));\n                this._addAttributes(options, menuitem);\n            }\n\n            if (!this.options.navigateOnTab && inputsInTemplate.length > 0) {\n                element.attr(TABINDEX, 0);\n                element.addClass(TOOLBAR_TOOL);\n                inputsInTemplate.attr(TABINDEX, -1);\n            }\n\n            return element;\n        },\n\n        _addToolbarTool: function(component, options) {\n            var widgetElement = $(\"<button>\"),\n                hasButtons = false,\n                widget, element, popupRef;\n\n            if (options.primary === true) {\n                options.themeColor = PRIMARY;\n            }\n            if (options.url) {\n                widgetElement = $(\"<a href='\" + options.url + \"'>\");\n            }\n            if (options.showIcon === OVERFLOW) {\n                delete options.imageUrl;\n                delete options.icon;\n            }\n            if (options.showText !== OVERFLOW) {\n                widgetElement.text(options.text);\n            } else {\n                widgetElement.attr(ARIA_LABEL, options.text);\n            }\n\n            if (options.type === \"popupButton\") {\n                popupRef = this._addPopupButton(options);\n                widgetElement = popupRef.widgetElement;\n            } else if (component === \"Button\" && options.togglable === true) {\n                component = \"ToggleButton\";\n            } else if (options.menuButtons) {\n                options.items = options.menuButtons;\n                delete options.menuButtons;\n\n                if (options.attributes && options.attributes.class) {\n                    widgetElement.addClass(options.attributes.class);\n                }\n\n                widgetElement.attr(DATA_UID, options.uid);\n                delete options.uid;\n            } else if (options.buttons) {\n                widgetElement = $(\"<span></span>\");\n                hasButtons = true;\n                options.items = options.buttons;\n                delete options.buttons;\n\n                options.preventKeyNav = true;\n\n                options.items.forEach(i => {\n                    if (i.showIcon === OVERFLOW) {\n                        delete i.imageUrl;\n                        delete i.icon;\n                    }\n\n                    if (i.showText === OVERFLOW) {\n                        if (!i.attributes) {\n                            i.attributes = {};\n                        }\n\n                        i.attributes[ARIA_LABEL] = i.text;\n\n                        delete i.text;\n                    }\n                });\n            }\n\n            if (options.id) {\n                widgetElement.attr(ID, options.id);\n                delete options.id;\n            }\n\n            // Remove the name property. Otherwise the default component name will be overriden.\n            // This will cause us to init an element with data-role=${name} instead of the correct data-role of the component.\n            if (options.name) {\n                delete options.name;\n            }\n\n            options.size = this.options.size;\n\n            widget = new kendo.ui[component]($(widgetElement), options);\n            element = widget.wrapper || widget.element;\n            element.addClass(TOOLBAR_TOOLS_CLASSES[component]);\n            this._addAttributes(options, element);\n\n            if (options.url) {\n                widgetElement.removeAttr(ROLE);\n            }\n\n            if (hasButtons) {\n                element.find(DOT + KBUTTON).addClass(TOOLBAR_TOOL);\n                this._groupVisibleButtons(element);\n            } else {\n                widget.element.addClass(TOOLBAR_TOOL);\n            }\n\n            if (options.type !== \"popupButton\" && options.type !== \"open\") {\n                this._attachWidgetEvents(widget);\n            } else if (options.type === \"open\") {\n                widgetElement.addClass(UPLOAD_BUTTON);\n                this._resetOpen(widgetElement, options.extensions);\n                element = widgetElement.parent();\n            } else {\n                widget.chooser = popupRef.chooser;\n                widget.popup = popupRef.popup;\n            }\n\n            return element;\n        },\n\n        _attachEvents: function() {\n            var that = this;\n\n            that.element.on(KEYDOWN + ns, that._keydown.bind(that))\n                .on(FOCUSIN + ns, that._focusIn.bind(that))\n                .on(FOCUSOUT + ns, that._focusOut.bind(that));\n        },\n\n        _attachWidgetEvents: function(widget) {\n            var that = this;\n\n            widget.bind(CLICK, that._onClick.bind(that));\n            widget.bind(TOGGLE, that._onToggle.bind(that));\n            widget.bind(SELECT, that._onSelect.bind(that));\n            widget.bind(OPEN, that._onOpen.bind(that));\n            widget.bind(CLOSE, that._onClose.bind(that));\n\n            widget.wrapper.find(DOT + KBUTTON).each((i, el) => {\n                var $el = $(el);\n\n                if ($el.data(\"kendoButton\")) {\n                    $el.data(\"kendoButton\").bind(CLICK, (e) => {\n                        that.trigger(CLICK, { id: e.id, target: e.target, originalEvent: e.originalEvent || e.event });\n                    });\n                }\n            });\n        },\n\n        _childrenWidth: function() {\n            var gap = parseInt(this.element.css('gap'), 10) || 0;\n            var childrenWidth = gap;\n\n            this.element.children(\":visible:not(\" + DOT + SPACER_CLASS + \")\").each(function() {\n                childrenWidth += outerWidth($(this), false) + gap;\n            });\n\n            return Math.ceil(childrenWidth);\n        },\n\n        _extendToolsOptions: function() {\n            var options = this.options,\n                items = options.tools.flatMap((tool) => this._mapTool(tool, options.parentMessages, options.defaultTools));\n\n            this.options.items = items;\n\n            return items;\n        },\n\n        _focusIn: function(e) {\n            var target = $(e.target),\n                button = target.closest(DOT + KBUTTON);\n\n            if (button.length > 0) {\n                this._resetTabIndex(button);\n                button.addClass(KFOCUS);\n            }\n        },\n\n        _focusOut: function(e) {\n            this.wrapper.find(DOT + KBUTTON + DOT + KFOCUS).removeClass(KFOCUS);\n        },\n\n        _getAllItems: function() {\n            return this.wrapper.find(DOT + TOOLBAR_TOOL)\n                .filter(\":visible\")\n                .filter((i, el) => {\n                    if (el.style.visibility === HIDDEN) {\n                        return false;\n                    }\n\n                    return true;\n                });\n        },\n\n        _getItem: function(candidate, knownUid) {\n            var uid = knownUid || this._getUid(candidate),\n                buttonsPopups = $(DATA_ROLE_BUTTONMENU),\n                uidSelector, toolbarEl;\n\n            if (!uid) {\n                return {\n                    toolbarEl: this.element.find(candidate),\n                    templateEl: $(NOTHING),\n                    menuItem: this.overflowMenu ? this.overflowMenu.element.find(candidate) : $(NOTHING),\n                    buttonsPopupItem: $(NOTHING)\n                };\n            }\n\n            uidSelector = \"[data-uid=\" + uid + \"]\";\n            toolbarEl = this.element.find(uidSelector);\n\n            return {\n                toolbarEl: toolbarEl,\n                templateEl: toolbarEl.closest(DOT + TEMPLATE_ITEM + COMMA + DOT + SPLIT_BUTTON),\n                component: kendo.widgetInstance(toolbarEl),\n                menuItem: this.overflowMenu ? this.overflowMenu.element.find(uidSelector) : $(NOTHING),\n                buttonsPopupItem: buttonsPopups.find(uidSelector)\n            };\n        },\n\n        _getNextElement: function(item, direction) {\n            var items = this._getAllItems(),\n                itemIndex = items.index(item) === -1 ? items.index(item.parentElement) : items.index(item),\n                focusableItem = items[itemIndex + direction];\n\n            if (!focusableItem) {\n                if (direction === -1) {\n                    focusableItem = items.last();\n                } else {\n                    focusableItem = items.first();\n                }\n            }\n\n            return focusableItem;\n        },\n\n        _getUid: function(candidate) {\n            var element;\n\n            // find toolbar item by jQuery selector\n            element = this.element.find(candidate);\n\n            // if not found find in in the DropDown-/SplitButton popups\n            if (!element.length) {\n                element = $(DATA_ROLE_BUTTONMENU).find(candidate);\n            }\n\n            // if not, find it in the OverflowMenu\n            if (!element.length && this.overflowMenu) {\n                element = this.overflowMenu.element.find(candidate);\n            }\n\n            if (!element.length) {\n                return null;\n            } else {\n                return element.data(UID) || element.closest(DOT + TOOLBAR_TOOL).data(UID);\n            }\n        },\n\n        _groupVisibleButtons: function(el) {\n            var buttons = el.children(),\n                visibleBtns;\n\n            buttons.removeClass(GROUP_END).removeClass(GROUP_START);\n            visibleBtns = buttons.filter(\":not('.\" + STATE_HIDDEN + \"')\");\n            visibleBtns.first().addClass(GROUP_START);\n            visibleBtns.last().addClass(GROUP_END);\n        },\n\n        _hideItem: function(item) {\n            var that = this,\n                widget;\n\n            item.addClass(STATE_HIDDEN);\n\n            if (that.overflowMenu) {\n                if (item.hasClass(SPLIT_BUTTON) || item.hasClass(MENU_BUTTON)) {\n                    if (item.hasClass(SPLIT_BUTTON)) {\n                        item = item.children().eq(0);\n                        widget = item.data(K_SPLIT_BUTTON);\n                    } else {\n                        widget = item.data(K_DROP_DOWN_BUTTON);\n                    }\n\n                    widget.menu.list.children().each((i, el) => {\n                        that._showMenuItem($(el));\n                    });\n\n                    that._showMenuItem(item);\n                } else if (item.hasClass(BUTTON_GROUP)) {\n                    item.children().each((i, el) => {\n                        that._showMenuItem($(el));\n                    });\n                } else {\n                    that._showMenuItem(item);\n                }\n            }\n        },\n\n        _hideMenuItem: function(item) {\n            this.overflowMenu.element\n                .find(\">li[data-uid='\" + item.data(UID) + \"']\")\n                .addClass(STATE_HIDDEN);\n        },\n\n        _items: function() {\n            let options = this.options;\n\n            for (var i = 0; i < options.items.length; i++) {\n                this._add(options.items[i]);\n            }\n        },\n\n        _keydown: function(e) {\n            var target = $(e.target),\n                keyCode = e.keyCode,\n                templateItem = target.closest(DOT + TEMPLATE_ITEM),\n                isOverflowAnchor = target.is(DOT + OVERFLOW_ANCHOR);\n\n            if (!this.options.navigateOnTab && !target.is(\".k-toolbar-tool\") && keyCode === keys.ESC && templateItem.length > 0) {\n                e.stopPropagation();\n                this._keyDeactivateTemplate(templateItem);\n                return;\n            }\n\n            if (!target.hasClass(TOOLBAR_TOOL)) {\n                return;\n            }\n\n            if (!this.options.navigateOnTab && keyCode === keys.ENTER && target.hasClass(TEMPLATE_ITEM)) {\n                this._keyActivateTemplate(target);\n            } else if (isOverflowAnchor && (e.altKey && keyCode === keys.DOWN || keyCode === keys.ENTER || keyCode === keys.SPACEBAR)) {\n                this._keyOpenOverflow(e, keyCode);\n            } else if (keyCode === keys.HOME) {\n                this._keyFocusFirst(target, e);\n            } else if (keyCode === keys.END) {\n                this._keyFocusLast(target, e);\n            } else if (!this.options.navigateOnTab && (keyCode === keys.RIGHT || keyCode === keys.LEFT)) {\n                this._keyFocusNext(keyCode, e);\n            }\n        },\n\n        _keyActivateTemplate: function(target) {\n            var innerFocusable = target.find(KENDO_FOCUSABLE + \":not('\" + DOT + INPUT_BUTTON + \"')\" + COMMA + DOT + DROPDOWNLIST);\n\n            if (innerFocusable.length > 0) {\n                target.attr(TABINDEX, -1);\n\n                innerFocusable.attr(TABINDEX, 0);\n                innerFocusable.first().trigger(FOCUS);\n            }\n        },\n\n        _keyDeactivateTemplate: function(templateItem) {\n            var innerWidget = templateItem.find(DATA_ROLE_SELECTOR),\n                innerFocusable = templateItem.find(KENDO_FOCUSABLE + \":not('\" + DOT + INPUT_BUTTON + \"')\" + COMMA + DOT + DROPDOWNLIST),\n                widgetInstance;\n\n            if (innerWidget.length > 0) {\n                widgetInstance = kendo.widgetInstance(innerWidget);\n\n                if (widgetInstance) {\n                    if (widgetInstance.overflowMenu && widgetInstance.overflowMenu.visible()) {\n                        return;\n                    } else {\n                        templateItem.attr(TABINDEX, 0);\n                        templateItem.trigger(FOCUS);\n                        templateItem.find(KENDO_FOCUSABLE).attr(TABINDEX, -1);\n                    }\n                }\n            }\n\n            if (innerFocusable.length > 0) {\n                templateItem.attr(TABINDEX, 0);\n                templateItem.trigger(FOCUS);\n                innerFocusable.attr(TABINDEX, -1);\n            }\n        },\n\n        _keyFocusFirst: function(target, e) {\n            var items = this._getAllItems();\n\n            if (target.is(DOT + DROPDOWNLIST) || target.is(INPUT)) {\n                return;\n            }\n\n            this._resetTabIndex(items.first());\n            items.first().trigger(FOCUS);\n            e.preventDefault();\n        },\n\n        _keyFocusLast: function(target, e) {\n            var items = this._getAllItems(),\n                last;\n\n            if (target.is(DOT + DROPDOWNLIST) || target.is(INPUT)) {\n                return;\n            }\n\n            last = items.last();\n\n            if (last.width() === 0) {\n                last = items.eq(items.length - 2);\n            }\n\n            this._resetTabIndex(last);\n            last.trigger(FOCUS);\n            e.preventDefault();\n        },\n\n        _keyFocusNext: function(keyCode, e) {\n            var direction = this._isRtl ? -1 : 1,\n                next;\n\n            if (keyCode === keys.LEFT) {\n                direction = -1 * direction;\n            }\n\n            next = $(this._getNextElement(e.target, direction));\n            this._resetTabIndex(next);\n            next.trigger(FOCUS);\n\n            e.preventDefault();\n        },\n\n        _keyOpenOverflow: function(e, keyCode) {\n            if (keyCode === keys.SPACEBAR) {\n                e.preventDefault();\n            }\n\n            this.overflowMenu.open();\n        },\n\n        _mapAttributes: function(toolOptions, messages) {\n            return {\n                \"aria-label\": messages[toolOptions.name || toolOptions.property],\n                \"title\": messages[toolOptions.name || toolOptions.property],\n                \"data-command\": toolOptions.command,\n                \"data-options\": toolOptions.options,\n                \"data-dialog\": toolOptions.dialog,\n                \"data-property\": toolOptions.property,\n                \"data-value\": toolOptions.value,\n                \"data-toggle\": toolOptions.toggleCondition\n            };\n        },\n\n        _mapComponent: function(component, messages) {\n            var that = this,\n                componentOptions = component.componentOptions,\n                componentMessages = componentOptions.messages,\n                componentPlaceholder = componentOptions.placeholder,\n                attributes = $.extend({}, that._mapAttributes(component, messages), component.attributes),\n                options;\n\n            if (component.overflowComponent) {\n                options = component.options || {};\n\n                if (component.componentOptions.dataSource) {\n                    options.options = component.componentOptions.dataSource;\n                }\n                if (component.componentOptions.value) {\n                    options.default = component.componentOptions.value;\n                }\n\n                if (Object.keys(options).length > 0) {\n                    component.overflowComponent.options = JSON.stringify(options);\n                }\n\n                component.overflowComponent = that._mapTool(component.overflowComponent, messages);\n            }\n\n            if (componentMessages) {\n                Object.keys(componentMessages).forEach((key) => {\n                    component.componentOptions.messages[key] = messages[componentMessages[key]] || componentMessages[key];\n                });\n            }\n\n            if (componentPlaceholder) {\n                component.componentOptions.placeholder = messages[componentPlaceholder] || componentPlaceholder;\n            }\n\n            Object.keys(componentOptions).forEach((key) => {\n                if (key === \"commandOn\") {\n                    component.componentOptions[componentOptions[key]] = (ev) => {\n                        that.trigger(CHANGE, { target: ev.target || ev.sender.element });\n                    };\n                }\n            });\n\n            if (componentOptions.dataSource && componentOptions.dataSource.length) {\n                component.componentOptions.dataSource = componentOptions.dataSource.map(i => {\n                    if (i.name && messages[i.name]) {\n                        i.text = messages[i.name];\n                    }\n\n                    return i;\n                });\n            }\n\n            component.attributes = attributes;\n\n            return component;\n        },\n\n        _mapTool: function(tool, messages, defaultTools) {\n            let that = this,\n                isArray = Array.isArray(tool),\n                isPlainObjectTool = $.isPlainObject(tool),\n                toolKeysCount = isPlainObjectTool && Object.keys(tool).length,\n                isBuiltInTool, toolOptions, attributes, originalTool;\n\n            if (isArray) {\n                return {\n                    type: \"buttonGroup\",\n                    buttons: tool.map(t => that._mapTool(t, messages, defaultTools))\n                };\n            }\n\n            isBuiltInTool = isPlainObjectTool && (toolKeysCount === 1 || toolKeysCount === 2) && tool.name;\n            originalTool = isBuiltInTool ? tool : {};\n            tool = isBuiltInTool ? tool.name : tool;\n            toolOptions = $.isPlainObject(tool) ? tool : $.extend({}, defaultTools[tool]);\n\n            attributes = $.extend({}, that._mapAttributes(toolOptions, messages), toolOptions.attributes);\n\n            kendo.deepExtend(toolOptions, {\n                text: originalTool.text || messages[toolOptions.name || toolOptions.property],\n                attributes: attributes,\n            });\n\n            if (toolOptions.type === \"component\") {\n                if (toolOptions.items) {\n                    return toolOptions.items.map(t => that._mapComponent(t, messages));\n                } else {\n                    return that._mapComponent(toolOptions, messages);\n                }\n            } else if (toolOptions.type === \"buttonGroup\") {\n                delete toolOptions.attributes[ARIA_LABEL];\n                toolOptions.buttons = toolOptions.buttons.map(t => that._mapTool(t, messages, defaultTools));\n            } else if (toolOptions.type === \"splitButton\") {\n                delete toolOptions.attributes[ARIA_LABEL];\n                toolOptions.menuButtons = toolOptions.menuButtons.flatMap(t => that._mapTool(t, messages, defaultTools));\n            } else if (toolOptions.type === \"popupButton\" && toolOptions.overflowComponent) {\n                toolOptions.overflowComponent = that._mapTool(toolOptions.overflowComponent, messages);\n            }\n\n            delete toolOptions.name;\n\n            return toolOptions;\n        },\n\n        _menuItemSelect: function(e) {\n            var item = $(e.item),\n                id = item.attr(ID),\n                togglable = item.find(DOT + MENU_LINK_TOGGLE),\n                groupName = item.data(GROUP),\n                shouldSelect, twin, group;\n\n            if (id && id.indexOf(DASH + OVERFLOW) > -1) {\n                id = id.replace(DASH + OVERFLOW, NOTHING);\n            }\n\n            if (togglable.length) {\n                if (groupName) {\n                    this.overflowMenu.element.find(\"[data-group=\" + groupName + \"]\").each((i, el) => {\n                        var current = $(el);\n\n                        current.attr(ARIA_CHECKED, false);\n                        current.find(DOT + MENU_LINK_TOGGLE).removeClass(STATE_SELECTED);\n                    });\n                }\n\n                shouldSelect = groupName ? true : !togglable.hasClass(STATE_SELECTED);\n\n                togglable.toggleClass(STATE_SELECTED, shouldSelect);\n                item.attr(ARIA_CHECKED, shouldSelect);\n\n                twin = this.element.find(\"[data-uid=\" + item.data(UID) + \"]\");\n\n                if (twin.length) {\n                    if (twin.closest(DOT + BUTTON_GROUP).length) {\n                        group = twin.closest(DOT + BUTTON_GROUP).data(K_BUTTON_GROUP);\n                        group.select(twin);\n                    } else {\n                        if (groupName) {\n                            this.element.find(\"[data-group=\" + groupName + \"]\").each((i, el) => {\n                                $(el).data(K_TOGGLE_BUTTON).toggle(false);\n                            });\n                        }\n\n                        twin.data(K_TOGGLE_BUTTON).toggle(true);\n                    }\n                }\n\n                this.trigger(TOGGLE, {\n                    id: item.attr(ID),\n                    target: item,\n                    checked: shouldSelect\n                });\n            } else {\n                this.trigger(CLICK, {\n                    id: id,\n                    target: item,\n                });\n            }\n        },\n\n        _onClick: function(e) {\n            var el = e.target,\n                togglable = el.hasClass(\"k-toolbar-toggle-button\"),\n                group = el.data(GROUP);\n\n            if (!togglable) {\n                this.trigger(CLICK, { id: e.id, target: e.target, originalEvent: e.originalEvent || e.event });\n            }\n\n            if (group && this.element.find(\"[data-group=\" + group + \"]\").length > 1) {\n                if (el.hasClass(STATE_SELECTED)) {\n                    e.preventDefault();\n                }\n            }\n        },\n\n        _onClose: function(e) {\n            if (this.trigger(CLOSE, { widget: e.sender })) {\n                e.preventDefault();\n            }\n        },\n\n        _onMenuItemSelect: function(e, click, toggle) {\n            var item = $(e.item),\n                togglable = item.find(DOT + MENU_LINK_TOGGLE).length > 0,\n                id = item.attr(ID);\n\n            if (id && id.indexOf(DASH + OVERFLOW) > -1) {\n                id = id.replace(DASH + OVERFLOW, NOTHING);\n            }\n\n            if (click) {\n                click.bind(this)({\n                    event: e.event,\n                    id: id,\n                    target: item\n                });\n            }\n\n            if (togglable && toggle) {\n                setTimeout(() => {\n                    toggle.bind(this)({\n                        event: e.event,\n                        id: id,\n                        target: item,\n                        checked: item.find(DOT + STATE_SELECTED).length > 0\n                    });\n                });\n            }\n        },\n\n        _onOpen: function(e) {\n            if (this.trigger(OPEN, { widget: e.sender })) {\n                e.preventDefault();\n            }\n        },\n\n        _onSelect: function(e) {\n            var menuEl = this.overflowMenu ? this.overflowMenu.element : $(NOTHING);\n\n            e.sender.element.children().each((i, el) => {\n                var current = $(el),\n                    uid = current.data(UID),\n                    selected = current.hasClass(STATE_SELECTED);\n\n                menuEl\n                    .find(\"[data-uid=\" + uid + \"]\")\n                    .attr(ARIA_CHECKED, selected)\n                    .find(DOT + MENU_LINK_TOGGLE)\n                    .toggleClass(STATE_SELECTED, selected);\n            });\n\n            this.trigger(TOGGLE, {\n                id: e.target.attr(ID),\n                target: e.target,\n                checked: e.target.hasClass(STATE_SELECTED)\n            });\n        },\n\n        _onToggle: function(e) {\n            var that = this,\n                el = e.target,\n                group = el.data(GROUP),\n                overflowItem,\n                overflowGroup;\n\n            if (that.overflowMenu) {\n                overflowItem = that.overflowMenu.element.find(\"[data-uid=\" + el.attr(DATA_UID) + \"]\");\n                overflowGroup = that.overflowMenu.element.find(\"[data-group=\" + group + \"]\");\n\n                overflowGroup.attr(ARIA_CHECKED, false).find(DOT + MENU_LINK_TOGGLE).removeClass(STATE_SELECTED);\n                overflowItem.attr(ARIA_CHECKED, true).find(DOT + MENU_LINK_TOGGLE).addClass(STATE_SELECTED);\n            }\n\n            if (group) {\n                that.element.find(\"[data-group=\" + group + \"]\").each((i, item) => {\n                    if (item !== el[0]) {\n                        $(item).data(K_TOGGLE_BUTTON).toggle(false);\n                    }\n                });\n            }\n\n            this.trigger(TOGGLE, { id: e.id, target: e.target, checked: e.checked, originalEvent: e.originalEvent || e.event });\n        },\n\n        _processInner(items, parentUid) {\n            var attributes, current;\n\n            for (var i = 0; i < items.length; i++) {\n                current = items[i];\n                attributes = current.attributes;\n\n                if (!attributes) {\n                    items[i].attributes = {};\n                }\n\n                items[i].attributes[DATA_UID] = kendo.guid();\n                items[i].attributes[DATA_PARENTUID] = parentUid;\n\n                if (current.id) {\n                    items[i].attributes[ID] = items[i].id;\n                }\n\n                if (current.hidden) {\n                    if (!items[i].attributes.class) {\n                        items[i].attributes.class = NOTHING;\n                    }\n\n                    items[i].attributes.class += (EMPTY + STATE_HIDDEN + EMPTY + FORCE_HIDDEN);\n                }\n            }\n\n            return items;\n        },\n\n        _processOptions: function(options) {\n            var template = options.template,\n                overflowTemplate = options.overflowTemplate,\n                uid = kendo.guid(),\n                groupName;\n\n            $.extend(options, {\n                uid: uid,\n                rootUid: this.uid\n            });\n\n            if (options.menuButtons) {\n                options.menuButtons = this._processInner(options.menuButtons, uid);\n            } else if (options.buttons && options.buttons.length) {\n                options.buttons = this._processInner(options.buttons, uid);\n\n                if (options.buttons.some(b => b.togglable)) {\n                    groupName = options.buttons[0].group;\n\n                    if (!!groupName && options.buttons.every(b => b.group === groupName)) {\n                        options.selection = SINGLE;\n                    } else {\n                        options.selection = MULTIPLE;\n                    }\n                } else {\n                    options.selection = NONE;\n                }\n            }\n\n            if ((template && !overflowTemplate) || options.type === SPACER) {\n                options.overflow = OVERFLOW_NEVER;\n            } else if (!options.overflow) {\n                options.overflow = OVERFLOW_AUTO;\n            }\n\n            if (options.enable !== undefined$1) {\n                options.enabled = options.enable;\n            }\n\n            return options;\n        },\n\n        _renderOverflow: function() {\n            var that = this,\n                isRtl = that._isRtl,\n                horizontalDirection = isRtl ? \"left\" : \"right\";\n\n            that.overflowAnchor = $(\"<button class='k-toolbar-overflow-button k-toolbar-tool' title='More tools'>\");\n            that.element.append(that.overflowAnchor);\n            that.overflowAnchor.kendoButton({\n                icon: \"more-vertical\",\n                fillMode: \"flat\",\n                size: that.options.size\n            });\n\n            if (!that.options.navigateOnTab) {\n                that.overflowAnchor.attr(TABINDEX, -1);\n            }\n\n            that.overflowMenu = new kendo.ui.ContextMenu($(\"<ul>\"), {\n                size: that.options.size,\n                showOn: \"click tap\",\n                origin: \"bottom \" + horizontalDirection,\n                position: \"top \" + horizontalDirection,\n                alignToAnchor: true,\n                target: that.overflowAnchor,\n                open: function(e) {\n                    if (that.trigger(OVERFLOW_OPEN)) {\n                        e.preventDefault();\n                    }\n                },\n                close: function(e) {\n                    if (that.trigger(OVERFLOW_CLOSE)) {\n                        e.preventDefault();\n                    } else {\n                        that._resetTabIndex(that.overflowAnchor);\n                        that.overflowAnchor.trigger(FOCUS);\n                    }\n                }\n            });\n\n            that.overflowMenu.element.attr(KENDO_UID_ATTR, this.uid);\n\n            setTimeout(() => {\n                that.overflowMenu.bind(SELECT, that._menuItemSelect.bind(that));\n            });\n        },\n\n        _resetOpen: function(element, extensions) {\n            var that = this,\n                uploadWrapper,\n                input;\n\n            element.closest(\".k-upload-button-wrap\").find(\"input\").remove();\n            uploadWrapper = element.wrap(\"<div class='k-upload-button-wrap'></span>\").parent();\n\n            input = $(\"<input type='file' autocomplete='off' accept='\" + extensions + \"'/>\")\n                .attr(\"aria-hidden\", true)\n                .one(\"change\", (e) => {\n                    that.trigger(CHANGE, {\n                        target: element,\n                        value: e.target.files[0]\n                    });\n\n                    that._resetOpen(element, extensions);\n                })\n                .appendTo(uploadWrapper);\n\n            element.off(KEYDOWN).on(KEYDOWN, (e) => {\n                if (e.keyCode === kendo.keys.ENTER) {\n                    input.trigger(CLICK);\n                }\n            });\n        },\n\n        _resetTabIndex: function(toFocus) {\n            if (this.options.navigateOnTab !== true) {\n                this.wrapper.find(KENDO_FOCUSABLE).attr(TABINDEX, -1);\n                toFocus.attr(TABINDEX, 0);\n            }\n        },\n\n        _resizable: function() {\n            var that = this,\n                element = that.element;\n\n            that._renderOverflow();\n            element.addClass(RESIZABLE_TOOLBAR);\n\n            that._resizeHandler = kendo.onResize(function() {\n                that.resize();\n            });\n        },\n\n        _resize: function(e) {\n            var containerWidth = e.width,\n                wrapper = this.element,\n                popupBtnElements = wrapper.find('[data-role=\"splitbutton\"]').add(wrapper.find('[data-role=\"dropdownbutton\"]'));\n\n            if (!this.options.resizable) {\n                return;\n            }\n\n            this.overflowMenu.close();\n\n            if (popupBtnElements.length > 0) {\n                popupBtnElements.each((i, el) => {\n                    kendo.widgetInstance($(el)).close();\n                });\n            }\n\n            this._shrink(containerWidth);\n            this._stretch(containerWidth);\n            this._toggleOverflowAnchor();\n        },\n\n        _shrink: function(containerWidth) {\n            var commandElement,\n                visibleCommands,\n                activeElement;\n\n            if (containerWidth < this._childrenWidth()) {\n                visibleCommands = this.element.children(\":visible:not([data-overflow='never'], .\" + OVERFLOW_ANCHOR + \")\");\n\n                for (var i = visibleCommands.length - 1; i >= 0; i--) {\n                    commandElement = visibleCommands.eq(i);\n\n                    if (containerWidth > this._childrenWidth()) {\n                        break;\n                    } else {\n                        activeElement = commandElement.find(\"[tabindex=0]\") || commandElement.is(\"[tabindex=0]\") ? commandElement : $(NOTHING);\n\n                        if (activeElement.length > 0) {\n                            activeElement.attr(TABINDEX, -1);\n                            this.element.children(DOT + OVERFLOW_ANCHOR).attr(TABINDEX, 0);\n                        }\n\n                        this._hideItem(commandElement);\n                    }\n                }\n            }\n        },\n\n        _showItem: function(item, containerWidth) {\n            var that = this,\n                gap = parseInt(this.element.css('gap'), 10) || 0,\n                widget;\n\n            item.removeClass(STATE_HIDDEN);\n            var itemOuterWidth = outerWidth(item, true) + gap;\n            item.addClass(STATE_HIDDEN);\n\n            if (item.length && (item.hasClass(SPACER_CLASS) || containerWidth > this._childrenWidth() + itemOuterWidth)) {\n                item.removeClass(STATE_HIDDEN);\n\n                if (this.options.navigateOnTab !== true) {\n                    item.find(KENDO_FOCUSABLE).attr(TABINDEX, -1);\n                } else {\n                    if (item.is(\"[tabindex=-1]\")) {\n                        item.removeAttr(TABINDEX);\n                    }\n                }\n\n                if (this.overflowMenu) {\n                    if (item.hasClass(SPLIT_BUTTON) || item.hasClass(MENU_BUTTON)) {\n                        if (item.hasClass(SPLIT_BUTTON)) {\n                            item = item.children().eq(0);\n                            widget = item.data(K_SPLIT_BUTTON);\n                        } else {\n                            widget = item.data(K_DROP_DOWN_BUTTON);\n                        }\n\n                        widget.menu.list.children().each((i, el) => {\n                            that._hideMenuItem($(el));\n                        });\n\n                        that._hideMenuItem(item);\n                    } else if (item.hasClass(BUTTON_GROUP)) {\n                        item.children().each((i, el) => {\n                            that._hideMenuItem($(el));\n                        });\n                    } else {\n                        that._hideMenuItem(item);\n                    }\n                }\n\n                return true;\n            }\n\n            return false;\n        },\n\n        _showMenuItem: function(item) {\n            var menuItem = this.overflowMenu.element.find(\">li[data-uid='\" + item.data(UID) + \"']\");\n\n            if (!menuItem.hasClass(FORCE_HIDDEN)) {\n                menuItem.removeClass(STATE_HIDDEN);\n            }\n        },\n\n        _stretch: function(containerWidth) {\n            var overflowAnchor = this.element.children(DOT + OVERFLOW_ANCHOR),\n                commandElement,\n                hiddenCommands;\n\n            if (containerWidth > this._childrenWidth()) {\n                hiddenCommands = this.element.children(DOT + STATE_HIDDEN + \":not(\" + DOT + FORCE_HIDDEN + \")\");\n\n                for (var i = 0; i < hiddenCommands.length; i++) {\n                    commandElement = hiddenCommands.eq(i);\n\n                    if (containerWidth < this._childrenWidth() || !this._showItem(commandElement, containerWidth)) {\n                        break;\n                    }\n                }\n            }\n\n            if (!this.options.navigateOnTab && overflowAnchor.is(\"[tabindex=0]\")) {\n                overflowAnchor.attr(TABINDEX, -1);\n                this._resetTabIndex(this._getAllItems().first());\n            }\n        },\n\n        _tabIndex: function() {\n            var focusableItems = this.wrapper.find(KENDO_FOCUSABLE + \":not('\" + TABINDEX_MINUS_1 + \"')\"),\n                firstFocusable = focusableItems.first();\n\n            if (this.options.navigateOnTab !== true) {\n                focusableItems.attr(TABINDEX, -1);\n                firstFocusable.attr(TABINDEX, 0);\n            } else {\n                this.wrapper.find(\".k-toolbar-item.k-toolbar-tool\").removeAttr(TABINDEX);\n            }\n        },\n\n        _toggleOverflowAnchor: function() {\n            var hasVisibleChildren = false;\n\n            hasVisibleChildren = this.overflowMenu.element.children(\":not(.\" + STATE_HIDDEN + \", .\" + POPUP + \")\").length > 0;\n\n            if (hasVisibleChildren) {\n                this.overflowAnchor.removeClass(STATE_HIDDEN);\n            } else {\n                this.overflowAnchor.addClass(STATE_HIDDEN);\n            }\n        }\n    });\n\n    kendo.toolbar = {\n        Item: kendo.Class,\n        OverflowButton: kendo.Class,\n        TemplateItem: kendo.Class,\n        ToolBarButton: kendo.Class,\n        registerComponent: () => null\n    };\n\n    kendo.cssProperties.registerPrefix(\"ToolBar\", \"k-toolbar-\");\n\n    kendo.ui.plugin(ToolBar);\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.toolbar.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.tooltip.js":
/*!*********************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.tooltip.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* harmony import */ var _kendo_popup_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.popup.js */ \"./node_modules/kendo-ui-core/esm/kendo.popup.js\");\n/* harmony import */ var _kendo_fx_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kendo.fx.js */ \"./node_modules/kendo-ui-core/esm/kendo.fx.js\");\n/* harmony import */ var _kendo_icons_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./kendo.icons.js */ \"./node_modules/kendo-ui-core/esm/kendo.icons.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\n\n\nvar __meta__ = {\n    id: \"tooltip\",\n    name: \"Tooltip\",\n    category: \"web\",\n    description: \"The Tooltip widget displays a popup hint for a given html element.\",\n    depends: [ \"core\", \"popup\", \"icons\" ],\n    features: [ {\n        id: \"tooltip-fx\",\n        name: \"Animation\",\n        description: \"Support for animation\",\n        depends: [ \"fx\" ]\n    } ]\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        Widget = kendo.ui.Widget,\n        Popup = kendo.ui.Popup,\n        isFunction = kendo.isFunction,\n        isPlainObject = $.isPlainObject,\n        extend = $.extend,\n        DOCUMENT = $(document),\n        isLocalUrl = kendo.isLocalUrl,\n        ARIAIDSUFFIX = \"_tb_active\",\n        DESCRIBEDBY = \"aria-describedby\",\n        SHOW = \"show\",\n        HIDE = \"hide\",\n        ERROR = \"error\",\n        CONTENTLOAD = \"contentLoad\",\n        REQUESTSTART = \"requestStart\",\n        KCONTENTFRAME = \"k-content-frame\",\n        TEMPLATE = ({ autoHide, callout, dir }) =>\n            `<div role=\"tooltip\" class=\"k-tooltip${!autoHide ? ' k-tooltip-closable' : ''}\">` +\n                '<div class=\"k-tooltip-content\"></div>' +\n                (!autoHide ? `<div class=\"k-tooltip-button\">${kendo.ui.icon($('<span title=\"Close\"></span>'), { icon: \"x\" })}</div>` : '') +\n                (callout ? `<div class=\"k-callout k-callout-${dir}\"></div>` : '') +\n            '</div>',\n        IFRAMETEMPLATE = kendo.template(({ content }) =>\n            `<iframe frameborder='0' class='${KCONTENTFRAME}' src='${content.url}'>` +\n                \"This page requires frames in order to show content\" +\n            \"</iframe>\"\n        ),\n        NS = \".kendoTooltip\",\n        POSITIONS = {\n            bottom: {\n                origin: \"bottom center\",\n                position: \"top center\"\n            },\n            top: {\n                origin: \"top center\",\n                position: \"bottom center\"\n            },\n            left: {\n                origin: \"center left\",\n                position: \"center right\",\n                collision: \"fit flip\"\n            },\n            right: {\n                origin: \"center right\",\n                position: \"center left\",\n                collision: \"fit flip\"\n            },\n            center: {\n                position: \"center center\",\n                origin: \"center center\"\n            }\n        },\n        REVERSE = {\n            \"top\": \"bottom\",\n            \"bottom\": \"top\",\n            \"left\": \"right\",\n            \"right\": \"left\",\n            \"center\": \"center\"\n        },\n        DIRCLASSES = {\n            bottom: \"n\",\n            top: \"s\",\n            left: \"e\",\n            right: \"w\",\n            center: \"n\"\n        },\n        DIMENSIONS = {\n            \"horizontal\": { offset: \"top\", size: \"outerHeight\" },\n            \"vertical\": { offset: \"left\", size: \"outerWidth\" }\n        },\n        DEFAULTCONTENT = function(e) {\n            return e.target.data(kendo.ns + \"title\");\n        };\n\n    function restoreTitle(element) {\n        while (element.length) {\n            if (restoreTitleAttributeForElement(element)) {\n                break;\n            }\n            element = element.parent();\n        }\n    }\n\n    function restoreTitleAttributeForElement(element) {\n        var title = element.data(kendo.ns + \"title\");\n        if (title) {\n            element.attr(\"title\", title);\n            element.removeData(kendo.ns + \"title\");\n            return true;\n        }\n    }\n\n    function saveTitleAttributeForElement(element) {\n        var title = element.attr(\"title\");\n        if (title) {\n            element.data(kendo.ns + \"title\", title);\n            element.attr(\"title\", \"\");\n            return true;\n        }\n    }\n\n    function saveTitleAttributes(element) {\n        while (element.length && !element.is(\"body\")) {\n            if (saveTitleAttributeForElement(element)) {\n                break;\n            }\n            element = element.parent();\n        }\n    }\n\n    var TooltipBase = Widget.extend({\n        init: function(element, options) {\n            var that = this,\n                axis;\n\n            Widget.fn.init.call(that, element, options);\n\n            axis = that.options.position.match(/left|right/) ? \"horizontal\" : \"vertical\";\n\n            that.dimensions = DIMENSIONS[axis];\n\n            if (kendo.support.touch && this._isShownOnMouseEnter()) {\n                that.element.on(kendo.support.mousedown + NS, that.options.filter, that._showOn.bind(that));\n            }\n\n            that.element.on(that.options.showOn + NS, that.options.filter, that._showOn.bind(that));\n\n            if (that.options.showOn === \"click\") {\n                that.element.on(\"keydown\" + NS, that.options.filter, that._keydown.bind(that));\n            }\n        },\n\n        options: {\n            name: \"TooltipBase\",\n            filter: \"\",\n            offset: 0,\n            showAfter: 100,\n            hideAfter: 100,\n            callout: true,\n            position: \"bottom\",\n            showOn: \"mouseenter\",\n            animation: {\n                open: {\n                    effects: \"fade:in\",\n                    duration: 0\n                },\n                close: {\n                    duration: 40,\n                    hide: true\n                }\n            }\n        },\n\n        destroy: function() {\n            var popup = this.popup;\n\n            if (popup) {\n                popup.element.off(NS);\n                popup.destroy();\n            }\n\n            clearTimeout(this.timeout);\n\n            Widget.fn.destroy.call(this);\n        },\n\n        hide: function() {\n            if (this.popup) {\n                this.popup.close();\n            }\n        },\n\n        show: function(target) {\n            target = target || this.element;\n\n            this._saveTitle(target);\n            this._show(target);\n        },\n\n        target: function() {\n            if (this.popup) {\n                return this.popup.options.anchor;\n            }\n            return null;\n        },\n\n        _keydown: function(e) {\n            var currentTarget = $(e.currentTarget);\n\n            if (e.keyCode == kendo.keys.ENTER) {\n                this._show(currentTarget);\n            }\n        },\n\n        _showOn: function(e) {\n            const that = this;\n            const currentTarget = $(e.currentTarget);\n\n            if (that._isShownOnClick() && !that._isShownOnMouseEnter()) {\n                that._show(currentTarget);\n            } else if (that._isShownOnFocus()) {\n                that._saveTitle(currentTarget);\n                that._show(currentTarget);\n            } else {\n                clearTimeout(that.timeout);\n\n                that.timeout = setTimeout(function() {\n                    that._show(currentTarget);\n                }, that.options.showAfter);\n            }\n        },\n\n        _isShownOnFocus: function() {\n            return this.options.showOn && this.options.showOn.match(/focus/);\n        },\n\n        _isShownOnMouseEnter: function() {\n            return this.options.showOn && this.options.showOn.match(/mouseenter/);\n        },\n\n        _isShownOnClick: function() {\n            return this.options.showOn && this.options.showOn.match(/click/);\n        },\n\n        _recalculatePopupDimensions: function() {\n            var that = this;\n            that.popup.wrapper.css(\"height\", kendo._outerHeight(that.popup.element) + \"px\");\n            that.popup.wrapper.css(\"width\", kendo._outerWidth(that.popup.element) + \"px\");\n            that.popup.position();\n            that._positionCallout();\n        },\n\n        _positionCallout: function() {\n            var that = this,\n                position = that.options.position,\n                dimensions = that.dimensions,\n                offset = dimensions.offset,\n                popup = that.popup,\n                anchor = popup.options.anchor,\n                anchorOffset = $(anchor).offset(),\n                elementOffset = $(popup.element).offset(),\n                cssClass = DIRCLASSES[popup.flipped ? REVERSE[position] : position],\n                offsetAmount = anchorOffset[offset] - elementOffset[offset] + ($(anchor)[dimensions.size]() / 2);\n\n            that._offset(position, that.options.offset);\n\n            that.arrow\n               .removeClass(\"k-callout-n k-callout-s k-callout-w k-callout-e\")\n               .addClass(\"k-callout-\" + cssClass)\n               .css(offset, offsetAmount);\n        },\n\n        _offset: function(position, offsetAmount, arrowWidth) {\n            var that = this,\n                isTopLeft = position == \"top\" || position == \"left\",\n                isFlipped = that.popup.flipped,\n                direction = (isTopLeft && isFlipped) || (!isTopLeft && !isFlipped) ? 1 : -1,\n                marginRule = isTopLeft ? \"margin-\" + position : \"margin-\" + REVERSE[position],\n                offset = ((arrowWidth || kendo._outerWidth(that.arrow)) / 2) + offsetAmount;\n\n            that.popup.wrapper.css(marginRule, offset * direction + \"px\");\n        },\n\n        _addDescribedBy: function() {\n            var that = this,\n                anchor = that.popup.options.anchor,\n                ariaId = anchor[0].id || that.element[0].id || kendo.guid(),\n                describedBy = [];\n\n            if (anchor.attr(DESCRIBEDBY)) {\n                describedBy.push(anchor.attr(DESCRIBEDBY));\n            }\n\n            if (ariaId) {\n                describedBy.push(ariaId + ARIAIDSUFFIX);\n                anchor.attr(DESCRIBEDBY, describedBy.join(\" \"));\n                that.popup.element.attr(\"id\", ariaId + ARIAIDSUFFIX);\n            }\n\n        },\n\n        _removeDescribedBy: function(target) {\n            var tooltipId = this.popup.element.attr(\"id\"),\n                currentDescribedBy = target.attr(DESCRIBEDBY),\n                arrayAttr, finalArray, finalDescribedbyAttr;\n\n            if (!currentDescribedBy) {\n                return;\n            }\n\n            arrayAttr = currentDescribedBy.split(\" \");\n\n            if (arrayAttr && arrayAttr.length > 0) {\n                finalArray = arrayAttr.filter(function(val) {\n                    return val !== tooltipId;\n                });\n            }\n\n            if (finalArray && finalArray.length > 0) {\n                finalDescribedbyAttr = finalArray.join(\" \");\n                target.attr(DESCRIBEDBY, finalDescribedbyAttr);\n            } else {\n                target.removeAttr(DESCRIBEDBY);\n            }\n        },\n\n        _openPopup: function() {\n            if (!this.popup) {\n                return;\n            }\n            if (!this.popup.visible()) {\n                this.popup._hovered = true;\n            }\n            this.popup._shouldCorrectWidth = false;\n            this.popup.open();\n        }\n    });\n    kendo.ui.plugin(TooltipBase);\n\n    var Tooltip = TooltipBase.extend({\n        init: function(element, options) {\n            var that = this,\n                axis;\n\n            TooltipBase.fn.init.call(that, element, options);\n\n            axis = that.options.position.match(/left|right/) ? \"horizontal\" : \"vertical\";\n\n            that.dimensions = DIMENSIONS[axis];\n\n            that._documentKeyDownHandler = that._documentKeyDown.bind(that);\n\n            if (this._isShownOnMouseEnter() || this._isShownOnClick()) {\n                that.element.on(\"mouseenter\" + NS, that.options.filter, that._mouseenter.bind(that));\n            }\n\n            if (this.options.autoHide && this._isShownOnMouseEnter()) {\n                that.element.on(\"mouseleave\" + NS, that.options.filter, that._mouseleave.bind(that));\n            }\n\n            if (this.options.autoHide && this._isShownOnFocus()) {\n                that.element.on(\"blur\" + NS, that.options.filter, that._blur.bind(that));\n            }\n\n            if (kendo.support.touch) {\n                that.element.on(kendo.support.mousedown + NS, that.options.filter, that._mouseenter.bind(that));\n            }\n        },\n\n        options: {\n            name: \"Tooltip\",\n            filter: \"\",\n            content: DEFAULTCONTENT,\n            showAfter: 100,\n            callout: true,\n            offset: 0,\n            position: \"bottom\",\n            showOn: \"mouseenter\",\n            autoHide: true,\n            width: null,\n            height: null,\n            animation: {\n                open: {\n                    effects: \"fade:in\",\n                    duration: 0\n                },\n                close: {\n                    duration: 40,\n                    hide: true\n                }\n            }\n        },\n\n        events: [ SHOW, HIDE, CONTENTLOAD, ERROR, REQUESTSTART ],\n\n        _mouseenter: function(e) {\n            saveTitleAttributes($(e.currentTarget));\n        },\n\n        _saveTitle: function(target) {\n            saveTitleAttributes(target);\n        },\n\n        _appendContent: function(target) {\n            var that = this,\n                contentOptions = that.options.content,\n                element = that.content,\n                showIframe = that.options.iframe,\n                iframe;\n\n            if (isPlainObject(contentOptions) && contentOptions.url) {\n                if (!(\"iframe\" in that.options)) {\n                    showIframe = !isLocalUrl(contentOptions.url);\n                }\n\n                that.trigger(REQUESTSTART, { options: contentOptions, target: target });\n\n                if (!showIframe) {\n                    element.empty();\n                    kendo.ui.progress(element, true);\n\n                    // perform AJAX request\n                    that._ajaxRequest(contentOptions);\n                } else {\n                    element.hide();\n\n                    iframe = element.find(\".\" + KCONTENTFRAME)[0];\n\n                    if (iframe) {\n                        // refresh existing iframe\n                        iframe.src = contentOptions.url || iframe.src;\n                    } else {\n                        element.html(IFRAMETEMPLATE({ content: contentOptions }));\n                    }\n\n                    element.find(\".\" + KCONTENTFRAME)\n                        .off(\"load\" + NS)\n                        .on(\"load\" + NS, function() {\n                            that.trigger(CONTENTLOAD);\n                            element.show();\n                        });\n                }\n            } else if (contentOptions && isFunction(contentOptions)) {\n                contentOptions = contentOptions({ sender: this, target: target });\n                element.html(contentOptions || \"\");\n            } else {\n                element.html(contentOptions);\n            }\n        },\n\n        _verifyContentLoaded() {\n            var that = this,\n                content = that.content,\n                resources = content.find('[src]'),\n                length = resources.length,\n                loaded = 0;\n\n                if (length === 0) {\n                    that._recalculatePopupDimensions();\n                    return;\n                }\n\n                resources.on('load', function() {\n                    loaded++;\n\n                  if (length === loaded) {\n                    that._recalculatePopupDimensions();\n                  }\n                });\n        },\n\n        _ajaxRequest: function(options) {\n            var that = this,\n                successFn = function(data) {\n                    kendo.ui.progress(that.content, false);\n\n                    that.content.html(data);\n\n                    that._verifyContentLoaded();\n\n                    that.trigger(CONTENTLOAD);\n                };\n\n            jQuery.ajax(extend({\n                type: \"GET\",\n                dataType: \"html\",\n                cache: false,\n                error: function(xhr, status) {\n                    kendo.ui.progress(that.content, false);\n\n                    that._recalculatePopupDimensions();\n\n                    that.trigger(ERROR, { status: status, xhr: xhr });\n                },\n                success: successFn.bind(that)\n            }, options));\n        },\n\n        _documentKeyDown: function(e) {\n            if (e.keyCode === kendo.keys.ESC) {\n                this.hide();\n            }\n        },\n\n        refresh: function() {\n            var that = this,\n                popup = that.popup;\n\n            if (popup && popup.options.anchor) {\n                that._appendContent(popup.options.anchor);\n            }\n        },\n\n        _show: function(target) {\n            var that = this,\n                current = that.target();\n            let shouldBindPopup = false;\n\n            if (!that.popup) {\n                that._initPopup();\n                shouldBindPopup = true;\n            }\n\n            if (current && current[0] != target[0]) {\n                that.popup.close(true);\n                that.popup.element.kendoStop(true, true);// animation can be too long to hide the element before it is shown again\n            }\n\n            if (!current || current[0] != target[0]) {\n                that._appendContent(target);\n                that.popup.options.anchor = target;\n            }\n\n            that.popup.one(\"deactivate\", function() {\n                restoreTitle(target);\n\n                that._removeDescribedBy(target);\n\n                this.element\n                    .removeAttr(\"id\")\n                    .attr(\"aria-hidden\", true);\n\n                DOCUMENT.off(\"keydown\" + NS, that._documentKeyDownHandler);\n            });\n\n            that._openPopup();\n\n            if (shouldBindPopup) {\n                if (that.options.autoHide && this._isShownOnMouseEnter()) {\n                    that.popup.wrapper.on(\"mouseleave\" + NS, that._mouseleave.bind(that));\n                } else {\n                    that.popup.element.on(\"click\" + NS, \".k-tooltip-button\", that._closeButtonClick.bind(that));\n                }\n                shouldBindPopup = false;\n            }\n        },\n\n        _initPopup: function() {\n            var that = this,\n                options = that.options,\n                wrapper = $(kendo.template(TEMPLATE)({\n                    callout: options.callout && options.position !== \"center\",\n                    dir: DIRCLASSES[options.position],\n                    autoHide: options.autoHide\n                }));\n\n            that.popup = new Popup(wrapper, extend({\n                autosize: true,\n                activate: function() {\n                    that._addDescribedBy();\n\n                    if (options.callout) {\n                        that._positionCallout();\n                    } else {\n                        that._offset(that.options.position, that.options.offset);\n                    }\n\n                    this.element.removeAttr(\"aria-hidden\");\n\n                    DOCUMENT.on(\"keydown\" + NS, that._documentKeyDownHandler);\n\n                    that.trigger(SHOW);\n                    that.popup._hovered = undefined$1;\n                },\n                close: function() {\n                    that.trigger(HIDE);\n                },\n                copyAnchorStyles: false,\n                animation: options.animation\n            }, POSITIONS[options.position]));\n\n            wrapper.css({\n                width: options.width,\n                height: options.height\n            });\n\n            that.content = wrapper.find(\".k-tooltip-content\");\n            that.arrow = wrapper.find(\".k-callout\");\n        },\n\n        _closeButtonClick: function(e) {\n            e.preventDefault();\n            this.hide();\n        },\n\n        _mouseleave: function(e) {\n            const that = this;\n            const fromTooltip = $(e.relatedTarget).closest('.k-animation-container').length > 0;\n            let closeOnRelatedTarget = !$(e.relatedTarget).is(that.element);\n\n            if (that.options.filter) {\n                if (closeOnRelatedTarget) {\n                    closeOnRelatedTarget = !that.element.find(e.relatedTarget).length > 0;\n                } else {\n                    closeOnRelatedTarget = !closeOnRelatedTarget;\n                }\n            }\n\n            const shouldClose = that.options.position === \"center\" ? (closeOnRelatedTarget && !fromTooltip) : true;\n            clearTimeout(that.timeout);\n            if (shouldClose) {\n                that.timeout = setTimeout(function() {\n                        that._closePopup(e.currentTarget);\n                }, that.options.hideAfter);\n            }\n        },\n\n        _blur: function(e) {\n            this._closePopup(e.currentTarget);\n        },\n\n        _closePopup: function(target) {\n            if (this.popup && !this.popup._hovered) {\n                this.popup.close();\n            } else {\n                restoreTitle($(target));\n            }\n        },\n\n        destroy: function() {\n            this.element.off(NS);\n\n            DOCUMENT.off(\"keydown\" + NS, this._documentKeyDownHandler);\n\n            TooltipBase.fn.destroy.call(this);\n        }\n    });\n\n    kendo.ui.plugin(Tooltip);\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.tooltip.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.touch.js":
/*!*******************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.touch.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* harmony import */ var _kendo_userevents_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.userevents.js */ \"./node_modules/kendo-ui-core/esm/kendo.userevents.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\nvar __meta__ = {\n    id: \"touch\",\n    name: \"Touch\",\n    category: \"mobile\",\n    description: \"The kendo Touch widget provides a cross-platform compatible API for handling user-initiated touch events, multi-touch gestures and event sequences (drag, swipe, etc.). \",\n    depends: [ \"core\", \"userevents\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        Widget = kendo.ui.Widget,\n        abs = Math.abs,\n        MAX_DOUBLE_TAP_DISTANCE = 20;\n\n    var Touch = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n            options = that.options;\n\n            element = that.element;\n            that.wrapper = element;\n\n            function eventProxy(name) {\n                return function(e) {\n                    that._triggerTouch(name, e);\n                };\n            }\n\n            function gestureEventProxy(name) {\n                return function(e) {\n                    that.trigger(name, { touches: e.touches, distance: e.distance, center: e.center, event: e.event });\n                };\n            }\n\n            that.events = new kendo.UserEvents(element, {\n                filter: options.filter,\n                surface: options.surface,\n                minHold: options.minHold,\n                multiTouch: options.multiTouch,\n                allowSelection: true,\n                fastTap: options.fastTap,\n                press: eventProxy(\"touchstart\"),\n                hold: eventProxy(\"hold\"),\n                tap: that._tap.bind(that),\n                gesturestart: gestureEventProxy(\"gesturestart\"),\n                gesturechange: gestureEventProxy(\"gesturechange\"),\n                gestureend: gestureEventProxy(\"gestureend\")\n            });\n\n            if (options.enableSwipe) {\n                that.events.bind(\"start\", that._swipestart.bind(that));\n                that.events.bind(\"move\", that._swipemove.bind(that));\n            } else {\n                that.events.bind(\"start\", that._dragstart.bind(that));\n                that.events.bind(\"move\", eventProxy(\"drag\"));\n                that.events.bind(\"end\", eventProxy(\"dragend\"));\n            }\n\n            kendo.notify(that);\n        },\n\n        events: [\n            \"touchstart\",\n            \"dragstart\",\n            \"drag\",\n            \"dragend\",\n            \"tap\",\n            \"doubletap\",\n            \"hold\",\n            \"swipe\",\n            \"gesturestart\",\n            \"gesturechange\",\n            \"gestureend\"\n        ],\n\n        options: {\n            name: \"Touch\",\n            surface: null,\n            global: false,\n            fastTap: false,\n            filter: null,\n            multiTouch: false,\n            enableSwipe: false,\n            minXDelta: 30,\n            maxYDelta: 20,\n            maxDuration: 1000,\n            minHold: 800,\n            doubleTapTimeout: 800\n        },\n\n        cancel: function() {\n            this.events.cancel();\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            this.events.destroy();\n        },\n\n        _triggerTouch: function(type, e) {\n            if (this.trigger(type, { touch: e.touch, event: e.event })) {\n                e.preventDefault();\n            }\n        },\n\n        _tap: function(e) {\n            var that = this,\n                lastTap = that.lastTap,\n                touch = e.touch;\n\n            if (lastTap &&\n                (touch.endTime - lastTap.endTime < that.options.doubleTapTimeout) &&\n                kendo.touchDelta(touch, lastTap).distance < MAX_DOUBLE_TAP_DISTANCE\n                ) {\n\n               that._triggerTouch(\"doubletap\", e);\n               that.lastTap = null;\n            } else {\n                that._triggerTouch(\"tap\", e);\n                that.lastTap = touch;\n            }\n        },\n\n        _dragstart: function(e) {\n            this._triggerTouch(\"dragstart\", e);\n        },\n\n        _swipestart: function(e) {\n            if (abs(e.x.velocity) * 2 >= abs(e.y.velocity)) {\n                e.sender.capture();\n            }\n        },\n\n        _swipemove: function(e) {\n            var that = this,\n                options = that.options,\n                touch = e.touch,\n                duration = e.event.timeStamp - touch.startTime,\n                direction = touch.x.initialDelta > 0 ? \"right\" : \"left\";\n\n            if (\n                abs(touch.x.initialDelta) >= options.minXDelta &&\n                abs(touch.y.initialDelta) < options.maxYDelta &&\n                duration < options.maxDuration\n                )\n            {\n                that.trigger(\"swipe\", {\n                    direction: direction,\n                    touch: e.touch\n                });\n\n                touch.cancel();\n            }\n        }\n    });\n\n    kendo.ui.plugin(Touch);\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.touch.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.ui.core.js":
/*!*********************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.ui.core.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_router_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.router.js */ \"./node_modules/kendo-ui-core/esm/kendo.router.js\");\n/* harmony import */ var _kendo_touch_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.touch.js */ \"./node_modules/kendo-ui-core/esm/kendo.touch.js\");\n/* harmony import */ var _kendo_view_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kendo.view.js */ \"./node_modules/kendo-ui-core/esm/kendo.view.js\");\n/* harmony import */ var _kendo_floatinglabel_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./kendo.floatinglabel.js */ \"./node_modules/kendo-ui-core/esm/kendo.floatinglabel.js\");\n/* harmony import */ var _kendo_label_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./kendo.label.js */ \"./node_modules/kendo-ui-core/esm/kendo.label.js\");\n/* harmony import */ var _kendo_fx_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./kendo.fx.js */ \"./node_modules/kendo-ui-core/esm/kendo.fx.js\");\n/* harmony import */ var _kendo_data_odata_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./kendo.data.odata.js */ \"./node_modules/kendo-ui-core/esm/kendo.data.odata.js\");\n/* harmony import */ var _kendo_data_xml_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./kendo.data.xml.js */ \"./node_modules/kendo-ui-core/esm/kendo.data.xml.js\");\n/* harmony import */ var _kendo_data_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./kendo.data.js */ \"./node_modules/kendo-ui-core/esm/kendo.data.js\");\n/* harmony import */ var _kendo_data_signalr_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./kendo.data.signalr.js */ \"./node_modules/kendo-ui-core/esm/kendo.data.signalr.js\");\n/* harmony import */ var _kendo_binder_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./kendo.binder.js */ \"./node_modules/kendo-ui-core/esm/kendo.binder.js\");\n/* harmony import */ var _kendo_validator_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./kendo.validator.js */ \"./node_modules/kendo-ui-core/esm/kendo.validator.js\");\n/* harmony import */ var _kendo_userevents_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./kendo.userevents.js */ \"./node_modules/kendo-ui-core/esm/kendo.userevents.js\");\n/* harmony import */ var _kendo_draganddrop_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./kendo.draganddrop.js */ \"./node_modules/kendo-ui-core/esm/kendo.draganddrop.js\");\n/* harmony import */ var _kendo_mobile_scroller_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./kendo.mobile.scroller.js */ \"./node_modules/kendo-ui-core/esm/kendo.mobile.scroller.js\");\n/* harmony import */ var _kendo_resizable_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./kendo.resizable.js */ \"./node_modules/kendo-ui-core/esm/kendo.resizable.js\");\n/* harmony import */ var _kendo_sortable_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./kendo.sortable.js */ \"./node_modules/kendo-ui-core/esm/kendo.sortable.js\");\n/* harmony import */ var _kendo_selectable_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./kendo.selectable.js */ \"./node_modules/kendo-ui-core/esm/kendo.selectable.js\");\n/* harmony import */ var _kendo_badge_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./kendo.badge.js */ \"./node_modules/kendo-ui-core/esm/kendo.badge.js\");\n/* harmony import */ var _kendo_button_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./kendo.button.js */ \"./node_modules/kendo-ui-core/esm/kendo.button.js\");\n/* harmony import */ var _kendo_buttongroup_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./kendo.buttongroup.js */ \"./node_modules/kendo-ui-core/esm/kendo.buttongroup.js\");\n/* harmony import */ var _kendo_bottomnavigation_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./kendo.bottomnavigation.js */ \"./node_modules/kendo-ui-core/esm/kendo.bottomnavigation.js\");\n/* harmony import */ var _kendo_pager_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./kendo.pager.js */ \"./node_modules/kendo-ui-core/esm/kendo.pager.js\");\n/* harmony import */ var _kendo_popup_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./kendo.popup.js */ \"./node_modules/kendo-ui-core/esm/kendo.popup.js\");\n/* harmony import */ var _kendo_actionsheet_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./kendo.actionsheet.js */ \"./node_modules/kendo-ui-core/esm/kendo.actionsheet.js\");\n/* harmony import */ var _kendo_notification_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./kendo.notification.js */ \"./node_modules/kendo-ui-core/esm/kendo.notification.js\");\n/* harmony import */ var _kendo_tooltip_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./kendo.tooltip.js */ \"./node_modules/kendo-ui-core/esm/kendo.tooltip.js\");\n/* harmony import */ var _kendo_splitbutton_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./kendo.splitbutton.js */ \"./node_modules/kendo-ui-core/esm/kendo.splitbutton.js\");\n/* harmony import */ var _kendo_dropdownbutton_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./kendo.dropdownbutton.js */ \"./node_modules/kendo-ui-core/esm/kendo.dropdownbutton.js\");\n/* harmony import */ var _kendo_toolbar_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./kendo.toolbar.js */ \"./node_modules/kendo-ui-core/esm/kendo.toolbar.js\");\n/* harmony import */ var _kendo_list_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./kendo.list.js */ \"./node_modules/kendo-ui-core/esm/kendo.list.js\");\n/* harmony import */ var _kendo_calendar_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./kendo.calendar.js */ \"./node_modules/kendo-ui-core/esm/kendo.calendar.js\");\n/* harmony import */ var _kendo_dateinput_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./kendo.dateinput.js */ \"./node_modules/kendo-ui-core/esm/kendo.dateinput.js\");\n/* harmony import */ var _kendo_datepicker_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./kendo.datepicker.js */ \"./node_modules/kendo-ui-core/esm/kendo.datepicker.js\");\n/* harmony import */ var _kendo_autocomplete_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./kendo.autocomplete.js */ \"./node_modules/kendo-ui-core/esm/kendo.autocomplete.js\");\n/* harmony import */ var _kendo_dropdownlist_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./kendo.dropdownlist.js */ \"./node_modules/kendo-ui-core/esm/kendo.dropdownlist.js\");\n/* harmony import */ var _kendo_combobox_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./kendo.combobox.js */ \"./node_modules/kendo-ui-core/esm/kendo.combobox.js\");\n/* harmony import */ var _kendo_multiselect_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./kendo.multiselect.js */ \"./node_modules/kendo-ui-core/esm/kendo.multiselect.js\");\n/* harmony import */ var _kendo_colorpicker_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./kendo.colorpicker.js */ \"./node_modules/kendo-ui-core/esm/kendo.colorpicker.js\");\n/* harmony import */ var _kendo_listview_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./kendo.listview.js */ \"./node_modules/kendo-ui-core/esm/kendo.listview.js\");\n/* harmony import */ var _kendo_listbox_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./kendo.listbox.js */ \"./node_modules/kendo-ui-core/esm/kendo.listbox.js\");\n/* harmony import */ var _kendo_loader_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./kendo.loader.js */ \"./node_modules/kendo-ui-core/esm/kendo.loader.js\");\n/* harmony import */ var _kendo_textbox_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./kendo.textbox.js */ \"./node_modules/kendo-ui-core/esm/kendo.textbox.js\");\n/* harmony import */ var _kendo_textarea_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./kendo.textarea.js */ \"./node_modules/kendo-ui-core/esm/kendo.textarea.js\");\n/* harmony import */ var _kendo_numerictextbox_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./kendo.numerictextbox.js */ \"./node_modules/kendo-ui-core/esm/kendo.numerictextbox.js\");\n/* harmony import */ var _kendo_maskedtextbox_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./kendo.maskedtextbox.js */ \"./node_modules/kendo-ui-core/esm/kendo.maskedtextbox.js\");\n/* harmony import */ var _kendo_menu_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./kendo.menu.js */ \"./node_modules/kendo-ui-core/esm/kendo.menu.js\");\n/* harmony import */ var _kendo_editable_js__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./kendo.editable.js */ \"./node_modules/kendo-ui-core/esm/kendo.editable.js\");\n/* harmony import */ var _kendo_panelbar_js__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./kendo.panelbar.js */ \"./node_modules/kendo-ui-core/esm/kendo.panelbar.js\");\n/* harmony import */ var _kendo_progressbar_js__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./kendo.progressbar.js */ \"./node_modules/kendo-ui-core/esm/kendo.progressbar.js\");\n/* harmony import */ var _kendo_responsivepanel_js__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./kendo.responsivepanel.js */ \"./node_modules/kendo-ui-core/esm/kendo.responsivepanel.js\");\n/* harmony import */ var _kendo_tabstrip_js__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./kendo.tabstrip.js */ \"./node_modules/kendo-ui-core/esm/kendo.tabstrip.js\");\n/* harmony import */ var _kendo_timepicker_js__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./kendo.timepicker.js */ \"./node_modules/kendo-ui-core/esm/kendo.timepicker.js\");\n/* harmony import */ var _kendo_datetimepicker_js__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./kendo.datetimepicker.js */ \"./node_modules/kendo-ui-core/esm/kendo.datetimepicker.js\");\n/* harmony import */ var _kendo_slider_js__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./kendo.slider.js */ \"./node_modules/kendo-ui-core/esm/kendo.slider.js\");\n/* harmony import */ var _kendo_splitter_js__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./kendo.splitter.js */ \"./node_modules/kendo-ui-core/esm/kendo.splitter.js\");\n/* harmony import */ var _kendo_dialog_js__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./kendo.dialog.js */ \"./node_modules/kendo-ui-core/esm/kendo.dialog.js\");\n/* harmony import */ var _kendo_window_js__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./kendo.window.js */ \"./node_modules/kendo-ui-core/esm/kendo.window.js\");\n/* harmony import */ var _kendo_virtuallist_js__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./kendo.virtuallist.js */ \"./node_modules/kendo-ui-core/esm/kendo.virtuallist.js\");\n/* harmony import */ var _kendo_togglebutton_js__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./kendo.togglebutton.js */ \"./node_modules/kendo-ui-core/esm/kendo.togglebutton.js\");\n/* harmony import */ var _kendo_icons_js__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./kendo.icons.js */ \"./node_modules/kendo-ui-core/esm/kendo.icons.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// The current file development is no longer in active phase but the code will be kept as is.\n    \"bundle all\";\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.ui.core.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.userevents.js":
/*!************************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.userevents.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\nvar __meta__ = {\n    id: \"userevents\",\n    name: \"User Events\",\n    category: \"framework\",\n    depends: [ \"core\" ],\n    hidden: true\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        support = kendo.support,\n        Class = kendo.Class,\n        Observable = kendo.Observable,\n        now = Date.now,\n        extend = $.extend,\n        OS = support.mobileOS,\n        invalidZeroEvents = OS && OS.android,\n        DEFAULT_MIN_HOLD = 800,\n        CLICK_DELAY = 300,\n        DEFAULT_THRESHOLD = support.browser.msie ? 5 : 0, // WP8 and W8 are very sensitive and always report move.\n\n        // UserEvents events\n        PRESS = \"press\",\n        HOLD = \"hold\",\n        SELECT = \"select\",\n        START = \"start\",\n        MOVE = \"move\",\n        END = \"end\",\n        CANCEL = \"cancel\",\n        TAP = \"tap\",\n        DOUBLETAP = \"doubleTap\",\n        RELEASE = \"release\",\n        GESTURESTART = \"gesturestart\",\n        GESTURECHANGE = \"gesturechange\",\n        GESTUREEND = \"gestureend\",\n        GESTURETAP = \"gesturetap\";\n\n    var THRESHOLD = {\n        \"api\": 0,\n        \"touch\": 0,\n        \"mouse\": 9,\n        \"pointer\": 9\n    };\n\n    var ENABLE_GLOBAL_SURFACE = (!support.touch || support.mouseAndTouchPresent);\n\n    function touchDelta(touch1, touch2) {\n        var x1 = touch1.x.location,\n            y1 = touch1.y.location,\n            x2 = touch2.x.location,\n            y2 = touch2.y.location,\n            dx = x1 - x2,\n            dy = y1 - y2;\n\n        return {\n            center: {\n               x: (x1 + x2) / 2,\n               y: (y1 + y2) / 2\n            },\n\n            distance: Math.sqrt(dx * dx + dy * dy)\n        };\n    }\n\n    function getTouches(e) {\n        var touches = [],\n            originalEvent = e.originalEvent,\n            currentTarget = e.currentTarget,\n            idx = 0, length,\n            changedTouches,\n            touch;\n\n        if (e.api) {\n            touches.push({\n                id: 2, // hardcoded ID for API call;\n                event: e,\n                target: e.target,\n                currentTarget: e.target,\n                location: e,\n                type: \"api\"\n            });\n        }\n        else if (e.type.match(/touch/)) {\n            changedTouches = originalEvent ? originalEvent.changedTouches : [];\n            for (length = changedTouches.length; idx < length; idx ++) {\n                touch = changedTouches[idx];\n                touches.push({\n                    location: touch,\n                    event: e,\n                    target: touch.target,\n                    currentTarget: currentTarget,\n                    id: touch.identifier,\n                    type: \"touch\"\n                });\n            }\n        }\n        else if (support.pointers || support.msPointers) {\n            touches.push({\n                location: originalEvent,\n                event: e,\n                target: e.target,\n                currentTarget: currentTarget,\n                id: originalEvent.pointerId,\n                type: \"pointer\"\n            });\n        } else {\n            touches.push({\n                id: 1, // hardcoded ID for mouse event;\n                event: e,\n                target: e.target,\n                currentTarget: currentTarget,\n                location: e,\n                type: \"mouse\"\n            });\n        }\n\n        return touches;\n    }\n\n    var TouchAxis = Class.extend({\n        init: function(axis, location) {\n            var that = this;\n\n            that.axis = axis;\n\n            that._updateLocationData(location);\n\n            that.startLocation = that.location;\n            that.velocity = that.delta = 0;\n            that.timeStamp = now();\n        },\n\n        move: function(location) {\n            var that = this,\n                offset = location[\"page\" + that.axis],\n                timeStamp = now(),\n                timeDelta = (timeStamp - that.timeStamp) || 1; // Firing manually events in tests can make this 0;\n\n            if (!offset && invalidZeroEvents) {\n                return;\n            }\n\n            that.delta = offset - that.location;\n\n            that._updateLocationData(location);\n\n            that.initialDelta = offset - that.startLocation;\n            that.velocity = that.delta / timeDelta;\n            that.timeStamp = timeStamp;\n        },\n\n        _updateLocationData: function(location) {\n            var that = this, axis = that.axis;\n\n            that.location = location[\"page\" + axis];\n            that.client = location[\"client\" + axis];\n            that.screen = location[\"screen\" + axis];\n        }\n    });\n\n    var Touch = Class.extend({\n        init: function(userEvents, target, touchInfo) {\n            extend(this, {\n                x: new TouchAxis(\"X\", touchInfo.location),\n                y: new TouchAxis(\"Y\", touchInfo.location),\n                type: touchInfo.type,\n                useClickAsTap: userEvents.useClickAsTap,\n                threshold: userEvents.threshold || THRESHOLD[touchInfo.type],\n                userEvents: userEvents,\n                target: target,\n                currentTarget: touchInfo.currentTarget,\n                initialTouch: touchInfo.target,\n                id: touchInfo.id,\n                pressEvent: touchInfo,\n                _clicks: userEvents._clicks,\n                supportDoubleTap: userEvents.supportDoubleTap,\n                _moved: false,\n                _finished: false\n            });\n        },\n\n        press: function() {\n            this._holdTimeout = setTimeout(this._hold.bind(this), this.userEvents.minHold);\n            this._trigger(PRESS, this.pressEvent);\n        },\n\n        _tap: function(touchInfo) {\n            var that = this;\n            that.userEvents._clicks++;\n            if (that.userEvents._clicks == 1) {\n                that._clickTimeout = setTimeout(function() {\n                    if (that.userEvents._clicks == 1) {\n                        that._trigger(TAP, touchInfo);\n                    }\n                    else {\n                        that._trigger(DOUBLETAP, touchInfo);\n                    }\n                    that.userEvents._clicks = 0;\n                }, CLICK_DELAY);\n            }\n        },\n\n        _hold: function() {\n            this._trigger(HOLD, this.pressEvent);\n        },\n\n        move: function(touchInfo) {\n            var that = this;\n            var preventMove = touchInfo.type !== \"api\" && that.userEvents._shouldNotMove;\n\n            if (that._finished || preventMove) { return; }\n\n            that.x.move(touchInfo.location);\n            that.y.move(touchInfo.location);\n\n            if (!that._moved) {\n                if (that._withinIgnoreThreshold()) {\n                    return;\n                }\n\n                if (!UserEvents.current || UserEvents.current === that.userEvents) {\n                    that._start(touchInfo);\n                } else {\n                    return that.dispose();\n                }\n            }\n\n            // Event handlers may cancel the drag in the START event handler, hence the double check for pressed.\n            if (!that._finished) {\n                that._trigger(MOVE, touchInfo);\n            }\n        },\n\n        end: function(touchInfo) {\n            this.endTime = now();\n\n            if (this._finished) { return; }\n\n            // Mark the object as finished if there are blocking operations in the event handlers (alert/confirm)\n            this._finished = true;\n\n            this._trigger(RELEASE, touchInfo); // Release should be fired before TAP (as click is after mouseup/touchend)\n\n            if (this._moved) {\n                this._trigger(END, touchInfo);\n            } else {\n                if (!this.useClickAsTap) {\n                    if (this.supportDoubleTap) {\n                        this._tap(touchInfo);\n                    }\n                    else {\n                        this._trigger(TAP, touchInfo);\n                    }\n                }\n            }\n\n            clearTimeout(this._holdTimeout);\n\n            this.dispose();\n        },\n\n        dispose: function() {\n            var userEvents = this.userEvents,\n                activeTouches = userEvents.touches;\n\n            this._finished = true;\n            this.pressEvent = null;\n            clearTimeout(this._holdTimeout);\n\n            activeTouches.splice($.inArray(this, activeTouches), 1);\n        },\n\n        skip: function() {\n            this.dispose();\n        },\n\n        cancel: function() {\n            this.dispose();\n        },\n\n        isMoved: function() {\n            return this._moved;\n        },\n\n        _start: function(touchInfo) {\n            clearTimeout(this._holdTimeout);\n\n            this.startTime = now();\n            this._moved = true;\n            this._trigger(START, touchInfo);\n        },\n\n        _trigger: function(name, touchInfo) {\n            var that = this,\n                jQueryEvent = touchInfo.event,\n                data = {\n                    touch: that,\n                    x: that.x,\n                    y: that.y,\n                    target: that.target,\n                    event: jQueryEvent\n                };\n\n            if (that.userEvents.notify(name, data)) {\n                jQueryEvent.preventDefault();\n            }\n        },\n\n        _withinIgnoreThreshold: function() {\n            var xDelta = this.x.initialDelta,\n                yDelta = this.y.initialDelta;\n\n            return Math.sqrt(xDelta * xDelta + yDelta * yDelta) <= this.threshold;\n        }\n    });\n\n    function withEachUpEvent(callback) {\n        var downEvents = kendo.eventMap.up.split(\" \"),\n            idx = 0,\n            length = downEvents.length;\n\n        for (; idx < length; idx ++) {\n            callback(downEvents[idx]);\n        }\n    }\n\n    var UserEvents = Observable.extend({\n        init: function(element, options) {\n            var that = this,\n                filter,\n                ns = kendo.guid();\n\n            options = options || {};\n            filter = that.filter = options.filter;\n            that.threshold = options.threshold || DEFAULT_THRESHOLD;\n            that.minHold = options.minHold || DEFAULT_MIN_HOLD;\n            that.touches = [];\n            that._maxTouches = options.multiTouch ? 2 : 1;\n            that.allowSelection = options.allowSelection;\n            that.captureUpIfMoved = options.captureUpIfMoved;\n            that.useClickAsTap = !options.fastTap && !support.delayedClick();\n            that.eventNS = ns;\n            that._clicks = 0;\n            that.supportDoubleTap = options.supportDoubleTap;\n\n            element = $(element).handler(that);\n            Observable.fn.init.call(that);\n\n            extend(that, {\n                element: element,\n                // the touch events lock to the element anyway, so no need for the global setting\n                surface: options.global && ENABLE_GLOBAL_SURFACE ? $(element[0].ownerDocument.documentElement) : $(options.surface || element),\n                stopPropagation: options.stopPropagation,\n                pressed: false\n            });\n\n            that.surface.handler(that)\n                .on(kendo.applyEventMap(\"move\", ns), \"_move\")\n                .on(kendo.applyEventMap(\"up cancel\", ns), \"_end\");\n\n            element.on(kendo.applyEventMap(\"down\", ns), filter, \"_start\");\n\n            if (that.useClickAsTap) {\n                element.on(kendo.applyEventMap(\"click\", ns), filter, \"_click\");\n            }\n\n            if (support.pointers || support.msPointers) {\n                //touch-action:none will not work for IE10\n                if (support.browser.version < 11) {\n                    var defaultAction = \"pinch-zoom double-tap-zoom\";\n                    element.css(\"-ms-touch-action\", options.touchAction && options.touchAction != \"none\" ? defaultAction + \" \" + options.touchAction : defaultAction);\n                } else {\n                    element.css(\"touch-action\", options.touchAction || \"none\");\n                }\n            }\n\n            if (options.preventDragEvent) {\n                element.on(kendo.applyEventMap(\"dragstart\", ns), kendo.preventDefault);\n            }\n\n            element.on(kendo.applyEventMap(\"mousedown\", ns), filter, { root: element }, \"_select\");\n\n            if (that.captureUpIfMoved && support.eventCapture) {\n                var surfaceElement = that.surface[0],\n                    preventIfMovingProxy = that.preventIfMoving.bind(that);\n\n                withEachUpEvent(function(eventName) {\n                    surfaceElement.addEventListener(eventName, preventIfMovingProxy, true);\n                });\n            }\n\n            that.bind([\n            PRESS,\n            HOLD,\n            TAP,\n            DOUBLETAP,\n            START,\n            MOVE,\n            END,\n            RELEASE,\n            CANCEL,\n            GESTURESTART,\n            GESTURECHANGE,\n            GESTUREEND,\n            GESTURETAP,\n            SELECT\n            ], options);\n        },\n\n        preventIfMoving: function(e) {\n            if (this._isMoved()) {\n                e.preventDefault();\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n\n            if (that._destroyed) {\n                return;\n            }\n\n            that._destroyed = true;\n\n            if (that.captureUpIfMoved && support.eventCapture) {\n                var surfaceElement = that.surface[0];\n                withEachUpEvent(function(eventName) {\n                    surfaceElement.removeEventListener(eventName, that.preventIfMoving);\n                });\n            }\n\n            that.element.kendoDestroy(that.eventNS);\n            that.surface.kendoDestroy(that.eventNS);\n            that.element.removeData(\"handler\");\n            that.surface.removeData(\"handler\");\n            that._disposeAll();\n\n            that.unbind();\n            delete that.surface;\n            delete that.element;\n            delete that.currentTarget;\n        },\n\n        capture: function() {\n            UserEvents.current = this;\n        },\n\n        cancel: function() {\n            this._disposeAll();\n            this.trigger(CANCEL);\n        },\n\n        notify: function(eventName, data) {\n            var that = this,\n                touches = that.touches;\n\n            if (this._isMultiTouch()) {\n                switch (eventName) {\n                    case MOVE:\n                        eventName = GESTURECHANGE;\n                        break;\n                    case END:\n                        eventName = GESTUREEND;\n                        break;\n                    case TAP:\n                        eventName = GESTURETAP;\n                        break;\n                }\n\n                extend(data, { touches: touches }, touchDelta(touches[0], touches[1]));\n            }\n\n            return this.trigger(eventName, extend(data, { type: eventName }));\n        },\n\n        // API\n        press: function(x, y, target) {\n            this._apiCall(\"_start\", x, y, target);\n        },\n\n        move: function(x, y) {\n            this._apiCall(\"_move\", x, y);\n        },\n\n        end: function(x, y) {\n            this._apiCall(\"_end\", x, y);\n        },\n\n        _isMultiTouch: function() {\n            return this.touches.length > 1;\n        },\n\n        _maxTouchesReached: function() {\n            return this.touches.length >= this._maxTouches;\n        },\n\n        _disposeAll: function() {\n            var touches = this.touches;\n            while (touches.length > 0) {\n                touches.pop().dispose();\n            }\n        },\n\n        _isMoved: function() {\n            return $.grep(this.touches, function(touch) {\n                return touch.isMoved();\n            }).length;\n        },\n\n        _select: function(e) {\n           if (!this.allowSelection || this.trigger(SELECT, { event: e })) {\n               e.preventDefault();\n           }\n        },\n\n        _start: function(e) {\n            var that = this,\n                idx = 0,\n                filter = that.filter,\n                target,\n                touches = getTouches(e),\n                length = touches.length,\n                touch,\n                which = e.which;\n\n            if ((which && which > 1) || (that._maxTouchesReached())) {\n                return;\n            }\n\n            UserEvents.current = null;\n\n            that.currentTarget = e.currentTarget;\n\n            if (that.stopPropagation) {\n                e.stopPropagation();\n            }\n\n            for (; idx < length; idx ++) {\n                if (that._maxTouchesReached()) {\n                    break;\n                }\n\n                touch = touches[idx];\n\n                if (filter) {\n                    target = $(touch.currentTarget); // target.is(filter) ? target : target.closest(filter, that.element);\n                } else {\n                    target = that.element;\n                }\n\n                if (!target.length) {\n                    continue;\n                }\n\n                touch = new Touch(that, target, touch);\n                that.touches.push(touch);\n                touch.press();\n\n                if (that._isMultiTouch()) {\n                    that.notify(\"gesturestart\", {});\n                }\n            }\n        },\n\n        _move: function(e) {\n            this._eachTouch(\"move\", e);\n        },\n\n        _end: function(e) {\n            this._eachTouch(\"end\", e);\n        },\n\n        _click: function(e) {\n            var data = {\n                touch: {\n                    initialTouch: e.target,\n                    target: $(e.currentTarget),\n                    endTime: now(),\n                    x: {\n                        location: e.pageX,\n                        client: e.clientX\n                    },\n                    y: {\n                        location: e.pageY,\n                        client: e.clientY\n                    }\n                },\n                x: e.pageX,\n                y: e.pageY,\n                target: $(e.currentTarget),\n                event: e,\n                type: \"tap\"\n            };\n\n            if (this.trigger(\"tap\", data)) {\n                e.preventDefault();\n            }\n        },\n\n        _eachTouch: function(methodName, e) {\n            var that = this,\n                dict = {},\n                touches = getTouches(e),\n                activeTouches = that.touches,\n                idx,\n                touch,\n                touchInfo,\n                matchingTouch;\n\n            for (idx = 0; idx < activeTouches.length; idx ++) {\n                touch = activeTouches[idx];\n                dict[touch.id] = touch;\n            }\n\n            for (idx = 0; idx < touches.length; idx ++) {\n                touchInfo = touches[idx];\n                matchingTouch = dict[touchInfo.id];\n\n                if (matchingTouch) {\n                    matchingTouch[methodName](touchInfo);\n                }\n            }\n        },\n\n        _apiCall: function(type, x, y, target) {\n            this[type]({\n                api: true,\n                pageX: x,\n                pageY: y,\n                clientX: x,\n                clientY: y,\n                target: $(target || this.element)[0],\n                stopPropagation: $.noop,\n                preventDefault: $.noop\n            });\n        }\n    });\n\n    var ClickMoveClick = Observable.extend({\n        init: function(element, options) {\n            var that = this,\n                filter,\n                ns = kendo.guid();\n\n            options = options || {};\n            filter = that.filter = options.filter;\n            that.touches = [];\n            that._maxTouches = 1;\n            that.eventNS = ns;\n            that._downStarted = 0;\n\n            element = $(element).handler(that);\n            Observable.fn.init.call(that);\n\n            extend(that, {\n                element: element,\n                // the touch events lock to the element anyway, so no need for the global setting\n                surface: options.global && ENABLE_GLOBAL_SURFACE ? $(element[0].ownerDocument.documentElement) : $(options.surface || element),\n                stopPropagation: options.stopPropagation,\n                pressed: false\n            });\n\n            that.surface.handler(that)\n                .on(kendo.applyEventMap(\"move\", ns), \"_move\")\n                .on(kendo.applyEventMap(\"cancel up\", ns), \"cancel\");\n\n            element.on(kendo.applyEventMap(\"down\", ns), filter, \"_down\")\n                .on(kendo.applyEventMap(\"up\", ns), filter, \"_up\");\n\n            that.bind([\n                START,\n                MOVE,\n                END,\n                HOLD,\n                CANCEL,\n                SELECT\n            ], options);\n        },\n\n        _down: function(e) {\n            if (e.which && e.which > 1) {\n                this.cancel();\n            } else {\n                this._downStarted = new Date().getTime();\n                this._downTarget = e.target;\n            }\n        },\n\n        _up: function(e) {\n            var currentMilestone = new Date().getTime(),\n                currentTarget = e.target;\n\n            if ((!e.which || e.which === 1) &&\n                currentMilestone < this._downStarted + CLICK_DELAY &&\n                currentTarget === this._downTarget) {\n                    if (this.touches && this.touches.length > 0) {\n                        this._end(e);\n                    } else {\n                        this._start(e);\n                    }\n\n                    this._preventCancel = true;\n            } else {\n                this.cancel();\n            }\n\n            this._downStarted = 0;\n            this._downTarget = null;\n        },\n\n        destroy: function() {\n            var that = this;\n\n            if (that._destroyed) {\n                return;\n            }\n\n            that._destroyed = true;\n\n            that.element.kendoDestroy(that.eventNS);\n            that.surface.kendoDestroy(that.eventNS);\n            that.element.removeData(\"handler\");\n            that.surface.removeData(\"handler\");\n            that._disposeAll();\n\n            that.unbind();\n            delete that.surface;\n            delete that.element;\n            delete that.currentTarget;\n        },\n\n        capture: function() {\n            ClickMoveClick.current = this;\n        },\n\n        cancel: function() {\n            if (this._preventCancel) {\n                this._preventCancel = false;\n                return;\n            } else if (this.touches && this.touches.length > 0) {\n                this._disposeAll();\n                this.trigger(CANCEL);\n            }\n        },\n\n        notify: function(eventName, data) {\n            data.clickMoveClick = true;\n            return this.trigger(eventName, extend(data, { type: eventName }));\n        },\n\n        _maxTouchesReached: function() {\n            return this.touches.length >= this._maxTouches;\n        },\n\n        _disposeAll: function() {\n            var touches = this.touches;\n\n            while (touches.length > 0) {\n                touches.pop().dispose();\n            }\n        },\n\n        _start: function(e) {\n            var that = this,\n                idx = 0,\n                filter = that.filter,\n                target,\n                touches = getTouches(e),\n                length = touches.length,\n                touch,\n                which = e.which;\n\n            if ((which && which > 1) || (that._maxTouchesReached())) {\n                return;\n            }\n\n            ClickMoveClick.current = null;\n\n            that.currentTarget = e.currentTarget;\n\n            if (that.stopPropagation) {\n                e.stopPropagation();\n            }\n\n            for (; idx < length; idx ++) {\n                if (that._maxTouchesReached()) {\n                    break;\n                }\n\n                touch = touches[idx];\n\n                if (filter) {\n                    target = $(touch.currentTarget);\n                } else {\n                    target = that.element;\n                }\n\n                if (!target.length) {\n                    continue;\n                }\n\n                touch = new Touch(that, target, touch);\n                that.touches.push(touch);\n                touch.press();\n                touch._start(touch);\n            }\n        },\n\n        _move: function(e) {\n            this._eachTouch(\"move\", e);\n        },\n\n        _end: function(e) {\n            this._eachTouch(\"move\", e);\n            this._eachTouch(\"end\", e);\n        },\n\n        _eachTouch: function(methodName, e) {\n            var that = this,\n                dict = {},\n                touches = getTouches(e),\n                activeTouches = that.touches,\n                idx,\n                touch,\n                touchInfo,\n                matchingTouch;\n\n            for (idx = 0; idx < activeTouches.length; idx ++) {\n                touch = activeTouches[idx];\n                dict[touch.id] = touch;\n            }\n\n            for (idx = 0; idx < touches.length; idx ++) {\n                touchInfo = touches[idx];\n                matchingTouch = dict[touchInfo.id];\n\n                if (matchingTouch) {\n                    matchingTouch.x.move(touchInfo.location);\n                    matchingTouch.y.move(touchInfo.location);\n                    matchingTouch[methodName](touchInfo);\n                }\n            }\n        }\n    });\n\n    UserEvents.defaultThreshold = function(value) {\n        DEFAULT_THRESHOLD = value;\n    };\n\n    UserEvents.minHold = function(value) {\n        DEFAULT_MIN_HOLD = value;\n    };\n\n    kendo.getTouches = getTouches;\n    kendo.touchDelta = touchDelta;\n    kendo.UserEvents = UserEvents;\n    kendo.ClickMoveClick = ClickMoveClick;\n })(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.userevents.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.validator.js":
/*!***********************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.validator.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\nlet __meta__ = {\n    id: \"validator\",\n    name: \"Validator\",\n    category: \"web\",\n    description: \"The Validator offers an easy way to do a client-side form validation.\",\n    depends: [ \"core\" ]\n};\n\n\n(function($, undefined$1) {\n    let kendo = __webpack_provided_window_dot_kendo,\n        Widget = kendo.ui.Widget,\n        NS = \".kendoValidator\",\n        INVALIDMSG = \"k-invalid-msg\",\n        invalidMsgRegExp = new RegExp(INVALIDMSG,'i'),\n        INVALIDINPUT = \"k-invalid\",\n        VALIDINPUT = \"k-valid\",\n        VALIDATIONSUMMARY = \"k-validation-summary\",\n        INVALIDLABEL = \"k-text-error\",\n        MESSAGEBOX = \"k-messagebox k-messagebox-error\",\n        INPUTINNER = \".k-input-inner\",\n        INPUTWRAPPER = \".k-input\",\n        ARIAINVALID = \"aria-invalid\",\n        ARIADESCRIBEDBY = \"aria-describedby\",\n        emailRegExp = /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/i,\n        ALLOWED_URL_PROTOCOLS = [\"http:\", \"https:\", \"ftp:\", \"ftps:\"],\n        INPUTSELECTOR = \":input:not(:button,[type=submit],[type=reset],[disabled],[readonly])\",\n        CHECKBOXSELECTOR = \":checkbox:not([disabled],[readonly])\",\n        NUMBERINPUTSELECTOR = \"[type=number],[type=range]\",\n        BLUR = \"blur\",\n        NAME = \"name\",\n        FORM = \"form\",\n        NOVALIDATE = \"novalidate\",\n        //events\n        VALIDATE = \"validate\",\n        CHANGE = \"change\",\n        VALIDATE_INPUT = \"validateInput\",\n\n        patternMatcher = function(value, pattern) {\n            if (typeof pattern === \"string\") {\n                pattern = new RegExp('^(?:' + pattern + ')$');\n            }\n            return pattern.test(value);\n        },\n        matcher = function(input, selector, pattern) {\n            var value = input.val();\n\n            if (input.filter(selector).length && value !== \"\") {\n                return patternMatcher(value, pattern);\n            }\n            return true;\n        },\n        hasAttribute = function(input, name) {\n            if (input.length) {\n                return input[0].attributes[name] != null;\n            }\n            return false;\n        };\n\n    if (!kendo.ui.validator) {\n        kendo.ui.validator = { rules: {}, messages: {}, allowSubmit: $.noop, validateOnInit: $.noop };\n    }\n\n    function resolveRules(element) {\n        var resolvers = kendo.ui.validator.ruleResolvers || {},\n            rules = {},\n            name;\n\n        for (name in resolvers) {\n            $.extend(true, rules, resolvers[name].resolve(element));\n        }\n        return rules;\n    }\n\n    function decode(value) {\n        return value.replace(/&amp/g, '&amp;')\n            .replace(/&quot;/g, '\"')\n            .replace(/&#39;/g, \"'\")\n            .replace(/&lt;/g, '<')\n            .replace(/&gt;/g, '>');\n    }\n\n    function numberOfDecimalDigits(value) {\n        value = (value + \"\").split('.');\n        if (value.length > 1) {\n            return value[1].length;\n        }\n        return 0;\n    }\n\n    function parseHtml(text) {\n        if ($.parseHTML) {\n            return $($.parseHTML(text));\n        }\n        return $(text);\n    }\n\n    function searchForMessageContainer(elements, fieldName) {\n        var containers = $(),\n            element,\n            attr;\n\n        for (var idx = 0, length = elements.length; idx < length; idx++) {\n            element = elements[idx];\n            if (invalidMsgRegExp.test(element.className)) {\n                attr = element.getAttribute(kendo.attr(\"for\"));\n                if (attr === fieldName) {\n                    containers = containers.add(element);\n                }\n            }\n        }\n        return containers;\n    }\n\n    function isLabelFor(label, element) {\n        if (!label) {\n            return false;\n        }\n        if (typeof label.nodeName !== 'string' || label.nodeName !== 'LABEL') {\n            return false;\n        }\n        if (typeof label.getAttribute('for') !== 'string' || typeof element.getAttribute('id') !== 'string') {\n            return false;\n        }\n        if (label.getAttribute('for') !== element.getAttribute('id')) {\n            return false;\n        }\n\n        return true;\n    }\n\n    var SUMMARYTEMPLATE = ({ errors }) => {\n        let result = '<ul>';\n        for (var i = 0; i < errors.length; i += 1) {\n            result += `<li><a data-field=\"${errors[i].field}\" href=\"#\">${errors[i].message}</a></li>`;\n        }\n\n        result += '</ul>';\n        return result;\n    };\n\n    var Validator = Widget.extend({\n        init: function(element, options) {\n            var that = this,\n                resolved = resolveRules(element),\n                validateAttributeSelector = \"[\" + kendo.attr(\"validate\") + \"!=false]\";\n\n            options = options || {};\n\n            options.rules = $.extend({}, kendo.ui.validator.rules, resolved.rules, options.rules);\n            options.messages = $.extend({}, kendo.ui.validator.messages, resolved.messages, options.messages);\n\n            Widget.fn.init.call(that, element, options);\n\n            that._errorTemplate = kendo.template(that.options.errorTemplate);\n            that._summaryTemplate = kendo.template(that.options.validationSummary.template || SUMMARYTEMPLATE);\n\n            if (that.element.is(FORM)) {\n                that.element.attr(NOVALIDATE, NOVALIDATE);\n            }\n\n            that._inputSelector = INPUTSELECTOR + validateAttributeSelector;\n            that._checkboxSelector = CHECKBOXSELECTOR + validateAttributeSelector;\n\n            that._errors = {};\n            that._attachEvents();\n            that._isValidated = false;\n\n            if (that._validateOnInit()) {\n                that.validate();\n            }\n        },\n\n        events: [ VALIDATE, CHANGE, VALIDATE_INPUT ],\n\n        options: {\n            name: \"Validator\",\n            errorTemplate: ({ message }) => `<span class=\"k-form-error\">${message}</span>`,\n            messages: {\n                required: \"{0} is required\",\n                pattern: \"{0} is not valid\",\n                min: \"{0} should be greater than or equal to {1}\",\n                max: \"{0} should be smaller than or equal to {1}\",\n                step: \"{0} is not valid\",\n                email: \"{0} is not valid email\",\n                url: \"{0} is not valid URL\",\n                date: \"{0} is not valid date\",\n                dateCompare: \"End date should be greater than or equal to the start date\",\n                captcha: \"The text you entered doesn't match the image.\"\n            },\n            rules: {\n                required: function(input) {\n                    var noNameCheckbox = !input.attr(\"name\") && !input.is(\":checked\"),\n                        name = input.attr(\"name\"),\n                        quote = !!name && name.indexOf(\"'\") > -1 ? '\\\"' : \"'\",\n                        namedCheckbox = input.attr(\"name\") && !this.element.find(\"input[name=\" + quote + input.attr(\"name\") + quote + \"]:checked\").length,\n                        checkbox = input.filter(\"[type=checkbox]\").length && (noNameCheckbox || namedCheckbox),\n                        radio = input.filter(\"[type=radio]\").length && !this.element.find(\"input[name=\" + quote + input.attr(\"name\") + quote + \"]:checked\").length,\n                        value = input.val();\n\n                    return !(hasAttribute(input, \"required\") && (!value || value === \"\" || value.length === 0 || checkbox || radio));\n                },\n                pattern: function(input) {\n                    if (input.filter(\"[type=text],[type=email],[type=url],[type=tel],[type=search],[type=password]\").filter(\"[pattern]\").length && input.val() !== \"\") {\n                        return patternMatcher(input.val(), input.attr(\"pattern\"));\n                    }\n                    return true;\n                },\n                min: function(input) {\n                    if (input.filter(NUMBERINPUTSELECTOR + \",[\" + kendo.attr(\"type\") + \"=number]\").filter(\"[min]\").length && input.val() !== \"\") {\n                        var min = parseFloat(input.attr(\"min\")) || 0,\n                            val = kendo.parseFloat(input.val());\n\n                        return min <= val;\n                    }\n                    return true;\n                },\n                max: function(input) {\n                    if (input.filter(NUMBERINPUTSELECTOR + \",[\" + kendo.attr(\"type\") + \"=number]\").filter(\"[max]\").length && input.val() !== \"\") {\n                        var max = parseFloat(input.attr(\"max\")) || 0,\n                            val = kendo.parseFloat(input.val());\n\n                        return max >= val;\n                    }\n                    return true;\n                },\n                step: function(input) {\n                    if (input.filter(NUMBERINPUTSELECTOR + \",[\" + kendo.attr(\"type\") + \"=number]\").filter(\"[step]\").length && input.val() !== \"\") {\n                        var min = parseFloat(input.attr(\"min\")) || 0,\n                            step = kendo.parseFloat(input.attr(\"step\")) || 1,\n                            val = parseFloat(input.val()),\n                            decimals = numberOfDecimalDigits(step),\n                            raise;\n\n                        if (decimals) {\n                            raise = Math.pow(10, decimals);\n                            return ((Math.floor((val - min) * raise)) % (step * raise)) / Math.pow(100, decimals) === 0;\n                        }\n                        return ((val - min) % step) === 0;\n                    }\n                    return true;\n                },\n                email: function(input) {\n                    return matcher(input, \"[type=email],[\" + kendo.attr(\"type\") + \"=email]\", emailRegExp);\n                },\n                url: function(input) {\n                    if (input.filter(\"[type=url],[\" + kendo.attr(\"type\") + \"=url]\").length && input.val() !== \"\") {\n                        try {\n                            const url = new URL(input.val());\n                            return ALLOWED_URL_PROTOCOLS.includes(url.protocol);\n                        } catch {\n                            return false;\n                        }\n                    }\n                    return true;\n                },\n                date: function(input) {\n                    if (input.filter(\"[type^=date],[\" + kendo.attr(\"type\") + \"=date]\").length && input.val() !== \"\") {\n                        return kendo.parseDate(input.val(), input.attr(kendo.attr(\"format\"))) !== null;\n                    }\n                    return true;\n                },\n                captcha: function(input) {\n                    if (input.filter(\"[\" + kendo.attr(\"role\") + \"=captcha]\").length) {\n                        var that = this,\n                            captcha = kendo.widgetInstance(input),\n                            isValidated = function(isValid) {\n                                return typeof(isValid) !== 'undefined' && isValid !== null;\n                            };\n\n                        if (!input.data(\"captcha_validating\") && !isValidated(captcha.isValid()) && !!captcha.getCaptchaId()) {\n                            input.data(\"captcha_validating\", true);\n                            that._validating = true;\n                            captcha.validate().done(function() {\n                                that._validating = false;\n                                that._checkElement(input);\n                            }).fail(function(data) {\n                                that._validating = false;\n                                if (data.error && data.error === \"handler_not_defined\") {\n                                    window.console.warn(\"Captcha's validationHandler is not defined! You should either define a proper validation endpoint or declare a callback function to ensure the required behavior.\");\n                                }\n                            });\n                        }\n\n                        if (isValidated(captcha.isValid())) {\n                            input.removeData(\"captcha_validating\");\n                            return captcha.isValid();\n                        }\n                    }\n                    return true;\n                }\n            },\n            validateOnBlur: true,\n            validationSummary: false\n        },\n\n        _allowSubmit: function() {\n            return kendo.ui.validator.allowSubmit(this.element, this.errors());\n        },\n\n        _validateOnInit: function() {\n            return kendo.ui.validator.validateOnInit(this.element);\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            this.element.off(NS);\n\n            if (this.validationSummary) {\n                this.validationSummary.off(NS);\n                this.validationSummary = null;\n            }\n        },\n\n        value: function() {\n            if (!this._isValidated) {\n                return false;\n            }\n\n            return this.errors().length === 0;\n        },\n\n        _submit: function(e) {\n            if ((!this.validate() && !this._allowSubmit()) || this._validating) {\n                e.stopPropagation();\n                e.stopImmediatePropagation();\n                e.preventDefault();\n                return false;\n            }\n            return true;\n        },\n\n        _checkElement: function(element) {\n            var state = this.value();\n\n            this.validateInput(element);\n\n            if (this.value() !== state) {\n                this.trigger(CHANGE);\n            }\n        },\n\n        _attachEvents: function() {\n            var that = this;\n\n            if (that.element.is(FORM)) {\n                that.element.on(\"submit\" + NS, that._submit.bind(that));\n            }\n\n            if (that.options.validateOnBlur) {\n                if (!that.element.is(INPUTSELECTOR)) {\n                    that.element.on(BLUR + NS, that._inputSelector, function() {\n                        that._checkElement($(this));\n                    });\n\n                    that.element.on(\"click\" + NS, that._checkboxSelector, function() {\n                        that._checkElement($(this));\n                    });\n                } else {\n                    that.element.on(BLUR + NS, function() {\n                        that._checkElement(that.element);\n                    });\n\n                    if (that.element.is(CHECKBOXSELECTOR)) {\n                        that.element.on(\"click\" + NS, function() {\n                            that._checkElement(that.element);\n                        });\n                    }\n                }\n            }\n        },\n\n        validate: function() {\n            var inputs;\n            var idx;\n            var result = false;\n            var length;\n\n            var isValid = this.value();\n\n            this._errors = {};\n\n            if (!this.element.is(INPUTSELECTOR)) {\n                var invalid = false;\n\n                inputs = this.element.find(this._inputSelector);\n\n                for (idx = 0, length = inputs.length; idx < length; idx++) {\n                    if (!this.validateInput(inputs.eq(idx))) {\n                        invalid = true;\n                    }\n                }\n\n                result = !invalid;\n            } else {\n                result = this.validateInput(this.element);\n            }\n\n            if (this.options.validationSummary && !isValid) {\n                this.showValidationSummary();\n            }\n\n            this.trigger(VALIDATE, { valid: result, errors: this.errors() });\n\n            if (isValid !== result) {\n                this.trigger(CHANGE);\n            }\n\n            return result;\n        },\n\n        validateInput: function(input) {\n            input = $(input);\n\n\n            this._isValidated = true;\n\n            var that = this,\n                template = that._errorTemplate,\n                result = that._checkValidity(input),\n                valid = result.valid,\n                widgetInstance,\n                className = \".\" + INVALIDMSG,\n                fieldName = (input.attr(NAME) || \"\"),\n                lbl = that._findMessageContainer(fieldName).add(input.next(className).filter(function() {\n                    var element = $(this);\n                    if (element.filter(\"[\" + kendo.attr(\"for\") + \"]\").length) {\n                        return element.attr(kendo.attr(\"for\")) === fieldName;\n                    }\n\n                    return true;\n\n                })).addClass(\"k-hidden\"),\n                messageText = !valid ? that._extractMessage(input, result.key) : \"\",\n                messageLabel = !valid ? parseHtml(template({ message: decode(messageText), field: fieldName })) : \"\",\n                wasValid = !input.attr(ARIAINVALID),\n                isInputInner = input.is(INPUTINNER),\n                inputWrapper = input.parent(INPUTWRAPPER);\n\n            input.removeAttr(ARIAINVALID);\n\n            if (input.hasClass(\"k-hidden\")) {\n                widgetInstance = kendo.widgetInstance(input.closest(\".k-signature\"));\n            }\n\n            if (input.is(\"[type=radio]\")) {\n                widgetInstance = kendo.widgetInstance(input.closest(\".k-radio-list\"));\n            }\n\n            if (input.is(\"[type=checkbox]\")) {\n                widgetInstance = kendo.widgetInstance(input.closest(\".k-checkbox-list\"));\n            }\n\n            if (!valid && !input.data(\"captcha_validating\")) {\n                that._errors[fieldName] = messageText;\n                var lblId = lbl.attr('id');\n\n                that._decorateMessageContainer(messageLabel, fieldName);\n\n\n                if (lblId) {\n                    messageLabel.attr('id', lblId);\n                }\n\n                if (lbl.length !== 0) {\n                    lbl.replaceWith(messageLabel);\n                } else {\n                    widgetInstance = widgetInstance || kendo.widgetInstance(input);\n                    var parentElement = input.parent().get(0);\n                    var nextElement = input.next().get(0);\n                    var prevElement = input.prev().get(0);\n\n                    // Get the instance of the RadioGroup which is not initialized on the input element\n                    if (!widgetInstance && input.is(\"[type=radio]\")) {\n                        widgetInstance = kendo.widgetInstance(input.closest(\".k-radio-list\"));\n                    }\n\n                    // Get the instance of the CheckBoxGroup which is not initialized on the input element\n                    if (!widgetInstance && input.is(\"[type=checkbox]\")) {\n                        widgetInstance = kendo.widgetInstance(input.closest(\".k-checkbox-list\"));\n                    }\n\n                    if (widgetInstance && widgetInstance.wrapper && (widgetInstance.element !== widgetInstance.wrapper || [\"Signature\", \"RadioGroup\", \"CheckBoxGroup\"].indexOf(widgetInstance.options.name) > -1)) {\n                        messageLabel.insertAfter(widgetInstance.wrapper);\n                    } else if (parentElement && parentElement.nodeName === \"LABEL\") {\n                        // Input inside label\n                        messageLabel.insertAfter(parentElement);\n                    } else if (nextElement && isLabelFor(nextElement, input[0])) {\n                        // Input before label\n                        messageLabel.insertAfter(nextElement);\n                    } else if (prevElement && isLabelFor(prevElement, input[0])) {\n                        // Input after label\n                        messageLabel.insertAfter(input);\n                    } else if (isInputInner && inputWrapper.length) {\n                        // Input after input wrapper\n                        messageLabel.insertAfter(inputWrapper);\n                    } else {\n                        messageLabel.insertAfter(input);\n                    }\n                }\n\n                messageLabel.removeClass(\"k-hidden\");\n\n                input.attr(ARIAINVALID, true);\n            } else {\n                delete that._errors[fieldName];\n            }\n\n            if (wasValid !== valid) {\n                this.trigger(VALIDATE_INPUT, { valid: valid, input: input, error: messageText, field: fieldName });\n            }\n\n            widgetInstance = (widgetInstance && widgetInstance.options.name == \"Signature\") ? widgetInstance : kendo.widgetInstance(input);\n            if (!widgetInstance || !(widgetInstance._inputWrapper || widgetInstance.wrapper) || (input.is(\"[type=checkbox]\") || input.is(\"[type=radio]\"))) {\n                input.toggleClass(INVALIDINPUT, !valid);\n                input.toggleClass(VALIDINPUT, valid);\n            }\n\n            if (widgetInstance) {\n                var inputWrap = widgetInstance._inputWrapper || widgetInstance.wrapper;\n                var inputLabel = widgetInstance._inputLabel;\n\n                if (inputWrap && !(input.is(\"[type=checkbox]\") || input.is(\"[type=radio]\"))) {\n                    inputWrap.toggleClass(INVALIDINPUT, !valid);\n                    inputWrap.toggleClass(VALIDINPUT, valid);\n                }\n                if (inputLabel) {\n                    inputLabel.toggleClass(INVALIDLABEL, !valid);\n                }\n            }\n\n            if (wasValid !== valid) {\n                var errorId = messageLabel ? messageLabel.attr(\"id\") : lbl.attr(\"id\");\n\n                that._associateMessageContainer(input, errorId);\n\n                if (this.options.validationSummary && this.options.validateOnBlur) {\n                    this.showValidationSummary();\n                }\n            }\n\n            return valid;\n        },\n\n        hideMessages: function() {\n            var that = this,\n                className = \".\" + INVALIDMSG,\n                element = that.element;\n\n            that._disassociateMessageContainers();\n\n            if (!element.is(INPUTSELECTOR)) {\n                element.find(className).addClass(\"k-hidden\");\n            } else {\n                element.next(className).addClass(\"k-hidden\");\n            }\n        },\n\n        reset: function() {\n            var that = this,\n                inputs = that.element.find(\".\" + INVALIDINPUT),\n                labels = that.element.find(\".\" + INVALIDLABEL);\n\n            that._errors = [];\n\n            that.hideMessages();\n\n            that.hideValidationSummary();\n\n            inputs.removeAttr(ARIAINVALID);\n            inputs.removeClass(INVALIDINPUT);\n            labels.removeClass(INVALIDLABEL);\n        },\n\n        _findMessageContainer: function(fieldName) {\n            var locators = kendo.ui.validator.messageLocators,\n                name,\n                containers = $();\n\n            for (var idx = 0, length = this.element.length; idx < length; idx++) {\n                containers = containers.add(searchForMessageContainer(this.element[idx].getElementsByTagName(\"*\"), fieldName));\n            }\n\n            for (name in locators) {\n                containers = containers.add(locators[name].locate(this.element, fieldName));\n            }\n\n            return containers;\n        },\n\n        _decorateMessageContainer: function(container, fieldName) {\n            var locators = kendo.ui.validator.messageLocators,\n                name;\n\n            container.addClass(INVALIDMSG)\n                .attr(kendo.attr(\"for\"), fieldName || \"\");\n\n            if (!container.attr(\"id\")) {\n                container.attr(\"id\", fieldName + \"-error\");\n            }\n\n            for (name in locators) {\n                locators[name].decorate(container, fieldName);\n            }\n        },\n\n        _extractMessage: function(input, ruleKey) {\n            var that = this,\n                customMessage = that.options.messages[ruleKey],\n                fieldName = input.attr(NAME),\n                nonDefaultMessage;\n\n            if (!kendo.ui.Validator.prototype.options.messages[ruleKey]) {\n                 nonDefaultMessage = kendo.isFunction(customMessage) ? customMessage(input) : customMessage;\n            }\n\n            customMessage = kendo.isFunction(customMessage) ? customMessage(input) : customMessage;\n\n            return kendo.format(input.attr(kendo.attr(ruleKey + \"-msg\")) || input.attr(\"validationMessage\") || nonDefaultMessage || customMessage || input.attr(\"title\") || \"\",\n                fieldName,\n                input.attr(ruleKey) || input.attr(kendo.attr(ruleKey)));\n        },\n\n        _checkValidity: function(input) {\n            var rules = this.options.rules,\n                rule;\n\n            for (rule in rules) {\n                if (!rules[rule].call(this, input)) {\n                    return { valid: false, key: rule };\n                }\n            }\n\n            return { valid: true };\n        },\n\n        errors: function() {\n            var results = [],\n                errors = this._errors,\n                error;\n\n            for (error in errors) {\n                results.push(errors[error]);\n            }\n            return results;\n        },\n\n        setOptions: function(options) {\n            if (options.validationSummary) {\n                this.hideValidationSummary();\n            }\n\n            kendo.deepExtend(this.options, options);\n\n            this.destroy();\n\n            this.init(this.element, this.options);\n\n            this._setEvents(this.options);\n        },\n\n        _getInputNames: function() {\n            var that = this,\n                inputs = that.element.find(that._inputSelector),\n                sorted = [];\n\n            for (var idx = 0, length = inputs.length; idx < length; idx++) {\n                var input = $(inputs[idx]);\n\n                if (hasAttribute(input, NAME)) {\n                    // Add current name if:\n                    // - not present so far;\n                    // - present but not part of CheckBoxGroup or RadioGroup.\n                    if (sorted.indexOf(input.attr(NAME)) === -1 ||\n                        (input.closest(\".k-checkbox-list\").length === 0 &&\n                        input.closest(\".k-radio-list\").length === 0)) {\n                            sorted.push(input.attr(NAME));\n                    }\n                }\n            }\n\n            return sorted;\n        },\n\n        _associateMessageContainer: function(input, errorId) {\n            var nextFocusable = kendo.getWidgetFocusableElement(input);\n\n            if (!nextFocusable || !errorId) {\n                return;\n            }\n\n            kendo.toggleAttribute(nextFocusable, ARIADESCRIBEDBY, errorId);\n        },\n\n        _disassociateMessageContainers: function() {\n            var that = this,\n                inputs = that.element.find(\".\" + INVALIDINPUT).addBack(),\n                input, errorId;\n\n            for (var i = 0; i < inputs.length; i += 1) {\n                input = $(inputs[i]);\n\n                if (input.is(\"input\")) {\n                    errorId = that._findMessageContainer(input.attr(NAME))\n                        .add(input.next(\".\" + INVALIDMSG))\n                        .attr(\"id\");\n\n                    that._associateMessageContainer(input, errorId);\n                }\n            }\n        },\n\n        _errorsByName: function() {\n            var that = this,\n                inputNames = that._getInputNames(),\n                sorted = [];\n\n            for (var i = 0; i < inputNames.length; i += 1) {\n                var name = inputNames[i];\n\n                if (that._errors[name]) {\n                    sorted.push({\n                        field: name,\n                        message: that._errors[name]\n                    });\n                }\n            }\n\n            return sorted;\n        },\n\n        _renderSummary: function() {\n            var that = this,\n                options = this.options.validationSummary,\n                element = this.element,\n                prevElement = element.prev(),\n                container;\n\n            if (options.container) {\n                container = $(options.container);\n            } else if (prevElement && prevElement.hasClass(VALIDATIONSUMMARY)) {\n                container = prevElement;\n            } else {\n                container = $(\"<div />\").insertBefore(that.element);\n            }\n\n            container.addClass([VALIDATIONSUMMARY, MESSAGEBOX].join(\" \"));\n            container.attr(\"role\", \"alert\");\n\n            container.on(\"click\" + NS, that._summaryClick.bind(that));\n\n            return container;\n        },\n\n        _summaryClick: function(e) {\n            e.preventDefault();\n\n            var that = this,\n                link = $(e.target),\n                target = that.element.find(\"[name='\" + link.data(\"field\") + \"']\"),\n                nextFocusable;\n\n            if (!target.length) {\n                return;\n            }\n\n            nextFocusable = kendo.getWidgetFocusableElement(target);\n\n            if (nextFocusable) {\n                nextFocusable.trigger(\"focus\");\n            }\n        },\n\n        showValidationSummary: function() {\n            var that = this,\n                summary = that.validationSummary,\n                errors = that._errorsByName(),\n                errorsList;\n\n            if (!summary) {\n                summary = that.validationSummary = that._renderSummary();\n            }\n\n            errorsList = parseHtml(that._summaryTemplate({\n                errors: errors\n            }));\n\n            summary.html(errorsList);\n\n            summary.toggleClass(\"k-hidden\", !errors.length);\n        },\n\n        hideValidationSummary: function() {\n            var that = this,\n                summary = that.validationSummary;\n\n            if (!summary) {\n                return;\n            }\n\n            summary.addClass(\"k-hidden\");\n        }\n    });\n\n    kendo.ui.plugin(Validator);\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.validator.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.view.js":
/*!******************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.view.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.core.js */ \"./node_modules/kendo-ui-core/esm/kendo.core.js\");\n/* harmony import */ var _kendo_binder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.binder.js */ \"./node_modules/kendo-ui-core/esm/kendo.binder.js\");\n/* harmony import */ var _kendo_fx_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kendo.fx.js */ \"./node_modules/kendo-ui-core/esm/kendo.fx.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\n\nvar __meta__ = {\n    id: \"view\",\n    name: \"View\",\n    category: \"framework\",\n    description: \"The View class instantiates and handles the events of a certain screen from the application.\",\n    depends: [ \"core\", \"binder\", \"fx\" ],\n    hidden: false\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        attr = kendo.attr,\n        ui = kendo.ui,\n        attrValue = kendo.attrValue,\n        directiveSelector = kendo.directiveSelector,\n        Observable = kendo.Observable,\n        Widget = kendo.ui.Widget,\n        roleSelector = kendo.roleSelector,\n\n        SCRIPT = \"SCRIPT\",\n        INIT = \"init\",\n        TRANSITION_START = \"transitionStart\",\n        TRANSITION_END = \"transitionEnd\",\n        SHOW = \"show\",\n        HIDE = \"hide\",\n        ATTACH = \"attach\",\n        DETACH = \"detach\",\n        sizzleErrorRegExp = /unrecognized expression/;\n\n    var LOAD_START = \"loadStart\";\n    var LOAD_COMPLETE = \"loadComplete\";\n    var SHOW_START = \"showStart\";\n    var SAME_VIEW_REQUESTED = \"sameViewRequested\";\n    var VIEW_SHOW = \"viewShow\";\n    var VIEW_TYPE_DETERMINED = \"viewTypeDetermined\";\n    var AFTER = \"after\";\n    var classNames = {\n        content: \"k-content\",\n        view: \"k-view\",\n        stretchedView: \"k-stretched-view\",\n        widget: \"k-widget\",\n        header: \"k-header\",\n        footer: \"k-footer\"\n    };\n\n    var View = kendo.ui.Widget.extend({\n        init: function(content, options) {\n            var that = this;\n            options = options || {};\n            that.id = kendo.guid();\n\n            Observable.fn.init.call(that);\n            this.options = $.extend({}, this.options, options);\n\n            that.content = content;\n\n            if (that.options.renderOnInit) {\n                Widget.fn.init.call(that, that._createElement(), options);\n            }\n\n            if (that.options.wrapInSections) {\n                that._renderSections();\n            }\n\n            that.tagName = options.tagName || \"div\";\n            that.model = options.model;\n            that._wrap = options.wrap !== false;\n            this._evalTemplate = options.evalTemplate || false;\n            this._useWithBlock = options.useWithBlock;\n            that._fragments = {};\n\n            that.bind([ INIT, SHOW, HIDE, TRANSITION_START, TRANSITION_END ], options);\n        },\n\n        options: {\n            name: \"View\",\n            renderOnInit: false,\n            wrapInSections: false,\n            detachOnHide: true,\n            detachOnDestroy: true\n        },\n\n        render: function(container) {\n            var that = this,\n                notInitialized = !that.element;\n\n            // The order below matters - kendo.bind should happen when the element is in the DOM, and show should be triggered after init.\n\n            if (notInitialized) {\n                that.element = that._createElement();\n            }\n\n            if (container) {\n                $(container).append(that.element);\n            }\n\n            if (notInitialized) {\n                kendo.bind(that.element, that.model);\n                that.trigger(INIT);\n            }\n\n            if (container) {\n                that._eachFragment(ATTACH);\n                that.trigger(SHOW);\n            }\n\n            return that.element;\n        },\n\n        clone: function() {\n            return new ViewClone(this);\n        },\n\n        triggerBeforeShow: function() {\n            return true;\n        },\n\n        triggerBeforeHide: function() {\n            return true;\n        },\n\n        showStart: function() {\n            var that = this;\n            var element = that.render();\n\n            if (element) {\n                element.css(\"display\", \"\");\n            }\n\n            this.trigger(SHOW_START, { view: this });\n        },\n\n        showEnd: function() {\n        },\n\n        hideEnd: function() {\n            this.hide();\n        },\n\n        beforeTransition: function(type) {\n            this.trigger(TRANSITION_START, { type: type });\n        },\n\n        afterTransition: function(type) {\n            this.trigger(TRANSITION_END, { type: type });\n        },\n\n        hide: function() {\n            if (this.options.detachOnHide) {\n                this._eachFragment(DETACH);\n                $(this.element).detach();\n            }\n\n            this.trigger(HIDE);\n        },\n\n        destroy: function() {\n            var that = this;\n            var element = that.element;\n\n            if (element) {\n                Widget.fn.destroy.call(that);\n\n                kendo.unbind(element);\n                kendo.destroy(element);\n\n                if (that.options.detachOnDestroy) {\n                    element.remove();\n                }\n            }\n        },\n\n        // ported from mobile view\n        purge: function() {\n            var that = this;\n\n            that.destroy();\n            $(that.element).add(that.content).add(that.wrapper).off().remove();\n        },\n\n        fragments: function(fragments) {\n            $.extend(this._fragments, fragments);\n        },\n\n        _eachFragment: function(methodName) {\n            for (var placeholder in this._fragments) {\n                this._fragments[placeholder][methodName](this, placeholder);\n            }\n        },\n\n        _createElement: function() {\n            var that = this,\n                wrapper = \"<\" + that.tagName + \">\",\n                element,\n                content;\n\n            try {\n                content = $(document.getElementById(that.content) || that.content); // support passing id without #\n\n                if (content[0].tagName === SCRIPT) {\n                    content = content.html();\n                }\n            } catch (e) {\n                if (sizzleErrorRegExp.test(e.message)) {\n                    content = that.content;\n                }\n            }\n\n            if (typeof content === \"string\") {\n                content = content.replace(/^\\s+|\\s+$/g, '');\n                if (that._evalTemplate) {\n                    content = kendo.template(content, { useWithBlock: that._useWithBlock })(that.model || {});\n                }\n\n                element = $(wrapper).append(content);\n                // drop the wrapper if asked - this seems like the easiest (although not very intuitive) way to avoid messing up templates with questionable content, like this one for instance:\n                // <script id=\"my-template\">\n                // foo\n                // <span> Span </span>\n                // </script>\n                if (!that._wrap) {\n                   element = element.contents();\n                }\n            } else {\n                element = content;\n                if (that._evalTemplate) {\n                    var result = $(kendo.template($(\"<div />\").append(element.clone(true)).html(), { useWithBlock: that._useWithBlock })(that.model || {}));\n\n                    // template uses DOM\n                    if ($.contains(document, element[0])) {\n                        element.replaceWith(result);\n                    }\n\n                    element = result;\n                }\n                if (that._wrap) {\n                    element = element.wrapAll(wrapper).parent();\n                }\n            }\n\n            return element;\n        },\n\n        _renderSections: function() {\n            var that = this;\n\n            if (that.options.wrapInSections) {\n                that._wrapper();\n                that._createContent();\n                that._createHeader();\n                that._createFooter();\n            }\n        },\n\n        _wrapper: function() {\n            var that = this;\n            var content = that.content;\n\n            if (content.is(roleSelector(\"view\"))) {\n                that.wrapper = that.content;\n            } else {\n                that.wrapper = content\n                    .wrap('<div data-' + kendo.ns + 'stretch=\"true\" data-' + kendo.ns + 'role=\"view\" data-' + kendo.ns + 'init-widgets=\"false\"></div>')\n                    .parent();\n            }\n\n            var wrapper = that.wrapper;\n\n            wrapper.attr(\"id\", that.id);\n\n            wrapper.addClass(classNames.view);\n            wrapper.addClass(classNames.widget);\n            wrapper.attr(\"role\", \"view\");\n        },\n\n        _createContent: function() {\n            var that = this;\n            var wrapper = $(that.wrapper);\n            var contentSelector = roleSelector(\"content\");\n\n            if (!wrapper.children(contentSelector)[0]) {\n                var ccontentElements = wrapper.children().filter(function() {\n                    var child = $(this);\n                    if (!child.is(roleSelector(\"header\")) && !child.is(roleSelector(\"footer\"))) {\n                        return child;\n                    }\n                });\n\n                ccontentElements.wrap(\"<div \" + attr(\"role\") + '=\"content\"></div>');\n            }\n\n            // use contentElement instead of content as view.content can be a string\n            this.contentElement = wrapper.children(roleSelector(\"content\"));\n\n            this.contentElement\n                .addClass(classNames.stretchedView)\n                .addClass(classNames.content);\n        },\n\n        _createHeader: function() {\n            var that = this;\n            var wrapper = that.wrapper;\n\n            this.header = wrapper.children(roleSelector(\"header\")).addClass(classNames.header);\n        },\n\n        _createFooter: function() {\n            var that = this;\n            var wrapper = that.wrapper;\n\n            this.footer = wrapper.children(roleSelector(\"footer\")).addClass(classNames.footer);\n        }\n    });\n\n    var ViewClone = kendo.Class.extend({\n        init: function(view) {\n            $.extend(this, {\n                element: view.element.clone(true),\n                transition: view.transition,\n                id: view.id\n            });\n\n            view.element.parent().append(this.element);\n        },\n\n        hideEnd: function() {\n            this.element.remove();\n        },\n\n        beforeTransition: $.noop,\n        afterTransition: $.noop\n    });\n\n    var Layout = View.extend({\n        init: function(content, options) {\n            View.fn.init.call(this, content, options);\n            this.containers = {};\n        },\n\n        container: function(selector) {\n            var container = this.containers[selector];\n\n            if (!container) {\n                container = this._createContainer(selector);\n                this.containers[selector] = container;\n            }\n\n            return container;\n        },\n\n        showIn: function(selector, view, transition) {\n            this.container(selector).show(view, transition);\n        },\n\n        _createContainer: function(selector) {\n            var root = this.render(),\n                element = root.find(selector),\n                container;\n\n            if (!element.length && root.is(selector)) {\n                if (root.is(selector)) {\n                    element = root;\n                } else {\n\n                    throw new Error(\"can't find a container with the specified \" + selector + \" selector\");\n                }\n            }\n\n            container = new ViewContainer(element);\n\n            container.bind(\"accepted\", function(e) {\n                e.view.render(element);\n            });\n\n            return container;\n        }\n    });\n\n    var Fragment = View.extend({\n        attach: function(view, placeholder) {\n            view.element.find(placeholder).replaceWith(this.render());\n        },\n\n        detach: function() {\n        }\n    });\n\n    var transitionRegExp = /^(\\w+)(:(\\w+))?( (\\w+))?$/;\n\n    function parseTransition(transition) {\n        if (!transition) {\n            return {};\n        }\n\n        var matches = transition.match(transitionRegExp) || [];\n\n        return {\n            type: matches[1],\n            direction: matches[3],\n            reverse: matches[5] === \"reverse\"\n        };\n    }\n\n    var ViewContainer = Observable.extend({\n        init: function(container) {\n            Observable.fn.init.call(this);\n            this.container = container;\n            this.history = [];\n            this.view = null;\n            this.running = false;\n        },\n\n        after: function() {\n            this.running = false;\n            this.trigger(\"complete\", { view: this.view });\n            this.trigger(\"after\");\n        },\n\n        end: function() {\n            this.view.showEnd();\n            this.previous.hideEnd();\n            this.after();\n        },\n\n        show: function(view, transition, locationID) {\n            if (!view.triggerBeforeShow() || (this.view && !this.view.triggerBeforeHide())) {\n                this.trigger(\"after\");\n                return false;\n            }\n\n            locationID = locationID || view.id;\n\n            var that = this,\n                current = (view === that.view) ? view.clone() : that.view,\n                history = that.history,\n                previousEntry = history[history.length - 2] || {},\n                back = previousEntry.id === locationID,\n                // If explicit transition is set, it will be with highest priority\n                // Next we will try using the history record transition or the view transition configuration\n                theTransition = transition || ( back ? history[history.length - 1].transition : view.transition ),\n                transitionData = parseTransition(theTransition);\n\n            if (that.running) {\n                that.effect.stop();\n            }\n\n            if (theTransition === \"none\") {\n                theTransition = null;\n            }\n\n            that.trigger(\"accepted\", { view: view });\n            that.view = view;\n            that.previous = current;\n            that.running = true;\n\n            if (!back) {\n                history.push({ id: locationID, transition: theTransition });\n            } else {\n                history.pop();\n            }\n\n            if (!current) {\n                view.showStart();\n                view.showEnd();\n                that.after();\n                return true;\n            }\n\n            if (!theTransition || !kendo.effects.enabled) {\n                view.showStart();\n                that.end();\n            } else {\n                // hide the view element before init/show - prevents blinks on iPad\n                // the replace effect will remove this class\n                view.element.addClass(\"k-fx-hidden\");\n                view.showStart();\n                // do not reverse the explicit transition\n                if (back && !transition) {\n                    transitionData.reverse = !transitionData.reverse;\n                }\n\n                that.effect = kendo.fx(view.element).replace(current.element, transitionData.type)\n                    .beforeTransition(function() {\n                        view.beforeTransition(\"show\");\n                        current.beforeTransition(\"hide\");\n                    })\n                    .afterTransition(function() {\n                        view.afterTransition(\"show\");\n                        current.afterTransition(\"hide\");\n                    })\n                    .direction(transitionData.direction)\n                    .setReverse(transitionData.reverse);\n\n                that.effect.run().then(function() { that.end(); });\n            }\n\n            return true;\n        },\n\n        destroy: function() {\n            var that = this;\n            var view = that.view;\n\n            if (view && view.destroy) {\n                view.destroy();\n            }\n        }\n    });\n\n    var ViewEngine = Observable.extend({\n        init: function(options) {\n            var that = this,\n                views,\n                container;\n\n            Observable.fn.init.call(that);\n            that.options = options;\n\n            $.extend(that, options);\n            that.sandbox = $(\"<div />\");\n            container = that.container;\n\n            views = that._hideViews(container);\n            that.rootView = views.first();\n            that.layouts = {};\n\n            that.viewContainer = new kendo.ViewContainer(that.container);\n\n            that.viewContainer.bind(\"accepted\", function(e) {\n                e.view.params = that.params;\n            });\n\n            that.viewContainer.bind(\"complete\", function(e) {\n                that.trigger(VIEW_SHOW, { view: e.view });\n            });\n\n            that.viewContainer.bind(AFTER, function() {\n                that.trigger(AFTER);\n            });\n\n            this.bind(this.events, options);\n        },\n\n        events: [\n            SHOW_START,\n            AFTER,\n            VIEW_SHOW,\n            LOAD_START,\n            LOAD_COMPLETE,\n            SAME_VIEW_REQUESTED,\n            VIEW_TYPE_DETERMINED\n        ],\n\n        destroy: function() {\n            var that = this;\n            var viewContainer = that.viewContainer;\n\n            kendo.destroy(that.container);\n\n            for (var id in that.layouts) {\n                this.layouts[id].destroy();\n            }\n\n            if (viewContainer) {\n                viewContainer.destroy();\n            }\n        },\n\n        view: function() {\n            return this.viewContainer.view;\n        },\n\n        showView: function(url, transition, params) {\n            url = url.replace(new RegExp(\"^\" + this.remoteViewURLPrefix), \"\");\n            if (url === \"\" && this.remoteViewURLPrefix) {\n                url = \"/\";\n            }\n\n            if (url.replace(/^#/, \"\") === this.url) {\n                this.trigger(SAME_VIEW_REQUESTED);\n                return false;\n            }\n\n            this.trigger(SHOW_START);\n\n            var that = this,\n                element = that._findViewElement(url),\n                view = kendo.widgetInstance(element);\n\n            that.url = url.replace(/^#/, \"\");\n\n            that.params = params;\n\n            if (view && view.reload) {\n                view.purge();\n                element = [];\n            }\n\n            this.trigger(VIEW_TYPE_DETERMINED, { remote: element.length === 0, url: url });\n\n            if (element[0]) {\n                if (!view) {\n                    view = that._createView(element);\n                }\n\n                return that.viewContainer.show(view, transition, url);\n            } else {\n                return true;\n            }\n        },\n\n        append: function(html, url) {\n            var sandbox = this.sandbox,\n                urlPath = (url || \"\").split(\"?\")[0],\n                container = this.container,\n                views,\n                view;\n\n            if (html.indexOf(\"<body\") > -1) {\n                html = $(\"<div>\").append(html).html();\n            }\n\n            sandbox[0].innerHTML = html;\n\n            container.append(sandbox.children(\"script, style\"));\n\n            views = this._hideViews(sandbox);\n            view = views.first();\n\n            // Generic HTML content found as remote view - no remote view markers\n            if (!view.length) {\n                views = view = sandbox.wrapInner(\"<div data-role=view />\").children(); // one element\n            }\n\n            if (urlPath) {\n                view.hide().attr(attr(\"url\"), urlPath);\n            }\n\n            container.append(views);\n\n            html = null; // Garbage collection.\n            return this._createView(view);\n        },\n\n        _locate: function(selectors) {\n            return roleSelector(selectors);\n        },\n\n        _findViewElement: function(url) {\n            var element,\n                urlPath = url.split(\"?\")[0];\n\n            if (!urlPath) {\n                return this.rootView;\n            }\n\n            element = this.container.children(\"[\" + attr(\"url\") + \"='\" + urlPath + \"']\");\n\n            // do not try to search for \"#/foo/bar\" id, jQuery throws error\n            if (!element[0] && urlPath.indexOf(\"/\") === -1) {\n                element = this.container.children(urlPath.charAt(0) === \"#\" ? urlPath : \"#\" + urlPath);\n            }\n\n            if (!element[0]) {\n                element = this._findViewElementById(url);\n            }\n\n            return element;\n        },\n\n        _findViewElementById: function(id) {\n            var element = this.container.children(\"[id='\" + id + \"']\");\n            return element;\n        },\n\n        _createView: function(element) {\n            //return this._createMobileView(element);\n            return this._createSpaView(element);\n        },\n\n        _createMobileView: function(element) {\n            return kendo.initWidget(element, {\n                defaultTransition: this.transition,\n                loader: this.loader,\n                container: this.container,\n                getLayout: this.getLayoutProxy,\n                modelScope: this.modelScope,\n                reload: attrValue(element, \"reload\")\n            }, ui.roles);\n        },\n\n        _createSpaView: function(element) {\n            var viewOptions = (this.options || {}).viewOptions || {};\n            return new kendo.View(element, {\n                renderOnInit: viewOptions.renderOnInit,\n                wrap: viewOptions.wrap || false,\n                wrapInSections: viewOptions.wrapInSections,\n                detachOnHide: viewOptions.detachOnHide,\n                detachOnDestroy: viewOptions.detachOnDestroy\n            });\n        },\n\n        _hideViews: function(container) {\n            return container.children(this._locate(\"view\")).hide();\n        }\n    });\n\n    kendo.ViewEngine = ViewEngine;\n\n    kendo.ViewContainer = ViewContainer;\n    kendo.Fragment = Fragment;\n    kendo.Layout = Layout;\n    kendo.View = View;\n    kendo.ViewClone = ViewClone;\n\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.view.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.virtuallist.js":
/*!*************************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.virtuallist.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.data.js */ \"./node_modules/kendo-ui-core/esm/kendo.data.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\nlet $ = kendo.jQuery;\n\nfunction valueMapperOptions(options, value, callback) {\n    return {\n        value: (options.selectable === \"multiple\" || options.checkboxes) ? value : value[0],\n        success: function(response) {\n            callback(response);\n        }\n    };\n}\n\nvar __meta__ = {\n    id: \"virtuallist\",\n    name: \"VirtualList\",\n    category: \"framework\",\n    depends: [ \"data\" ],\n    hidden: true\n};\n\n(function($, undefined$1) {\n    var kendo = __webpack_provided_window_dot_kendo,\n        ui = kendo.ui,\n        encode = kendo.htmlEncode,\n        Widget = ui.Widget,\n        DataBoundWidget = ui.DataBoundWidget,\n        percentageUnitsRegex = /^\\d+(\\.\\d+)?%$/i,\n        LIST_CONTENT = \"k-list-content k-virtual-content\",\n        TABLE_CONTENT = \"k-table-body k-table-scroller\",\n        HEADER = \"k-list-group-sticky-header\",\n        LIST_ITEM = \"k-list-item\",\n        TABLE_ITEM = \"k-table-row\",\n        HEIGHTCONTAINER = \"k-height-container\",\n        GROUPITEM = \"k-list-item-group-label\",\n        LIST_UL = \"k-list-ul\",\n        TABLE_LIST = \"k-table-list\",\n\n        SELECTED = \"k-selected\",\n        FOCUSED = \"k-focus\",\n        HOVER = \"k-hover\",\n        CHANGE = \"change\",\n        CLICK = \"click\",\n        LISTBOUND = \"listBound\",\n        ITEMCHANGE = \"itemChange\",\n\n        ACTIVATE = \"activate\",\n        DEACTIVATE = \"deactivate\",\n\n        GROUP_ROW_SEL = \".k-table-group-row\",\n\n        VIRTUAL_LIST_NS = \".VirtualList\";\n\n    function lastFrom(array) {\n        return array[array.length - 1];\n    }\n\n    function toArray(value) {\n        return value instanceof Array ? value : [value];\n    }\n\n    function isPrimitive(dataItem) {\n        return typeof dataItem === \"string\" || typeof dataItem === \"number\" || typeof dataItem === \"boolean\";\n    }\n\n    function getItemCount(screenHeight, listScreens, itemHeight) {\n        return Math.ceil(screenHeight * listScreens / itemHeight);\n    }\n\n    function appendChild(parent, className, tagName) {\n        var element = document.createElement(tagName || \"div\");\n        if (className) {\n            element.className = className;\n        }\n        parent.appendChild(element);\n\n        return element;\n    }\n\n    function getDefaultItemHeight(listSize) {\n        var mockList = $('<div class=\"k-list ' + listSize + ' k-virtual-list\">' +\n                '<div class=\"k-list-content k-virtual-content\">' +\n                    '<ul class=\"k-list-ul\">' +\n                        '<li class=\"k-list-item\">' +\n                            '<span class=\"k-list-item-text\">test</span>' +\n                        '</li>' +\n                    '</ul>' +\n                '</div>' +\n            '</div>');\n        var lineHeight;\n\n        mockList.css({\n            position: \"absolute\",\n            left: \"-200000px\",\n            visibility: \"hidden\"\n        });\n        mockList.appendTo(document.body);\n        lineHeight = parseFloat(kendo.getComputedStyles(mockList.find(\".k-list-item\")[0], [\"height\"]).height);\n        mockList.remove();\n\n        return lineHeight;\n    }\n\n    function bufferSizes(screenHeight, listScreens, opposite) { //in pixels\n        return {\n            down: screenHeight * opposite,\n            up: screenHeight * (listScreens - 1 - opposite)\n        };\n    }\n\n    function listValidator(options, screenHeight) {\n        var downThreshold = (options.listScreens - 1 - options.threshold) * screenHeight;\n        var upThreshold = options.threshold * screenHeight;\n\n        return function(list, scrollTop, lastScrollTop) {\n            if (scrollTop > lastScrollTop) {\n                return scrollTop - list.top < downThreshold;\n            } else {\n                return list.top === 0 || scrollTop - list.top > upThreshold;\n            }\n        };\n    }\n\n    function scrollCallback(element, callback) {\n        return function(force) {\n            return callback(element.scrollTop, force);\n        };\n    }\n\n    function syncList(reorder) {\n        return function(list, force) {\n            reorder(list.items, list.index, force);\n            return list;\n        };\n    }\n\n    function position(element, y) {\n        element.style.webkitTransform = 'translateY(' + y + \"px)\";\n        element.style.transform = 'translateY(' + y + \"px)\";\n    }\n\n    function map2(callback, templates) {\n        return function(arr1, arr2) {\n            for (var i = 0, len = arr1.length; i < len; i++) {\n                callback(arr1[i], arr2[i], templates);\n                if (arr2[i].item) {\n                    this.trigger(ITEMCHANGE, { item: $(arr1[i]), data: arr2[i].item, ns: kendo.ui });\n                }\n            }\n        };\n    }\n\n    function reshift(items, diff) {\n        var range;\n\n        if (diff > 0) { // down\n            range = items.splice(0, diff);\n            items.push.apply(items, range);\n        } else { // up\n            range = items.splice(diff, -diff);\n            items.unshift.apply(items, range);\n        }\n\n        return range;\n    }\n\n    function render(element, data, templates) {\n        var itemTemplate = templates.template,\n            hasColumns = this.options.columns && this.options.columns.length,\n            altRow = data.index % 2 === 1 ? \"k-table-alt-row\" : \"\";\n\n        element = $(element);\n\n        if (!data.item) {\n            itemTemplate = templates.placeholderTemplate;\n        }\n\n        if (data.index === 0 && this.header && data.group) {\n            this.header.html(templates.fixedGroupTemplate(data.group));\n        }\n\n        element\n            .attr(\"data-uid\", data.item ? data.item.uid : \"\")\n            .attr(\"data-offset-index\", data.index);\n\n        if (hasColumns && data.item) {\n            if (altRow.length > 0) {\n                element.addClass(altRow);\n            } else {\n                element.removeClass(\"k-table-alt-row\");\n            }\n\n            let renderedColumns = $(renderColumns(this.options, data.item, templates));\n            kendo.applyStylesFromKendoAttributes(renderedColumns, [\"width\", \"max-width\"]);\n            element.empty().append(renderedColumns);\n        } else {\n            element.find(\".\" + GROUPITEM).remove();\n            element.find(\".k-list-item-text\").html(itemTemplate(data.item || {}));\n        }\n\n        element.toggleClass(FOCUSED, data.current);\n        element.toggleClass(SELECTED, data.selected);\n        element.toggleClass(\"k-first\", data.newGroup);\n        element.toggleClass(\"k-last\", data.isLastGroupedItem);\n        element.toggleClass(\"k-loading-item\", !data.item);\n\n        if (data.index !== 0 && data.newGroup) {\n            if (hasColumns) {\n                $('<span class=\"k-table-td k-table-group-td\"><span>' + templates.groupTemplate(data.group) + '</span></span>')\n                    .appendTo(element);\n            } else {\n                $(\"<div class=\" + GROUPITEM + \"></div>\")\n                    .appendTo(element)\n                    .html(templates.groupTemplate(data.group));\n            }\n        } else if (data.group && hasColumns) {\n            element.append($('<span class=\"k-table-td k-table-spacer-td\"></span>'));\n        }\n\n        if (data.top !== undefined$1) {\n            position(element[0], data.top);\n        }\n    }\n\n    function renderColumns(options, dataItem, templates) {\n        var item = \"\";\n\n        for (var i = 0; i < options.columns.length; i++) {\n            var currentWidth = options.columns[i].width;\n            var currentWidthInt = parseInt(currentWidth, 10);\n            var widthStyle = '';\n\n            if (currentWidth) {\n                let widthValue = `${currentWidthInt}${percentageUnitsRegex.test(currentWidth) ? \"%\" : \"px\"}`;\n                widthStyle = `${kendo.attr(\"style-width\")}=\"${widthValue}\" ${kendo.attr(\"style-max-width\")}=\"${widthValue}\"`;\n            }\n\n            item += \"<span class='k-table-td' \" + widthStyle + \">\";\n            item += templates[\"column\" + i](dataItem);\n            item += \"</span>\";\n        }\n\n        return item;\n    }\n\n    function mapChangedItems(selected, itemsToMatch) {\n        var itemsLength = itemsToMatch.length;\n        var selectedLength = selected.length;\n        var dataItem;\n        var found;\n        var i, j;\n\n        var changed = [];\n        var unchanged = [];\n\n        if (selectedLength) {\n            for (i = 0; i < selectedLength; i++) {\n                dataItem = selected[i];\n                found = false;\n\n                for (j = 0; j < itemsLength; j++) {\n                    if (dataItem === itemsToMatch[j]) {\n                        found = true;\n                        changed.push({ index: i, item: dataItem });\n                        break;\n                    }\n                }\n\n                if (!found) {\n                    unchanged.push(dataItem);\n                }\n            }\n        }\n\n        return {\n            changed: changed,\n            unchanged: unchanged\n        };\n    }\n\n    function isActivePromise(promise) {\n        return promise && promise.state() !== \"resolved\";\n    }\n\n    var VirtualList = DataBoundWidget.extend({\n        init: function(element, options) {\n            var that = this,\n                contentClasses = options.columns && options.columns.length ? TABLE_CONTENT : LIST_CONTENT;\n\n            that.bound(false);\n            that._fetching = false;\n\n            Widget.fn.init.call(that, element, options);\n\n            if (!that.options.itemHeight) {\n                that.options.itemHeight = getDefaultItemHeight(options.listSize);\n            }\n\n            options = that.options;\n\n            that.element.attr(\"role\", \"listbox\");\n\n            var contentSelector = \".\" + contentClasses.split(' ').join('.');\n            var wrapper = that.element.closest(contentSelector);\n\n            that.content = that.wrapper = wrapper.length ? wrapper : that.element.wrap(\"<div unselectable='on' class='\" + contentClasses + \"'></div>\").parent();\n\n            if (that.options.columns && that.options.columns.length) {\n                var thead = that.element.closest(\".k-data-table\").find('.k-table-thead');\n                var row = $('<tr class=\"k-table-group-row\">' +\n                    '<th class=\"k-table-th\" colspan=\"' + that.options.columns.length + '\"></th>' +\n                '</tr>');\n\n                thead.append(row);\n\n                that.header = row.find(\".k-table-th\");\n                that.element.addClass(TABLE_LIST + \" k-virtual-table\");\n            } else {\n                that.header = that.content.before(\"<div class='\" + HEADER + \"'></div>\").prev();\n                that.element.addClass(LIST_UL);\n            }\n\n            if (options.ariaLabel) {\n                this.element.attr(\"aria-label\", options.ariaLabel);\n            } else if (options.ariaLabelledBy) {\n                this.element.attr(\"aria-labelledby\", options.ariaLabelledBy);\n            }\n\n            that.element.on(\"mouseenter\" + VIRTUAL_LIST_NS, \"li:not(.k-loading-item)\", function() { $(this).addClass(HOVER); })\n                        .on(\"mouseleave\" + VIRTUAL_LIST_NS, \"li\", function() { $(this).removeClass(HOVER); });\n\n            that._values = toArray(that.options.value);\n            that._selectedDataItems = [];\n            that._selectedIndexes = [];\n            that._rangesList = {};\n            that._promisesList = [];\n            that._optionID = kendo.guid();\n\n            that._templates();\n\n            that.setDataSource(options.dataSource);\n\n            that.content.on(\"scroll\" + VIRTUAL_LIST_NS, kendo.throttle(function() {\n                that._renderItems();\n                that._triggerListBound();\n            }, options.delay));\n\n            that._selectable();\n        },\n\n        options: {\n            name: \"VirtualList\",\n            autoBind: true,\n            delay: 100,\n            height: null,\n            listScreens: 4,\n            threshold: 0.5,\n            itemHeight: null,\n            oppositeBuffer: 1,\n            type: \"flat\",\n            selectable: false,\n            value: [],\n            dataValueField: null,\n            template: (data) => encode(data),\n            placeholderTemplate: () => \"loading...\",\n            groupTemplate: (data) => encode(data),\n            fixedGroupTemplate: (data) => encode(data),\n            mapValueTo: \"index\",\n            valueMapper: null,\n            ariaLabel: null,\n            ariaLabelledBy: null\n        },\n\n        events: [\n            CHANGE,\n            CLICK,\n            LISTBOUND,\n            ITEMCHANGE,\n            ACTIVATE,\n            DEACTIVATE\n        ],\n\n        setOptions: function(options) {\n            var itemClass = this.options.columns && this.options.columns.length ? TABLE_ITEM : LIST_ITEM;\n\n            Widget.fn.setOptions.call(this, options);\n\n            if (this._selectProxy && this.options.selectable === false) {\n                this.element.off(CLICK, \".\" + itemClass, this._selectProxy);\n            } else if (!this._selectProxy && this.options.selectable) {\n                this._selectable();\n            }\n\n            this._templates();\n            this.refresh();\n        },\n\n        items: function() {\n            return $(this._items);\n        },\n\n        destroy: function() {\n            this.wrapper.off(VIRTUAL_LIST_NS);\n            this.dataSource.unbind(CHANGE, this._refreshHandler);\n            Widget.fn.destroy.call(this);\n        },\n\n        setDataSource: function(source) {\n            var that = this;\n            var dataSource = source || {};\n            var value;\n\n            dataSource = Array.isArray(dataSource) ? { data: dataSource } : dataSource;\n            dataSource = kendo.data.DataSource.create(dataSource);\n\n            if (that.dataSource) {\n                that.dataSource.unbind(CHANGE, that._refreshHandler);\n\n                that._clean();\n                that.bound(false);\n\n                that._deferValueSet = true;\n                value = that.value();\n\n                that.value([]);\n                that.mute(function() {\n                    that.value(value);\n                });\n            } else {\n                that._refreshHandler = that.refresh.bind(that);\n            }\n\n            that.dataSource = dataSource.bind(CHANGE, that._refreshHandler);\n\n            that.setDSFilter(dataSource.filter());\n\n            if (dataSource.view().length !== 0) {\n                that.refresh();\n            } else if (that.options.autoBind) {\n                dataSource.fetch();\n            }\n        },\n\n        skip: function() {\n            return this.dataSource.currentRangeStart();\n        },\n\n        _triggerListBound: function() {\n            var that = this;\n            var skip = that.skip();\n\n            if (that.bound() && !that._selectingValue && that._skip !== skip) {\n                that._skip = skip;\n                that.trigger(LISTBOUND);\n            }\n        },\n\n        _getValues: function(dataItems) {\n            var getter = this._valueGetter;\n\n            return $.map(dataItems, function(dataItem) {\n                return getter(dataItem);\n            });\n        },\n\n        _highlightSelectedItems: function() {\n            for (var i = 0; i < this._selectedDataItems.length; i++) {\n                var item = this._getElementByDataItem(this._selectedDataItems[i]);\n                if (item.length) {\n                    item.addClass(SELECTED);\n                }\n            }\n        },\n\n        refresh: function(e) {\n            var that = this;\n            var action = e && e.action;\n            var isItemChange = action === \"itemchange\";\n            var filtered = this.isFiltered();\n            var result;\n\n            if (that._mute) { return; }\n\n            that._deferValueSet = false;\n\n            if (!that._fetching) {\n                if (filtered) {\n                    that.focus(0);\n                }\n\n                that._createList();\n                if (!action && that._values.length && !filtered &&\n                     !that.options.skipUpdateOnBind && !that._emptySearch) {\n                    that._selectingValue = true;\n\n                    that.bound(true);\n                    that.value(that._values, true).done(function() {\n                        that._selectingValue = false;\n                        that._triggerListBound();\n                    });\n                } else {\n                    that.bound(true);\n                    that._highlightSelectedItems();\n                    that._triggerListBound();\n                }\n            } else {\n                if (that._renderItems) {\n                    that._renderItems(true);\n                }\n\n                that._triggerListBound();\n            }\n\n            if (isItemChange || action === \"remove\") {\n                result = mapChangedItems(that._selectedDataItems, e.items);\n                if (result.changed.length) {\n                    if (isItemChange) {\n                        that.trigger(\"selectedItemChange\", {\n                            items: result.changed\n                        });\n                    } else {\n                        that.value(that._getValues(result.unchanged));\n                    }\n                }\n            }\n\n            that._fetching = false;\n        },\n\n        removeAt: function(position) {\n            var value = this._values.splice(position, 1)[0];\n\n            return {\n                position: position,\n                dataItem: this._removeSelectedDataItem(value)\n            };\n        },\n\n        _removeSelectedDataItem: function(value) {\n            var that = this,\n                valueGetter = that._valueGetter;\n\n            for (var idx in that._selectedDataItems) {\n                if (valueGetter(that._selectedDataItems[idx]) === value) {\n                    that._selectedIndexes.splice(idx, 1);\n                    return that._selectedDataItems.splice(idx, 1)[0];\n                }\n            }\n        },\n\n        setValue: function(value) {\n            this._values = toArray(value);\n        },\n\n        value: function(value, _forcePrefetch) {\n            var that = this;\n\n            if (value === undefined$1) {\n                return that._values.slice();\n            }\n\n            if (value === null) {\n                value = [];\n            }\n\n            value = toArray(value);\n\n            if (!that._valueDeferred || that._valueDeferred.state() === \"resolved\") {\n                that._valueDeferred = $.Deferred();\n            }\n\n            var shouldClear = that.options.selectable === \"multiple\" && that.select().length && value.length;\n\n            if (shouldClear || !value.length) {\n                that.select(-1);\n            }\n\n            that._values = value;\n\n            if ((that.bound() && !that._mute && !that._deferValueSet) || _forcePrefetch) {\n                that._prefetchByValue(value);\n            }\n\n            return that._valueDeferred;\n        },\n\n        _checkValuesOrder: function(value) {\n            if (this._removedAddedIndexes &&\n                this._removedAddedIndexes.length === value.length) {\n                    var newValue = this._removedAddedIndexes.slice();\n                    this._removedAddedIndexes = null;\n                return newValue;\n            }\n\n            return value;\n        },\n\n        _prefetchByValue: function(value) {\n            var that = this,\n                dataView = that._dataView,\n                valueGetter = that._valueGetter,\n                mapValueTo = that.options.mapValueTo,\n                item, match = false,\n                forSelection = [];\n\n            //try to find the items in the loaded data\n            for (var i = 0; i < value.length; i++) {\n                for (var idx = 0; idx < dataView.length; idx++) {\n                    item = dataView[idx].item;\n                    if (item) {\n                        match = isPrimitive(item) ? value[i] === item : value[i] === valueGetter(item);\n\n                        if (match) {\n                            forSelection.push(dataView[idx].index);\n                        }\n                    }\n                }\n            }\n\n            if (forSelection.length === value.length) {\n                that._values = [];\n                that.select(forSelection);\n                return;\n            }\n\n            //prefetch the items\n            if (typeof that.options.valueMapper === \"function\") {\n                const callback = mapValueTo === 'index' ? that.mapValueToIndex : that.mapValueToDataItem;\n                that.options.valueMapper(valueMapperOptions(this.options, value, callback.bind(that)));\n            } else {\n                 if (!that.value()[0]) {\n                     that.select([-1]);\n                 } else {\n                    that._selectingValue = false;\n                    that._triggerListBound();\n                 }\n            }\n        },\n\n        mapValueToIndex: function(indexes) {\n            if (indexes === undefined$1 || indexes === -1 || indexes === null) {\n                indexes = [];\n            } else {\n                indexes = toArray(indexes);\n            }\n\n            if (!indexes.length) {\n                indexes = [-1];\n            } else {\n                var removed = this._deselect([]).removed;\n                if (removed.length) {\n                    this._triggerChange(removed, []);\n                }\n            }\n\n            this.select(indexes);\n        },\n\n        mapValueToDataItem: function(dataItems) {\n            var removed, added;\n\n            if (dataItems === undefined$1 || dataItems === null) {\n                dataItems = [];\n            } else {\n                dataItems = toArray(dataItems);\n            }\n\n            if (!dataItems.length) {\n                this.select([-1]);\n            } else {\n                removed = $.map(this._selectedDataItems, function(item, index) {\n                    return { index: index, dataItem: item };\n                });\n\n                added = $.map(dataItems, function(item, index) {\n                    return { index: index, dataItem: item };\n                });\n\n                this._selectedDataItems = dataItems;\n\n                this._selectedIndexes = [];\n\n                for (var i = 0; i < this._selectedDataItems.length; i++) {\n                    var item = this._getElementByDataItem(this._selectedDataItems[i]);\n                    this._selectedIndexes.push(this._getIndecies(item)[0]);\n                    item.addClass(SELECTED);\n                }\n\n                this._triggerChange(removed, added);\n\n                if (this._valueDeferred) {\n                    this._valueDeferred.resolve();\n                }\n            }\n        },\n\n        deferredRange: function(index) {\n            var dataSource = this.dataSource;\n            var take = this.itemCount;\n            var ranges = this._rangesList;\n            var result = $.Deferred();\n            var defs = [];\n\n            var low = Math.floor(index / take) * take;\n            var high = Math.ceil(index / take) * take;\n\n            var pages = high === low ? [ high ] : [ low, high ];\n\n            $.each(pages, function(_, skip) {\n                var end = skip + take;\n                var existingRange = ranges[skip];\n                var deferred;\n\n                if (!existingRange || (existingRange.end !== end)) {\n                    deferred = $.Deferred();\n                    ranges[skip] = { end: end, deferred: deferred };\n\n                    dataSource._multiplePrefetch(skip, take, function() {\n                        deferred.resolve();\n                    });\n                } else {\n                    deferred = existingRange.deferred;\n                }\n\n                defs.push(deferred);\n            });\n\n            $.when.apply($, defs).done(function() {\n                result.resolve();\n            });\n\n            return result;\n        },\n\n        prefetch: function(indexes) {\n            var that = this,\n                take = this.itemCount,\n                isEmptyList = !that._promisesList.length;\n\n            if (!isActivePromise(that._activeDeferred)) {\n                that._activeDeferred = $.Deferred();\n                that._promisesList = [];\n            }\n\n            $.each(indexes, function(_, index) {\n                that._promisesList.push(that.deferredRange(that._getSkip(index, take)));\n            });\n\n            if (isEmptyList) {\n                $.when.apply($, that._promisesList).done(function() {\n                    that._promisesList = [];\n                    that._activeDeferred.resolve();\n                });\n            }\n\n            return that._activeDeferred;\n        },\n\n        _findDataItem: function(view, index) {\n            var group;\n\n            //find in grouped view\n            if (this.options.type === \"group\") {\n                for (var i = 0; i < view.length; i++) {\n                    group = view[i].items;\n                    if (group.length <= index) {\n                        index = index - group.length;\n                    } else {\n                        return group[index];\n                    }\n                }\n            }\n\n            //find in flat view\n            return view[index];\n        },\n\n        _getRange: function(skip, take) {\n            return this.dataSource._findRange(skip, Math.min(skip + take, this.dataSource.total()));\n        },\n\n        dataItemByIndex: function(index) {\n            var that = this;\n            var take = that.itemCount;\n            var skip = that._getSkip(index, take);\n            var view = this._getRange(skip, take);\n\n            //should not return item if data is not loaded\n            if (!that._getRange(skip, take).length) {\n                return null;\n            }\n\n            if (that.options.type === \"group\") {\n                kendo.ui.progress($(that.wrapper), true);\n                that.mute(function() {\n                    that.dataSource.range(skip, take, function() {\n                        kendo.ui.progress($(that.wrapper), false);\n                    });\n                    view = that.dataSource.view();\n                });\n            }\n\n            return that._findDataItem(view, [index - skip]);\n        },\n\n        selectedDataItems: function() {\n            return this._selectedDataItems.slice();\n        },\n\n        scrollWith: function(value) {\n            this.content.scrollTop(this.content.scrollTop() + value);\n        },\n\n        scrollTo: function(y) {\n            this.content.scrollTop(y); //works only if the element is visible\n        },\n\n        scrollToIndex: function(index) {\n            this.scrollTo(index * this.options.itemHeight);\n        },\n\n        focus: function(candidate) {\n            var element,\n                index,\n                data,\n                current,\n                itemHeight = this.options.itemHeight,\n                id = this._optionID,\n                triggerEvent = true;\n\n            if (candidate === undefined$1) {\n                current = this.element.find(\".\" + FOCUSED);\n                return current.length ? current : null;\n            }\n\n            if (typeof candidate === \"function\") {\n                data = this.dataSource.flatView();\n                for (var idx = 0; idx < data.length; idx++) {\n                    if (candidate(data[idx])) {\n                        candidate = idx;\n                        break;\n                    }\n                }\n            }\n\n            if (candidate instanceof Array) {\n                candidate = lastFrom(candidate);\n            }\n\n            if (isNaN(candidate)) {\n                element = $(candidate);\n                index = parseInt($(element).attr(\"data-offset-index\"), 10);\n            } else {\n                index = candidate;\n                element = this._getElementByIndex(index);\n            }\n\n            if (index === -1) {\n                this.element.find(\".\" + FOCUSED).removeClass(FOCUSED);\n                this._focusedIndex = undefined$1;\n                return;\n            }\n\n            if (element.length) { /*focus rendered item*/\n                if (element.hasClass(FOCUSED)) {\n                    triggerEvent = false;\n                }\n                if (this._focusedIndex !== undefined$1) {\n                    current = this._getElementByIndex(this._focusedIndex);\n                    current\n                        .removeClass(FOCUSED)\n                        .removeAttr(\"id\");\n\n                    if (triggerEvent) {\n                        this.trigger(DEACTIVATE);\n                    }\n                }\n\n                this._focusedIndex = index;\n\n                element\n                    .addClass(FOCUSED)\n                    .attr(\"id\", id);\n\n                var position = this._getElementLocation(index);\n\n                if (position === \"top\") {\n                    this.scrollTo(index * itemHeight);\n                } else if (position === \"bottom\") {\n                    this.scrollTo((index * itemHeight + itemHeight) - this._screenHeight);\n                } else if (position === \"outScreen\") {\n                    this.scrollTo(index * itemHeight);\n                }\n\n                if (triggerEvent) {\n                    this.trigger(ACTIVATE);\n                }\n            } else { /*focus non rendered item*/\n                this._focusedIndex = index;\n                this.items().removeClass(FOCUSED);\n                this.scrollToIndex(index);\n            }\n        },\n\n        focusIndex: function() {\n            return this._focusedIndex;\n        },\n\n        focusFirst: function() {\n            this.scrollTo(0);\n            this.focus(0);\n        },\n\n        focusLast: function() {\n            var lastIndex = this.dataSource.total();\n            this.scrollTo(this.heightContainer.offsetHeight);\n            this.focus(lastIndex - 1);\n        },\n\n        focusPrev: function() {\n            var index = this._focusedIndex;\n            var current;\n\n            if (!isNaN(index) && index > 0) {\n                index -= 1;\n                this.focus(index);\n\n                current = this.focus();\n                if (current && current.hasClass(\"k-loading-item\")) {\n                    index += 1;\n                    this.focus(index);\n                }\n\n                return index;\n            } else {\n                index = this.dataSource.total() - 1;\n                this.focus(index);\n                return index;\n            }\n        },\n\n        focusNext: function() {\n            var index = this._focusedIndex;\n            var lastIndex = this.dataSource.total() - 1;\n            var current;\n\n            if (!isNaN(index) && index < lastIndex) {\n                index += 1;\n                this.focus(index);\n\n                current = this.focus();\n                if (current && current.hasClass(\"k-loading-item\")) {\n                    index -= 1;\n                    this.focus(index);\n                }\n\n                return index;\n            } else {\n                index = 0;\n                this.focus(index);\n                return index;\n            }\n        },\n\n        _triggerChange: function(removed, added) {\n            removed = removed || [];\n            added = added || [];\n\n            if (removed.length || added.length) {\n                 this.trigger(CHANGE, {\n                    removed: removed,\n                    added: added\n                });\n            }\n        },\n\n        select: function(candidate) {\n            var that = this,\n                indices,\n                initialIndices,\n                singleSelection = that.options.selectable !== \"multiple\",\n                prefetchStarted = isActivePromise(that._activeDeferred),\n                filtered = this.isFiltered(),\n                isAlreadySelected,\n                deferred,\n                result,\n                removed = [];\n\n            if (candidate === undefined$1) {\n                return that._selectedIndexes.slice();\n            }\n\n            if (!that._selectDeferred || that._selectDeferred.state() === \"resolved\") {\n                that._selectDeferred = $.Deferred();\n            }\n\n            indices = that._getIndecies(candidate);\n            isAlreadySelected = singleSelection && !filtered && lastFrom(indices) === lastFrom(this._selectedIndexes);\n            removed = that._deselectCurrentValues(indices);\n\n            if (removed.length || !indices.length || isAlreadySelected) {\n                that._triggerChange(removed);\n\n                if (that._valueDeferred) {\n                    that._valueDeferred.resolve().promise();\n                }\n\n                return that._selectDeferred.resolve().promise();\n            }\n\n            if (indices.length === 1 && indices[0] === -1) {\n                indices = [];\n            }\n\n            initialIndices = indices;\n            result = that._deselect(indices);\n            removed = result.removed;\n            indices = result.indices;\n\n            if (singleSelection) {\n                prefetchStarted = false;\n                if (indices.length) {\n                    indices = [lastFrom(indices)];\n                }\n            }\n\n            var done = function() {\n                var added = that._select(indices);\n\n                if (initialIndices.length === indices.length || singleSelection) {\n                    that.focus(indices);\n                }\n\n                that._triggerChange(removed, added);\n\n                if (that._valueDeferred) {\n                    that._valueDeferred.resolve();\n                }\n\n                that._selectDeferred.resolve();\n            };\n\n            deferred = that.prefetch(indices);\n\n            if (!prefetchStarted) {\n                if (deferred) {\n                    deferred.done(done);\n                } else {\n                    done();\n                }\n            }\n\n            return that._selectDeferred.promise();\n        },\n\n        bound: function(bound) {\n            if (bound === undefined$1) {\n                return this._listCreated;\n            }\n\n            this._listCreated = bound;\n        },\n\n        mute: function(callback) {\n            this._mute = true;\n            callback();\n            this._mute = false;\n        },\n\n        setDSFilter: function(filter) {\n            this._lastDSFilter = $.extend({}, filter);\n        },\n\n        isFiltered: function() {\n            if (!this._lastDSFilter) {\n                this.setDSFilter(this.dataSource.filter());\n            }\n\n            return !kendo.data.Query.compareFilters(this.dataSource.filter(), this._lastDSFilter);\n        },\n\n        skipUpdate: $.noop,\n\n        _getElementByIndex: function(index) {\n            return this.items().filter(function(idx, element) {\n                return index === parseInt($(element).attr(\"data-offset-index\"), 10);\n            });\n        },\n\n        _getElementByDataItem: function(dataItem) {\n            var dataView = this._dataView,\n            valueGetter = this._valueGetter,\n                element, match;\n\n            for (var i = 0; i < dataView.length; i++) {\n                match = dataView[i].item && isPrimitive(dataView[i].item) ? dataView[i].item === dataItem : dataView[i].item && dataItem && valueGetter(dataView[i].item) == valueGetter(dataItem);\n                if (match) {\n                    element = dataView[i];\n                    break;\n                }\n            }\n\n            return element ? this._getElementByIndex(element.index) : $();\n        },\n\n        _clean: function() {\n            this.result = undefined$1;\n            this._lastScrollTop = undefined$1;\n            this._skip = undefined$1;\n            $(this.heightContainer).remove();\n            this.heightContainer = undefined$1;\n            this.element.empty();\n        },\n\n        _height: function() {\n            var hasData = !!this.dataSource.view().length,\n                height = this.options.height,\n                itemHeight = this.options.itemHeight,\n                total = this.dataSource.total();\n\n            if (!hasData) {\n                height = 0;\n            } else if (height / itemHeight > total) {\n                height = total * itemHeight;\n            }\n\n            return height;\n        },\n\n        setScreenHeight: function() {\n            var height = this._height();\n\n            this.content.height(height);\n            this._screenHeight = height;\n        },\n\n        screenHeight: function() {\n            return this._screenHeight;\n        },\n\n        _getElementLocation: function(index) {\n            var scrollTop = this.content.scrollTop(),\n                screenHeight = this._screenHeight,\n                itemHeight = this.options.itemHeight,\n                yPosition = index * itemHeight,\n                yDownPostion = yPosition + itemHeight,\n                screenEnd = scrollTop + screenHeight,\n                position;\n\n            if (yPosition === (scrollTop - itemHeight) || (yDownPostion > scrollTop && yPosition < scrollTop)) {\n                position = \"top\";\n            } else if (yPosition === screenEnd || (yPosition < screenEnd && screenEnd < yDownPostion)) {\n                position = \"bottom\";\n            } else if ((yPosition >= scrollTop) && (yPosition <= scrollTop + (screenHeight - itemHeight))) {\n                position = \"inScreen\";\n            } else {\n                position = \"outScreen\";\n            }\n\n            return position;\n        },\n\n        _templates: function() {\n            var options = this.options;\n            var templates = {\n                template: options.template,\n                placeholderTemplate: options.placeholderTemplate,\n                groupTemplate: options.groupTemplate,\n                fixedGroupTemplate: options.fixedGroupTemplate\n            };\n\n            if (options.columns) {\n                options.columns.forEach((column, i) => {\n                    var templateText = column.field ? column.field.toString() : \"text\";\n                    var templateFunc = data => encode(kendo.getter(templateText)(data));\n\n                    templates[\"column\" + i] = column.template || templateFunc;\n                });\n            }\n\n            for (var key in templates) {\n                if (typeof templates[key] !== \"function\") {\n                    templates[key] = kendo.template(templates[key] || \"\");\n                }\n            }\n\n            this.templates = templates;\n        },\n\n        _generateItems: function(element, count) {\n            var items = [],\n                item, text,\n                itemHeight = this.options.itemHeight + \"px\",\n                itemClass = this.options.columns && this.options.columns.length ? TABLE_ITEM : LIST_ITEM;\n\n            while (count-- > 0) {\n                text = document.createElement(\"span\");\n                text.className = \"k-list-item-text\";\n\n                item = document.createElement(\"li\");\n                item.tabIndex = -1;\n                item.className = itemClass;\n                item.setAttribute(\"role\", \"option\");\n                item.style.height = itemHeight;\n                item.style.minHeight = itemHeight;\n                item.appendChild(text);\n\n                element.appendChild(item);\n\n                items.push(item);\n            }\n\n            return items;\n        },\n\n        _saveInitialRanges: function() {\n            var ranges = this.dataSource._ranges;\n            var deferred = $.Deferred();\n            deferred.resolve();\n\n            this._rangesList = {};\n            for (var i = 0; i < ranges.length; i++) {\n                this._rangesList[ranges[i].start] = { end: ranges[i].end, deferred: deferred };\n            }\n        },\n\n        _createList: function() {\n            var that = this,\n                content = that.content.get(0),\n                options = that.options,\n                dataSource = that.dataSource;\n\n            if (that.bound()) {\n                that._clean();\n            }\n\n            that._saveInitialRanges();\n            that._buildValueGetter();\n            that.setScreenHeight();\n            that.itemCount = getItemCount(that._screenHeight, options.listScreens, options.itemHeight);\n\n            if (that.itemCount > dataSource.total()) {\n                that.itemCount = dataSource.total();\n            }\n\n            that._items = that._generateItems(that.element[0], that.itemCount);\n\n            that._setHeight(options.itemHeight * dataSource.total());\n            that.options.type = (dataSource.group() || []).length ? \"group\" : \"flat\";\n\n            if (that.options.type === \"flat\") {\n                if (that.header.closest(GROUP_ROW_SEL).length) {\n                    that.header.closest(GROUP_ROW_SEL).hide();\n                } else {\n                    that.header.hide();\n                }\n            } else {\n                if (that.header.closest(GROUP_ROW_SEL).length) {\n                    that.header.closest(GROUP_ROW_SEL).show();\n                } else {\n                    that.header.show();\n                }\n            }\n\n            that.getter = that._getter(function() {\n                that._renderItems(true);\n            });\n\n            that._onScroll = function(scrollTop, force) {\n                var getList = that._listItems(that.getter);\n                return that._fixedHeader(scrollTop, getList(scrollTop, force));\n            };\n\n            that._renderItems = that._whenChanged(\n                scrollCallback(content, that._onScroll),\n                syncList(that._reorderList(that._items, render.bind(that)))\n            );\n\n            that._renderItems();\n            that._calculateGroupPadding(that._screenHeight);\n            that._calculateColumnsHeaderPadding();\n        },\n\n        _setHeight: function(height) {\n            var currentHeight,\n                heightContainer = this.heightContainer;\n\n            if (!heightContainer) {\n                heightContainer = this.heightContainer = appendChild(this.content[0], HEIGHTCONTAINER);\n            } else {\n                currentHeight = heightContainer.offsetHeight;\n            }\n\n            if (height !== currentHeight) {\n                heightContainer.innerHTML = \"\";\n\n                while (height > 0) {\n                    var padHeight = Math.min(height, 250000); //IE workaround, should not create elements with height larger than 250000px\n                    appendChild(heightContainer).style.height = padHeight + \"px\";\n                    height -= padHeight;\n                }\n            }\n        },\n\n        _getter: function() {\n            var lastRequestedRange = null,\n                dataSource = this.dataSource,\n                lastRangeStart = dataSource.skip(),\n                type = this.options.type,\n                pageSize = this.itemCount,\n                flatGroups = {};\n\n            if (dataSource.pageSize() < pageSize) {\n                this.mute(function() {\n                    dataSource.pageSize(pageSize);\n                });\n            }\n\n            return function(index, rangeStart) {\n                var that = this;\n                if (!dataSource.inRange(rangeStart, pageSize)) {\n                    if (lastRequestedRange !== rangeStart) {\n                        lastRequestedRange = rangeStart;\n                        lastRangeStart = rangeStart;\n\n                        if (that._getterDeferred) {\n                            that._getterDeferred.reject();\n                        }\n\n                        that._getterDeferred = that.deferredRange(rangeStart);\n                        that._getterDeferred.then(function() {\n                            var firstItemIndex = that._indexConstraint(that.content[0].scrollTop);\n\n                            that._getterDeferred = null;\n\n                            if (rangeStart <= firstItemIndex && firstItemIndex <= (rangeStart + pageSize)) {\n                                that._fetching = true;\n                                dataSource.range(rangeStart, pageSize);\n                            }\n                        });\n                    }\n\n                    return null;\n                } else {\n                    if (lastRangeStart !== rangeStart) {\n                        this.mute(function() {\n                            dataSource.range(rangeStart, pageSize);\n                            lastRangeStart = rangeStart;\n                        });\n                    }\n\n                    var result;\n                    if (type === \"group\") { //grouped list\n                        if (!flatGroups[rangeStart]) {\n                            var flatGroup = flatGroups[rangeStart] = [];\n                            var groups = dataSource.view();\n                            for (var i = 0, len = groups.length; i < len; i++) {\n                                var group = groups[i];\n                                for (var j = 0, groupLength = group.items.length; j < groupLength; j++) {\n                                    flatGroup.push({ item: group.items[j], group: group.value });\n                                }\n                            }\n                        }\n\n                        result = flatGroups[rangeStart][index - rangeStart];\n                    } else { //flat list\n                        result = dataSource.view()[index - rangeStart];\n                    }\n\n                    return result;\n                }\n            };\n        },\n\n        _fixedHeader: function(scrollTop, list) {\n            var group = this.currentVisibleGroup,\n                itemHeight = this.options.itemHeight,\n                firstVisibleDataItemIndex = Math.floor((scrollTop - list.top) / itemHeight),\n                firstVisibleDataItem = list.items[firstVisibleDataItemIndex];\n\n            if (firstVisibleDataItem && firstVisibleDataItem.item) {\n                var firstVisibleGroup = firstVisibleDataItem.group;\n\n                if (firstVisibleGroup !== group) {\n                    var fixedGroupText = firstVisibleGroup || \"\";\n                    this.header.html(this.templates.fixedGroupTemplate(fixedGroupText));\n                    this.currentVisibleGroup = firstVisibleGroup;\n                }\n            }\n\n            return list;\n        },\n\n        _itemMapper: function(item, index, value) {\n            var listType = this.options.type,\n                itemHeight = this.options.itemHeight,\n                currentIndex = this._focusedIndex,\n                selected = false,\n                current = false,\n                newGroup = false,\n                group = null,\n                match = false,\n                valueGetter = this._valueGetter;\n\n            if (listType === \"group\") {\n                if (item) {\n                    newGroup = index === 0 || (this._currentGroup !== false && this._currentGroup !== item.group);\n                    this._currentGroup = item.group;\n                }\n\n                group = item ? item.group : null;\n                item = item ? item.item : null;\n            }\n\n            if (this.options.mapValueTo === \"dataItem\" && this._selectedDataItems.length && item) {\n                for (var i = 0; i < this._selectedDataItems.length; i++) {\n                    match = valueGetter(this._selectedDataItems[i]) === valueGetter(item);\n                    if (match) {\n                        selected = true;\n                        break;\n                    }\n                }\n            } else if (!this.isFiltered() && value.length && item) {\n                for (var j = 0; j < value.length; j++) {\n                    match = isPrimitive(item) ? value[j] === item : value[j] === valueGetter(item);\n                    if (match) {\n                        value.splice(j , 1);\n                        selected = true;\n                        break;\n                    }\n                }\n            }\n\n            if (currentIndex === index) {\n                current = true;\n            }\n\n            return {\n                item: item ? item : null,\n                group: group,\n                newGroup: newGroup,\n                selected: selected,\n                current: current,\n                index: index,\n                top: index * itemHeight\n            };\n        },\n\n        _range: function(index) {\n            var itemCount = this.itemCount,\n                value = this._values.slice(),\n                items = [],\n                item;\n\n            this._view = {};\n            this._currentGroup = false;\n\n            for (var i = index, length = index + itemCount; i < length; i++) {\n                item = this._itemMapper(this.getter(i, index), i, value);\n                if (items[items.length - 1]) {\n                    items[items.length - 1].isLastGroupedItem = item.newGroup;\n                }\n                items.push(item);\n                this._view[item.index] = item;\n            }\n\n            this._dataView = items;\n            return items;\n        },\n\n        _getDataItemsCollection: function(scrollTop, lastScrollTop) {\n            var items = this._range(this._listIndex(scrollTop, lastScrollTop));\n            return {\n                index: items.length ? items[0].index : 0,\n                top: items.length ? items[0].top : 0,\n                items: items\n            };\n        },\n\n        _listItems: function() {\n            var screenHeight = this._screenHeight,\n                options = this.options;\n\n            var theValidator = listValidator(options, screenHeight);\n\n            return (function(value, force) {\n                var result = this.result,\n                    lastScrollTop = this._lastScrollTop;\n\n                if (force || !result || !theValidator(result, value, lastScrollTop)) {\n                    result = this._getDataItemsCollection(value, lastScrollTop);\n                }\n\n                this._lastScrollTop = value;\n                this.result = result;\n\n                return result;\n            }).bind(this);\n        },\n\n        _whenChanged: function(getter, callback) {\n            var current;\n\n            return function(force) {\n                var theNew = getter(force);\n\n                if (theNew !== current) {\n                    current = theNew;\n                    callback(theNew, force);\n                }\n            };\n        },\n\n        _reorderList: function(list, reorder) {\n            var that = this;\n            var length = list.length;\n            var currentOffset = -Infinity;\n            reorder = map2(reorder, this.templates).bind(this);\n\n            return function(list2, offset, force) {\n                var diff = offset - currentOffset;\n                var range, range2;\n\n                if (force || Math.abs(diff) >= length) { // full reorder\n                    range = list;\n                    range2 = list2;\n                } else { // partial reorder\n                    range = reshift(list, diff);\n                    range2 = diff > 0 ? list2.slice(-diff) : list2.slice(0, -diff);\n                }\n\n                reorder(range, range2, that.bound());\n\n                currentOffset = offset;\n            };\n        },\n\n        _bufferSizes: function() {\n            var options = this.options;\n\n            return bufferSizes(this._screenHeight, options.listScreens, options.oppositeBuffer);\n        },\n\n        _indexConstraint: function(position) {\n            var itemCount = this.itemCount,\n                itemHeight = this.options.itemHeight,\n                total = this.dataSource.total();\n\n            return Math.min(Math.max(total - itemCount, 0), Math.max(0, Math.floor(position / itemHeight )));\n        },\n\n        _listIndex: function(scrollTop, lastScrollTop) {\n            var buffers = this._bufferSizes(),\n                position;\n\n            position = scrollTop - ((scrollTop > lastScrollTop) ? buffers.down : buffers.up);\n\n            return this._indexConstraint(position);\n        },\n\n        _selectable: function() {\n            var itemClass = this.options.columns && this.options.columns.length ? TABLE_ITEM : LIST_ITEM;\n\n            if (this.options.selectable) {\n                this._selectProxy = this._clickHandler.bind(this);\n                this.element.on(CLICK + VIRTUAL_LIST_NS, \".\" + itemClass, this._selectProxy);\n            }\n        },\n\n        getElementIndex: function(element) {\n            if (!(element instanceof jQuery)) {\n                return undefined$1;\n            }\n\n            return parseInt(element.attr(\"data-offset-index\"), 10);\n        },\n\n        _getIndecies: function(candidate) {\n            var result = [], data;\n\n            if (typeof candidate === \"function\") {\n                data = this.dataSource.flatView();\n                for (var idx = 0; idx < data.length; idx++) {\n                    if (candidate(data[idx])) {\n                        result.push(idx);\n                        break;\n                    }\n                }\n            }\n\n            if (typeof candidate === \"number\") {\n                result.push(candidate);\n            }\n\n            var elementIndex = this.getElementIndex(candidate);\n            if (!isNaN(elementIndex)) {\n                result.push(elementIndex);\n            }\n\n            if (candidate instanceof Array) {\n                result = candidate;\n            }\n\n            return result;\n        },\n\n        _deselect: function(indices) {\n            var removed = [],\n                selectedIndex,\n                dataItem,\n                selectedIndexes = this._selectedIndexes,\n                selectedDataItems = this._selectedDataItems,\n                position = 0,\n                selectable = this.options.selectable,\n                removedindexesCounter = 0,\n                valueGetter = this._valueGetter,\n                item, match,\n                result = null;\n\n            indices = indices.slice();\n\n            if (selectable === true || !indices.length) { //deselect everything\n                for (var idx = 0; idx < selectedIndexes.length; idx++) {\n                    if (selectedIndexes[idx] !== undefined$1) {\n                        this._getElementByIndex(selectedIndexes[idx]).removeClass(SELECTED);\n                    } else if (selectedDataItems[idx]) {\n                        this._getElementByDataItem(selectedDataItems[idx]).removeClass(SELECTED);\n                    }\n\n                    removed.push({\n                        index: selectedIndexes[idx],\n                        position: idx,\n                        dataItem: selectedDataItems[idx]\n                    });\n                }\n\n                this._values = [];\n                this._selectedDataItems = [];\n                this._selectedIndexes = [];\n            } else if (selectable === \"multiple\") {\n                for (var i = 0; i < indices.length; i++) {\n                    result = null;\n                    position = $.inArray(indices[i], selectedIndexes);\n                    dataItem = this.dataItemByIndex(indices[i]);\n\n                    if (position === -1 && dataItem) {\n                        for (var j = 0; j < selectedDataItems.length; j++) {\n                            match = isPrimitive(dataItem) ? selectedDataItems[j] === dataItem : valueGetter(selectedDataItems[j]) === valueGetter(dataItem);\n                            if (match) {\n                                item = this._getElementByIndex(indices[i]);\n                                result = this._deselectSingleItem(item, j, indices[i], removedindexesCounter);\n                            }\n                        }\n                    } else {\n                        selectedIndex = selectedIndexes[position];\n\n                        if (selectedIndex !== undefined$1) {\n                            item = this._getElementByIndex(selectedIndex);\n                            result = this._deselectSingleItem(item, position, selectedIndex, removedindexesCounter);\n                        }\n                    }\n\n                    if (result) {\n                        indices.splice(i, 1);\n                        removed.push(result);\n\n                        removedindexesCounter++;\n                        i--;\n                    }\n                }\n            }\n\n            return {\n                indices: indices,\n                removed: removed\n            };\n        },\n\n        _deselectSingleItem: function(item, position, selectedIndex, removedindexesCounter) {\n            var dataItem;\n\n            if (!item.hasClass(SELECTED)) {\n                return;\n            }\n\n            item.removeClass(SELECTED);\n            this._values.splice(position, 1);\n            this._selectedIndexes.splice(position, 1);\n            dataItem = this._selectedDataItems.splice(position, 1)[0];\n\n            return {\n                index: selectedIndex,\n                position: position + removedindexesCounter,\n                dataItem: dataItem\n            };\n        },\n\n        _deselectCurrentValues: function(indices) {\n            var children = this.element[0].children;\n            var value, index, position;\n            var values = this._values;\n            var removed = [];\n            var idx = 0;\n            var j;\n\n            if (this.options.selectable !== \"multiple\" || !this.isFiltered()) {\n                return [];\n            }\n\n            if (indices[0] === -1) {\n                $(children).removeClass(SELECTED);\n                removed = $.map(this._selectedDataItems.slice(0), function(dataItem, idx) {\n                   return {\n                      dataItem: dataItem,\n                      position: idx\n                   };\n                });\n                this._selectedIndexes = [];\n                this._selectedDataItems = [];\n                this._values = [];\n                return removed;\n            }\n\n            for (; idx < indices.length; idx++) {\n                position = -1;\n                index = indices[idx];\n                if (this.dataItemByIndex(index)) {\n                    value = this._valueGetter(this.dataItemByIndex(index));\n                }\n\n                for (j = 0; j < values.length; j++) {\n                    if (value == values[j]) {\n                        position = j;\n                        break;\n                    }\n                }\n\n                if (position > -1) {\n                    removed.push(this.removeAt(position));\n                    $(children[index]).removeClass(SELECTED);\n                }\n            }\n\n            return removed;\n        },\n\n        _getSkip: function(index, take) {\n            var page = index < take ? 1 : Math.floor(index / take) + 1;\n\n            return (page - 1) * take;\n        },\n\n        _select: function(indexes) {\n            var that = this,\n                singleSelection = this.options.selectable !== \"multiple\",\n                dataSource = this.dataSource,\n                dataItem, oldSkip,\n                take = this.itemCount,\n                valueGetter = this._valueGetter,\n                added = [];\n\n            if (singleSelection) {\n                that._selectedIndexes = [];\n                that._selectedDataItems = [];\n                that._values = [];\n            }\n\n            oldSkip = dataSource.skip();\n\n            $.each(indexes, function(_, index) {\n                var skip = that._getSkip(index, take);\n\n                that.mute(function() {\n                    dataSource.range(skip, take); //switch the range to get the dataItem\n\n                    dataItem = that._findDataItem(dataSource.view(), [index - skip]);\n                    that._selectedIndexes.push(index);\n                    that._selectedDataItems.push(dataItem);\n                    that._values.push(isPrimitive(dataItem) ? dataItem : valueGetter(dataItem));\n\n                    added.push({\n                        index: index,\n                        dataItem: dataItem\n                    });\n\n                    that._getElementByIndex(index).addClass(SELECTED);\n\n                    dataSource.range(oldSkip, take); //switch back the range\n                });\n            });\n\n            that._values = that._checkValuesOrder(that._values);\n\n            return added;\n        },\n\n        _clickHandler: function(e) {\n            var item = $(e.currentTarget);\n\n            if (!e.isDefaultPrevented() && item.attr(\"data-uid\")) {\n                this.trigger(CLICK, { item: item });\n            }\n        },\n\n        _buildValueGetter: function() {\n            this._valueGetter = kendo.getter(this.options.dataValueField);\n        },\n\n        _calculateGroupPadding: function(height) {\n            var firstItem = this.items().first(),\n                groupHeader = this.header,\n                padding = 0;\n\n            if (groupHeader[0] && groupHeader[0].style.display !== \"none\") {\n                if (height !== \"auto\") {\n                    padding = kendo.support.scrollbar();\n                }\n\n                padding += parseFloat(firstItem.css(\"border-right-width\"), 10) + parseFloat(firstItem.children(\".k-group\").css(\"right\"), 10);\n\n                groupHeader.css(\"padding-right\", padding);\n            }\n        },\n\n        _calculateColumnsHeaderPadding: function() {\n            if (this.options.columns && this.options.columns.length) {\n                var isRtl = kendo.support.isRtl(this.wrapper);\n                var scrollbar = kendo.support.scrollbar();\n                var columnsHeader = this.content.parent().parent().find(\".k-table-header\");\n                var total = this.dataSource.total();\n\n                columnsHeader.css((isRtl ? \"padding-left\" : \"padding-right\"), total ? scrollbar : 0);\n            }\n        }\n\n    });\n\n    kendo.ui.VirtualList = VirtualList;\n    kendo.ui.plugin(VirtualList);\n\n})(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.virtuallist.js?");

/***/ }),

/***/ "./node_modules/kendo-ui-core/esm/kendo.window.js":
/*!********************************************************!*\
  !*** ./node_modules/kendo-ui-core/esm/kendo.window.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kendo$1)\n/* harmony export */ });\n/* harmony import */ var _kendo_draganddrop_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kendo.draganddrop.js */ \"./node_modules/kendo-ui-core/esm/kendo.draganddrop.js\");\n/* harmony import */ var _kendo_popup_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kendo.popup.js */ \"./node_modules/kendo-ui-core/esm/kendo.popup.js\");\n/* harmony import */ var _kendo_icons_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kendo.icons.js */ \"./node_modules/kendo-ui-core/esm/kendo.icons.js\");\n/* harmony import */ var _kendo_html_button_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./kendo.html.button.js */ \"./node_modules/kendo-ui-core/esm/kendo.html.button.js\");\n/* provided dependency */ var __webpack_provided_window_dot_kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n/* provided dependency */ var kendo = __webpack_require__(/*! kendo-ui-core */ \"./node_modules/kendo-ui-core/esm/kendo.ui.core.js\");\n\n\n\n\n\nvar __meta__ = {\n        id: \"window\",\n        name: \"Window\",\n        category: \"web\",\n        description: \"The Window widget displays content in a modal or non-modal HTML window.\",\n        depends: [ \"draganddrop\", \"popup\", \"icons\" ],\n        features: [ {\n            id: \"window-fx\",\n            name: \"Animation\",\n            description: \"Support for animation\",\n            depends: [ \"fx\" ]\n        } ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = __webpack_provided_window_dot_kendo,\n            Widget = kendo.ui.Widget,\n            TabKeyTrap = kendo.ui.Popup.TabKeyTrap,\n            Draggable = kendo.ui.Draggable,\n            isPlainObject = $.isPlainObject,\n            activeElement = kendo._activeElement,\n            outerWidth = kendo._outerWidth,\n            outerHeight = kendo._outerHeight,\n            extend = $.extend,\n            each = $.each,\n            template = kendo.template,\n            BODY = \"body\",\n            templates,\n            NS = \".kendoWindow\",\n            MODAL_NS = \".kendoWindowModal\",\n            // classNames\n            KWINDOW = \".k-window\",\n            KWINDOWTITLE = \".k-window-title\",\n            KWINDOWTITLEBAR = KWINDOWTITLE + \"bar\",\n            KWINDOWCONTENT = \".k-window-content\",\n            KDIALOGCONTENT = \".k-dialog-content\",\n            KWINDOWRESIZEHANDLES = \".k-resize-handle\",\n            KOVERLAY = \".k-overlay\",\n            KWINDOWMINIMIZED = \"k-window-minimized\",\n            KCONTENTFRAME = \"k-content-frame\",\n            LOADINGICONCLASS = \"k-i-loading\",\n            KHOVERSTATE = \"k-hover\",\n            KFOCUSEDSTATE = \"k-focus\",\n            MAXIMIZEDSTATE = \"k-window-maximized\",\n            INLINE_FLEX = \"k-display-inline-flex\",\n            // constants\n            VISIBLE = \":visible\",\n            KHIDDEN = \"k-hidden\",\n            HIDDEN = \"hidden\",\n            CURSOR = \"cursor\",\n            // events\n            OPEN = \"open\",\n            ACTIVATE = \"activate\",\n            DEACTIVATE = \"deactivate\",\n            CLOSE = \"close\",\n            REFRESH = \"refresh\",\n            MINIMIZE = \"minimize\",\n            MAXIMIZE = \"maximize\",\n            RESIZESTART = \"resizeStart\",\n            RESIZE = \"resize\",\n            RESIZEEND = \"resizeEnd\",\n            DRAGSTART = \"dragstart\",\n            DRAGEND = \"dragend\",\n            RESTORE = \"restore\",\n            KENDOKEYDOWN = \"kendoKeydown\",\n            ERROR = \"error\",\n            OVERFLOW = \"overflow\",\n            DATADOCOVERFLOWRULE = \"original-overflow-rule\",\n            ZINDEX = \"zIndex\",\n            MINIMIZE_MAXIMIZEICONSELECTORS = \".k-window-titlebar-actions .k-i-window-minimize,.k-window-titlebar-actions .k-i-window,.k-window-titlebar-actions .k-svg-i-window-minimize,.k-window-titlebar-actions .k-svg-i-window\",\n            KPINICONCLASSSELECTOR = \".k-i-pin,.k-svg-i-pin\",\n            KUNPINICONCLASSSELECTOR = \".k-i-unpin,.k-svg-i-unpin\",\n            PIN_UNPINICONCLASSSELECTOR = KPINICONCLASSSELECTOR + \",\" + KUNPINICONCLASSSELECTOR,\n            TITLEBAR_BUTTONSSELECTOR = \".k-window-titlebar .k-window-titlebar-action\",\n            REFRESHICONSELECTOR = \".k-window-titlebar .k-i-arrow-rotate-cw,.k-window-titlebar .k-svg-i-arrow-rotate-cw\",\n            WINDOWEVENTSHANDLED = \"WindowEventsHandled\",\n            zero = /^0[a-z]*$/i,\n            isLocalUrl = kendo.isLocalUrl,\n            SIZE = {\n                small: \"k-window-sm\",\n                medium: \"k-window-md\",\n                large: \"k-window-lg\"\n            };\n\n        function defined(x) {\n            return (typeof x != \"undefined\");\n        }\n\n        function toInt(element, property) {\n            return parseInt(element.css(property), 10) || 0;\n        }\n\n        function constrain(value, low, high) {\n            var normalizedValue;\n\n            if (value && isNaN(value) && value.toString().indexOf(\"px\") < 0) {\n                normalizedValue = value;\n            } else {\n                normalizedValue = Math.max(\n                    Math.min(parseInt(value, 10), high === Infinity ? high : parseInt(high, 10)),\n                    low === -Infinity ? low : parseInt(low, 10)\n                );\n            }\n\n            return normalizedValue;\n        }\n\n        function executableScript() {\n            return !this.type || this.type.toLowerCase().indexOf(\"script\") >= 0;\n        }\n\n\n        function getPosition(elem) {\n            var result = { top: elem.offsetTop, left: elem.offsetLeft },\n                parent = elem.offsetParent;\n\n            while (parent) {\n                result.top += parent.offsetTop;\n                result.left += parent.offsetLeft;\n\n                var parentOverflowX = $(parent).css(\"overflowX\");\n                var parentOverflowY = $(parent).css(\"overflowY\");\n\n                if (parentOverflowY === \"auto\" || parentOverflowY === \"scroll\") {\n                    result.top -= parent.scrollTop;\n                }\n\n                if (parentOverflowX === \"auto\" || parentOverflowX === \"scroll\") {\n                    result.left -= parent.scrollLeft;\n                }\n\n                parent = parent.offsetParent;\n            }\n\n            return result;\n        }\n\n        var Window = Widget.extend({\n            init: function(element, options) {\n                var that = this,\n                    wrapper,\n                    offset = {},\n                    visibility, display, position,\n                    isVisible = false,\n                    content,\n                    windowContent,\n                    windowFrame,\n                    globalWindow,\n                    suppressActions = options && options.actions && !options.actions.length,\n                    id;\n\n                Widget.fn.init.call(that, element, options);\n                options = that.options;\n                position = options.position;\n                element = that.element;\n                content = options.content;\n                globalWindow = $(window);\n\n                if (suppressActions) {\n                    options.actions = [];\n                }\n\n                that.appendTo = $(options.appendTo);\n\n                that.containment = options.draggable.containment ? $(options.draggable.containment).first() : null;\n\n                if (content && !isPlainObject(content)) {\n                    content = options.content = { url: content };\n                }\n\n                // remove script blocks to prevent double-execution\n                element.find(\"script\").filter(executableScript).remove();\n\n                if (!element.parent().is(that.appendTo) && !that.containment && (position.top === undefined$1 || position.left === undefined$1)) {\n                    if (element.is(VISIBLE)) {\n                        offset = element.offset();\n                        isVisible = true;\n                    } else {\n                        visibility = element.css(\"visibility\");\n                        display = element.css(\"display\");\n\n                        element.css({ visibility: HIDDEN, display: \"\" });\n\n                        if (document.body.contains(element[0])) {\n                            offset = element.offset();\n                        } else {\n                            offset = { top: 0, left: 0 };\n                        }\n\n                        element.css({ visibility: visibility, display: display });\n                    }\n\n                    if (position.top === undefined$1) {\n                        position.top = offset.top;\n                    }\n                    if (position.left === undefined$1) {\n                        position.left = offset.left;\n                    }\n                }\n\n                if (!defined(options.visible) || options.visible === null) {\n                    options.visible = element.is(VISIBLE);\n                }\n\n                wrapper = that.wrapper = element.closest(KWINDOW);\n\n                if (!element.is(\".k-window-content\") || !wrapper[0]) {\n                    element.addClass(\"k-window-content\");\n                    element.attr(\"tabindex\", 0);\n                    that._createWindow(element, options);\n                    wrapper = that.wrapper = element.closest(KWINDOW);\n\n                    that.title(that.options.title);\n                    that._dimensions();\n\n                    if (options._footerTemplate) {\n                        that.wrapper.append(kendo.template(options._footerTemplate)(options._footerMessages));\n                    }\n                }\n\n                if (options.themeColor && options.themeColor !== \"none\") {\n                    wrapper.addClass(kendo.getValidCssClass(\"k-window-\", \"themeColor\", options.themeColor));\n                }\n\n                that.minTop = that.minLeft = -Infinity;\n                that.maxTop = that.maxLeft = Infinity;\n                that._position();\n\n                if (content) {\n                    that.refresh(content);\n                }\n\n                if (options.visible) {\n                    that.toFront(null, !options.modal);\n                }\n\n                windowContent = wrapper.children(KWINDOWCONTENT);\n\n                if (options.visible && options.modal) {\n                    that._overlay(wrapper.is(VISIBLE)).css({ opacity: 0.5 });\n                }\n\n                wrapper\n                    .on(\"mouseenter\" + NS, TITLEBAR_BUTTONSSELECTOR, that._buttonEnter.bind(that))\n                    .on(\"mouseleave\" + NS, TITLEBAR_BUTTONSSELECTOR, that._buttonLeave.bind(that))\n                    .on(\"click\" + NS, \"> \" + TITLEBAR_BUTTONSSELECTOR, that._windowActionHandler.bind(that))\n                    .on(\"keydown\" + NS, that, that._keydown.bind(that))\n                    .on(\"focus\" + NS, that._focus.bind(that))\n                    .on(\"blur\" + NS, that._blur.bind(that));\n\n                windowContent\n                    .on(\"keydown\" + NS, that, that._keydownContent.bind(that));\n\n                windowFrame = windowContent.find(\".\" + KCONTENTFRAME)[0];\n\n                if (windowFrame && !globalWindow.data(WINDOWEVENTSHANDLED)) {\n\n                    globalWindow.on(\"blur\" + NS, function() {\n                        var element = $(document.activeElement).parent(KWINDOWCONTENT);\n                        if (element.length) {\n                            var windowInstance = kendo.widgetInstance(element);\n                            windowInstance._focus();\n                        }\n                    });\n\n                    globalWindow.on(\"focus\" + NS, function() {\n                        $(KWINDOWCONTENT).not(KDIALOGCONTENT).each(function(i, element) {\n                            kendo.widgetInstance($(element))._blur();\n                        });\n                    });\n\n                    globalWindow.data(WINDOWEVENTSHANDLED, true);\n                }\n\n                this._resizable();\n\n                this._draggable();\n\n                if (options.pinned && this.wrapper.is(\":visible\")) {\n                    that.pin();\n                }\n\n                id = element.attr(\"id\");\n                if (id) {\n                    id = id + \"_wnd_title\";\n                    wrapper.attr({\n                            \"role\": \"dialog\",\n                            \"aria-labelledby\": id\n                        }).children(KWINDOWTITLEBAR)\n                        .children(KWINDOWTITLE)\n                        .attr(\"id\", id);\n                }\n\n                wrapper.add(wrapper.children(\".k-resize-handle,\" + KWINDOWTITLEBAR))\n                    .on(kendo.support.mousedown + NS, that.toFront.bind(that));\n\n                that.touchScroller = kendo.touchScroller(element);\n\n                that._resizeHandler = that._onDocumentResize.bind(that);\n\n                that._marker = kendo.guid().substring(0, 8);\n\n                $(window).on(\"resize\" + NS + that._marker, that._resizeHandler);\n\n                if (options.visible) {\n                    that.trigger(OPEN);\n                    that.trigger(ACTIVATE);\n                }\n\n                kendo.notify(that);\n\n                if (this.options.modal) {\n                    this._tabKeyTrap = new TabKeyTrap(wrapper);\n                    this._tabKeyTrap.trap();\n                    this._tabKeyTrap.shouldTrap = function() {\n                        return wrapper.data(\"isFront\");\n                    };\n                }\n\n                if (that._showWatermarkOverlay) {\n                    that._showWatermarkOverlay(that.wrapper[0]);\n                }\n            },\n\n            _buttonEnter: function(e) {\n                $(e.currentTarget).addClass(KHOVERSTATE);\n            },\n\n            _buttonLeave: function(e) {\n                $(e.currentTarget).removeClass(KHOVERSTATE);\n            },\n\n            _focus: function() {\n                this.wrapper.addClass(KFOCUSEDSTATE);\n            },\n\n            _blur: function() {\n                this.wrapper.removeClass(KFOCUSEDSTATE);\n            },\n\n            _dimensions: function() {\n                var wrapper = this.wrapper;\n                var options = this.options;\n                var width = options.width;\n                var height = options.height;\n                var maxHeight = options.maxHeight;\n                var sizeClass = options.size;\n                var dimensions = [\"minWidth\",\"minHeight\",\"maxWidth\",\"maxHeight\"];\n                var contentBoxSizing = wrapper.css(\"box-sizing\") == \"content-box\";\n\n                var lrBorderWidth = contentBoxSizing ? toInt(wrapper, \"border-left-width\") + toInt(wrapper, \"border-right-width\") : 0;\n                var tbBorderWidth = contentBoxSizing ? toInt(wrapper, \"border-top-width\") + toInt(wrapper, \"border-bottom-width\") : 0;\n                var paddingTop = contentBoxSizing ? toInt(wrapper, \"padding-top\") : 0;\n\n                if (this.containment && !this._isPinned) {\n                    this._updateBoundaries();\n                    options.maxHeight = Math.min(this.containment.height - (tbBorderWidth + paddingTop), maxHeight);\n                    options.maxWidth = Math.min(this.containment.width - lrBorderWidth, options.maxWidth);\n                }\n\n                for (var i = 0; i < dimensions.length; i++) {\n                    var value = options[dimensions[i]] || \"\";\n                    if (value != Infinity) {\n                        wrapper.css(dimensions[i], value);\n                    }\n                }\n\n                if (maxHeight != Infinity) {\n                    this.element.css(\"maxHeight\", maxHeight);\n                }\n\n                if (width) {\n                    wrapper.outerWidth(constrain(width, options.minWidth, options.maxWidth));\n                }\n                else {\n                    wrapper.outerWidth(\"\");\n                }\n\n                if (height) {\n                    wrapper.outerHeight(constrain(height, options.minHeight, options.maxHeight));\n                }\n                else {\n                    wrapper.outerHeight(\"\");\n                }\n\n                if (!options.visible) {\n                    wrapper.removeClass(INLINE_FLEX).hide();\n                }\n\n                if (sizeClass && SIZE[sizeClass]) {\n                    wrapper.addClass(SIZE[sizeClass]);\n                }\n            },\n\n            _position: function() {\n                var wrapper = this.wrapper,\n                    position = this.options.position,\n                    containmentTop, containmentLeft;\n\n                this._updateBoundaries();\n\n                if (this.containment) {\n                    position.top = position.top || 0;\n                    position.left = position.left || 0;\n\n                    containmentTop = position.top.toString().indexOf(\"%\") > 0 ?\n                        parseInt(this.containment.height * (parseFloat(position.top) / 100), 10) :\n                        position.top;\n\n                    containmentLeft = position.left.toString().indexOf(\"%\") > 0 ?\n                        parseInt(this.containment.width * (parseFloat(position.left) / 100), 10) :\n                        position.left;\n\n                    position.top = constrain(containmentTop, this.minTop, this.maxTop);\n                    position.left = constrain(containmentLeft, this.minLeft, this.maxLeft);\n                }\n\n                if (position.top && position.top.toString().indexOf(\"px\") > 0) {\n                    position.top = Number(position.top.replace(\"px\", \"\"));\n                }\n\n                if (position.left && position.left.toString().indexOf(\"px\") > 0) {\n                    position.left = Number(position.left.replace(\"px\", \"\"));\n                }\n\n                if (position.top === 0) {\n                    position.top = position.top.toString();\n                }\n\n                if (position.left === 0) {\n                    position.left = position.left.toString();\n                }\n\n                wrapper.css({\n                    top: position.top || \"\",\n                    left: position.left || \"\"\n                });\n            },\n\n            _updateBoundaries: function() {\n                var containment = this.containment;\n\n                if (!containment) {\n                    return null;\n                }\n\n                containment.width = containment.innerWidth();\n                containment.height = containment.innerHeight();\n\n                if (parseInt(containment.width, 10) > containment[0].clientWidth) {\n                    containment.width -= kendo.support.scrollbar();\n                }\n\n                if (parseInt(containment.height, 10) > containment[0].clientHeight) {\n                    containment.height -= kendo.support.scrollbar();\n                }\n\n                containment.position = getPosition(containment[0]);\n\n                if (this._isPinned) {\n                    this.minTop = this.minLeft = -Infinity;\n                    this.maxTop = this.maxLeft = Infinity;\n                } else {\n                    this.minTop = containment.scrollTop();\n                    this.minLeft = containment.scrollLeft();\n                    this.maxLeft = this.minLeft + containment.width - outerWidth(this.wrapper, true);\n                    this.maxTop = this.minTop + containment.height - outerHeight(this.wrapper, true);\n                }\n            },\n\n            _animationOptions: function(id) {\n                var animation = this.options.animation;\n                var basicAnimation = {\n                    open: { effects: {} },\n                    close: { hide: true, effects: {} }\n                };\n\n                return animation && animation[id] || basicAnimation[id];\n            },\n\n            _resize: function() {\n                kendo.resize(this.element.children());\n            },\n\n            _resizable: function() {\n                var resizable = this.options.resizable;\n                var wrapper = this.wrapper;\n\n                if (this.resizing) {\n                    wrapper\n                        .off(\"dblclick\" + NS)\n                        .children(KWINDOWRESIZEHANDLES).remove();\n\n                    this.resizing.destroy();\n                    this.resizing = null;\n                }\n\n                if (resizable) {\n                    wrapper.on(\"dblclick\" + NS, KWINDOWTITLEBAR, (function(e) {\n                        if (!$(e.target).closest(\".k-window-titlebar-action\").length) {\n                            this.toggleMaximization();\n                        }\n                    }).bind(this));\n\n                    each(\"n e s w se sw ne nw\".split(\" \"), function(index, handler) {\n                        wrapper.append(templates.resizeHandle(handler));\n                    });\n\n                    this.resizing = new WindowResizing(this);\n                }\n\n                wrapper = null;\n            },\n\n            _draggable: function() {\n                var draggable = this.options.draggable;\n\n                if (this.dragging) {\n                    this.dragging.destroy();\n                    this.dragging = null;\n                }\n                if (draggable) {\n                    this.dragging = new WindowDragging(this, draggable.dragHandle || KWINDOWTITLEBAR, draggable.clickMoveClick);\n                }\n            },\n\n            _actions: function() {\n                var options = this.options;\n                var actions = options.actions;\n                var pinned = options.pinned;\n                var titlebar = this.wrapper.children(KWINDOWTITLEBAR);\n                var container = titlebar.find(\".k-window-titlebar-actions\");\n                var windowSpecificCommands = [ \"minimize\", \"maximize\" ];\n                var icons = {\n                    \"maximize\": \"window\",\n                    \"refresh\": \"arrow-rotate-cw\",\n                    \"custom\": \"gear\"\n                };\n                var icon;\n\n                actions = $.map(actions, function(action) {\n                    action = pinned && action.toLowerCase() === \"pin\" ? \"unpin\" : action;\n                    icon = icons[action.toLowerCase()] || \"\";\n                    return { name: (windowSpecificCommands.indexOf(action.toLowerCase()) > - 1) ? \"window-\" + action : action, icon: action.toLowerCase() == \"close\" ? \"x\" : icon };\n                });\n\n                container.html(kendo.render(templates.action, actions));\n            },\n\n            setOptions: function(options) {\n                var that = this;\n                var sizeClass = that.options.size;\n                var doc = this.containment && !that._isPinned ? this.containment : $(document);\n                // make a deep extend over options.position telerik/kendo-ui-core#844\n                var cachedOptions = JSON.parse(JSON.stringify(options));\n\n                that.wrapper.removeClass(kendo.getValidCssClass(\"k-window-\", \"themeColor\", that.options.themeColor));\n\n                extend(options.position, that.options.position);\n                extend(options.position, cachedOptions.position);\n\n                that._containerScrollTop = doc.scrollTop();\n                that._containerScrollLeft = doc.scrollLeft();\n\n                Widget.fn.setOptions.call(that, options);\n                var scrollable = that.options.scrollable !== false;\n\n                that.restore();\n\n                if (typeof options.title !== \"undefined\") {\n                    that.title(options.title);\n                }\n\n                that.wrapper.removeClass(SIZE[sizeClass]);\n                that._dimensions();\n\n                that._position();\n                that._resizable();\n                that._draggable();\n                that._actions();\n\n                if (that.options.themeColor && that.options.themeColor !== \"none\") {\n                    that.wrapper.addClass(kendo.getValidCssClass(\"k-window-\", \"themeColor\", that.options.themeColor));\n                }\n\n                if (typeof options.modal !== \"undefined\") {\n                    var visible = that.options.visible !== false;\n                    that._enableDocumentScrolling();\n                    that._overlay(options.modal && visible);\n                }\n\n                that.element.css(OVERFLOW, scrollable ? \"\" : \"hidden\");\n            },\n\n            events: [\n                OPEN,\n                ACTIVATE,\n                DEACTIVATE,\n                CLOSE,\n                MINIMIZE,\n                MAXIMIZE,\n                REFRESH,\n                RESTORE,\n                RESIZESTART,\n                RESIZE,\n                RESIZEEND,\n                DRAGSTART,\n                DRAGEND,\n                KENDOKEYDOWN,\n                ERROR\n            ],\n\n            options: {\n                name: \"Window\",\n                animation: {\n                    open: {\n                        effects: { zoom: { direction: \"in\" }, fade: { direction: \"in\" } },\n                        duration: 350\n                    },\n                    close: {\n                        effects: { zoom: { direction: \"out\", properties: { scale: 0.7 } }, fade: { direction: \"out\" } },\n                        duration: 350,\n                        hide: true\n                    }\n                },\n                title: \"\",\n                themeColor: \"\",\n                actions: [\"Close\"],\n                autoFocus: true,\n                modal: false,\n                size: \"auto\",\n                resizable: true,\n                draggable: true,\n                minWidth: 90,\n                minHeight: 50,\n                maxWidth: Infinity,\n                maxHeight: Infinity,\n                pinned: false,\n                scrollable: true,\n                position: {},\n                content: null,\n                visible: null,\n                height: null,\n                width: null,\n                appendTo: \"body\",\n                isMaximized: false,\n                isMinimized: false\n            },\n\n            _closable: function() {\n                return $.inArray(\"close\", $.map(this.options.actions, function(x) { return x.toLowerCase(); })) > -1;\n            },\n\n            _keydownContent: function(e) {\n                var that = this,\n                    keys = kendo.keys,\n                    keyCode = e.keyCode;\n\n                if (keyCode == keys.ESC && that._closable()) {\n                    e.stopPropagation();\n                    that._close(false);\n                }\n            },\n\n            _keydown: function(e) {\n                var that = this,\n                    options = that.options,\n                    keys = kendo.keys,\n                    keyCode = e.keyCode,\n                    wrapper = that.wrapper,\n                    offset, handled,\n                    distance = 10,\n                    isMaximized = options.isMaximized,\n                    isMinimized = options.isMinimized,\n                    newWidth, newHeight, w, h;\n\n                if (keyCode == keys.ESC && that._closable()) {\n                    e.stopPropagation();\n                    that._close(false);\n                }\n\n                if (e.target != e.currentTarget || that._closing) {\n                    return;\n                }\n\n                 // Refresh\n                if (e.altKey && keyCode == 82) {// Alt + R\n                    that.refresh();\n                }\n\n                // Pin/Unpin\n                if (e.altKey && keyCode == 80) {// Alt + P\n                    if (that.options.pinned) {\n                        that.unpin();\n                    } else {\n                        that.pin();\n                    }\n                }\n\n                // Maximize/Restore/Miminimize\n                if (e.altKey && keyCode == keys.UP) {\n                    if (isMinimized) {\n                        that.restore();\n                        that.wrapper.trigger(\"focus\");\n                    } else if (!isMaximized) {\n                        that.maximize();\n                        that.wrapper.trigger(\"focus\");\n                    }\n                } else if (e.altKey && keyCode == keys.DOWN) {\n                    if (!isMinimized && !isMaximized) {\n                        that.minimize();\n                        that.wrapper.trigger(\"focus\");\n                    } else if (isMaximized) {\n                        that.restore();\n                        that.wrapper.trigger(\"focus\");\n                    }\n                }\n\n                offset = kendo.getOffset(wrapper);\n\n                if (that.containment && !that._isPinned) {\n                    offset = that.options.position;\n                }\n\n                if (options.draggable && !e.ctrlKey && !e.altKey && !isMaximized) {\n                    that._updateBoundaries();\n                    if (keyCode == keys.UP) {\n                        offset.top = constrain(offset.top - distance, that.minTop, that.maxTop);\n                        handled = wrapper.css(\"top\", offset.top);\n                    } else if (keyCode == keys.DOWN) {\n                        offset.top = constrain(offset.top + distance, that.minTop, that.maxTop);\n                        handled = wrapper.css(\"top\", offset.top);\n                    } else if (keyCode == keys.LEFT) {\n                        offset.left = constrain(offset.left - distance, that.minLeft, that.maxLeft);\n                        handled = wrapper.css(\"left\", offset.left);\n                    } else if (keyCode == keys.RIGHT) {\n                        offset.left = constrain(offset.left + distance, that.minLeft, that.maxLeft);\n                        handled = wrapper.css(\"left\", offset.left);\n                    }\n                }\n\n                if (options.resizable && e.ctrlKey && !isMaximized && !isMinimized) {\n                    if (keyCode == keys.UP) {\n                        handled = true;\n                        newHeight = wrapper.outerHeight() - distance;\n                    } else if (keyCode == keys.DOWN) {\n                        handled = true;\n                        if (that.containment && !that._isPinned) {\n                            newHeight = Math.min(wrapper.outerHeight() + distance,\n                                that.containment.height - offset.top - toInt(wrapper, \"padding-top\") -\n                                toInt(wrapper, \"borderBottomWidth\") - toInt(wrapper, \"borderTopWidth\"));\n                        } else {\n                            newHeight = wrapper.outerHeight() + distance;\n                        }\n                    } if (keyCode == keys.LEFT) {\n                        handled = true;\n                        newWidth = wrapper.outerWidth() - distance;\n                    } else if (keyCode == keys.RIGHT) {\n                        handled = true;\n                        if (that.containment && !that._isPinned) {\n                            newWidth = Math.min(wrapper.outerWidth() + distance,\n                                                that.containment.width - offset.left -\n                                                toInt(wrapper, \"borderLeftWidth\") - toInt(wrapper, \"borderRightWidth\"));\n                        } else {\n                            newWidth = wrapper.outerWidth() + distance;\n                        }\n                    }\n\n                    if (handled) {\n                        w = constrain(newWidth, options.minWidth, options.maxWidth);\n                        h = constrain(newHeight, options.minHeight, options.maxHeight);\n\n                        if (!isNaN(w)) {\n                            wrapper.outerWidth(w);\n                            that.options.width = w + \"px\";\n                        }\n                        if (!isNaN(h)) {\n                            wrapper.outerHeight(h);\n                            that.options.height = h + \"px\";\n                        }\n\n                        that.resize();\n                    }\n                }\n\n                if (handled) {\n                    e.preventDefault();\n                }\n            },\n\n            _overlay: function(visible) {\n                var overlay = this.containment ? this.containment.children(KOVERLAY) : this.appendTo.children(KOVERLAY),\n                    wrapper = this.wrapper,\n                    display = visible ? \"inline-flex\" : \"none\",\n                    zIndex = parseInt(wrapper.css(ZINDEX), 10) - 1;\n\n                if (!overlay.length) {\n                    overlay = $(\"<div class='k-overlay' />\");\n                }\n\n                overlay\n                    .insertBefore(wrapper[0])\n                    .css({\n                        zIndex: zIndex,\n                        display: display\n                    });\n\n                if (this.options.modal.preventScroll && !this.containment) {\n                    this._stopDocumentScrolling();\n                }\n\n                return overlay;\n            },\n\n            _actionForIcon: function(icon) {\n                var iconClass = /\\bk(-svg)?-i(-\\w+)+\\b/.exec(icon[0].className)[0];\n                return {\n                    \"x\": \"_close\",\n                    \"window\": \"maximize\",\n                    \"window-minimize\": \"minimize\",\n                    \"window-restore\": \"restore\",\n                    \"arrow-rotate-cw\": \"refresh\",\n                    \"pin\": \"pin\",\n                    \"unpin\": \"unpin\"\n                }[iconClass.replace(/(k-i-|k-svg-i-)/, \"\")];\n            },\n\n            _windowActionHandler: function(e) {\n                if (this._closing) {\n                    return;\n                }\n                var icon = $(e.target).closest(\".k-window-titlebar-action\").find(\".k-icon,.k-svg-icon\");\n                var action = this._actionForIcon(icon);\n\n                if (action) {\n                    e.preventDefault();\n                    this[action]();\n                    return false;\n                }\n            },\n\n            _modals: function() {\n                var that = this,\n                    windowElements = $(KWINDOW + VISIBLE),\n                    windowInstance,\n                    modals = [];\n\n                for (var i = 0; i < windowElements.length; i += 1) {\n                    windowInstance = that._object($(windowElements[i]));\n\n                    if (windowInstance &&\n                        windowInstance.options &&\n                        windowInstance.options.modal &&\n                        windowInstance.options.visible &&\n                        windowInstance.options.appendTo === that.options.appendTo &&\n                        (!windowInstance.containment || (that.containment && windowInstance.containment[0] === that.containment[0]))) {\n                            modals.push(windowInstance.wrapper[0]);\n                    }\n                }\n\n                modals.sort(function(a, b) {\n                    return a.style.zIndex - b.style.zIndex;\n                });\n\n                that = null;\n\n                return $(modals);\n            },\n\n            _object: function(element) {\n                var content = element.children(KWINDOWCONTENT);\n                var widget = content.getKendoWindow();\n\n                if (widget) {\n                    return widget;\n                }\n\n                return undefined$1;\n            },\n\n            center: function() {\n                var that = this,\n                    position = that.options.position,\n                    wrapper = that.wrapper,\n                    documentWindow = $(window),\n                    scrollTop = 0,\n                    scrollLeft = 0,\n                    newTop, newLeft;\n\n                if (that.options.isMaximized) {\n                    return that;\n                }\n\n                if (that.options.pinned && !that._isPinned) {\n                    that.pin();\n                }\n\n                if (!that.options.pinned) {\n                    scrollTop = documentWindow.scrollTop();\n                    scrollLeft = documentWindow.scrollLeft();\n                }\n\n                if (this.containment && !that.options.pinned) {\n                    newTop = this.minTop + (this.maxTop - this.minTop) / 2;\n                    newLeft = this.minLeft + (this.maxLeft - this.minLeft) / 2;\n                } else {\n                    that._scrollIsAppended = true;\n                    newLeft = scrollLeft + Math.max(0, (documentWindow.width() - wrapper.outerWidth()) / 2);\n                    newTop = scrollTop + Math.max(0, (documentWindow.height() - wrapper.outerHeight() - toInt(wrapper, \"paddingTop\")) / 2);\n                }\n\n                wrapper.css({\n                    left: newLeft,\n                    top: newTop\n                });\n\n                position.top = newTop;\n                position.left = newLeft;\n\n                return that;\n            },\n\n            title: function(title) {\n                var that = this,\n                    value,\n                    encoded = true,\n                    wrapper = that.wrapper,\n                    titleBar = wrapper.children(KWINDOWTITLEBAR),\n                    titleElement = titleBar.children(KWINDOWTITLE);\n\n                if (!arguments.length) {\n                    return titleElement.html();\n                }\n\n                if ($.isPlainObject(title)) {\n                    value = typeof title.text !== \"undefined\" ? title.text : \"\";\n                    encoded = title.encoded !== false;\n                } else {\n                    value = title;\n                }\n\n                if (value === false) {\n                    wrapper.addClass(\"k-window-titleless\");\n                    wrapper.css(\"padding-top\", 0);\n                    titleBar.remove();\n                } else {\n                    if (!titleBar.length) {\n                        wrapper.prepend(templates.titlebar({\n                            title: encoded ? kendo.htmlEncode(value) : value\n                        }));\n                        that._actions();\n                        titleBar = wrapper.children(KWINDOWTITLEBAR);\n                    } else {\n                        titleElement.html(encoded ? kendo.htmlEncode(value) : value);\n                    }\n                }\n\n                that.options.title = value;\n\n                return that;\n            },\n\n            content: function(html, data) {\n                var content = this.wrapper.children(KWINDOWCONTENT),\n                    scrollContainer = content.children(\".km-scroll-container\");\n\n                content = scrollContainer[0] ? scrollContainer : content;\n\n                if (!defined(html)) {\n                    return content.html();\n                }\n\n                kendo.destroy(this.element.children());\n\n                content.empty().html(html);\n\n                return this;\n            },\n\n            open: function() {\n                var that = this,\n                    wrapper = that.wrapper,\n                    options = that.options,\n                    showOptions = this._animationOptions(\"open\"),\n                    contentElement = wrapper.children(KWINDOWCONTENT),\n                    overlay, otherModalsVisible,\n                    containmentContext = this.containment && !that._isPinned,\n                    doc = containmentContext ? this.containment : $(document);\n\n                if (!that.trigger(OPEN)) {\n                    if (that._closing) {\n                        wrapper.kendoStop(true, true);\n                    }\n\n                    that._closing = false;\n\n                    that.toFront();\n\n                    if (options.autoFocus) {\n                        that.wrapper.trigger(\"focus\");\n                    }\n\n                    options.visible = true;\n\n                    if (options.modal) {\n                        otherModalsVisible = !!that._modals().length;\n                        overlay = that._overlay(otherModalsVisible);\n\n                        overlay.kendoStop(true, true);\n\n                        if (showOptions.duration && kendo.effects.Fade && !otherModalsVisible) {\n                            var overlayFx = kendo.fx(overlay).fadeIn();\n                            overlayFx.duration(showOptions.duration || 0);\n                            overlayFx.endValue(0.5);\n                            overlayFx.play();\n                        } else {\n                            overlay.css(\"opacity\", 0.5);\n                        }\n\n                        overlay.show();\n\n                        $(window).on(\"focus\" + MODAL_NS, function() {\n                            if (wrapper.data(\"isFront\") && !$(document.activeElement).closest(wrapper).length) {\n                               that.wrapper.trigger(\"focus\");\n                            }\n                        });\n                    }\n\n                    if (!wrapper.is(VISIBLE)) {\n                        contentElement.css(OVERFLOW, HIDDEN);\n\n                        that.wrapper.find(TITLEBAR_BUTTONSSELECTOR).addClass(\"k-button-flat\");\n\n                        wrapper.css({ display: \"inline-flex\" });\n                        wrapper.kendoStop().kendoAnimate({\n                            effects: showOptions.effects,\n                            duration: showOptions.duration,\n                            complete: this._activate.bind(this)\n                        });\n                    }\n                }\n\n                if (options.isMaximized) {\n                    that._containerScrollTop = doc.scrollTop();\n                    that._containerScrollLeft = doc.scrollLeft();\n                    that._stopDocumentScrolling();\n                }\n\n                if (this.options.pinned && !this._isPinned) {\n                    this.pin();\n                }\n\n                return that;\n            },\n\n            _activate: function() {\n                var scrollable = this.options.scrollable !== false;\n\n                if (this.options.autoFocus) {\n                    this.wrapper.trigger(\"focus\");\n                }\n\n                this.element.css(OVERFLOW, scrollable ? \"\" : \"hidden\");\n                kendo.resize(this.element.children());\n\n                this.trigger(ACTIVATE);\n            },\n\n            _removeOverlay: function(suppressAnimation) {\n                var modals = this._modals();\n                var options = this.options;\n                var hideOverlay = options.modal && !modals.length;\n                var hideOptions = this._animationOptions(\"close\");\n\n                if (hideOverlay) {\n                    if (!suppressAnimation && hideOptions.duration && kendo.effects.Fade) {\n                        var overlayFx = kendo.fx(options.modal ? this._overlay(true) : $(undefined$1)).fadeOut();\n                        overlayFx.duration(hideOptions.duration || 0);\n                        overlayFx.startValue(0.5);\n                        overlayFx.play();\n                    } else {\n                        this._overlay(false).remove();\n                    }\n                    if (options.modal.preventScroll) {\n                        this._enableDocumentScrolling();\n                    }\n                } else if (modals.length) {\n                    this._object(modals.last())._overlay(true);\n\n                    if (options.modal.preventScroll) {\n                        this._stopDocumentScrolling();\n                    }\n                }\n            },\n\n            _close: function(systemTriggered) {\n                var that = this,\n                    wrapper = that.wrapper,\n                    options = that.options,\n                    showOptions = this._animationOptions(\"open\"),\n                    hideOptions = this._animationOptions(\"close\"),\n                    containmentContext = this.containment && !that._isPinned,\n                    doc = containmentContext ? this.containment : $(document),\n                    defaultPrevented;\n\n                if (that._closing) {\n                    return;\n                }\n\n                defaultPrevented = that.trigger(CLOSE, { userTriggered: !systemTriggered });\n                that._closing = !defaultPrevented;\n\n                if (wrapper.is(VISIBLE) && !defaultPrevented) {\n                    options.visible = false;\n\n                    $(KWINDOW).each(function(i, element) {\n                        var contentElement = $(element).children(KWINDOWCONTENT);\n\n                        // Remove overlay set by toFront\n                        if (element != wrapper && contentElement.find(\"> .\" + KCONTENTFRAME).length > 0) {\n                            contentElement.children(KOVERLAY).remove();\n                        }\n                    });\n\n                    this._removeOverlay();\n\n                    // Prevent close animation from stopping\n                    that.wrapper.find(TITLEBAR_BUTTONSSELECTOR).removeClass(\"k-button-flat\");\n\n                    wrapper.kendoStop().kendoAnimate({\n                        effects: hideOptions.effects || showOptions.effects,\n                        reverse: hideOptions.reverse === true,\n                        duration: hideOptions.duration,\n                        complete: this._deactivate.bind(this)\n                    });\n                    $(window).off(MODAL_NS);\n                }\n\n                if (that.options.isMaximized) {\n                    that._enableDocumentScrolling();\n                    if (that._containerScrollTop && that._containerScrollTop > 0) {\n                        doc.scrollTop(that._containerScrollTop);\n                    }\n                    if (that._containerScrollLeft && that._containerScrollLeft > 0) {\n                        doc.scrollLeft(that._containerScrollLeft);\n                    }\n                }\n\n                if (that.options.iframe) {\n                    that.wrapper.trigger(\"blur\");\n                }\n            },\n\n            _deactivate: function() {\n                var that = this;\n\n                that.wrapper\n                    .removeClass(INLINE_FLEX)\n                    .hide()\n                    .css(\"opacity\", \"\");\n\n                that.trigger(DEACTIVATE);\n\n                if (that.options.modal) {\n                    var lastModal = that._object(that._modals().last());\n                    if (lastModal) {\n                        lastModal.toFront();\n                    }\n                }\n            },\n\n            close: function() {\n                this._close(true);\n                return this;\n            },\n\n            _actionable: function(element) {\n                return $(element).is(`${TITLEBAR_BUTTONSSELECTOR}, :input, a, .k-input, .k-icon, .k-svg-icon, .k-svg-icon>svg, .k-svg-icon>svg>path, .k-icon-button, [role='gridcell'], .k-input-inner, .k-input-value-text`);\n            },\n\n            _shouldFocus: function(target) {\n                var active = activeElement(),\n                    element = this.wrapper;\n\n                return this.options.autoFocus &&\n                    !$(active).is(element) &&\n                    !this._actionable(target) &&\n                    (!element.find(active).length || !element.find(target).length);\n            },\n\n            toFront: function(e, avoidFocus) {\n                var that = this,\n                    wrapper = that.wrapper,\n                    currentWindow = wrapper[0],\n                    containmentContext = that.containment && !that._isPinned,\n                    openAnimation = this._animationOptions(\"open\"),\n                    zIndex = +wrapper.css(ZINDEX),\n                    originalZIndex = zIndex,\n                    target = (e && e.target) || null;\n\n                $(KWINDOW).each(function(i, element) {\n                    var windowObject = $(element),\n                        zIndexNew = windowObject.css(ZINDEX),\n                        contentElement = windowObject.children(KWINDOWCONTENT);\n\n                    if (!isNaN(zIndexNew)) {\n                        zIndex = Math.max(+zIndexNew, zIndex);\n                    }\n\n                    wrapper.data(\"isFront\", element == currentWindow);\n                    // Add overlay to windows with iframes and lower z-index to prevent\n                    // trapping of events when resizing / dragging\n\n                    if (element != currentWindow &&\n                        contentElement.find(\".\" + KCONTENTFRAME).length &&\n                        !contentElement.find(KOVERLAY).length) {\n                        contentElement.append(templates.overlay);\n                    }\n                });\n\n                if (!wrapper[0].style.zIndex || originalZIndex < zIndex) {\n                    wrapper.css(ZINDEX, zIndex + 2);\n                }\n                that.element.find(\"> .k-overlay\").remove();\n\n                if (that._shouldFocus(target)) {\n                    if (!avoidFocus) {\n                        setTimeout(function() {\n                            that.wrapper.focus();\n                        }, openAnimation ? openAnimation.duration : 0);\n                    }\n\n                    var scrollTop = containmentContext ? that.containment.scrollTop() : $(window).scrollTop(),\n                        windowTop = parseInt(wrapper.position().top, 10);\n\n                    if (!that.options.pinned && windowTop > 0 && windowTop < scrollTop) {\n                        if (scrollTop > 0) {\n                            $(window).scrollTop(windowTop);\n                        } else {\n                            wrapper.css(\"top\", scrollTop);\n                        }\n                    }\n                }\n\n                wrapper = null;\n\n                return that;\n            },\n\n            toggleMaximization: function() {\n                if (this._closing) {\n                    return this;\n                }\n\n                return this[this.options.isMaximized ? \"restore\" : \"maximize\"]();\n            },\n\n            restore: function() {\n                var that = this;\n                var options = that.options;\n                var minHeight = options.minHeight;\n                var restoreOptions = that.restoreOptions;\n                var shouldRestrictTop;\n                var container = that.containment && !that._isPinned ? that.containment : $(document);\n\n                if (!options.isMaximized && !options.isMinimized) {\n                    return that;\n                }\n\n                if (minHeight && minHeight != Infinity) {\n                    that.wrapper.css(\"min-height\", minHeight);\n                }\n\n                if (restoreOptions && !options.isMaximized) {\n                    restoreOptions.height = constrain(restoreOptions.height, that.options.minHeight, that.options.maxHeight);\n\n                    shouldRestrictTop = options.position.top + parseInt(restoreOptions.height, 10) > that.maxTop;\n\n                    if (shouldRestrictTop) {\n                        options.position.top = constrain(options.position.top, that.minTop, that.maxTop - parseInt(restoreOptions.height, 10));\n\n                        extend(restoreOptions, {\n                            left: options.position.left,\n                            top: options.position.top\n                        });\n                    }\n                }\n\n                that.wrapper\n                    .css({\n                        position: options.pinned ? \"fixed\" : \"absolute\",\n                        left: restoreOptions.left,\n                        top: restoreOptions.top,\n                        width: restoreOptions.width,\n                        height: restoreOptions.height\n                    })\n                    .removeClass(MAXIMIZEDSTATE)\n                    .removeClass(KWINDOWMINIMIZED)\n                    .find(\".k-window-content,.k-resize-handle\").show().end()\n                    .find(\".k-window-titlebar .k-i-window-restore,.k-window-titlebar .k-svg-i-window-restore\").parent().remove().end().end()\n                    .find(MINIMIZE_MAXIMIZEICONSELECTORS).parent().show().end().end()\n                    .find(PIN_UNPINICONCLASSSELECTOR).parent().show();\n\n                if (options.isMaximized) {\n                    that.wrapper.find(\".k-i-window,.k-svg-i-window\").parent().trigger(\"focus\");\n                } else if (options.isMinimized) {\n                    that.wrapper.find(\".k-i-window-minimize,.k-svg-i-window-minimize\").parent().trigger(\"focus\");\n                }\n\n                that.options.width = restoreOptions.width;\n                that.options.height = restoreOptions.height;\n\n                if (!that.options.modal.preventScroll) {\n                    that._enableDocumentScrolling();\n                }\n\n                if (that._containerScrollTop && that._containerScrollTop > 0) {\n                    container.scrollTop(that._containerScrollTop);\n                }\n                if (that._containerScrollLeft && that._containerScrollLeft > 0) {\n                    container.scrollLeft(that._containerScrollLeft);\n                }\n\n                options.isMaximized = options.isMinimized = false;\n\n                that.wrapper.removeAttr(\"aria-labelled-by\");\n\n                that.resize();\n\n                that.trigger(RESTORE);\n\n                return that;\n            },\n\n            _sizingAction: function(actionId, callback) {\n                var that = this,\n                    wrapper = that.wrapper,\n                    style = wrapper[0].style,\n                    options = that.options;\n\n                if (options.isMaximized || options.isMinimized) {\n                    return that;\n                }\n\n                that.restoreOptions = {\n                    width: style.width,\n                    height: style.height\n                };\n\n                wrapper\n                    .children(KWINDOWRESIZEHANDLES).hide().end()\n                    .children(KWINDOWTITLEBAR).find(MINIMIZE_MAXIMIZEICONSELECTORS).parent().hide()\n                    .eq(0).before(templates.action({ name: \"window-restore\" }));\n\n                callback.call(that);\n\n                that.wrapper.children(KWINDOWTITLEBAR).find(PIN_UNPINICONCLASSSELECTOR).parent().toggle(actionId !== \"maximize\");\n\n                that.trigger(actionId);\n\n                wrapper.find(\".k-i-window-restore,.k-svg-i-window-restore\").parent().trigger(\"focus\");\n\n                return that;\n            },\n\n            maximize: function() {\n                this._sizingAction(\"maximize\", function() {\n                    var that = this,\n                        wrapper = that.wrapper,\n                        containmentContext = this.containment && !that._isPinned,\n                        position = wrapper.position(),\n                        doc = $(document);\n\n                    extend(that.restoreOptions, {\n                        left: position.left + (containmentContext ? this.containment.scrollLeft() : 0),\n                        top: position.top + (containmentContext ? this.containment.scrollTop() : 0)\n                    });\n\n                    this._containerScrollTop = containmentContext ? this.containment.scrollTop() : doc.scrollTop();\n                    this._containerScrollLeft = containmentContext ? this.containment.scrollLeft() : doc.scrollLeft();\n\n                    that._stopDocumentScrolling();\n\n                    wrapper\n                        .css({\n                            top: containmentContext ? this.containment.scrollTop() : 0,\n                            left: containmentContext ? this.containment.scrollLeft() : 0,\n                            position: containmentContext ? \"absolute\" : \"fixed\"\n                        })\n                        .addClass(MAXIMIZEDSTATE);\n\n                    that.options.isMaximized = true;\n\n                    that._onDocumentResize();\n                });\n\n                return this;\n            },\n\n            _stopDocumentScrolling: function() {\n                var that = this;\n                var containment = that.containment;\n\n                if (containment && !that._isPinned) {\n                    that._storeOverflowRule(containment);\n                    containment.css(OVERFLOW, HIDDEN);\n                    that.wrapper.css({\n                        maxWidth: containment.innerWidth(),\n                        maxHeight: containment.innerHeight()\n                    });\n                    return;\n                }\n\n                var $body = $(\"body\");\n                that._storeOverflowRule($body);\n                $body.css(OVERFLOW, HIDDEN);\n\n                var $html = $(\"html\");\n                that._storeOverflowRule($html);\n                $html.css(OVERFLOW, HIDDEN);\n            },\n\n            _enableDocumentScrolling: function() {\n                var that = this;\n                var containment = that.containment;\n\n                if (containment && !that._isPinned) {\n                    that._restoreOverflowRule(containment);\n                    that.wrapper.css({\n                        maxWidth: containment.width,\n                        maxHeight: containment.height\n                    });\n                    return;\n                }\n\n                that._restoreOverflowRule($(document.body));\n                that._restoreOverflowRule($(\"html\"));\n            },\n\n            _storeOverflowRule: function($element) {\n                if (this._isOverflowStored($element)) {\n                    return;\n                }\n\n                var overflowRule = $element.get(0).style.overflow;\n\n                if (typeof overflowRule === \"string\") {\n                    $element.data(DATADOCOVERFLOWRULE, overflowRule);\n                }\n            },\n\n            _isOverflowStored: function($element) {\n                return typeof $element.data(DATADOCOVERFLOWRULE) === \"string\";\n            },\n\n            _restoreOverflowRule: function($element) {\n                var overflowRule = $element.data(DATADOCOVERFLOWRULE);\n\n                if (overflowRule !== null && overflowRule !== undefined$1) {\n                    $element.css(OVERFLOW, overflowRule);\n                    $element.removeData(DATADOCOVERFLOWRULE);\n                } else {\n                    $element.css(OVERFLOW, \"\");\n                }\n            },\n\n            isMaximized: function() {\n                return this.options.isMaximized;\n            },\n\n            minimize: function() {\n                this._sizingAction(\"minimize\", function() {\n                    var that = this;\n\n                    that.wrapper.css({\n                        height: \"\",\n                        minHeight: \"\"\n                    });\n\n                    that.element.hide();\n\n                    that.options.isMinimized = true;\n                });\n\n                this.wrapper.attr(\"aria-labelled-by\", this.element.attr(\"aria-labelled-by\"));\n                this.wrapper.addClass(KWINDOWMINIMIZED);\n\n                this._updateBoundaries();\n\n                return this;\n            },\n\n            isMinimized: function() {\n                return this.options.isMinimized;\n            },\n\n            pin: function() {\n                var that = this,\n                    win = $(window),\n                    wrapper = that.wrapper,\n                    options = that.options,\n                    position = options.position,\n                    top = this.containment ? getPosition(wrapper[0]).top + toInt(this.containment, \"borderTopWidth\") : toInt(wrapper, \"top\"),\n                    left = this.containment ? getPosition(wrapper[0]).left + toInt(this.containment, \"borderLeftWidth\") : toInt(wrapper, \"left\");\n\n                if (!that.options.isMaximized) {\n                    position.top = top;\n                    position.left = left;\n\n                    if (that._scrollIsAppended && (!this.containment || this.containment.css(\"position\") !== \"fixed\")) {\n\n                        position.top -= win.scrollTop();\n                        position.left -= win.scrollLeft();\n                        that._scrollIsAppended = false;\n                    }\n\n                    wrapper.css(extend(position, { position: \"fixed\" }));\n                    var pinIcon = wrapper.children(KWINDOWTITLEBAR).find(KPINICONCLASSSELECTOR).eq(0);\n                    if (pinIcon.length > 0) {\n                        kendo.ui.icon(pinIcon, { icon: \"unpin\" });\n                    }\n\n                    that._isPinned = true;\n                    that.options.pinned = true;\n\n                    if (this.containment) {\n                        options.maxWidth = options.maxHeight = Infinity;\n                        wrapper.css({\n                            maxWidth: \"\",\n                            maxHeight: \"\"\n                        });\n                    }\n                }\n            },\n\n            unpin: function() {\n                var that = this,\n                    win = $(window),\n                    wrapper = that.wrapper,\n                    options = that.options,\n                    position = that.options.position,\n                    containment = that.containment,\n                    top = parseInt(wrapper.css(\"top\"), 10) + win.scrollTop(),\n                    left = parseInt(wrapper.css(\"left\"), 10) + win.scrollLeft();\n\n                if (!that.options.isMaximized) {\n                    that._isPinned = false;\n                    that._scrollIsAppended = true;\n                    that.options.pinned = false;\n\n                    if (containment) {\n                        that._updateBoundaries();\n\n                        options.maxWidth = Math.min(containment.width, options.maxWidth);\n                        options.maxHeight = Math.min(containment.height - toInt(wrapper, \"padding-top\"), options.maxHeight);\n\n                        wrapper.css({\n                            maxWidth: options.maxWidth,\n                            maxHeight: options.maxHeight\n                        });\n\n                        if (top < containment.position.top) {\n                            top = that.minTop;\n                        } else if (top > containment.position.top + containment.height) {\n                            top = that.maxTop;\n                        } else {\n                            top = top + containment.scrollTop() - (containment.position.top + toInt(containment, \"border-top-width\"));\n                        }\n\n                        if (left < containment.position.left) {\n                            left = that.minLeft;\n                        } else if (left > containment.position.left + containment.width) {\n                            left = that.maxLeft;\n                        } else {\n                            left = left + containment.scrollLeft() - (containment.position.left + toInt(containment, \"border-left-width\"));\n                        }\n\n                    }\n\n                    position.top = constrain(top, that.minTop, that.maxTop);\n                    position.left = constrain(left, that.minLeft, that.maxLeft);\n\n                    wrapper.css(extend(position, { position: \"\" }));\n                    var pinIcon = wrapper.children(KWINDOWTITLEBAR).find(KUNPINICONCLASSSELECTOR).eq(0);\n                    if (pinIcon.length > 0) {\n                        kendo.ui.icon(pinIcon, { icon: \"pin\" });\n                    }\n                }\n            },\n\n            _onDocumentResize: function() {\n                var that = this,\n                    wrapper = that.wrapper,\n                    wnd = $(window),\n                    zoomLevel = kendo.support.zoomLevel(),\n                    contentBoxSizing = wrapper.css(\"box-sizing\") == \"content-box\",\n                    w, h;\n\n                if (!that.options.isMaximized) {\n                    return;\n                }\n\n                var lrBorderWidth = contentBoxSizing ? toInt(wrapper, \"border-left-width\") + toInt(wrapper, \"border-right-width\") : 0;\n                var tbBorderWidth = contentBoxSizing ? toInt(wrapper, \"border-top-width\") + toInt(wrapper, \"border-bottom-width\") : 0;\n                var paddingTop = contentBoxSizing ? toInt(wrapper, \"padding-top\") : 0;\n\n                if (that.containment && !that._isPinned) {\n                    w = that.containment.innerWidth() - lrBorderWidth;\n                    h = that.containment.innerHeight() - (tbBorderWidth + paddingTop);\n                } else {\n                    w = wnd.width() / zoomLevel - lrBorderWidth;\n                    h = wnd.height() / zoomLevel - (tbBorderWidth + paddingTop);\n                }\n\n                wrapper.css({\n                    width: w,\n                    height: h\n                });\n                that.options.width = w;\n                that.options.height = h;\n\n                that.resize();\n            },\n\n            refresh: function(options) {\n                var that = this,\n                    initOptions = that.options,\n                    element = $(that.element),\n                    iframe,\n                    showIframe,\n                    url;\n\n                if (!isPlainObject(options)) {\n                    options = { url: options };\n                }\n\n                options = extend(initOptions.content, options);\n\n                showIframe = defined(initOptions.iframe) ? initOptions.iframe : options.iframe;\n\n                url = options.url;\n\n                if (url) {\n                    if (!defined(showIframe)) {\n                        showIframe = !isLocalUrl(url);\n                    }\n\n                    if (!showIframe) {\n                        // perform AJAX request\n                        that._ajaxRequest(options);\n                    } else {\n                        iframe = element.find(\".\" + KCONTENTFRAME)[0];\n\n                        if (iframe) {\n                            // refresh existing iframe\n                            iframe.src = url || iframe.src;\n                        } else {\n                            // render new iframe\n                            element.html(templates.contentFrame(extend({}, initOptions, { content: options })));\n                        }\n\n                        element.find(\".\" + KCONTENTFRAME)\n                            .off(\"load\" + NS)\n                            .on(\"load\" + NS, this._triggerRefresh.bind(this));\n                    }\n                } else {\n                    if (options.template) {\n                        // refresh template\n                        that.content(template(options.template)({}));\n                    }\n\n                    that.trigger(REFRESH);\n                }\n\n                element.toggleClass(\"k-window-iframecontent\", !!showIframe);\n\n                return that;\n            },\n\n            _triggerRefresh: function() {\n                this.trigger(REFRESH);\n            },\n\n            _ajaxComplete: function() {\n                clearTimeout(this._loadingIconTimeout);\n                this.wrapper.find(REFRESHICONSELECTOR).removeClass(LOADINGICONCLASS);\n            },\n\n            _ajaxError: function(xhr, status) {\n                this.trigger(ERROR, { status: status, xhr: xhr });\n            },\n\n            _ajaxSuccess: function(contentTemplate) {\n                return function(data) {\n                    var html = data;\n                    if (contentTemplate) {\n                        html = template(contentTemplate)(data || {});\n                    }\n\n                    this.content(html, data);\n                    this.element.prop(\"scrollTop\", 0);\n\n                    this.trigger(REFRESH);\n                };\n            },\n\n            _showLoading: function() {\n                this.wrapper.find(REFRESHICONSELECTOR).addClass(LOADINGICONCLASS);\n            },\n\n            _ajaxRequest: function(options) {\n                this._loadingIconTimeout = setTimeout(this._showLoading.bind(this), 100);\n\n                $.ajax(extend({\n                    type: \"GET\",\n                    dataType: \"html\",\n                    cache: false,\n                    error: this._ajaxError.bind(this),\n                    complete: this._ajaxComplete.bind(this),\n                    success: this._ajaxSuccess(options.template).bind(this)\n                }, options));\n            },\n\n            _destroy: function() {\n                if (this.resizing) {\n                    this.resizing.destroy();\n                }\n\n                if (this.dragging) {\n                    this.dragging.destroy();\n                }\n\n                this.wrapper.off(NS)\n                    .children(KWINDOWCONTENT).off(NS).end()\n                    .find(\".k-resize-handle,.k-window-titlebar\").off(NS);\n\n                $(window).off(\"resize\" + NS + this._marker);\n                $(window).off(MODAL_NS);\n                $(window).off(NS);\n\n                clearTimeout(this._loadingIconTimeout);\n\n                Widget.fn.destroy.call(this);\n\n                this.unbind(undefined$1);\n\n                kendo.destroy(this.wrapper);\n            },\n\n            destroy: function() {\n                this._destroy();\n\n                if (this.options.modal) {\n                    this._removeOverlay(true);\n                }\n\n                this.wrapper.empty().remove();\n\n                this.wrapper = this.appendTo = this.element = $();\n            },\n\n            _createWindow: function() {\n                var contentHtml = this.element,\n                    options = this.options,\n                    iframeSrcAttributes,\n                    wrapper,\n                    isRtl = kendo.support.isRtl(contentHtml);\n\n                if (options.scrollable === false) {\n                    contentHtml.css(\"overflow\", \"hidden\");\n                }\n\n                wrapper = $(templates.wrapper(options));\n\n                // Collect the src attributes of all iframes and then set them to empty string.\n                // This seems to fix this IE9 \"feature\": http://msdn.microsoft.com/en-us/library/gg622929%28v=VS.85%29.aspx?ppud=4\n                iframeSrcAttributes = contentHtml.find(\"iframe:not(.k-content-frame)\").map(function() {\n                    var src = this.getAttribute(\"src\");\n                    this.src = \"\";\n                    return src;\n                });\n\n                // Make sure the wrapper is appended to the body only once. IE9+ will throw exceptions if you move iframes in DOM\n                wrapper\n                    .toggleClass(\"k-rtl\", isRtl)\n                    .attr(\"tabindex\", 0)\n                    .append(contentHtml)\n                    .find(\"iframe:not(.k-content-frame)\").each(function(index) {\n                    // Restore the src attribute of the iframes when they are part of the live DOM tree\n                    this.src = iframeSrcAttributes[index];\n                });\n\n                if (this.containment) {\n                    this.containment.prepend(wrapper);\n                } else if (this.appendTo) {\n                    wrapper.appendTo(this.appendTo);\n                }\n\n                wrapper.find(\".k-window-title\")\n                    .css(isRtl ? \"left\" : \"right\", outerWidth(wrapper.find(\".k-window-titlebar-actions\")) + 10);\n\n                contentHtml.css(\"visibility\", \"\").show();\n\n                if ($(contentHtml).hasClass(KHIDDEN))\n                {\n                    $(contentHtml).removeClass(KHIDDEN);\n                }\n                contentHtml.find(\"[data-role=editor]\").each(function() {\n                    var editor = $(this).data(\"kendoEditor\");\n\n                    if (editor) {\n                        editor.refresh();\n                    }\n                });\n\n                wrapper = contentHtml = null;\n            }\n        });\n\n        templates = {\n            wrapper: template(() => \"<div class='k-window'></div>\"),\n            action: template(({ name, icon }) => {\n                let iconName = (icon || \"\").toLowerCase() || name.toLowerCase();\n                if (iconName == \"restore\") { iconName = \"window-restore\"; }\n\n                return kendo.html.renderButton(`<button role='button' class='k-window-titlebar-action' aria-label='${name}'></button>`, { icon: iconName, fillMode: \"flat\" });\n            }),\n            titlebar: template(({ title }) =>\n                \"<div class='k-window-titlebar'>\" +\n                    `<span class='k-window-title'>${title}</span>` +\n                    \"<div class='k-window-titlebar-actions'></div>\" +\n                \"</div>\"\n            ),\n            overlay: \"<div class='k-overlay'></div>\",\n            contentFrame: template(({ title, content }) =>\n                `<iframe frameborder='0' title='${title}' class='${KCONTENTFRAME}' ` +\n                `src='${content.url}'>` +\n                \"This page requires frames in order to show content\" +\n                \"</iframe>\"\n            ),\n            resizeHandle: template((data) => `<div aria-hidden='true' class='k-resize-handle k-resize-${data}'></div>`)\n        };\n\n\n        function WindowResizing(wnd) {\n            var that = this;\n            that.owner = wnd;\n            that._preventDragging = false;\n            that._draggable = new Draggable(wnd.wrapper, {\n                filter: \">\" + KWINDOWRESIZEHANDLES,\n                group: wnd.wrapper.id + \"-resizing\",\n                dragstart: that.dragstart.bind(that),\n                drag: that.drag.bind(that),\n                dragend: that.dragend.bind(that)\n            });\n\n            that._draggable.userEvents.bind(\"press\", that.addOverlay.bind(that));\n            that._draggable.userEvents.bind(\"release\", that.removeOverlay.bind(that));\n        }\n\n        WindowResizing.prototype = {\n            addOverlay: function() {\n                this.owner.wrapper.append(templates.overlay);\n            },\n            removeOverlay: function() {\n                this.owner.wrapper.find(KOVERLAY).remove();\n            },\n            dragstart: function(e) {\n                var that = this;\n                var wnd = that.owner;\n                var wrapper = wnd.wrapper;\n\n                that._preventDragging = wnd.trigger(RESIZESTART);\n                if (that._preventDragging) {\n                    return;\n                }\n\n                that.elementPadding = parseInt(wrapper.css(\"padding-top\"), 10);\n                that.initialPosition = kendo.getOffset(wrapper, \"position\");\n\n                that.resizeDirection = e.currentTarget.prop(\"className\").replace(\"k-resize-handle k-resize-\", \"\");\n\n                that.initialSize = {\n                    width: wrapper.outerWidth(),\n                    height: wrapper.outerHeight()\n                };\n\n                wnd._updateBoundaries();\n\n                that.containerOffset = wnd.containment ? wnd.containment.position : kendo.getOffset(wnd.appendTo);\n\n                var offsetParent = wrapper.offsetParent();\n\n                if (offsetParent.is(\"html\")) {\n                    that.containerOffset.top = that.containerOffset.left = 0;\n                } else {\n                    var marginTop = offsetParent.css(\"margin-top\");\n                    var marginLeft = offsetParent.css(\"margin-left\");\n                    var hasMargin = !zero.test(marginTop) || !zero.test(marginLeft);\n                    if (hasMargin) {\n                        var wrapperPosition = getPosition(wrapper[0]);\n                        var relativeElMarginLeft = wrapperPosition.left - that.containerOffset.left - that.initialPosition.left;\n                        var relativeElMarginTop = wrapperPosition.top - that.containerOffset.top - that.initialPosition.top;\n\n                        that._relativeElMarginLeft = relativeElMarginLeft > 1 ? relativeElMarginLeft : 0;\n                        that._relativeElMarginTop = relativeElMarginTop > 1 ? relativeElMarginTop : 0;\n\n                        that.initialPosition.left += that._relativeElMarginLeft;\n                        that.initialPosition.top += that._relativeElMarginTop;\n                    }\n                }\n\n                wrapper\n                    .children(KWINDOWRESIZEHANDLES).not(e.currentTarget).hide();\n\n                $(BODY).css(CURSOR, e.currentTarget.css(CURSOR));\n            },\n            drag: function(e) {\n                if (this._preventDragging) {\n                    return;\n                }\n                var that = this,\n                    wnd = that.owner,\n                    wrapper = wnd.wrapper,\n                    options = wnd.options,\n                    position = options.position,\n                    direction = that.resizeDirection,\n                    containerOffset = that.containerOffset,\n                    initialPosition = that.initialPosition,\n                    initialSize = that.initialSize,\n                    containmentContext = wnd.containment && !wnd._isPinned,\n                    rtl = kendo.support.isRtl(wnd.containment),\n                    leftRtlOffset = containmentContext && rtl && wnd.containment.innerWidth() > wnd.containment.width ? kendo.support.scrollbar() : 0,\n                    scrollOffset = containmentContext ? { top: wnd.containment.scrollTop(), left: wnd.containment.scrollLeft() } : { top: 0, left: 0 },\n                    newWidth, newHeight,\n                    windowBottom, windowRight,\n                    x = Math.max(e.x.location, 0),\n                    y = Math.max(e.y.location, 0);\n\n                    if (direction.indexOf(\"e\") >= 0) {\n\n                        if (wnd.containment && x - initialSize.width >= wnd.maxLeft - scrollOffset.left + containerOffset.left + leftRtlOffset) {\n                            newWidth = wnd.maxLeft + leftRtlOffset - initialPosition.left + initialSize.width - scrollOffset.left;\n                        } else {\n                            newWidth = x - initialPosition.left - containerOffset.left;\n                        }\n\n                        wrapper.outerWidth(constrain(newWidth, options.minWidth, options.maxWidth));\n                    } else if (direction.indexOf(\"w\") >= 0) {\n                        windowRight = initialPosition.left + initialSize.width + containerOffset.left;\n                        newWidth = constrain(windowRight - x, options.minWidth, options.maxWidth);\n                        position.left = windowRight - newWidth - containerOffset.left - leftRtlOffset - (that._relativeElMarginLeft || 0) + scrollOffset.left;\n\n                        if (wnd.containment && position.left <= wnd.minLeft) {\n                            position.left = wnd.minLeft;\n                            newWidth = constrain(windowRight - leftRtlOffset - position.left - containerOffset.left + scrollOffset.left, options.minWidth, options.maxWidth);\n                        }\n\n                        wrapper.css({\n                            left: position.left,\n                            width: newWidth\n                        });\n                    }\n\n                    var newWindowTop = y;\n                    if (wnd.options.pinned) {\n                        newWindowTop -= $(window).scrollTop();\n                    }\n                    if (direction.indexOf(\"s\") >= 0) {\n                        newHeight = newWindowTop - initialPosition.top - that.elementPadding - containerOffset.top;\n\n                        if (newWindowTop - initialSize.height - that.elementPadding >= wnd.maxTop + containerOffset.top - scrollOffset.top) {\n                            newHeight = wnd.maxTop - initialPosition.top + initialSize.height - scrollOffset.top;\n                        }\n\n                        wrapper.outerHeight(constrain(newHeight, options.minHeight, options.maxHeight));\n                    } else if (direction.indexOf(\"n\") >= 0) {\n                        windowBottom = initialPosition.top + initialSize.height + containerOffset.top;\n                        newHeight = constrain(windowBottom - newWindowTop, options.minHeight, options.maxHeight);\n                        position.top = windowBottom - newHeight - containerOffset.top - (that._relativeElMarginTop || 0) + scrollOffset.top;\n\n                        if (position.top <= wnd.minTop && wnd.containment) {\n                            position.top = wnd.minTop;\n                            newHeight = constrain(windowBottom - position.top - containerOffset.top + scrollOffset.top, options.minHeight, options.maxHeight);\n                        }\n\n                        wrapper.css({\n                            top: position.top,\n                            height: newHeight\n                        });\n                    }\n\n                    if (newWidth) {\n                        wnd.options.width = newWidth + \"px\";\n                    }\n                    if (newHeight) {\n                        wnd.options.height = newHeight + \"px\";\n                    }\n\n                    wnd.resize();\n            },\n            dragend: function(e) {\n                if (this._preventDragging) {\n                    return;\n                }\n\n                var that = this,\n                    wnd = that.owner,\n                    wrapper = wnd.wrapper;\n\n                wrapper\n                    .children(KWINDOWRESIZEHANDLES).not(e.currentTarget).show();\n\n                $(BODY).css(CURSOR, \"\");\n\n                if (wnd.touchScroller) {\n                    wnd.touchScroller.reset();\n                }\n\n                if (e.keyCode == 27) {\n                    wrapper.css(that.initialPosition)\n                        .css(that.initialSize);\n                }\n\n                wnd.trigger(RESIZEEND);\n\n                return false;\n            },\n            destroy: function() {\n                if (this._draggable) {\n                    this._draggable.destroy();\n                }\n\n                this._draggable = this.owner = null;\n            }\n        };\n\n        function WindowDragging(wnd, dragHandle, clickMoveClick) {\n            var that = this,\n                filter = dragHandle;\n\n            if (clickMoveClick) {\n                filter += \",.k-overlay\";\n            }\n\n            that.owner = wnd;\n            that._preventDragging = false;\n            that._draggable = new Draggable(wnd.wrapper, {\n                filter: dragHandle,\n                group: wnd.wrapper.id + \"-moving\",\n                clickMoveClick: clickMoveClick,\n                dragstart: that.dragstart.bind(that),\n                drag: that.drag.bind(that),\n                dragend: that.dragend.bind(that),\n                dragcancel: that.dragcancel.bind(that)\n            });\n\n            that._draggable.userEvents.stopPropagation = false;\n        }\n\n        WindowDragging.prototype = {\n            dragstart: function(e) {\n                var wnd = this.owner,\n                    draggable = wnd.options.draggable,\n                    element = wnd.element,\n                    actions = element.find(\".k-window-titlebar-actions\"),\n                    containerOffset = kendo.getOffset(wnd.appendTo);\n\n                this._preventDragging = wnd.trigger(DRAGSTART) || !draggable;\n                if (this._preventDragging || wnd.isMaximized()) {\n                    return;\n                }\n\n                wnd.initialWindowPosition = kendo.getOffset(wnd.wrapper, \"position\");\n\n                if (!wnd.initialPointerPosition) {\n                    wnd.options.position.left = constrain(wnd.initialWindowPosition.left, wnd.minLeft, wnd.maxLeft);\n                    wnd.options.position.top = constrain(wnd.initialWindowPosition.top, wnd.minTop, wnd.maxTop);\n                }\n\n                wnd.initialPointerPosition = {\n                    left: wnd.options.position.left,\n                    top: wnd.options.position.top\n                };\n\n                wnd.startPosition = {\n                    left: e.x.client - wnd.initialWindowPosition.left,\n                    top: e.y.client - wnd.initialWindowPosition.top\n                };\n\n                wnd._updateBoundaries();\n                if (!wnd.containment) {\n                    if (actions.length > 0) {\n                        wnd.minLeft = outerWidth(actions) + parseInt(actions.css(\"right\"), 10) - outerWidth(element);\n                    } else {\n                        wnd.minLeft = 20 - outerWidth(element); // at least 20px remain visible\n                    }\n\n                    wnd.minLeft -= containerOffset.left;\n                    wnd.minTop = -containerOffset.top;\n                }\n\n                $(templates.overlay).appendTo(wnd.wrapper).css({ opacity: 0 });\n\n                wnd.wrapper.children(KWINDOWRESIZEHANDLES).hide();\n\n                $(BODY).css(CURSOR, e.currentTarget.css(CURSOR));\n            },\n\n            drag: function(e) {\n                var wnd = this.owner;\n                var position = wnd.options.position;\n                var axis = wnd.options.draggable.axis;\n                var left;\n                var top;\n\n                if (this._preventDragging || wnd.isMaximized()) {\n                    return;\n                }\n\n                if (!axis || axis.toLowerCase() === \"x\") {\n                    left = e.x.client - wnd.startPosition.left;\n\n                    if (wnd.containment && !wnd._isPinned) {\n                        left += wnd.containment.scrollLeft();\n                    }\n\n                    position.left = constrain(left, wnd.minLeft, wnd.maxLeft);\n                }\n\n                if (!axis || axis.toLowerCase() === \"y\") {\n                    top = e.y.client - wnd.startPosition.top;\n\n                    if (wnd.containment && !wnd._isPinned) {\n                        top += wnd.containment.scrollTop();\n                    }\n\n                    position.top = constrain(top, wnd.minTop, wnd.maxTop);\n                }\n\n                $(wnd.wrapper).css(\n                    \"transform\", \"translate(\" +\n                    (position.left - wnd.initialPointerPosition.left) + \"px, \" +\n                    (position.top - wnd.initialPointerPosition.top) + \"px)\"\n                );\n\n            },\n\n            _finishDrag: function() {\n                var wnd = this.owner;\n\n                wnd.wrapper\n                    .children(KWINDOWRESIZEHANDLES).toggle(!wnd.options.isMinimized).end()\n                    .find(KOVERLAY).remove();\n\n                $(BODY).css(CURSOR, \"\");\n            },\n\n            dragcancel: function(e) {\n                if (this._preventDragging) {\n                    return;\n                }\n                this._finishDrag();\n\n                e.currentTarget.closest(KWINDOW).css(this.owner.initialWindowPosition);\n            },\n\n            dragend: function() {\n                var wnd = this.owner;\n\n                if (this._preventDragging || wnd.isMaximized()) {\n                    return;\n                }\n\n                $(wnd.wrapper)\n                    .css(wnd.options.position)\n                    .css(\"transform\", \"\");\n\n                this._finishDrag();\n\n                wnd.trigger(DRAGEND);\n\n                return false;\n            },\n            destroy: function() {\n                if (this._draggable) {\n                    this._draggable.destroy();\n                }\n\n                this._draggable = this.owner = null;\n            }\n        };\n\n        kendo.ui.plugin(Window);\n\n    })(__webpack_provided_window_dot_kendo.jQuery);\nvar kendo$1 = kendo;\n\n\n\n\n//# sourceURL=webpack://web/./node_modules/kendo-ui-core/esm/kendo.window.js?");

/***/ })

}]);