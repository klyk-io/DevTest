"use strict";
(self["webpackChunkklyk"] = self["webpackChunkklyk"] || []).push([["node_modules_arcgis_core_layers_graphics_sources_support_uploadAssets_js"],{

/***/ "./node_modules/@arcgis/core/layers/graphics/sources/support/uploadAssets.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/sources/support/uploadAssets.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   uploadAssets: () => (/* binding */ g)
/* harmony export */ });
/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../request.js */ "./node_modules/@arcgis/core/request.js");
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/Logger.js */ "./node_modules/@arcgis/core/core/Logger.js");
/* harmony import */ var _core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../core/promiseUtils.js */ "./node_modules/@arcgis/core/core/promiseUtils.js");
/* harmony import */ var _core_urlUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../core/urlUtils.js */ "./node_modules/@arcgis/core/core/urlUtils.js");
/* harmony import */ var _core_uuid_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../core/uuid.js */ "./node_modules/@arcgis/core/core/uuid.js");
/* harmony import */ var _geometry_support_meshUtils_External_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../geometry/support/meshUtils/External.js */ "./node_modules/@arcgis/core/geometry/support/meshUtils/External.js");
/* harmony import */ var _uploads_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./uploads.js */ "./node_modules/@arcgis/core/layers/graphics/sources/support/uploads.js");
/* harmony import */ var _support_infoFor3D_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../support/infoFor3D.js */ "./node_modules/@arcgis/core/layers/support/infoFor3D.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
async function g(e,t,s){return e.length?Promise.all(e.map((e=>T(e,t,s)))):[]}async function T(e,{layer:s,ongoingUploads:r},a){const o=r.get(e);if(o)return o;if(!P(s))throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](`${s.type}-layer:upload-failure`,"Layer does not support asset uploads.",new Error);if(b(e,s))return e;const n=E(e,s,a);r.set(e,n);try{await n}finally{r.delete(e)}return e}function b(e,t){const{parsedUrl:s}=t;return null!=s&&e.metadata.externalSources.some((e=>(0,_geometry_support_meshUtils_External_js__WEBPACK_IMPORTED_MODULE_6__.externalIsOnService)(e,s)))}async function E(e,t,s){const{metadata:a}=e,{displaySource:o}=a,n=x(o?.source,t),i=!!n,u=a.externalSources.length>0,l=i?$(n,t,s):u?F(e,t,s):j(e,t,s),c=await l;return (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.throwIfAborted)(s),e.addExternalSources([c]),e}async function $(e,t,s){return{source:await N(e,t,s),original:!0}}async function F(e,s,r){const a=B(s),{externalSources:o}=e.metadata,n=U(o,s);if(!n)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](`${s.type}-layer:upload-failure`,"Could not find an external source that is supported by the service.",new Error);const i=await N(n,s,r);e.addExternalSources([{source:i,original:!0}]);return{source:await q(i,s,a)}}async function j(e,t,s){const r=D(e,t,s);return{source:await A([r],t,s),extent:e.extent.clone(),original:!0}}async function D(e,t,s){const a=B(t),o=await e.load(s),n=await o.toBinaryGLTF({ignoreLocalTransform:!0});(0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.throwIfAborted)(s);const i=await n.buffer();return (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.throwIfAborted)(s),{blob:new Blob([i.data],{type:i.type}),assetName:`${(0,_core_uuid_js__WEBPACK_IMPORTED_MODULE_5__.generateBracedUUID)()}.glb`,assetType:a}}function U(e,t){for(const s of e){const e=x(s.source,t);if(e)return e}return null}function x(e,t){if(!e)return null;const{infoFor3D:{supportedFormats:s,editFormats:r}}=t,a=(0,_geometry_support_meshUtils_External_js__WEBPACK_IMPORTED_MODULE_6__.externalSourceToMultiPart)(e),o=new Array;let n=!1;for(let i=0;i<a.length;++i){const e=v(a[i],s);if(!e)return null;r.includes(e.assetType)&&(n=!0),o.push(e)}return n?o:null}function v(e,t){const s=(0,_geometry_support_meshUtils_External_js__WEBPACK_IMPORTED_MODULE_6__.assetFormatId)(e,t);return s?{asset:e,assetType:s}:null}async function N(e,t,s){return A(e.map((e=>S(e,s))),t,s)}async function A(e,t,s){const a=await Promise.all(e.map((async e=>{const a=I(await e,t,s);return (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.throwIfAborted)(s),a})));(0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.throwIfAborted)(s);const{uploadResults:o}=await R(a.map((({item:e})=>e)),t,s);return (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.throwIfAborted)(s),e.map(((e,s)=>L(a[s],o[s],t)))}async function S(e,t){const{asset:s,assetType:a}=e;if(s instanceof File)return{blob:s,assetName:s.name,assetType:a};const o=await s.toBlob(t);return (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.throwIfAborted)(t),{blob:o,assetName:s.assetName,assetType:a}}async function I(e,o,i){const{blob:u,assetType:l,assetName:c}=e;let p=null;try{const e=await (0,_uploads_js__WEBPACK_IMPORTED_MODULE_7__.uploadItem)({data:u,name:c},o.url,i);(0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.throwIfAborted)(i),p={assetType:l,assetUploadId:e.itemID}}catch(f){(0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.throwIfAbortError)(f),_core_Logger_js__WEBPACK_IMPORTED_MODULE_2__["default"].getLogger("esri.layers.graphics.sources.support.uploadAssets").warnOnce(`Service ${o.url} does not support the REST Uploads API.`)}if(!p){const e=await (0,_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_4__.parseData)(u);if((0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.throwIfAborted)(i),!e.isBase64)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](`${o.type}-layer:uploadAssets-failure`,"Expected gltf data in base64 format after conversion.",new Error);p={assetType:l,assetData:e.data}}if(!p)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](`${o.type}-layer:uploadAssets-failure`,"Unable to prepare uploadAsset request options.",new Error);return{item:p,assetName:c}}async function R(s,a,o){const n=await (0,_request_js__WEBPACK_IMPORTED_MODULE_0__["default"])((0,_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_4__.join)(a.parsedUrl.path,"uploadAssets"),{timeout:0,query:{f:"json",assets:JSON.stringify(s)},method:"post",responseType:"json"});if((0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.throwIfAborted)(o),n.data.uploadResults.length!==s.length)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](`${a.type}-layer:uploadAssets-failure`,`Bad response. Uploaded ${s.length} items and received ${n.data.uploadResults.length} results.`,new Error);return n.data}function L(e,s,r){const{success:a}=s;if(!a){const{error:a}=s;throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](`${r.type}-layer:upload-failure`,`Failed to upload mesh file ${e.assetName}. Error code: ${a.code}. Error message: ${a.messages}`,new Error)}const{assetHash:o}=s,{assetName:n,item:{assetType:i}}=e,{infoFor3D:{supportedFormats:u}}=r,l=(0,_support_infoFor3D_js__WEBPACK_IMPORTED_MODULE_8__.getFormatIdMimeType)(i,u);if(!l)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](`${r.type}-layer:upload-failure`,`The service allowed us to upload an asset of FormatID ${i}, but it does not list it in its supported formats.`,new Error);return new _geometry_support_meshUtils_External_js__WEBPACK_IMPORTED_MODULE_6__.ServiceAsset(n,l,[new _geometry_support_meshUtils_External_js__WEBPACK_IMPORTED_MODULE_6__.ServiceAssetPart(`${r.parsedUrl.path}/assets/${o}`,o)])}async function q(s,r,a){const o=s.map((({assetName:e,parts:t})=>({assetName:e,assetHash:t[0].partHash}))),n=r.capabilities?.operations.supportsAsyncConvert3D,u={query:{f:"json",assets:JSON.stringify(o),transportType:"esriTransportTypeUrl",targetFormat:a,async:n},responseType:"json",timeout:0},l=(0,_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_4__.join)(r.parsedUrl.path,"convert3D"),c=(n?await C(l,u):await (0,_request_js__WEBPACK_IMPORTED_MODULE_0__["default"])(l,u)).data,{infoFor3D:{supportedFormats:d}}=r;return c.assets.map((e=>{const s=(0,_support_infoFor3D_js__WEBPACK_IMPORTED_MODULE_8__.getMimeTypeFormatId)(e.contentType,d);if(!s)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](`${r.type}-layer:upload-failure`,`The service allowed us to upload an asset of FormatID ${s}, but it does not list it in its supported formats.`,new Error);return new _geometry_support_meshUtils_External_js__WEBPACK_IMPORTED_MODULE_6__.ServiceAsset(e.assetName,e.contentType,[new _geometry_support_meshUtils_External_js__WEBPACK_IMPORTED_MODULE_6__.ServiceAssetPart(e.assetURL,e.assetHash)])}))}async function C(s,r){const a=(await (0,_request_js__WEBPACK_IMPORTED_MODULE_0__["default"])(s,r)).data.statusUrl;for(;;){const s=(await (0,_request_js__WEBPACK_IMPORTED_MODULE_0__["default"])(a,{query:{f:"json"},responseType:"json"})).data;switch(s.status){case"Completed":return (0,_request_js__WEBPACK_IMPORTED_MODULE_0__["default"])(s.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"]("async-convert3D-failed","asynchronous convert3D call failed.");case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"]("async-convert3D-failed","asynchronous convert3D call failed (undefined response status)")}await (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.after)(H)}}function P(e){return!!e.infoFor3D&&!!e.url}function B(e){const{infoFor3D:s}=e,r=(0,_support_infoFor3D_js__WEBPACK_IMPORTED_MODULE_8__.getMimeTypeFormatId)("model/gltf-binary",s.supportedFormats)??(0,_support_infoFor3D_js__WEBPACK_IMPORTED_MODULE_8__.getFilenameFormatId)("glb",s.supportedFormats);if(!r)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](`${e.type}-layer:upload-failure`,"Layer does not support glb.",new Error);return r}const H=1e3;


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/graphics/sources/support/uploads.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/sources/support/uploads.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   uploadItem: () => (/* binding */ p)
/* harmony export */ });
/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../request.js */ "./node_modules/@arcgis/core/request.js");
/* harmony import */ var _core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/promiseUtils.js */ "./node_modules/@arcgis/core/core/promiseUtils.js");
/* harmony import */ var _core_urlUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/urlUtils.js */ "./node_modules/@arcgis/core/core/urlUtils.js");
/* harmony import */ var _support_arcgisLayerUrl_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../support/arcgisLayerUrl.js */ "./node_modules/@arcgis/core/layers/support/arcgisLayerUrl.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const r=1e6,a=20*r,n=2e9,i=3;async function p({data:p,name:c,description:l},m,d){let f=null;try{const u=(0,_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_2__.join)(m,"uploads"),h=(0,_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_2__.join)(u,"info"),{data:w}=await (0,_request_js__WEBPACK_IMPORTED_MODULE_0__["default"])(h,{query:{f:"json"},responseType:"json"});(0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_1__.throwIfAborted)(d);const y=(0,_support_arcgisLayerUrl_js__WEBPACK_IMPORTED_MODULE_3__.isHostedAgolService)(m),j=w.maxUploadFileSize*r,g=y?n:j,q=y?Math.min(a,j):a;if(p.size>g)throw new Error("Data too large");const T=(0,_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_2__.join)(u,"register"),{data:z}=await (0,_request_js__WEBPACK_IMPORTED_MODULE_0__["default"])(T,{query:{f:"json",itemName:c,description:l},responseType:"json",method:"post"});if((0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_1__.throwIfAborted)(d),!z.success)throw new Error("Registration failed");const{itemID:E}=z.item;f=(0,_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_2__.join)(u,E);const U=(0,_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_2__.join)(f,"uploadPart"),D=Math.ceil(p.size/q),M=new Array;for(let e=0;e<D;++e)M.push(p.slice(e*q,Math.min((e+1)*q,p.size)));const P=M.slice().reverse(),x=new Array,A=async()=>{for(;0!==P.length;){const o=M.length-P.length,s=P.pop(),r=new FormData;r.append("f","json"),r.append("file",s),r.append("partId",`${o}`);const{data:a}=await (0,_request_js__WEBPACK_IMPORTED_MODULE_0__["default"])(U,{timeout:0,body:r,responseType:"json",method:"post"});if((0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_1__.throwIfAborted)(d),!a.success)throw new Error("Part upload failed")}};for(let e=0;e<i&&0!==P.length;++e)x.push(A());await Promise.all(x);const F=(0,_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_2__.join)(f,"commit"),{data:I}=await (0,_request_js__WEBPACK_IMPORTED_MODULE_0__["default"])(F,{query:{f:"json",parts:M.map(((e,t)=>t)).join(",")},responseType:"json",method:"post"});if((0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_1__.throwIfAborted)(d),!I.success)throw new Error("Commit failed");return I.item}catch(u){if(null!=f){const t=(0,_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_2__.join)(f,"delete");await (0,_request_js__WEBPACK_IMPORTED_MODULE_0__["default"])(t,{query:{f:"json"},responseType:"json",method:"post"})}throw u}}


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,