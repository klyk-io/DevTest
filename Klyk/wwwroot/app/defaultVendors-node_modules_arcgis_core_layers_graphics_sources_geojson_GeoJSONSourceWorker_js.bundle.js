"use strict";
(self["webpackChunkklyk"] = self["webpackChunkklyk"] || []).push([["defaultVendors-node_modules_arcgis_core_layers_graphics_sources_geojson_GeoJSONSourceWorker_js"],{

/***/ "./node_modules/@arcgis/core/layers/graphics/sources/geojson/GeoJSONSourceWorker.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/sources/geojson/GeoJSONSourceWorker.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ C)
/* harmony export */ });
/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../request.js */ "./node_modules/@arcgis/core/request.js");
/* harmony import */ var _core_asyncUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/asyncUtils.js */ "./node_modules/@arcgis/core/core/asyncUtils.js");
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../core/Logger.js */ "./node_modules/@arcgis/core/core/Logger.js");
/* harmony import */ var _core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../core/promiseUtils.js */ "./node_modules/@arcgis/core/core/promiseUtils.js");
/* harmony import */ var _geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../geometry/support/jsonUtils.js */ "./node_modules/@arcgis/core/geometry/support/jsonUtils.js");
/* harmony import */ var _geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../geometry/support/spatialReferenceUtils.js */ "./node_modules/@arcgis/core/geometry/support/spatialReferenceUtils.js");
/* harmony import */ var _featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../featureConversionUtils.js */ "./node_modules/@arcgis/core/layers/graphics/featureConversionUtils.js");
/* harmony import */ var _data_FeatureStore_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../data/FeatureStore.js */ "./node_modules/@arcgis/core/layers/graphics/data/FeatureStore.js");
/* harmony import */ var _data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../data/projectionSupport.js */ "./node_modules/@arcgis/core/layers/graphics/data/projectionSupport.js");
/* harmony import */ var _data_QueryEngine_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../data/QueryEngine.js */ "./node_modules/@arcgis/core/layers/graphics/data/QueryEngine.js");
/* harmony import */ var _geojson_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./geojson.js */ "./node_modules/@arcgis/core/layers/graphics/sources/geojson/geojson.js");
/* harmony import */ var _support_clientSideDefaults_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../support/clientSideDefaults.js */ "./node_modules/@arcgis/core/layers/graphics/sources/support/clientSideDefaults.js");
/* harmony import */ var _support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../support/sourceUtils.js */ "./node_modules/@arcgis/core/layers/graphics/sources/support/sourceUtils.js");
/* harmony import */ var _support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../support/FieldsIndex.js */ "./node_modules/@arcgis/core/layers/support/FieldsIndex.js");
/* harmony import */ var _support_fieldType_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../support/fieldType.js */ "./node_modules/@arcgis/core/layers/support/fieldType.js");
/* harmony import */ var _support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../support/fieldUtils.js */ "./node_modules/@arcgis/core/layers/support/fieldUtils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const O={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!1,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0}};class C{constructor(){this._queryEngine=null,this._snapshotFeatures=async e=>{const t=await this._fetch(e);return this._createFeatures(t)}}destroy(){this._queryEngine?.destroy(),this._queryEngine=this._fieldsIndex=this._createDefaultAttributes=null}async load(e,t={}){this._loadOptions={url:e.url,customParameters:e.customParameters};const i=[];await this._checkProjection(e.spatialReference);let r=null;e.url&&(r=await this._fetch(t?.signal));const n=(0,_geojson_js__WEBPACK_IMPORTED_MODULE_11__.inferLayerProperties)(r,{geometryType:e.geometryType}),o=e.fields||n.fields||[],l=null!=e.hasZ?e.hasZ:n.hasZ,u=n.geometryType;let d=e.objectIdField||n.objectIdFieldName||"__OBJECTID";const p=e.spatialReference||_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_6__.WGS84;let c=e.timeInfo;o===n.fields&&n.unknownFields.length>0&&i.push({name:"geojson-layer:unknown-field-types",message:"Some fields types couldn't be inferred from the features and were dropped",details:{unknownFields:n.unknownFields}});let y=new _support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_14__["default"](o).get(d);y?("esriFieldTypeString"!==y.type&&(y.type="esriFieldTypeOID"),y.editable=!1,y.nullable=!1,d=y.name):(y={alias:d,name:d,type:"string"===n.objectIdFieldType?"esriFieldTypeString":"esriFieldTypeOID",editable:!1,nullable:!1},o.unshift(y));const m={};for(const a of o){if(null==a.name&&(a.name=a.alias),null==a.alias&&(a.alias=a.name),!a.name)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("geojson-layer:invalid-field-name","field name is missing",{field:a});if(!_support_fieldType_js__WEBPACK_IMPORTED_MODULE_15__.kebabDict.jsonValues.includes(a.type))throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("geojson-layer:invalid-field-type",`invalid type for field "${a.name}"`,{field:a});if(a.name!==y.name){const e=(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_16__.getFieldDefaultValue)(a);void 0!==e&&(m[a.name]=e)}}this._fieldsIndex=new _support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_14__["default"](o);const _=this._fieldsIndex.requiredFields.indexOf(y);if(_>-1&&this._fieldsIndex.requiredFields.splice(_,1),c){if(c.startTimeField){const e=this._fieldsIndex.get(c.startTimeField);e?(c.startTimeField=e.name,e.type="esriFieldTypeDate"):c.startTimeField=null}if(c.endTimeField){const e=this._fieldsIndex.get(c.endTimeField);e?(c.endTimeField=e.name,e.type="esriFieldTypeDate"):c.endTimeField=null}if(c.trackIdField){const e=this._fieldsIndex.get(c.trackIdField);e?c.trackIdField=e.name:(c.trackIdField=null,i.push({name:"geojson-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:c}}))}c.startTimeField||c.endTimeField||(i.push({name:"geojson-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing",details:{timeInfo:c}}),c=null)}const I=u?(0,_support_clientSideDefaults_js__WEBPACK_IMPORTED_MODULE_12__.createDrawingInfo)(u):void 0,b={warnings:i,featureErrors:[],layerDefinition:{...O,drawingInfo:I??void 0,templates:(0,_support_clientSideDefaults_js__WEBPACK_IMPORTED_MODULE_12__.createDefaultTemplate)(m),extent:void 0,geometryType:u,objectIdField:d,fields:o,hasZ:!!l,timeInfo:c}};this._queryEngine=new _data_QueryEngine_js__WEBPACK_IMPORTED_MODULE_10__.QueryEngine({fields:o,geometryType:u,hasM:!1,hasZ:l,objectIdField:d,spatialReference:p,timeInfo:c,featureStore:new _data_FeatureStore_js__WEBPACK_IMPORTED_MODULE_8__["default"]({geometryType:u,hasM:!1,hasZ:l}),cacheSpatialQueries:!0}),this._createDefaultAttributes=(0,_support_clientSideDefaults_js__WEBPACK_IMPORTED_MODULE_12__.createDefaultAttributesFunction)(m,d);const w=await this._createFeatures(r);this._objectIdGenerator=this._createObjectIdGenerator(this._queryEngine,w);const T=this._normalizeFeatures(w,b.warnings,b.featureErrors);this._queryEngine.featureStore.addMany(T);const{fullExtent:x,timeExtent:q}=await this._queryEngine.fetchRecomputedExtents();if(b.layerDefinition.extent=x,q){const{start:e,end:t}=q;b.layerDefinition.timeInfo.timeExtent=[e,t]}return b}async applyEdits(e){const{spatialReference:t,geometryType:s}=this._queryEngine;return await Promise.all([(0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.loadGeometryEngineForSimplify)(t,s),(0,_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_9__.checkProjectionSupport)(e.adds,t),(0,_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_9__.checkProjectionSupport)(e.updates,t)]),await this._waitSnapshotComplete(),this._applyEdits(e)}async queryFeatures(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(e,t.signal)}async queryExtent(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)}async querySnapping(e,t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(e,t.signal)}async refresh(e){this._loadOptions.customParameters=e,this._snapshotTask?.abort(),this._snapshotTask=(0,_core_asyncUtils_js__WEBPACK_IMPORTED_MODULE_1__.createTask)(this._snapshotFeatures),this._snapshotTask.promise.then((e=>{this._queryEngine.featureStore.clear(),this._objectIdGenerator=this._createObjectIdGenerator(this._queryEngine,e);const t=this._normalizeFeatures(e);t&&this._queryEngine.featureStore.addMany(t)}),(e=>{this._queryEngine.featureStore.clear(),(0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_4__.isAbortError)(e)||_core_Logger_js__WEBPACK_IMPORTED_MODULE_3__["default"].getLogger("esri.layers.GeoJSONLayer").error(new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("geojson-layer:refresh","An error occurred during refresh",{error:e}))})),await this._waitSnapshotComplete();const{fullExtent:n,timeExtent:a}=await this._queryEngine.fetchRecomputedExtents();return{extent:n,timeExtent:a}}async _createFeatures(e){if(null==e)return[];const{geometryType:t,hasZ:s,objectIdField:i}=this._queryEngine,r=(0,_geojson_js__WEBPACK_IMPORTED_MODULE_11__.createOptimizedFeatures)(e,{geometryType:t,hasZ:s,objectIdField:i});if(!(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_6__.equals)(this._queryEngine.spatialReference,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_6__.WGS84))for(const n of r)null!=n.geometry&&(n.geometry=(0,_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_7__.convertFromGeometry)((0,_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_9__.project)((0,_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_7__.convertToGeometry)(n.geometry,this._queryEngine.geometryType,this._queryEngine.hasZ,!1),_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_6__.WGS84,this._queryEngine.spatialReference)));return r}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _fetch(t){const{url:s,customParameters:i}=this._loadOptions,r=(await (0,_request_js__WEBPACK_IMPORTED_MODULE_0__["default"])(s,{responseType:"json",query:{...i},signal:t})).data;return await (0,_geojson_js__WEBPACK_IMPORTED_MODULE_11__.validateGeoJSON)(r),r}_normalizeFeatures(e,t,s){const{objectIdField:i}=this._queryEngine,r=[];for(const n of e){const e=this._createDefaultAttributes(),a=(0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.mixAttributes)(this._fieldsIndex,e,n.attributes,!0,t);a?s?.push(a):(this._assignObjectId(e,n.attributes,!0),n.attributes=e,n.objectId=e[i],r.push(n))}return r}async _applyEdits(e){const{adds:t,updates:s,deletes:i}=e,r={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t&&t.length&&this._applyAddEdits(r,t),s&&s.length&&this._applyUpdateEdits(r,s),i&&i.length){for(const e of i)r.deleteResults.push((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.createFeatureEditSuccessResult)(e));this._queryEngine.featureStore.removeManyById(i)}const{fullExtent:n,timeExtent:a}=await this._queryEngine.fetchRecomputedExtents();return{extent:n,timeExtent:a,featureEditResults:r}}_applyAddEdits(e,t){const{addResults:s}=e,{geometryType:i,hasM:r,hasZ:a,objectIdField:o,spatialReference:l,featureStore:u}=this._queryEngine,p=[];for(const d of t){if(d.geometry&&i!==(0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_5__.getJsonType)(d.geometry)){s.push((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.createFeatureEditErrorResult)("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),r=(0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.mixAttributes)(this._fieldsIndex,t,d.attributes);if(r)s.push(r);else{if(this._assignObjectId(t,d.attributes),d.attributes=t,null!=d.uid){const t=d.attributes[o];e.uidToObjectId[d.uid]=t}if(null!=d.geometry){const e=d.geometry.spatialReference??l;d.geometry=(0,_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_9__.project)((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.simplify)(d.geometry,e),e,l)}p.push(d),s.push((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.createFeatureEditSuccessResult)(d.attributes[o]))}}u.addMany((0,_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_7__.convertFromFeatures)([],p,i,a,r,o))}_applyUpdateEdits({updateResults:e},t){const{geometryType:s,hasM:i,hasZ:r,objectIdField:a,spatialReference:o,featureStore:l}=this._queryEngine;for(const u of t){const{attributes:t,geometry:d}=u,h=t&&t[a];if(null==h){e.push((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.createFeatureEditErrorResult)(`Identifier field ${a} missing`));continue}if(!l.has(h)){e.push((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.createFeatureEditErrorResult)(`Feature with object id ${h} missing`));continue}const y=(0,_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_7__.convertToFeature)(l.getFeature(h),s,r,i);if(null!=d){if(s!==(0,_geometry_support_jsonUtils_js__WEBPACK_IMPORTED_MODULE_5__.getJsonType)(d)){e.push((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.createFeatureEditErrorResult)("Incorrect geometry type."));continue}const t=d.spatialReference??o;y.geometry=(0,_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_9__.project)((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.simplify)(d,t),t,o)}if(t){const s=(0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.mixAttributes)(this._fieldsIndex,y.attributes,t);if(s){e.push(s);continue}}l.add((0,_featureConversionUtils_js__WEBPACK_IMPORTED_MODULE_7__.convertFromFeature)(y,s,r,i,a)),e.push((0,_support_sourceUtils_js__WEBPACK_IMPORTED_MODULE_13__.createFeatureEditSuccessResult)(h))}}_createObjectIdGenerator(e,t){const s=e.fieldsIndex.get(e.objectIdField);if("esriFieldTypeString"===s.type)return()=>s.name+"-"+Date.now().toString(16);let i=Number.NEGATIVE_INFINITY;for(const r of t)r.objectId&&(i=Math.max(i,r.objectId));return i=Math.max(0,i)+1,()=>i++}_assignObjectId(e,t,s=!1){const i=this._queryEngine.objectIdField;e[i]=s&&i in t?t[i]:this._objectIdGenerator()}async _checkProjection(e){try{await (0,_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_9__.checkProjectionSupport)(_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_6__.WGS84,e)}catch{throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_2__["default"]("geojson-layer","Projection not supported")}}}


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/graphics/sources/geojson/geojson.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/sources/geojson/geojson.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createOptimizedFeatures: () => (/* binding */ I),
/* harmony export */   getGeometryType: () => (/* binding */ s),
/* harmony export */   inferLayerProperties: () => (/* binding */ L),
/* harmony export */   validateGeoJSON: () => (/* binding */ T)
/* harmony export */ });
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _OptimizedFeature_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../OptimizedFeature.js */ "./node_modules/@arcgis/core/layers/graphics/OptimizedFeature.js");
/* harmony import */ var _OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../OptimizedGeometry.js */ "./node_modules/@arcgis/core/layers/graphics/OptimizedGeometry.js");
/* harmony import */ var _support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../support/fieldUtils.js */ "./node_modules/@arcgis/core/layers/support/fieldUtils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const i={LineString:"esriGeometryPolyline",MultiLineString:"esriGeometryPolyline",MultiPoint:"esriGeometryMultipoint",Point:"esriGeometryPoint",Polygon:"esriGeometryPolygon",MultiPolygon:"esriGeometryPolygon"};function s(e){return i[e]}function*c(e){switch(e.type){case"Feature":yield e;break;case"FeatureCollection":for(const t of e.features)t&&(yield t)}}function*u(e){if(e)switch(e.type){case"Point":yield e.coordinates;break;case"LineString":case"MultiPoint":yield*e.coordinates;break;case"MultiLineString":case"Polygon":for(const t of e.coordinates)yield*t;break;case"MultiPolygon":for(const t of e.coordinates)for(const e of t)yield*e}}function*l(e,o={}){const{geometryType:r,objectIdField:i}=o;for(const c of e){const{geometry:e,properties:u,id:l}=c;if(e&&s(e.type)!==r)continue;const f=u||{};let a;i&&(a=f[i],null==l||a||(f[i]=a=l));const y=new _OptimizedFeature_js__WEBPACK_IMPORTED_MODULE_1__.OptimizedFeature(e?g(new _OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_2__["default"],e,o):null,f,null,a??void 0);yield y}}function f(e){for(const t of e)if(t.length>2)return!0;return!1}function a(e){return!p(e)}function y(e){return p(e)}function p(e){let t=0;for(let n=0;n<e.length;n++){const o=e[n],r=e[(n+1)%e.length];t+=o[0]*r[1]-r[0]*o[1]}return t<=0}function d(e){const t=e[0],n=e[e.length-1];return t[0]===n[0]&&t[1]===n[1]&&t[2]===n[2]||e.push(t),e}function g(e,t,n){switch(t.type){case"LineString":return m(e,t,n);case"MultiLineString":return h(e,t,n);case"MultiPoint":return w(e,t,n);case"MultiPolygon":return P(e,t,n);case"Point":return b(e,t,n);case"Polygon":return j(e,t,n)}}function m(e,t,n){return G(e,t.coordinates,n),e}function h(e,t,n){for(const o of t.coordinates)G(e,o,n);return e}function w(e,t,n){return G(e,t.coordinates,n),e}function P(e,t,n){for(const o of t.coordinates){S(e,o[0],n);for(let t=1;t<o.length;t++)F(e,o[t],n)}return e}function b(e,t,n){return k(e,t.coordinates,n),e}function j(e,t,n){const o=t.coordinates;S(e,o[0],n);for(let r=1;r<o.length;r++)F(e,o[r],n);return e}function S(e,t,n){const o=d(t);a(o)?M(e,o,n):G(e,o,n)}function F(e,t,n){const o=d(t);y(o)?M(e,o,n):G(e,o,n)}function G(e,t,n){for(const o of t)k(e,o,n);e.lengths.push(t.length)}function M(e,t,n){for(let o=t.length-1;o>=0;o--)k(e,t[o],n);e.lengths.push(t.length)}function k(e,t,n){const[o,r,i]=t;e.coords.push(o,r),n.hasZ&&e.coords.push(i||0)}function O(e){switch(typeof e){case"string":return"esriFieldTypeString";case"number":return"esriFieldTypeDouble";default:return"unknown"}}function T(t){if(!t)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("geojson-layer:empty","GeoJSON data is empty");if("Feature"!==t.type&&"FeatureCollection"!==t.type)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("geojson-layer:unsupported-geojson-object","missing or not supported GeoJSON object type",{data:t});const{crs:n}=t;if(!n)return;const o="string"==typeof n?n:"name"===n.type?n.properties.name:"EPSG"===n.type?n.properties.code:null,r=new RegExp(".*(CRS84H?|4326)$","i");if(!o||!r.test(o))throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("geojson-layer:unsupported-crs","unsupported GeoJSON 'crs' member",{crs:n})}function L(e,t={}){const n=[],i=new Set,l=new Set;let a,y=!1,p=null,d=!1,{geometryType:g=null}=t,m=!1;for(const r of c(e)){const{geometry:e,properties:t,id:c}=r;if(!e||(g||(g=s(e.type)),s(e.type)===g)){if(!y){y=f(u(e))}if(d||(d=null!=c,d&&(a=typeof c,t&&(p=Object.keys(t).filter((e=>t[e]===c))))),t&&p&&d&&null!=c&&(p.length>1?p=p.filter((e=>t[e]===c)):1===p.length&&(p=t[p[0]]===c?p:[])),!m&&t){let e=!0;for(const r in t){if(i.has(r))continue;const s=t[r];if(null==s){e=!1,l.add(r);continue}const c=O(s);if("unknown"===c){l.add(r);continue}l.delete(r),i.add(r);const u=(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_3__.normalizeFieldName)(r);u&&n.push({name:u,alias:r,type:c})}m=e}}}const h=(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_3__.normalizeFieldName)(1===p?.length&&p[0]||null)??void 0;if(h)for(const o of n)if(o.name===h&&(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_3__.isNumericField)(o)){o.type="esriFieldTypeOID";break}return{fields:n,geometryType:g,hasZ:y,objectIdFieldName:h,objectIdFieldType:a,unknownFields:Array.from(l)}}function I(e,t){return Array.from(l(c(e),t))}


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/graphics/sources/support/clientSideDefaults.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/sources/support/clientSideDefaults.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createCapabilities: () => (/* binding */ c),
/* harmony export */   createDefaultAttributesFunction: () => (/* binding */ i),
/* harmony export */   createDefaultTemplate: () => (/* binding */ a),
/* harmony export */   createDrawingInfo: () => (/* binding */ o)
/* harmony export */ });
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/has.js */ "./node_modules/@arcgis/core/core/has.js");
/* harmony import */ var _core_lang_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/lang.js */ "./node_modules/@arcgis/core/core/lang.js");
/* harmony import */ var _data_QueryEngineCapabilities_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../data/QueryEngineCapabilities.js */ "./node_modules/@arcgis/core/layers/graphics/data/QueryEngineCapabilities.js");
/* harmony import */ var _symbols_support_defaultsJSON_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../symbols/support/defaultsJSON.js */ "./node_modules/@arcgis/core/symbols/support/defaultsJSON.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function o(t){return{renderer:{type:"simple",symbol:"esriGeometryPoint"===t||"esriGeometryMultipoint"===t?_symbols_support_defaultsJSON_js__WEBPACK_IMPORTED_MODULE_3__.defaultPointSymbolJSON:"esriGeometryPolyline"===t?_symbols_support_defaultsJSON_js__WEBPACK_IMPORTED_MODULE_3__.defaultPolylineSymbolJSON:_symbols_support_defaultsJSON_js__WEBPACK_IMPORTED_MODULE_3__.defaultPolygonSymbolJSON}}}const u=/^[_$a-zA-Z][_$a-zA-Z0-9]*$/;let n=1;function i(t,s){if((0,_core_has_js__WEBPACK_IMPORTED_MODULE_0__["default"])("esri-csp-restrictions"))return()=>({[s]:null,...t});try{let r=`this.${s} = null;`;for(const s in t){r+=`this${u.test(s)?`.${s}`:`["${s}"]`} = ${JSON.stringify(t[s])};`}const e=new Function(`\n      return class AttributesClass$${n++} {\n        constructor() {\n          ${r};\n        }\n      }\n    `)();return()=>new e}catch(r){return()=>({[s]:null,...t})}}function a(s={}){return[{name:"New Feature",description:"",prototype:{attributes:(0,_core_lang_js__WEBPACK_IMPORTED_MODULE_1__.clone)(s)}}]}function c(t,r){return{analytics:{supportsCacheHint:!1},attachment:null,data:{isVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:t},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:r,supportsDelete:r,supportsEditing:r,supportsChangeTracking:!1,supportsQuery:!0,supportsQueryAnalytics:!1,supportsQueryAttachments:!1,supportsQueryTopFeatures:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:r,supportsExceedsLimitStatistics:!0,supportsAsyncConvert3D:!1},query:_data_QueryEngineCapabilities_js__WEBPACK_IMPORTED_MODULE_2__.queryCapabilities,queryRelated:{supportsCount:!0,supportsOrderBy:!0,supportsPagination:!0,supportsCacheHint:!1},queryTopFeatures:{supportsCacheHint:!1},editing:{supportsGeometryUpdate:r,supportsGlobalId:!1,supportsReturnServiceEditsInSourceSpatialReference:!1,supportsRollbackOnFailure:!1,supportsUpdateWithoutM:!1,supportsUploadWithItemId:!1,supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1,supportsAsyncApplyEdits:!1}}}


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/graphics/sources/support/sourceUtils.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/sources/support/sourceUtils.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createFeatureEditErrorResult: () => (/* binding */ u),
/* harmony export */   createFeatureEditSuccessResult: () => (/* binding */ c),
/* harmony export */   loadGeometryEngineForSimplify: () => (/* binding */ y),
/* harmony export */   mixAttributes: () => (/* binding */ d),
/* harmony export */   simplify: () => (/* binding */ h)
/* harmony export */ });
/* harmony import */ var _geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../geometry/support/spatialReferenceUtils.js */ "./node_modules/@arcgis/core/geometry/support/spatialReferenceUtils.js");
/* harmony import */ var _support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../support/fieldUtils.js */ "./node_modules/@arcgis/core/layers/support/fieldUtils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class o{constructor(){this.code=null,this.description=null}}class l{constructor(e){this.error=new o,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=e}}function u(e){return new l(e)}class a{constructor(e){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=e}}function c(e){return new a(e)}const f=new Set;function d(e,i,r,s=!1,o){f.clear();for(const l in r){const a=e.get(l);if(!a)continue;const c=r[l],d=m(a,c);if(d!==c&&o&&o.push({name:"invalid-value-type",message:"attribute value was converted to match the field type",details:{field:a,originalValue:c,sanitizedValue:d}}),f.add(a.name),a&&(s||a.editable)){const e=(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_1__.validateFieldValue)(a,d);if(e)return u((0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_1__.validationErrorToString)(e,a,d));i[a.name]=d}}for(const t of e?.requiredFields??[])if(!f.has(t.name))return u(`missing required field "${t.name}"`);return null}function m(e,t){let n=t;return"string"==typeof t&&(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_1__.isNumericField)(e)?n=parseFloat(t):null!=t&&(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_1__.isStringField)(e)&&"string"!=typeof t&&(n=String(t)),(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_1__.sanitizeNullFieldValue)(n)}let p;function h(t,n){if(!t||!(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_0__.isValid)(n))return t;if("rings"in t||"paths"in t){if(null==p)throw new TypeError("geometry engine not loaded");return p.simplify(n,t)}return t}async function g(){return null==p&&(p=await Promise.all(/*! import() */[__webpack_require__.e("defaultVendors-node_modules_arcgis_core_chunks_geometryEngineBase_js"), __webpack_require__.e("node_modules_arcgis_core_geometry_geometryEngineJSON_js-_997e1")]).then(__webpack_require__.bind(__webpack_require__, /*! ../../../../geometry/geometryEngineJSON.js */ "./node_modules/@arcgis/core/geometry/geometryEngineJSON.js"))),p}async function y(t,n){!(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_0__.isValid)(t)||"esriGeometryPolygon"!==n&&"esriGeometryPolyline"!==n||await g()}


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdFZlbmRvcnMtbm9kZV9tb2R1bGVzX2FyY2dpc19jb3JlX2xheWVyc19ncmFwaGljc19zb3VyY2VzX2dlb2pzb25fR2VvSlNPTlNvdXJjZVdvcmtlcl9qcy5idW5kbGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDOHpDLFNBQVMsa01BQWtNLHdZQUF3WSxRQUFRLGNBQWMsd0RBQXdELDZCQUE2QixnQ0FBZ0MsVUFBVSxvR0FBb0csaUJBQWlCLEVBQUUsbUJBQW1CLCtDQUErQyxXQUFXLGdEQUFnRCxXQUFXLHdDQUF3QyxRQUFRLGtFQUFDLElBQUksNEJBQTRCLHlFQUF5RSx5REFBeUQsNEJBQTRCLDZFQUFDLENBQUMsaUJBQWlCLGdEQUFnRCxzSUFBc0ksK0JBQStCLEVBQUUsVUFBVSxnRUFBQyxXQUFXLHlHQUF5RyxvSEFBb0gsZUFBZSxXQUFXLGtCQUFrQixvRkFBb0Ysc0RBQUMsNkRBQTZELFFBQVEsRUFBRSxJQUFJLDZEQUFDLHVDQUF1QyxzREFBQywrREFBK0QsT0FBTyxJQUFJLFFBQVEsRUFBRSxvQkFBb0IsUUFBUSw2RUFBQyxJQUFJLDJCQUEyQixzQkFBc0IsZ0VBQUMsSUFBSSxvREFBb0QseURBQXlELHFCQUFxQixnREFBZ0QsNkVBQTZFLG1CQUFtQiw4Q0FBOEMseUVBQXlFLG1CQUFtQiw4Q0FBOEMscURBQXFELDhGQUE4RixZQUFZLEdBQUcsMkNBQTJDLHFHQUFxRyxZQUFZLFVBQVUsVUFBVSxrRkFBQyxjQUFjLDZDQUE2QyxxQ0FBcUMsc0ZBQUMsZ0ZBQWdGLHNCQUFzQiw4REFBQyxFQUFFLHNHQUFzRyw2REFBQyxFQUFFLDhCQUE4Qix5QkFBeUIsZ0NBQWdDLGdHQUFDLE1BQU0sc0NBQXNDLDJFQUEyRSw4REFBOEQsMENBQTBDLE1BQU0sMEJBQTBCLGtEQUFrRCxpQ0FBaUMsTUFBTSxjQUFjLEdBQUcsNENBQTRDLFNBQVMsb0JBQW9CLE1BQU0sa0NBQWtD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Y0FBYyxHQUFHLFdBQVcsU0FBUyxXQUFXLGdCQUFnQixTQUFTLFlBQVksY0FBYyxHQUFHLGVBQWUsRUFBRSxRQUFRLDZDQUE2QyxXQUFXLG9EQUFDLEtBQUssRUFBRSxnQkFBZ0IsT0FBTyxXQUFXLHFCQUFxQix1QkFBdUIsOERBQThELFdBQVcsbUNBQW1DLGFBQWEsd1dBQXdXLE9BQU8sK0VBQUMsZUFBZSwrRUFBK0UsbUJBQW1CLHFCQUFxQixVQUFVLGlVQUF3Yjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDSjFrRTtBQUNBO0FBQ0E7QUFDQTtBQUNvUCxRQUFRLGNBQWMsc0NBQXNDLFFBQVEsZUFBZSxvSEFBb0gsY0FBYyxnQkFBZ0IsUUFBUSxlQUFlLGtFQUFrRSxjQUFjLGdCQUFnQixnQkFBZ0IseUJBQXlCLFVBQVUsa0JBQWtCLGlCQUFpQixlQUFlLHNCQUFzQixxQkFBcUIsbUdBQW1HLDBDQUEwQyxvQ0FBb0MsUUFBUSwwRUFBQyxNQUFNLGNBQWMsK0VBQUMsU0FBUyxhQUFhLDJGQUEyRixPQUFPLElBQUksWUFBWSxnQkFBZ0IsUUFBUSwwQkFBMEIsc0VBQUMsNkJBQTZCLHFFQUFDLHVDQUF1Qyw4RUFBQyxJQUFJLE1BQU0sZ0JBQWdCLFFBQVEsbUZBQUMsYUFBYSw2QkFBNkIsNkRBQTZELHVCQUF1QixTQUFTLG1CQUFtQix5QkFBeUIsd1hBQW9ELElBQUksc0JBQXNCLENBQUMsbUZBQUMsc0VBQXdOIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8va2x5ay8uL25vZGVfbW9kdWxlcy9AYXJjZ2lzL2NvcmUvbGF5ZXJzL2dyYXBoaWNzL3NvdXJjZXMvZ2VvanNvbi9HZW9KU09OU291cmNlV29ya2VyLmpzIiwid2VicGFjazovL2tseWsvLi9ub2RlX21vZHVsZXMvQGFyY2dpcy9jb3JlL2xheWVycy9ncmFwaGljcy9zb3VyY2VzL2dlb2pzb24vZ2VvanNvbi5qcyIsIndlYnBhY2s6Ly9rbHlrLy4vbm9kZV9tb2R1bGVzL0BhcmNnaXMvY29yZS9sYXllcnMvZ3JhcGhpY3Mvc291cmNlcy9zdXBwb3J0L2NsaWVudFNpZGVEZWZhdWx0cy5qcyIsIndlYnBhY2s6Ly9rbHlrLy4vbm9kZV9tb2R1bGVzL0BhcmNnaXMvY29yZS9sYXllcnMvZ3JhcGhpY3Mvc291cmNlcy9zdXBwb3J0L3NvdXJjZVV0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5BbGwgbWF0ZXJpYWwgY29weXJpZ2h0IEVTUkksIEFsbCBSaWdodHMgUmVzZXJ2ZWQsIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkLlxuU2VlIGh0dHBzOi8vanMuYXJjZ2lzLmNvbS80LjI3L2VzcmkvY29weXJpZ2h0LnR4dCBmb3IgZGV0YWlscy5cbiovXG5pbXBvcnQgZSBmcm9tXCIuLi8uLi8uLi8uLi9yZXF1ZXN0LmpzXCI7aW1wb3J0e2NyZWF0ZVRhc2sgYXMgdH1mcm9tXCIuLi8uLi8uLi8uLi9jb3JlL2FzeW5jVXRpbHMuanNcIjtpbXBvcnQgcyBmcm9tXCIuLi8uLi8uLi8uLi9jb3JlL0Vycm9yLmpzXCI7aW1wb3J0IGkgZnJvbVwiLi4vLi4vLi4vLi4vY29yZS9Mb2dnZXIuanNcIjtpbXBvcnR7aXNBYm9ydEVycm9yIGFzIHJ9ZnJvbVwiLi4vLi4vLi4vLi4vY29yZS9wcm9taXNlVXRpbHMuanNcIjtpbXBvcnR7Z2V0SnNvblR5cGUgYXMgbn1mcm9tXCIuLi8uLi8uLi8uLi9nZW9tZXRyeS9zdXBwb3J0L2pzb25VdGlscy5qc1wiO2ltcG9ydHtXR1M4NCBhcyBhLGVxdWFscyBhcyBvfWZyb21cIi4uLy4uLy4uLy4uL2dlb21ldHJ5L3N1cHBvcnQvc3BhdGlhbFJlZmVyZW5jZVV0aWxzLmpzXCI7aW1wb3J0e2NvbnZlcnRGcm9tR2VvbWV0cnkgYXMgbCxjb252ZXJ0VG9HZW9tZXRyeSBhcyB1LGNvbnZlcnRGcm9tRmVhdHVyZXMgYXMgZCxjb252ZXJ0VG9GZWF0dXJlIGFzIHAsY29udmVydEZyb21GZWF0dXJlIGFzIGN9ZnJvbVwiLi4vLi4vZmVhdHVyZUNvbnZlcnNpb25VdGlscy5qc1wiO2ltcG9ydCBoIGZyb21cIi4uLy4uL2RhdGEvRmVhdHVyZVN0b3JlLmpzXCI7aW1wb3J0e2NoZWNrUHJvamVjdGlvblN1cHBvcnQgYXMgeSxwcm9qZWN0IGFzIG19ZnJvbVwiLi4vLi4vZGF0YS9wcm9qZWN0aW9uU3VwcG9ydC5qc1wiO2ltcG9ydHtRdWVyeUVuZ2luZSBhcyBmfWZyb21cIi4uLy4uL2RhdGEvUXVlcnlFbmdpbmUuanNcIjtpbXBvcnR7aW5mZXJMYXllclByb3BlcnRpZXMgYXMgZyxjcmVhdGVPcHRpbWl6ZWRGZWF0dXJlcyBhcyBfLHZhbGlkYXRlR2VvSlNPTiBhcyBJfWZyb21cIi4vZ2VvanNvbi5qc1wiO2ltcG9ydHtjcmVhdGVEcmF3aW5nSW5mbyBhcyBqLGNyZWF0ZURlZmF1bHRUZW1wbGF0ZSBhcyBGLGNyZWF0ZURlZmF1bHRBdHRyaWJ1dGVzRnVuY3Rpb24gYXMgRX1mcm9tXCIuLi9zdXBwb3J0L2NsaWVudFNpZGVEZWZhdWx0cy5qc1wiO2ltcG9ydHtsb2FkR2VvbWV0cnlFbmdpbmVGb3JTaW1wbGlmeSBhcyBiLG1peEF0dHJpYnV0ZXMgYXMgdyxjcmVhdGVGZWF0dXJlRWRpdFN1Y2Nlc3NSZXN1bHQgYXMgVCxjcmVhdGVGZWF0dXJlRWRpdEVycm9yUmVzdWx0IGFzIHgsc2ltcGxpZnkgYXMgcX1mcm9tXCIuLi9zdXBwb3J0L3NvdXJjZVV0aWxzLmpzXCI7aW1wb3J0IFMgZnJvbVwiLi4vLi4vLi4vc3VwcG9ydC9GaWVsZHNJbmRleC5qc1wiO2ltcG9ydHtrZWJhYkRpY3QgYXMgUn1mcm9tXCIuLi8uLi8uLi9zdXBwb3J0L2ZpZWxkVHlwZS5qc1wiO2ltcG9ydHtnZXRGaWVsZERlZmF1bHRWYWx1ZSBhcyBrfWZyb21cIi4uLy4uLy4uL3N1cHBvcnQvZmllbGRVdGlscy5qc1wiO2NvbnN0IE89e2hhc0F0dGFjaG1lbnRzOiExLGNhcGFiaWxpdGllczpcInF1ZXJ5LCBlZGl0aW5nLCBjcmVhdGUsIGRlbGV0ZSwgdXBkYXRlXCIsdXNlU3RhbmRhcmRpemVkUXVlcmllczohMCxzdXBwb3J0c0Nvb3JkaW5hdGVzUXVhbnRpemF0aW9uOiEwLHN1cHBvcnRzUmV0dXJuaW5nUXVlcnlHZW9tZXRyeTohMCxhZHZhbmNlZFF1ZXJ5Q2FwYWJpbGl0aWVzOntzdXBwb3J0c1F1ZXJ5QXR0YWNobWVudHM6ITEsc3VwcG9ydHNTdGF0aXN0aWNzOiEwLHN1cHBvcnRzUGVyY2VudGlsZVN0YXRpc3RpY3M6ITAsc3VwcG9ydHNSZXR1cm5pbmdHZW9tZXRyeUNlbnRyb2lkOiEwLHN1cHBvcnRzUXVlcnlXaXRoRGlzdGFuY2U6ITAsc3VwcG9ydHNEaXN0aW5jdDohMCxzdXBwb3J0c1JldHVybmluZ1F1ZXJ5RXh0ZW50OiEwLHN1cHBvcnRzUmV0dXJuaW5nR2VvbWV0cnlQcm9wZXJ0aWVzOiExLHN1cHBvcnRzSGF2aW5nQ2xhdXNlOiEwLHN1cHBvcnRzT3JkZXJCeTohMCxzdXBwb3J0c1BhZ2luYXRpb246ITAsc3VwcG9ydHNRdWVyeVdpdGhSZXN1bHRUeXBlOiExLHN1cHBvcnRzU3FsRXhwcmVzc2lvbjohMCxzdXBwb3J0c0Rpc2pvaW50U3BhdGlhbFJlbDohMH19O2NsYXNzIEN7Y29uc3RydWN0b3IoKXt0aGlzLl9xdWVyeUVuZ2luZT1udWxsLHRoaXMuX3NuYXBzaG90RmVhdHVyZXM9YXN5bmMgZT0+e2NvbnN0IHQ9YXdhaXQgdGhpcy5fZmV0Y2goZSk7cmV0dXJuIHRoaXMuX2NyZWF0ZUZlYXR1cmVzKHQpfX1kZXN0cm95KCl7dGhpcy5fcXVlcnlFbmdpbmU/LmRlc3Ryb3koKSx0aGlzLl9xdWVyeUVuZ2luZT10aGlzLl9maWVsZHNJbmRleD10aGlzLl9jcmVhdGVEZWZhdWx0QXR0cmlidXRlcz1udWxsfWFzeW5jIGxvYWQoZSx0PXt9KXt0aGlzLl9sb2FkT3B0aW9ucz17dXJsOmUudXJsLGN1c3RvbVBhcmFtZXRlcnM6ZS5jdXN0b21QYXJhbWV0ZXJzfTtjb25zdCBpPVtdO2F3YWl0IHRoaXMuX2NoZWNrUHJvamVjdGlvbihlLnNwYXRpYWxSZWZlcmVuY2UpO2xldCByPW51bGw7ZS51cmwmJihyPWF3YWl0IHRoaXMuX2ZldGNoKHQ/LnNpZ25hbCkpO2NvbnN0IG49ZyhyLHtnZW9tZXRyeVR5cGU6ZS5nZW9tZXRyeVR5cGV9KSxvPWUuZmllbGRzfHxuLmZpZWxkc3x8W10sbD1udWxsIT1lLmhhc1o/ZS5oYXNaOm4uaGFzWix1PW4uZ2VvbWV0cnlUeXBlO2xldCBkPWUub2JqZWN0SWRGaWVsZHx8bi5vYmplY3RJZEZpZWxkTmFtZXx8XCJfX09CSkVDVElEXCI7Y29uc3QgcD1lLnNwYXRpYWxSZWZlcmVuY2V8fGE7bGV0IGM9ZS50aW1lSW5mbztvPT09bi5maWVsZHMmJm4udW5rbm93bkZpZWxkcy5sZW5ndGg+MCYmaS5wdXNoKHtuYW1lOlwiZ2VvanNvbi1sYXllcjp1bmtub3duLWZpZWxkLXR5cGVzXCIsbWVzc2FnZTpcIlNvbWUgZmllbGRzIHR5cGVzIGNvdWxkbid0IGJlIGluZmVycmVkIGZyb20gdGhlIGZlYXR1cmVzIGFuZCB3ZXJlIGRyb3BwZWRcIixkZXRhaWxzOnt1bmtub3duRmllbGRzOm4udW5rbm93bkZpZWxkc319KTtsZXQgeT1uZXcgUyhvKS5nZXQoZCk7eT8oXCJlc3JpRmllbGRUeXBlU3RyaW5nXCIhPT15LnR5cGUmJih5LnR5cGU9XCJlc3JpRmllbGRUeXBlT0lEXCIpLHkuZWRpdGFibGU9ITEseS5udWxsYWJsZT0hMSxkPXkubmFtZSk6KHk9e2FsaWFzOmQsbmFtZTpkLHR5cGU6XCJzdHJpbmdcIj09PW4ub2JqZWN0SWRGaWVsZFR5cGU/XCJlc3JpRmllbGRUeXBlU3RyaW5nXCI6XCJlc3JpRmllbGRUeXBlT0lEXCIsZWRpdGFibGU6ITEsbnVsbGFibGU6ITF9LG8udW5zaGlmdCh5KSk7Y29uc3QgbT17fTtmb3IoY29uc3QgYSBvZiBvKXtpZihudWxsPT1hLm5hbWUmJihhLm5hbWU9YS5hbGlhcyksbnVsbD09YS5hbGlhcyYmKGEuYWxpYXM9YS5uYW1lKSwhYS5uYW1lKXRocm93IG5ldyBzKFwiZ2VvanNvbi1sYXllcjppbnZhbGlkLWZpZWxkLW5hbWVcIixcImZpZWxkIG5hbWUgaXMgbWlzc2luZ1wiLHtmaWVsZDphfSk7aWYoIVIuanNvblZhbHVlcy5pbmNsdWRlcyhhLnR5cGUpKXRocm93IG5ldyBzKFwiZ2VvanNvbi1sYXllcjppbnZhbGlkLWZpZWxkLXR5cGVcIixgaW52YWxpZCB0eXBlIGZvciBmaWVsZCBcIiR7YS5uYW1lfVwiYCx7ZmllbGQ6YX0pO2lmKGEubmFtZSE9PXkubmFtZSl7Y29uc3QgZT1rKGEpO3ZvaWQgMCE9PWUmJihtW2EubmFtZV09ZSl9fXRoaXMuX2ZpZWxkc0luZGV4PW5ldyBTKG8pO2NvbnN0IF89dGhpcy5fZmllbGRzSW5kZXgucmVxdWlyZWRGaWVsZHMuaW5kZXhPZih5KTtpZihfPi0xJiZ0aGlzLl9maWVsZHNJbmRleC5yZXF1aXJlZEZpZWxkcy5zcGxpY2UoXywxKSxjKXtpZihjLnN0YXJ0VGltZUZpZWxkKXtjb25zdCBlPXRoaXMuX2ZpZWxkc0luZGV4LmdldChjLnN0YXJ0VGltZUZpZWxkKTtlPyhjLnN0YXJ0VGltZUZpZWxkPWUubmFtZSxlLnR5cGU9XCJlc3JpRmllbGRUeXBlRGF0ZVwiKTpjLnN0YXJ0VGltZUZpZWxkPW51bGx9aWYoYy5lbmRUaW1lRmllbGQpe2NvbnN0IGU9dGhpcy5fZmllbGRzSW5kZXguZ2V0KGMuZW5kVGltZUZpZWxkKTtlPyhjLmVuZFRpbWVGaWVsZD1lLm5hbWUsZS50eXBlPVwiZXNyaUZpZWxkVHlwZURhdGVcIik6Yy5lbmRUaW1lRmllbGQ9bnVsbH1pZihjLnRyYWNrSWRGaWVsZCl7Y29uc3QgZT10aGlzLl9maWVsZHNJbmRleC5nZXQoYy50cmFja0lkRmllbGQpO2U/Yy50cmFja0lkRmllbGQ9ZS5uYW1lOihjLnRyYWNrSWRGaWVsZD1udWxsLGkucHVzaCh7bmFtZTpcImdlb2pzb24tbGF5ZXI6aW52YWxpZC10aW1lSW5mby10cmFja0lkRmllbGRcIixtZXNzYWdlOlwidHJhY2tJZEZpZWxkIGlzIG1pc3NpbmdcIixkZXRhaWxzOnt0aW1lSW5mbzpjfX0pKX1jLnN0YXJ0VGltZUZpZWxkfHxjLmVuZFRpbWVGaWVsZHx8KGkucHVzaCh7bmFtZTpcImdlb2pzb24tbGF5ZXI6aW52YWxpZC10aW1lSW5mb1wiLG1lc3NhZ2U6XCJzdGFydFRpbWVGaWVsZCBhbmQgZW5kVGltZUZpZWxkIGFyZSBtaXNzaW5nXCIsZGV0YWlsczp7dGltZUluZm86Y319KSxjPW51bGwpfWNvbnN0IEk9dT9qKHUpOnZvaWQgMCxiPXt3YXJuaW5nczppLGZlYXR1cmVFcnJvcnM6W10sbGF5ZXJEZWZpbml0aW9uOnsuLi5PLGRyYXdpbmdJbmZvOkk/P3ZvaWQgMCx0ZW1wbGF0ZXM6RihtKSxleHRlbnQ6dm9pZCAwLGdlb21ldHJ5VHlwZTp1LG9iamVjdElkRmllbGQ6ZCxmaWVsZHM6byxoYXNaOiEhbCx0aW1lSW5mbzpjfX07dGhpcy5fcXVlcnlFbmdpbmU9bmV3IGYoe2ZpZWxkczpvLGdlb21ldHJ5VHlwZTp1LGhhc006ITEsaGFzWjpsLG9iamVjdElkRmllbGQ6ZCxzcGF0aWFsUmVmZXJlbmNlOnAsdGltZUluZm86YyxmZWF0dXJlU3RvcmU6bmV3IGgoe2dlb21ldHJ5VHlwZTp1LGhhc006ITEsaGFzWjpsfSksY2FjaGVTcGF0aWFsUXVlcmllczohMH0pLHRoaXMuX2NyZWF0ZURlZmF1bHRBdHRyaWJ1dGVzPUUobSxkKTtjb25zdCB3PWF3YWl0IHRoaXMuX2NyZWF0ZUZlYXR1cmVzKHIpO3RoaXMuX29iamVjdElkR2VuZXJhdG9yPXRoaXMuX2NyZWF0ZU9iamVjdElkR2VuZXJhdG9yKHRoaXMuX3F1ZXJ5RW5naW5lLHcpO2NvbnN0IFQ9dGhpcy5fbm9ybWFsaXplRmVhdHVyZXModyxiLndhcm5pbmdzLGIuZmVhdHVyZUVycm9ycyk7dGhpcy5fcXVlcnlFbmdpbmUuZmVhdHVyZVN0b3JlLmFkZE1hbnkoVCk7Y29uc3R7ZnVsbEV4dGVudDp4LHRpbWVFeHRlbnQ6cX09YXdhaXQgdGhpcy5fcXVlcnlFbmdpbmUuZmV0Y2hSZWNvbXB1dGVkRXh0ZW50cygpO2lmKGIubGF5ZXJEZWZpbml0aW9uLmV4dGVudD14LHEpe2NvbnN0e3N0YXJ0OmUsZW5kOnR9PXE7Yi5sYXllckRlZmluaXRpb24udGltZUluZm8udGltZUV4dGVudD1bZSx0XX1yZXR1cm4gYn1hc3luYyBhcHBseUVkaXRzKGUpe2NvbnN0e3NwYXRpYWxSZWZlcmVuY2U6dCxnZW9tZXRyeVR5cGU6c309dGhpcy5fcXVlcnlFbmdpbmU7cmV0dXJuIGF3YWl0IFByb21pc2UuYWxsKFtiKHQscykseShlLmFkZHMsdCkseShlLnVwZGF0ZXMsdCldKSxhd2FpdCB0aGlzLl93YWl0U25hcHNob3RDb21wbGV0ZSgpLHRoaXMuX2FwcGx5RWRpdHMoZSl9YXN5bmMgcXVlcnlGZWF0dXJlcyhlPXt9LHQ9e30pe3JldHVybiBhd2FpdCB0aGlzLl93YWl0U25hcHNob3RDb21wbGV0ZSgpLHRoaXMuX3F1ZXJ5RW5naW5lLmV4ZWN1dGVRdWVyeShlLHQuc2lnbmFsKX1hc3luYyBxdWVyeUZlYXR1cmVDb3VudChlPXt9LHQ9e30pe3JldHVybiBhd2FpdCB0aGlzLl93YWl0U25hcHNob3RDb21wbGV0ZSgpLHRoaXMuX3F1ZXJ5RW5naW5lLmV4ZWN1dGVRdWVyeUZvckNvdW50KGUsdC5zaWduYWwpfWFzeW5jIHF1ZXJ5T2JqZWN0SWRzKGU9e30sdD17fSl7cmV0dXJuIGF3YWl0IHRoaXMuX3dhaXRTbmFwc2hvdENvbXBsZXRlKCksdGhpcy5fcXVlcnlFbmdpbmUuZXhlY3V0ZVF1ZXJ5Rm9ySWRzKGUsdC5zaWduYWwpfWFzeW5jIHF1ZXJ5RXh0ZW50KGU9e30sdD17fSl7cmV0dXJuIGF3YWl0IHRoaXMuX3dhaXRTbmFwc2hvdENvbXBsZXRlKCksdGhpcy5fcXVlcnlFbmdpbmUuZXhlY3V0ZVF1ZXJ5Rm9yRXh0ZW50KGUsdC5zaWduYWwpfWFzeW5jIHF1ZXJ5U25hcHBpbmcoZSx0PXt9KXtyZXR1cm4gYXdhaXQgdGhpcy5fd2FpdFNuYXBzaG90Q29tcGxldGUoKSx0aGlzLl9xdWVyeUVuZ2luZS5leGVjdXRlUXVlcnlGb3JTbmFwcGluZyhlLHQuc2lnbmFsKX1hc3luYyByZWZyZXNoKGUpe3RoaXMuX2xvYWRPcHRpb25zLmN1c3RvbVBhcmFtZXRlcnM9ZSx0aGlzLl9zbmFwc2hvdFRhc2s/LmFib3J0KCksdGhpcy5fc25hcHNob3RUYXNrPXQodGhpcy5fc25hcHNob3RGZWF0dXJlcyksdGhpcy5fc25hcHNob3RUYXNrLnByb21pc2UudGhlbigoZT0+e3RoaXMuX3F1ZXJ5RW5naW5lLmZlYXR1cmVTdG9yZS5jbGVhcigpLHRoaXMuX29iamVjdElkR2VuZXJhdG9yPXRoaXMuX2NyZWF0ZU9iamVjdElkR2VuZXJhdG9yKHRoaXMuX3F1ZXJ5RW5naW5lLGUpO2NvbnN0IHQ9dGhpcy5fbm9ybWFsaXplRmVhdHVyZXMoZSk7dCYmdGhpcy5fcXVlcnlFbmdpbmUuZmVhdHVyZVN0b3JlLmFkZE1hbnkodCl9KSwoZT0+e3RoaXMuX3F1ZXJ5RW5naW5lLmZlYXR1cmVTdG9yZS5jbGVhcigpLHIoZSl8fGkuZ2V0TG9nZ2VyKFwiZXNyaS5sYXllcnMuR2VvSlNPTkxheWVyXCIpLmVycm9yKG5ldyBzKFwiZ2VvanNvbi1sYXllcjpyZWZyZXNoXCIsXCJBbiBlcnJvciBvY2N1cnJlZCBkdXJpbmcgcmVmcmVzaFwiLHtlcnJvcjplfSkpfSkpLGF3YWl0IHRoaXMuX3dhaXRTbmFwc2hvdENvbXBsZXRlKCk7Y29uc3R7ZnVsbEV4dGVudDpuLHRpbWVFeHRlbnQ6YX09YXdhaXQgdGhpcy5fcXVlcnlFbmdpbmUuZmV0Y2hSZWNvbXB1dGVkRXh0ZW50cygpO3JldHVybntleHRlbnQ6bix0aW1lRXh0ZW50OmF9fWFzeW5jIF9jcmVhdGVGZWF0dXJlcyhlKXtpZihudWxsPT1lKXJldHVybltdO2NvbnN0e2dlb21ldHJ5VHlwZTp0LGhhc1o6cyxvYmplY3RJZEZpZWxkOml9PXRoaXMuX3F1ZXJ5RW5naW5lLHI9XyhlLHtnZW9tZXRyeVR5cGU6dCxoYXNaOnMsb2JqZWN0SWRGaWVsZDppfSk7aWYoIW8odGhpcy5fcXVlcnlFbmdpbmUuc3BhdGlhbFJlZmVyZW5jZSxhKSlmb3IoY29uc3QgbiBvZiByKW51bGwhPW4uZ2VvbWV0cnkmJihuLmdlb21ldHJ5PWwobSh1KG4uZ2VvbWV0cnksdGhpcy5fcXVlcnlFbmdpbmUuZ2VvbWV0cnlUeXBlLHRoaXMuX3F1ZXJ5RW5naW5lLmhhc1osITEpLGEsdGhpcy5fcXVlcnlFbmdpbmUuc3BhdGlhbFJlZmVyZW5jZSkpKTtyZXR1cm4gcn1hc3luYyBfd2FpdFNuYXBzaG90Q29tcGxldGUoKXtpZih0aGlzLl9zbmFwc2hvdFRhc2smJiF0aGlzLl9zbmFwc2hvdFRhc2suZmluaXNoZWQpe3RyeXthd2FpdCB0aGlzLl9zbmFwc2hvdFRhc2sucHJvbWlzZX1jYXRjaHt9cmV0dXJuIHRoaXMuX3dhaXRTbmFwc2hvdENvbXBsZXRlKCl9fWFzeW5jIF9mZXRjaCh0KXtjb25zdHt1cmw6cyxjdXN0b21QYXJhbWV0ZXJzOml9PXRoaXMuX2xvYWRPcHRpb25zLHI9KGF3YWl0IGUocyx7cmVzcG9uc2VUeXBlOlwianNvblwiLHF1ZXJ5OnsuLi5pfSxzaWduYWw6dH0pKS5kYXRhO3JldHVybiBhd2FpdCBJKHIpLHJ9X25vcm1hbGl6ZUZlYXR1cmVzKGUsdCxzKXtjb25zdHtvYmplY3RJZEZpZWxkOml9PXRoaXMuX3F1ZXJ5RW5naW5lLHI9W107Zm9yKGNvbnN0IG4gb2YgZSl7Y29uc3QgZT10aGlzLl9jcmVhdGVEZWZhdWx0QXR0cmlidXRlcygpLGE9dyh0aGlzLl9maWVsZHNJbmRleCxlLG4uYXR0cmlidXRlcywhMCx0KTthP3M/LnB1c2goYSk6KHRoaXMuX2Fzc2lnbk9iamVjdElkKGUsbi5hdHRyaWJ1dGVzLCEwKSxuLmF0dHJpYnV0ZXM9ZSxuLm9iamVjdElkPWVbaV0sci5wdXNoKG4pKX1yZXR1cm4gcn1hc3luYyBfYXBwbHlFZGl0cyhlKXtjb25zdHthZGRzOnQsdXBkYXRlczpzLGRlbGV0ZXM6aX09ZSxyPXthZGRSZXN1bHRzOltdLGRlbGV0ZVJlc3VsdHM6W10sdXBkYXRlUmVzdWx0czpbXSx1aWRUb09iamVjdElkOnt9fTtpZih0JiZ0Lmxlbmd0aCYmdGhpcy5fYXBwbHlBZGRFZGl0cyhyLHQpLHMmJnMubGVuZ3RoJiZ0aGlzLl9hcHBseVVwZGF0ZUVkaXRzKHIscyksaSYmaS5sZW5ndGgpe2Zvcihjb25zdCBlIG9mIGkpci5kZWxldGVSZXN1bHRzLnB1c2goVChlKSk7dGhpcy5fcXVlcnlFbmdpbmUuZmVhdHVyZVN0b3JlLnJlbW92ZU1hbnlCeUlkKGkpfWNvbnN0e2Z1bGxFeHRlbnQ6bix0aW1lRXh0ZW50OmF9PWF3YWl0IHRoaXMuX3F1ZXJ5RW5naW5lLmZldGNoUmVjb21wdXRlZEV4dGVudHMoKTtyZXR1cm57ZXh0ZW50Om4sdGltZUV4dGVudDphLGZlYXR1cmVFZGl0UmVzdWx0czpyfX1fYXBwbHlBZGRFZGl0cyhlLHQpe2NvbnN0e2FkZFJlc3VsdHM6c309ZSx7Z2VvbWV0cnlUeXBlOmksaGFzTTpyLGhhc1o6YSxvYmplY3RJZEZpZWxkOm8sc3BhdGlhbFJlZmVyZW5jZTpsLGZlYXR1cmVTdG9yZTp1fT10aGlzLl9xdWVyeUVuZ2luZSxwPVtdO2Zvcihjb25zdCBkIG9mIHQpe2lmKGQuZ2VvbWV0cnkmJmkhPT1uKGQuZ2VvbWV0cnkpKXtzLnB1c2goeChcIkluY29ycmVjdCBnZW9tZXRyeSB0eXBlLlwiKSk7Y29udGludWV9Y29uc3QgdD10aGlzLl9jcmVhdGVEZWZhdWx0QXR0cmlidXRlcygpLHI9dyh0aGlzLl9maWVsZHNJbmRleCx0LGQuYXR0cmlidXRlcyk7aWYocilzLnB1c2gocik7ZWxzZXtpZih0aGlzLl9hc3NpZ25PYmplY3RJZCh0LGQuYXR0cmlidXRlcyksZC5hdHRyaWJ1dGVzPXQsbnVsbCE9ZC51aWQpe2NvbnN0IHQ9ZC5hdHRyaWJ1dGVzW29dO2UudWlkVG9PYmplY3RJZFtkLnVpZF09dH1pZihudWxsIT1kLmdlb21ldHJ5KXtjb25zdCBlPWQuZ2VvbWV0cnkuc3BhdGlhbFJlZmVyZW5jZT8/bDtkLmdlb21ldHJ5PW0ocShkLmdlb21ldHJ5LGUpLGUsbCl9cC5wdXNoKGQpLHMucHVzaChUKGQuYXR0cmlidXRlc1tvXSkpfX11LmFkZE1hbnkoZChbXSxwLGksYSxyLG8pKX1fYXBwbHlVcGRhdGVFZGl0cyh7dXBkYXRlUmVzdWx0czplfSx0KXtjb25zdHtnZW9tZXRyeVR5cGU6cyxoYXNNOmksaGFzWjpyLG9iamVjdElkRmllbGQ6YSxzcGF0aWFsUmVmZXJlbmNlOm8sZmVhdHVyZVN0b3JlOmx9PXRoaXMuX3F1ZXJ5RW5naW5lO2Zvcihjb25zdCB1IG9mIHQpe2NvbnN0e2F0dHJpYnV0ZXM6dCxnZW9tZXRyeTpkfT11LGg9dCYmdFthXTtpZihudWxsPT1oKXtlLnB1c2goeChgSWRlbnRpZmllciBmaWVsZCAke2F9IG1pc3NpbmdgKSk7Y29udGludWV9aWYoIWwuaGFzKGgpKXtlLnB1c2goeChgRmVhdHVyZSB3aXRoIG9iamVjdCBpZCAke2h9IG1pc3NpbmdgKSk7Y29udGludWV9Y29uc3QgeT1wKGwuZ2V0RmVhdHVyZShoKSxzLHIsaSk7aWYobnVsbCE9ZCl7aWYocyE9PW4oZCkpe2UucHVzaCh4KFwiSW5jb3JyZWN0IGdlb21ldHJ5IHR5cGUuXCIpKTtjb250aW51ZX1jb25zdCB0PWQuc3BhdGlhbFJlZmVyZW5jZT8/bzt5Lmdlb21ldHJ5PW0ocShkLHQpLHQsbyl9aWYodCl7Y29uc3Qgcz13KHRoaXMuX2ZpZWxkc0luZGV4LHkuYXR0cmlidXRlcyx0KTtpZihzKXtlLnB1c2gocyk7Y29udGludWV9fWwuYWRkKGMoeSxzLHIsaSxhKSksZS5wdXNoKFQoaCkpfX1fY3JlYXRlT2JqZWN0SWRHZW5lcmF0b3IoZSx0KXtjb25zdCBzPWUuZmllbGRzSW5kZXguZ2V0KGUub2JqZWN0SWRGaWVsZCk7aWYoXCJlc3JpRmllbGRUeXBlU3RyaW5nXCI9PT1zLnR5cGUpcmV0dXJuKCk9PnMubmFtZStcIi1cIitEYXRlLm5vdygpLnRvU3RyaW5nKDE2KTtsZXQgaT1OdW1iZXIuTkVHQVRJVkVfSU5GSU5JVFk7Zm9yKGNvbnN0IHIgb2YgdClyLm9iamVjdElkJiYoaT1NYXRoLm1heChpLHIub2JqZWN0SWQpKTtyZXR1cm4gaT1NYXRoLm1heCgwLGkpKzEsKCk9PmkrK31fYXNzaWduT2JqZWN0SWQoZSx0LHM9ITEpe2NvbnN0IGk9dGhpcy5fcXVlcnlFbmdpbmUub2JqZWN0SWRGaWVsZDtlW2ldPXMmJmkgaW4gdD90W2ldOnRoaXMuX29iamVjdElkR2VuZXJhdG9yKCl9YXN5bmMgX2NoZWNrUHJvamVjdGlvbihlKXt0cnl7YXdhaXQgeShhLGUpfWNhdGNoe3Rocm93IG5ldyBzKFwiZ2VvanNvbi1sYXllclwiLFwiUHJvamVjdGlvbiBub3Qgc3VwcG9ydGVkXCIpfX19ZXhwb3J0e0MgYXMgZGVmYXVsdH07XG4iLCIvKlxuQWxsIG1hdGVyaWFsIGNvcHlyaWdodCBFU1JJLCBBbGwgUmlnaHRzIFJlc2VydmVkLCB1bmxlc3Mgb3RoZXJ3aXNlIHNwZWNpZmllZC5cblNlZSBodHRwczovL2pzLmFyY2dpcy5jb20vNC4yNy9lc3JpL2NvcHlyaWdodC50eHQgZm9yIGRldGFpbHMuXG4qL1xuaW1wb3J0IGUgZnJvbVwiLi4vLi4vLi4vLi4vY29yZS9FcnJvci5qc1wiO2ltcG9ydHtPcHRpbWl6ZWRGZWF0dXJlIGFzIHR9ZnJvbVwiLi4vLi4vT3B0aW1pemVkRmVhdHVyZS5qc1wiO2ltcG9ydCBuIGZyb21cIi4uLy4uL09wdGltaXplZEdlb21ldHJ5LmpzXCI7aW1wb3J0e25vcm1hbGl6ZUZpZWxkTmFtZSBhcyBvLGlzTnVtZXJpY0ZpZWxkIGFzIHJ9ZnJvbVwiLi4vLi4vLi4vc3VwcG9ydC9maWVsZFV0aWxzLmpzXCI7Y29uc3QgaT17TGluZVN0cmluZzpcImVzcmlHZW9tZXRyeVBvbHlsaW5lXCIsTXVsdGlMaW5lU3RyaW5nOlwiZXNyaUdlb21ldHJ5UG9seWxpbmVcIixNdWx0aVBvaW50OlwiZXNyaUdlb21ldHJ5TXVsdGlwb2ludFwiLFBvaW50OlwiZXNyaUdlb21ldHJ5UG9pbnRcIixQb2x5Z29uOlwiZXNyaUdlb21ldHJ5UG9seWdvblwiLE11bHRpUG9seWdvbjpcImVzcmlHZW9tZXRyeVBvbHlnb25cIn07ZnVuY3Rpb24gcyhlKXtyZXR1cm4gaVtlXX1mdW5jdGlvbipjKGUpe3N3aXRjaChlLnR5cGUpe2Nhc2VcIkZlYXR1cmVcIjp5aWVsZCBlO2JyZWFrO2Nhc2VcIkZlYXR1cmVDb2xsZWN0aW9uXCI6Zm9yKGNvbnN0IHQgb2YgZS5mZWF0dXJlcyl0JiYoeWllbGQgdCl9fWZ1bmN0aW9uKnUoZSl7aWYoZSlzd2l0Y2goZS50eXBlKXtjYXNlXCJQb2ludFwiOnlpZWxkIGUuY29vcmRpbmF0ZXM7YnJlYWs7Y2FzZVwiTGluZVN0cmluZ1wiOmNhc2VcIk11bHRpUG9pbnRcIjp5aWVsZCplLmNvb3JkaW5hdGVzO2JyZWFrO2Nhc2VcIk11bHRpTGluZVN0cmluZ1wiOmNhc2VcIlBvbHlnb25cIjpmb3IoY29uc3QgdCBvZiBlLmNvb3JkaW5hdGVzKXlpZWxkKnQ7YnJlYWs7Y2FzZVwiTXVsdGlQb2x5Z29uXCI6Zm9yKGNvbnN0IHQgb2YgZS5jb29yZGluYXRlcylmb3IoY29uc3QgZSBvZiB0KXlpZWxkKmV9fWZ1bmN0aW9uKmwoZSxvPXt9KXtjb25zdHtnZW9tZXRyeVR5cGU6cixvYmplY3RJZEZpZWxkOml9PW87Zm9yKGNvbnN0IGMgb2YgZSl7Y29uc3R7Z2VvbWV0cnk6ZSxwcm9wZXJ0aWVzOnUsaWQ6bH09YztpZihlJiZzKGUudHlwZSkhPT1yKWNvbnRpbnVlO2NvbnN0IGY9dXx8e307bGV0IGE7aSYmKGE9ZltpXSxudWxsPT1sfHxhfHwoZltpXT1hPWwpKTtjb25zdCB5PW5ldyB0KGU/ZyhuZXcgbixlLG8pOm51bGwsZixudWxsLGE/P3ZvaWQgMCk7eWllbGQgeX19ZnVuY3Rpb24gZihlKXtmb3IoY29uc3QgdCBvZiBlKWlmKHQubGVuZ3RoPjIpcmV0dXJuITA7cmV0dXJuITF9ZnVuY3Rpb24gYShlKXtyZXR1cm4hcChlKX1mdW5jdGlvbiB5KGUpe3JldHVybiBwKGUpfWZ1bmN0aW9uIHAoZSl7bGV0IHQ9MDtmb3IobGV0IG49MDtuPGUubGVuZ3RoO24rKyl7Y29uc3Qgbz1lW25dLHI9ZVsobisxKSVlLmxlbmd0aF07dCs9b1swXSpyWzFdLXJbMF0qb1sxXX1yZXR1cm4gdDw9MH1mdW5jdGlvbiBkKGUpe2NvbnN0IHQ9ZVswXSxuPWVbZS5sZW5ndGgtMV07cmV0dXJuIHRbMF09PT1uWzBdJiZ0WzFdPT09blsxXSYmdFsyXT09PW5bMl18fGUucHVzaCh0KSxlfWZ1bmN0aW9uIGcoZSx0LG4pe3N3aXRjaCh0LnR5cGUpe2Nhc2VcIkxpbmVTdHJpbmdcIjpyZXR1cm4gbShlLHQsbik7Y2FzZVwiTXVsdGlMaW5lU3RyaW5nXCI6cmV0dXJuIGgoZSx0LG4pO2Nhc2VcIk11bHRpUG9pbnRcIjpyZXR1cm4gdyhlLHQsbik7Y2FzZVwiTXVsdGlQb2x5Z29uXCI6cmV0dXJuIFAoZSx0LG4pO2Nhc2VcIlBvaW50XCI6cmV0dXJuIGIoZSx0LG4pO2Nhc2VcIlBvbHlnb25cIjpyZXR1cm4gaihlLHQsbil9fWZ1bmN0aW9uIG0oZSx0LG4pe3JldHVybiBHKGUsdC5jb29yZGluYXRlcyxuKSxlfWZ1bmN0aW9uIGgoZSx0LG4pe2Zvcihjb25zdCBvIG9mIHQuY29vcmRpbmF0ZXMpRyhlLG8sbik7cmV0dXJuIGV9ZnVuY3Rpb24gdyhlLHQsbil7cmV0dXJuIEcoZSx0LmNvb3JkaW5hdGVzLG4pLGV9ZnVuY3Rpb24gUChlLHQsbil7Zm9yKGNvbnN0IG8gb2YgdC5jb29yZGluYXRlcyl7UyhlLG9bMF0sbik7Zm9yKGxldCB0PTE7dDxvLmxlbmd0aDt0KyspRihlLG9bdF0sbil9cmV0dXJuIGV9ZnVuY3Rpb24gYihlLHQsbil7cmV0dXJuIGsoZSx0LmNvb3JkaW5hdGVzLG4pLGV9ZnVuY3Rpb24gaihlLHQsbil7Y29uc3Qgbz10LmNvb3JkaW5hdGVzO1MoZSxvWzBdLG4pO2ZvcihsZXQgcj0xO3I8by5sZW5ndGg7cisrKUYoZSxvW3JdLG4pO3JldHVybiBlfWZ1bmN0aW9uIFMoZSx0LG4pe2NvbnN0IG89ZCh0KTthKG8pP00oZSxvLG4pOkcoZSxvLG4pfWZ1bmN0aW9uIEYoZSx0LG4pe2NvbnN0IG89ZCh0KTt5KG8pP00oZSxvLG4pOkcoZSxvLG4pfWZ1bmN0aW9uIEcoZSx0LG4pe2Zvcihjb25zdCBvIG9mIHQpayhlLG8sbik7ZS5sZW5ndGhzLnB1c2godC5sZW5ndGgpfWZ1bmN0aW9uIE0oZSx0LG4pe2ZvcihsZXQgbz10Lmxlbmd0aC0xO28+PTA7by0tKWsoZSx0W29dLG4pO2UubGVuZ3Rocy5wdXNoKHQubGVuZ3RoKX1mdW5jdGlvbiBrKGUsdCxuKXtjb25zdFtvLHIsaV09dDtlLmNvb3Jkcy5wdXNoKG8sciksbi5oYXNaJiZlLmNvb3Jkcy5wdXNoKGl8fDApfWZ1bmN0aW9uIE8oZSl7c3dpdGNoKHR5cGVvZiBlKXtjYXNlXCJzdHJpbmdcIjpyZXR1cm5cImVzcmlGaWVsZFR5cGVTdHJpbmdcIjtjYXNlXCJudW1iZXJcIjpyZXR1cm5cImVzcmlGaWVsZFR5cGVEb3VibGVcIjtkZWZhdWx0OnJldHVyblwidW5rbm93blwifX1mdW5jdGlvbiBUKHQpe2lmKCF0KXRocm93IG5ldyBlKFwiZ2VvanNvbi1sYXllcjplbXB0eVwiLFwiR2VvSlNPTiBkYXRhIGlzIGVtcHR5XCIpO2lmKFwiRmVhdHVyZVwiIT09dC50eXBlJiZcIkZlYXR1cmVDb2xsZWN0aW9uXCIhPT10LnR5cGUpdGhyb3cgbmV3IGUoXCJnZW9qc29uLWxheWVyOnVuc3VwcG9ydGVkLWdlb2pzb24tb2JqZWN0XCIsXCJtaXNzaW5nIG9yIG5vdCBzdXBwb3J0ZWQgR2VvSlNPTiBvYmplY3QgdHlwZVwiLHtkYXRhOnR9KTtjb25zdHtjcnM6bn09dDtpZighbilyZXR1cm47Y29uc3Qgbz1cInN0cmluZ1wiPT10eXBlb2Ygbj9uOlwibmFtZVwiPT09bi50eXBlP24ucHJvcGVydGllcy5uYW1lOlwiRVBTR1wiPT09bi50eXBlP24ucHJvcGVydGllcy5jb2RlOm51bGwscj1uZXcgUmVnRXhwKFwiLiooQ1JTODRIP3w0MzI2KSRcIixcImlcIik7aWYoIW98fCFyLnRlc3QobykpdGhyb3cgbmV3IGUoXCJnZW9qc29uLWxheWVyOnVuc3VwcG9ydGVkLWNyc1wiLFwidW5zdXBwb3J0ZWQgR2VvSlNPTiAnY3JzJyBtZW1iZXJcIix7Y3JzOm59KX1mdW5jdGlvbiBMKGUsdD17fSl7Y29uc3Qgbj1bXSxpPW5ldyBTZXQsbD1uZXcgU2V0O2xldCBhLHk9ITEscD1udWxsLGQ9ITEse2dlb21ldHJ5VHlwZTpnPW51bGx9PXQsbT0hMTtmb3IoY29uc3QgciBvZiBjKGUpKXtjb25zdHtnZW9tZXRyeTplLHByb3BlcnRpZXM6dCxpZDpjfT1yO2lmKCFlfHwoZ3x8KGc9cyhlLnR5cGUpKSxzKGUudHlwZSk9PT1nKSl7aWYoIXkpe3k9Zih1KGUpKX1pZihkfHwoZD1udWxsIT1jLGQmJihhPXR5cGVvZiBjLHQmJihwPU9iamVjdC5rZXlzKHQpLmZpbHRlcigoZT0+dFtlXT09PWMpKSkpKSx0JiZwJiZkJiZudWxsIT1jJiYocC5sZW5ndGg+MT9wPXAuZmlsdGVyKChlPT50W2VdPT09YykpOjE9PT1wLmxlbmd0aCYmKHA9dFtwWzBdXT09PWM/cDpbXSkpLCFtJiZ0KXtsZXQgZT0hMDtmb3IoY29uc3QgciBpbiB0KXtpZihpLmhhcyhyKSljb250aW51ZTtjb25zdCBzPXRbcl07aWYobnVsbD09cyl7ZT0hMSxsLmFkZChyKTtjb250aW51ZX1jb25zdCBjPU8ocyk7aWYoXCJ1bmtub3duXCI9PT1jKXtsLmFkZChyKTtjb250aW51ZX1sLmRlbGV0ZShyKSxpLmFkZChyKTtjb25zdCB1PW8ocik7dSYmbi5wdXNoKHtuYW1lOnUsYWxpYXM6cix0eXBlOmN9KX1tPWV9fX1jb25zdCBoPW8oMT09PXA/Lmxlbmd0aCYmcFswXXx8bnVsbCk/P3ZvaWQgMDtpZihoKWZvcihjb25zdCBvIG9mIG4paWYoby5uYW1lPT09aCYmcihvKSl7by50eXBlPVwiZXNyaUZpZWxkVHlwZU9JRFwiO2JyZWFrfXJldHVybntmaWVsZHM6bixnZW9tZXRyeVR5cGU6ZyxoYXNaOnksb2JqZWN0SWRGaWVsZE5hbWU6aCxvYmplY3RJZEZpZWxkVHlwZTphLHVua25vd25GaWVsZHM6QXJyYXkuZnJvbShsKX19ZnVuY3Rpb24gSShlLHQpe3JldHVybiBBcnJheS5mcm9tKGwoYyhlKSx0KSl9ZXhwb3J0e0kgYXMgY3JlYXRlT3B0aW1pemVkRmVhdHVyZXMscyBhcyBnZXRHZW9tZXRyeVR5cGUsTCBhcyBpbmZlckxheWVyUHJvcGVydGllcyxUIGFzIHZhbGlkYXRlR2VvSlNPTn07XG4iLCIvKlxuQWxsIG1hdGVyaWFsIGNvcHlyaWdodCBFU1JJLCBBbGwgUmlnaHRzIFJlc2VydmVkLCB1bmxlc3Mgb3RoZXJ3aXNlIHNwZWNpZmllZC5cblNlZSBodHRwczovL2pzLmFyY2dpcy5jb20vNC4yNy9lc3JpL2NvcHlyaWdodC50eHQgZm9yIGRldGFpbHMuXG4qL1xuaW1wb3J0IGhhcyBmcm9tXCIuLi8uLi8uLi8uLi9jb3JlL2hhcy5qc1wiO2ltcG9ydHtjbG9uZSBhcyB0fWZyb21cIi4uLy4uLy4uLy4uL2NvcmUvbGFuZy5qc1wiO2ltcG9ydHtxdWVyeUNhcGFiaWxpdGllcyBhcyBzfWZyb21cIi4uLy4uL2RhdGEvUXVlcnlFbmdpbmVDYXBhYmlsaXRpZXMuanNcIjtpbXBvcnR7ZGVmYXVsdFBvaW50U3ltYm9sSlNPTiBhcyByLGRlZmF1bHRQb2x5bGluZVN5bWJvbEpTT04gYXMgZSxkZWZhdWx0UG9seWdvblN5bWJvbEpTT04gYXMgcH1mcm9tXCIuLi8uLi8uLi8uLi9zeW1ib2xzL3N1cHBvcnQvZGVmYXVsdHNKU09OLmpzXCI7ZnVuY3Rpb24gbyh0KXtyZXR1cm57cmVuZGVyZXI6e3R5cGU6XCJzaW1wbGVcIixzeW1ib2w6XCJlc3JpR2VvbWV0cnlQb2ludFwiPT09dHx8XCJlc3JpR2VvbWV0cnlNdWx0aXBvaW50XCI9PT10P3I6XCJlc3JpR2VvbWV0cnlQb2x5bGluZVwiPT09dD9lOnB9fX1jb25zdCB1PS9eW18kYS16QS1aXVtfJGEtekEtWjAtOV0qJC87bGV0IG49MTtmdW5jdGlvbiBpKHQscyl7aWYoaGFzKFwiZXNyaS1jc3AtcmVzdHJpY3Rpb25zXCIpKXJldHVybigpPT4oe1tzXTpudWxsLC4uLnR9KTt0cnl7bGV0IHI9YHRoaXMuJHtzfSA9IG51bGw7YDtmb3IoY29uc3QgcyBpbiB0KXtyKz1gdGhpcyR7dS50ZXN0KHMpP2AuJHtzfWA6YFtcIiR7c31cIl1gfSA9ICR7SlNPTi5zdHJpbmdpZnkodFtzXSl9O2B9Y29uc3QgZT1uZXcgRnVuY3Rpb24oYFxcbiAgICAgIHJldHVybiBjbGFzcyBBdHRyaWJ1dGVzQ2xhc3MkJHtuKyt9IHtcXG4gICAgICAgIGNvbnN0cnVjdG9yKCkge1xcbiAgICAgICAgICAke3J9O1xcbiAgICAgICAgfVxcbiAgICAgIH1cXG4gICAgYCkoKTtyZXR1cm4oKT0+bmV3IGV9Y2F0Y2gocil7cmV0dXJuKCk9Pih7W3NdOm51bGwsLi4udH0pfX1mdW5jdGlvbiBhKHM9e30pe3JldHVyblt7bmFtZTpcIk5ldyBGZWF0dXJlXCIsZGVzY3JpcHRpb246XCJcIixwcm90b3R5cGU6e2F0dHJpYnV0ZXM6dChzKX19XX1mdW5jdGlvbiBjKHQscil7cmV0dXJue2FuYWx5dGljczp7c3VwcG9ydHNDYWNoZUhpbnQ6ITF9LGF0dGFjaG1lbnQ6bnVsbCxkYXRhOntpc1ZlcnNpb25lZDohMSxzdXBwb3J0c0F0dGFjaG1lbnQ6ITEsc3VwcG9ydHNNOiExLHN1cHBvcnRzWjp0fSxtZXRhZGF0YTp7c3VwcG9ydHNBZHZhbmNlZEZpZWxkUHJvcGVydGllczohMX0sb3BlcmF0aW9uczp7c3VwcG9ydHNDYWxjdWxhdGU6ITEsc3VwcG9ydHNUcnVuY2F0ZTohMSxzdXBwb3J0c1ZhbGlkYXRlU3FsOiExLHN1cHBvcnRzQWRkOnIsc3VwcG9ydHNEZWxldGU6cixzdXBwb3J0c0VkaXRpbmc6cixzdXBwb3J0c0NoYW5nZVRyYWNraW5nOiExLHN1cHBvcnRzUXVlcnk6ITAsc3VwcG9ydHNRdWVyeUFuYWx5dGljczohMSxzdXBwb3J0c1F1ZXJ5QXR0YWNobWVudHM6ITEsc3VwcG9ydHNRdWVyeVRvcEZlYXR1cmVzOiExLHN1cHBvcnRzUmVzaXplQXR0YWNobWVudHM6ITEsc3VwcG9ydHNTeW5jOiExLHN1cHBvcnRzVXBkYXRlOnIsc3VwcG9ydHNFeGNlZWRzTGltaXRTdGF0aXN0aWNzOiEwLHN1cHBvcnRzQXN5bmNDb252ZXJ0M0Q6ITF9LHF1ZXJ5OnMscXVlcnlSZWxhdGVkOntzdXBwb3J0c0NvdW50OiEwLHN1cHBvcnRzT3JkZXJCeTohMCxzdXBwb3J0c1BhZ2luYXRpb246ITAsc3VwcG9ydHNDYWNoZUhpbnQ6ITF9LHF1ZXJ5VG9wRmVhdHVyZXM6e3N1cHBvcnRzQ2FjaGVIaW50OiExfSxlZGl0aW5nOntzdXBwb3J0c0dlb21ldHJ5VXBkYXRlOnIsc3VwcG9ydHNHbG9iYWxJZDohMSxzdXBwb3J0c1JldHVyblNlcnZpY2VFZGl0c0luU291cmNlU3BhdGlhbFJlZmVyZW5jZTohMSxzdXBwb3J0c1JvbGxiYWNrT25GYWlsdXJlOiExLHN1cHBvcnRzVXBkYXRlV2l0aG91dE06ITEsc3VwcG9ydHNVcGxvYWRXaXRoSXRlbUlkOiExLHN1cHBvcnRzRGVsZXRlQnlBbm9ueW1vdXM6ITEsc3VwcG9ydHNEZWxldGVCeU90aGVyczohMSxzdXBwb3J0c1VwZGF0ZUJ5QW5vbnltb3VzOiExLHN1cHBvcnRzVXBkYXRlQnlPdGhlcnM6ITEsc3VwcG9ydHNBc3luY0FwcGx5RWRpdHM6ITF9fX1leHBvcnR7YyBhcyBjcmVhdGVDYXBhYmlsaXRpZXMsaSBhcyBjcmVhdGVEZWZhdWx0QXR0cmlidXRlc0Z1bmN0aW9uLGEgYXMgY3JlYXRlRGVmYXVsdFRlbXBsYXRlLG8gYXMgY3JlYXRlRHJhd2luZ0luZm99O1xuIiwiLypcbkFsbCBtYXRlcmlhbCBjb3B5cmlnaHQgRVNSSSwgQWxsIFJpZ2h0cyBSZXNlcnZlZCwgdW5sZXNzIG90aGVyd2lzZSBzcGVjaWZpZWQuXG5TZWUgaHR0cHM6Ly9qcy5hcmNnaXMuY29tLzQuMjcvZXNyaS9jb3B5cmlnaHQudHh0IGZvciBkZXRhaWxzLlxuKi9cbmltcG9ydHtpc1ZhbGlkIGFzIGV9ZnJvbVwiLi4vLi4vLi4vLi4vZ2VvbWV0cnkvc3VwcG9ydC9zcGF0aWFsUmVmZXJlbmNlVXRpbHMuanNcIjtpbXBvcnR7dmFsaWRhdGVGaWVsZFZhbHVlIGFzIHQsdmFsaWRhdGlvbkVycm9yVG9TdHJpbmcgYXMgbixpc051bWVyaWNGaWVsZCBhcyBpLGlzU3RyaW5nRmllbGQgYXMgcixzYW5pdGl6ZU51bGxGaWVsZFZhbHVlIGFzIHN9ZnJvbVwiLi4vLi4vLi4vc3VwcG9ydC9maWVsZFV0aWxzLmpzXCI7Y2xhc3Mgb3tjb25zdHJ1Y3Rvcigpe3RoaXMuY29kZT1udWxsLHRoaXMuZGVzY3JpcHRpb249bnVsbH19Y2xhc3MgbHtjb25zdHJ1Y3RvcihlKXt0aGlzLmVycm9yPW5ldyBvLHRoaXMuZ2xvYmFsSWQ9bnVsbCx0aGlzLm9iamVjdElkPW51bGwsdGhpcy5zdWNjZXNzPSExLHRoaXMudW5pcXVlSWQ9bnVsbCx0aGlzLmVycm9yLmRlc2NyaXB0aW9uPWV9fWZ1bmN0aW9uIHUoZSl7cmV0dXJuIG5ldyBsKGUpfWNsYXNzIGF7Y29uc3RydWN0b3IoZSl7dGhpcy5nbG9iYWxJZD1udWxsLHRoaXMuc3VjY2Vzcz0hMCx0aGlzLm9iamVjdElkPXRoaXMudW5pcXVlSWQ9ZX19ZnVuY3Rpb24gYyhlKXtyZXR1cm4gbmV3IGEoZSl9Y29uc3QgZj1uZXcgU2V0O2Z1bmN0aW9uIGQoZSxpLHIscz0hMSxvKXtmLmNsZWFyKCk7Zm9yKGNvbnN0IGwgaW4gcil7Y29uc3QgYT1lLmdldChsKTtpZighYSljb250aW51ZTtjb25zdCBjPXJbbF0sZD1tKGEsYyk7aWYoZCE9PWMmJm8mJm8ucHVzaCh7bmFtZTpcImludmFsaWQtdmFsdWUtdHlwZVwiLG1lc3NhZ2U6XCJhdHRyaWJ1dGUgdmFsdWUgd2FzIGNvbnZlcnRlZCB0byBtYXRjaCB0aGUgZmllbGQgdHlwZVwiLGRldGFpbHM6e2ZpZWxkOmEsb3JpZ2luYWxWYWx1ZTpjLHNhbml0aXplZFZhbHVlOmR9fSksZi5hZGQoYS5uYW1lKSxhJiYoc3x8YS5lZGl0YWJsZSkpe2NvbnN0IGU9dChhLGQpO2lmKGUpcmV0dXJuIHUobihlLGEsZCkpO2lbYS5uYW1lXT1kfX1mb3IoY29uc3QgdCBvZiBlPy5yZXF1aXJlZEZpZWxkcz8/W10paWYoIWYuaGFzKHQubmFtZSkpcmV0dXJuIHUoYG1pc3NpbmcgcmVxdWlyZWQgZmllbGQgXCIke3QubmFtZX1cImApO3JldHVybiBudWxsfWZ1bmN0aW9uIG0oZSx0KXtsZXQgbj10O3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiB0JiZpKGUpP249cGFyc2VGbG9hdCh0KTpudWxsIT10JiZyKGUpJiZcInN0cmluZ1wiIT10eXBlb2YgdCYmKG49U3RyaW5nKHQpKSxzKG4pfWxldCBwO2Z1bmN0aW9uIGgodCxuKXtpZighdHx8IWUobikpcmV0dXJuIHQ7aWYoXCJyaW5nc1wiaW4gdHx8XCJwYXRoc1wiaW4gdCl7aWYobnVsbD09cCl0aHJvdyBuZXcgVHlwZUVycm9yKFwiZ2VvbWV0cnkgZW5naW5lIG5vdCBsb2FkZWRcIik7cmV0dXJuIHAuc2ltcGxpZnkobix0KX1yZXR1cm4gdH1hc3luYyBmdW5jdGlvbiBnKCl7cmV0dXJuIG51bGw9PXAmJihwPWF3YWl0IGltcG9ydChcIi4uLy4uLy4uLy4uL2dlb21ldHJ5L2dlb21ldHJ5RW5naW5lSlNPTi5qc1wiKSkscH1hc3luYyBmdW5jdGlvbiB5KHQsbil7IWUodCl8fFwiZXNyaUdlb21ldHJ5UG9seWdvblwiIT09biYmXCJlc3JpR2VvbWV0cnlQb2x5bGluZVwiIT09bnx8YXdhaXQgZygpfWV4cG9ydHt1IGFzIGNyZWF0ZUZlYXR1cmVFZGl0RXJyb3JSZXN1bHQsYyBhcyBjcmVhdGVGZWF0dXJlRWRpdFN1Y2Nlc3NSZXN1bHQseSBhcyBsb2FkR2VvbWV0cnlFbmdpbmVGb3JTaW1wbGlmeSxkIGFzIG1peEF0dHJpYnV0ZXMsaCBhcyBzaW1wbGlmeX07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=