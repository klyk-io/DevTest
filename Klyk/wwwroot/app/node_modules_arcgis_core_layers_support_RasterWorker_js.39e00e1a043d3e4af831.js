"use strict";
(self["webpackChunkklyk"] = self["webpackChunkklyk"] || []).push([["node_modules_arcgis_core_layers_support_RasterWorker_js"],{

/***/ "./node_modules/@arcgis/core/layers/support/RasterWorker.js":
/*!******************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/support/RasterWorker.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ N)
/* harmony export */ });
/* harmony import */ var _geometry_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../geometry.js */ "./node_modules/@arcgis/core/geometry.js");
/* harmony import */ var _geometry_support_GeographicTransformation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../geometry/support/GeographicTransformation.js */ "./node_modules/@arcgis/core/geometry/support/GeographicTransformation.js");
/* harmony import */ var _PixelBlock_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./PixelBlock.js */ "./node_modules/@arcgis/core/layers/support/PixelBlock.js");
/* harmony import */ var _rasterFormats_RasterCodec_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./rasterFormats/RasterCodec.js */ "./node_modules/@arcgis/core/layers/support/rasterFormats/RasterCodec.js");
/* harmony import */ var _rasterFunctions_pixelUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./rasterFunctions/pixelUtils.js */ "./node_modules/@arcgis/core/layers/support/rasterFunctions/pixelUtils.js");
/* harmony import */ var _rasterFunctions_rasterFunctionHelper_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./rasterFunctions/rasterFunctionHelper.js */ "./node_modules/@arcgis/core/layers/support/rasterFunctions/rasterFunctionHelper.js");
/* harmony import */ var _rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./rasterFunctions/rasterProjectionHelper.js */ "./node_modules/@arcgis/core/layers/support/rasterFunctions/rasterProjectionHelper.js");
/* harmony import */ var _rasterFunctions_stretchUtils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./rasterFunctions/stretchUtils.js */ "./node_modules/@arcgis/core/layers/support/rasterFunctions/stretchUtils.js");
/* harmony import */ var _rasterFunctions_vectorFieldUtils_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./rasterFunctions/vectorFieldUtils.js */ "./node_modules/@arcgis/core/layers/support/rasterFunctions/vectorFieldUtils.js");
/* harmony import */ var _rasterTransforms_utils_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./rasterTransforms/utils.js */ "./node_modules/@arcgis/core/layers/support/rasterTransforms/utils.js");
/* harmony import */ var _renderers_support_RasterSymbolizer_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../renderers/support/RasterSymbolizer.js */ "./node_modules/@arcgis/core/renderers/support/RasterSymbolizer.js");
/* harmony import */ var _views_2d_engine_flow_dataUtils_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../views/2d/engine/flow/dataUtils.js */ "./node_modules/@arcgis/core/views/2d/engine/flow/dataUtils.js");
/* harmony import */ var _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../geometry/Extent.js */ "./node_modules/@arcgis/core/geometry/Extent.js");
/* harmony import */ var _geometry_Point_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../geometry/Point.js */ "./node_modules/@arcgis/core/geometry/Point.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
class N{convertVectorFieldData(r){const t=_PixelBlock_js__WEBPACK_IMPORTED_MODULE_2__["default"].fromJSON(r.pixelBlock),s=(0,_rasterFunctions_vectorFieldUtils_js__WEBPACK_IMPORTED_MODULE_8__.convertVectorFieldData)(t,r.type);return Promise.resolve(null!=s?s.toJSON():null)}computeStatisticsHistograms(r){const t=_PixelBlock_js__WEBPACK_IMPORTED_MODULE_2__["default"].fromJSON(r.pixelBlock),s=(0,_rasterFunctions_stretchUtils_js__WEBPACK_IMPORTED_MODULE_7__.computeStatisticsHistograms)(t);return Promise.resolve(s)}async decode(r){const e=await (0,_rasterFormats_RasterCodec_js__WEBPACK_IMPORTED_MODULE_3__.decode)(r.data,r.options);return e&&e.toJSON()}symbolize(r){r.pixelBlock=_PixelBlock_js__WEBPACK_IMPORTED_MODULE_2__["default"].fromJSON(r.pixelBlock),r.extent=r.extent?_geometry_Extent_js__WEBPACK_IMPORTED_MODULE_12__["default"].fromJSON(r.extent):null;const t=this.symbolizer.symbolize(r);return Promise.resolve(null!=t?t.toJSON():null)}async updateSymbolizer(r){this.symbolizer=_renderers_support_RasterSymbolizer_js__WEBPACK_IMPORTED_MODULE_10__["default"].fromJSON(r.symbolizerJSON),r.histograms&&"rasterStretch"===this.symbolizer?.rendererJSON.type&&(this.symbolizer.rendererJSON.histograms=r.histograms)}async updateRasterFunction(r){this.rasterFunction=(0,_rasterFunctions_rasterFunctionHelper_js__WEBPACK_IMPORTED_MODULE_5__.create)(r.rasterFunctionJSON)}async process(r){const t=this.rasterFunction.process({extent:_geometry_Extent_js__WEBPACK_IMPORTED_MODULE_12__["default"].fromJSON(r.extent),primaryPixelBlocks:r.primaryPixelBlocks.map((r=>null!=r?_PixelBlock_js__WEBPACK_IMPORTED_MODULE_2__["default"].fromJSON(r):null)),primaryPixelSizes:r.primaryPixelSizes?.map((r=>null!=r?_geometry_Point_js__WEBPACK_IMPORTED_MODULE_13__["default"].fromJSON(r):null)),primaryRasterIds:r.primaryRasterIds});return null!=t?t.toJSON():null}stretch(r){const t=this.symbolizer.simpleStretch(_PixelBlock_js__WEBPACK_IMPORTED_MODULE_2__["default"].fromJSON(r.srcPixelBlock),r.stretchParams);return Promise.resolve(null!=t&&t.toJSON())}estimateStatisticsHistograms(r){const t=(0,_rasterFunctions_stretchUtils_js__WEBPACK_IMPORTED_MODULE_7__.estimateStatisticsHistograms)(_PixelBlock_js__WEBPACK_IMPORTED_MODULE_2__["default"].fromJSON(r.srcPixelBlock));return Promise.resolve(t)}split(r){const t=(0,_rasterFunctions_pixelUtils_js__WEBPACK_IMPORTED_MODULE_4__.split)(_PixelBlock_js__WEBPACK_IMPORTED_MODULE_2__["default"].fromJSON(r.srcPixelBlock),r.tileSize,r.maximumPyramidLevel);return t&&t.forEach(((r,e)=>{t.set(e,r?.toJSON())})),Promise.resolve(t)}async mosaicAndTransform(r){const t=r.srcPixelBlocks.map((r=>r?new _PixelBlock_js__WEBPACK_IMPORTED_MODULE_2__["default"](r):null)),s=(0,_rasterFunctions_pixelUtils_js__WEBPACK_IMPORTED_MODULE_4__.mosaic)(t,r.srcMosaicSize,{blockWidths:r.blockWidths,alignmentInfo:r.alignmentInfo,clipOffset:r.clipOffset,clipSize:r.clipSize});let a,l=s;return r.coefs&&(l=(0,_rasterFunctions_pixelUtils_js__WEBPACK_IMPORTED_MODULE_4__.approximateTransform)(s,r.destDimension,r.coefs,r.sampleSpacing,r.interpolation)),r.projectDirections&&r.gcsGrid&&(a=(0,_rasterFunctions_pixelUtils_js__WEBPACK_IMPORTED_MODULE_4__.getLocalArithmeticNorthRotations)(r.destDimension,r.gcsGrid),l=(0,_rasterFunctions_vectorFieldUtils_js__WEBPACK_IMPORTED_MODULE_8__.convertToLocalDirections)(l,r.isUV?"vector-uv":"vector-magdir",a)),{pixelBlock:l?.toJSON(),localNorthDirections:a}}async createFlowMesh(r,e){const t={data:new Float32Array(r.flowData.buffer),mask:new Uint8Array(r.flowData.maskBuffer),width:r.flowData.width,height:r.flowData.height},{vertexData:s,indexData:o}=await (0,_views_2d_engine_flow_dataUtils_js__WEBPACK_IMPORTED_MODULE_11__.createFlowMesh)(r.meshType,r.simulationSettings,t,e.signal);return{result:{vertexBuffer:s.buffer,indexBuffer:o.buffer},transferList:[s.buffer,o.buffer]}}async getProjectionOffsetGrid(e){const t=_geometry_Extent_js__WEBPACK_IMPORTED_MODULE_12__["default"].fromJSON(e.projectedExtent),s=_geometry_Extent_js__WEBPACK_IMPORTED_MODULE_12__["default"].fromJSON(e.srcBufferExtent);let o=null;e.datumTransformationSteps&&(o=new _geometry_support_GeographicTransformation_js__WEBPACK_IMPORTED_MODULE_1__["default"]({steps:e.datumTransformationSteps})),(e.includeGCSGrid||(0,_rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_6__.requirePE)(t.spatialReference,s.spatialReference,o))&&await (0,_rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_6__.load)();const i=e.rasterTransform?(0,_rasterTransforms_utils_js__WEBPACK_IMPORTED_MODULE_9__.readTransform)(e.rasterTransform):null;return (0,_rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_6__.getProjectionOffsetGrid)({...e,projectedExtent:t,srcBufferExtent:s,datumTransformation:o,rasterTransform:i})}}


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX2FyY2dpc19jb3JlX2xheWVyc19zdXBwb3J0X1Jhc3Rlcldvcmtlcl9qcy4zOWUwMGUxYTA0M2QzZTRhZjgzMS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUN1OUIsUUFBUSwwQkFBMEIsUUFBUSxzREFBQywwQkFBMEIsNEZBQUMsV0FBVyxnREFBZ0QsK0JBQStCLFFBQVEsc0RBQUMsMEJBQTBCLDZGQUFDLElBQUksMEJBQTBCLGdCQUFnQixjQUFjLHFFQUFDLG1CQUFtQixxQkFBcUIsYUFBYSxhQUFhLHNEQUFDLDBDQUEwQyw0REFBQyx5QkFBeUIscUNBQXFDLGdEQUFnRCwwQkFBMEIsZ0JBQWdCLCtFQUFDLHVKQUF1Siw4QkFBOEIsb0JBQW9CLGdGQUFDLHVCQUF1QixpQkFBaUIscUNBQXFDLE9BQU8sNERBQUMsNEVBQTRFLHNEQUFDLDJFQUEyRSwyREFBQyx3REFBd0QsRUFBRSwrQkFBK0IsV0FBVyxzQ0FBc0Msc0RBQUMsNENBQTRDLDRDQUE0QyxnQ0FBZ0MsUUFBUSw4RkFBQyxDQUFDLHNEQUFDLDRCQUE0QiwwQkFBMEIsU0FBUyxRQUFRLHFFQUFDLENBQUMsc0RBQUMsNkRBQTZELDZCQUE2QixxQkFBcUIsc0JBQXNCLDRCQUE0Qix1Q0FBdUMsc0RBQUMsYUFBYSxzRUFBQyxvQkFBb0Isb0dBQW9HLEVBQUUsVUFBVSxtQkFBbUIsb0ZBQUMsZ0dBQWdHLGdHQUFDLDhCQUE4Qiw4RkFBQywyQ0FBMkMsK0NBQStDLDBCQUEwQixTQUFTLG9JQUFvSSxFQUFFLHlCQUF5QixPQUFPLG1GQUFDLDZDQUE2QyxPQUFPLFFBQVEsMkNBQTJDLG1DQUFtQyxpQ0FBaUMsUUFBUSw0REFBQywrQkFBK0IsNERBQUMsNkJBQTZCLFdBQVcsbUNBQW1DLHFGQUFDLEVBQUUsaUNBQWlDLHNCQUFzQixxRkFBQyxrREFBa0QsZ0ZBQUMsR0FBRywwQkFBMEIseUVBQUMseUJBQXlCLE9BQU8sbUdBQUMsRUFBRSxpRkFBaUYsR0FBd0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9rbHlrLy4vbm9kZV9tb2R1bGVzL0BhcmNnaXMvY29yZS9sYXllcnMvc3VwcG9ydC9SYXN0ZXJXb3JrZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbkFsbCBtYXRlcmlhbCBjb3B5cmlnaHQgRVNSSSwgQWxsIFJpZ2h0cyBSZXNlcnZlZCwgdW5sZXNzIG90aGVyd2lzZSBzcGVjaWZpZWQuXG5TZWUgaHR0cHM6Ly9qcy5hcmNnaXMuY29tLzQuMjcvZXNyaS9jb3B5cmlnaHQudHh0IGZvciBkZXRhaWxzLlxuKi9cbmltcG9ydFwiLi4vLi4vZ2VvbWV0cnkuanNcIjtpbXBvcnQgciBmcm9tXCIuLi8uLi9nZW9tZXRyeS9zdXBwb3J0L0dlb2dyYXBoaWNUcmFuc2Zvcm1hdGlvbi5qc1wiO2ltcG9ydCBlIGZyb21cIi4vUGl4ZWxCbG9jay5qc1wiO2ltcG9ydHtkZWNvZGUgYXMgdH1mcm9tXCIuL3Jhc3RlckZvcm1hdHMvUmFzdGVyQ29kZWMuanNcIjtpbXBvcnR7c3BsaXQgYXMgcyxtb3NhaWMgYXMgbyxhcHByb3hpbWF0ZVRyYW5zZm9ybSBhcyBpLGdldExvY2FsQXJpdGhtZXRpY05vcnRoUm90YXRpb25zIGFzIG59ZnJvbVwiLi9yYXN0ZXJGdW5jdGlvbnMvcGl4ZWxVdGlscy5qc1wiO2ltcG9ydHtjcmVhdGUgYXMgYX1mcm9tXCIuL3Jhc3RlckZ1bmN0aW9ucy9yYXN0ZXJGdW5jdGlvbkhlbHBlci5qc1wiO2ltcG9ydHtyZXF1aXJlUEUgYXMgbCxsb2FkIGFzIG0sZ2V0UHJvamVjdGlvbk9mZnNldEdyaWQgYXMgY31mcm9tXCIuL3Jhc3RlckZ1bmN0aW9ucy9yYXN0ZXJQcm9qZWN0aW9uSGVscGVyLmpzXCI7aW1wb3J0e2NvbXB1dGVTdGF0aXN0aWNzSGlzdG9ncmFtcyBhcyBmLGVzdGltYXRlU3RhdGlzdGljc0hpc3RvZ3JhbXMgYXMgcH1mcm9tXCIuL3Jhc3RlckZ1bmN0aW9ucy9zdHJldGNoVXRpbHMuanNcIjtpbXBvcnR7Y29udmVydFZlY3RvckZpZWxkRGF0YSBhcyB1LGNvbnZlcnRUb0xvY2FsRGlyZWN0aW9ucyBhcyBTfWZyb21cIi4vcmFzdGVyRnVuY3Rpb25zL3ZlY3RvckZpZWxkVXRpbHMuanNcIjtpbXBvcnR7cmVhZFRyYW5zZm9ybSBhcyBkfWZyb21cIi4vcmFzdGVyVHJhbnNmb3Jtcy91dGlscy5qc1wiO2ltcG9ydCB5IGZyb21cIi4uLy4uL3JlbmRlcmVycy9zdXBwb3J0L1Jhc3RlclN5bWJvbGl6ZXIuanNcIjtpbXBvcnR7Y3JlYXRlRmxvd01lc2ggYXMgeH1mcm9tXCIuLi8uLi92aWV3cy8yZC9lbmdpbmUvZmxvdy9kYXRhVXRpbHMuanNcIjtpbXBvcnQgaCBmcm9tXCIuLi8uLi9nZW9tZXRyeS9FeHRlbnQuanNcIjtpbXBvcnQgTyBmcm9tXCIuLi8uLi9nZW9tZXRyeS9Qb2ludC5qc1wiO2NsYXNzIE57Y29udmVydFZlY3RvckZpZWxkRGF0YShyKXtjb25zdCB0PWUuZnJvbUpTT04oci5waXhlbEJsb2NrKSxzPXUodCxyLnR5cGUpO3JldHVybiBQcm9taXNlLnJlc29sdmUobnVsbCE9cz9zLnRvSlNPTigpOm51bGwpfWNvbXB1dGVTdGF0aXN0aWNzSGlzdG9ncmFtcyhyKXtjb25zdCB0PWUuZnJvbUpTT04oci5waXhlbEJsb2NrKSxzPWYodCk7cmV0dXJuIFByb21pc2UucmVzb2x2ZShzKX1hc3luYyBkZWNvZGUocil7Y29uc3QgZT1hd2FpdCB0KHIuZGF0YSxyLm9wdGlvbnMpO3JldHVybiBlJiZlLnRvSlNPTigpfXN5bWJvbGl6ZShyKXtyLnBpeGVsQmxvY2s9ZS5mcm9tSlNPTihyLnBpeGVsQmxvY2spLHIuZXh0ZW50PXIuZXh0ZW50P2guZnJvbUpTT04oci5leHRlbnQpOm51bGw7Y29uc3QgdD10aGlzLnN5bWJvbGl6ZXIuc3ltYm9saXplKHIpO3JldHVybiBQcm9taXNlLnJlc29sdmUobnVsbCE9dD90LnRvSlNPTigpOm51bGwpfWFzeW5jIHVwZGF0ZVN5bWJvbGl6ZXIocil7dGhpcy5zeW1ib2xpemVyPXkuZnJvbUpTT04oci5zeW1ib2xpemVySlNPTiksci5oaXN0b2dyYW1zJiZcInJhc3RlclN0cmV0Y2hcIj09PXRoaXMuc3ltYm9saXplcj8ucmVuZGVyZXJKU09OLnR5cGUmJih0aGlzLnN5bWJvbGl6ZXIucmVuZGVyZXJKU09OLmhpc3RvZ3JhbXM9ci5oaXN0b2dyYW1zKX1hc3luYyB1cGRhdGVSYXN0ZXJGdW5jdGlvbihyKXt0aGlzLnJhc3RlckZ1bmN0aW9uPWEoci5yYXN0ZXJGdW5jdGlvbkpTT04pfWFzeW5jIHByb2Nlc3Mocil7Y29uc3QgdD10aGlzLnJhc3RlckZ1bmN0aW9uLnByb2Nlc3Moe2V4dGVudDpoLmZyb21KU09OKHIuZXh0ZW50KSxwcmltYXJ5UGl4ZWxCbG9ja3M6ci5wcmltYXJ5UGl4ZWxCbG9ja3MubWFwKChyPT5udWxsIT1yP2UuZnJvbUpTT04ocik6bnVsbCkpLHByaW1hcnlQaXhlbFNpemVzOnIucHJpbWFyeVBpeGVsU2l6ZXM/Lm1hcCgocj0+bnVsbCE9cj9PLmZyb21KU09OKHIpOm51bGwpKSxwcmltYXJ5UmFzdGVySWRzOnIucHJpbWFyeVJhc3Rlcklkc30pO3JldHVybiBudWxsIT10P3QudG9KU09OKCk6bnVsbH1zdHJldGNoKHIpe2NvbnN0IHQ9dGhpcy5zeW1ib2xpemVyLnNpbXBsZVN0cmV0Y2goZS5mcm9tSlNPTihyLnNyY1BpeGVsQmxvY2spLHIuc3RyZXRjaFBhcmFtcyk7cmV0dXJuIFByb21pc2UucmVzb2x2ZShudWxsIT10JiZ0LnRvSlNPTigpKX1lc3RpbWF0ZVN0YXRpc3RpY3NIaXN0b2dyYW1zKHIpe2NvbnN0IHQ9cChlLmZyb21KU09OKHIuc3JjUGl4ZWxCbG9jaykpO3JldHVybiBQcm9taXNlLnJlc29sdmUodCl9c3BsaXQocil7Y29uc3QgdD1zKGUuZnJvbUpTT04oci5zcmNQaXhlbEJsb2NrKSxyLnRpbGVTaXplLHIubWF4aW11bVB5cmFtaWRMZXZlbCk7cmV0dXJuIHQmJnQuZm9yRWFjaCgoKHIsZSk9Pnt0LnNldChlLHI/LnRvSlNPTigpKX0pKSxQcm9taXNlLnJlc29sdmUodCl9YXN5bmMgbW9zYWljQW5kVHJhbnNmb3JtKHIpe2NvbnN0IHQ9ci5zcmNQaXhlbEJsb2Nrcy5tYXAoKHI9PnI/bmV3IGUocik6bnVsbCkpLHM9byh0LHIuc3JjTW9zYWljU2l6ZSx7YmxvY2tXaWR0aHM6ci5ibG9ja1dpZHRocyxhbGlnbm1lbnRJbmZvOnIuYWxpZ25tZW50SW5mbyxjbGlwT2Zmc2V0OnIuY2xpcE9mZnNldCxjbGlwU2l6ZTpyLmNsaXBTaXplfSk7bGV0IGEsbD1zO3JldHVybiByLmNvZWZzJiYobD1pKHMsci5kZXN0RGltZW5zaW9uLHIuY29lZnMsci5zYW1wbGVTcGFjaW5nLHIuaW50ZXJwb2xhdGlvbikpLHIucHJvamVjdERpcmVjdGlvbnMmJnIuZ2NzR3JpZCYmKGE9bihyLmRlc3REaW1lbnNpb24sci5nY3NHcmlkKSxsPVMobCxyLmlzVVY/XCJ2ZWN0b3ItdXZcIjpcInZlY3Rvci1tYWdkaXJcIixhKSkse3BpeGVsQmxvY2s6bD8udG9KU09OKCksbG9jYWxOb3J0aERpcmVjdGlvbnM6YX19YXN5bmMgY3JlYXRlRmxvd01lc2gocixlKXtjb25zdCB0PXtkYXRhOm5ldyBGbG9hdDMyQXJyYXkoci5mbG93RGF0YS5idWZmZXIpLG1hc2s6bmV3IFVpbnQ4QXJyYXkoci5mbG93RGF0YS5tYXNrQnVmZmVyKSx3aWR0aDpyLmZsb3dEYXRhLndpZHRoLGhlaWdodDpyLmZsb3dEYXRhLmhlaWdodH0se3ZlcnRleERhdGE6cyxpbmRleERhdGE6b309YXdhaXQgeChyLm1lc2hUeXBlLHIuc2ltdWxhdGlvblNldHRpbmdzLHQsZS5zaWduYWwpO3JldHVybntyZXN1bHQ6e3ZlcnRleEJ1ZmZlcjpzLmJ1ZmZlcixpbmRleEJ1ZmZlcjpvLmJ1ZmZlcn0sdHJhbnNmZXJMaXN0OltzLmJ1ZmZlcixvLmJ1ZmZlcl19fWFzeW5jIGdldFByb2plY3Rpb25PZmZzZXRHcmlkKGUpe2NvbnN0IHQ9aC5mcm9tSlNPTihlLnByb2plY3RlZEV4dGVudCkscz1oLmZyb21KU09OKGUuc3JjQnVmZmVyRXh0ZW50KTtsZXQgbz1udWxsO2UuZGF0dW1UcmFuc2Zvcm1hdGlvblN0ZXBzJiYobz1uZXcgcih7c3RlcHM6ZS5kYXR1bVRyYW5zZm9ybWF0aW9uU3RlcHN9KSksKGUuaW5jbHVkZUdDU0dyaWR8fGwodC5zcGF0aWFsUmVmZXJlbmNlLHMuc3BhdGlhbFJlZmVyZW5jZSxvKSkmJmF3YWl0IG0oKTtjb25zdCBpPWUucmFzdGVyVHJhbnNmb3JtP2QoZS5yYXN0ZXJUcmFuc2Zvcm0pOm51bGw7cmV0dXJuIGMoey4uLmUscHJvamVjdGVkRXh0ZW50OnQsc3JjQnVmZmVyRXh0ZW50OnMsZGF0dW1UcmFuc2Zvcm1hdGlvbjpvLHJhc3RlclRyYW5zZm9ybTppfSl9fWV4cG9ydHtOIGFzIGRlZmF1bHR9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9