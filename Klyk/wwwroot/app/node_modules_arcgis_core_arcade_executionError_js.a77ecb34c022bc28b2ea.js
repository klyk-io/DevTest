"use strict";
(self["webpackChunkklyk"] = self["webpackChunkklyk"] || []).push([["node_modules_arcgis_core_arcade_executionError_js"],{

/***/ "./node_modules/@arcgis/core/arcade/executionError.js":
/*!************************************************************!*\
  !*** ./node_modules/@arcgis/core/arcade/executionError.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ArcadeCompilationError: () => (/* binding */ a),
/* harmony export */   ArcadeExecutionError: () => (/* binding */ t),
/* harmony export */   ArcadeUncompilableError: () => (/* binding */ c),
/* harmony export */   ErrorWithCause: () => (/* binding */ o),
/* harmony export */   ExecutionErrorCodes: () => (/* binding */ e),
/* harmony export */   ExecutionErrorMessages: () => (/* binding */ r),
/* harmony export */   LocatableArcadeExecutionError: () => (/* binding */ n),
/* harmony export */   ModuleError: () => (/* binding */ p),
/* harmony export */   ModuleErrorCodes: () => (/* binding */ l),
/* harmony export */   ModuleErrorMessages: () => (/* binding */ d),
/* harmony export */   doSubstitutions: () => (/* binding */ i),
/* harmony export */   ensureArcadeExecutionError: () => (/* binding */ u),
/* harmony export */   parsingValidationMessage: () => (/* binding */ m)
/* harmony export */ });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
var e;!function(e){e.AsyncNotEnabled="AsyncNotEnabled",e.ModulesNotSupported="ModulesNotSupported",e.CircularModules="CircularModules",e.NeverReach="NeverReach",e.UnsupportedHashType="UnsupportedHashType",e.InvalidParameter="InvalidParameter",e.UnexpectedToken="UnexpectedToken",e.Unrecognised="Unrecognised",e.UnrecognisedType="UnrecognisedType",e.MaximumCallDepth="MaximumCallDepth",e.BooleanConditionRequired="BooleanConditionRequired",e.TypeNotAllowedInFeature="TypeNotAllowedInFeature",e.KeyMustBeString="KeyMustBeString",e.WrongNumberOfParameters="WrongNumberOfParameters",e.CallNonFunction="CallNonFunction",e.NoFunctionInTemplateLiteral="NoFunctionInTemplateLiteral",e.NoFunctionInDictionary="NoFunctionInDictionary",e.NoFunctionInArray="NoFunctionInArray",e.AssignModuleFunction="AssignModuleFunction",e.LogicExpressionOrAnd="LogicExpressionOrAnd",e.LogicalExpressionOnlyBoolean="LogicalExpressionOnlyBoolean",e.FunctionNotFound="FunctionNotFound",e.InvalidMemberAccessKey="InvalidMemberAccessKey",e.UnsupportedUnaryOperator="UnsupportUnaryOperator",e.InvalidIdentifier="InvalidIdentifier",e.MemberOfNull="MemberOfNull",e.UnsupportedOperator="UnsupportedOperator",e.Cancelled="Cancelled",e.ModuleAccessorMustBeString="ModuleAccessorMustBeString",e.ModuleExportNotFound="ModuleExportNotFound",e.Immutable="Immutable",e.OutOfBounds="OutOfBounds",e.IllegalResult="IllegalResult",e.FieldNotFound="FieldNotFound",e.PortalRequired="PortalRequired",e.LogicError="LogicError",e.ArrayAccessorMustBeNumber="ArrayAccessMustBeNumber",e.KeyAccessorMustBeString="KeyAccessorMustBeString",e.WrongSpatialReference="WrongSpatialReference"}(e||(e={}));const r={[e.TypeNotAllowedInFeature]:"Feature attributes only support dates, numbers, strings, guids.",[e.LogicError]:"Logic error - {reason}",[e.NeverReach]:"Encountered unreachable logic",[e.AsyncNotEnabled]:"Async Arcade must be enabled for this script",[e.ModuleAccessorMustBeString]:"Module accessor must be a string",[e.ModuleExportNotFound]:"Module has no export with provided identifier",[e.ModulesNotSupported]:"Current profile does not support modules",[e.ArrayAccessorMustBeNumber]:"Array accessor must be a number",[e.FunctionNotFound]:"Function not found",[e.FieldNotFound]:"Key not found - {key}",[e.CircularModules]:"Circular module dependencies are not allowed",[e.Cancelled]:"Execution cancelled",[e.UnsupportedHashType]:"Type not supported in hash function",[e.IllegalResult]:"Value is not a supported return type",[e.PortalRequired]:"Portal is required",[e.InvalidParameter]:"Invalid parameter",[e.WrongNumberOfParameters]:"Call with wrong number of parameters",[e.Unrecognised]:"Unrecognised code structure",[e.UnrecognisedType]:"Unrecognised type",[e.WrongSpatialReference]:"Cannot work with geometry in this spatial reference. It is different to the execution spatial reference",[e.BooleanConditionRequired]:"Conditions must use booleans",[e.NoFunctionInDictionary]:"Dictionaries cannot contain functions.",[e.NoFunctionInArray]:"Arrays cannot contain functions.",[e.NoFunctionInTemplateLiteral]:"Template Literals do not expect functions by value.",[e.KeyAccessorMustBeString]:"Accessor must be a string",[e.KeyMustBeString]:"Object keys must be a string",[e.Immutable]:"Object is immutable",[e.UnexpectedToken]:"Unexpected token",[e.MemberOfNull]:"Cannot access property of null object",[e.MaximumCallDepth]:"Exceeded maximum function depth",[e.OutOfBounds]:"Out of bounds",[e.InvalidIdentifier]:"Identifier not recognised",[e.CallNonFunction]:"Expression is not a function",[e.InvalidMemberAccessKey]:"Cannot access value using a key of this type",[e.AssignModuleFunction]:"Cannot assign function to module variable",[e.UnsupportedUnaryOperator]:"Unsupported unary operator",[e.UnsupportedOperator]:"Unsupported operator",[e.LogicalExpressionOnlyBoolean]:"Logical expressions must be boolean",[e.LogicExpressionOrAnd]:"Logical expression can only be combined with || or &&"};class o extends Error{constructor(...e){super(...e)}}class n extends o{constructor(e,r){super(s(r)+e.message,{cause:e}),this.loc=null,Error.captureStackTrace&&Error.captureStackTrace(this,n),r&&r.loc&&(this.loc=r.loc)}}class t extends Error{constructor(e,o,n,a){super("Execution error - "+s(n)+i(r[o],a)),this.loc=null,this.declaredRootClass="esri.arcade.arcadeexecutionerror",Error.captureStackTrace&&Error.captureStackTrace(this,t),n&&n.loc&&(this.loc=n.loc)}}function s(e){return e&&e.loc?`Line : ${e.loc.start?.line}, ${e.loc.start?.column}: `:""}class a extends Error{constructor(e,o,n,t){super("Compilation error - "+s(n)+i(r[o],t)),this.loc=null,this.declaredRootClass="esri.arcade.arcadecompilationerror",Error.captureStackTrace&&Error.captureStackTrace(this,a),n&&n.loc&&(this.loc=n.loc)}}class c extends Error{constructor(){super("Uncompilable code structures"),this.declaredRootClass="esri.arcade.arcadeuncompilableerror",Error.captureStackTrace&&Error.captureStackTrace(this,c)}}function i(e,r){try{if(!r)return e;for(const o in r){let n=r[o];n||(n=""),e=e.replace("{"+o+"}",r[o])}}catch(o){}return e}function u(e,r,o){return"esri.arcade.arcadeexecutionerror"===o.declaredRootClass||"esri.arcade.arcadecompilationerror"===o.declaredRootClass?null===o.loc&&r&&r.loc?new n(o,{cause:o}):o:("esri.arcade.featureset.support.featureseterror"===o.declaredRootClass||"esri.arcade.featureset.support.sqlerror"===o.declaredRootClass||o.declaredRootClass,r&&r.loc?new n(o,{cause:o}):o)}var l;!function(e){e.UnrecognisedUri="UnrecognisedUri",e.UnsupportedUriProtocol="UnsupportedUriProtocol"}(l||(l={}));const d={[l.UnrecognisedUri]:"Unrecognised uri - {uri}",[l.UnsupportedUriProtocol]:"Unrecognised uri protocol"};class p extends Error{constructor(e,r){super(i(d[e],r)),this.declaredRootClass="esri.arcade.arcademoduleerror",Error.captureStackTrace&&Error.captureStackTrace(this,p)}}function m(e,o,n){return"Parsing error - "+s(e)+i(r[o],n)}


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,