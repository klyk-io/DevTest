"use strict";
(self["webpackChunkklyk"] = self["webpackChunkklyk"] || []).push([["defaultVendors-node_modules_arcgis_core_layers_graphics_sources_support_CSVSourceWorker_js"],{

/***/ "./node_modules/@arcgis/core/core/number.js":
/*!**************************************************!*\
  !*** ./node_modules/@arcgis/core/core/number.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   _parseInfo: () => (/* binding */ a),
/* harmony export */   format: () => (/* binding */ s),
/* harmony export */   getCustoms: () => (/* binding */ r),
/* harmony export */   parse: () => (/* binding */ p),
/* harmony export */   regexp: () => (/* binding */ c)
/* harmony export */ });
/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./string.js */ "./node_modules/@arcgis/core/core/string.js");
/* harmony import */ var _intl_locale_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../intl/locale.js */ "./node_modules/@arcgis/core/intl/locale.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const n={ar:[".",","],bg:[","," "],bs:[",","."],ca:[",","."],cs:[","," "],da:[",","."],de:[",","."],"de-ch":[".","’"],el:[",","."],en:[".",","],"en-au":[".",","],es:[",","."],"es-mx":[".",","],et:[","," "],fi:[","," "],fr:[","," "],"fr-ch":[","," "],he:[".",","],hi:[".",",","#,##,##0.###"],hr:[",","."],hu:[","," "],id:[",","."],it:[",","."],"it-ch":[".","’"],ja:[".",","],ko:[".",","],lt:[","," "],lv:[","," "],mk:[",","."],nb:[","," "],nl:[",","."],pl:[","," "],pt:[",","."],"pt-pt":[","," "],ro:[",","."],ru:[","," "],sk:[","," "],sl:[",","."],sr:[",","."],sv:[","," "],th:[".",","],tr:[",","."],uk:[","," "],vi:[",","."],zh:[".",","]};function r(e=(0,_intl_locale_js__WEBPACK_IMPORTED_MODULE_1__.getLocale)()){let r=(e=e.toLowerCase())in n;if(!r){const t=e.split("-");t.length>1&&t[0]in n&&(e=t[0],r=!0),r||(e="en")}const[s,l,o="#,##0.###"]=n[e];return{decimal:s,group:l,pattern:o}}function s(e,t){const n=r((t={...t}).locale);t.customs=n;const s=t.pattern||n.pattern;return isNaN(e)||Math.abs(e)===1/0?null:o(e,s,t)}const l=/[#0,]*[#0](?:\.0*#*)?/;function o(e,t,n){const r=(n=n||{}).customs.group,s=n.customs.decimal,o=t.split(";"),c=o[0];if((t=o[e<0?1:0]||"-"+c).includes("%"))e*=100;else if(t.includes("‰"))e*=1e3;else{if(t.includes("¤"))throw new Error("currency notation not supported");if(t.includes("E"))throw new Error("exponential notation not supported")}const a=l,p=c.match(a);if(!p)throw new Error("unable to find a number expression in pattern: "+t);return!1===n.fractional&&(n.places=0),t.replace(a,i(e,p[0],{decimal:s,group:r,places:n.places,round:n.round}))}function i(e,t,n){!0===(n=n||{}).places&&(n.places=0),n.places===1/0&&(n.places=6);const r=t.split("."),s="string"==typeof n.places&&n.places.indexOf(",");let l=n.places;s?l=n.places.substring(s+1):+l>=0||(l=(r[1]||[]).length),n.round<0||(e=Number(e.toFixed(Number(l))));const o=String(Math.abs(e)).split("."),i=o[1]||"";if(r[1]||n.places){s&&(n.places=n.places.substring(0,s));const e=void 0!==n.places?n.places:r[1]&&r[1].lastIndexOf("0")+1;+e>i.length&&(o[1]=i.padEnd(Number(e),"0")),+l<i.length&&(o[1]=i.substr(0,Number(l)))}else o[1]&&o.pop();const c=r[0].replace(",","");let a=c.indexOf("0");-1!==a&&(a=c.length-a,a>o[0].length&&(o[0]=o[0].padStart(a,"0")),c.includes("#")||(o[0]=o[0].substr(o[0].length-a)));let p,u,d=r[0].lastIndexOf(",");if(-1!==d){p=r[0].length-d-1;const e=r[0].substr(0,d);d=e.lastIndexOf(","),-1!==d&&(u=e.length-d-1)}const g=[];for(let f=o[0];f;){const e=f.length-p;g.push(e>0?f.substr(e):f),f=e>0?f.slice(0,e):"",u&&(p=u,u=void 0)}return o[0]=g.reverse().join(n.group||","),o.join(n.decimal||".")}function c(e){return a(e).regexp}function a(t){const n=r((t=t||{}).locale),s=t.pattern||n.pattern,o=n.group,i=n.decimal;let c=1;if(s.includes("%"))c/=100;else if(s.includes("‰"))c/=1e3;else if(s.includes("¤"))throw new Error("currency notation not supported");const a=s.split(";");1===a.length&&a.push("-"+a[0]);const p=g(a,(n=>(n="(?:"+(0,_string_js__WEBPACK_IMPORTED_MODULE_0__.escapeRegExpString)(n,".")+")").replace(l,(e=>{const n={signed:!1,separator:t.strict?o:[o,""],fractional:t.fractional,decimal:i,exponent:!1},r=e.split(".");let s=t.places;1===r.length&&1!==c&&(r[1]="###"),1===r.length||0===s?n.fractional=!1:(void 0===s&&(s=t.pattern?r[1].lastIndexOf("0")+1:1/0),s&&null==t.fractional&&(n.fractional=!0),!t.places&&+s<r[1].length&&(s+=","+r[1].length),n.places=s);const l=r[0].split(",");return l.length>1&&(n.groupSize=l.pop().length,l.length>1&&(n.groupSize2=l.pop().length)),"("+u(n)+")"}))),!0);return{regexp:p.replaceAll(/[\xa0 ]/g,"[\\s\\xa0]"),group:o,decimal:i,factor:c}}function p(e,t){const n=a(t),r=new RegExp("^"+n.regexp+"$").exec(e);if(!r)return NaN;let s=r[1];if(!r[1]){if(!r[2])return NaN;s=r[2],n.factor*=-1}return s=s.replaceAll(new RegExp("["+n.group+"\\s\\xa0]","g"),"").replace(n.decimal,"."),Number(s)*n.factor}function u(e){"places"in(e=e||{})||(e.places=1/0),"string"!=typeof e.decimal&&(e.decimal="."),"fractional"in e&&!/^0/.test(String(e.places))||(e.fractional=[!0,!1]),"exponent"in e||(e.exponent=[!0,!1]),"eSigned"in e||(e.eSigned=[!0,!1]);const t=d(e),n=g(e.fractional,(t=>{let n="";return t&&0!==e.places&&(n="\\"+e.decimal,e.places===1/0?n="(?:"+n+"\\d+)?":n+="\\d{"+e.places+"}"),n}),!0);let r=t+n;return n&&(r="(?:(?:"+r+")|(?:"+n+"))"),r+g(e.exponent,(t=>t?"([eE]"+d({signed:e.eSigned})+")":""))}function d(t){"signed"in(t=t||{})||(t.signed=[!0,!1]),"separator"in t?"groupSize"in t||(t.groupSize=3):t.separator="";return g(t.signed,(e=>e?"[-+]":""),!0)+g(t.separator,(n=>{if(!n)return"(?:\\d+)";" "===(n=(0,_string_js__WEBPACK_IMPORTED_MODULE_0__.escapeRegExpString)(n))?n="\\s":" "===n&&(n="\\s\\xa0");const r=t.groupSize,s=t.groupSize2;if(s){const e="(?:0|[1-9]\\d{0,"+(s-1)+"}(?:["+n+"]\\d{"+s+"})*["+n+"]\\d{"+r+"})";return r-s>0?"(?:"+e+"|(?:0|[1-9]\\d{0,"+(r-1)+"}))":e}return"(?:0|[1-9]\\d{0,"+(r-1)+"}(?:["+n+"]\\d{"+r+"})*)"}),!0)}const g=(e,t,n)=>{if(!(e instanceof Array))return t(e);const r=[];for(let s=0;s<e.length;s++)r.push(t(e[s]));return f(r.join("|"),Boolean(n))},f=(e,t)=>"("+(t?"?:":"")+e+")";


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/graphics/sources/csv/csv.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/sources/csv/csv.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   extractFieldNamesAndAliasesFromRow: () => (/* binding */ f),
/* harmony export */   inferDelimiterAndLocationInfo: () => (/* binding */ c),
/* harmony export */   inferFieldType: () => (/* binding */ b),
/* harmony export */   inferFields: () => (/* binding */ p),
/* harmony export */   isValidDate: () => (/* binding */ h),
/* harmony export */   parseNumber: () => (/* binding */ N),
/* harmony export */   parseRows: () => (/* binding */ a),
/* harmony export */   readRowParts: () => (/* binding */ u),
/* harmony export */   readRows: () => (/* binding */ s),
/* harmony export */   splitSingleRow: () => (/* binding */ d)
/* harmony export */ });
/* harmony import */ var _core_number_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/number.js */ "./node_modules/@arcgis/core/core/number.js");
/* harmony import */ var _support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../support/fieldUtils.js */ "./node_modules/@arcgis/core/layers/support/fieldUtils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const n=/^\s*"([\S\s]*)"\s*$/,i=/""/g,r="\n",l=[","," ",";","|","\t"];function*o(e,t,n){let i=0;for(;i<=e.length;){const r=e.indexOf(t,i),l=e.substring(i,r>-1?r:void 0);i+=l.length+t.length,n&&!l.trim()||(yield l)}}function s(e){const t=e.includes("\r\n")?"\r\n":r;return o(e,t,!0)}function u(e,t){return o(e,t,!1)}function c(e,t,n){e=e.trim(),t=t?.trim();const i=[],r=Array.from(new Set([n?.delimiter,...l])).filter((e=>null!=e));for(const l of r){const n=d(e,l).length,r=d(t,l).length??n;n>1&&i.push({weight:Math.min(n,r),delimiter:l})}const o=i.sort((({weight:e},{weight:t})=>t-e)).map((({delimiter:e})=>e));for(const l of o){const t=m(f(e,l).names,n?.longitudeField,n?.latitudeField);if(t.longitudeFieldName&&t.latitudeFieldName)return{delimiter:l,locationInfo:t}}return{delimiter:o[0],locationInfo:null}}function*a(e,t,l,o=(()=>Object.create(null))){const c=s(e);c.next();let a="",f="",d=0,m=o(),p=0;e:for(const s of c){const e=u(s,l);for(const r of e)if(a+=f+r,f="",d+=g(r),d%2==0){if(d>0){const e=n.exec(a);if(!e){m=o(),p=0,a="",d=0;continue e}m[t[p]]=e[1].replaceAll(i,'"'),p++}else m[t[p]]=a,p++;a="",d=0}else f=l;0===d?(yield m,m=o(),p=0):f=r}}function f(e,n){const i=d(e,n).filter((e=>null!=e)),r=i.map((e=>(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_1__.normalizeFieldName)(e)));for(let t=r.length-1;t>=0;t--)r[t]||(r.splice(t,1),i.splice(t,1));return{names:r,aliases:i}}function d(e,t){if(!e?.length)return[];const r=[];let l="",o="",s=0;const c=u(e,t);for(const u of c)if(l+=o+u,o="",s+=g(u),s%2==0){if(s>0){const e=n.exec(l);e&&r.push(e[1].replaceAll(i,'"'))}else r.push(l);l="",s=0}else o=t;return r}function g(e){let t=0,n=0;for(n=e.indexOf('"',n);n>=0;)t++,n=e.indexOf('"',n+1);return t}function m(e,n,i){n=(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_1__.normalizeFieldName)(n)?.toLowerCase(),i=(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_1__.normalizeFieldName)(i)?.toLowerCase();const r=e.map((e=>e.toLowerCase())),l=n?e[r.indexOf(n)]:null,o=i?e[r.indexOf(i)]:null;return{longitudeFieldName:l||e[r.indexOf(w.find((e=>r.includes(e))))],latitudeFieldName:o||e[r.indexOf(F.find((e=>r.includes(e))))]}}function p(e,t,n,i,r){const l=[],o=a(e,n,t),s=[];for(const u of o){if(10===s.length)break;s.push(u)}for(let u=0;u<n.length;u++){const e=n[u],t=i[u];if(e===r.longitudeFieldName||e===r.latitudeFieldName)l.push({name:e,type:"esriFieldTypeDouble",alias:t});else{let n,i;switch(b(s.map((t=>t[e])))){case"integer":n="esriFieldTypeInteger";break;case"double":n="esriFieldTypeDouble";break;case"date":n="esriFieldTypeDate",i=36;break;default:n="esriFieldTypeString",i=255}l.push({name:e,type:n,alias:t,length:i})}}return l}function b(e){if(!e.length)return"string";const t=/[^+-.,0-9]/;return e.map((e=>{let n=!1;if(""!==e){if(t.test(e))n=!0;else{let t=N(e);if(!isNaN(t))return/[.,]/.test(e)||!Number.isInteger(t)||t>214783647||t<-214783648?"double":"integer";if(e.includes("E")){if(t=Number(e),!isNaN(t))return"double";if(e.includes(",")){if(e=e.replace(",","."),t=Number(e),!isNaN(t))return"double";n=!0}else n=!0}else n=!0}if(n){if(!/^[-]?\d*[.,]?\d*$/.test(e)){return h(new Date(e),e)?"date":"string"}return"string"}return"string"}})).reduce(((e,t)=>void 0===e?t:void 0===t?e:e===t?t:"string"===e||"string"===t?"string":"double"===e||"double"===t?"double":void 0))}function h(e,t){if(!e||"[object Date]"!==Object.prototype.toString.call(e)||isNaN(e.getTime()))return!1;let n=!0;if(!y&&/\d+\W*$/.test(t)){const e=t.match(/[a-zA-Z]{2,}/);if(e){let t=!1,i=0;for(;!t&&i<=e.length;)t=!x.test(e[i]),i++;n=!t}}return n}const N=function(){const t=(0,_core_number_js__WEBPACK_IMPORTED_MODULE_0__._parseInfo)(),n=new RegExp("^"+t.regexp+"$"),i=new RegExp("["+t.group+"\\s\\xa0]","g"),r=t.factor;return e=>{const l=n.exec(e);if(t.factor=r,!l)return NaN;let o=l[1];if(!l[1]){if(!l[2])return NaN;o=l[2],t.factor*=-1}return o=o.replace(i,"").replace(t.decimal,"."),+o*t.factor}}(),x=/^((jan(uary)?)|(feb(ruary)?)|(mar(ch)?)|(apr(il)?)|(may)|(jun(e)?)|(jul(y)?)|(aug(ust)?)|(sep(tember)?)|(oct(ober)?)|(nov(ember)?)|(dec(ember)?)|(am)|(pm)|(gmt)|(utc))$/i,y=Number.isNaN(new Date("technology 10").getTime()),F=["lat","latitude","latitude83","latdecdeg","lat_dd","y","ycenter","point_y"],w=["lon","lng","long","longitude","longitude83","longdecdeg","long_dd","x","xcenter","point_x"];


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/graphics/sources/support/CSVSourceWorker.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/sources/support/CSVSourceWorker.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ k)
/* harmony export */ });
/* harmony import */ var _geometry_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../geometry.js */ "./node_modules/@arcgis/core/geometry.js");
/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../request.js */ "./node_modules/@arcgis/core/request.js");
/* harmony import */ var _core_asyncUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/asyncUtils.js */ "./node_modules/@arcgis/core/core/asyncUtils.js");
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../core/Logger.js */ "./node_modules/@arcgis/core/core/Logger.js");
/* harmony import */ var _core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../core/promiseUtils.js */ "./node_modules/@arcgis/core/core/promiseUtils.js");
/* harmony import */ var _core_urlUtils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../core/urlUtils.js */ "./node_modules/@arcgis/core/core/urlUtils.js");
/* harmony import */ var _geometry_projection_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../geometry/projection.js */ "./node_modules/@arcgis/core/geometry/projection.js");
/* harmony import */ var _geometry_geometryAdapters_json_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../geometry/geometryAdapters/json.js */ "./node_modules/@arcgis/core/geometry/geometryAdapters/json.js");
/* harmony import */ var _geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../geometry/support/spatialReferenceUtils.js */ "./node_modules/@arcgis/core/geometry/support/spatialReferenceUtils.js");
/* harmony import */ var _geometry_support_webMercatorUtils_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../geometry/support/webMercatorUtils.js */ "./node_modules/@arcgis/core/geometry/support/webMercatorUtils.js");
/* harmony import */ var _OptimizedFeature_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../OptimizedFeature.js */ "./node_modules/@arcgis/core/layers/graphics/OptimizedFeature.js");
/* harmony import */ var _OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../OptimizedGeometry.js */ "./node_modules/@arcgis/core/layers/graphics/OptimizedGeometry.js");
/* harmony import */ var _data_FeatureStore_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../data/FeatureStore.js */ "./node_modules/@arcgis/core/layers/graphics/data/FeatureStore.js");
/* harmony import */ var _data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../data/projectionSupport.js */ "./node_modules/@arcgis/core/layers/graphics/data/projectionSupport.js");
/* harmony import */ var _data_QueryEngine_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../data/QueryEngine.js */ "./node_modules/@arcgis/core/layers/graphics/data/QueryEngine.js");
/* harmony import */ var _csv_csv_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../csv/csv.js */ "./node_modules/@arcgis/core/layers/graphics/sources/csv/csv.js");
/* harmony import */ var _clientSideDefaults_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./clientSideDefaults.js */ "./node_modules/@arcgis/core/layers/graphics/sources/support/clientSideDefaults.js");
/* harmony import */ var _support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../../support/FieldsIndex.js */ "./node_modules/@arcgis/core/layers/support/FieldsIndex.js");
/* harmony import */ var _support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../../support/fieldUtils.js */ "./node_modules/@arcgis/core/layers/support/fieldUtils.js");
/* harmony import */ var _geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../../../geometry/SpatialReference.js */ "./node_modules/@arcgis/core/geometry/SpatialReference.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
const C=(0,_clientSideDefaults_js__WEBPACK_IMPORTED_MODULE_17__.createDrawingInfo)("esriGeometryPoint"),v=["csv"],O=[0,0];class D{constructor(e,t){this.x=e,this.y=t}}class k{constructor(){this._queryEngine=null,this._snapshotFeatures=async e=>{const t=await this._fetch(e);return this._createFeatures(t)}}destroy(){this._queryEngine?.destroy(),this._queryEngine=null}async load(e,t={}){this._loadOptions=e;const[i]=await Promise.all([this._fetch(t.signal),this._checkProjection(e?.parsingOptions?.spatialReference)]),n=P(i,e);this._locationInfo=n.locationInfo,this._delimiter=n.delimiter,this._queryEngine=this._createQueryEngine(n);const r=await this._createFeatures(i);this._queryEngine.featureStore.addMany(r);const{fullExtent:s,timeExtent:o}=await this._queryEngine.fetchRecomputedExtents();if(n.layerDefinition.extent=s,o){const{start:e,end:t}=o;n.layerDefinition.timeInfo.timeExtent=[e,t]}return n}async applyEdits(){throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_3__["default"]("csv-layer:editing-not-supported","applyEdits() is not supported on CSVLayer")}async queryFeatures(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(e,t.signal)}async queryExtent(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)}async querySnapping(e,t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(e,t.signal)}async refresh(e){this._loadOptions.customParameters=e,this._snapshotTask?.abort(),this._snapshotTask=(0,_core_asyncUtils_js__WEBPACK_IMPORTED_MODULE_2__.createTask)(this._snapshotFeatures),this._snapshotTask.promise.then((e=>{this._queryEngine.featureStore.clear(),e&&this._queryEngine.featureStore.addMany(e)}),(e=>{this._queryEngine.featureStore.clear(),(0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_5__.isAbortError)(e)||_core_Logger_js__WEBPACK_IMPORTED_MODULE_4__["default"].getLogger("esri.layers.CSVLayer").error(new _core_Error_js__WEBPACK_IMPORTED_MODULE_3__["default"]("csv-layer:refresh","An error occurred during refresh",{error:e}))})),await this._waitSnapshotComplete();const{fullExtent:s,timeExtent:o}=await this._queryEngine.fetchRecomputedExtents();return{extent:s,timeExtent:o}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _fetch(t){const{url:n,customParameters:r}=this._loadOptions;if(!n)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_3__["default"]("csv-layer:invalid-source","url not defined");const o=(0,_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_6__.urlToObject)(n);return(await (0,_request_js__WEBPACK_IMPORTED_MODULE_1__["default"])(o.path,{query:{...o.query,...r},responseType:"text",signal:t})).data}_createQueryEngine(e){const{objectIdField:t,fields:i,extent:n,timeInfo:r}=e.layerDefinition,s=new _data_FeatureStore_js__WEBPACK_IMPORTED_MODULE_13__["default"]({geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1});return new _data_QueryEngine_js__WEBPACK_IMPORTED_MODULE_15__.QueryEngine({fields:i,geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1,timeInfo:r,objectIdField:t,spatialReference:n.spatialReference||{wkid:4326},cacheSpatialQueries:!0,featureStore:s})}async _createFeatures(e){const{latitudeFieldName:t,longitudeFieldName:i}=this._locationInfo,{objectIdField:n,fieldsIndex:r,spatialReference:s}=this._queryEngine;let o=[];const d=[],y=r.fields.filter((e=>e.name!==n)).map((e=>e.name));let h=0;const g={};for(const a of r.fields)if("esriFieldTypeOID"!==a.type&&"esriFieldTypeGlobalID"!==a.type){const e=(0,_support_fieldUtils_js__WEBPACK_IMPORTED_MODULE_19__.getFieldDefaultValue)(a);void 0!==e&&(g[a.name]=e)}const w=(0,_csv_csv_js__WEBPACK_IMPORTED_MODULE_16__.parseRows)(e,y,this._delimiter,(0,_clientSideDefaults_js__WEBPACK_IMPORTED_MODULE_17__.createDefaultAttributesFunction)(g,n));for(const a of w){const e=this._parseCoordinateValue(a[t]),s=this._parseCoordinateValue(a[i]);if(null!=s&&null!=e&&!isNaN(e)&&!isNaN(s)){a[t]=e,a[i]=s;for(const e in a)if(e!==t&&e!==i)if(r.isDateField(e)){const t=new Date(a[e]);a[e]=(0,_csv_csv_js__WEBPACK_IMPORTED_MODULE_16__.isValidDate)(t,a[e])?t.getTime():null}else if(r.isNumericField(e)){const t=(0,_csv_csv_js__WEBPACK_IMPORTED_MODULE_16__.parseNumber)(a[e]);isNaN(t)?a[e]=null:a[e]=t}a[n]=h,h++,o.push(new D(s,e)),d.push(a)}}if(!(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_9__.equals)({wkid:4326},s))if((0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_9__.isWebMercator)(s))for(const a of o)[a.x,a.y]=(0,_geometry_support_webMercatorUtils_js__WEBPACK_IMPORTED_MODULE_10__.lngLatToXY)(a.x,a.y,O);else o=(0,_geometry_projection_js__WEBPACK_IMPORTED_MODULE_7__.projectMany)(_geometry_geometryAdapters_json_js__WEBPACK_IMPORTED_MODULE_8__.jsonAdapter,o,_geometry_SpatialReference_js__WEBPACK_IMPORTED_MODULE_20__["default"].WGS84,s,null,null);const E=[];for(let a=0;a<o.length;a++){const{x:e,y:t}=o[a],i=d[a];i[n]=a+1,E.push(new _OptimizedFeature_js__WEBPACK_IMPORTED_MODULE_11__.OptimizedFeature(new _OptimizedGeometry_js__WEBPACK_IMPORTED_MODULE_12__["default"]([],[e,t]),i,null,i[n]))}return E}_parseCoordinateValue(e){if(null==e||""===e)return null;let t=(0,_csv_csv_js__WEBPACK_IMPORTED_MODULE_16__.parseNumber)(e);return(isNaN(t)||Math.abs(t)>181)&&(t=parseFloat(e)),t}async _checkProjection(e){try{await (0,_data_projectionSupport_js__WEBPACK_IMPORTED_MODULE_14__.checkProjectionSupport)(_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_9__.WGS84,e)}catch{throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_3__["default"]("csv-layer:projection-not-supported","Projection not supported")}}}function P(e,t){const n=t.parsingOptions||{},r={delimiter:n.delimiter,layerDefinition:null,locationInfo:{latitudeFieldName:n.latitudeField,longitudeFieldName:n.longitudeField}},s=r.layerDefinition={name:(0,_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_6__.getFilename)(t.url,v)||"csv",drawingInfo:C,geometryType:"esriGeometryPoint",objectIdField:null,fields:[],timeInfo:n.timeInfo,extent:{xmin:Number.POSITIVE_INFINITY,ymin:Number.POSITIVE_INFINITY,xmax:Number.NEGATIVE_INFINITY,ymax:Number.NEGATIVE_INFINITY,spatialReference:n.spatialReference||{wkid:4326}}},a=(0,_csv_csv_js__WEBPACK_IMPORTED_MODULE_16__.readRows)(e),l=a.next().value?.trim(),c=a.next().value?.trim();if(!l)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_3__["default"]("csv-layer:empty-csv","CSV is empty",{csv:e});const{delimiter:m,locationInfo:d}=(0,_csv_csv_js__WEBPACK_IMPORTED_MODULE_16__.inferDelimiterAndLocationInfo)(l,c,n);if(!m)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_3__["default"]("csv-layer:invalid-delimiter","Unable to detect the delimiter from CSV",{firstLine:l,secondLine:c,parsingOptions:n});if(!d)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_3__["default"]("csv-layer:location-fields-not-found","Unable to identify latitude and longitude fields from the CSV file",{firstLine:l,secondLine:c,parsingOptions:n});r.locationInfo=d,r.delimiter=m;const{names:u,aliases:p}=(0,_csv_csv_js__WEBPACK_IMPORTED_MODULE_16__.extractFieldNamesAndAliasesFromRow)(l,m),f=(0,_csv_csv_js__WEBPACK_IMPORTED_MODULE_16__.inferFields)(e,r.delimiter,u,p,r.locationInfo);if(n.fields?.length){const e=new _support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_18__["default"](n.fields);for(const t of f){const i=e.get(t.name);i&&Object.assign(t,i)}}if(!f.some((e=>"esriFieldTypeOID"===e.type&&(s.objectIdField=e.name,!0)))){const e={name:"__OBJECTID",alias:"__OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1};s.objectIdField=e.name,f.unshift(e)}s.fields=f;const y=new _support_FieldsIndex_js__WEBPACK_IMPORTED_MODULE_18__["default"](s.fields);if(r.locationInfo&&(r.locationInfo.latitudeFieldName=y.get(r.locationInfo.latitudeFieldName).name,r.locationInfo.longitudeFieldName=y.get(r.locationInfo.longitudeFieldName).name),s.timeInfo){const e=s.timeInfo;if(e.startTimeField){const t=y.get(e.startTimeField);t?(e.startTimeField=t.name,t.type="esriFieldTypeDate"):e.startTimeField=null}if(e.endTimeField){const t=y.get(e.endTimeField);t?(e.endTimeField=t.name,t.type="esriFieldTypeDate"):e.endTimeField=null}if(e.trackIdField){const t=y.get(e.trackIdField);e.trackIdField=t?t.name:null}e.startTimeField||e.endTimeField||(s.timeInfo=null)}return r}


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/graphics/sources/support/clientSideDefaults.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/sources/support/clientSideDefaults.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createCapabilities: () => (/* binding */ c),
/* harmony export */   createDefaultAttributesFunction: () => (/* binding */ i),
/* harmony export */   createDefaultTemplate: () => (/* binding */ a),
/* harmony export */   createDrawingInfo: () => (/* binding */ o)
/* harmony export */ });
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/has.js */ "./node_modules/@arcgis/core/core/has.js");
/* harmony import */ var _core_lang_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/lang.js */ "./node_modules/@arcgis/core/core/lang.js");
/* harmony import */ var _data_QueryEngineCapabilities_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../data/QueryEngineCapabilities.js */ "./node_modules/@arcgis/core/layers/graphics/data/QueryEngineCapabilities.js");
/* harmony import */ var _symbols_support_defaultsJSON_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../symbols/support/defaultsJSON.js */ "./node_modules/@arcgis/core/symbols/support/defaultsJSON.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
function o(t){return{renderer:{type:"simple",symbol:"esriGeometryPoint"===t||"esriGeometryMultipoint"===t?_symbols_support_defaultsJSON_js__WEBPACK_IMPORTED_MODULE_3__.defaultPointSymbolJSON:"esriGeometryPolyline"===t?_symbols_support_defaultsJSON_js__WEBPACK_IMPORTED_MODULE_3__.defaultPolylineSymbolJSON:_symbols_support_defaultsJSON_js__WEBPACK_IMPORTED_MODULE_3__.defaultPolygonSymbolJSON}}}const u=/^[_$a-zA-Z][_$a-zA-Z0-9]*$/;let n=1;function i(t,s){if((0,_core_has_js__WEBPACK_IMPORTED_MODULE_0__["default"])("esri-csp-restrictions"))return()=>({[s]:null,...t});try{let r=`this.${s} = null;`;for(const s in t){r+=`this${u.test(s)?`.${s}`:`["${s}"]`} = ${JSON.stringify(t[s])};`}const e=new Function(`\n      return class AttributesClass$${n++} {\n        constructor() {\n          ${r};\n        }\n      }\n    `)();return()=>new e}catch(r){return()=>({[s]:null,...t})}}function a(s={}){return[{name:"New Feature",description:"",prototype:{attributes:(0,_core_lang_js__WEBPACK_IMPORTED_MODULE_1__.clone)(s)}}]}function c(t,r){return{analytics:{supportsCacheHint:!1},attachment:null,data:{isVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:t},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:r,supportsDelete:r,supportsEditing:r,supportsChangeTracking:!1,supportsQuery:!0,supportsQueryAnalytics:!1,supportsQueryAttachments:!1,supportsQueryTopFeatures:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:r,supportsExceedsLimitStatistics:!0,supportsAsyncConvert3D:!1},query:_data_QueryEngineCapabilities_js__WEBPACK_IMPORTED_MODULE_2__.queryCapabilities,queryRelated:{supportsCount:!0,supportsOrderBy:!0,supportsPagination:!0,supportsCacheHint:!1},queryTopFeatures:{supportsCacheHint:!1},editing:{supportsGeometryUpdate:r,supportsGlobalId:!1,supportsReturnServiceEditsInSourceSpatialReference:!1,supportsRollbackOnFailure:!1,supportsUpdateWithoutM:!1,supportsUploadWithItemId:!1,supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1,supportsAsyncApplyEdits:!1}}}


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,