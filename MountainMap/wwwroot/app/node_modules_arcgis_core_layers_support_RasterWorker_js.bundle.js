"use strict";
(self["webpackChunkmm"] = self["webpackChunkmm"] || []).push([["node_modules_arcgis_core_layers_support_RasterWorker_js"],{

/***/ "./node_modules/@arcgis/core/layers/support/RasterWorker.js":
/*!******************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/support/RasterWorker.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ N)
/* harmony export */ });
/* harmony import */ var _geometry_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../geometry.js */ "./node_modules/@arcgis/core/geometry.js");
/* harmony import */ var _geometry_support_GeographicTransformation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../geometry/support/GeographicTransformation.js */ "./node_modules/@arcgis/core/geometry/support/GeographicTransformation.js");
/* harmony import */ var _PixelBlock_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./PixelBlock.js */ "./node_modules/@arcgis/core/layers/support/PixelBlock.js");
/* harmony import */ var _rasterFormats_RasterCodec_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./rasterFormats/RasterCodec.js */ "./node_modules/@arcgis/core/layers/support/rasterFormats/RasterCodec.js");
/* harmony import */ var _rasterFunctions_pixelUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./rasterFunctions/pixelUtils.js */ "./node_modules/@arcgis/core/layers/support/rasterFunctions/pixelUtils.js");
/* harmony import */ var _rasterFunctions_rasterFunctionHelper_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./rasterFunctions/rasterFunctionHelper.js */ "./node_modules/@arcgis/core/layers/support/rasterFunctions/rasterFunctionHelper.js");
/* harmony import */ var _rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./rasterFunctions/rasterProjectionHelper.js */ "./node_modules/@arcgis/core/layers/support/rasterFunctions/rasterProjectionHelper.js");
/* harmony import */ var _rasterFunctions_stretchUtils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./rasterFunctions/stretchUtils.js */ "./node_modules/@arcgis/core/layers/support/rasterFunctions/stretchUtils.js");
/* harmony import */ var _rasterFunctions_vectorFieldUtils_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./rasterFunctions/vectorFieldUtils.js */ "./node_modules/@arcgis/core/layers/support/rasterFunctions/vectorFieldUtils.js");
/* harmony import */ var _rasterTransforms_utils_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./rasterTransforms/utils.js */ "./node_modules/@arcgis/core/layers/support/rasterTransforms/utils.js");
/* harmony import */ var _renderers_support_RasterSymbolizer_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../renderers/support/RasterSymbolizer.js */ "./node_modules/@arcgis/core/renderers/support/RasterSymbolizer.js");
/* harmony import */ var _views_2d_engine_flow_dataUtils_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../views/2d/engine/flow/dataUtils.js */ "./node_modules/@arcgis/core/views/2d/engine/flow/dataUtils.js");
/* harmony import */ var _geometry_Extent_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../geometry/Extent.js */ "./node_modules/@arcgis/core/geometry/Extent.js");
/* harmony import */ var _geometry_Point_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../geometry/Point.js */ "./node_modules/@arcgis/core/geometry/Point.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
class N{convertVectorFieldData(r){const t=_PixelBlock_js__WEBPACK_IMPORTED_MODULE_2__["default"].fromJSON(r.pixelBlock),s=(0,_rasterFunctions_vectorFieldUtils_js__WEBPACK_IMPORTED_MODULE_8__.convertVectorFieldData)(t,r.type);return Promise.resolve(null!=s?s.toJSON():null)}computeStatisticsHistograms(r){const t=_PixelBlock_js__WEBPACK_IMPORTED_MODULE_2__["default"].fromJSON(r.pixelBlock),s=(0,_rasterFunctions_stretchUtils_js__WEBPACK_IMPORTED_MODULE_7__.computeStatisticsHistograms)(t);return Promise.resolve(s)}async decode(r){const e=await (0,_rasterFormats_RasterCodec_js__WEBPACK_IMPORTED_MODULE_3__.decode)(r.data,r.options);return e&&e.toJSON()}symbolize(r){r.pixelBlock=_PixelBlock_js__WEBPACK_IMPORTED_MODULE_2__["default"].fromJSON(r.pixelBlock),r.extent=r.extent?_geometry_Extent_js__WEBPACK_IMPORTED_MODULE_12__["default"].fromJSON(r.extent):null;const t=this.symbolizer.symbolize(r);return Promise.resolve(null!=t?t.toJSON():null)}async updateSymbolizer(r){this.symbolizer=_renderers_support_RasterSymbolizer_js__WEBPACK_IMPORTED_MODULE_10__["default"].fromJSON(r.symbolizerJSON),r.histograms&&"rasterStretch"===this.symbolizer?.rendererJSON.type&&(this.symbolizer.rendererJSON.histograms=r.histograms)}async updateRasterFunction(r){this.rasterFunction=(0,_rasterFunctions_rasterFunctionHelper_js__WEBPACK_IMPORTED_MODULE_5__.create)(r.rasterFunctionJSON)}async process(r){const t=this.rasterFunction.process({extent:_geometry_Extent_js__WEBPACK_IMPORTED_MODULE_12__["default"].fromJSON(r.extent),primaryPixelBlocks:r.primaryPixelBlocks.map((r=>null!=r?_PixelBlock_js__WEBPACK_IMPORTED_MODULE_2__["default"].fromJSON(r):null)),primaryPixelSizes:r.primaryPixelSizes?.map((r=>null!=r?_geometry_Point_js__WEBPACK_IMPORTED_MODULE_13__["default"].fromJSON(r):null)),primaryRasterIds:r.primaryRasterIds});return null!=t?t.toJSON():null}stretch(r){const t=this.symbolizer.simpleStretch(_PixelBlock_js__WEBPACK_IMPORTED_MODULE_2__["default"].fromJSON(r.srcPixelBlock),r.stretchParams);return Promise.resolve(t?.toJSON())}estimateStatisticsHistograms(r){const t=(0,_rasterFunctions_stretchUtils_js__WEBPACK_IMPORTED_MODULE_7__.estimateStatisticsHistograms)(_PixelBlock_js__WEBPACK_IMPORTED_MODULE_2__["default"].fromJSON(r.srcPixelBlock));return Promise.resolve(t)}split(r){const t=(0,_rasterFunctions_pixelUtils_js__WEBPACK_IMPORTED_MODULE_4__.split)(_PixelBlock_js__WEBPACK_IMPORTED_MODULE_2__["default"].fromJSON(r.srcPixelBlock),r.tileSize,r.maximumPyramidLevel);return t&&t.forEach(((r,e)=>{t.set(e,r?.toJSON())})),Promise.resolve(t)}async mosaicAndTransform(r){const t=r.srcPixelBlocks.map((r=>r?new _PixelBlock_js__WEBPACK_IMPORTED_MODULE_2__["default"](r):null)),s=(0,_rasterFunctions_pixelUtils_js__WEBPACK_IMPORTED_MODULE_4__.mosaic)(t,r.srcMosaicSize,{blockWidths:r.blockWidths,alignmentInfo:r.alignmentInfo,clipOffset:r.clipOffset,clipSize:r.clipSize});let a,l=s;return r.coefs&&(l=(0,_rasterFunctions_pixelUtils_js__WEBPACK_IMPORTED_MODULE_4__.approximateTransform)(s,r.destDimension,r.coefs,r.sampleSpacing,r.interpolation)),r.projectDirections&&r.gcsGrid&&(a=(0,_rasterFunctions_pixelUtils_js__WEBPACK_IMPORTED_MODULE_4__.getLocalArithmeticNorthRotations)(r.destDimension,r.gcsGrid),l=(0,_rasterFunctions_vectorFieldUtils_js__WEBPACK_IMPORTED_MODULE_8__.convertToLocalDirections)(l,r.isUV?"vector-uv":"vector-magdir",a)),{pixelBlock:l?.toJSON(),localNorthDirections:a}}async createFlowMesh(r,e){const t={data:new Float32Array(r.flowData.buffer),mask:new Uint8Array(r.flowData.maskBuffer),width:r.flowData.width,height:r.flowData.height},{vertexData:s,indexData:o}=await (0,_views_2d_engine_flow_dataUtils_js__WEBPACK_IMPORTED_MODULE_11__.createFlowMesh)(r.meshType,r.simulationSettings,t,e.signal);return{result:{vertexBuffer:s.buffer,indexBuffer:o.buffer},transferList:[s.buffer,o.buffer]}}async getProjectionOffsetGrid(e){const t=_geometry_Extent_js__WEBPACK_IMPORTED_MODULE_12__["default"].fromJSON(e.projectedExtent),s=_geometry_Extent_js__WEBPACK_IMPORTED_MODULE_12__["default"].fromJSON(e.srcBufferExtent);let o=null;e.datumTransformationSteps&&(o=new _geometry_support_GeographicTransformation_js__WEBPACK_IMPORTED_MODULE_1__["default"]({steps:e.datumTransformationSteps})),(e.includeGCSGrid||(0,_rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_6__.requirePE)(t.spatialReference,s.spatialReference,o))&&await (0,_rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_6__.load)();const i=e.rasterTransform?(0,_rasterTransforms_utils_js__WEBPACK_IMPORTED_MODULE_9__.readTransform)(e.rasterTransform):null;return (0,_rasterFunctions_rasterProjectionHelper_js__WEBPACK_IMPORTED_MODULE_6__.getProjectionOffsetGrid)({...e,projectedExtent:t,srcBufferExtent:s,datumTransformation:o,rasterTransform:i})}}


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX2FyY2dpc19jb3JlX2xheWVyc19zdXBwb3J0X1Jhc3Rlcldvcmtlcl9qcy5idW5kbGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDdTlCLFFBQVEsMEJBQTBCLFFBQVEsc0RBQUMsMEJBQTBCLDRGQUFDLFdBQVcsZ0RBQWdELCtCQUErQixRQUFRLHNEQUFDLDBCQUEwQiw2RkFBQyxJQUFJLDBCQUEwQixnQkFBZ0IsY0FBYyxxRUFBQyxtQkFBbUIscUJBQXFCLGFBQWEsYUFBYSxzREFBQywwQ0FBMEMsNERBQUMseUJBQXlCLHFDQUFxQyxnREFBZ0QsMEJBQTBCLGdCQUFnQiwrRUFBQyx1SkFBdUosOEJBQThCLG9CQUFvQixnRkFBQyx1QkFBdUIsaUJBQWlCLHFDQUFxQyxPQUFPLDREQUFDLDRFQUE0RSxzREFBQywyRUFBMkUsMkRBQUMsd0RBQXdELEVBQUUsK0JBQStCLFdBQVcsc0NBQXNDLHNEQUFDLDRDQUE0QyxvQ0FBb0MsZ0NBQWdDLFFBQVEsOEZBQUMsQ0FBQyxzREFBQyw0QkFBNEIsMEJBQTBCLFNBQVMsUUFBUSxxRUFBQyxDQUFDLHNEQUFDLDZEQUE2RCw2QkFBNkIscUJBQXFCLHNCQUFzQiw0QkFBNEIsdUNBQXVDLHNEQUFDLGFBQWEsc0VBQUMsb0JBQW9CLG9HQUFvRyxFQUFFLFVBQVUsbUJBQW1CLG9GQUFDLGdHQUFnRyxnR0FBQyw4QkFBOEIsOEZBQUMsMkNBQTJDLCtDQUErQywwQkFBMEIsU0FBUyxvSUFBb0ksRUFBRSx5QkFBeUIsT0FBTyxtRkFBQyw2Q0FBNkMsT0FBTyxRQUFRLDJDQUEyQyxtQ0FBbUMsaUNBQWlDLFFBQVEsNERBQUMsK0JBQStCLDREQUFDLDZCQUE2QixXQUFXLG1DQUFtQyxxRkFBQyxFQUFFLGlDQUFpQyxzQkFBc0IscUZBQUMsa0RBQWtELGdGQUFDLEdBQUcsMEJBQTBCLHlFQUFDLHlCQUF5QixPQUFPLG1HQUFDLEVBQUUsaUZBQWlGLEdBQXdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbW0vLi9ub2RlX21vZHVsZXMvQGFyY2dpcy9jb3JlL2xheWVycy9zdXBwb3J0L1Jhc3Rlcldvcmtlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuQWxsIG1hdGVyaWFsIGNvcHlyaWdodCBFU1JJLCBBbGwgUmlnaHRzIFJlc2VydmVkLCB1bmxlc3Mgb3RoZXJ3aXNlIHNwZWNpZmllZC5cblNlZSBodHRwczovL2pzLmFyY2dpcy5jb20vNC4yOC9lc3JpL2NvcHlyaWdodC50eHQgZm9yIGRldGFpbHMuXG4qL1xuaW1wb3J0XCIuLi8uLi9nZW9tZXRyeS5qc1wiO2ltcG9ydCByIGZyb21cIi4uLy4uL2dlb21ldHJ5L3N1cHBvcnQvR2VvZ3JhcGhpY1RyYW5zZm9ybWF0aW9uLmpzXCI7aW1wb3J0IGUgZnJvbVwiLi9QaXhlbEJsb2NrLmpzXCI7aW1wb3J0e2RlY29kZSBhcyB0fWZyb21cIi4vcmFzdGVyRm9ybWF0cy9SYXN0ZXJDb2RlYy5qc1wiO2ltcG9ydHtzcGxpdCBhcyBzLG1vc2FpYyBhcyBvLGFwcHJveGltYXRlVHJhbnNmb3JtIGFzIGksZ2V0TG9jYWxBcml0aG1ldGljTm9ydGhSb3RhdGlvbnMgYXMgbn1mcm9tXCIuL3Jhc3RlckZ1bmN0aW9ucy9waXhlbFV0aWxzLmpzXCI7aW1wb3J0e2NyZWF0ZSBhcyBhfWZyb21cIi4vcmFzdGVyRnVuY3Rpb25zL3Jhc3RlckZ1bmN0aW9uSGVscGVyLmpzXCI7aW1wb3J0e3JlcXVpcmVQRSBhcyBsLGxvYWQgYXMgbSxnZXRQcm9qZWN0aW9uT2Zmc2V0R3JpZCBhcyBjfWZyb21cIi4vcmFzdGVyRnVuY3Rpb25zL3Jhc3RlclByb2plY3Rpb25IZWxwZXIuanNcIjtpbXBvcnR7Y29tcHV0ZVN0YXRpc3RpY3NIaXN0b2dyYW1zIGFzIGYsZXN0aW1hdGVTdGF0aXN0aWNzSGlzdG9ncmFtcyBhcyBwfWZyb21cIi4vcmFzdGVyRnVuY3Rpb25zL3N0cmV0Y2hVdGlscy5qc1wiO2ltcG9ydHtjb252ZXJ0VmVjdG9yRmllbGREYXRhIGFzIHUsY29udmVydFRvTG9jYWxEaXJlY3Rpb25zIGFzIFN9ZnJvbVwiLi9yYXN0ZXJGdW5jdGlvbnMvdmVjdG9yRmllbGRVdGlscy5qc1wiO2ltcG9ydHtyZWFkVHJhbnNmb3JtIGFzIGR9ZnJvbVwiLi9yYXN0ZXJUcmFuc2Zvcm1zL3V0aWxzLmpzXCI7aW1wb3J0IHkgZnJvbVwiLi4vLi4vcmVuZGVyZXJzL3N1cHBvcnQvUmFzdGVyU3ltYm9saXplci5qc1wiO2ltcG9ydHtjcmVhdGVGbG93TWVzaCBhcyB4fWZyb21cIi4uLy4uL3ZpZXdzLzJkL2VuZ2luZS9mbG93L2RhdGFVdGlscy5qc1wiO2ltcG9ydCBoIGZyb21cIi4uLy4uL2dlb21ldHJ5L0V4dGVudC5qc1wiO2ltcG9ydCBPIGZyb21cIi4uLy4uL2dlb21ldHJ5L1BvaW50LmpzXCI7Y2xhc3MgTntjb252ZXJ0VmVjdG9yRmllbGREYXRhKHIpe2NvbnN0IHQ9ZS5mcm9tSlNPTihyLnBpeGVsQmxvY2spLHM9dSh0LHIudHlwZSk7cmV0dXJuIFByb21pc2UucmVzb2x2ZShudWxsIT1zP3MudG9KU09OKCk6bnVsbCl9Y29tcHV0ZVN0YXRpc3RpY3NIaXN0b2dyYW1zKHIpe2NvbnN0IHQ9ZS5mcm9tSlNPTihyLnBpeGVsQmxvY2spLHM9Zih0KTtyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHMpfWFzeW5jIGRlY29kZShyKXtjb25zdCBlPWF3YWl0IHQoci5kYXRhLHIub3B0aW9ucyk7cmV0dXJuIGUmJmUudG9KU09OKCl9c3ltYm9saXplKHIpe3IucGl4ZWxCbG9jaz1lLmZyb21KU09OKHIucGl4ZWxCbG9jayksci5leHRlbnQ9ci5leHRlbnQ/aC5mcm9tSlNPTihyLmV4dGVudCk6bnVsbDtjb25zdCB0PXRoaXMuc3ltYm9saXplci5zeW1ib2xpemUocik7cmV0dXJuIFByb21pc2UucmVzb2x2ZShudWxsIT10P3QudG9KU09OKCk6bnVsbCl9YXN5bmMgdXBkYXRlU3ltYm9saXplcihyKXt0aGlzLnN5bWJvbGl6ZXI9eS5mcm9tSlNPTihyLnN5bWJvbGl6ZXJKU09OKSxyLmhpc3RvZ3JhbXMmJlwicmFzdGVyU3RyZXRjaFwiPT09dGhpcy5zeW1ib2xpemVyPy5yZW5kZXJlckpTT04udHlwZSYmKHRoaXMuc3ltYm9saXplci5yZW5kZXJlckpTT04uaGlzdG9ncmFtcz1yLmhpc3RvZ3JhbXMpfWFzeW5jIHVwZGF0ZVJhc3RlckZ1bmN0aW9uKHIpe3RoaXMucmFzdGVyRnVuY3Rpb249YShyLnJhc3RlckZ1bmN0aW9uSlNPTil9YXN5bmMgcHJvY2VzcyhyKXtjb25zdCB0PXRoaXMucmFzdGVyRnVuY3Rpb24ucHJvY2Vzcyh7ZXh0ZW50OmguZnJvbUpTT04oci5leHRlbnQpLHByaW1hcnlQaXhlbEJsb2NrczpyLnByaW1hcnlQaXhlbEJsb2Nrcy5tYXAoKHI9Pm51bGwhPXI/ZS5mcm9tSlNPTihyKTpudWxsKSkscHJpbWFyeVBpeGVsU2l6ZXM6ci5wcmltYXJ5UGl4ZWxTaXplcz8ubWFwKChyPT5udWxsIT1yP08uZnJvbUpTT04ocik6bnVsbCkpLHByaW1hcnlSYXN0ZXJJZHM6ci5wcmltYXJ5UmFzdGVySWRzfSk7cmV0dXJuIG51bGwhPXQ/dC50b0pTT04oKTpudWxsfXN0cmV0Y2gocil7Y29uc3QgdD10aGlzLnN5bWJvbGl6ZXIuc2ltcGxlU3RyZXRjaChlLmZyb21KU09OKHIuc3JjUGl4ZWxCbG9jayksci5zdHJldGNoUGFyYW1zKTtyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHQ/LnRvSlNPTigpKX1lc3RpbWF0ZVN0YXRpc3RpY3NIaXN0b2dyYW1zKHIpe2NvbnN0IHQ9cChlLmZyb21KU09OKHIuc3JjUGl4ZWxCbG9jaykpO3JldHVybiBQcm9taXNlLnJlc29sdmUodCl9c3BsaXQocil7Y29uc3QgdD1zKGUuZnJvbUpTT04oci5zcmNQaXhlbEJsb2NrKSxyLnRpbGVTaXplLHIubWF4aW11bVB5cmFtaWRMZXZlbCk7cmV0dXJuIHQmJnQuZm9yRWFjaCgoKHIsZSk9Pnt0LnNldChlLHI/LnRvSlNPTigpKX0pKSxQcm9taXNlLnJlc29sdmUodCl9YXN5bmMgbW9zYWljQW5kVHJhbnNmb3JtKHIpe2NvbnN0IHQ9ci5zcmNQaXhlbEJsb2Nrcy5tYXAoKHI9PnI/bmV3IGUocik6bnVsbCkpLHM9byh0LHIuc3JjTW9zYWljU2l6ZSx7YmxvY2tXaWR0aHM6ci5ibG9ja1dpZHRocyxhbGlnbm1lbnRJbmZvOnIuYWxpZ25tZW50SW5mbyxjbGlwT2Zmc2V0OnIuY2xpcE9mZnNldCxjbGlwU2l6ZTpyLmNsaXBTaXplfSk7bGV0IGEsbD1zO3JldHVybiByLmNvZWZzJiYobD1pKHMsci5kZXN0RGltZW5zaW9uLHIuY29lZnMsci5zYW1wbGVTcGFjaW5nLHIuaW50ZXJwb2xhdGlvbikpLHIucHJvamVjdERpcmVjdGlvbnMmJnIuZ2NzR3JpZCYmKGE9bihyLmRlc3REaW1lbnNpb24sci5nY3NHcmlkKSxsPVMobCxyLmlzVVY/XCJ2ZWN0b3ItdXZcIjpcInZlY3Rvci1tYWdkaXJcIixhKSkse3BpeGVsQmxvY2s6bD8udG9KU09OKCksbG9jYWxOb3J0aERpcmVjdGlvbnM6YX19YXN5bmMgY3JlYXRlRmxvd01lc2gocixlKXtjb25zdCB0PXtkYXRhOm5ldyBGbG9hdDMyQXJyYXkoci5mbG93RGF0YS5idWZmZXIpLG1hc2s6bmV3IFVpbnQ4QXJyYXkoci5mbG93RGF0YS5tYXNrQnVmZmVyKSx3aWR0aDpyLmZsb3dEYXRhLndpZHRoLGhlaWdodDpyLmZsb3dEYXRhLmhlaWdodH0se3ZlcnRleERhdGE6cyxpbmRleERhdGE6b309YXdhaXQgeChyLm1lc2hUeXBlLHIuc2ltdWxhdGlvblNldHRpbmdzLHQsZS5zaWduYWwpO3JldHVybntyZXN1bHQ6e3ZlcnRleEJ1ZmZlcjpzLmJ1ZmZlcixpbmRleEJ1ZmZlcjpvLmJ1ZmZlcn0sdHJhbnNmZXJMaXN0OltzLmJ1ZmZlcixvLmJ1ZmZlcl19fWFzeW5jIGdldFByb2plY3Rpb25PZmZzZXRHcmlkKGUpe2NvbnN0IHQ9aC5mcm9tSlNPTihlLnByb2plY3RlZEV4dGVudCkscz1oLmZyb21KU09OKGUuc3JjQnVmZmVyRXh0ZW50KTtsZXQgbz1udWxsO2UuZGF0dW1UcmFuc2Zvcm1hdGlvblN0ZXBzJiYobz1uZXcgcih7c3RlcHM6ZS5kYXR1bVRyYW5zZm9ybWF0aW9uU3RlcHN9KSksKGUuaW5jbHVkZUdDU0dyaWR8fGwodC5zcGF0aWFsUmVmZXJlbmNlLHMuc3BhdGlhbFJlZmVyZW5jZSxvKSkmJmF3YWl0IG0oKTtjb25zdCBpPWUucmFzdGVyVHJhbnNmb3JtP2QoZS5yYXN0ZXJUcmFuc2Zvcm0pOm51bGw7cmV0dXJuIGMoey4uLmUscHJvamVjdGVkRXh0ZW50OnQsc3JjQnVmZmVyRXh0ZW50OnMsZGF0dW1UcmFuc2Zvcm1hdGlvbjpvLHJhc3RlclRyYW5zZm9ybTppfSl9fWV4cG9ydHtOIGFzIGRlZmF1bHR9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9