"use strict";
(self["webpackChunkmm"] = self["webpackChunkmm"] || []).push([["defaultVendors-node_modules_arcgis_core_views_2d_engine_webgl_AttributeStoreView_js-node_modu-8d6aed"],{

/***/ "./node_modules/@arcgis/core/symbols/cim/ExpandedCIM.js":
/*!**************************************************************!*\
  !*** ./node_modules/@arcgis/core/symbols/cim/ExpandedCIM.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExpandedCIM: () => (/* binding */ l)
/* harmony export */ });
/* harmony import */ var _views_2d_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../views/2d/engine/webgl/enums.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/enums.js");
/* harmony import */ var _views_2d_engine_webgl_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../views/2d/engine/webgl/materialKey/MaterialKey.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/materialKey/MaterialKey.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const s={marker:_views_2d_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__.WGLGeometryType.MARKER,fill:_views_2d_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__.WGLGeometryType.FILL,line:_views_2d_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__.WGLGeometryType.LINE,text:_views_2d_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__.WGLGeometryType.TEXT};class l{constructor(e,l,n,r){const c={minScale:l?.minScale,maxScale:l?.maxScale},m=i(c);this.layers=e,this.data=l,this.hash=this._createHash()+m,this.rendererKey=n;const o={isOutline:!1,placement:null,symbologyType:_views_2d_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_0__.WGLSymbologyType.DEFAULT,vvFlags:n};for(const t of e){const e=s[t.type];o.isOutline="line"===t.type&&t.isOutline,t.materialKey=(0,_views_2d_engine_webgl_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_1__.createMaterialKey)(e,o),t.maxVVSize=r,t.scaleInfo=c,t.templateHash+=m}}get type(){return"expanded-cim"}_createHash(){let e="";for(const t of this.layers)e+=t.templateHash;return e}}function i(e){return e.minScale||e.maxScale?e.minScale+"-"+e.maxScale:""}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/AttributeStoreView.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/AttributeStoreView.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AttributeStoreView: () => (/* binding */ j)
/* harmony export */ });
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/has.js */ "./node_modules/@arcgis/core/core/has.js");
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/Logger.js */ "./node_modules/@arcgis/core/core/Logger.js");
/* harmony import */ var _core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../core/promiseUtils.js */ "./node_modules/@arcgis/core/core/promiseUtils.js");
/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./definitions.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/definitions.js");
/* harmony import */ var _DisplayId_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./DisplayId.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/DisplayId.js");
/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Utils.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/Utils.js");
/* harmony import */ var _util_debug_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./util/debug.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/util/debug.js");
/* harmony import */ var _webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../webgl/enums.js */ "./node_modules/@arcgis/core/views/webgl/enums.js");
/* harmony import */ var _webgl_FramebufferObject_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../webgl/FramebufferObject.js */ "./node_modules/@arcgis/core/views/webgl/FramebufferObject.js");
/* harmony import */ var _webgl_Texture_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../webgl/Texture.js */ "./node_modules/@arcgis/core/views/webgl/Texture.js");
/* harmony import */ var _webgl_TextureDescriptor_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../webgl/TextureDescriptor.js */ "./node_modules/@arcgis/core/views/webgl/TextureDescriptor.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const E=_core_Logger_js__WEBPACK_IMPORTED_MODULE_2__["default"].getLogger("esri.views.2d.engine.webgl.AttributeStoreView"),S=(0,_util_debug_js__WEBPACK_IMPORTED_MODULE_7__.createDebugLogger)(_util_debug_js__WEBPACK_IMPORTED_MODULE_7__.debugAttrUpdates,E);class A{constructor(t,e,i){this._texture=null,this._lastTexture=null,this._fbos={},this.texelSize=4;const{buffer:s,pixelType:r,textureOnly:a}=t,n=(0,_Utils_js__WEBPACK_IMPORTED_MODULE_6__.getPixelArrayCtor)(r);this.shared=i,this.pixelType=r,this.size=e,this.textureOnly=a,a||(this.data=new n(s)),this._resetRange()}destroy(){this._texture?.dispose();for(const t in this._fbos){const e=this._fbos[t];e&&("0"===t&&e.detachColorTexture(),e.dispose()),this._fbos[t]=null}this._texture=null}get _textureDesc(){const t=new _webgl_TextureDescriptor_js__WEBPACK_IMPORTED_MODULE_11__.TextureDescriptor;return t.wrapMode=_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.TextureWrapMode.CLAMP_TO_EDGE,t.samplingMode=_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.TextureSamplingMode.NEAREST,t.dataType=this.pixelType,t.width=this.size,t.height=this.size,t}setData(t,e,i){const s=(0,_DisplayId_js__WEBPACK_IMPORTED_MODULE_5__.getDisplayIdTexel)(t),r=this.data,a=s*this.texelSize+e;!r||a>=r.length||(r[a]=i,this.dirtyStart=Math.min(this.dirtyStart,s),this.dirtyEnd=Math.max(this.dirtyEnd,s))}getData(t,e){if(null==this.data)return null;const i=(0,_DisplayId_js__WEBPACK_IMPORTED_MODULE_5__.getDisplayIdTexel)(t)*this.texelSize+e;return!this.data||i>=this.data.length?null:this.data[i]}getTexture(t){return this._texture??this._initTexture(t)}getFBO(t,e=0){if(!this._fbos[e]){const i=0===e?this.getTexture(t):this._textureDesc;this._fbos[e]=new _webgl_FramebufferObject_js__WEBPACK_IMPORTED_MODULE_9__.FramebufferObject(t,i)}return this._fbos[e]}get locked(){return!(this.pixelType!==_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.PixelType.UNSIGNED_BYTE||!this.shared||this.textureOnly||!(0,_core_has_js__WEBPACK_IMPORTED_MODULE_1__["default"])("esri-atomics")||!this.data)&&1===Atomics.load(this.data,0)}get hasDirty(){const t=this.dirtyStart;return this.dirtyEnd>=t}updateTexture(e,i){if(!this.locked){try{const i=this.dirtyStart,s=this.dirtyEnd;if(!this.hasDirty)return;this._resetRange();const r=this.data.buffer,a=this.getTexture(e),n=4,d=(i-i%this.size)/this.size,h=(s-s%this.size)/this.size,u=d,o=this.size,l=h,p=d*this.size*n,x=(o+l*this.size)*n-p,_=(0,_Utils_js__WEBPACK_IMPORTED_MODULE_6__.getPixelArrayCtor)(this.pixelType),c=new _(r,p*_.BYTES_PER_ELEMENT,x),f=this.size,T=l-u+1;if(T>this.size)return void E.error(new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("mapview-webgl","Out-of-bounds index when updating AttributeData"));a.updateData(0,0,u,f,T,c)}catch(s){}i()}}update(t){const{data:e,start:i,end:s}=t;if(null!=e&&null!=this.data){const s=this.data,r=i*this.texelSize;for(let i=0;i<e.length;i++){const a=1<<i%this.texelSize;t.layout&a&&(s[r+i]=e[i])}}this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,s)}resize(t,e){const i=this.size;if(this.size=e,this.textureOnly)return void(i!==this.size&&(this._lastTexture=this._texture,this._texture=null));const s=(0,_Utils_js__WEBPACK_IMPORTED_MODULE_6__.getPixelArrayCtor)(this.pixelType);this.destroy(),this.data=new s(t.buffer)}_resetRange(){this.dirtyStart=2147483647,this.dirtyEnd=0}_initTexture(t){const e=new _webgl_Texture_js__WEBPACK_IMPORTED_MODULE_10__.Texture(t,this._textureDesc,this.data??void 0);if(null!=this._lastTexture&&this._fbos[0]){const i=this._lastTexture.descriptor.width,s=this._lastTexture.descriptor.height,r=this._lastTexture.descriptor.dataType,a=this._lastTexture.descriptor.pixelFormat,n=this.getFBO(t),d=(0,_Utils_js__WEBPACK_IMPORTED_MODULE_6__.getPixelBytes)(r),h=new((0,_Utils_js__WEBPACK_IMPORTED_MODULE_6__.getPixelArrayCtor)(r))(new ArrayBuffer(i*s*d*this.texelSize)),u=t.getBoundFramebufferObject(),{x:o,y:l,width:p,height:x}=t.getViewport();t.bindFramebuffer(n),n.readPixels(0,0,i,s,a,r,h),e.updateData(0,0,0,2*i,s/2,h),t.setViewport(o,l,p,x),t.bindFramebuffer(u)}return this.destroy(),this._texture=e,this._texture}}class j{constructor(t){this._onUpdate=t,this._initialized=!1,this._forceNextUpload=!1,this._locked=!1}initialize(t){const{blocks:e,shared:i,size:s}=t;if(this.shared=i,this.size=s,S("Initializing AttributeStoreView",t),null==this._data)this._data=e.map((t=>null!=t?new A(t,s,i):null));else for(let r=0;r<this._data.length;r++){const t=this._data[r],a=e[r];null!=a&&(null==t?this._data[r]=new A(a,s,i):t.resize(a,s))}this._initialized=!0}destroy(){for(const t of this._data??[])t?.destroy();this._defaultTexture?.dispose()}isEmpty(){return null==this._data}isUpdating(){const t=null!=this._pendingAttributeUpdate,e=t;return (0,_core_has_js__WEBPACK_IMPORTED_MODULE_1__["default"])("esri-2d-log-updating")&&console.log(`Updating AttributeStoreView ${e}\n  -> hasPendingUpdate ${t}`),e}getBlock(t){if(null==this._data)return null;return this._data[t]}setLabelMinZoom(t,e){this.setData(t,0,1,e)}getLabelMinZoom(t){return this.getData(t,0,1,255)}getFilterFlags(t){return this.getData(t,0,0,0)}getVVSize(t){return this.getData(t,_definitions_js__WEBPACK_IMPORTED_MODULE_4__.attributeDataVv,0,0)}getData(t,e,i,s){if(!this._data)return 0;const r=this._data[e];if(null==r)return 0;const a=r.getData(t,i);return null!=a?a:s}setData(t,e,i,s){this._data[e].setData(t,i,s)}lockTextureUpload(){this._locked=!0}unlockTextureUpload(){this._locked=!1}forceTextureUpload(){this._forceNextUpload=!0}async requestUpdate(e){if(this._pendingAttributeUpdate)return void E.error(new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("mapview-webgl","Tried to update attribute data with a pending update"));const s=(0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.createResolver)();return S("AttributeStoreView Update Requested",e),this._pendingAttributeUpdate={data:e,resolver:s},this._onUpdate(),s.promise}update(){if(this._initialized&&null!=this._pendingAttributeUpdate){(0,_core_has_js__WEBPACK_IMPORTED_MODULE_1__["default"])("esri-2d-update-debug")&&console.debug("AttributeStoreView::update");const{data:t,resolver:e}=this._pendingAttributeUpdate,i=this._data;for(let s=0;s<t.blocks.length;s++){const e=t.blocks[s],r=i[s];null!=r&&null!=e&&(S(`Updating block ${s}`,e),r.update(e))}this._pendingAttributeUpdate=null,e(),this._onUpdate()}}bindTextures(t,e=!0){const i=this._getDefaultTexture(t);if(!this._initialized)return t.bindTexture(i,_definitions_js__WEBPACK_IMPORTED_MODULE_4__.textureBindingAttributeData0),void(e&&(t.bindTexture(i,_definitions_js__WEBPACK_IMPORTED_MODULE_4__.textureBindingAttributeData1),t.bindTexture(i,_definitions_js__WEBPACK_IMPORTED_MODULE_4__.textureBindingAttributeData2),t.bindTexture(i,_definitions_js__WEBPACK_IMPORTED_MODULE_4__.textureBindingAttributeData3),t.bindTexture(i,_definitions_js__WEBPACK_IMPORTED_MODULE_4__.textureBindingAttributeData4),t.bindTexture(i,_definitions_js__WEBPACK_IMPORTED_MODULE_4__.textureBindingAttributeData5),t.bindTexture(i,_definitions_js__WEBPACK_IMPORTED_MODULE_4__.textureBindingGpgpu)));const c=this._data;if(!this._locked||this._forceNextUpload){for(const e of c)e?.updateTexture(t,(()=>this._onUpdate()));this._forceNextUpload=!1}t.bindTexture(c[_definitions_js__WEBPACK_IMPORTED_MODULE_4__.attributeDataFilterFlags]?.getTexture(t)??i,_definitions_js__WEBPACK_IMPORTED_MODULE_4__.textureBindingAttributeData0),e&&(t.bindTexture(c[_definitions_js__WEBPACK_IMPORTED_MODULE_4__.attributeDataGpgpu]?.getTexture(t)??i,_definitions_js__WEBPACK_IMPORTED_MODULE_4__.textureBindingGpgpu),t.bindTexture(c[_definitions_js__WEBPACK_IMPORTED_MODULE_4__.attributeDataAnimation]?.getTexture(t)??i,_definitions_js__WEBPACK_IMPORTED_MODULE_4__.textureBindingAttributeData1),t.bindTexture(c[_definitions_js__WEBPACK_IMPORTED_MODULE_4__.attributeDataVv]?.getTexture(t)??i,_definitions_js__WEBPACK_IMPORTED_MODULE_4__.textureBindingAttributeData2),t.bindTexture(c[_definitions_js__WEBPACK_IMPORTED_MODULE_4__.attributeDataDd1]?.getTexture(t)??i,_definitions_js__WEBPACK_IMPORTED_MODULE_4__.textureBindingAttributeData3),t.bindTexture(c[_definitions_js__WEBPACK_IMPORTED_MODULE_4__.textureBindingAttributeData4]?.getTexture(t)??i,_definitions_js__WEBPACK_IMPORTED_MODULE_4__.textureBindingAttributeData4),t.bindTexture(c[_definitions_js__WEBPACK_IMPORTED_MODULE_4__.textureBindingAttributeData5]?.getTexture(t)??i,_definitions_js__WEBPACK_IMPORTED_MODULE_4__.textureBindingAttributeData5))}_getDefaultTexture(t){if(null==this._defaultTexture){const e=new _webgl_TextureDescriptor_js__WEBPACK_IMPORTED_MODULE_11__.TextureDescriptor;e.wrapMode=_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.TextureWrapMode.CLAMP_TO_EDGE,e.samplingMode=_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.TextureSamplingMode.NEAREST,e.width=1,e.height=1,this._defaultTexture=new _webgl_Texture_js__WEBPACK_IMPORTED_MODULE_10__.Texture(t,e,new Uint8Array(4))}return this._defaultTexture}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/DisplayId.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/DisplayId.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   aggregateValidFiltersMask: () => (/* binding */ r),
/* harmony export */   createDisplayId: () => (/* binding */ s),
/* harmony export */   displayIdTexelMask: () => (/* binding */ n),
/* harmony export */   displayIdTypeAggregate: () => (/* binding */ c),
/* harmony export */   displayIdTypeFeature: () => (/* binding */ u),
/* harmony export */   displayIdTypeMask: () => (/* binding */ t),
/* harmony export */   getDisplayIdFilterMask: () => (/* binding */ i),
/* harmony export */   getDisplayIdTexel: () => (/* binding */ f),
/* harmony export */   getDisplayIdType: () => (/* binding */ e),
/* harmony export */   isAggregateId: () => (/* binding */ p),
/* harmony export */   nonAggregateValidFiltersMask: () => (/* binding */ o)
/* harmony export */ });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const n=8388607,t=8388608,r=254,o=255,u=0,c=1,e=n=>(n&t)>>>23,f=t=>t&n,i=n=>e(n)===c?r:o;function p(n){return e(n)===c}function s(n,r){return((r?t:0)|n)>>>0}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/FeatureDisplayList.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/FeatureDisplayList.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FeatureDisplayList: () => (/* binding */ n),
/* harmony export */   FeatureDisplayListInfo: () => (/* binding */ e)
/* harmony export */ });
/* harmony import */ var _cpuMapped_FreeList_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cpuMapped/FreeList.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/cpuMapped/FreeList.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
class e{constructor(t,e,n,i,a){this.target=t,this.geometryType=e,this.materialKey=n,this.indexFrom=i,this.indexCount=a}get indexEnd(){return this.indexFrom+this.indexCount}extend(t){this.indexCount+=t}}class n{constructor(t,e){this.geometryType=0,this._target=t,this.geometryType=e}static from(t,e,i,a){const d=new n(t,e);if(null!=a)for(const n of a)i.seekIndex(n),d.addRecord(i);else for(;i.next();)d.addRecord(i);return d}addRecord(n){const i=this._target,a=this.geometryType,d=n.materialKey;let s=n.indexFrom,r=n.indexCount;const o=n.vertexFrom,l=n.vertexCount;if(r||(s=o,r=l),null==this._head){const n=new e(i,a,d,s,r);return void(this._head=new _cpuMapped_FreeList_js__WEBPACK_IMPORTED_MODULE_0__.List(n))}let h=null,x=this._head;for(;x;){if(s<x.data.indexFrom)return this._insert(d,s,r,h,x);h=x,x=x.next}this._insert(d,s,r,h,null)}forEach(t){null!=this._head&&this._head.forEach(t)}*infos(){if(null!=this._head)for(const t of this._head.values())yield t}_insert(n,i,a,d,s){if(null==d&&null==s){const d=new e(this._target,this.geometryType,n,i,a);this._head=new _cpuMapped_FreeList_js__WEBPACK_IMPORTED_MODULE_0__.List(d)}return null==d&&null!=s?this._insertAtHead(n,i,a,s):null!=d&&null==s?this._insertAtEnd(n,i,a,d):null!=d&&null!=s?this._insertAtMiddle(n,i,a,d,s):void 0}_insertAtHead(n,i,a,d){const s=i+a;if(n===d.data.materialKey&&s===d.data.indexFrom)d.data.indexFrom=i,d.data.indexCount+=a;else{const s=new e(this._target,this.geometryType,n,i,a);this._head=new _cpuMapped_FreeList_js__WEBPACK_IMPORTED_MODULE_0__.List(s),this._head.next=d}}_insertAtEnd(n,i,a,d){if(d.data.materialKey===n&&d.data.indexEnd===i)d.data.indexCount+=a;else{const s=new e(this._target,this.geometryType,n,i,a),r=new _cpuMapped_FreeList_js__WEBPACK_IMPORTED_MODULE_0__.List(s);d.next=r}}_insertAtMiddle(n,i,a,d,s){const r=i+a;if(d.data.materialKey===n&&d.data.indexEnd===i)d.data.indexCount+=a,d.data.materialKey===s.data.materialKey&&d.data.indexEnd===s.data.indexFrom&&(d.data.indexCount+=s.data.indexCount,d.next=s.next);else if(n===s.data.materialKey&&r===s.data.indexFrom)s.data.indexFrom=i,s.data.indexCount+=a;else{const r=new e(this._target,this.geometryType,n,i,a),o=new _cpuMapped_FreeList_js__WEBPACK_IMPORTED_MODULE_0__.List(r);d.next=o,o.next=s}}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/WGLTile.js":
/*!********************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/WGLTile.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WGLTile: () => (/* binding */ m)
/* harmony export */ });
/* harmony import */ var _chunks_mat2d_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../chunks/mat2d.js */ "./node_modules/@arcgis/core/chunks/mat2d.js");
/* harmony import */ var _chunks_mat2df32_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../chunks/mat2df32.js */ "./node_modules/@arcgis/core/chunks/mat2df32.js");
/* harmony import */ var _chunks_mat3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../chunks/mat3.js */ "./node_modules/@arcgis/core/chunks/mat3.js");
/* harmony import */ var _chunks_mat3f32_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../chunks/mat3f32.js */ "./node_modules/@arcgis/core/chunks/mat3f32.js");
/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./definitions.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/definitions.js");
/* harmony import */ var _TiledDisplayObject_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./TiledDisplayObject.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/TiledDisplayObject.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
class h{acquire(s){return{refCount:1,version:-1,labelMat2d:(0,_chunks_mat2df32_js__WEBPACK_IMPORTED_MODULE_1__.c)(),tileMat3:(0,_chunks_mat3f32_js__WEBPACK_IMPORTED_MODULE_3__.c)(),dvs:(0,_chunks_mat3f32_js__WEBPACK_IMPORTED_MODULE_3__.c)()}}release(s){}}class m extends _TiledDisplayObject_js__WEBPACK_IMPORTED_MODULE_5__.TiledDisplayObject{constructor(s,t,r,e){super(s,t,r,e,_definitions_js__WEBPACK_IMPORTED_MODULE_4__.tileSize,_definitions_js__WEBPACK_IMPORTED_MODULE_4__.tileSize)}destroy(){super.destroy(),this._transforms&&m.TransformCache.release(this.key.hash)}setTransform(i){const o=this.resolution/i.resolution,n=this.transforms.tileMat3,[h,m]=i.toScreenNoRotation([0,0],[this.x,this.y]),c=this.width/this.rangeX*o,f=this.height/this.rangeY*o;(0,_chunks_mat3_js__WEBPACK_IMPORTED_MODULE_2__.s)(n,c,0,0,0,f,0,h,m,1),(0,_chunks_mat3_js__WEBPACK_IMPORTED_MODULE_2__.m)(this.transforms.dvs,i.displayViewMat3,n);const d=this.transforms.labelMat2d,l=window.devicePixelRatio,u=(0,_chunks_mat2d_js__WEBPACK_IMPORTED_MODULE_0__.d)((0,_chunks_mat2df32_js__WEBPACK_IMPORTED_MODULE_1__.c)(),c*l,0,0,f*l,h*l,m*l);(0,_chunks_mat2d_js__WEBPACK_IMPORTED_MODULE_0__.m)(d,i.viewMat2d,u)}_createTransforms(){return m.TransformCache.acquire(this.key.hash)}}m.TransformCache=new h;


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/cpuMapped/DisplayRecordReader.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/cpuMapped/DisplayRecordReader.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DisplayRecordReader: () => (/* binding */ r)
/* harmony export */ });
/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../definitions.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/definitions.js");
/* harmony import */ var _FeatureDisplayList_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../FeatureDisplayList.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/FeatureDisplayList.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const s=2147483647;class r{constructor(t){this._head=t,this._cursor=t}static from(t,e=0,s=t.byteLength/i.BYTES_PER_RECORD-e){const _=new i(new Int32Array(t,e*i.BYTES_PER_RECORD,s*i.ELEMENTS_PER_RECORD));return new r(_)}size(){let t=this._cursor,e=0;for(;t;)e+=t.size(),t=t._link;return e}get id(){return this._cursor.id}set id(t){this._cursor.id=t}get materialKey(){return this._cursor.materialKey}set materialKey(t){this._cursor.materialKey=t}get insertAfter(){return this._cursor.insertAfter}get indexFrom(){return this._cursor.indexFrom}set indexFrom(t){this._cursor.indexFrom=t}get indexCount(){return this._cursor.indexCount}set indexCount(t){this._cursor.indexCount=t}get vertexFrom(){return this._cursor.vertexFrom}set vertexFrom(t){this._cursor.vertexFrom=t}get vertexCount(){return this._cursor.vertexCount}set vertexCount(t){this._cursor.vertexCount=t}get sortKey(){return this._cursor.sortKey}set sortKey(t){this._cursor.sortKey=t}get index(){return this._cursor._indexStart+this._cursor._index}seekIndex(t){let e=t;for(this._cursor=this._head;this._cursor;){const t=this._cursor.size();if(e<t)return this._cursor._index=e,!0;e-=t,this._cursor=this._cursor._link}return!1}forEach(t){const e=this.getCursor();for(;e.next();)t(e)}link(t){if(!this._head)return void(this._head=t._head);let e=this._head;for(;e._link;)e=e._link;e._link=t._head,e._link._indexStart=e._indexStart+e.size()}getCursor(){return this.copy()}getDrawInfo(t,s){return new _FeatureDisplayList_js__WEBPACK_IMPORTED_MODULE_1__.FeatureDisplayListInfo(t,s,this.materialKey,this.indexFrom,this.indexCount)}lookup(t){for(this._cursor=this._head;this._cursor&&!this._cursor.lookup(t);){if(!this._cursor._link)return!1;this._cursor=this._cursor._link}return!!this._cursor}copy(){const t=new r(this._head?.copy());if(!t._head)return t;let e=t._head,s=t._head._link;for(;s;)e._link=s.copy(),e=s,s=e._link;return t}next(){return!!this._cursor&&(!!this._cursor.next()||!!this._cursor._link&&(this._cursor=this._cursor._link,this.next()))}peekId(){return this._cursor.peekId()??this._cursor._link.peekId()}delete(t){let e=this._head,s=null;for(;e;){if(e.delete(t))return e.isEmpty()&&(null!=s&&(s._link=e._link),e===this._head&&(this._head=e._link),e===this._cursor&&(this._cursor=e._link)),!0;s=e,e=e._link}return!1}}r.ELEMENTS_PER_RECORD=_definitions_js__WEBPACK_IMPORTED_MODULE_0__.displayRecordIntPerElement,r.BYTES_PER_RECORD=r.ELEMENTS_PER_RECORD*Int32Array.BYTES_PER_ELEMENT;class i{constructor(t){this._link=null,this._index=-1,this._indexStart=0,this._packedRecordsF32=null,this._deletedCount=0,this._offsets={instance:null},this._packedRecords=t}static from(t,e=0,s=t.byteLength/this.BYTES_PER_RECORD-e){return new i(new Int32Array(t,e*this.BYTES_PER_RECORD,s*this.ELEMENTS_PER_RECORD))}delete(t){const e=this._index,r=this.lookup(t);if(r)for(this.id=s,++this._deletedCount;this.next()&&this.id===t;)this.id=s,++this._deletedCount;return this._index=e,r}isEmpty(){return this._deletedCount===this.size()}link(t){this._link?this._link.link(t):this._link=t}lookup(t){if(null==this._offsets.instance){this._offsets.instance=new Map;const t=this.copy();t._index=-1;let e=0;for(;t.next();)t.id!==e&&(this._offsets.instance.set(t.id,t._index),e=t.id)}if(!this._offsets.instance.has(t))return!1;const e=this._index;return this._index=this._offsets.instance.get(t),this.id!==s||(this._index=e,!1)}get id(){return this._packedRecords[this._index*i.ELEMENTS_PER_RECORD]}set id(t){this._packedRecords[this._index*i.ELEMENTS_PER_RECORD]=t}get materialKey(){return this._packedRecords[this._index*i.ELEMENTS_PER_RECORD+1]}set materialKey(t){this._packedRecords[this._index*i.ELEMENTS_PER_RECORD+1]=t}get insertAfter(){return this._packedRecords[this._index*i.ELEMENTS_PER_RECORD+2]}get indexFrom(){return this._packedRecords[this._index*i.ELEMENTS_PER_RECORD+3]}set indexFrom(t){this._packedRecords[this._index*i.ELEMENTS_PER_RECORD+3]=t}get indexCount(){return this._packedRecords[this._index*i.ELEMENTS_PER_RECORD+4]}set indexCount(t){this._packedRecords[this._index*i.ELEMENTS_PER_RECORD+4]=t}get vertexFrom(){return this._packedRecords[this._index*i.ELEMENTS_PER_RECORD+5]}set vertexFrom(t){this._packedRecords[this._index*i.ELEMENTS_PER_RECORD+5]=t}get vertexCount(){return this._packedRecords[this._index*i.ELEMENTS_PER_RECORD+6]}set vertexCount(t){this._packedRecords[this._index*i.ELEMENTS_PER_RECORD+6]=t}get sortKey(){return this._packedRecordsF32||(this._packedRecordsF32=new Float32Array(this._packedRecords.buffer)),this._packedRecordsF32[this._index*i.ELEMENTS_PER_RECORD+7]}set sortKey(t){this._packedRecordsF32||(this._packedRecordsF32=new Float32Array(this._packedRecords.buffer)),this._packedRecordsF32[this._index*i.ELEMENTS_PER_RECORD+7]=t}get index(){return this._index}size(){return this._packedRecords.length/i.ELEMENTS_PER_RECORD}next(){for(;++this._index<this.size()&&this.id===s;);return this._index<this.size()}peekId(){const t=(this._index+1)*i.ELEMENTS_PER_RECORD;return t>=this._packedRecords.length?0:this._packedRecords[t]}getCursor(){return this.copy()}copy(){const t=new i(this._packedRecords);return t._indexStart=this._indexStart,t._link=this._link,t._index=this._index,t._offsets=this._offsets,t._deletedCount=this._deletedCount,t}}i.ELEMENTS_PER_RECORD=_definitions_js__WEBPACK_IMPORTED_MODULE_0__.displayRecordIntPerElement,i.BYTES_PER_RECORD=i.ELEMENTS_PER_RECORD*Int32Array.BYTES_PER_ELEMENT;


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/cpuMapped/FreeList.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/cpuMapped/FreeList.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FreeList: () => (/* binding */ a),
/* harmony export */   List: () => (/* binding */ t)
/* harmony export */ });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
class t{constructor(a){if(this.next=null,!Array.isArray(a))return void(this.data=a);this.data=a[0];let e=this;for(let n=1;n<a.length;n++)e.next=new t([a[n]]),e=e.next}*values(){let t=this;for(;t;)yield t.data,t=t.next}forEach(t){let a=this;for(;a;)t(a.data),a=a.next}find(t){return t(this.data)?this:this.next?.find(t)}max(t,a=this){const e=t(this.data)>t(a.data)?this:a;return this.next?this.next.max(t,e):e}remove(t,a=null){return this===t?a?(a.next=this.next,a):this.next:this.next?.remove(t,this)??null}get last(){return this.next?this.next.last:this}}class a{constructor(a){this._head=null,null!=a&&(this._head=new t(a))}get head(){return this._head}maxAvailableSpace(){if(null==this._head)return 0;const t=this._head.max((t=>t.end-t.start));return t.data.end-t.data.start}firstFit(t){if(null==this._head)return null;let a=null,e=this._head;for(;e;){const n=e.data.end-e.data.start;if(n===t)return a?a.next=e.next:this._head=e.next,e.data.start;if(n>t){const a=e.data.start;return e.data.start+=t,a}a=e,e=e.next}return null}free(a,e){const n=a+e;if(null==this._head){const e=new t({start:a,end:n});return void(this._head=e)}if(n<=this._head.data.start){if(n===this._head.data.start)return void(this._head.data.start-=e);const r=new t({start:a,end:n});return r.next=this._head,void(this._head=r)}let r=this._head,s=r.next;for(;s;){if(s.data.start>=n){if(r.data.end===a){if(r.data.end+=e,r.data.end===s.data.start){const t=s.data.end-s.data.start;return r.data.end+=t,void(r.next=s.next)}return}if(s.data.start===n)return void(s.data.start-=e);const d=new t({start:a,end:n});return d.next=r.next,void(r.next=d)}r=s,s=s.next}if(a===r.data.end)return void(r.data.end+=e);const d=new t({start:a,end:n});r.next=d}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/util/debug.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/util/debug.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createDebugLogger: () => (/* binding */ n),
/* harmony export */   debugAttrUpdates: () => (/* binding */ l)
/* harmony export */ });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const n=(n,l)=>n&&((...n)=>l.warn("DEBUG:",...n))||(()=>null),l=!1;


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/util/vvFlagUtils.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/util/vvFlagUtils.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getVVFlags: () => (/* binding */ e)
/* harmony export */ });
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../enums.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/enums.js");
/* harmony import */ var _visualVariablesUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../visualVariablesUtils.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/visualVariablesUtils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
function e(e){if(!e)return _enums_js__WEBPACK_IMPORTED_MODULE_0__.WGLVVFlag.NONE;let r=0;for(const i of e)if("size"===i.type){const t=(0,_visualVariablesUtils_js__WEBPACK_IMPORTED_MODULE_1__.getTypeOfSizeVisualVariable)(i);r|=t,"outline"===i.target&&(r|=t<<4)}else"color"===i.type?r|=_enums_js__WEBPACK_IMPORTED_MODULE_0__.WGLVVFlag.COLOR:"opacity"===i.type?r|=_enums_js__WEBPACK_IMPORTED_MODULE_0__.WGLVVFlag.OPACITY:"rotation"===i.type&&(r|=_enums_js__WEBPACK_IMPORTED_MODULE_0__.WGLVVFlag.ROTATION);return r}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/engine/webgl/visualVariablesUtils.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/engine/webgl/visualVariablesUtils.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getTypeOfSizeVisualVariable: () => (/* binding */ l)
/* harmony export */ });
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/Logger.js */ "./node_modules/@arcgis/core/core/Logger.js");
/* harmony import */ var _enums_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./enums.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/enums.js");
/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Utils.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/Utils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
function l(l){return (0,_Utils_js__WEBPACK_IMPORTED_MODULE_3__.isNumber)(l.minDataValue)&&(0,_Utils_js__WEBPACK_IMPORTED_MODULE_3__.isNumber)(l.maxDataValue)&&null!=l.minSize&&null!=l.maxSize?_enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLVVFlag.SIZE_MINMAX_VALUE:(l.expression&&"view.scale"===l.expression||l.valueExpression&&"$view.scale"===l.valueExpression)&&Array.isArray(l.stops)?_enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLVVFlag.SIZE_SCALE_STOPS:(null!=l.field||l.expression&&"view.scale"!==l.expression||l.valueExpression&&"$view.scale"!==l.valueExpression)&&(Array.isArray(l.stops)||"levels"in l&&l.levels)?_enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLVVFlag.SIZE_FIELD_STOPS:(null!=l.field||l.expression&&"view.scale"!==l.expression||l.valueExpression&&"$view.scale"!==l.valueExpression)&&null!=l.valueUnit?_enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLVVFlag.SIZE_UNIT_VALUE:(_core_Logger_js__WEBPACK_IMPORTED_MODULE_1__["default"].getLogger("esri.views.2d.engine.webgl").error(new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("mapview-bad-type","Found invalid size VisualVariable",l)),_enums_js__WEBPACK_IMPORTED_MODULE_2__.WGLVVFlag.NONE)}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/layers/features/createSymbolSchema.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/features/createSymbolSchema.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createSymbolSchema: () => (/* binding */ i)
/* harmony export */ });
/* harmony import */ var _symbols_cim_CIMSymbolHelper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../symbols/cim/CIMSymbolHelper.js */ "./node_modules/@arcgis/core/symbols/cim/CIMSymbolHelper.js");
/* harmony import */ var _engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../engine/webgl/enums.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/enums.js");
/* harmony import */ var _engine_webgl_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../engine/webgl/materialKey/MaterialKey.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/materialKey/MaterialKey.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
function s(e){if("line-marker"===e.type){return{type:"line-marker",color:e.color?.toJSON(),placement:e.placement,style:e.style}}return e.constructor.fromJSON(e.toJSON()).toJSON()}function o(e){return (0,_engine_webgl_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_2__.hydrateMaterialKey)(e)}function i(e,t,r=!1){if(!e)return null;switch(e.type){case"simple-fill":case"picture-fill":return c(e,t,r);case"simple-marker":case"picture-marker":return h(e,t,r);case"simple-line":return y(e,t,r);case"text":return u(e,t,r);case"label":return m(e,t,r);case"cim":return{type:"cim",rendererKey:t.vvFlags,data:e.data,maxVVSize:t.maxVVSize};case"CIMSymbolReference":return{type:"cim",rendererKey:t.vvFlags,data:e,maxVVSize:t.maxVVSize};case"web-style":return{...s(e),type:"web-style",hash:e.hash(),rendererKey:t.vvFlags,maxVVSize:t.maxVVSize};default:throw new Error(`symbol not supported ${e.type}`)}}function m(e,r,l){const n=e.toJSON(),s=(0,_engine_webgl_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_2__.createMaterialKey)(_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_1__.WGLGeometryType.LABEL,{...r,placement:n.labelPlacement});return{materialKey:l?o(s):s,hash:e.hash(),...n,labelPlacement:n.labelPlacement}}function c(e,r,n){const i=(0,_engine_webgl_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_2__.createMaterialKey)(_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_1__.WGLGeometryType.FILL,r),m=n?o(i):i,c=e.clone(),y=c.outline,h=(0,_engine_webgl_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_2__.isOutlineFillSymbology)(r.symbologyType);h||(c.outline=null);const u={materialKey:m,hash:c.hash(),...s(c)};if(h)return u;const p=[];if(p.push(u),y){const e=(0,_engine_webgl_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_2__.createMaterialKey)(_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_1__.WGLGeometryType.LINE,{...r,isOutline:!0}),l={materialKey:n?o(e):e,hash:y.hash(),...s(y)};p.push(l)}return{type:"composite-symbol",layers:p,hash:p.reduce(((e,t)=>t.hash+e),"")}}function y(e,n,i){const m=(0,_engine_webgl_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_2__.isOutlineFillSymbology)(n.symbologyType)?_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_1__.WGLSymbologyType.DEFAULT:n.symbologyType,c=(0,_engine_webgl_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_2__.createMaterialKey)(_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_1__.WGLGeometryType.LINE,{...n,symbologyType:m}),y=i?o(c):c,h=e.clone(),u=h.marker;h.marker=null;const p=[];if(p.push({materialKey:y,hash:h.hash(),...s(h)}),u){const e=(0,_engine_webgl_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_2__.createMaterialKey)(_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_1__.WGLGeometryType.MARKER,n),r=i?o(e):e;u.color=u.color??h.color,p.push({materialKey:r,hash:u.hash(),lineWidth:h.width,...s(u)})}return{type:"composite-symbol",layers:p,hash:p.reduce(((e,t)=>t.hash+e),"")}}function h(r,l,n){if("simple-marker"===r.type&&("path"===r.style||r.outline&&"solid"!==r.outline.style&&"none"!==r.outline.style)){return i({type:"CIMSymbolReference",symbol:_symbols_cim_CIMSymbolHelper_js__WEBPACK_IMPORTED_MODULE_0__.CIMSymbolHelper.fromSimpleMarker(r)},l,n)}const m=(0,_engine_webgl_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_2__.createMaterialKey)(_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_1__.WGLGeometryType.MARKER,l),c=n?o(m):m,y=s(r);return{materialKey:c,hash:r.hash(),...y,angle:r.angle,maxVVSize:l.maxVVSize}}function u(e,r,l){const n=(0,_engine_webgl_materialKey_MaterialKey_js__WEBPACK_IMPORTED_MODULE_2__.createMaterialKey)(_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_1__.WGLGeometryType.TEXT,r),i=l?o(n):n,m=s(e);return{materialKey:i,hash:e.hash(),...m,angle:e.angle,maxVVSize:r.maxVVSize}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/layers/features/schemaUtils.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/features/schemaUtils.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   addAggregateFields: () => (/* binding */ k),
/* harmony export */   createMatcherSchema: () => (/* binding */ _),
/* harmony export */   createRendererAttributeSchema: () => (/* binding */ M),
/* harmony export */   createSchema: () => (/* binding */ w),
/* harmony export */   createSymbolSchema: () => (/* reexport safe */ _createSymbolSchema_js__WEBPACK_IMPORTED_MODULE_12__.createSymbolSchema),
/* harmony export */   createSymbolSchemaOptions: () => (/* binding */ T)
/* harmony export */ });
/* harmony import */ var _core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/arrayUtils.js */ "./node_modules/@arcgis/core/core/arrayUtils.js");
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/has.js */ "./node_modules/@arcgis/core/core/has.js");
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../core/Logger.js */ "./node_modules/@arcgis/core/core/Logger.js");
/* harmony import */ var _core_screenUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../core/screenUtils.js */ "./node_modules/@arcgis/core/core/screenUtils.js");
/* harmony import */ var _core_sql_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../core/sql.js */ "./node_modules/@arcgis/core/core/sql.js");
/* harmony import */ var _core_accessorSupport_diffUtils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../core/accessorSupport/diffUtils.js */ "./node_modules/@arcgis/core/core/accessorSupport/diffUtils.js");
/* harmony import */ var _layers_support_labelingInfo_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../layers/support/labelingInfo.js */ "./node_modules/@arcgis/core/layers/support/labelingInfo.js");
/* harmony import */ var _engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../engine/webgl/enums.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/enums.js");
/* harmony import */ var _engine_webgl_Utils_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../engine/webgl/Utils.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/Utils.js");
/* harmony import */ var _engine_webgl_techniques_utils_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../engine/webgl/techniques/utils.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/techniques/utils.js");
/* harmony import */ var _engine_webgl_util_vvFlagUtils_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../engine/webgl/util/vvFlagUtils.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/util/vvFlagUtils.js");
/* harmony import */ var _createSymbolSchema_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./createSymbolSchema.js */ "./node_modules/@arcgis/core/views/2d/layers/features/createSymbolSchema.js");
/* harmony import */ var _support_pixelBuffering_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./support/pixelBuffering.js */ "./node_modules/@arcgis/core/views/2d/layers/features/support/pixelBuffering.js");
/* harmony import */ var _support_rendererUtils_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./support/rendererUtils.js */ "./node_modules/@arcgis/core/views/2d/layers/features/support/rendererUtils.js");
/* harmony import */ var _support_clusterUtils_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../support/clusterUtils.js */ "./node_modules/@arcgis/core/views/2d/layers/support/clusterUtils.js");
/* harmony import */ var _support_util_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../support/util.js */ "./node_modules/@arcgis/core/views/2d/layers/support/util.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const x=_core_Logger_js__WEBPACK_IMPORTED_MODULE_3__["default"].getLogger("esri.views.2d.layers.features.schemaUtils"),h="ValidationError";function v(e){return e}function T(e,t){let r=0,i=0,n=_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.WGLSymbologyType.DEFAULT;if(null!=e){if(i=(0,_support_pixelBuffering_js__WEBPACK_IMPORTED_MODULE_13__.getPtMaxVVSize)(e,t),"visualVariables"in e&&(r=(0,_engine_webgl_util_vvFlagUtils_js__WEBPACK_IMPORTED_MODULE_11__.getVVFlags)(e.visualVariables||[]),"dot-density"===e.type&&(n=_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.WGLSymbologyType.DOT_DENSITY)),"heatmap"===e.type&&(n=_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.WGLSymbologyType.HEATMAP),"dictionary"===e.type)return{maxVVSize:i,vvFlags:r,symbologyType:_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.WGLSymbologyType.DEFAULT};if("pie-chart"===e.type)return{maxVVSize:i,vvFlags:r,symbologyType:_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.WGLSymbologyType.PIE_CHART};if(n!==_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.WGLSymbologyType.DOT_DENSITY&&n!==_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.WGLSymbologyType.HEATMAP){const t=e.getSymbols();"backgroundFillSymbol"in e&&e.backgroundFillSymbol&&t.push(e.backgroundFillSymbol);let r=!0,i=!0;for(const e of t)if("cim"!==e.type&&"web-style"!==e.type||(i=!1),"simple-fill"===e.type||"picture-fill"===e.type){const t=e.outline,n=t&&"none"!==t.style&&"solid"!==t.style,s="simple-fill"===e.type&&"none"!==e.style&&"solid"!==e.style;n&&(r=!1),("picture-fill"===e.type||s||n)&&(i=!1)}r?n=i?_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.WGLSymbologyType.OUTLINE_FILL_SIMPLE:_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.WGLSymbologyType.OUTLINE_FILL:i&&(n=_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.WGLSymbologyType.SIMPLE)}}return{vvFlags:r,maxVVSize:i,symbologyType:n}}let S=null;function w(e){if((0,_core_has_js__WEBPACK_IMPORTED_MODULE_2__["default"])("esri-2d-update-debug")){const t=E(e,!0);console.debug("Created new schema",t),console.debug("Schema diff",(0,_core_accessorSupport_diffUtils_js__WEBPACK_IMPORTED_MODULE_6__.diff)(S,t)),S=t}return E(e)}function E(e,t=!1){try{const r=R(e,t),i=D(e),s={};r.map((t=>F(s,e,t)));const l=null!=e.subtypeCode?`${e.subtypeField} = ${e.subtypeCode}`:null,o=(0,_core_sql_js__WEBPACK_IMPORTED_MODULE_5__.sqlAnd)(e.definitionExpression,l);return{source:{definitionExpression:o,fields:e.fields.map((e=>e.toJSON())),gdbVersion:e.gdbVersion,historicMoment:e.historicMoment?.getTime(),outFields:e.availableFields,pixelBuffer:e.pixelBuffer,spatialReference:e.spatialReference.toJSON(),timeExtent:e.timeExtent?.toJSON(),customParameters:e.customParameters},attributes:{fields:{},indexCount:0},processors:r,tileRenderer:i,targets:s}}catch(r){if(r.fieldName===h)return x.error(r),null;throw r}}function F(e,r,i){switch(i.target){case"feature":return void O(e,V(r),i);case"aggregate":{if(!("featureReduction"in r))return;const n=r.featureReduction;switch(n?.type){case"selection":throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](h,"Mapview does not support `selection` reduction type",n);case"binning":return O(e,V(r),i),void N(e,n,r.fields.map((e=>e.toJSON())),i);case"cluster":return O(e,V(r),i),void L(e,n,r.fields.map((e=>e.toJSON())),i)}}}}function I(e,t){for(const r in t){const i=t[r];if(i.target!==e.name)continue;const n=e.attributes[r];if(n?.context){const e=n.context;e.mesh=e.mesh||i.context?.mesh,e.storage=e.storage||i.context?.storage}else e.attributes[r]=i}return e}function V(e){return[e.filter?.toJSON()??null,e.featureEffect?.filter?.toJSON()??null]}function O(e,t,r){return e.feature||(e.feature={name:"feature",input:"source",filters:t,attributes:{}}),I(e.feature,r.attributes.fields),e}function z(e,r){const{onStatisticExpression:i,onStatisticField:n,statisticType:s}=e;switch(s){case"min":case"max":case"avg":case"avg_angle":case"sum":case"count":return"esriFieldTypeDouble";case"mode":{if(i){const{returnType:r}=i;return r?"string"===r?"esriFieldTypeString":"esriFieldTypeDouble":(x.error(new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](h,"Unable to infer type of aggregateField with onStatisticExpression. ReturnType is not defined",e)),"esriFieldTypeString")}const s=r.find((e=>e.name===n));return s?s.type:(x.error(new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](h,"Unable to infer type of aggregateField with onStatisticExpression. ReturnType is not defined",e)),"esriFieldTypeString")}}}function N(e,t,r,i){return e.aggregate||(e.aggregate={name:"aggregate",type:"bin",filters:null,input:"feature",params:{fixedBinLevel:t.fixedBinLevel,fields:(t.fields??[]).map((e=>({...e.toJSON(),type:z(e,r)})))},attributes:{}}),I(e.aggregate,i.attributes.fields),e}function L(e,t,r,n){const s=n.aggregateFields??[],l=new Set;for(const i of s)l.add(i.name);for(const i of t?.fields??[])l.has(i.name)||s.push(i);return e.aggregate||(e.aggregate={name:"aggregate",type:"cluster",input:"feature",filters:null,attributes:{},params:{clusterRadius:(0,_core_screenUtils_js__WEBPACK_IMPORTED_MODULE_4__.pt2px)(t.clusterRadius/2),clusterPixelBuffer:64*Math.ceil((0,_core_screenUtils_js__WEBPACK_IMPORTED_MODULE_4__.pt2px)(t.clusterMaxSize)/64),fields:s.map((e=>({...e.toJSON(),type:z(e,r)})))}}),I(e.aggregate,n.attributes.fields),e}function M(e,t){return t.field?j(e,{...t,type:"field",field:t.field}):t.valueExpression?j(e,{...t,type:"expression",valueExpression:t.valueExpression}):{field:void 0,fieldIndex:void 0}}function j(e,t){switch(t.type){case"expression":{const r=v(t.valueExpression);if(!e.fields[r]){const i=e.indexCount++;e.fields[r]={...t,name:r,fieldIndex:i}}return{fieldIndex:e.fields[r].fieldIndex}}case"label-expression":{const r=v(JSON.stringify(t.label));if(!e.fields[r]){const i=e.indexCount++;e.fields[r]={...t,name:r,fieldIndex:i}}return{fieldIndex:e.fields[r].fieldIndex}}case"field":{const r=t.field;return"aggregate"===t.target&&e.fields[r]||(e.fields[r]={...t,name:r}),{field:r}}case"statistic":return e.fields[t.name]={...t},{field:t.name}}}function R(e,t=!1){const r=new Array;let i=0;return r.push(A(e,i++,t)),r}function U(e,t,r,i,n,s=!1){const l=j(e,{type:"label-expression",target:r,context:{mesh:!0},resultType:"string",label:{labelExpression:t.labelExpression,labelExpressionInfo:t.labelExpressionInfo?{expression:t.labelExpressionInfo.expression}:null,symbol:!!t.symbol,where:t.where}}),{fieldIndex:o}=l;return{...(0,_createSymbolSchema_js__WEBPACK_IMPORTED_MODULE_12__.createSymbolSchema)(t,n,s),fieldIndex:o,target:r,index:i}}function B(e,r,i){const n="featureReduction"in r&&r.featureReduction;if(!n)return{fields:[],labels:[],matcher:void 0,rendererOverride:void 0};const s="aggregate",o=[];let a=null,u=(0,_support_util_js__WEBPACK_IMPORTED_MODULE_16__.toJSONGeometryType)(r.geometryType),d=[],p=null;if(n)switch(n.type){case"selection":return x.error(new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](h,"Mapview does not support `selection` reduction type",n)),{fields:[],labels:[],matcher:void 0,rendererOverride:void 0};case"cluster":case"binning":if(o.push(...n.fields??[]),"cluster"===n.type?u="esriGeometryPoint":"binning"===n.type&&(u="esriGeometryPolygon"),n.renderer&&!n.renderer.authoringInfo?.isAutoGenerated){if("cluster"===n.type){const{renderer:e}=(0,_support_clusterUtils_js__WEBPACK_IMPORTED_MODULE_15__.injectDynamicLevelDependentSizeVisualVariable)(n.renderer,n,null);p=e}else p=n.renderer;const t=T(n.renderer,n);a=_(e,s,n.renderer,t,i),d=n&&n.labelsVisible&&n.labelingInfo||[]}else if("cluster"===n.type){if(p=(0,_support_clusterUtils_js__WEBPACK_IMPORTED_MODULE_15__.createClusterRenderer)(o,r.renderer,n,null,!0),n.symbol){const e=T(p,n);a={type:"simple",symbol:(0,_createSymbolSchema_js__WEBPACK_IMPORTED_MODULE_12__.createSymbolSchema)(n.symbol,e,i),symbologyType:e.symbologyType}}d=n&&n.labelsVisible&&n.labelingInfo||[]}}k(e,o);return{labels:(0,_layers_support_labelingInfo_js__WEBPACK_IMPORTED_MODULE_7__.validateLabelingInfo)(d,"binning"===n.type?"esriGeometryPolygon":u),matcher:a,fields:o,rendererOverride:p}}function A(e,r,i=!1){const n={indexCount:0,fields:{}},s="featureReduction"in e?e.featureReduction??void 0:void 0,a=s?"aggregate":"feature";if("sublayers"in e){const r={type:"subtype",subtypeField:e.subtypeField,renderers:{},symbologyType:_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.WGLSymbologyType.DEFAULT},s={type:"subtype",mapping:{},target:"feature",subtypeField:e.subtypeField},l={type:"subtype",classes:{}},u={type:"symbol",target:"feature",aggregateFields:[],attributes:n,storage:s,mesh:{matcher:r,aggregateMatcher:null,labels:l,sortKey:null}},f=new Set;let p=0;for(const{renderer:c,subtypeCode:y,labelingInfo:m,labelsVisible:g}of e.sublayers){let e=0;"visualVariables"in c&&c.visualVariables&&(c.visualVariables.some((e=>"rotation"!==e.type))&&x.warnOnce("SubtypeGroupLayer currently only supports rotation visualVariables. All other visualVariable types will be ignored."),e=(0,_engine_webgl_util_vvFlagUtils_js__WEBPACK_IMPORTED_MODULE_11__.getVVFlags)(c.visualVariables.filter((e=>"size"!==e.type))));const u={symbologyType:_engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_8__.WGLSymbologyType.DEFAULT,vvFlags:e,maxVVSize:0},b=_(n,a,c,u,i),v=C(n,a,c),T=g&&m;if("dictionary"===b.type)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](h,"Dictionary renderer is not supported in subtype layers");if("subtype"===b.type)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](h,"Nested subtype renderers is not supported");if(null!=v&&"subtype"===v.type)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](h,"Nested subtype storage is not supported");if(null!=v?.attributeMapping)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](h,"Non-visual-variable attributes are not supported in subtype layers");if("heatmap"===b.type)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](h,"Heatmaps are not supported in subtype layers");if("pie-chart"===b.type)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](h,"Pie-charts are not supported in subtype layers");if(f.has(y))throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](h,"Subtype codes for sublayers must be unique");f.add(y),r.renderers[y]=b,s.mapping[y]=v,T&&(l.classes[y]=T.map((e=>U(n,e,"feature",p++,u,i))))}return u}if("heatmap"===e.renderer?.type&&"raster"===(0,_support_rendererUtils_js__WEBPACK_IMPORTED_MODULE_14__.getSupportedHeatmapRenderer)()){const{radius:t,fieldOffset:r,field:i}=e.renderer;return{type:"heatmap",aggregateFields:[],attributes:n,target:a,storage:null,mesh:{radius:t,fieldOffset:r,field:M(n,{target:a,field:i,resultType:"numeric"}).field}}}const u=B(n,e,i),f=(0,_support_util_js__WEBPACK_IMPORTED_MODULE_16__.toJSONGeometryType)(e.geometryType),p=u.rendererOverride??e.renderer,y=T(p,s),m=_(n,a,p,y,i),g=C(n,a,p),v=P(n,e.orderBy,e.renderer,s),S=e.labelsVisible&&e.labelingInfo||[],w=(0,_layers_support_labelingInfo_js__WEBPACK_IMPORTED_MODULE_7__.validateLabelingInfo)(S,f);let E=0;const F=[...w.map((e=>U(n,e,"feature",E++,y,i))),...u.labels.map((e=>U(n,e,"aggregate",E++,y,i)))];return{type:"symbol",target:a,attributes:n,aggregateFields:u.fields,storage:g,mesh:{matcher:m,labels:{type:"simple",classes:F},aggregateMatcher:u.matcher,sortKey:v}}}function D(e){return"heatmap"===e.renderer?.type&&"raster"===(0,_support_rendererUtils_js__WEBPACK_IMPORTED_MODULE_14__.getSupportedHeatmapRenderer)()?{type:"heatmap"}:{type:"symbol"}}function P(e,r,i,n){if(null!=n)return null;if(null!=r&&r.length){r.length>1&&x.warn(`Layer rendering currently only supports ordering by 1 orderByInfo, but found ${r.length}. All but the first will be discarded`);const i=r[0],n="ascending"===i.order?"asc":"desc";if(i.field)return{field:i.field,order:n};if(i.valueExpression){return{fieldIndex:j(e,{type:"expression",target:"feature",valueExpression:i.valueExpression,resultType:"numeric"}).fieldIndex,order:n}}return x.error(new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](h,"Expected to find a field or valueExpression for OrderByInfo",i)),null}if(null!=i&&"unique-value"===i.type&&i.orderByClassesEnabled){return{byRenderer:!0,order:"asc"}}return null}function k(e,t){const r={mesh:!0,storage:!0};for(const i of t){const{name:t,onStatisticField:n,onStatisticExpression:s,statisticType:l}=i;let o,a;const u="numeric",d="feature";if(s){a=j(e,{type:"expression",target:d,valueExpression:s.expression,resultType:u}).fieldIndex}else{o=j(e,{type:"field",target:d,field:n}).field}j(e,{type:"statistic",target:"aggregate",name:t,context:r,inField:o,inFieldIndex:a,statisticType:l})}}function C(e,t,r){let i;switch(r.type){case"simple":case"class-breaks":case"unique-value":case"dictionary":i={visualVariables:!0,attributes:null};break;default:i=(0,_engine_webgl_techniques_utils_js__WEBPACK_IMPORTED_MODULE_10__.getTechniqueFromRenderer)(r).getStorageSpec(r)}return J(e,t,i,r)}function J(e,t,r,i){if(null==r)return null;const{visualVariables:n,attributes:s}=r;let l=null;n&&"visualVariables"in i&&(l=q(e,t,i.visualVariables));const o=null!=l?4:0;let a=null;return null!=s&&(a=s.map(((r,i)=>{const{field:n,fieldIndex:s}=M(e,{valueExpression:r.valueExpression,field:r.field,resultType:"numeric",target:t});return{binding:i+o,field:n,fieldIndex:s}}))),{type:"simple",target:t,attributeMapping:a,vvMapping:l}}function q(t,r,i){if(!i?.length)return[];const n={storage:!0},s="numeric";return (0,_support_rendererUtils_js__WEBPACK_IMPORTED_MODULE_14__.simplifyVisualVariables)(i).map((e=>{const i=(0,_engine_webgl_Utils_js__WEBPACK_IMPORTED_MODULE_9__.getVVType)(e.type),{field:l,fieldIndex:o}=M(t,{target:r,valueExpression:e.valueExpression,field:e.field,context:n,resultType:s});switch(e.type){case"size":return"$view.scale"===e.valueExpression?null:{type:"size",binding:i,field:l,fieldIndex:o,normalizationField:M(t,{target:r,field:e.normalizationField,context:n,resultType:s}).field,valueRepresentation:e.valueRepresentation??null};case"color":return{type:"color",binding:i,field:l,fieldIndex:o,normalizationField:M(t,{target:r,field:e.normalizationField,context:n,resultType:s}).field};case"opacity":return{type:"opacity",binding:i,field:l,fieldIndex:o,normalizationField:M(t,{target:r,field:e.normalizationField,context:n,resultType:s}).field};case"rotation":return{type:"rotation",binding:i,field:l,fieldIndex:o}}})).filter(_core_arrayUtils_js__WEBPACK_IMPORTED_MODULE_0__.isSome)}function _(e,t,r,i,n=!1){const s=e??{indexCount:0,fields:{}};switch(r.type){case"simple":case"dot-density":return G(s,r,i,n);case"class-breaks":return $(s,t,r,i,n);case"unique-value":return K(s,t,r,i,n);case"dictionary":return Y(s,r,i,n);case"heatmap":return Q(s,r,i,n);case"pie-chart":return H(s,r,i,n)}}function G(e,t,r,i=!1){const n=t.getSymbols(),s=n.length?n[0]:null;return{type:"simple",symbol:(0,_createSymbolSchema_js__WEBPACK_IMPORTED_MODULE_12__.createSymbolSchema)(s,r,i),symbologyType:r.symbologyType}}function H(e,t,r,i=!1){const n=t.getSymbols(),s=n[0],l=n.length>1?n[1]:null;return{type:"pie-chart",markerSymbol:(0,_createSymbolSchema_js__WEBPACK_IMPORTED_MODULE_12__.createSymbolSchema)(s,r,i),fillSymbol:(0,_createSymbolSchema_js__WEBPACK_IMPORTED_MODULE_12__.createSymbolSchema)(l,r,i),symbologyType:r.symbologyType}}function $(e,t,r,i,n=!1){const s={mesh:!0,use:"renderer.field"},l=r.backgroundFillSymbol,{field:o,fieldIndex:a}=M(e,{target:t,field:r.field,valueExpression:r.valueExpression,resultType:"numeric",context:s}),u=r.normalizationType,d="log"===u?"esriNormalizeByLog":"percent-of-total"===u?"esriNormalizeByPercentOfTotal":"field"===u?"esriNormalizeByField":null,p=r.classBreakInfos.map((e=>({symbol:(0,_createSymbolSchema_js__WEBPACK_IMPORTED_MODULE_12__.createSymbolSchema)(e.symbol,i,n),min:e.minValue,max:e.maxValue}))).sort(((e,t)=>e.min-t.min));return{type:"interval",attributes:e.fields,field:o,fieldIndex:a,backgroundFillSymbol:(0,_createSymbolSchema_js__WEBPACK_IMPORTED_MODULE_12__.createSymbolSchema)(l,i,n),defaultSymbol:(0,_createSymbolSchema_js__WEBPACK_IMPORTED_MODULE_12__.createSymbolSchema)(r.defaultSymbol,i,n),intervals:p,normalizationField:r.normalizationField,normalizationTotal:r.normalizationTotal,normalizationType:d,isMaxInclusive:r.isMaxInclusive,symbologyType:i.symbologyType}}function K(e,r,i,n,s=!1){const l=[],o=i.backgroundFillSymbol,a={target:r,context:{mesh:!0},resultType:"string"};if(i.field&&"string"!=typeof i.field)throw new _core_Error_js__WEBPACK_IMPORTED_MODULE_1__["default"](h,"Expected renderer.field to be a string",i);const{field:u,fieldIndex:d}=M(e,{...a,field:i.field,valueExpression:i.valueExpression});for(const t of i.uniqueValueInfos??[])l.push({value:""+t.value,symbol:(0,_createSymbolSchema_js__WEBPACK_IMPORTED_MODULE_12__.createSymbolSchema)(t.symbol,n,s)});return{type:"map",attributes:e.fields,field:u,fieldIndex:d,field2:M(e,{...a,field:i.field2}).field,field3:M(e,{...a,field:i.field3}).field,fieldDelimiter:i.fieldDelimiter??void 0,backgroundFillSymbol:(0,_createSymbolSchema_js__WEBPACK_IMPORTED_MODULE_12__.createSymbolSchema)(o,n),defaultSymbol:(0,_createSymbolSchema_js__WEBPACK_IMPORTED_MODULE_12__.createSymbolSchema)(i.defaultSymbol,n),map:l,symbologyType:n.symbologyType}}function Y(e,t,r,i=!1){return{type:"dictionary",config:t.config,fieldMap:t.fieldMap,scaleExpression:t.scaleExpression,url:t.url,symbolOptions:r,symbologyType:r.symbologyType}}function Q(e,t,r,i=!1){const n=t.getSymbols(),s=n.length?n[0]:null;return{type:"heatmap",symbol:(0,_createSymbolSchema_js__WEBPACK_IMPORTED_MODULE_12__.createSymbolSchema)(s,r,i),symbologyType:r.symbologyType}}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/layers/features/support/pixelBuffering.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/features/support/pixelBuffering.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   computePxBuffer: () => (/* binding */ c),
/* harmony export */   getPtMaxVVSize: () => (/* binding */ m)
/* harmony export */ });
/* harmony import */ var _core_screenUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../core/screenUtils.js */ "./node_modules/@arcgis/core/core/screenUtils.js");
/* harmony import */ var _symbols_cim_CIMSymbolHelper_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../symbols/cim/CIMSymbolHelper.js */ "./node_modules/@arcgis/core/symbols/cim/CIMSymbolHelper.js");
/* harmony import */ var _symbols_cim_Rect_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../symbols/cim/Rect.js */ "./node_modules/@arcgis/core/symbols/cim/Rect.js");
/* harmony import */ var _engine_webgl_definitions_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../engine/webgl/definitions.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/definitions.js");
/* harmony import */ var _graphics_graphicsUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../graphics/graphicsUtils.js */ "./node_modules/@arcgis/core/views/2d/layers/graphics/graphicsUtils.js");
/* harmony import */ var _support_cimSymbolUtils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../support/cimSymbolUtils.js */ "./node_modules/@arcgis/core/views/2d/layers/support/cimSymbolUtils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const a={"simple-marker":1,"picture-marker":1,text:0,"simple-line":0,"simple-fill":0,"picture-fill":0,cim:1,"web-style":1},o=.707;function m(t,e){if(!("visualVariables"in t))return 0;if(!t.hasVisualVariables("size"))return 0;const r=t.getVisualVariablesForType("size");if(!r[0])return 0;const i=r[0];if(e&&"cluster_count"===i.field&&"cluster"===e.type)return e.clusterMaxSize;if("outline"===i.target)return 0;if("stops"===i.transformationType)return i.stops.map((t=>t.size)).reduce(g,0);if("clamped-linear"===i.transformationType){let t=-1/0,e=-1/0;return t="number"==typeof i.maxSize?i.maxSize:i.maxSize.stops.map((t=>t.size)).reduce(g,0),e="number"==typeof i.minSize?i.minSize:i.minSize.stops.map((t=>t.size)).reduce(g,0),Math.max(t,e)}return"real-world-size"===i.transformationType?30:void 0}function u(t){return t.type in a}async function c(e,r,i,n,s,a){if(!e||a&&"cluster"===a.type)return 0;if("heatmap"===e.type)return Math.round((0,_core_screenUtils_js__WEBPACK_IMPORTED_MODULE_0__.pt2px)(e.radius));if("dot-density"===e.type)return 0;if("dictionary"===e.type)return"esriGeometryPoint"===r||"esriGeometryMultipoint"===r?100:200;const o=e.getSymbols(),u=m(e),c=[];for(const t of o)c.push(x(t,u,i,r,n,s));const l=await Promise.all(c);return (0,_core_screenUtils_js__WEBPACK_IMPORTED_MODULE_0__.pt2px)(l.reduce(g,0))}const l=[0,0,0,0];function p(t,e){return t??e}function f(t,e){return null==t.outline?e:p(t.outline.width,e)}const y={sdf:!0,code:99,metrics:_engine_webgl_definitions_js__WEBPACK_IMPORTED_MODULE_3__.averageGlyphMosaicItem.metrics,rect:new _symbols_cim_Rect_js__WEBPACK_IMPORTED_MODULE_2__["default"](0,0,24,24),page:0,textureBinding:2};function h(t){const e=t.text&&t.text.length;if(!e)return{glyphMosaicItems:[y]};const r=[];for(let i=0;i<e;i++)r.push({...y,code:t.text.charCodeAt(i)});return{glyphMosaicItems:r}}async function d(t,r,i,a,m,u){if("simple-marker"===t.type){const e=Math.max(p(t.size,12),r);return M(t)+e*o}if("picture-marker"===t.type){const e=Math.max(p(t.height,12),r),i=p(t.width,12)*(e/p(t.height,12))/2,n=e/2;return M(t)+Math.sqrt(i*i+n*n)}if("text"===t.type){const e=h(t);(0,_graphics_graphicsUtils_js__WEBPACK_IMPORTED_MODULE_4__.getTextSymbolSize)(l,t.toJSON(),e);const r=Math.abs(l[0]),i=Math.abs(l[1]),s=l[2],a=l[3];return Math.max(r,i)+Math.max(s,a)}if("simple-line"===t.type){const e=t,i=Math.max(p(e.width,.75),r)/2;return e.marker?Math.max(6*e.width,2*r):i}if("simple-fill"===t.type||"picture-fill"===t.type)return Math.max(f(t,0),r)/2;if("cim"===t.type){const n={geometryType:a,fields:m,spatialReference:u},o={type:"cim",rendererKey:0,data:t.data,maxVVSize:r};await (0,_support_cimSymbolUtils_js__WEBPACK_IMPORTED_MODULE_5__.expandSymbol)(o,n,i);const c=_symbols_cim_CIMSymbolHelper_js__WEBPACK_IMPORTED_MODULE_1__.CIMSymbolHelper.getEnvelope(t.data,null,i);return c?Math.sqrt(c.width*c.width+c.height*c.height):0}return"web-style"===t.type?d(await t.fetchCIMSymbol(),r,i,a,m,u):0}async function x(t,e,r,i,n,s){return u(t)?Math.min(await d(t,e,r,i,n,s),75):0}function M(t){const e=p(t.xoffset,0),r=p(t.yoffset,0);return Math.sqrt(e*e+r*r)}function g(t,e){return Math.max(t,e)}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/layers/features/support/rendererUtils.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/features/support/rendererUtils.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getSupportedHeatmapRenderer: () => (/* binding */ g),
/* harmony export */   isRendererSupported: () => (/* binding */ h),
/* harmony export */   simplifyVVRenderer: () => (/* binding */ n),
/* harmony export */   simplifyVisualVariables: () => (/* binding */ i)
/* harmony export */ });
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../core/has.js */ "./node_modules/@arcgis/core/core/has.js");
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../core/Logger.js */ "./node_modules/@arcgis/core/core/Logger.js");
/* harmony import */ var _core_screenUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../core/screenUtils.js */ "./node_modules/@arcgis/core/core/screenUtils.js");
/* harmony import */ var _webgl_capabilities_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../webgl/capabilities.js */ "./node_modules/@arcgis/core/views/webgl/capabilities.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const s=8,l=s-2,a=_core_Logger_js__WEBPACK_IMPORTED_MODULE_2__["default"].getLogger("esri.views.2d.layers.features.support.rendererUtils"),n=e=>{if(!("visualVariables"in e)||!e.visualVariables?.length)return e;const r=e.clone(),t=r.visualVariables.map((e=>u(e)?p(e):e));return r.visualVariables=t,r};function i(e){return e.map((e=>u(e)?p(e.clone()):e))}function u(e){return("size"===e.type||"color"===e.type||"opacity"===e.type)&&null!=e.stops}function p(e){return e.stops=m(e.type,e.stops??[]),e}function c(e,r,t){return(1-t)*e+t*r}function f(e,r){const[o,...s]=r,a=s.pop(),n=s[0].value,i=s[s.length-1].value,u=(i-n)/l,p=[];for(let l=n;l<i;l+=u){let o=0;for(;l>=s[o].value;)o++;const a=s[o],n=r[o-1],i=l-n.value,u=a.value===n.value?1:i/(a.value-n.value);if("color"===e){const e=s[o],t=r[o-1],a=e.color.clone();a.r=c(t.color.r,a.r,u),a.g=c(t.color.g,a.g,u),a.b=c(t.color.b,a.b,u),a.a=c(t.color.a,a.a,u),p.push({value:l,color:a,label:e.label})}else if("size"===e){const e=s[o],a=r[o-1],n=(0,_core_screenUtils_js__WEBPACK_IMPORTED_MODULE_3__.toPt)(e.size),i=c((0,_core_screenUtils_js__WEBPACK_IMPORTED_MODULE_3__.toPt)(a.size),n,u);p.push({value:l,size:i,label:e.label})}else{const e=s[o],t=c(r[o-1].opacity,e.opacity,u);p.push({value:l,opacity:t,label:e.label})}}return[o,...p,a]}function b(e){const[r,...t]=e,o=t.pop();for(;t.length>l;){let e=0,r=0;for(let o=1;o<t.length;o++){const s=t[o-1],l=t[o],a=Math.abs(l.value-s.value);a>r&&(r=a,e=o)}t.splice(e,1)}return[r,...t,o]}function m(e,r){return r.length<=s?r:(a.warn(`Found ${r.length} Visual Variable stops, but MapView only supports ${s}. Displayed stops will be simplified.`),r.length>2*s?f(e,r):b(r))}function g(){if((0,_core_has_js__WEBPACK_IMPORTED_MODULE_1__["default"])("heatmap-force-raster"))return"raster";const{supportsTextureFloat:e,supportsTextureHalfFloat:r,supportsColorBufferFloat:t,supportsColorBufferFloatBlend:s,supportsColorBufferHalfFloat:l}=(0,_webgl_capabilities_js__WEBPACK_IMPORTED_MODULE_4__.getWebGLCapabilities)("2d");return e&&t&&s||r&&l?"symbol":(0,_core_has_js__WEBPACK_IMPORTED_MODULE_1__["default"])("heatmap-allow-raster-fallback")?"raster":"none"}function h(r){if(!r)return!0;switch(r.type){case"dot-density":if(!(0,_webgl_capabilities_js__WEBPACK_IMPORTED_MODULE_4__.getWebGLCapabilities)("2d").supportsTextureFloat)return a.error(new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("webgl-missing-extension","Missing WebGL extension OES_Texture_Float which is required for DotDensity")),!1;break;case"heatmap":{const r=g();if("none"===r||"raster"===r&&!(0,_core_has_js__WEBPACK_IMPORTED_MODULE_1__["default"])("heatmap-force-raster")){const t=(0,_webgl_capabilities_js__WEBPACK_IMPORTED_MODULE_4__.getWebGLCapabilities)("2d"),s=["supportsTextureFloat","supportsTextureHalfFloat","supportsColorBufferFloat","supportsColorBufferFloatBlend","supportsColorBufferHalfFloat"].filter((e=>!t[e])).join(", ");if("none"===r)return a.errorOnce(new _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]("webgl-missing-extension",`Missing WebGL${t.type} requirements for Heatmap: ${s}`)),!1;"raster"===r&&a.warnOnce(`Missing WebGL${t.type} requirements for accelerated Heatmap: ${s}. Feature support may be limited.`)}break}}return!0}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/layers/features/tileRenderers/support/visualVariablesUtils.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/features/tileRenderers/support/visualVariablesUtils.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   convertColorVariable: () => (/* binding */ m),
/* harmony export */   convertVisualVariables: () => (/* binding */ c),
/* harmony export */   getVisualVariableSizeValueRepresentationRatio: () => (/* binding */ l),
/* harmony export */   normalizeSizeElement: () => (/* binding */ u),
/* harmony export */   normalizeSizeStops: () => (/* binding */ a),
/* harmony export */   stopToSizeStop: () => (/* binding */ r)
/* harmony export */ });
/* harmony import */ var _core_screenUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../core/screenUtils.js */ "./node_modules/@arcgis/core/core/screenUtils.js");
/* harmony import */ var _engine_webgl_color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../engine/webgl/color.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/color.js");
/* harmony import */ var _engine_webgl_definitions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../engine/webgl/definitions.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/definitions.js");
/* harmony import */ var _engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../engine/webgl/enums.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/enums.js");
/* harmony import */ var _engine_webgl_visualVariablesUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../engine/webgl/visualVariablesUtils.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/visualVariablesUtils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
function l(e,t){if(!e||!t)return e;switch(t){case"radius":case"distance":return 2*e;case"diameter":case"width":return e;case"area":return Math.sqrt(e)}return e}function r(t){return{value:t.value,size:(0,_core_screenUtils_js__WEBPACK_IMPORTED_MODULE_0__.toPt)(t.size)}}function a(e){return(e??[]).map((e=>r(e)))}function u(t){if("string"==typeof t||"number"==typeof t)return (0,_core_screenUtils_js__WEBPACK_IMPORTED_MODULE_0__.toPt)(t);const s=t;return{type:"size",expression:s.expression,stops:a(s.stops)}}const p=e=>{const s=[],o=[],i=a(e),l=i.length;for(let r=0;r<6;r++){const e=i[Math.min(r,l-1)];s.push(e.value),o.push(null==e.size?_engine_webgl_definitions_js__WEBPACK_IMPORTED_MODULE_2__.nanMagicNumber:(0,_core_screenUtils_js__WEBPACK_IMPORTED_MODULE_0__.pt2px)(e.size))}return{values:new Float32Array(s),sizes:new Float32Array(o)}};function c(e){const t=e&&e.length>0?{}:null,s=t?{}:null;if(!t||!s)return{vvFields:t,vvRanges:s};for(const n of e)if(n.field&&(t[n.type]=n.field),"size"===n.type){s.size||(s.size={});const e=n;switch((0,_engine_webgl_visualVariablesUtils_js__WEBPACK_IMPORTED_MODULE_4__.getTypeOfSizeVisualVariable)(e)){case _engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.WGLVVFlag.SIZE_MINMAX_VALUE:s.size.minMaxValue={minDataValue:e.minDataValue,maxDataValue:e.maxDataValue,minSize:u(e.minSize),maxSize:u(e.maxSize)};break;case _engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.WGLVVFlag.SIZE_SCALE_STOPS:s.size.scaleStops={stops:a(e.stops)};break;case _engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.WGLVVFlag.SIZE_FIELD_STOPS:if(e.levels){const t={};for(const s in e.levels)t[s]=p(e.levels[s]);s.size.fieldStops={type:"level-dependent",levels:t}}else s.size.fieldStops={type:"static",...p(e.stops)};break;case _engine_webgl_enums_js__WEBPACK_IMPORTED_MODULE_3__.WGLVVFlag.SIZE_UNIT_VALUE:s.size.unitValue={unit:e.valueUnit,valueRepresentation:e.valueRepresentation??void 0}}}else if("color"===n.type)s.color=m(n);else if("opacity"===n.type)s.opacity=f(n);else if("rotation"===n.type){const e=n;s.rotation={type:e.rotationType}}return{vvFields:t,vvRanges:s}}function f(e){const t={values:[0,0,0,0,0,0,0,0],opacities:[0,0,0,0,0,0,0,0]};if("string"==typeof e.field){if(!e.stops)return null;{if(e.stops.length>8)return null;const s=e.stops;for(let e=0;e<8;++e){const n=s[Math.min(e,s.length-1)];t.values[e]=n.value,t.opacities[e]=n.opacity}}}else{if(!(e.stops&&e.stops.length>=0))return null;{const s=e.stops&&e.stops.length>=0?e.stops[0].opacity:0;for(let e=0;e<8;e++)t.values[e]=1/0,t.opacities[e]=s}}return t}function v(e,t,s){e[4*t]=s.r/255,e[4*t+1]=s.g/255,e[4*t+2]=s.b/255,e[4*t+3]=s.a}function m(e){if(null==e)return null;if(e.normalizationField)return null;const t={field:null,values:[0,0,0,0,0,0,0,0],colors:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]};if("string"==typeof e.field){if(!e.stops)return null;{if(e.stops.length>8)return null;t.field=e.field;const s=e.stops;for(let e=0;e<8;++e){const n=s[Math.min(e,s.length-1)];t.values[e]=n.value,v(t.colors,e,n.color)}}}else{if(!(e.stops&&e.stops.length>=0))return null;{const s=e.stops&&e.stops.length>=0&&e.stops[0].color;for(let e=0;e<8;e++)t.values[e]=1/0,v(t.colors,e,s)}}for(let n=0;n<32;n+=4)(0,_engine_webgl_color_js__WEBPACK_IMPORTED_MODULE_1__.premultiplyAlpha)(t.colors,n,!0);return t}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/layers/graphics/graphicsUtils.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/graphics/graphicsUtils.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   getTextSymbolSize: () => (/* binding */ d),
/* harmony export */   graphicGeometryToNumber: () => (/* binding */ h),
/* harmony export */   intersectingInternationalDateline: () => (/* binding */ g),
/* harmony export */   isMarkerSymbol: () => (/* binding */ p),
/* harmony export */   isTextSymbol: () => (/* binding */ u),
/* harmony export */   pixelBuffer: () => (/* binding */ f),
/* harmony export */   polygonFromExtent: () => (/* binding */ x),
/* harmony export */   tileSize: () => (/* binding */ c)
/* harmony export */ });
/* harmony import */ var _core_BidiText_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/BidiText.js */ "./node_modules/@arcgis/core/core/BidiText.js");
/* harmony import */ var _core_screenUtils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/screenUtils.js */ "./node_modules/@arcgis/core/core/screenUtils.js");
/* harmony import */ var _geometry_Polygon_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../geometry/Polygon.js */ "./node_modules/@arcgis/core/geometry/Polygon.js");
/* harmony import */ var _geometry_support_aaBoundingRect_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../geometry/support/aaBoundingRect.js */ "./node_modules/@arcgis/core/geometry/support/aaBoundingRect.js");
/* harmony import */ var _geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../geometry/support/spatialReferenceUtils.js */ "./node_modules/@arcgis/core/geometry/support/spatialReferenceUtils.js");
/* harmony import */ var _engine_webgl_alignmentUtils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../engine/webgl/alignmentUtils.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/alignmentUtils.js");
/* harmony import */ var _engine_webgl_definitions_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../engine/webgl/definitions.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/definitions.js");
/* harmony import */ var _engine_webgl_mesh_templates_shapingUtils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../engine/webgl/mesh/templates/shapingUtils.js */ "./node_modules/@arcgis/core/views/2d/engine/webgl/mesh/templates/shapingUtils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const c=512,f=50;function g(e,t){const n=(0,_geometry_support_spatialReferenceUtils_js__WEBPACK_IMPORTED_MODULE_4__.getInfo)(t);if(!n)return null;const[o,s]=n.valid;return e[2]>s?[(0,_geometry_support_aaBoundingRect_js__WEBPACK_IMPORTED_MODULE_3__.create)([e[0],e[1],s,e[3]]),(0,_geometry_support_aaBoundingRect_js__WEBPACK_IMPORTED_MODULE_3__.create)([o,e[1],o+e[2]-s,e[3]])]:e[0]<o?[(0,_geometry_support_aaBoundingRect_js__WEBPACK_IMPORTED_MODULE_3__.create)([o,e[1],e[2],e[3]]),(0,_geometry_support_aaBoundingRect_js__WEBPACK_IMPORTED_MODULE_3__.create)([s-(o-e[0]),e[1],s,e[3]])]:null}function u(e){return"text"===e||"esriTS"===e}function p(e){return"simple-marker"===e||"picture-marker"===e||"esriSMS"===e||"esriPMS"===e}function h(e){switch(e.geometry.type){case"point":case"multipoint":return 0;case"polyline":return 1;case"polygon":case"extent":return 2}return 0}function d(n,i,r){if(!r?.glyphMosaicItems?.length)return n;const c=(0,_core_BidiText_js__WEBPACK_IMPORTED_MODULE_0__.bidiText)(i.text)[1],f=r.glyphMosaicItems,g=(0,_engine_webgl_mesh_templates_shapingUtils_js__WEBPACK_IMPORTED_MODULE_7__.shapeGlyphs)(f,c,{scale:(0,_core_screenUtils_js__WEBPACK_IMPORTED_MODULE_1__.pt2px)(i.font.size)/_engine_webgl_definitions_js__WEBPACK_IMPORTED_MODULE_6__.glyphSize,angle:i.angle??0,xOffset:i.xoffset??0,yOffset:i.yoffset??0,hAlign:(0,_engine_webgl_alignmentUtils_js__WEBPACK_IMPORTED_MODULE_5__.getXAnchorDirection)(i.horizontalAlignment||"center"),vAlign:(0,_engine_webgl_alignmentUtils_js__WEBPACK_IMPORTED_MODULE_5__.getYAnchorDirection)(i.verticalAlignment||"baseline"),maxLineWidth:Math.max(32,Math.min(i.lineWidth||512,512)),lineHeight:_engine_webgl_definitions_js__WEBPACK_IMPORTED_MODULE_6__.magicLabelLineHeight*Math.max(.25,Math.min(i.lineHeight||1,4)),decoration:i.font.decoration||"none",isCIM:!1,hasBackground:!!i.backgroundColor,borderLineSize:i.borderLineSize}).bounds;return n[0]=(0,_core_screenUtils_js__WEBPACK_IMPORTED_MODULE_1__.pt2px)(g.x-g.halfWidth),n[1]=(0,_core_screenUtils_js__WEBPACK_IMPORTED_MODULE_1__.pt2px)(g.y-g.halfHeight),n[2]=(0,_core_screenUtils_js__WEBPACK_IMPORTED_MODULE_1__.pt2px)(g.width),n[3]=(0,_core_screenUtils_js__WEBPACK_IMPORTED_MODULE_1__.pt2px)(g.height),n}function x(e){if(!e)return null;const{xmin:t,ymin:i,xmax:r,ymax:o,spatialReference:s}=e;return new _geometry_Polygon_js__WEBPACK_IMPORTED_MODULE_2__["default"]({rings:[[[t,i],[t,o],[r,o],[r,i],[t,i]]],spatialReference:s})}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/layers/support/cimSymbolUtils.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/support/cimSymbolUtils.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   cimLayerToRasterizationInfo: () => (/* binding */ r),
/* harmony export */   expandSymbol: () => (/* binding */ i)
/* harmony export */ });
/* harmony import */ var _symbols_cim_cimAnalyzer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../symbols/cim/cimAnalyzer.js */ "./node_modules/@arcgis/core/symbols/cim/cimAnalyzer.js");
/* harmony import */ var _symbols_cim_ExpandedCIM_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../symbols/cim/ExpandedCIM.js */ "./node_modules/@arcgis/core/symbols/cim/ExpandedCIM.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const a=async(a,i,r)=>{const n=new _symbols_cim_cimAnalyzer_js__WEBPACK_IMPORTED_MODULE_0__.CIMAnalyzer(r,i);return new _symbols_cim_ExpandedCIM_js__WEBPACK_IMPORTED_MODULE_1__.ExpandedCIM(await n.analyzeSymbolReference(a.data,!1),a.data,a.rendererKey,a.maxVVSize)};async function i(e,t,i,r){if(!e)return null;if("cim"===e.type)return a(e,t,i);if("web-style"===e.type){const{fetchCIMSymbolReference:n}=await __webpack_require__.e(/*! import() */ "node_modules_arcgis_core_views_2d_layers_support_webStyleUtils_js").then(__webpack_require__.bind(__webpack_require__, /*! ./webStyleUtils.js */ "./node_modules/@arcgis/core/views/2d/layers/support/webStyleUtils.js")),l={type:"cim",data:await n(e,null,r)??void 0,rendererKey:e.rendererKey,maxVVSize:e.maxVVSize};return a(l,t,i)}return e}function r(e){if(!e)return null;const{avoidSDFRasterization:t,type:a,cim:i,url:r,materialHash:n,maxVVSize:l}=e,m={cim:i,type:a,mosaicHash:n,url:r,size:null,dashTemplate:null,path:null,text:null,fontName:null,animatedSymbolProperties:null,avoidSDFRasterization:t};switch(a){case"marker":l&&"size"in i&&(i.size=Math.max(l,i.size)),m.size=e.size,m.path=e.path,m.animatedSymbolProperties=e.animatedSymbolProperties;break;case"line":m.dashTemplate=e.dashTemplate;break;case"text":m.text=e.text,m.fontName=e.fontName}return m}


/***/ }),

/***/ "./node_modules/@arcgis/core/views/2d/layers/support/util.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@arcgis/core/views/2d/layers/support/util.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   analyzeRings: () => (/* binding */ n),
/* harmony export */   canUseMajorityInterpolationOnDataSource: () => (/* binding */ r),
/* harmony export */   toJSONGeometryType: () => (/* binding */ e)
/* harmony export */ });
/* harmony import */ var _core_jsonMap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/jsonMap.js */ "./node_modules/@arcgis/core/core/jsonMap.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const o=new _core_jsonMap_js__WEBPACK_IMPORTED_MODULE_0__.JSONMap({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryMultiPatch:"multipatch",mesh:"mesh"});function e(t){return o.toJSON(t)}function n(t,o,e){const n=[],r=[];let l=0,i=0;for(const s of t){const t=i;let u=s[0][0],c=s[0][1];n[i++]=u,n[i++]=c;let p=0;for(let o=1;o<s.length;++o){const t=u,e=c;u=s[o][0],c=s[o][1],p+=c*t-u*e,n[i++]=u,n[i++]=c}o(p/2),p>0?(t-l>0&&(e(l,t,n,r),l=t),r.length=0):p<0&&t-l>0?r.push(.5*(t-l)):i=t}i-l>0&&e(l,i,n,r)}function r(t){const{bandCount:o,attributeTable:e,colormap:n,pixelType:r}=t.raster.rasterInfo;return 1===o&&(null!=e||null!=n||"u8"===r||"s8"===r)}


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,