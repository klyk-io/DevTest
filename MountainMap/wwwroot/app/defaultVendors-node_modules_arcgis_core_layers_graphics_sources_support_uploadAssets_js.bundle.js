"use strict";
(self["webpackChunkmm"] = self["webpackChunkmm"] || []).push([["defaultVendors-node_modules_arcgis_core_layers_graphics_sources_support_uploadAssets_js"],{

/***/ "./node_modules/@arcgis/core/layers/graphics/sources/support/uploadAssetErrors.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/sources/support/uploadAssetErrors.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BadResponseError: () => (/* binding */ u),
/* harmony export */   Convert3DFailedError: () => (/* binding */ l),
/* harmony export */   NoGlbSupportError: () => (/* binding */ t),
/* harmony export */   NoSupportedSourceError: () => (/* binding */ a),
/* harmony export */   NotBase64Error: () => (/* binding */ n),
/* harmony export */   UnableToPrepareOptionsError: () => (/* binding */ p),
/* harmony export */   UnsupportedError: () => (/* binding */ r),
/* harmony export */   UnsupportedFormatUploadedError: () => (/* binding */ d),
/* harmony export */   UploadFailedError: () => (/* binding */ c)
/* harmony export */ });
/* harmony import */ var _core_Error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/Error.js */ "./node_modules/@arcgis/core/core/Error.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const e="upload-assets",o=()=>new Error;class r extends _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]{constructor(){super(`${e}:unsupported`,"Layer does not support asset uploads.",o())}}class t extends _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]{constructor(){super(`${e}:no-glb-support`,"Layer does not support glb.",o())}}class a extends _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]{constructor(){super(`${e}:no-supported-source`,"No supported external source found",o())}}class n extends _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]{constructor(){super(`${e}:not-base-64`,"Expected gltf data in base64 format after conversion.",o())}}class p extends _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]{constructor(){super(`${e}:unable-to-prepare-options`,"Unable to prepare uploadAsset request options.",o())}}class u extends _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]{constructor(s,r){super(`${e}:bad-response`,`Bad response. Uploaded ${s} items and received ${r} results.`,o())}}class c extends _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]{constructor(s,r){super(`${e}-layer:upload-failed`,`Failed to upload mesh file ${s}. Error code: ${r?.code??"-1"}. Error message: ${r?.messages??"unknown"}`,o())}}class d extends _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]{constructor(s){super(`${e}-layer:unsupported-format`,`The service allowed us to upload an asset of FormatID ${s}, but it does not list it in its supported formats.`,o())}}class l extends _core_Error_js__WEBPACK_IMPORTED_MODULE_0__["default"]{constructor(){super(`${e}:convert3D-failed`,"convert3D failed.")}}


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/graphics/sources/support/uploadAssets.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/sources/support/uploadAssets.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   uploadAssets: () => (/* binding */ O)
/* harmony export */ });
/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../request.js */ "./node_modules/@arcgis/core/request.js");
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/has.js */ "./node_modules/@arcgis/core/core/has.js");
/* harmony import */ var _core_Logger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/Logger.js */ "./node_modules/@arcgis/core/core/Logger.js");
/* harmony import */ var _core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../core/promiseUtils.js */ "./node_modules/@arcgis/core/core/promiseUtils.js");
/* harmony import */ var _core_time_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../core/time.js */ "./node_modules/@arcgis/core/core/time.js");
/* harmony import */ var _core_urlUtils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../core/urlUtils.js */ "./node_modules/@arcgis/core/core/urlUtils.js");
/* harmony import */ var _core_uuid_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../core/uuid.js */ "./node_modules/@arcgis/core/core/uuid.js");
/* harmony import */ var _geometry_support_meshUtils_External_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../geometry/support/meshUtils/External.js */ "./node_modules/@arcgis/core/geometry/support/meshUtils/External.js");
/* harmony import */ var _uploadAssetErrors_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./uploadAssetErrors.js */ "./node_modules/@arcgis/core/layers/graphics/sources/support/uploadAssetErrors.js");
/* harmony import */ var _uploadProgressWeights_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./uploadProgressWeights.js */ "./node_modules/@arcgis/core/layers/graphics/sources/support/uploadProgressWeights.js");
/* harmony import */ var _uploads_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./uploads.js */ "./node_modules/@arcgis/core/layers/graphics/sources/support/uploads.js");
/* harmony import */ var _support_infoFor3D_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../support/infoFor3D.js */ "./node_modules/@arcgis/core/layers/support/infoFor3D.js");
/* harmony import */ var _support_progressUtils_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../support/progressUtils.js */ "./node_modules/@arcgis/core/support/progressUtils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
async function O(s,e,t){const r=s.length;if(!r)return t?.onProgress?.(1),[];const o=(0,_support_progressUtils_js__WEBPACK_IMPORTED_MODULE_12__.makeProgressManager)(r,t?.onProgress,"uploadAssets");return Promise.all(s.map(((s,r)=>v(s,e,{...t,onProgress:o.makeOnProgress(r)}))))}async function v(s,{layer:e,ongoingUploads:t},r){const o=t.get(s);if(o)return o;if(!Z(e))throw new _uploadAssetErrors_js__WEBPACK_IMPORTED_MODULE_8__.UnsupportedError;if(I(s,e))return r?.onProgress?.(1),s;const n=k(s,e,r);t.set(s,n);try{await n}finally{t.delete(s)}return s}function I(s,e){const{parsedUrl:t}=e;return null!=t&&s.metadata.externalSources.some((s=>(0,_geometry_support_meshUtils_External_js__WEBPACK_IMPORTED_MODULE_7__.externalIsOnService)(s,t)))}async function k(s,e,r){const{metadata:o}=s,{displaySource:n}=o,a=H(n?.source,e),i=!!a,c=o.externalSources.length>0,u=i?B(a,e,r):c?R(s,e,r):C(s,e,r),l=await u;return (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.throwIfAborted)(r),s.addExternalSources([l]),s}async function B(s,e,t){return{source:await G(s,e,t),original:!0}}async function R(s,e,t){const r=_(e),{externalSources:o}=s.metadata,n=q(o,e);if(!n)throw new _uploadAssetErrors_js__WEBPACK_IMPORTED_MODULE_8__.NoSupportedSourceError;const a=(0,_support_progressUtils_js__WEBPACK_IMPORTED_MODULE_12__.makeProgressManager)(_uploadProgressWeights_js__WEBPACK_IMPORTED_MODULE_9__.uploadProgressWeights.uploadConvertibleSource,t?.onProgress,"uploadConvertibleSource"),i=await G(n,e,{onProgress:a.makeOnProgress("uploadEditSource")});s.addExternalSources([{source:i,original:!0}]);const c=n.reduce(((s,{asset:e})=>e instanceof File?s+e.size:s),0),u=a.simulate("serviceAssetsToGlb",(0,_support_progressUtils_js__WEBPACK_IMPORTED_MODULE_12__.estimatedConversionTime)(c));try{return{source:await V(i,e,r)}}finally{u.remove()}}async function C(s,e,t){const r=(0,_support_progressUtils_js__WEBPACK_IMPORTED_MODULE_12__.makeProgressManager)(_uploadProgressWeights_js__WEBPACK_IMPORTED_MODULE_9__.uploadProgressWeights.uploadLocalMesh,t?.onProgress,"uploadLocalMesh"),o=L(s,e,{...t,onProgress:r.makeOnProgress("meshToAssetBlob")});return{source:await J([o],e,{...t,onProgress:r.makeOnProgress("uploadAssetBlobs")}),extent:s.extent.clone(),original:!0}}async function L(s,e,r){const o=_(e),n=await s.load(r),a=await n.toBinaryGLTF({ignoreLocalTransform:!0});(0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.throwIfAborted)(r);const i=await a.buffer();return (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.throwIfAborted)(r),{blob:new Blob([i.data],{type:i.type}),assetName:`${(0,_core_uuid_js__WEBPACK_IMPORTED_MODULE_6__.generateBracedUUID)()}.glb`,assetType:o}}function q(s,e){for(const t of s){const s=H(t.source,e);if(s)return s}return null}function H(s,e){if(!s)return null;const{infoFor3D:{supportedFormats:t,editFormats:r}}=e,o=(0,_geometry_support_meshUtils_External_js__WEBPACK_IMPORTED_MODULE_7__.externalSourceToMultiPart)(s),n=new Array;let a=!1;for(let i=0;i<o.length;++i){const s=$(o[i],t);if(!s)return null;r.includes(s.assetType)&&(a=!0),n.push(s)}return a?n:null}function $(s,e){const t=(0,_geometry_support_meshUtils_External_js__WEBPACK_IMPORTED_MODULE_7__.assetFormatId)(s,e);return t?{asset:s,assetType:t}:null}async function G(s,e,t){return J(s.map((s=>M(s,t))),e,t)}async function J(s,e,r){const o=(0,_support_progressUtils_js__WEBPACK_IMPORTED_MODULE_12__.makeProgressManager)(_uploadProgressWeights_js__WEBPACK_IMPORTED_MODULE_9__.uploadProgressWeights.uploadAssetBlobs,r?.onProgress,"uploadAssetBlobs"),n=await z(s,e,{...r,onProgress:o.makeOnProgress("prepareAssetItems")});(0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.throwIfAborted)(r);const a=n.map((({item:s})=>s)),{uploadResults:i}=await K(a,e,{...r,onProgress:o.makeOnProgress("uploadAssetItems")});return (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.throwIfAborted)(r),s.map(((s,t)=>Q(n[t],i[t],e)))}async function M(s,e){const{asset:r,assetType:o}=s;if(r instanceof File)return{blob:r,assetName:r.name,assetType:o};const n=await r.toBlob(e);return (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.throwIfAborted)(e),{blob:n,assetName:r.assetName,assetType:o}}async function W(s,e,r){const{blob:n,assetType:a,assetName:c}=s;let u=null;try{const s=await (0,_uploads_js__WEBPACK_IMPORTED_MODULE_10__.uploadItem)({data:n,name:c},e.url,r);(0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.throwIfAborted)(r),u={assetType:a,assetUploadId:s.itemID}}catch(l){(0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.throwIfAbortError)(l),ss().warnOnce(`Service ${e.url} does not support the REST Uploads API.`)}if(!u){const s=await (0,_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_5__.parseData)(n);if((0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.throwIfAborted)(r),!s.isBase64)throw new _uploadAssetErrors_js__WEBPACK_IMPORTED_MODULE_8__.NotBase64Error;u={assetType:a,assetData:s.data}}if(!u)throw new _uploadAssetErrors_js__WEBPACK_IMPORTED_MODULE_8__.UnableToPrepareOptionsError;return{item:u,assetName:c}}function z(s,e,r){const o=(0,_support_progressUtils_js__WEBPACK_IMPORTED_MODULE_12__.makeProgressManager)(s.length,r?.onProgress,"prepareAssetItems");return Promise.all(s.map((async(s,n)=>{const a=W(await s,e,{...r,onProgress:o.makeOnProgress(n)});return (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.throwIfAborted)(r),a})))}async function K(e,r,o){const n=(0,_support_progressUtils_js__WEBPACK_IMPORTED_MODULE_12__.simulateProgress)(o?.onProgress);try{const n=await (0,_request_js__WEBPACK_IMPORTED_MODULE_0__["default"])((0,_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_5__.join)(r.parsedUrl.path,"uploadAssets"),{timeout:0,query:{f:"json",assets:JSON.stringify(e)},method:"post",responseType:"json"});if((0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.throwIfAborted)(o),n.data.uploadResults.length!==e.length)throw new _uploadAssetErrors_js__WEBPACK_IMPORTED_MODULE_8__.BadResponseError(e.length,n.data.uploadResults.length);return n.data}finally{n.remove()}}function Q(s,e,t){const{success:r}=e;if(!r){const{error:t}=e;throw new _uploadAssetErrors_js__WEBPACK_IMPORTED_MODULE_8__.UploadFailedError(s.assetName,t)}const{assetHash:o}=e,{assetName:n,item:{assetType:a}}=s,{infoFor3D:{supportedFormats:i}}=t,c=(0,_support_infoFor3D_js__WEBPACK_IMPORTED_MODULE_11__.getFormatIdMimeType)(a,i);if(!c)throw new _uploadAssetErrors_js__WEBPACK_IMPORTED_MODULE_8__.UnsupportedFormatUploadedError(a);return new _geometry_support_meshUtils_External_js__WEBPACK_IMPORTED_MODULE_7__.ServiceAsset(n,c,[new _geometry_support_meshUtils_External_js__WEBPACK_IMPORTED_MODULE_7__.ServiceAssetPart(`${t.parsedUrl.path}/assets/${o}`,o)])}async function V(s,e,t){const r=s.map((({assetName:s,parts:e})=>({assetName:s,assetHash:e[0].partHash}))),o=e.capabilities?.operations.supportsAsyncConvert3D,n={f:"json",assets:JSON.stringify(r),transportType:"esriTransportTypeUrl",targetFormat:t,async:o},i=(0,_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_5__.join)(e.parsedUrl.path,"convert3D");let c;try{c=(await(o?Y:X)(i,{query:n,responseType:"json",timeout:0})).data}catch(l){throw new _uploadAssetErrors_js__WEBPACK_IMPORTED_MODULE_8__.Convert3DFailedError}const{supportedFormats:u}=e.infoFor3D;return c.assets.map((s=>{const e=(0,_support_infoFor3D_js__WEBPACK_IMPORTED_MODULE_11__.getMimeTypeFormatId)(s.contentType,u);if(!e)throw new _uploadAssetErrors_js__WEBPACK_IMPORTED_MODULE_8__.UnsupportedFormatUploadedError(e);return new _geometry_support_meshUtils_External_js__WEBPACK_IMPORTED_MODULE_7__.ServiceAsset(s.assetName,s.contentType,[new _geometry_support_meshUtils_External_js__WEBPACK_IMPORTED_MODULE_7__.ServiceAssetPart(s.assetURL,s.assetHash)])}))}function X(e,t){return (0,_request_js__WEBPACK_IMPORTED_MODULE_0__["default"])(e,t)}async function Y(e,t){const o=(await (0,_request_js__WEBPACK_IMPORTED_MODULE_0__["default"])(e,t)).data.statusUrl;for(;;){const e=(await (0,_request_js__WEBPACK_IMPORTED_MODULE_0__["default"])(o,{query:{f:"json"},responseType:"json"})).data;switch(e.status){case"Completed":return (0,_request_js__WEBPACK_IMPORTED_MODULE_0__["default"])(e.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new Error(e.status);case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new Error}await (0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_3__.after)(es)}}function Z(s){return!!s.infoFor3D&&!!s.url}function _(s){const{infoFor3D:e}=s,t=(0,_support_infoFor3D_js__WEBPACK_IMPORTED_MODULE_11__.getMimeTypeFormatId)("model/gltf-binary",e.supportedFormats)??(0,_support_infoFor3D_js__WEBPACK_IMPORTED_MODULE_11__.getFilenameFormatId)("glb",e.supportedFormats);if(!t)throw new _uploadAssetErrors_js__WEBPACK_IMPORTED_MODULE_8__.NoGlbSupportError;return t}function ss(){return _core_Logger_js__WEBPACK_IMPORTED_MODULE_2__["default"].getLogger("esri.layers.graphics.sources.support.uploadAssets")}const es=(0,_core_time_js__WEBPACK_IMPORTED_MODULE_4__.Milliseconds)(1e3);


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/graphics/sources/support/uploadProgressWeights.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/sources/support/uploadProgressWeights.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   uploadProgressWeights: () => (/* binding */ e)
/* harmony export */ });
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const e={upload:{createFromFiles:.8,loadMesh:.2},uploadAssetBlobs:{prepareAssetItems:.9,uploadAssetItems:.1},uploadConvertibleSource:{uploadEditSource:.5,serviceAssetsToGlb:.5},uploadLocalMesh:{meshToAssetBlob:.5,uploadAssetBlobs:.5}};


/***/ }),

/***/ "./node_modules/@arcgis/core/layers/graphics/sources/support/uploads.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@arcgis/core/layers/graphics/sources/support/uploads.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   uploadItem: () => (/* binding */ c)
/* harmony export */ });
/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../request.js */ "./node_modules/@arcgis/core/request.js");
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/has.js */ "./node_modules/@arcgis/core/core/has.js");
/* harmony import */ var _core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/promiseUtils.js */ "./node_modules/@arcgis/core/core/promiseUtils.js");
/* harmony import */ var _core_urlUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../core/urlUtils.js */ "./node_modules/@arcgis/core/core/urlUtils.js");
/* harmony import */ var _support_arcgisLayerUrl_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../support/arcgisLayerUrl.js */ "./node_modules/@arcgis/core/layers/support/arcgisLayerUrl.js");
/* harmony import */ var _support_base64Utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../support/base64Utils.js */ "./node_modules/@arcgis/core/support/base64Utils.js");
/* harmony import */ var _support_progressUtils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../support/progressUtils.js */ "./node_modules/@arcgis/core/support/progressUtils.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
const i=1e6,p=20*i,l=2e9,m=3;async function c({data:r,name:c,description:u},d,h){let j=null;try{const w=(0,_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_3__.join)(d,"uploads"),y=(0,_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_3__.join)(w,"info"),{data:g}=await (0,_request_js__WEBPACK_IMPORTED_MODULE_0__["default"])(y,{query:{f:"json"},responseType:"json"});(0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_2__.throwIfAborted)(h);const U=(0,_support_arcgisLayerUrl_js__WEBPACK_IMPORTED_MODULE_4__.isHostedAgolService)(d),q=g.maxUploadFileSize*i,z=U?l:q,T=U?Math.min(p,q):p;if(r.size>z)throw new Error("Data too large");const A=(0,_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_3__.join)(w,"register"),{data:E}=await (0,_request_js__WEBPACK_IMPORTED_MODULE_0__["default"])(A,{query:{f:"json",itemName:f(c),description:u},responseType:"json",method:"post"});if((0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_2__.throwIfAborted)(h),!E.success)throw new Error("Registration failed");const{itemID:P}=E.item;j=(0,_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_3__.join)(w,P);const D=(0,_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_3__.join)(j,"uploadPart"),I=Math.ceil(r.size/T),M=new Array;for(let e=0;e<I;++e)M.push(r.slice(e*T,Math.min((e+1)*T,r.size)));const b=M.slice().reverse(),v=new Array,x=(0,_support_progressUtils_js__WEBPACK_IMPORTED_MODULE_6__.makeProgressManager)(I,h?.onProgress,"uploadItem"),F=async()=>{for(;0!==b.length;){const t=M.length-b.length,s=b.pop(),r=new FormData,a=x.simulate(t,(0,_support_progressUtils_js__WEBPACK_IMPORTED_MODULE_6__.estimatedTransferTime)(s.size));try{const a=s;r.append("f","json"),r.append("file",a),r.append("partId",`${t}`);const{data:n}=await (0,_request_js__WEBPACK_IMPORTED_MODULE_0__["default"])(D,{timeout:0,body:r,responseType:"json",method:"post"});if((0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_2__.throwIfAborted)(h),!n.success)throw new Error("Part upload failed")}finally{a.remove()}}};for(let e=0;e<m&&0!==b.length;++e)v.push(F());await Promise.all(v);const _=(0,_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_3__.join)(j,"commit"),{data:C}=await (0,_request_js__WEBPACK_IMPORTED_MODULE_0__["default"])(_,{query:{f:"json",parts:M.map(((e,o)=>o)).join(",")},responseType:"json",method:"post"});if((0,_core_promiseUtils_js__WEBPACK_IMPORTED_MODULE_2__.throwIfAborted)(h),!C.success)throw new Error("Commit failed");return C.item}catch(w){if(null!=j){const o=(0,_core_urlUtils_js__WEBPACK_IMPORTED_MODULE_3__.join)(j,"delete");await (0,_request_js__WEBPACK_IMPORTED_MODULE_0__["default"])(o,{query:{f:"json"},responseType:"json",method:"post"})}throw w}}function f(e){return e.replaceAll("/","_").replaceAll("\\","_")}


/***/ }),

/***/ "./node_modules/@arcgis/core/support/progressUtils.js":
/*!************************************************************!*\
  !*** ./node_modules/@arcgis/core/support/progressUtils.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ProgressManager: () => (/* binding */ n),
/* harmony export */   estimatedConversionTime: () => (/* binding */ m),
/* harmony export */   estimatedTransferTime: () => (/* binding */ h),
/* harmony export */   makeProgressManager: () => (/* binding */ i),
/* harmony export */   simulateProgress: () => (/* binding */ a)
/* harmony export */ });
/* harmony import */ var _core_handleUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/handleUtils.js */ "./node_modules/@arcgis/core/core/handleUtils.js");
/* harmony import */ var _core_has_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/has.js */ "./node_modules/@arcgis/core/core/has.js");
/* harmony import */ var _core_MapUtils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/MapUtils.js */ "./node_modules/@arcgis/core/core/MapUtils.js");
/* harmony import */ var _core_time_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/time.js */ "./node_modules/@arcgis/core/core/time.js");
/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.28/esri/copyright.txt for details.
*/
function i(s,t=(s=>{}),e){return new n(s,t,e)}class n{constructor(s,t=(s=>{}),e){if(this.onProgress=t,this.taskName=e,this._progressMap=new Map,this._startTime=void 0,this._timingsMap=new Map,"number"==typeof s){this._weights={};for(let t=0;t<s;t++){const e=t,r=1/s;this._weights[e]=r,this._progressMap.set(e,0)}}else this._weights=s;this.emitProgress()}emitProgress(){let s=0;for(const[t,e]of this._progressMap.entries()){s+=e*this._weights[t]}if(1===s&&(0,_core_has_js__WEBPACK_IMPORTED_MODULE_1__["default"])("enable-feature:esri-3dofl-upload-timings")){const s=Math.round(performance.now()-(this._startTime??0))/1e3;console.log(`${this.taskName} done in ${s} sec`);for(const[t,e]of this._timingsMap){const r=Math.round(e.end-e.start)/1e3,o=Math.round(r/s*100);console.log(this.taskName??"Task",{stepKey:t,stepTime:r,relativeTime:o})}}this.onProgress(s)}setProgress(s,e){if(this._progressMap.set(s,e),(0,_core_has_js__WEBPACK_IMPORTED_MODULE_1__["default"])("enable-feature:esri-3dofl-upload-timings")){const r=performance.now();this._startTime??=r;const o=(0,_core_MapUtils_js__WEBPACK_IMPORTED_MODULE_2__.getOrCreateMapValue)(this._timingsMap,s,(()=>({start:r,end:0})));1===e&&(o.end=r)}this.emitProgress()}simulate(s,t){return a((t=>this.setProgress(s,t)),t)}makeOnProgress(s){return t=>this.setProgress(s,t)}}function a(t=(s=>{}),e=l){const r=performance.now();t(0);const o=setInterval((()=>{const s=performance.now()-r,o=1-Math.exp(-s/e);t(o)}),g);return (0,_core_handleUtils_js__WEBPACK_IMPORTED_MODULE_0__.makeHandle)((()=>{clearInterval(o),t(1)}))}function h(s,t=c){return (0,_core_time_js__WEBPACK_IMPORTED_MODULE_3__.millisecondsFromSeconds)((0,_core_time_js__WEBPACK_IMPORTED_MODULE_3__.Seconds)(s*f/t))}function m(s,t=p){return (0,_core_time_js__WEBPACK_IMPORTED_MODULE_3__.millisecondsFromSeconds)((0,_core_time_js__WEBPACK_IMPORTED_MODULE_3__.Seconds)(s*f/t))}const c=10,p=10,f=8e-6,g=(0,_core_time_js__WEBPACK_IMPORTED_MODULE_3__.Milliseconds)(50),l=(0,_core_time_js__WEBPACK_IMPORTED_MODULE_3__.Milliseconds)(1e3);


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,